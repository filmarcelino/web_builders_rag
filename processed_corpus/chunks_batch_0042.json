[
  {
    "id": "200dbd8d49391b1c8503d8773297ea74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7141,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "6e36ed4e093a24894105c61372249a9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7141,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "ffa10759d9009b093285d7c04f98c641",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster \" } ]; // initialize buttons button1 onclick = goStore; button2onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7141,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6d0dfc3979210e7282d464a676e8ac02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "In your inventory you have: \" + inventory; } else { text innerText = \"You do not have enough gold to buy a weapon \"; } } else { text innerText = \"You already have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); textinnerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction dodge() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7141,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8edd05e27cc668051686f.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "8a47e8e1af279d7841ec4209c147248f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8ee71f018e968a056d369\ntitle: Step 128\nchallengeType: 0\ndashedName: step-128\n--description--\nAt the end of your code, create the defeatMonster and lose functions Leave them empty for now --hints--\nYou should use the function keyword to declare defeatMonster js\nassert match(code, /function\\s+defeatMonster/);\ndefeatMonster should be an empty function js\nassert match(defeatMonster toString(), /defeatMonster\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);\nYou should use the function keyword to declare lose js\nassert match(code, /function\\s+lose/);\nlose should be an empty function js\nassert match(lose toString(), /lose\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8be498b13d6b632243f0ba2122ab1e0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "107c8592cb31f80ff8a7c7fec4731ef0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "7ae38733283039019212e83c1aee68ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster \" } ]; // initialize buttons button1 onclick = goStore; button2onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "496c3470ca4384e4baafdbfed3c8479d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "In your inventory you have: \" + inventory; } else { text innerText = \"You do not have enough gold to buy a weapon \"; } } else { text innerText = \"You already have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); textinnerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee71f018e968a056d369.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "ec368f5d20c79fb169fdd8c3ca23da0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8ee154c8946678775c4a4\ntitle: Step 127\nchallengeType: 0\ndashedName: step-127\n--description--\nYou can make an else statement conditional by using else if Here's an example:\n```js\nif (num > 10) {\n} else if (num < 5) {\n}\n```\nAt the end of your if statement, add an else if statement to check if monsterHealth is less than or equal to 0 In your else if, call the defeatMonster function --hints--\nYou should have an else if statement js\nassert match(attack toString(), /else\\s+if/);\nYour else if statement should check if monsterHealth is less than or equal to 0 js\nassert match(attack toString(), /else\\s+if\\s*\\(\\s*monsterHealth\\s*<=\\s*0\\s*\\)/);\nYour else if statement should call the defeatMonster function js\nassert match(attack toString(), /else\\s+if\\s*\\(\\s*monsterHealth\\s*<=\\s*0\\s*\\)\\s*(\\{\\s*) defeatMonster(\\s*\\}) /);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "457ba4ba9584c239947dacff2bb1c633",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "04fcd0e4c590aef3b2b207df08d98e5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "fc7320a5c72b874bb52a6934c5a26664",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster \" } ]; // initialize buttons button1 onclick = goStore; button2onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "a06dc92e612e7526cef9ab7f43d155d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "In your inventory you have: \" + inventory; } else { text innerText = \"You do not have enough gold to buy a weapon \"; } } else { text innerText = \"You already have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); textinnerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n}\n}\n--fcc-editable-region--\nfunction dodge() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ee154c8946678775c4a4.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "9188442923d34ec2e446de68db0dfc86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8eec45f77bc69e8775294\ntitle: Step 129\nchallengeType: 0\ndashedName: step-129\n--description--\nInside the dodge function, set text innerText equal to the string \"You dodge the attack from the <monster>\" Replace <monster> with the name of the monster, using the name property --hints--\nYou should assign the string \"You dodge the attack from the \" to the text innerText property Remember that spacing matters js\nassert match(dodge toString(), /text\\ innerText\\s*=\\s*('|\")You dodge the attack from the \\1/);\nYou should use the concatenation operator to add the name of the monster to the end of the string You can get this with monsters[fighting] name js\nassert match(dodge toString(), /text\\ innerText\\s*=\\s*('|\")You dodge the attack from the \\1\\s*\\+\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ name/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7532,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "f4134eb62df20f83edca6fe9e1a02315",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7532,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "ad8683c301d3e29cfc0f8eeadd41c78e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7532,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "214900df2017430242d40d24120621e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster \" } ]; // initialize buttons button1 onclick = goStore; button2onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7532,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "5bee0d660f96fb84f0c0a1e9558869d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "In your inventory you have: \" + inventory; } else { text innerText = \"You do not have enough gold to buy a weapon \"; } } else { text innerText = \"You already have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); textinnerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\n--fcc-editable-region--\nfunction dodge() {\n}\n--fcc-editable-region--\nfunction defeatMonster() {\n}\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7532,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eec45f77bc69e8775294.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3a28ecf2f9afd165ba70c82f4f8cd768",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8ef6a52292f6bdca4f6f8\ntitle: Step 131\nchallengeType: 0\ndashedName: step-131\n--description--\nSet xp to xp plus the monster's level --hints--\nYou should use compound assignment to modify xp js\nassert match(defeatMonster toString(), /xp\\s*\\+=/);\nYou should add the monster's level to xp js\nassert match(defeatMonster toString(), /xp\\s*\\+=\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ec4427262878ec26b1c28293c2ceb6b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = documentquerySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0fd99b81964a77ad267c256657427b41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store\"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "13768b9a7e98fe625e6770f0cbe4381d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "-= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); textinnerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "36abcc79e6f3fa39cd8b83cb9cabe2da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthText innerText = monsterHealth; if (health <= 0) { lose(); } else if (monsterHealth <= 0) { defeatMonster(); } } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting]name;\n}\n--fcc-editable-region--\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\n}\n--fcc-editable-region--\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7243,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef6a52292f6bdca4f6f8.md",
      "source_type": "git_repo"
    },
    "token_count": 165,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "b20eef0582688f822392c1c6ea71e766",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8ef8f0c76a46cd221a68c\ntitle: Step 132\nchallengeType: 0\ndashedName: step-132\n--description--\nNow update goldText and xpText to display the updated values --hints--\nYou should update goldText innerText to the value of gold js\nassert match(defeatMonster toString(), /goldText\\ innerText\\s*=\\s*gold/);\nYou should update xpText innerText to the value of xp js\nassert match(defeatMonster toString(), /xpText\\ innerText\\s*=\\s*xp/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "79b3eeb9965dd2d418b11b493634face",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = documentquerySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "3bb3cfdad1938c00315d0477a6cc2407",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store\"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "da505d2893e517dcfeaebf5960a40caa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "-= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); textinnerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "92bbf27305ca328419e6715b94637f8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthText innerText = monsterHealth; if (health <= 0) { lose(); } else if (monsterHealth <= 0) { defeatMonster(); } } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting]name;\n}\n--fcc-editable-region--\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\n}\n--fcc-editable-region--\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8ef8f0c76a46cd221a68c.md",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "8140e7e3cbf74e7fc5482e9fee17e205",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8eefe2e68b66ac563816b\ntitle: Step 130\nchallengeType: 0\ndashedName: step-130\n--description--\nIn your defeatMonster function, set gold equal to gold plus the monster's level times 6 7 Remember you can get the monster's level by using monsters[fighting] level Here is an example of setting num to num plus 5 * 8: num += 5 * 8 Use Math floor() to round the result down --hints--\nYou should use compound assignment to modify gold js\nassert match(defeatMonster toString(), /gold\\s*\\+=/);\nYou should use Math floor() to round the result of the monster's level times 6 7 js\nassert match(defeatMonster toString(), /(Math\\ floor\\(\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level\\s*\\*\\s*6\\ 7\\s*\\))|(Math\\ floor\\(\\s*6\\ 7\\s*\\*\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level\\s*\\))/);\nYou should add the result of Math floor(monsters[fighting] level * 6 7) to gold js\nassert match(defeatMonster toString(), /gold\\s*\\+=\\s*((Math\\ floor\\(\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level\\s*\\*\\s*6\\ 7\\s*\\))|(Math\\ floor\\(\\s*6\\ 7\\s*\\*\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level\\s*\\)))/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "7e0f62bcf34e39c5e0b2f80c7470d07b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "Math floor(monsters[fighting] level * 6 7) to gold js assert match(defeatMonster toString(), /gold\\s*\\+=\\s*((Math\\ floor\\(\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level\\s*\\*\\s*6\\ 7\\s*\\))|(Math\\ floor\\(\\s*6\\ 7\\s*\\*\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level\\s*\\)))/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "bf459dde6122c6a25b3d26ae4769acb4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = documentquerySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "11ce4cfde73ab760c5a8cd7784649e2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters\"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "14d76a3208034db2629b984b7b3b97ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": ">= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"You do not have enough gold to buy a weapon \"; } } else { text innerText = \"You already have the most powerful weapon \"; button2innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\n--fcc-editable-region--\nfunction defeatMonster() {\n}\n--fcc-editable-region--\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eefe2e68b66ac563816b.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "11bea1f2019eb8f33ae83634e51ba8da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8efb0e3ce826db8daf80f\ntitle: Step 133\nchallengeType: 0\ndashedName: step-133\n--description--\nFinish the defeatMonster function by calling the update function with locations[4] as the argument --hints--\nYou should call the update function js\nassert match(defeatMonster toString(), /update/);\nYou should pass locations[4] as the argument js\nassert match(defeatMonster toString(), /update\\(\\s*locations\\s*\\[\\s*4\\s*\\]\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7375,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "7d49922eea4349760ba80f981f7cf841",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = documentquerySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7375,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2f6357afc49d4ceade5ed9c85b292a87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store\"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7375,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "f9bec0b6cb2a6a9efdd4d2c1d7d0852d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "-= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); textinnerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7375,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "45c8a22f3004dbacd476af7ede9b666b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthText innerText = monsterHealth; if (health <= 0) { lose(); } else if (monsterHealth <= 0) { defeatMonster(); } } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting]name;\n}\n--fcc-editable-region--\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\n}\n--fcc-editable-region--\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7375,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8efb0e3ce826db8daf80f.md",
      "source_type": "git_repo"
    },
    "token_count": 188,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "f7ec3d9cd185c64611b079198ed54c81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8eff21c0b0f6ebe5b8e38\ntitle: Step 134\nchallengeType: 0\ndashedName: step-134\n--description--\nYour locations array doesn't have a fifth element, so locations[4] doesn't work Add a new object at the end of the locations array, following the same structure as the other objects Set name to \"kill monster\", set \"button text\" to an array with three \"Go to town square\" strings, set \"button functions\" to an array with three goTown variables, and set text to \"The monster screams Arg as it dies You gain experience points and find gold \" --hints--\nYour locations array should have five values js\nassert lengthOf(locations, 5);\nYour fifth locations value should be an object js\nassert isObject(locations[4]);\nYour fifth locations value should have a name property with the value \"kill monster\" js\nassert equal(locations[4] name, 'kill monster');\nYour fifth locations value should have a \"button text\" array with three \"Go to town square\" strings js\nassert deepEqual(locations[4][\"button text\"], ['Go to town square', 'Go to town square', 'Go to town square']);\nYour fifth locations value should have a \"button functions\" array with three goTown variables js\nassert deepEqual(locations[4][\"button functions\"], [goTown, goTown, goTown]);\nYour fifth locations value should have a text property with the value \"The monster screams Arg as it dies You gain experience points and find gold \" js\nassert equal(locations[4] text, 'The monster screams Arg as it dies You gain experience points and find gold ');\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "a60dcb4a7a02e1abac154d43666b25f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "js assert equal(locations[4] text, 'The monster screams Arg as it dies You gain experience points and find gold '); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "c087806fb89c56d57af548d760c18121",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\n--fcc-editable-region--\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n}\n];\n--fcc-editable-region--\n// initialize buttons\nbutton1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c99ffaf009ef43fe7c0b6e15e5088abe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster \" } ]; --fcc-editable-region-- // initialize buttons button1onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "f3c43bf82dd84df605639731005b87d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "+ \" \"; inventory push(newWeapon); text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"You do not have enough gold to buy a weapon \"; } } else { text innerText = \"You already have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldTextinnerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8557,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8eff21c0b0f6ebe5b8e38.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "294b58de212801265b15cfa860bdee13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8f06fb318666fef69f91e\ntitle: Step 135\nchallengeType: 0\ndashedName: step-135\n--description--\nThe word \"Arg \" should have quotes around it Besides escaping quotes, there is another way you can include quotation marks inside a string Change the double quotes around the string \"The monster screams Arg as it dies You gain experience points and find gold \" to single quotes ', then add double quotes around \"Arg \" --hints--\nYou should use single quotes around the string js\nassert match(code, /'The monster screams \" Arg \" as it dies You gain experience points and find gold '/);\nYou should use double quotes around \"Arg \" js\nassert equal(locations[4] text, 'The monster screams \"Arg \" as it dies You gain experience points and find gold ');\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "4d6b3d8ae78e02b5160cffb206a1e6aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "37adba477d4481efd67eb601bca2b01e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "395ee587c044e88f15b3a4de3f2733ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n--fcc-editable-region--\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: \"The monster screams Arg as it dies You gain experience points and find gold \"\n}\n--fcc-editable-region--\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "1c727d8d1573036a88a6123959c547ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "-= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); textinnerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "879222ab71768dcb44ea78e6c15bf662",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthText innerText = monsterHealth; if (health <= 0) { lose(); } else if (monsterHealth <= 0) { defeatMonster(); } } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting]name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7981,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f06fb318666fef69f91e.md",
      "source_type": "git_repo"
    },
    "token_count": 181,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "f4aedbd171b07513e36a7d34f4b37e24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8f1d5f5ddbf74c07f733b\ntitle: Step 137\nchallengeType: 0\ndashedName: step-137\n--description--\nIn the lose function, call the update function and pass in the sixth object of your locations array Note that you haven't created this object just yet --hints--\nYou should call the update function inside the lose function js\nassert match(lose toString(), /update\\(/);\nYour update function should have locations[5] for the argument js\nassert match(lose toString(), /update\\(\\s*locations\\s*\\[\\s*5\\s*\\]\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2e0073bfe3e99dbc5116bfdd0223ee50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = documentquerySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "a4ca7e6909afa4d9fd9d8a588a24a640",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "50 }, { name: 'sword', power: 100 } ]; const monsters = [ { name: \"slime\", level: 2, health: 15 }, { name: \"fanged beast\", level: 8, health: 60 }, { name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\"\"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "e15c8523ba84cc3e8d9c8aec05108446",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "text: 'The monster screams \"Arg \" as it dies You gain experience points and find gold ' } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerText = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3e5e29c12fbb2c1099f62e1a148442a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\n--fcc-editable-region--\nfunction lose() {\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f1d5f5ddbf74c07f733b.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "56a3b7bd53ab8bd6c06a0ac1a9624e09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8f14fe6d1fc72454648c7\ntitle: Step 136\nchallengeType: 0\ndashedName: step-136\n--description--\nAfter a monster is defeated, the monster's stat box should no longer display On the first line of the update function, use monsterStats style display to change the display value to none --hints--\nYou should use monsterStats style display in the update function js\nassert match(update toString(), /monsterStats\\ style\\ display/);\nYou should set monsterStats style display to none js\nassert match(update toString(), /monsterStats\\ style\\ display\\s*=\\s*('|\")none\\1/);\nYou should add your code in the first line of the update function js\nassert match(update toString(), /update\\s*\\(\\s*location\\s*\\)\\s*\\{\\s*monsterStats\\ style\\ display\\s*=\\s*('|\")none\\1/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "fdb5a21f54675a9c88cf7ee468166a58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "fda5fcaa222f11db4f8f3522ffc23896",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "abfdc10d2b1101b4fb23da1bd38a250a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\n--fcc-editable-region--\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\n--fcc-editable-region--\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "72436a7aa9b1afcf8f5933ed08e97feb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "-= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); textinnerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "e26559c4d4e8cf7bc853533fd024cb12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthText innerText = monsterHealth; if (health <= 0) { lose(); } else if (monsterHealth <= 0) { defeatMonster(); } } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting]name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f14fe6d1fc72454648c7.md",
      "source_type": "git_repo"
    },
    "token_count": 181,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "2c1d3656c2aad8250994faba690c999c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8f20463b324759953edad\ntitle: Step 138\nchallengeType: 0\ndashedName: step-138\n--description--\nAt the end of your code, create a restart function Inside this function, set xp to 0, health to 100, gold to 50, currentWeaponIndex to 0, and set inventory to an array with the string stick Also update the innerText properties of goldText, healthText, and xpText to their current values Finally, call the goTown() function --hints--\nYou should use the function keyword to declare restart js\nassert match(code, /function\\s+restart/);\nYour restart function should set xp to 0 js\nassert match(restart toString(), /xp\\s*=\\s*0/);\nYour restart function should set health to 100 js\nassert match(restart toString(), /health\\s*=\\s*100/);\nYour restart function should set gold to 50 js\nassert match(restart toString(), /gold\\s*=\\s*50/);\nYour restart function should set currentWeaponIndex to 0 js\nassert match(restart toString(), /currentWeaponIndex\\s*=\\s*0/);\nYour restart function should set inventory to an array with the string \"stick\" js\nassert match(restart toString(), /inventory\\s*=\\s*\\[\\s*('|\")stick\\1\\s*\\]/);\nYour restart function should call the goTown() function js\nassert match(restart toString(), /goTown\\(\\s*\\)/);\nYou should set goldText innerText to the value of gold js\nassert match(restart toString(), /goldText\\ innerText\\s*=\\s*gold/);\nYou should set healthText innerText to the value of health js\nassert match(restart toString(), /healthText\\ innerText\\s*=\\s*health/);\nYou should set xpText innerText to the value of xp js\nassert match(restart toString(), /xpText\\ innerText\\s*=\\s*xp/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9048,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "70df933241b9abc2d37b4307f1a025b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "toString(), /healthText\\ innerText\\s*=\\s*health/); You should set xpText innerText to the value of xp js assert match(restart toString(), /xpText\\ innerText\\s*=\\s*xp/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9048,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "e90ca7c041f1e04a6837997aa1d9b5a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9048,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "20a50f70aebe43d2162f124aa8af2bd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9048,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "28d637428bf1d942c53484c89afd5972",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "-= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); textinnerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9048,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c667ac7dd067e2a465d1f4093911caf7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthText innerText = monsterHealth; if (health <= 0) { lose(); } else if (monsterHealth <= 0) { defeatMonster(); } } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting]name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9048,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f20463b324759953edad.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "25a8e1b6c2710de492d6d3aac7c94901",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8f35bde1750791f58773f\ntitle: Step 142\nchallengeType: 0\ndashedName: step-142\n--description--\nAfter the lose function, create a function called winGame Inside the winGame function, call the update function and pass in locations[6] --hints--\nYou should use the function keyword to declare winGame js\nassert match(code, /function\\s+winGame/);\nYour winGame function should call the update function and pass in locations[6] js\nassert match(winGame toString(), /update\\s*\\(\\s*locations\\s*\\[\\s*6\\s*\\]\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "0748b0825c6d2131d7bfcdf62d99ead8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = documentquerySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "caef27d6c96e75caa43815e1eb838de7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "50 }, { name: 'sword', power: 100 } ]; const monsters = [ { name: \"slime\", level: 2, health: 15 }, { name: \"fanged beast\", level: 8, health: 60 }, { name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\"\"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "6515b72ad15827d31b7c528929ae4020",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"lose\", \"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"], \"button functions\": [restart, restart, restart], text: \"You die ☠\" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; textinnerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "2f31436ec2b901c32dd4370e9b1eee3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\n--fcc-editable-region--\n--fcc-editable-region--\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f35bde1750791f58773f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "f3b3f6013fb61e4b8560971ce0a57cea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a8f256b813a476cae51f49\ntitle: Step 140\nchallengeType: 0\ndashedName: step-140\n--description--\nBack to your attack function - inside the else if block, create another if and else statement If the player is fighting the dragon (fighting would be 2), call the winGame function Move the defeatMonster() call to the else block For this step, you will need to use the strict equality (===) operator to check if fighting is equal to 2 --hints--\nYou should add a new if statement in your else if block js\nconst block = attack toString() split(\"else if\");\nassert include(block[1], \"if\");\nYour new if statement should check if fighting is strictly equal to 2 js\nconst block = attack toString() split(\"else if\");\nassert match(block[1], /if\\s*\\(\\s*fighting\\s*===\\s*2\\s*\\)/);\nYou should call the winGame function in your if block js\nconst block = attack toString() split(\"else if\");\nassert match(block[1], /if\\s*\\(\\s*fighting\\s*===\\s*2\\s*\\)\\s*(\\{\\s*) winGame\\(\\s*\\)(\\s*\\}) /);\nYou should add an else block js\nconst block = attack toString() split(\"else if\");\nassert include(block[1], \"else\");\nYour else block should call the defeatMonster function js\nconst block = attack toString() split(\"else if\");\nassert match(block[1], /else\\s*(\\{\\s*) defeatMonster\\(\\s*\\)(\\s*\\}) /);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "8016cf8799ad434d6b8911bcf19cf67a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "block should call the defeatMonster function js const block = attack toString() split(\"else if\"); assert match(block[1], /else\\s*(\\{\\s*) defeatMonster\\(\\s*\\)(\\s*\\}) /); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "7b4fdadded3404eed9873873cf5bfc0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "8f016daccd1f2fcb55d19daa72e7ec91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "a163d0ceb8bb18d5f229c2261c7bcca4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldTextinnerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "e434e3cdfe2f05b1d9cd95260d888408",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } --fcc-editable-region-- function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthTextinnerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a8f256b813a476cae51f49.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "421d2e1f7c03c74bd57bc26764aadd2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa1d6736ba262cfa74344b\ntitle: Step 145\nchallengeType: 0\ndashedName: step-145\n--description--\nBelow your attack function, create an empty function named getMonsterAttackValue It should take level as a parameter --hints--\nYou should use the function keyword to declare getMonsterAttackValue js\nassert match(code, /function\\s+getMonsterAttackValue/);\nYour getMonsterAttackValue should take level as a parameter js\nassert match(code, /getMonsterAttackValue\\s*\\(\\s*level\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "3e440105d4ae78007a232b171d18c4b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = documentquerySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f8a5810ea6e01c424227a4b0bc0a7068",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store\"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "66bd213f46e25b336b60553e4e72216c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"REPLAY \"], \"button functions\": [restart, restart, restart], text: \"You defeat the dragon YOU WIN THE GAME 🎉\" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3633b5e0b7cd004a63eca9f1953225e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d6736ba262cfa74344b.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "b67c166a2bfff28cc55ceeb72e6855f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62a94114ce0b8918b487390f\ntitle: Step 143\nchallengeType: 0\ndashedName: step-143\n--description--\nAdd another object in the locations array Everything should be the same as the lose object, except the name should be \"win\" and the text should be \"You defeat the dragon YOU WIN THE GAME &#x1F389;\" --hints--\nYou should have seven values in the locations array js\nassert lengthOf(locations, 7);\nYour seventh locations value should be an object js\nassert isObject(locations[6]);\nYour seventh locations value should have a name property with the value \"win\" js\nassert equal(locations[6] name, 'win');\nYour seventh locations value should have a button text array with three \"REPLAY \" strings js\nassert deepEqual(locations[6][\"button text\"], ['REPLAY ', 'REPLAY ', 'REPLAY ']);\nYour seventh locations value should have a button functions array with three restart variables js\nassert deepEqual(locations[6][\"button functions\"], [restart, restart, restart]);\nYour seventh locations value should have a text property with the value \"You defeat the dragon YOU WIN THE GAME &#x1F389;\" js\nassert equal(locations[6] text, 'You defeat the dragon YOU WIN THE GAME &#x1F389;');\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "011fccbd19ea52463f058a6723ed6744",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "dragon YOU WIN THE GAME &#x1F389;\" js assert equal(locations[6] text, 'You defeat the dragon YOU WIN THE GAME &#x1F389;'); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "8fad2c5cc4b3fa15f8d651cd2fe4dd96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "cac1d7b635cde1b84b63889ec655bc8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n--fcc-editable-region--\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n}\n--fcc-editable-region--\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "55fe7364c2fac7d6258180a3aed7ae33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weaponslength - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4e73b66e53c4fe154c95ba6055212560",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Mathrandom() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9020,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62a94114ce0b8918b487390f.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "c31d481ae6b7434c44b41791f8559e49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa1cea594f152ba626b872\ntitle: Step 144\nchallengeType: 0\ndashedName: step-144\n--description--\nWhile your game is feature-complete at this stage, there are things you can do to make it more fun and engaging To get started, you'll give monsters a dynamic attack value Inside your attack function, change your health -= monsters[fighting] level; line to health -= getMonsterAttackValue(monsters[fighting] level); This sets health equal to health minus the return value of the getMonsterAttackValue function, and passes the level of the monster as an argument --hints--\nYou should update your health line to be health -= getMonsterAttackValue(monsters[fighting] level); js\nassert match(attack toString(), /health\\s*-=\\s*getMonsterAttackValue\\(\\s*monsters\\s*\\[\\s*fighting\\s*\\]\\s*\\ level\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "ebb69874ba158807ea51546217952b30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "9c49ed361c073a9a03aa59b6f6523161",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "e2372a00fced8bc3da9312ce4b0dbfa8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "8bddd289d1b9275d00259d9d5980953b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "d794f4a098216fb9a0639680e03d955e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } --fcc-editable-region-- function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8781,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1cea594f152ba626b872.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "102e1f81cfdd8cc64c04fd8c330feb2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa1d9f535e102e4663e7a6\ntitle: Step 146\nchallengeType: 0\ndashedName: step-146\n--description--\nThe attack of the monster will be based on the monster's level and the player's xp In the getMonsterAttackValue function, use const to create a variable called hit Assign it the equation (level * 5) - (Math floor(Math random() * xp)); This will set the monster's attack to five times their level minus a random number between 0 and the player's xp --hints--\nYou should use const to declare the variable hit js\nassert match(code, /const\\s+hit/);\nYou should use the equation (level * 5) - (Math floor(Math random() * xp)) js\nassert match(getMonsterAttackValue, /(level\\s*\\*\\s*5)\\s*-\\s*(Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\))/);\nYou should set hit to the value of (level * 5) - (Math floor(Math random() * xp)) js\nassert match(code, /hit\\s*=\\s*\\(\\s*level\\s*\\*\\s*5\\s*\\)\\s*-\\s*\\(\\s*Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9029,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "d5b5b611154f0efd93819fa9ccbbebf6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "to the value of (level * 5) - (Math floor(Math random() * xp)) js assert match(code, /hit\\s*=\\s*\\(\\s*level\\s*\\*\\s*5\\s*\\)\\s*-\\s*\\(\\s*Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\)/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9029,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "a65fe9ea8dada2bb1d0773ac44efc013",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "#0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = documentquerySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9029,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "81c032cc9c393b582b11ad477103d821",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters\"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9029,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "e72d636867d88041e5b9599f6a87e877",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"REPLAY \"], \"button functions\": [restart, restart, restart], text: \"You defeat the dragon YOU WIN THE GAME 🎉\" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9029,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "f7c1c741face4a51c178c010751b9a4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\n}\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9029,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "cbc762fcb01b5d008ccb3cb751e0e93e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 6 7); xp += monsters[fighting] level; goldText innerText = gold; xpText innerText = xp; update(locations[4]); } function lose() { update(locations[5]); } function winGame() { update(locations[6]); } function restart() { xp = 0; health = 100; gold = 50; currentWeaponIndex = 0; inventory = [\"stick\"]; goldText innerText = gold; healthText innerText = health; xpTextinnerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9029,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1d9f535e102e4663e7a6.md",
      "source_type": "git_repo"
    },
    "token_count": 149,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "8d5bac299cc9bc308064c1ada29d278d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa1e3c7c3d552fb04f0f18\ntitle: Step 147\nchallengeType: 0\ndashedName: step-147\n--description--\nLog the value of hit to the console to use in debugging Remember that you can do this with console log() --hints--\nYou should use the console log() function to log the value of hit js\nassert match(getMonsterAttackValue toString(), /console\\ log\\(\\s*hit\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8459,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "1548cdd730f64de92d640ab0f7381094",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = documentquerySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8459,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "ba777a0c8a72c38b543b3fc873dda749",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store\"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8459,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "df932fad7f82b8d61b8aee4c2c7fac29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"REPLAY \"], \"button functions\": [restart, restart, restart], text: \"You defeat the dragon YOU WIN THE GAME 🎉\" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8459,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d62749a9abd3af35740c71d6ba379c5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\n}\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8459,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "514e160fb72e142520e815849dfb7d22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "lose(); } else if (monsterHealth <= 0) { if (fighting === 2) { winGame(); } else { defeatMonster(); } } } --fcc-editable-region-- function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); } --fcc-editable-region-- function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 6 7); xp += monsters[fighting] level; goldText innerText = gold; xpTextinnerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8459,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e3c7c3d552fb04f0f18.md",
      "source_type": "git_repo"
    },
    "token_count": 227,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "b2dd7800fab84f848845899b882cdb34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa1eec891ed731db227a36\ntitle: Step 149\nchallengeType: 0\ndashedName: step-149\n--description--\nIf you play the game in its current state you might notice a bug If your xp is high enough, the getMonsterAttackValue function will return a negative number, which will actually add to your total health when fighting a monster You can fix this issue by using a ternary operator to ensure negative values are not returned The ternary operator is a conditional operator and can be used as a one-line if-else statement The syntax is: condition expressionIfTrue : expressionIfFalse Here is an example of returning a value using an if-else statement and a refactored example using a ternary operator:\n```js\n// if-else statement\nif (score > 0) {\nreturn score\n} else {\nreturn default_score\n}\n// ternary operator\nreturn score > 0 score : default_score\n```\nIn getMonsterAttackValue, change return hit to a ternary operator that returns hit if hit is greater than 0, or returns 0 if it is not --hints--\nYou should use a ternary to change the return value if hit is greater than 0 js\nassert match(getMonsterAttackValue toString(), /return\\s+hit\\s*>\\s*0/);\nYou should use a ternary to return hit if hit is greater than 0\njs\nassert match(getMonsterAttackValue toString(), /return\\s+hit\\s*>\\s*0\\s*\\ \\s*hit/);\nYou should use a ternary to return 0 if hit is not greater than 0 js\nassert match(getMonsterAttackValue toString(), /return\\s+hit\\s*>\\s*0\\s*\\ \\s*hit\\s*:\\s*0/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "d9d12f23d7fd79e8d9f5efb91f452a65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "use a ternary to return 0 if hit is not greater than 0 js assert match(getMonsterAttackValue toString(), /return\\s+hit\\s*>\\s*0\\s*\\ \\s*hit\\s*:\\s*0/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "b63a435e1ab842511b38fd8267e7bd2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "28a10f764cf8e0473714415310113944",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "58cec6d32a818959dbbf4d7f31badc1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "56e2f98386ac8539f9255adf3dda7ec6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "fightSlime() { fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit;\n}\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9666,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1eec891ed731db227a36.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "7090ce3adb0c153e4fbd57712cc60db4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa1e8ccd579330e097ce44\ntitle: Step 148\nchallengeType: 0\ndashedName: step-148\n--description--\nIn the previous project, you learned how to work with the return keyword to return a value from a function like this:\njs\nfunction add(num1, num2) {\nreturn num1 + num2;\n}\nUse the return keyword to return the value of hit at the end of the function --hints--\nYou should use the return keyword to return the value of hit js\nassert match(getMonsterAttackValue, /return\\s+hit/);\nYour function should return the expected value js\nxp = 0;\nassert equal(getMonsterAttackValue(1), 5);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "f4c514432dff8335e7fc60f60586db67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "16225b3895f333cfdb72466161d6e9ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "d915e47f514869399884210f6102eeff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d50055595e594a1a87c17801bb88d452",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "50670fdb86b12c2e68376df84fd72d10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "fightSlime() { fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\n}\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa1e8ccd579330e097ce44.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "7373596e4f77432eee35578f3915402c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa204c1e1d33348ff09944\ntitle: Step 150\nchallengeType: 0\ndashedName: step-150\n--description--\nIn your attack function, find the line of code that updates the monsterHealth variable and place it within an if block with a condition that calls the isMonsterHit function --hints--\nYou should add an if statement js\nassert lengthOf(attack toString() match(/if/g), 4)\nYour if statement should call isMonsterHit in the condition js\nassert match(attack toString(), /if\\s*\\(\\s*isMonsterHit\\s*\\(\\s*\\)/)\nYou should place your monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1 into your if block js\nassert match(attack toString(), /if\\s*\\(\\s*isMonsterHit\\s*\\(\\s*\\)\\s*\\)\\s*\\{\\s*monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\ power\\s*\\+\\s*Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\+\\s*1/)\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "40941e5bf5af800369d5c54341640e7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "80a2f6bca181f3f3165e17c98a5ce409",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "943a178c828ff41895d228e827e269a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "a52aa6d91b3b77958813f7afa4c22051",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "8269bc0ee29a69da6473942883a1cd2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } --fcc-editable-region-- function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa204c1e1d33348ff09944.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "719cdf6430b6e566eca92449723aef49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa2136fc49b836dfedb959\ntitle: Step 152\nchallengeType: 0\ndashedName: step-152\n--description--\nNow create the isMonsterHit function This will return a boolean value (true or false) to be used in your if statement Return the result of the comparison Math random() > 2 --hints--\nYou should use the function keyword to declare isMonsterHit js\nassert match(code, /function\\s+isMonsterHit/);\nYour isMonsterHit function should return the result of the comparison Math random() > 2 js\nassert match(isMonsterHit toString(), /return\\s+Math\\ random\\(\\s*\\)\\s*>\\s*0 \\ 2/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8825,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "6419f756344371dc150a839364d8c5ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8825,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "5d333aca320fc899a15976bbb7729d29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8825,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "550cf375ff81408cfb52a66788c1fcec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8825,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "b6dcf4dcde9332d8abf9f5345c0ca6ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8825,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c2373e04d571a027cb4dd59877f8bc37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "fightSlime() { fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8825,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2136fc49b836dfedb959.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "16ad27215b995730b7dca455f3bf93c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa20e9cf1be9358f5aceae\ntitle: Step 151\nchallengeType: 0\ndashedName: step-151\n--description--\nAdd an else statement to the first if statement inside your attack() function In the else statement, use the += operator to add the text \" You miss \" to the end of text innerText --hints--\nYou should add an else block after your if (isMonsterHit()) block js\nassert match(attack toString(), /if\\s*\\(\\s*isMonsterHit\\(\\s*\\)\\s*\\)\\s*\\{\\s*monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\ power\\s*\\+\\s*Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\+\\s*1\\s*; \\s*\\}\\s*else/)\nYou should add the text \" You miss \" to the end of text innerText Remember to use compound assignment and make sure there is a space before the word You js\nassert match(attack toString(), /if\\s*\\(\\s*isMonsterHit\\(\\s*\\)\\s*\\)\\s*\\{\\s*monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\ power\\s*\\+\\s*Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\+\\s*1\\s*; \\s*\\}\\s*else\\s*\\{\\s*text\\ innerText\\s*\\+=\\s*('|\")\\sYou miss\\ \\1/)\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "cbc084670900ce6fa3b9b837f651c629",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "is a space before the word You js assert match(attack toString(), /if\\s*\\(\\s*isMonsterHit\\(\\s*\\)\\s*\\)\\s*\\{\\s*monsterHealth\\s*-=\\s*weapons\\s*\\[\\s*currentWeaponIndex\\s*\\]\\s*\\ power\\s*\\+\\s*Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*xp\\s*\\)\\s*\\+\\s*1\\s*; \\s*\\}\\s*else\\s*\\{\\s*text\\ innerText\\s*\\+=\\s*('|\")\\sYou miss\\ \\1/) --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "39e02c4233c141999409061aedb6719b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = documentquerySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "6910348bddc9d8e6d1edb0d2b967b039",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store\"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "f884182445e3e99e25b673d1a4133c7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"REPLAY \"], \"button functions\": [restart, restart, restart], text: \"You defeat the dragon YOU WIN THE GAME 🎉\" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "406d271b22ef936778153c163642e2ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "377c0076698bb4c1ec51757b4276eb3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "if (fighting === 2) { winGame(); } else { defeatMonster(); } } } --fcc-editable-region-- function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 6 7); xp += monsters[fighting] level; goldText innerText = gold; xpTextinnerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa20e9cf1be9358f5aceae.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "05b25a3c084f0863f3c0ce794fab6206",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa21971e3b743844849985\ntitle: Step 153\nchallengeType: 0\ndashedName: step-153\n--description--\nThe player should hit if either Math random() > 2 or if the player's health is less than 20 At the end of your return statement, use the logical OR operator || and check if health is less than 20 The logical OR operator will use the first value if it is truthy – that is, anything apart from NaN, null, undefined, 0, -0, 0n, \"\", and false Otherwise, it will use the second value For example: num < 10 || num > 20 --hints--\nYour isMonsterHit function should use the logical OR operator js\nassert match(isMonsterHit toString(), /\\|\\|/);\nYour logical OR operator should use health < 20 as the fallback value js\nassert match(isMonsterHit toString(), /\\|\\|\\s*health\\s*<\\s*20/);\nYour function should return the result of the comparison Math random() > 2 or health < 20 js\nassert match(isMonsterHit toString(), /return\\s+Math\\ random\\(\\s*\\)\\s*>\\s*0 \\ 2\\s*\\|\\|\\s*health\\s*<\\s*20/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9338,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "3cc07864ad5f636211d33da686bf857e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "of the comparison Math random() > 2 or health < 20 js assert match(isMonsterHit toString(), /return\\s+Math\\ random\\(\\s*\\)\\s*>\\s*0 \\ 2\\s*\\|\\|\\s*health\\s*<\\s*20/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9338,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "ba8e47635c187ae7938042e23cde3ec9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9338,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "1b103185e756d5311cf804f66ad47f42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9338,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "98cc0702b0717b765371b83856fd09c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9338,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "0ff20ec0b09708146a2edba1f12d4f47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "fightSlime() { fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\n--fcc-editable-region--\nfunction isMonsterHit() {\nreturn Math random() > 2;\n}\n--fcc-editable-region--\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9338,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21971e3b743844849985.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "c4662e5db248ba235f230a96b6eb512f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa21ea8d9d9f396b95dd87\ntitle: Step 154\nchallengeType: 0\ndashedName: step-154\n--description--\nOn every attack, there should be a chance that the player's weapon breaks At the end of the attack function, add an empty if statement with the condition Math random() <= 1 --hints--\nYou should add an if statement to your attack function js\nconst ifs = attack toString() match(/if/g);\nassert lengthOf(ifs, 5);\nYour new if statement should check Math random() <= 1 js\nassert match(attack toString(), /if\\s*\\(\\s*Math\\ random\\(\\s*\\)\\s*<=\\s*0 \\ 1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "7a4fc71e5be55a2095972ccbeb904736",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "2524f22274432aac8f874dd7f924ad4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "dd0a571b1f088033123e389c3127df68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "3c27ad60848a9d5b6a98d3928118761e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "05c8318a906d4ee1b24f74e84701aea2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } --fcc-editable-region-- function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8870,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa21ea8d9d9f396b95dd87.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "70121920ab5659af18cc03ece4bc213a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa22aba186563bcbf2c395\ntitle: Step 156\nchallengeType: 0\ndashedName: step-156\n--description--\nRemember that the increment operator ++ can be used to increase a variable's value by 1 There is also a decrement operator -- that can be used to decrease a variable's value by 1 For example :\njs\nlet num = 10;\nnum--;\nconsole log(num); // Output: 9\nDecrement the value of currentWeaponIndex in your if statement, after you update the text --hints--\nYou should use the decrement operator js\nassert match(attack toString(), /--/);\nYou should decrement currentWeaponIndex in your if statement js\nassert match(attack toString(), /(currentWeaponIndex\\s*--\\s*; \\s*}\\s*})$/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "629b7c3f018d153e8e8c15394b3048d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "d461365742619958962729f7a7cb6517",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "6b4254ba407c9a68f1ee3fd94a289411",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "156cf6df7f2662e875b409b78bdea712",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "d095fd08c89488b901b722b7326e9c98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } --fcc-editable-region-- function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa22aba186563bcbf2c395.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "044466116362f820c0186384377e3274",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa226207f33d3ad4c6f546\ntitle: Step 155\nchallengeType: 0\ndashedName: step-155\n--description--\nUse the += operator to add \" Your <weapon> breaks \", with a space in front of Your, to the end of text innerText Replace <weapon> with the last item in the inventory array using inventory pop(), which will remove the last item in the array AND return it so it appears in your string --hints--\nYou should use the compound assignment operator to modify text innerText js\nconst concat = attack toString() match(/\\+=/g);\nassert lengthOf(concat, 3);\nYou should use the pop method on the inventory array js\nassert match(attack toString(), /inventory\\ pop\\(\\s*\\)/);\nYou should add \" Your \", with a space before and after it, to text innerText js\nassert match(attack toString(), /text\\ innerText\\s*\\+=\\s*('|\")\\sYour\\s\\1/);\nYou should add the return value of inventory pop() to the \" Your \" string js\nassert match(attack toString(), /text\\ innerText\\s*\\+=\\s*('|\")\\sYour\\s\\1\\s*\\+\\s*inventory\\ pop\\(\\s*\\)/);\nYou should add \" breaks \", with a space in front of it, to the end of your string js\nassert match(attack toString(), /text\\ innerText\\s*\\+=\\s*('|\")\\sYour\\s\\1\\s*\\+\\s*inventory\\ pop\\(\\s*\\)\\s*\\+\\s*('|\")\\sbreaks\\ \\2/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "5749c4fa5332a8853d75510338d04350",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "space in front of it, to the end of your string js assert match(attack toString(), /text\\ innerText\\s*\\+=\\s*('|\")\\sYour\\s\\1\\s*\\+\\s*inventory\\ pop\\(\\s*\\)\\s*\\+\\s*('|\")\\sbreaks\\ \\2/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "a1456750d65b97a7a743772fbdb5176b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "#ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = documentquerySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "bf8c1365247d03ea81bed6a463597202",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d0e303871027663f8e5358c0d63f18da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "7bf3819b18b24b93c6addaefff17f1c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } --fcc-editable-region-- function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1) {\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa226207f33d3ad4c6f546.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "a76f8be451eabb515e8aba0acb7802a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa2469c77b363fdb4f0e06\ntitle: Step 158\nchallengeType: 0\ndashedName: step-158\n--description--\nNow you can add a small easter egg (hidden feature) to your game Create a new function called easterEgg which calls the update function with locations[7] as the argument --hints--\nYou should use the function keyword to declare easterEgg js\nassert match(code, /function\\s+easterEgg\\s*/);\neasterEgg should call the update function js\nassert match(easterEgg toString(), /update\\(/);\neasterEgg should call the update function with locations[7] as the argument js\nassert match(easterEgg toString(), /update\\(\\s*locations\\s*\\[\\s*7\\s*\\]\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9121,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "db0f0dcb9c9d4c3638a5099bd31e703a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9121,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "c8df9828771684b6b82f9d2e36f7d2c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9121,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "e734b3c6e5fc4eb4298c4d0718e1f0e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9121,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "970292d6f6b68c9a2abff504513759b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9121,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "a1f87faae0e79e5100a37fb85ffcb256",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "fightSlime() { fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9121,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2469c77b363fdb4f0e06.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "15188d0cbe9129e3384398471d066e08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa234322d4ad3e8bce42cc\ntitle: Step 157\nchallengeType: 0\ndashedName: step-157\n--description--\nWe don't want a player's only weapon to break The logical AND operator checks if two statements are true Use the logical AND operator && to add a second condition to your if statement The player's weapon should only break if inventory length does not equal ( ==) one Here is an example of an if statement with two conditions:\n```js\nif (firstName === \"Quincy\" && lastName === \"Larson\") {\n}\n```\n--hints--\nYou should not modify the existing condition in your if statement js\nassert match(attack toString(), /if\\s*\\(\\s*Math\\ random\\(\\s*\\)\\s*\\<=\\s*\\ 1/);\nYou should use the logical AND operator && js\nassert match(attack toString(), /if\\s*\\(\\s*Math\\ random\\(\\s*\\)\\s*\\<=\\s*\\ 1\\s*&&/);\nYou should use the logical AND operator to check if inventory length does not equal 1 js\nassert match(attack toString(), /if\\s*\\(\\s*Math\\ random\\(\\s*\\)\\s*\\<=\\s*\\ 1\\s*&&\\s*inventory\\ length\\s*\\ \\=\\=\\s*1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9458,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "25132f9a83c9b8e5fcc9ffeeed94273f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "operator to check if inventory length does not equal 1 js assert match(attack toString(), /if\\s*\\(\\s*Math\\ random\\(\\s*\\)\\s*\\<=\\s*\\ 1\\s*&&\\s*inventory\\ length\\s*\\ \\=\\=\\s*1\\s*\\)/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9458,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "04fce8beed5e9a737a43db2598ff5157",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9458,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "6708e5f9ef025b2f699d31905edf5b2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9458,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5a7fbdcae17532658801709763ee31c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\n--fcc-editable-region--\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9458,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "e098fa64e62e96ca29d657c3371523ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } --fcc-editable-region-- function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\n--fcc-editable-region--\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9458,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa234322d4ad3e8bce42cc.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "0fa0594497838b648fa2696c7a5e42f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa252c3b1073415ba2b898\ntitle: Step 159\nchallengeType: 0\ndashedName: step-159\n--description--\nCreate an empty pick function with a parameter named guess --hints--\nYou should use the function keyword to declare pick js\nassert match(code, /function\\s+pick\\s*/);\npick should take a parameter named guess js\nassert match(pick toString(), /pick\\s*\\(\\s*guess\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "2316f8ff076774d4a7f7da28208f0148",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = documentquerySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "85e69a1b46a506a51399785a809de709",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "{ name: \"dragon\", level: 20, health: 300 } ] const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store\"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "2d430f522ad57d7e3f2f02f5ebc59739",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"REPLAY \"], \"button functions\": [restart, restart, restart], text: \"You defeat the dragon YOU WIN THE GAME 🎉\" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "f2a5bb7d31c70596220f0f8a9ce4cff5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "b27e854040cbc37543207bce5e570b64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa252c3b1073415ba2b898.md",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "8ca6fd462f62174f42954d4cff15e235",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa258da314ef42ba0a1858\ntitle: Step 160\nchallengeType: 0\ndashedName: step-160\n--description--\nCreate two new functions named pickTwo and pickEight Inside each of those, call the pick() function and pass either 2 or 8 as the argument depending on the function name --hints--\nYou should use the function keyword to declare pickTwo js\nassert match(code, /function\\s+pickTwo\\s*/);\nYou should use the function keyword to declare pickEight js\nassert match(code, /function\\s+pickEight\\s*/);\npickTwo should call the pick function js\nassert match(pickTwo toString(), /pick\\(/);\npickTwo should call the pick function with 2 as the argument js\nassert match(pickTwo toString(), /pick\\(\\s*2\\s*\\)/);\npickEight should call the pick function js\nassert match(pickEight toString(), /pick\\(/);\npickEight should call the pick function with 8 as the argument js\nassert match(pickEight toString(), /pick\\(\\s*8\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "438c36e1c1f762176c61fdb4dcf9b619",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "4c876bcdb295b21bd6e3487ddf934f7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "00fbab893a410e2ffe28f7d919f87073",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "424f6c998739865a49df311d1c9ea6a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health\";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "75805bc70d6607f8939cd4e81c7a9c55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "fightSlime() { fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \"\";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "b91baee91782ca4998977346ada41c3a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 6 7); xp += monsters[fighting] level; goldText innerText = gold; xpText innerText = xp; update(locations[4]); } function lose() { update(locations[5]); } function winGame() { update(locations[6]); } function restart() { xp = 0; health = 100; gold = 50; currentWeaponIndex = 0; inventory = [\"stick\"]; goldText innerText = gold; healthText innerText = health; xpTextinnerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\n--fcc-editable-region--\n--fcc-editable-region--\nfunction pick(guess) {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa258da314ef42ba0a1858.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "cf79f273f8fe79ef9f8721845ebf3d92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa25fcb5837d43b4d9873d\ntitle: Step 161\nchallengeType: 0\ndashedName: step-161\n--description--\nAdd another object to your locations array Set name to \"easter egg\", set \"button text\" to an array with the strings \"2\", \"8\", and \"Go to town square \", set \"button functions\" to an array with the variables pickTwo, pickEight, and goTown, and text to \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \" --hints--\nYour locations array should have 8 values js\nassert lengthOf(locations, 8);\nYour eighth locations value should be an object js\nassert isObject(locations[7]);\nYour eighth locations value should have a name property with the value \"easter egg\" js\nassert equal(locations[7] name, \"easter egg\");\nYour eighth locations value should have a \"button text\" array with the strings \"2\", \"8\", and \"Go to town square \" js\nassert deepEqual(locations[7][\"button text\"], [\"2\", \"8\", \"Go to town square \"]);\nYour eighth locations value should have a \"button functions\" an array with the variables pickTwo, pickEight, and goTown js\nassert deepEqual(locations[7][\"button functions\"], [pickTwo, pickEight, goTown]);\nYour eighth locations value should have a text property with the value \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \" js\nassert equal(locations[7] text, \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \");\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "c258a90270b1092ef73df85726be0716",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "b829f950cece2115c0b554a76e91c1b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "70719791b55ba84e549dbaf751a07ccb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n--fcc-editable-region--\n--fcc-editable-region--\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "f3c81da52f51ec97db0fde65ebbec22d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { textinnerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "b6c35115fc1adbc0121ed1c2387f06b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "else { text innerText = \"Don't sell your only weapon \"; } } function fightSlime() { fighting = 0; goFight(); } function fightBeast() { fighting = 1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; textinnerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "25242f0b2fa1236831277785032be776",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 6 7); xp += monsters[fighting] level; goldText innerText = gold; xpText innerText = xp; update(locations[4]); } function lose() { update(locations[5]); } function winGame() { update(locations[6]); } function restart() { xp = 0; health = 100; gold = 50; currentWeaponIndex = 0; inventory = [\"stick\"]; goldText innerText = gold; healthText innerText = health; xpTextinnerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\nfunction pick(guess) {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa25fcb5837d43b4d9873d.md",
      "source_type": "git_repo"
    },
    "token_count": 188,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "3c99a0cbb67b4c558d6631f3716e11c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa2626c3c10244b94c787b\ntitle: Step 162\nchallengeType: 0\ndashedName: step-162\n--description--\nInside pick, use const to initialize a variable named numbers and set it to an empty array --hints--\nYour pick function should initialize numbers to an empty array [] js\nassert match(pick toString(), /numbers\\s*=\\s*\\[\\s*\\]/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "b9c2b39e77bfe30a563079a772ef0d61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = documentquerySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "c4afd5aa1ba81887eb456beb42262f7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters\"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "47b019eb3fedc4bec4f30ee97cb9d972",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "df883cd272d7e3f7d3e0b41c755f9c94",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeapon] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeapon] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "bec23e12b98f174b77a7777902965edf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "+ \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 6 7); xp += monsters[fighting]level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2626c3c10244b94c787b.md",
      "source_type": "git_repo"
    },
    "token_count": 277,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "2e01f3bb7ae276cd49a3cecd3f2fc066",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa264d23cdaa45a20efada\ntitle: Step 163\nchallengeType: 0\ndashedName: step-163\n--description--\nAfter your numbers array, create a while loop that runs as long as numbers length is less than 10 In the previous project, you learned how to work with while loops like this:\njs\nwhile (condition) {\n// code to run\n}\n--hints--\nYour pick function should have a while loop js\nassert match(pick toString(), /while\\s*\\(/);\nYour while loop should run while numbers length < 10 js\nassert match(pick toString(), /while\\s*\\(\\s*numbers\\ length\\s*<\\s*10\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "c350bc368620820ff7c24005f2c6b7dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "7dee2674134acda62b4a10378fa49370",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "0286537769eba340cc4c7e8048b243b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "105176067cbd788283aa6195bf3115b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "16ea04eeae5991d3d94d689763b31329",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "f3b43eabee9b0410c81d5f8e1316ec52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9521,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa264d23cdaa45a20efada.md",
      "source_type": "git_repo"
    },
    "token_count": 284,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c77eb25dae0b2ab74d37ed0bbccfff1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa26cca3cd3d46c431e73b\ntitle: Step 164\nchallengeType: 0\ndashedName: step-164\n--description--\nInside your while loop, push a random number between 0 and 10 to the end of the numbers array You can create this random number with Math floor(Math random() * 11) --hints--\nYou should use the push method to add a random number to the end of the numbers array js\nassert match(pick toString(), /numbers\\ push\\(/);\nYou should use Math floor(Math random() * 11) to create the random number js\nassert match(pick toString(), /Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*11\\s*\\)/);\nYou should push the result of Math floor(Math random() * 11) to the end of the numbers array js\nassert match(pick toString(), /numbers\\ push\\(\\s*Math\\ floor\\(\\s*Math\\ random\\(\\s*\\)\\s*\\*\\s*11\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "5f7065e44b652f8c2da4a8e7d1cd0ea6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "46f642ae2b3c9a54ae96992d25194fd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "39a97e4f8a05e7f56506c7764b1035f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "9956f11bfb74b83db7d271d04a5b8ba4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "946fc8978e28b86fc41f87a094377a76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "57e7b4e2f9a2f4b07199fe3121a841db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\n}\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9788,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa26cca3cd3d46c431e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "960749f02b696e64c48704d8c1ef38de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa27227399d647e1c37a3c\ntitle: Step 165\nchallengeType: 0\ndashedName: step-165\n--description--\nAfter the while loop, set text innerText to equal \"You picked <someGuess> Here are the random numbers:\" Replace <someGuess> with the guess function parameter --hints--\nYou should set text innerText to the string \"You picked \" Remember that spacing matters js\nassert match(pick toString(), /text\\ innerText\\s*=\\s*('|\")You picked \\1/);\nYou should use the concatenation operator to add the value of the guess parameter to your \"You picked \" string js\nassert match(pick toString(), /text\\ innerText\\s*=\\s*('|\")You picked \\1\\s*\\+\\s*guess/);\nYou should use the concatenation operator to add the string \" Here are the random numbers:\" to your \"You picked \" + guess string js\nassert match(pick toString(), /text\\ innerText\\s*=\\s*('|\")You picked \\1\\s*\\+\\s*guess\\s*\\+\\s*('|\")\\ \\sHere are the random numbers:\\2/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "6aaa72219d27a1552aa106981caca14c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "458b66790f5ad1228b4fc0fd530786ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "dcb8938a571ce5f84067f7dbb3d269ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "54ecd4269fc9f59eef5ae57ef7c9b778",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "519e7ef2129f38f19954e5c4a6807936",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "a425464a8d29166c8b9bba79264a0288",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9965,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27227399d647e1c37a3c.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "08cb4f437ef0f9520d32c744b62dda32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa27c40ca6f04ab8be5fac\ntitle: Step 167\nchallengeType: 0\ndashedName: step-167\n--description--\nIn the previous project, you learned how to work with for loops like this:\njs\nfor (let i = 0; i < 5; i++) {\n// code to run\n}\nfor loops are declared with three expressions separated by semicolons: for (a; b; c), where a is the initialization expression, b is the condition, and c is the final expression In this step, create a for loop where i is initialized to 0, the loop runs as long as i is less than 10, and i is incremented by 1 after each iteration using the increment operator ++ --hints--\nYour for loop initialization should have i initialized to 0 js\nassert match(pick toString(), /for\\s*\\(\\s*(let|var)\\s+i\\s*=\\s*0\\s*;/)\nYour loop condition should run as long as i is less than 10 js\nassert match(pick toString(), /for\\s*\\(\\s*(let|var)\\s+i\\s*=\\s*0\\s*;\\s*i\\s*<\\s*10\\s*;/)\nYour loop should increment i by 1 after each iteration Remember to use the increment operator ++ js\nassert match(pick toString(), /for\\s*\\(\\s*(let|var)\\s+i\\s*=\\s*0\\s*;\\s*i\\s*<\\s*10\\s*;\\s*i\\+\\+\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "d23014450560b30bea5d5a08a6686add",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "increment i by 1 after each iteration Remember to use the increment operator ++ js assert match(pick toString(), /for\\s*\\(\\s*(let|var)\\s+i\\s*=\\s*0\\s*;\\s*i\\s*<\\s*10\\s*;\\s*i\\+\\+\\s*\\)/) --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "6eaad511de8109cdad31ee4b0d2280a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "f44932eb019262682d4e4a8a35d91a51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "c49eea06ef6d205bc4d278528f6d0588",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "a8f444b80007a1934c67eb84b1396873",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "0191ce727e574c15a74edc90f9b9a27d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27c40ca6f04ab8be5fac.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "456efa12cce4f11e5b46726d7ee47836",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa28fb651bf14efa2dbb16\ntitle: Step 168\nchallengeType: 0\ndashedName: step-168\n--description--\nNow you can write the logic to run in the loop Inside your for loop, use the += operator to add to the end of text innerText Add the number at index i of the numbers array, using numbers[i] Then add a new line, using the escape sequence you used earlier --hints--\nYou should use compound assignment to add to the end of text innerText js\nassert match(pick toString(), /text\\ innerText\\s*\\+=/);\nYou should use bracket notation to access numbers[i] js\nassert match(pick toString(), /numbers\\s*\\[\\s*i\\s*\\]/);\nYou should add numbers[i] to your text innerText value js\nassert match(pick toString(), /text\\ innerText\\s*\\+=\\s*numbers\\s*\\[\\s*i\\s*\\]/);\nYou should add a new-line character after the numbers[i] value Remember that you can do this with \\n js\nassert match(pick toString(), /text\\ innerText\\s*\\+=\\s*numbers\\s*\\[\\s*i\\s*\\]\\s*\\+\\s*('|\")\\\\n\\1/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "c64577124f434e449360c664d7371169",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "character after the numbers[i] value Remember that you can do this with \\n js assert match(pick toString(), /text\\ innerText\\s*\\+=\\s*numbers\\s*\\[\\s*i\\s*\\]\\s*\\+\\s*('|\")\\\\n\\1/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "e6ea110d2cfb051a8297461887b86237",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "1ca19d88f1c52a3cc4ec0f161d3746fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "afc465a76182cd46bb396468e3ad806f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "f70da69189f674bf4f5672fc617e23ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "76f2abfd03d0d57523d29d1f5e90c979",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\nfor (let i = 0; i < 10; i++) {\n}\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa28fb651bf14efa2dbb16.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "be89fa04516091435b2d7795b704586d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa27560def7048d7b4a095\ntitle: Step 166\nchallengeType: 0\ndashedName: step-166\n--description--\nAt the end of the string, before the final quote, insert the new line escape character \\n This will cause the next part you add to text innerText to appear on a new line --hints--\nYou should add the new line escape character \\n to your \" Here are the random numbers:\" string js\nassert match(pick toString(), /text\\ innerText\\s*=\\s*('|\")You picked \\1\\s*\\+\\s*guess\\s*\\+\\s*('|\")\\ \\sHere are the random numbers:\\\\n\\2/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "1dc1701da09056cd0a64fdb39137d998",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "fb9161a9f6a7fef45c88331637a42c29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "bf7dfc1109046f5bce664233bb2a5782",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "116b04814c2ddf70080d1ce5905bf25b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "f3242fec536d8fbced15f6ae0af248ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "fed1ba0fa762f403ea413f9344102bb1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\";\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa27560def7048d7b4a095.md",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "80113beb2d1e6573de5d5f2e8722ee8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa2943669c9d5026af6985\ntitle: Step 169\nchallengeType: 0\ndashedName: step-169\n--description--\nThe includes() method determines if an array contains an element and will return either true or false Here is an example of the includes() syntax:\n```js\nconst numbersArray = [1, 2, 3, 4, 5]\nconst number = 3\nif (numbersArray includes(number)) {\nconsole log(\"The number is in the array \")\n}\n```\nAfter your for loop, add an if statement to check if the guess is in the numbers array You can use the includes() method to check if the array contains the guess --hints--\nYour pick function should have an if statement js\nconst split = code split(/text\\ innerText\\s*\\+=\\s*numbers/) [1] split(/\\}/) [1];\nassert match(split, /if/);\nInside your if statement, check if the guess is in the numbers array using the includes() method js\nconst split = code split(/text\\ innerText\\s*\\+=\\s*numbers/) [1] split(/\\}/) [1];\nassert match(split, /if\\s*\\(\\s*numbers\\ includes\\(\\s*guess\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "5a9373893e77deba11f6e032894cdee0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "array using the includes() method js const split = code split(/text\\ innerText\\s*\\+=\\s*numbers/) [1] split(/\\}/) [1]; assert match(split, /if\\s*\\(\\s*numbers\\ includes\\(\\s*guess\\s*\\)\\s*\\)/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "01aba7551b88a06e5260c6a5f234f741",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "a579f265c7f841dde70bd0605f788f12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "39d0d71e57b1bf7dba503fbe91ae44a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "14ab02d6ae6cbffd1bb0df3f4cdbdccf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "d9ced3329ec16f593449edfd74efa466",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\nfor (let i = 0; i < 10; i++) {\ntext innerText += numbers[i] + \"\\n\";\n}\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2943669c9d5026af6985.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "cafdece897514c9f71cab55d79651079",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa2999ec27ec516655eba6\ntitle: Step 170\nchallengeType: 0\ndashedName: step-170\n--description--\nInside the if statement, add the string \"Right You win 20 gold \" to the end of text innerText Also, add 20 to the value of gold and update the goldText innerText --hints--\nYou should use compound assignment to add the string \"Right You win 20 gold \" to the end of text innerText js\nassert match(pick toString(), /text\\ innerText\\s*\\+=\\s*('|\")Right You win 20 gold \\1/);\nYou should use compound assignment to add 20 to the value of gold js\nassert match(pick toString(), /gold\\s*\\+=\\s*20/);\nYou should update the goldText innerText to reflect the new value of gold js\nassert match(pick toString(), /goldText\\ innerText\\s*\\=\\s*gold/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "3f74fa778efbc87cf2970e807ae76d63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "8f15bddcf9155df6f53fe2c1a09b3262",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "d5722f1f817900a5c0e75565227ab61d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "3d070d2a7ecb984de4534a199fb7a0db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "8257caf72199c9f62655b8c2ac3b9365",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "09706eaa5f36bafb41e932fd035e9b71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\nfor (let i = 0; i < 10; i++) {\ntext innerText += numbers[i] + \"\\n\";\n}\nif (numbers includes(guess)) {\n}\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2999ec27ec516655eba6.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "029abc3ceb8376ff29939aa6f135dc8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa29d8f8f88152c91350ca\ntitle: Step 171\nchallengeType: 0\ndashedName: step-171\n--description--\nNow add an else statement Inside, add \"Wrong You lose 10 health \" to the end of text innerText Subtract 10 from health and update healthText innerText --hints--\nYou should add an else block js\nassert match(pick toString(), /else\\s*\\{/);\nYour else block should use compound assignment to add \"Wrong You lose 10 health \" to the end of text innerText js\nassert match(pick toString(), /text\\ innerText\\s*\\+=\\s*('|\")Wrong You lose 10 health \\1/);\nYour else block should use compound assignment to subtract 10 from health js\nassert match(pick toString(), /health\\s*-=\\s*10/);\nYour else block should update the healthText innerText to reflect the new value of health js\nassert match(pick toString(), /healthText\\ innerText\\s*=\\s*health/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "ad7741e7b111226b3e1d0addda7d3b1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "833218faef1c829cee1fca57113e5957",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "1d2041947345149087ff129a34ee3166",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "be714c6fd05654e59287dff95bda1e2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerHTML = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "c48f06f618982d42b84a0730bfb78c96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "fa7fe2336b41de983d938bc3c8315907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\nfor (let i = 0; i < 10; i++) {\ntext innerText += numbers[i] + \"\\n\";\n}\nif (numbers includes(guess)) {\ntext innerText += \"Right You win 20 gold \";\ngold += 20;\ngoldText innerText = gold;\n}\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10204,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa29d8f8f88152c91350ca.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "5088909082bb76ebc20855d1607d2181",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62b46e3a8d4be31be5af793d.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62b46e3a8d4be31be5af793d\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nWe have run into a slight problem. You are trying to query your page for a button element, but your script tag is in the head of your HTML. This means your code runs before the browser has finished reading the HTML, and your document.querySelector() will not see the button - because the browser hasn't processed it yet.\nTo fix this, move your script element out of the head element, and place it at the end of your body element (just before the closing </body> tag).\n--hints--\nYour script element should not be in your head element.\njs\nconst script = document.querySelector('script[data-src$=\"script.js\"]');\nassert.notEqual(script.parentElement.tagName, \"HEAD\");\nYour script element should come at the end of your body element.\njs\nconst script = document.querySelector('script[data-src$=\"script.js\"]');\nconst lastChild = document.querySelector('body').lastElementChild;\nassert.equal(script, lastChild);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\n--fcc-editable-region--\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nlet button1 = document.querySelector(\"#button1\");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2164,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62b46e3a8d4be31be5af793d.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a8d77cbc784e903a8e90b13d30da529b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc1ee0c5a89717d4785729.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62fc1ee0c5a89717d4785729\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nGive your #monsterStats element the same border and padding as your #stats element Set its color to #ffffff and give it a #c70d0d background --hints--\nYou should have a #monsterStats selector js\nconst monsterStats = new __helpers CSSHelp(document) getStyle('#monsterStats');\nassert exists(monsterStats);\nYour #monsterStats selector should have a border of 1px solid #0a0a23 js\nconst border = new __helpers CSSHelp(document) getStyle('#monsterStats') getPropertyValue('border');\nassert equal(border, '1px solid rgb(10, 10, 35)');\nYour #monsterStats selector should have 5px of padding js\nconst padding = new __helpers CSSHelp(document) getStyle('#monsterStats') getPropertyValue('padding');\nassert equal(padding, '5px');\nYour #monsterStats selector should have a color of #ffffff js\nconst color = new __helpers CSSHelp(document) getStyle('#monsterStats') getPropertyValue('color');\nassert equal(color, 'rgb(255, 255, 255)');\nYour #monsterStats selector should have a background-color of #c70d0d js\nconst background = new __helpers CSSHelp(document) getStyle('#monsterStats') getPropertyValue('background-color');\nassert equal(background, 'rgb(199, 13, 13)');\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3318,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc1ee0c5a89717d4785729.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3e5adde506ddcf2a5c1ff1e8937f9096",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc1ee0c5a89717d4785729.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have a background-color of #c70d0d js const background = new __helpers CSSHelp(document) getStyle('#monsterStats') getPropertyValue('background-color'); assert equal(background, 'rgb(199, 13, 13)'); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector(\"#button1\");\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3318,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc1ee0c5a89717d4785729.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ae1397767146dc9e41b46be41743b9c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc20387ef88d1d1998aac5.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62fc20387ef88d1d1998aac5\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nUse querySelector() to get the other two button elements using their ids: button2 and button3. Store them in variables called button2 and button3. Remember to use const.\n--hints--\nYou should declare a button2 variable with const.\njs\nassert.match(code, /const\\s+button2/);\nYour button2 variable should have the value of your \"#button2\" element.\njs\nassert.match(code, /const\\s+button2\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#button2\\1\\s*\\)/);\nYou should declare a button3 variable with const.\njs\nassert.match(code, /const\\s+button3/);\nYour button3 variable should have the value of your \"#button3\" element.\njs\nassert.match(code, /const\\s+button3\\s*=\\s*document\\s*\\.\\s*querySelector\\s*\\(\\s*('|\")#button3\\1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n--fcc-editable-region--\nconst button1 = document.querySelector(\"#button1\");\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc20387ef88d1d1998aac5.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "05ddf54a335c3d2cdfd4b50b763d4ea0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa2aec2f09d454253aad6c\ntitle: Step 172\nchallengeType: 0\ndashedName: step-172\n--description--\nSince you subtracted health from the player, you need to check if the player's health is less than or equal to 0 If it is, call the lose function --hints--\nYour pick function should have if statement nested in the else body js\nconst elsePart = code split(/function\\s+pick\\s*\\(\\s*guess\\s*\\)/) [1] split(/else\\s*\\{/) [1] split(/\\}/) [0];\nassert match(elsePart, /if/);\nYour if statement should check if the player's health is less than or equal to 0 js\nassert match(pick toString(), /if\\s*\\(\\s*health\\s*<=\\s*0\\s*\\)/);\nYour if statement in the else body should call the lose function js\nconst nestedIf = code split(/function\\s+pick\\s*\\(\\s*guess\\s*\\)/) [1] split(/else\\s*\\{/) [1] split(/\\}/) [0] split(/if\\s*\\(\\s*health\\s*<=\\s*0\\s*\\)\\s*\\{/) [1];\nassert match(nestedIf, /lose\\(\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "2f29940be9ecae3fce85cb32550b2ade",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "the lose function js const nestedIf = code split(/function\\s+pick\\s*\\(\\s*guess\\s*\\)/) [1] split(/else\\s*\\{/) [1] split(/\\}/) [0] split(/if\\s*\\(\\s*health\\s*<=\\s*0\\s*\\)\\s*\\{/) [1]; assert match(nestedIf, /lose\\(\\s*\\)/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "e4b55c6f4bde3d5ff3345697abf24661",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "#0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = documentquerySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "2833453203a3dd37367f053147c8cdc9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "goCave, fightDragon], text: \"You are in the town square You see a sign that says \\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters\"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster \"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "dd403de7fad73c6d1c56d67f45858218",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "57707f89e27a576003e107bd83abfcd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "9a40bea7c86a158c5464e13d2cce1d28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\n--fcc-editable-region--\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\nfor (let i = 0; i < 10; i++) {\ntext innerText += numbers[i] + \"\\n\";\n}\nif (numbers includes(guess)) {\ntext innerText += \"Right You win 20 gold \";\ngold += 20;\ngoldText innerText = gold;\n} else {\ntext innerText += \"Wrong You lose 10 health \";\nhealth -= 10;\nhealthText innerText = health;\n}\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2aec2f09d454253aad6c.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "674d125e93f603d0f56cf1cc4d0569ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc211760bfc220f4734800.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62fc211760bfc220f4734800\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nFinally, use querySelector() to get the #monsterHealth element Because you have already declared a monsterHealth variable earlier, you need to use a different variable name for this element Declare a new variable with the const keyword and name it monsterHealthText --hints--\nYou should declare a monsterHealthText variable with const js\nassert match(code, /const\\s+monsterHealthText/);\nYour monsterHealthText variable should have the value of your #monsterHealth element js\nassert deepEqual(monsterHealthText, document querySelector('#monsterHealth'));\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc211760bfc220f4734800.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "244f76b42f53b6445eb0b1a79668ccf5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc211760bfc220f4734800.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n--fcc-editable-region--\nconst button1 = document querySelector(\"#button1\");\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62fc211760bfc220f4734800.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e88a2857468398ce3f1b9319e094a755",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62ba17beef16c563069a65d8\ntitle: Step 139\nchallengeType: 0\ndashedName: step-139\n--description--\nIn the locations array, add another object at the end Set the name property to \"lose\", set \"button text\" to an array with three \"REPLAY \" strings, set \"button functions\" to an array with three restart variables, and set text to \"You die &#x2620;\" In a later step, you will update the code for the &#x2620; emoticon text to properly display on the page --hints--\nYou should have six values in the locations array js\nassert lengthOf(locations, 6);\nYour sixth locations value should be an object js\nassert isObject(locations[5]);\nYour sixth locations value should have a name property with the value \"lose\" js\nassert equal(locations[5] name, 'lose');\nYour sixth locations value should have a \"button text\" array with three \"REPLAY \" strings js\nassert deepEqual(locations[5][\"button text\"], ['REPLAY ', 'REPLAY ', 'REPLAY ']);\nYour sixth locations value should have a \"button functions\" array with three restart variables js\nassert deepEqual(locations[5][\"button functions\"], [restart, restart, restart]);\nYour sixth locations value should have a text property with the value \"You die &#x2620;\" js\nassert equal(locations[5] text, 'You die &#x2620;');\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8838,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "7b9a58ca1dff574aba53ca9611a1d255",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "value should have a text property with the value \"You die &#x2620;\" js assert equal(locations[5] text, 'You die &#x2620;'); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8838,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "ca9d805b8ae5a22e1905c8be478ebd36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8838,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "f388c12f6e0624636115746aae7f4120",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n--fcc-editable-region--\n--fcc-editable-region--\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8838,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5b306085084b0d384aaae4de14b9e81d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "-= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weapons length - 1) { if (gold >= 30) { gold -= 30; currentWeaponIndex++; goldText innerText = gold; let newWeapon = weapons[currentWeaponIndex] name; text innerText = \"You now have a \" + newWeapon + \" \"; inventory push(newWeapon); textinnerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\ndefeatMonster();\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8838,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "179198f9867d9d2467e641d04797cd4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1; healthText innerText = health; monsterHealthText innerText = monsterHealth; if (health <= 0) { lose(); } else if (monsterHealth <= 0) { defeatMonster(); } } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting]name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8838,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62ba17beef16c563069a65d8.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "e3ced47860a10174db46dd6a7346157c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6577ea4f23e3ba1217007bc7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 6577ea4f23e3ba1217007bc7\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nFinally, you will need to add some styles for your buttons Start by setting the cursor property to pointer Then set the text color to #0a0a23 and the background-color to #feac32 Then set the background-image property to linear-gradient(#fecc4c, #ffac33) Lastly, set the border to 3px solid #feac32 --hints--\nYou should have a button selector js\nconst btn = new __helpers CSSHelp(document) getStyle('button');\nassert exists(btn);\nYour button selector should have a cursor property set to pointer js\nconst cursor = new __helpers CSSHelp(document) getStyle('button') getPropertyValue('cursor');\nassert equal(cursor, 'pointer');\nYour button selector should have a color property set to #0a0a23 js\nconst color = new __helpers CSSHelp(document) getStyle('button') getPropertyValue('color');\nassert equal(color, 'rgb(10, 10, 35)');\nYour button selector should have a background-color property set to #feac32 js\nconst backgroundColor = new __helpers CSSHelp(document) getStyle('button') getPropertyValue('background-color');\nassert equal(backgroundColor, 'rgb(254, 172, 50)');\nYour button selector should have a background-image property set to linear-gradient(#fecc4c, #ffac33) js\nconst backgroundImage = new __helpers CSSHelp(document) getStyle('button') getPropertyValue('background-image');\nassert equal(backgroundImage, 'linear-gradient(rgb(254, 204, 76), rgb(255, 172, 51))');\nYour button selector should have a border property set to 3px solid #feac32 js\nconst border = new __helpers CSSHelp(document) getStyle('button') getPropertyValue('border');\nassert equal(border, '3px solid rgb(254, 172, 50)');\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6577ea4f23e3ba1217007bc7.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f5294dfea9da13136793e52441bac6bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6577ea4f23e3ba1217007bc7.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "border property set to 3px solid #feac32 js const border = new __helpers CSSHelp(document) getStyle('button') getPropertyValue('border'); assert equal(border, '3px solid rgb(254, 172, 50)'); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to goUse the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector(\"#button1\");\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6577ea4f23e3ba1217007bc7.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "923e1865a929a929e8664c47cebc09b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\660880e67dfed9eb6adb7178.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 660880e67dfed9eb6adb7178\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nBefore you can begin to build out your locations array, you will first need to learn about objects Objects are an important data type in JavaScript The next few steps will be dedicated to learning about them so you will better understand how to apply them in your project Objects are non primitive data types that store key-value pairs Non primitive data types are mutable data types that are not undefined, null, boolean, number, string, or symbol Mutable means that the data can be changed after it is created Here is the basic syntax for an object:\njs\n{\nkey: value\n}\nYou will learn about keys and values in the next few steps For now, create a const variable called cat and assign it an empty object {} Below that cat variable, add a console log(cat) statement to see the object in the console --hints--\nYou should have a const variable called cat js\nassert match(code, /const\\s+cat\\s*=/);\nYou should assign an empty object to the cat variable js\nassert deepEqual(cat, {});\nYou should have a console log statement that logs the cat object js\nassert match(code, /console\\ log\\(cat\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4916,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\660880e67dfed9eb6adb7178.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "775d31c62533b7cd888c3508821093ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\660880e67dfed9eb6adb7178.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "deepEqual(cat, {}); You should have a console log statement that logs the cat object js assert match(code, /console\\ log\\(cat\\)/); --seed-- --seed-contents-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst locations = [];\n--fcc-editable-region--\n--fcc-editable-region--\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4916,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\660880e67dfed9eb6adb7178.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8783aee9571891b29dbbb4573ef307c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\660880e67dfed9eb6adb7178.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = document querySelector(\"#monsterHealth\"); const locations = []; --fcc-editable-region-- --fcc-editable-region-- // initialize buttons button1 onclick = goStore; button2onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\n}\nfunction goTown() {\nbutton1 innerText = \"Go to store\";\nbutton2 innerText = \"Go to cave\";\nbutton3 innerText = \"Fight dragon\";\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\ntext innerText = \"You are in the town square You see a sign that says \\\"Store\\\" \";\n}\nfunction goStore() {\nbutton1 innerText = \"Buy 10 health (10 gold)\";\nbutton2 innerText = \"Buy weapon (30 gold)\";\nbutton3 innerText = \"Go to town square\";\nbutton1 onclick = buyHealth;\nbutton2 onclick = buyWeapon;\nbutton3 onclick = goTown;\ntext innerText = \"You enter the store \";\n}\nfunction goCave() {\nconsole log(\"Going to cave \");\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon \");\n}\nfunction buyHealth() {\n}\nfunction buyWeapon() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4916,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\660880e67dfed9eb6adb7178.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c1b167dc7e160056739d4c0db0205100",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088382bd1422ed8b5309c3.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 66088382bd1422ed8b5309c3\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nObjects are similar to arrays, except that instead of using indexes to access and modify their data, you access the data in objects through properties Properties consist of a key and a value The key is the name of the property, and the value is the data stored in the property Here is an example of an object with a single property:\njs\nconst obj = {\nname: \"Quincy Larson\"\n};\nInside your cat object, add a new property The key should be name and the value should be the string \"Whiskers\" Open up the console to see the updates to your object --hints--\nYour cat object should have a key called name js\nassert property(cat, \"name\");\nYour cat object should have a name property with a value of \"Whiskers\" js\nassert propertyVal(cat, \"name\", \"Whiskers\");\nYour cat object should have one property js\nassert lengthOf(Object keys(cat), 1);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4660,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088382bd1422ed8b5309c3.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "451c5d54ffdff3f4f88b81cb5a58a78d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088382bd1422ed8b5309c3.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst locations = [];\n--fcc-editable-region--\nconst cat = {\n}\n--fcc-editable-region--\nconsole log(cat)\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\n}\nfunction goTown() {\nbutton1 innerText = \"Go to store\";\nbutton2 innerText = \"Go to cave\";\nbutton3 innerText = \"Fight dragon\";\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\ntext innerText = \"You are in the town square",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4660,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088382bd1422ed8b5309c3.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "91380e08895b5973c39434a572b49c59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088382bd1422ed8b5309c3.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= document querySelector(\"#monsterHealth\"); const locations = []; --fcc-editable-region-- const cat = { } --fcc-editable-region-- console log(cat) // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { } function goTown() { button1 innerText = \"Go to store\"; button2 innerText = \"Go to cave\"; button3 innerText = \"Fight dragon\"; button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; text innerText = \"You are in the town squareYou see a sign that says \\\"Store\\\" \";\n}\nfunction goStore() {\nbutton1 innerText = \"Buy 10 health (10 gold)\";\nbutton2 innerText = \"Buy weapon (30 gold)\";\nbutton3 innerText = \"Go to town square\";\nbutton1 onclick = buyHealth;\nbutton2 onclick = buyWeapon;\nbutton3 onclick = goTown;\ntext innerText = \"You enter the store \";\n}\nfunction goCave() {\nconsole log(\"Going to cave \");\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon \");\n}\nfunction buyHealth() {\n}\nfunction buyWeapon() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4660,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088382bd1422ed8b5309c3.md",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "86e46f4a14bf1c01a63468b9a4a1d90f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 65b2f6acce65b7a69751a090\ntitle: Step 141\nchallengeType: 0\ndashedName: step-141\n--description--\nIn order for the &#x2620; emoticon text to properly display on the page, you will need to use the innerHTML property The innerHTML property allows you to access or modify the content inside an HTML element using JavaScript Here is an example of updating the content for this paragraph element using the innerHTML  property ```html\nThis is a paragraph ```\njs\ndocument querySelector(\"#demo\") innerHTML = \"Hello, innerHTML \";\nIn the update function, change text innerText to text innerHTML --hints--\nYou should use dot notation to access the innerHTML property of text js\nassert match(code, /text\\ innerHTML/);\nYou should not use let or const to access the innerHTML property of text js\nassert notMatch(code, /(let|const)\\s+text innerHTML/);\nYou should set innerHTML equal to the text property of location js\nassert match(code, /text\\ innerHTML\\s*=\\s*location\\ text/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "e3cfddc4785c0c84ad36c8515c88ce75",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "bbfa1eff3e48a068668e80186a2fce30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "3025db421c93a75a6ba7104e449f7c0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\n--fcc-editable-region--\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n--fcc-editable-region--\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "3e227f71ca3905d14b4e4b2d0117a069",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerText = location text; --fcc-editable-region-- } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weaponslength - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon \";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= monsters[fighting] level;\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "f43fd7fd64b195a23bb4de2de80b22e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "1; goFight(); } function fightDragon() { fighting = 2; goFight(); } function goFight() { update(locations[3]); monsterHealth = monsters[fighting] health; monsterStats style display = \"block\"; monsterName innerText = monsters[fighting] name; monsterHealthText innerText = monsterHealth; } function attack() { text innerText = \"The \" + monsters[fighting] name + \" attacks \"; text innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \"; health -= monsters[fighting] level; monsterHealth -= weapons[currentWeaponIndex] power + Math floor(Mathrandom() * xp) + 1;\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8785,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\65b2f6acce65b7a69751a090.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "f0613a5fc44bab807bf384dd95d916e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 62aa2ba9cd881355a6f0a5a8\ntitle: Step 173\nchallengeType: 0\ndashedName: step-173\n--description--\nLooking at your \"kill monster\" object, \"button functions\" currently has three goTown variables Replace the third one with easterEgg - this is how a player will access the hidden feature of the game Do not change the \"button text\" With this, your RPG game is complete You can now play around - can you defeat the dragon --hints--\nYou should update your fifth locations object to have a \"button functions\" property of [goTown, goTown, easterEgg] js\nassert deepEqual(locations[4][\"button functions\"], [goTown, goTown, easterEgg]);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "24bbe16adb8e923531cd4b07b1e08206",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeapon = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "f9d67309ee5d2ab1bec38abe55329f44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeapon = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "1cda913820bfb18601c3a25de340b64c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n--fcc-editable-region--\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, goTown],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n--fcc-editable-region--\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "385bfe6ad84c17823b735c9465886118",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; textinnerHTML = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeapon < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeapon++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeapon] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "fa27d65645c7dd89db1379d1151ec5fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeapon] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeapon] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeapon--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6 7);\nxp += monsters[fighting]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "9567b8df12a9dcfc33dff768a646411e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "+ \" breaks \"; currentWeapon--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 6 7); xp += monsters[fighting]level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeapon = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\nfor (let i = 0; i < 10; i++) {\ntext innerText += numbers[i] + \"\\n\";\n}\nif (numbers includes(guess)) {\ntext innerText += \"Right You win 20 gold \";\ngold += 20;\ngoldText innerText = gold;\n} else {\ntext innerText += \"Wrong You lose 10 health \";\nhealth -= 10;\nhealthText innerText = health;\nif (health <= 0) {\nlose();\n}\n}\n}\n```\n--solutions--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "c316455b3976d4a43bf24ff2e09a56ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "10 health \"; health -= 10; healthText innerText = health; if (health <= 0) { lose(); } } } ``` --solutions-- ```html RPG - Dragon Repeller XP: 0 Health: 100 Gold: 50 Go to store Go to cave Fight dragon Monster Name: Health: Welcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "1245a722a160bf64dcfd0f6c0fc1498a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "} ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = document querySelector(\"#text\"); const xpText = document querySelector(\"#xpText\"); const healthText = document querySelector(\"#healthText\"); const goldText = document querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = documentquerySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst monsters = [\n{\nname: \"slime\",\nlevel: 2,\nhealth: 15\n},\n{\nname: \"fanged beast\",\nlevel: 8,\nhealth: 60\n},\n{\nname: \"dragon\",\nlevel: 20,\nhealth: 300\n}\n]\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n},\n{\nname: \"fight\",\n\"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n\"button functions\": [attack, dodge, goTown],\ntext: \"You are fighting a monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "9a9cee421729e462b3a8ed74313730bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" }, { name: \"fight\", \"button text\": [\"Attack\", \"Dodge\", \"Run\"], \"button functions\": [attack, dodge, goTown], text: \"You are fighting a monster\"\n},\n{\nname: \"kill monster\",\n\"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n\"button functions\": [goTown, goTown, easterEgg],\ntext: 'The monster screams \"Arg \" as it dies You gain experience points and find gold '\n},\n{\nname: \"lose\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You die ☠\"\n},\n{\nname: \"win\",\n\"button text\": [\"REPLAY \", \"REPLAY \", \"REPLAY \"],\n\"button functions\": [restart, restart, restart],\ntext: \"You defeat the dragon YOU WIN THE GAME 🎉\"\n},\n{\nname: \"easter egg\",\n\"button text\": [\"2\", \"8\", \"Go to town square \"],\n\"button functions\": [pickTwo, pickEight, goTown],\ntext: \"You find a secret game Pick a number above Ten numbers will be randomly chosen between 0 and 10 If the number you choose matches one of the random numbers, you win \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nmonsterStats style display = \"none\";\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "a89d63db70807c934ca6f59789c2e70f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "0 and 10 If the number you choose matches one of the random numbers, you win \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { monsterStats style display = \"none\"; button1 innerText = location[\"button text\"][0]; button2 innerText = location[\"button text\"][1]; button3 innerText = location[\"button text\"][2]; button1 onclick = location[\"button functions\"][0]; button2 onclick = location[\"button functions\"][1]; button3 onclick = location[\"button functions\"][2]; text innerText = locationtext;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\nbutton2 innerText = \"Sell weapon for 15 gold\";\nbutton2 onclick = sellWeapon;\n}\n}\nfunction sellWeapon() {\nif (inventory length > 1) {\ngold += 15;\ngoldText innerText = gold;\nlet currentWeapon = inventory shift();\ntext innerText = \"You sold a \" + currentWeapon + \" \";\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"Don't sell your only weapon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "9ebf23716412f7d235d35fbaecb79c22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "have the most powerful weapon \"; button2 innerText = \"Sell weapon for 15 gold\"; button2 onclick = sellWeapon; } } function sellWeapon() { if (inventory length > 1) { gold += 15; goldText innerText = gold; let currentWeapon = inventory shift(); text innerText = \"You sold a \" + currentWeapon + \" \"; text innerText += \" In your inventory you have: \" + inventory; } else { text innerText = \"Don't sell your only weapon\";\n}\n}\nfunction fightSlime() {\nfighting = 0;\ngoFight();\n}\nfunction fightBeast() {\nfighting = 1;\ngoFight();\n}\nfunction fightDragon() {\nfighting = 2;\ngoFight();\n}\nfunction goFight() {\nupdate(locations[3]);\nmonsterHealth = monsters[fighting] health;\nmonsterStats style display = \"block\";\nmonsterName innerText = monsters[fighting] name;\nmonsterHealthText innerText = monsterHealth;\n}\nfunction attack() {\ntext innerText = \"The \" + monsters[fighting] name + \" attacks \";\ntext innerText += \" You attack it with your \" + weapons[currentWeaponIndex] name + \" \";\nhealth -= getMonsterAttackValue(monsters[fighting] level);\nif (isMonsterHit()) {\nmonsterHealth -= weapons[currentWeaponIndex] power + Math floor(Math random() * xp) + 1;\n} else {\ntext innerText += \" You miss \";\n}\nhealthText innerText = health;\nmonsterHealthText innerText = monsterHealth;\nif (health <= 0) {\nlose();\n} else if (monsterHealth <= 0) {\nif (fighting === 2) {\nwinGame();\n} else {\ndefeatMonster();\n}\n}\nif (Math random() <= 1 && inventory length == 1) {\ntext innerText += \" Your \" + inventory pop() + \" breaks \";\ncurrentWeaponIndex--;\n}\n}\nfunction getMonsterAttackValue(level) {\nconst hit = (level * 5) - (Math floor(Math random() * xp));\nconsole log(hit);\nreturn hit > 0 hit : 0;\n}\nfunction isMonsterHit() {\nreturn Math random() > 2 || health < 20;\n}\nfunction dodge() {\ntext innerText = \"You dodge the attack from the \" + monsters[fighting] name;\n}\nfunction defeatMonster() {\ngold += Math floor(monsters[fighting] level * 6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "01e5ebe478826837fc6d53cd0be27a1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\" + inventory pop() + \" breaks \"; currentWeaponIndex--; } } function getMonsterAttackValue(level) { const hit = (level * 5) - (Math floor(Math random() * xp)); console log(hit); return hit > 0 hit : 0; } function isMonsterHit() { return Math random() > 2 || health < 20; } function dodge() { text innerText = \"You dodge the attack from the \" + monsters[fighting] name; } function defeatMonster() { gold += Math floor(monsters[fighting] level * 67);\nxp += monsters[fighting] level;\ngoldText innerText = gold;\nxpText innerText = xp;\nupdate(locations[4]);\n}\nfunction lose() {\nupdate(locations[5]);\n}\nfunction winGame() {\nupdate(locations[6]);\n}\nfunction restart() {\nxp = 0;\nhealth = 100;\ngold = 50;\ncurrentWeaponIndex = 0;\ninventory = [\"stick\"];\ngoldText innerText = gold;\nhealthText innerText = health;\nxpText innerText = xp;\ngoTown();\n}\nfunction easterEgg() {\nupdate(locations[7]);\n}\nfunction pickTwo() {\npick(2);\n}\nfunction pickEight() {\npick(8);\n}\nfunction pick(guess) {\nconst numbers = [];\nwhile (numbers length < 10) {\nnumbers push(Math floor(Math random() * 11));\n}\ntext innerText = \"You picked \" + guess + \" Here are the random numbers:\\n\";\nfor (let i = 0; i < 10; i++) {\ntext innerText += numbers[i] + \"\\n\";\n}\nif (numbers includes(guess)) {\ntext innerText += \"Right You win 20 gold \";\ngold += 20;\ngoldText innerText = gold;\n} else {\ntext innerText += \"Wrong You lose 10 health \";\nhealth -= 10;\nhealthText innerText = health;\nif (health <= 0) {\nlose();\n}\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19450,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\62aa2ba9cd881355a6f0a5a8.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "ea18aa3642222d5b2c62e543cca4d832",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088621742011f008175e5e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 66088621742011f008175e5e\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nThere are two ways to access the properties of an object: dot notation ( ) and bracket notation ([]), similar to an array Dot notation is what you use when you know the name of the property you're trying to access ahead of time js\nobject property;\nHere is a sample of using dot notation ( ) to read the name property of the developer object:\n```js\nconst developer = {\nname: \"Jessica\",\n}\n// Output: Jessica\nconsole log(developer name);\n```\nUpdate your console statement to access the name property of the cat object using dot notation Open up the console to see the name of \"Whiskers\" logged to the console --hints--\nYour console statement should now have the value of cat name js\nassert match(code, /console log\\(\\s*cat\\ name\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088621742011f008175e5e.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7de2a499650942b58a6f879d97440f0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088621742011f008175e5e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst locations = [];\nconst cat = {\nname: \"Whiskers\",\n\"Number of legs\": 4,\n}\n--fcc-editable-region--\nconsole log(cat)\n--fcc-editable-region--\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\n}\nfunction goTown() {\nbutton1 innerText = \"Go to store\";\nbutton2 innerText = \"Go to cave\";\nbutton3 innerText = \"Fight dragon\";\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088621742011f008175e5e.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "77a3fad2dabec4ae17cf54688a63da2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088621742011f008175e5e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = document querySelector(\"#monsterHealth\"); const locations = []; const cat = { name: \"Whiskers\", \"Number of legs\": 4, } --fcc-editable-region-- console log(cat) --fcc-editable-region-- // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { } function goTown() { button1 innerText = \"Go to store\"; button2 innerText = \"Go to cave\"; button3 innerText = \"Fight dragon\"; button1 onclick = goStore; button2 onclick = goCave; button3onclick = fightDragon;\ntext innerText = \"You are in the town square You see a sign that says \\\"Store\\\" \";\n}\nfunction goStore() {\nbutton1 innerText = \"Buy 10 health (10 gold)\";\nbutton2 innerText = \"Buy weapon (30 gold)\";\nbutton3 innerText = \"Go to town square\";\nbutton1 onclick = buyHealth;\nbutton2 onclick = buyWeapon;\nbutton3 onclick = goTown;\ntext innerText = \"You enter the store \";\n}\nfunction goCave() {\nconsole log(\"Going to cave \");\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon \");\n}\nfunction buyHealth() {\n}\nfunction buyWeapon() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\66088621742011f008175e5e.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "35ff9a2f8e5b0b03d2b5ec21ad456caa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b8713915f21398ff32e1.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 6608b8713915f21398ff32e1\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nIf the property name (key) of an object has a space in it, you will need to use single or double quotes around the name Here is an example of an object with a property name that has a space:\njs\nconst spaceObj = {\n\"Space Name\": \"Kirk\",\n};\nIf you tried to write a key without the quotes, it would throw an error:\n```js\nconst spaceObj = {\n// Throws an error\nSpace Name: \"Kirk\",\n};\n```\nAdd a new property with a key of \"Number of legs\" and value of 4 to the cat object Open up the console to see the output --hints--\nYour cat object should have a key called \"Number of legs\" js\nassert property(cat, \"Number of legs\");\nYour cat object should have a \"Number of legs\" property with a value of 4 js\nassert propertyVal(cat, \"Number of legs\", 4);\nYour cat object should have two properties js\nassert lengthOf(Object keys(cat), 2);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b8713915f21398ff32e1.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "83f4a7b9ea9b287c110b68910d0f3703",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b8713915f21398ff32e1.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst locations = [];\n--fcc-editable-region--\nconst cat = {\nname: \"Whiskers\",\n};\n--fcc-editable-region--\nconsole log(cat)\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\n}\nfunction goTown() {\nbutton1 innerText = \"Go to store\";\nbutton2 innerText = \"Go to cave\";\nbutton3 innerText = \"Fight dragon\";\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\ntext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b8713915f21398ff32e1.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3cf20a373a17e588653acf0bdb943c2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b8713915f21398ff32e1.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = document querySelector(\"#monsterHealth\"); const locations = []; --fcc-editable-region-- const cat = { name: \"Whiskers\", }; --fcc-editable-region-- console log(cat) // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { } function goTown() { button1 innerText = \"Go to store\"; button2 innerText = \"Go to cave\"; button3 innerText = \"Fight dragon\"; button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; textinnerText = \"You are in the town square You see a sign that says \\\"Store\\\" \";\n}\nfunction goStore() {\nbutton1 innerText = \"Buy 10 health (10 gold)\";\nbutton2 innerText = \"Buy weapon (30 gold)\";\nbutton3 innerText = \"Go to town square\";\nbutton1 onclick = buyHealth;\nbutton2 onclick = buyWeapon;\nbutton3 onclick = goTown;\ntext innerText = \"You enter the store \";\n}\nfunction goCave() {\nconsole log(\"Going to cave \");\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon \");\n}\nfunction buyHealth() {\n}\nfunction buyWeapon() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b8713915f21398ff32e1.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "286d34b35165c4de8abd5bd9894de7aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608bee87c43ca194effebdf.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 6608bee87c43ca194effebdf\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nLater on in the curriculum, you will dive deeper into objects But for now, it is time to apply what you have learned to your role playing game Start by deleting your cat object and console statement --hints--\nYou should remove your cat object js\nassert notInclude(code, \"const cat = {\");\nYou should remove your console statement js\nassert notInclude(code, \"console log(cat[\\\"Number of legs\\\"]);\");\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608bee87c43ca194effebdf.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3394cf0c3b3bf9de53073f4aeb599ec3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608bee87c43ca194effebdf.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; let gold = 50; let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = documentquerySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst locations = [];\n--fcc-editable-region--\nconst cat = {\nname: \"Whiskers\",\n\"Number of legs\": 4,\n}\nconsole log(cat[\"Number of legs\"]);\n--fcc-editable-region--\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\n}\nfunction goTown() {\nbutton1 innerText = \"Go to store\";\nbutton2 innerText = \"Go to cave\";\nbutton3 innerText = \"Fight dragon\";\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\ntext innerText = \"You are in the town square You see a sign that says \\\"Store\\\" \";\n}\nfunction goStore() {\nbutton1 innerText = \"Buy 10 health (10 gold)\";\nbutton2 innerText = \"Buy weapon (30 gold)\";\nbutton3 innerText = \"Go to town square\";\nbutton1 onclick = buyHealth;\nbutton2 onclick = buyWeapon;\nbutton3 onclick = goTown;\ntext innerText = \"You enter the store \";\n}\nfunction goCave() {\nconsole log(\"Going to cave \");\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608bee87c43ca194effebdf.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ce1913530478a9ef97ce0766f1e13a26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608bee87c43ca194effebdf.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\"You are in the town square You see a sign that says \\\"Store\\\" \"; } function goStore() { button1 innerText = \"Buy 10 health (10 gold)\"; button2 innerText = \"Buy weapon (30 gold)\"; button3 innerText = \"Go to town square\"; button1 onclick = buyHealth; button2 onclick = buyWeapon; button3 onclick = goTown; text innerText = \"You enter the store \"; } function goCave() { console log(\"Going to cave \"); } function fightDragon() { console log(\"Fighting dragon\");\n}\nfunction buyHealth() {\n}\nfunction buyWeapon() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608bee87c43ca194effebdf.md",
      "source_type": "git_repo"
    },
    "token_count": 133,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5b31a3c4886a4aea93ebc4b075e2037f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b7985f4ba5127cbc401b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 6608b7985f4ba5127cbc401b\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nThe second way to access the properties of an object is bracket notation ([]) If the property of the object you are trying to access has a space in its name, you will need to use bracket notation js\nobjectName[\"property name\"];\nHere is a sample of using bracket notation to read an object's property:\n```js\nconst spaceObj = {\n\"Space Name\": \"Kirk\",\n};\nspaceObj[\"Space Name\"]; // \"Kirk\"\n```\nUpdate your console statement to use bracket notation to access the property \"Number of legs\" of the cat object Open up the console to see the output --hints--\nYour console statement should now have the value of cat[\"Number of legs\"] js\nassert match(code, /console log\\(\\s*cat\\[('|\")Number\\s+of\\s+legs\\1\\]\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b7985f4ba5127cbc401b.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a2ac31c5f877208a4e13972d7ffc593d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b7985f4ba5127cbc401b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst locations = [];\nconst cat = {\nname: \"Whiskers\",\n\"Number of legs\": 4,\n}\n--fcc-editable-region--\nconsole log(cat name);\n--fcc-editable-region--\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\n}\nfunction goTown() {\nbutton1 innerText = \"Go to store\";\nbutton2 innerText = \"Go to cave\";\nbutton3 innerText = \"Fight dragon\";\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b7985f4ba5127cbc401b.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e91388aeb93bddc9125fd4663de3a4b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b7985f4ba5127cbc401b.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "= document querySelector(\"#monsterName\"); const monsterHealthText = document querySelector(\"#monsterHealth\"); const locations = []; const cat = { name: \"Whiskers\", \"Number of legs\": 4, } --fcc-editable-region-- console log(cat name); --fcc-editable-region-- // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3 onclick = fightDragon; function update(location) { } function goTown() { button1 innerText = \"Go to store\"; button2 innerText = \"Go to cave\"; button3 innerText = \"Fight dragon\"; button1 onclick = goStore; button2 onclick = goCave; button3onclick = fightDragon;\ntext innerText = \"You are in the town square You see a sign that says \\\"Store\\\" \";\n}\nfunction goStore() {\nbutton1 innerText = \"Buy 10 health (10 gold)\";\nbutton2 innerText = \"Buy weapon (30 gold)\";\nbutton3 innerText = \"Go to town square\";\nbutton1 onclick = buyHealth;\nbutton2 onclick = buyWeapon;\nbutton3 onclick = goTown;\ntext innerText = \"You enter the store \";\n}\nfunction goCave() {\nconsole log(\"Going to cave \");\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon \");\n}\nfunction buyHealth() {\n}\nfunction buyWeapon() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\6608b7985f4ba5127cbc401b.md",
      "source_type": "git_repo"
    },
    "token_count": 284,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d985f79a535b1af1af45590f2fbebbeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 662fbead61552e06d30fc048\ntitle: Step 97\nchallengeType: 0\ndashedName: step-97\n--description--\nNow it is time to test your buyWeapon function Right now, the gold amount is set to 50 But to properly see the results of your buyWeapon function, the amount should be set to something higher Update the gold amount to 250 NOTE: The HTML has already been updated to reflect this change To test your buyWeapon function, open up the console Then click on the \"Go to store\" button followed by the \"Buy weapon (30 gold)\" button four times --hints--\nYour gold amount should be set to 250 js\nassert strictEqual(gold, 250);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 250\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "9286b717eba146158527c360f3b6743e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "You are in the town square Where do you want to go Use the buttons above ``` ```css body { background-color: #0a0a23; } text { background-color: #0a0a23; color: #ffffff; padding: 10px; } game { max-width: 500px; max-height: 400px; background-color: #ffffff; color: #ffffff; margin: 30px auto 0px; padding: 10px; } controls, stats { border: 1px solid #0a0a23; padding: 5px; color: #0a0a23; } monsterStats { display: none; border: 1px solid #0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; }stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\n--fcc-editable-region--\nlet gold = 50;\n--fcc-editable-region--\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document querySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3e7daf1a420476e5734a1e70b1e5585c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "querySelector(\"#goldText\"); const monsterStats = document querySelector(\"#monsterStats\"); const monsterName = document querySelector(\"#monsterName\"); const monsterHealthText = document querySelector(\"#monsterHealth\"); const weapons = [ { name: 'stick', power: 5 }, { name: 'dagger', power: 30 }, { name: 'claw hammer', power: 50 }, { name: 'sword', power: 100 } ]; const locations = [ { name: \"town square\", \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"], \"button functions\": [goStore, goCave, fightDragon], text: \"You are in the town squareYou see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3 onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon \");\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "7c519f0a49de54f976c46b413af87a2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "text innerText = location text; } function goTown() { update(locations[0]); } function goStore() { update(locations[1]); } function goCave() { update(locations[2]); } function fightDragon() { console log(\"Fighting dragon \"); } function buyHealth() { if (gold >= 10) { gold -= 10; health += 10; goldText innerText = gold; healthText innerText = health; } else { text innerText = \"You do not have enough gold to buy health \"; } } function buyWeapon() { if (currentWeaponIndex < weaponslength) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n}\n}\nfunction fightSlime() {\n}\nfunction fightBeast() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fbead61552e06d30fc048.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "929ab7acb73aa55c3b73d46b1062041e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fc372da60030ae25b194e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "id: 662fc372da60030ae25b194e\ntitle: Step 100\nchallengeType: 0\ndashedName: step-100\n--description--\nNow that you are finished testing that portion of the buyWeapon function, you can set your gold variable back to 50 Note: The HTML has already been updated to reflect the original value of gold --hints--\nYour gold variable should be set to 50 js\nassert equal(gold, 50);\n--seed--\n--seed-contents--\n```html\nRPG - Dragon Repeller\nXP: 0\nHealth: 100\nGold: 50\nGo to store\nGo to cave\nFight dragon\nMonster Name:\nHealth:\nWelcome to Dragon Repeller You must defeat the dragon that is preventing people from leaving the town You are in the town square Where do you want to go Use the buttons above ```\n```css\nbody {\nbackground-color: #0a0a23;\n}\ntext {\nbackground-color: #0a0a23;\ncolor: #ffffff;\npadding: 10px;\n}\ngame {\nmax-width: 500px;\nmax-height: 400px;\nbackground-color: #ffffff;\ncolor: #ffffff;\nmargin: 30px auto 0px;\npadding: 10px;\n}\ncontrols,\nstats {\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #0a0a23;\n}\nmonsterStats {\ndisplay: none;\nborder: 1px solid #0a0a23;\npadding: 5px;\ncolor: #ffffff;\nbackground-color: #c70d0d;\n} stat {\npadding-right: 10px;\n}\nbutton {\ncursor: pointer;\ncolor: #0a0a23;\nbackground-color: #feac32;\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder: 3px solid #feac32;\n}\n```\n```js\nlet xp = 0;\nlet health = 100;\n--fcc-editable-region--\nlet gold = 250;\n--fcc-editable-region--\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\nconst button1 = document querySelector('#button1');\nconst button2 = document querySelector(\"#button2\");\nconst button3 = document querySelector(\"#button3\");\nconst text = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fc372da60030ae25b194e.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "755f10907f8fa37c3e9e71fd133e0d28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fc372da60030ae25b194e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "#0a0a23; padding: 5px; color: #ffffff; background-color: #c70d0d; } stat { padding-right: 10px; } button { cursor: pointer; color: #0a0a23; background-color: #feac32; background-image: linear-gradient(#fecc4c, #ffac33); border: 3px solid #feac32; } ``` ```js let xp = 0; let health = 100; --fcc-editable-region-- let gold = 250; --fcc-editable-region-- let currentWeaponIndex = 0; let fighting; let monsterHealth; let inventory = [\"stick\"]; const button1 = document querySelector('#button1'); const button2 = document querySelector(\"#button2\"); const button3 = document querySelector(\"#button3\"); const text = documentquerySelector(\"#text\");\nconst xpText = document querySelector(\"#xpText\");\nconst healthText = document querySelector(\"#healthText\");\nconst goldText = document querySelector(\"#goldText\");\nconst monsterStats = document querySelector(\"#monsterStats\");\nconst monsterName = document querySelector(\"#monsterName\");\nconst monsterHealthText = document querySelector(\"#monsterHealth\");\nconst weapons = [\n{ name: 'stick', power: 5 },\n{ name: 'dagger', power: 30 },\n{ name: 'claw hammer', power: 50 },\n{ name: 'sword', power: 100 }\n];\nconst locations = [\n{\nname: \"town square\",\n\"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n\"button functions\": [goStore, goCave, fightDragon],\ntext: \"You are in the town square You see a sign that says \\\"Store\\\" \"\n},\n{\nname: \"store\",\n\"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n\"button functions\": [buyHealth, buyWeapon, goTown],\ntext: \"You enter the store \"\n},\n{\nname: \"cave\",\n\"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n\"button functions\": [fightSlime, fightBeast, goTown],\ntext: \"You enter the cave You see some monsters \"\n}\n];\n// initialize buttons\nbutton1 onclick = goStore;\nbutton2 onclick = goCave;\nbutton3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fc372da60030ae25b194e.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "437f60ef3dcfe0231e8e0c520194a4b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fc372da60030ae25b194e.md",
    "source_type": "git_repo",
    "title": "RPG - Dragon Repeller",
    "content": "\\\"Store\\\" \" }, { name: \"store\", \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"], \"button functions\": [buyHealth, buyWeapon, goTown], text: \"You enter the store \" }, { name: \"cave\", \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"], \"button functions\": [fightSlime, fightBeast, goTown], text: \"You enter the cave You see some monsters \" } ]; // initialize buttons button1 onclick = goStore; button2 onclick = goCave; button3onclick = fightDragon;\nfunction update(location) {\nbutton1 innerText = location[\"button text\"][0];\nbutton2 innerText = location[\"button text\"][1];\nbutton3 innerText = location[\"button text\"][2];\nbutton1 onclick = location[\"button functions\"][0];\nbutton2 onclick = location[\"button functions\"][1];\nbutton3 onclick = location[\"button functions\"][2];\ntext innerText = location text;\n}\nfunction goTown() {\nupdate(locations[0]);\n}\nfunction goStore() {\nupdate(locations[1]);\n}\nfunction goCave() {\nupdate(locations[2]);\n}\nfunction fightDragon() {\nconsole log(\"Fighting dragon \");\n}\nfunction buyHealth() {\nif (gold >= 10) {\ngold -= 10;\nhealth += 10;\ngoldText innerText = gold;\nhealthText innerText = health;\n} else {\ntext innerText = \"You do not have enough gold to buy health \";\n}\n}\nfunction buyWeapon() {\nif (currentWeaponIndex < weapons length - 1) {\nif (gold >= 30) {\ngold -= 30;\ncurrentWeaponIndex++;\ngoldText innerText = gold;\nlet newWeapon = weapons[currentWeaponIndex] name;\ntext innerText = \"You now have a \" + newWeapon + \" \";\ninventory push(newWeapon);\ntext innerText += \" In your inventory you have: \" + inventory;\n} else {\ntext innerText = \"You do not have enough gold to buy a weapon \";\n}\n} else {\ntext innerText = \"You already have the most powerful weapon \";\n}\n}\nfunction fightSlime() {\n}\nfunction fightBeast() {\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-javascript-by-building-a-role-playing-game\\662fc372da60030ae25b194e.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ff08e45ac997399c2880148dc65e186e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec14d1c216aa063f0be4af\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nYou will be building a shopping cart application The HTML and CSS are already provided, but you will need to build the JavaScript to make the page interactive To start, you will need to get some of your elements from the DOM Start by using document getElementById() to get the#cart-container, #products-container, and #dessert-card-container elements Store them in variables named cartContainer, productsContainer, and dessertCards, respectively Since these will not change, remember to use const to declare them --hints--\nYou should use document getElementById() to get the #cart-container element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)cart-container\\1\\s*\\)/);\nYou should assign the #cart-container element to a variable named cartContainer Remember to use const to declare the variable js\nassert match(code, /const\\s+cartContainer\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)cart-container\\1\\s*\\)/);\nYou should use document getElementById() to get the #products-container element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)products-container\\1\\s*\\)/);\nYou should assign the #products-container element to a variable named productsContainer Remember to use const to declare the variable js\nassert match(code, /const\\s+productsContainer\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)products-container\\1\\s*\\)/);\nYou should use document getElementById() to get the #dessert-card-container element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)dessert-card-container\\1\\s*\\)/);\nYou should assign the #dessert-card-container element to a variable named dessertCards Remember to use const to declare the variable js\nassert match(code, /const\\s+dessertCards\\s*=\\s*document\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4923,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "0dcbd3e303707d478807a2aeeb6eac58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "should use document getElementById() to get the #products-container element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)products-container\\1\\s*\\)/); You should assign the #products-container element to a variable named productsContainer Remember to use const to declare the variable js assert match(code, /const\\s+productsContainer\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)products-container\\1\\s*\\)/); You should use document getElementById() to get the #dessert-card-container element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)dessert-card-container\\1\\s*\\)/); You should assign the #dessert-card-container element to a variable named dessertCards Remember to use const to declare the variable js assert match(code, /const\\s+dessertCards\\s*=\\s*document\\getElementById\\(\\s*('|\"|`)dessert-card-container\\1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4923,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "a4426bef1ed35cdf79ceaac0aa27210b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4923,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "fc525b859a78ead84673190b2eb6fce6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4923,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec14d1c216aa063f0be4af.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4d3bc1fc37a0993561c2b4c5a606aefb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec19978a066607e23439f8.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec19978a066607e23439f8\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nNow you need to get your two buttons Continuing the pattern, get the #cart-btn and #clear-cart-btn elements Store them in variables named cartBtn and clearCartBtn, respectively --hints--\nYou should use document getElementById() to get the #cart-btn element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)cart-btn\\1\\s*\\)/);\nYou should assign the #cart-btn element to a variable named cartBtn Remember to use const to declare the variable js\nassert match(code, /const\\s+cartBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)cart-btn\\1\\s*\\)/);\nYou should use document getElementById() to get the #clear-cart-btn element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)clear-cart-btn\\1\\s*\\)/);\nYou should assign the #clear-cart-btn element to a variable named clearCartBtn Remember to use const to declare the variable js\nassert match(code, /const\\s+clearCartBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)clear-cart-btn\\1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec19978a066607e23439f8.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "904a01fed7f1deb2878d37ed033ea413",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec19978a066607e23439f8.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "to use const to declare the variable js assert match(code, /const\\s+clearCartBtn\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)clear-cart-btn\\1\\s*\\)/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec19978a066607e23439f8.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0df3b29a92bcd97bd31be0e02e4c03c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec19978a066607e23439f8.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 12rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec19978a066607e23439f8.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a02f41f78b91d300b11f2d24edb99c91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec1a16f930b108b8a76806\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nNext is to get your totals Get the #total-items, #subtotal, #taxes, and #total elements Store them in variables named totalNumberOfItems, cartSubTotal, cartTaxes, and cartTotal, respectively --hints--\nYou should use document getElementById() to get the #total-items element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)total-items\\1\\s*\\)/);\nYou should assign the #total-items element to a variable named totalNumberOfItems Remember to use const to declare the variable js\nassert match(code, /const\\s+totalNumberOfItems\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)total-items\\1\\s*\\)/);\nYou should use document getElementById() to get the #subtotal element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)subtotal\\1\\s*\\)/);\nYou should assign the #subtotal element to a variable named cartSubTotal Remember to use const to declare the variable js\nassert match(code, /const\\s+cartSubTotal\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)subtotal\\1\\s*\\)/);\nYou should use document getElementById() to get the #taxes element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)taxes\\1\\s*\\)/);\nYou should assign the #taxes element to a variable named cartTaxes Remember to use const to declare the variable js\nassert match(code, /const\\s+cartTaxes\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)taxes\\1\\s*\\)/);\nYou should use document getElementById() to get the #total element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)total\\1\\s*\\)/);\nYou should assign the #total element to a variable named cartTotal Remember to use const to declare the variable js\nassert match(code, /const\\s+cartTotal\\s*=\\s*document\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "bc811921be2e808d5bb40cd65c6b3d8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "should use document getElementById() to get the #taxes element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)taxes\\1\\s*\\)/); You should assign the #taxes element to a variable named cartTaxes Remember to use const to declare the variable js assert match(code, /const\\s+cartTaxes\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)taxes\\1\\s*\\)/); You should use document getElementById() to get the #total element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)total\\1\\s*\\)/); You should assign the #total element to a variable named cartTotal Remember to use const to declare the variable js assert match(code, /const\\s+cartTotal\\s*=\\s*document\\getElementById\\(\\s*('|\"|`)total\\1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1ce7c86be242579569e68e49cb2d3fee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ad2f834050adcbed8f22c1cc14afe7bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1a16f930b108b8a76806.md",
      "source_type": "git_repo"
    },
    "token_count": 284,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "28892d875d3c0e3d5373fbbfd0308aca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1bbf5584390a7d08d41f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec1bbf5584390a7d08d41f\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nThe last element to get is the #show-hide-cart element Store it in a variable named showHideCartSpan Then, use let to declare a variable named isCartShowing and set it to false --hints--\nYou should use document getElementById() to get the #show-hide-cart element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)show-hide-cart\\1\\s*\\)/);\nYou should assign the #show-hide-cart element to a variable named showHideCartSpan Remember to use const to declare the variable js\nassert match(code, /const\\s+showHideCartSpan\\s*=\\s*document\\ getElementById\\(\\s*('|\"|`)show-hide-cart\\1\\s*\\)/);\nYou should use let to declare a variable named isCartShowing js\nassert match(code, /let\\s+isCartShowing/);\nYou should set the isCartShowing variable to false js\nassert match(code, /let\\s+isCartShowing\\s*=\\s*false/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1bbf5584390a7d08d41f.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "983f09f2a239f603b680c0dc287122b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1bbf5584390a7d08d41f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1bbf5584390a7d08d41f.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6fbaffba55a344daf04147d5f452bad1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1bbf5584390a7d08d41f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1bbf5584390a7d08d41f.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c39d4797a2d8876bed544fd5a26d5e7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1cb59f2a4c0be5b6dfa0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec1cb59f2a4c0be5b6dfa0\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nA shopping cart does not serve much purpose without products Declare a products variable and set it to an empty array Using an array will allow you to store multiple products --hints--\nYou should declare a products variable with const js\nassert match(code, /const\\s+products\\b/);\nYou should set the products variable to an empty array js\nassert match(code, /const\\s+products\\s*=\\s*\\[\\s*\\]/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4093,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1cb59f2a4c0be5b6dfa0.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7bbc50a3549b012d10c4ff1cd0070491",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1cb59f2a4c0be5b6dfa0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4093,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1cb59f2a4c0be5b6dfa0.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1f4ba89aa2d2c208def4b393ecd7e194",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1cb59f2a4c0be5b6dfa0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4093,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec1cb59f2a4c0be5b6dfa0.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1deeecf5a457a20d103e5cdd22bd6853",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec20a06fff670d37befbd9\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nYou now need to start adding products Before you do that, you need to consider the structure of your product data A product will need a unique identifier to distinguish it from other products, a price so people know how much it costs, and a name so people know what they are buying You should also add a category to each product Add an object to your products array Give this object an id property set to the number 1, a name property set to the string \"Vanilla Cupcakes (6 Pack)\", a price property set to the number 12 99, and a category property set to the string \"Cupcake\" --hints--\nYour products array should have one value js\nassert equal(products length, 1);\nYour products array should have an object as its first value js\nassert isObject(products[0]);\nYour products array should have an object with an id property set to the number 1 js\nassert equal(products[0] id, 1);\nYour products array should have an object with a name property set to the string \"Vanilla Cupcakes (6 Pack)\" js\nassert equal(products[0] name, 'Vanilla Cupcakes (6 Pack)');\nYour products array should have an object with a price property set to the number 12 99 js\nassert equal(products[0] price, 12 99);\nYour products array should have an object with a category property set to the string \"Cupcake\" js\nassert equal(products[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "6ac7f36a38a56b99f304a59d9add0696",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "number 1 js assert equal(products[0] id, 1); Your products array should have an object with a name property set to the string \"Vanilla Cupcakes (6 Pack)\" js assert equal(products[0] name, 'Vanilla Cupcakes (6 Pack)'); Your products array should have an object with a price property set to the number 12 99 js assert equal(products[0] price, 12 99); Your products array should have an object with a category property set to the string \"Cupcake\" js assert equal(products[0]category, 'Cupcake');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "946b26e7efb5c14c0133adcc2e51def5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "315b421c23e06da76f16d9a5fcd44920",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n--fcc-editable-region--\nconst products = [\n];\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec20a06fff670d37befbd9.md",
      "source_type": "git_repo"
    },
    "token_count": 242,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "0a29dad6988644bcaaf49b6e20602e0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec3427fc3e9214c9ed2a14\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nNow that you have your list of products, you can use JavaScript to insert them into the HTML With this approach, if you decide to add more products, the HTML will automatically reflect that Start by calling the forEach method of your products array Use arrow syntax to create an empty callback function --hints--\nYou should call the forEach method of your products array js\nassert match(code, /products\\ forEach\\(/);\nYou should use arrow syntax to create an empty callback function js\nassert match(code, /\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}/)\nYou should pass your empty callback function to the forEach method js\nassert match(code, /products\\ forEach\\(\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5592,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "94e3d02830da8df6ad16e2c4277b1356",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5592,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3a2d4e81d50a6ed09f48657a9892ec6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5592,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "08dfb2ef95837aa219889d9fef8d9d6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5592,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3427fc3e9214c9ed2a14.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "c0b985e4c392d9b9d95df026b1a934a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec36f6133df7160be3ec66\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nRemember that you can use destructuring to extract multiple values from an array or object in a single statement For the first parameter of your callback function, destructure the name, id, price, and category properties from the object passed in --hints--\nYou should use destructuring to declare name, id, price, and category parameters For this test, order matters js\nassert match(code, /\\{\\s*name\\s*,\\s*id\\s*,\\s*price\\s*,\\s*category\\s*\\}/);\nYour destructuring should be the first parameter of the callback function js\nassert match(code, /products\\ forEach\\(\\s*\\(\\s*\\{\\s*name\\s*,\\s*id\\s*,\\s*price\\s*,\\s*category\\s*\\}\\s*\\)\\s*=>/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "38dc30b5cf63a1169ff1ce251b16e684",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "d97a266dcad689ac5dba8f23f12d3038",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "3d45c7a02a8120e5be1b567d15126f4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\nproducts forEach(\n() => {}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5574,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec36f6133df7160be3ec66.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ee3a693422e2a98f7e1428ece09f8621",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec3287b182ec0efe8a3135\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nFollowing that same data structure, add the products from this table (in order) to your products array Increment the id for each product, counting up | name                         | price | category  |\n| ------------------------------ | ------- | ----------- |\n| French Macaron               | 3 99  | Macaron   |\n| Pumpkin Cupcake              | 3 99  | Cupcake   |\n| Chocolate Cupcake            | 5 99  | Cupcake   |\n| Chocolate Pretzels (4 Pack)  | 10 99 | Pretzel   |\n| Strawberry Ice Cream         | 2 99  | Ice Cream |\n| Chocolate Macarons (4 Pack)  | 9 99  | Macaron   |\n| Strawberry Pretzel           | 4 99  | Pretzel   |\n| Butter Pecan Ice Cream       | 2 99  | Ice Cream |\n| Rocky Road Ice Cream         | 2 99  | Ice Cream |\n| Vanilla Macarons (5 Pack)    | 11 99 | Macaron   |\n| Lemon Cupcakes (4 Pack)      | 12 99 | Cupcake   |\n--hints--\nYour second object in the products array should have an id property set to the number 2 js\nassert equal(products[1] id, 2);\nYour second object in the products array should have a name property set to French Macaron js\nassert equal(products[1] name, 'French Macaron');\nYour second object in the products array should have a price property set to the number 3 99 js\nassert equal(products[1] price, 3 99);\nYour second object in the products array should have a category property set to Macaron js\nassert equal(products[1] category, 'Macaron');\nYour third object in the products array should have an id property set to the number 3 js\nassert equal(products[2] id, 3);\nYour third object in the products array should have a name property set to Pumpkin Cupcake js\nassert equal(products[2] name, 'Pumpkin Cupcake');\nYour third object in the products array should have a price property set to the number 3 99 js\nassert equal(products[2] price, 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "dcc49ed2f34b3f8443dbfaf5fc9c28d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "property set to Macaron js assert equal(products[1] category, 'Macaron'); Your third object in the products array should have an id property set to the number 3 js assert equal(products[2] id, 3); Your third object in the products array should have a name property set to Pumpkin Cupcake js assert equal(products[2] name, 'Pumpkin Cupcake'); Your third object in the products array should have a price property set to the number 3 99 js assert equal(products[2] price, 399);\nYour third object in the products array should have a category property set to Cupcake js\nassert equal(products[2] category, 'Cupcake');\nYour fourth object in the products array should have an id property set to the number 4 js\nassert equal(products[3] id, 4);\nYour fourth object in the products array should have a name property set to Chocolate Cupcake js\nassert equal(products[3] name, 'Chocolate Cupcake');\nYour fourth object in the products array should have a price property set to the number 5 99 js\nassert equal(products[3] price, 5 99);\nYour fourth object in the products array should have a category property set to Cupcake js\nassert equal(products[3] category, 'Cupcake');\nYour fifth object in the products array should have an id property set to the number 5 js\nassert equal(products[4] id, 5);\nYour fifth object in the products array should have a name property set to Chocolate Pretzels (4 Pack) js\nassert equal(products[4] name, 'Chocolate Pretzels (4 Pack)');\nYour fifth object in the products array should have a price property set to the number 10 99 js\nassert equal(products[4] price, 10 99);\nYour fifth object in the products array should have a category property set to Pretzel js\nassert equal(products[4] category, 'Pretzel');\nYour sixth object in the products array should have an id property set to the number 6 js\nassert equal(products[5] id, 6);\nYour sixth object in the products array should have a name property set to Strawberry Ice Cream js\nassert equal(products[5] name, 'Strawberry Ice Cream');\nYour sixth object in the products array should have a price property set to the number 2 99 js\nassert equal(products[5]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "696995d1a8cb20d885240439a5e5db00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "property set to Pretzel js assert equal(products[4] category, 'Pretzel'); Your sixth object in the products array should have an id property set to the number 6 js assert equal(products[5] id, 6); Your sixth object in the products array should have a name property set to Strawberry Ice Cream js assert equal(products[5] name, 'Strawberry Ice Cream'); Your sixth object in the products array should have a price property set to the number 2 99 js assert equal(products[5]price, 2 99);\nYour sixth object in the products array should have a category property set to Ice Cream js\nassert equal(products[5] category, 'Ice Cream');\nYour seventh object in the products array should have an id property set to the number 7 js\nassert equal(products[6] id, 7);\nYour seventh object in the products array should have a name property set to Chocolate Macarons (4 Pack) js\nassert equal(products[6] name, 'Chocolate Macarons (4 Pack)');\nYour seventh object in the products array should have a price property set to the number 9 99 js\nassert equal(products[6] price, 9 99);\nYour seventh object in the products array should have a category property set to Macaron js\nassert equal(products[6] category, 'Macaron');\nYour eighth object in the products array should have an id property set to the number 8 js\nassert equal(products[7] id, 8);\nYour eighth object in the products array should have a name property set to Strawberry Pretzel js\nassert equal(products[7] name, 'Strawberry Pretzel');\nYour eighth object in the products array should have a price property set to the number 4 99 js\nassert equal(products[7] price, 4 99);\nYour eighth object in the products array should have a category property set to Pretzel js\nassert equal(products[7] category, 'Pretzel');\nYour ninth object in the products array should have an id property set to the number 9 js\nassert equal(products[8] id, 9);\nYour ninth object in the products array should have a name property set to Butter Pecan Ice Cream js\nassert equal(products[8] name, 'Butter Pecan Ice Cream');\nYour ninth object in the products array should have a price property set to the number 2 99",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "aa9e08e1113ecbf387cb29923b1b98d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "category property set to Pretzel js assert equal(products[7] category, 'Pretzel'); Your ninth object in the products array should have an id property set to the number 9 js assert equal(products[8] id, 9); Your ninth object in the products array should have a name property set to Butter Pecan Ice Cream js assert equal(products[8] name, 'Butter Pecan Ice Cream'); Your ninth object in the products array should have a price property set to the number 2 99js\nassert equal(products[8] price, 2 99);\nYour ninth object in the products array should have a category property set to Ice Cream js\nassert equal(products[8] category, 'Ice Cream');\nYour tenth object in the products array should have an id property set to the number 10 js\nassert equal(products[9] id, 10);\nYour tenth object in the products array should have a name property set to Rocky Road Ice Cream js\nassert equal(products[9] name, 'Rocky Road Ice Cream');\nYour tenth object in the products array should have a price property set to the number 2 99 js\nassert equal(products[9] price, 2 99);\nYour tenth object in the products array should have a category property set to Ice Cream js\nassert equal(products[9] category, 'Ice Cream');\nYour eleventh object in the products array should have an id property set to the number 11 js\nassert equal(products[10] id, 11);\nYour eleventh object in the products array should have a name property set to Vanilla Macarons (5 Pack) js\nassert equal(products[10] name, 'Vanilla Macarons (5 Pack)');\nYour eleventh object in the products array should have a price property set to the number 11 99 js\nassert equal(products[10] price, 11 99);\nYour eleventh object in the products array should have a category property set to Macaron js\nassert equal(products[10] category, 'Macaron');\nYour twelfth object in the products array should have an id property set to the number 12 js\nassert equal(products[11] id, 12);\nYour twelfth object in the products array should have a name property set to Lemon Cupcakes (4 Pack) js\nassert equal(products[11]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "2ac07b8ce2ee5beefb14770607cca6c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "property set to the number 11 99 js assert equal(products[10] price, 11 99); Your eleventh object in the products array should have a category property set to Macaron js assert equal(products[10] category, 'Macaron'); Your twelfth object in the products array should have an id property set to the number 12 js assert equal(products[11] id, 12); Your twelfth object in the products array should have a name property set to Lemon Cupcakes (4 Pack) js assert equal(products[11]name, 'Lemon Cupcakes (4 Pack)');\nYour twelfth object in the products array should have a price property set to the number 12 99 js\nassert equal(products[11] price, 12 99);\nYour twelfth object in the products array should have a category property set to Cupcake js\nassert equal(products[11] category, 'Cupcake');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "7bde0a4145b2b2ed29514067bbd1b692",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "03fef7ed8600fac64f9d1184b5930501",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n--fcc-editable-region--\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec3287b182ec0efe8a3135.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c198067d182697aaeb4fe75fb6a63bed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee5d38a5d29d0696f8d820\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nIn your template literal, create a div element with a class of dessert-card In that div, create an h2 element and give it the text of the name variable --hints--\nYou should create a div element js\nassert isAtLeast(document querySelectorAll('div') length, 12);\nYour div element should have a class of dessert-card js\nassert equal(document querySelectorAll(' dessert-card') length, 12);\nYou should create an h2 element js\nassert isAtLeast(document querySelectorAll('h2') length, 12);\nYour h2 element should have the text of the name variable js\nassert equal(document querySelectorAll('h2')[0] textContent, 'Vanilla Cupcakes (6 Pack)');\nYour h2 element should be inside the div element js\nassert equal(document querySelectorAll('div h2') length, 12);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "2de833613e64f3830e0121276c72b27a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; }dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "6c1f51770fa02347362cdb8550663cc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8a19391c0a6fafb2252b609b174b471c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += `\n`;\n}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d38a5d29d0696f8d820.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "c1ac9b6377366740b943835fea8c9da0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ec47b454495519739486a7\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nYou need to display the available products in your HTML Start by using the addition assignment operator to add an empty template literal string to the innerHTML property of the dessertCards variable --hints--\nYou should use access the innerHTML property of the dessertCards variable js\nassert match(code, /dessertCards\\ innerHTML/);\nYou should use the addition assignment operator on the innerHTML property js\nassert match(code, /dessertCards\\ innerHTML\\s*\\+=\\s*/);\nYou should add an empty template literal string to the innerHTML property js\nassert match(code, /dessertCards\\ innerHTML\\s*\\+=\\s*`\\s*`/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5585,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8f5f740825166fc8945d507a68dad594",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5585,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e2e026f34da05cea428c63a056f26376",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5585,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "3678b5a60c204fdaa141a0dedb37116e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\nproducts forEach(\n({ name, id, price, category }) => {\n}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5585,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ec47b454495519739486a7.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4c4941de3b8701a14a6d06c13f4dc51b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee5d8f9e7168076e932fe2\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nAfter your h2 element, create two p elements Give the first a class of dessert-price, and set the text to a dollar sign \"$\" followed by the value of the price variable Give the second a class of product-category, and the text \"Category: \" followed by the value of the category variable --hints--\nYou should create two p elements js\nassert equal(document querySelector(' dessert-card') children length, 3);\nassert equal(document querySelector(' dessert-card') querySelectorAll('p') length, 2)\nYour p elements should come after your h2 element js\nassert equal(document querySelector(' dessert-card') children[0] tagName, 'H2');\nassert equal(document querySelector(' dessert-card') children[1] tagName, 'P');\nassert equal(document querySelector(' dessert-card') children[2] tagName, 'P');\nYour first p element should have a class of dessert-price js\nassert equal(document querySelector(' dessert-card') children[1] className, 'dessert-price');\nYour first p element should have the dollar sign \"$\" followed by the value of the price variable js\nassert equal(document querySelector(' dessert-card') children[1] textContent, '$12 99');\nYour second p element should have a class of product-category js\nassert equal(document querySelector(' dessert-card') children[2] className, 'product-category');\nYour second p element should have the text \"Category: \" followed by the value of the category variable js\nassert equal(document querySelector(' dessert-card') children[2]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6668,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "7aaf35441126fb0636346274dcbfcdfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "assert equal(document querySelector(' dessert-card') children[1] className, 'dessert-price'); Your first p element should have the dollar sign \"$\" followed by the value of the price variable js assert equal(document querySelector(' dessert-card') children[1] textContent, '$12 99'); Your second p element should have a class of product-category js assert equal(document querySelector(' dessert-card') children[2] className, 'product-category'); Your second p element should have the text \"Category: \" followed by the value of the category variable js assert equal(document querySelector(' dessert-card') children[2]textContent, 'Category: Cupcake');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6668,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "c99b5731cd98503e1b769caf6d6534c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6668,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a06f3a304452825f489de0c050b16000",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6668,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "523be5b645577977d5d93e4e63e9699a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += `\n${name}\n</div>\n`;\n}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6668,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5d8f9e7168076e932fe2.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "1f535ce2077faa814afb03358a86face",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee5ea8be892e0955ab346c\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nYou are already familiar with an HTML class, but JavaScript also has a class In JavaScript, a class is like a blueprint for creating objects It allows you to define a set of properties and methods, and instantiate (or create) new objects with those properties and methods The class keyword is used to declare a class Here is an example of declaring a Computer class:\njs\nclass Computer {};\nDeclare a ShoppingCart class --hints--\nYou should declare a ShoppingCart variable js\nassert match(code, /ShoppingCart/);\nYou should use the class keyword to declare a ShoppingCart class js\nassert match(code, /class\\s+ShoppingCart\\s*/);\nYour ShoppingCart class should be empty js\nassert match(code, /class\\s+ShoppingCart\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "5b3204bc1f7eedd3d0f11cfe0b870554",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "cdda80ef6b7069a164de74bc86c4d7ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8fd71e247dc6f451693ab9565103c4d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5ea8be892e0955ab346c.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d68737cc9d659436c231f9c8dd178af0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee5e0f08e82208364c4128\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nFinally, after your p elements, create a button element Give it an id set to the value of the id variable, a class of btn add-to-cart-btn, and use \"Add to cart\" for the text --hints--\nYou should create a button element js\nassert equal(document querySelectorAll(' dessert-card button') length, 12);\nYour button element should come after your p elements js\nassert equal(document querySelector(' dessert-card button') previousElementSibling tagName, 'P');\nassert isNull(document querySelector(' dessert-card button') nextElementSibling);\nYour button element should have an id set to the value of the id variable js\nassert equal(document querySelector(' dessert-card button') id, '1');\nYour button element should have a class of btn add-to-cart-btn js\nassert include(document querySelector(' dessert-card button') className, 'btn');\nassert include(document querySelector(' dessert-card button') className, 'add-to-cart-btn');\nYour button element should have the text \"Add to cart\" js\nassert equal(document querySelector(' dessert-card button') textContent trim(), 'Add to cart');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d506ae7141de91ba3976101ebba8c6b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cart\" js assert equal(document querySelector(' dessert-card button') textContent trim(), 'Add to cart'); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "4bf449420cd061bf76d407169b5bd5ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; }product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "afa393d0f5911c48656df399fdc45210",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 399,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\n--fcc-editable-region--\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += `\n${name}\n$${price}\nCategory: ${category}\n</div>\n`;\n}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6329,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5e0f08e82208364c4128.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "388ae1bac995f0fd6f74473b5a4bab36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee5fc113bcb20a5db9214b\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nClasses have a special constructor method, which is called when a new instance of the class is created The constructor method is a great place to initialize properties of the class Here is an example of a class with a constructor method:\njs\nclass Computer {\nconstructor() {\n}\n}\nAdd an empty constructor method to the ShoppingCart class --hints--\nYou should add a constructor method to the ShoppingCart class js\nassert match(code,  /class\\s+ShoppingCart\\s*\\{\\s*constructor\\s*\\(\\s*\\)\\s*/)\nYour constructor method should be empty js\nassert match(code,  /class\\s+ShoppingCart\\s*\\{\\s*constructor\\s*\\(\\s*\\)\\s*\\{\\s*\\}\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5958,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "0d48a04e4e070d89f9cfcf1de10a8c4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5958,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "6474b38c765a3504689ae53ff290fcd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5958,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "4597b2b417993d4de6f3089bc25d343a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\n--fcc-editable-region--\nclass ShoppingCart {\n};\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5958,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee5fc113bcb20a5db9214b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "37e26d7daf32632f17c58ef27e114a58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee7c664f9b65137d925c8a\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nYour ShoppingCart class needs the ability to add items Create an empty addItem method, which takes two parameters: id and products Creating a method might look like this:\n```js\nclass Computer {\nconstructor() {\nthis ram = 16;\n}\naddRam(amount) {\nthis ram += amount;\n}\n}\n```\nThe first parameter, id, is the id of the product the user has added to their cart The second parameter, products, is an array of product objects By using a parameter instead of directly referencing your existing products array, this method will be more flexible if you wanted to add additional product lists in the future --hints--\nYour ShoppingCart class should have an addItem method js\nconst cart = new ShoppingCart();\nassert isFunction(cart addItem);\nYour addItem method should take two parameters: id and products js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)/);\nYour addItem method should be empty js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "223216b3538df984039605a3af551815",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "empty js const cart = new ShoppingCart(); assert match(cart addItem toString(), /\\(\\s*id\\s*,\\s*products\\s*\\)\\s*\\{\\s*\\}/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "3cfa54294e5ab259d173454be2bac4ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; }product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "67393d0459a34043f09cb64cb2edad5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 399,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "2e2e7ce08d7113b2f875d4733a0c6519",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\n--fcc-editable-region--\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n};\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee7c664f9b65137d925c8a.md",
      "source_type": "git_repo"
    },
    "token_count": 265,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3925a878017a617fbf0428cc628055a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63ee611d478dca0b77f6a393\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nThe this keyword in JavaScript is used to refer to the current object Depending on where this is used, what it references changes In the case of a class, it refers to the instance of the object being constructed You can use the this keyword to set the properties of the object being instantiated Here is an example:\njs\nclass Computer {\nconstructor() {\nthis ram = 16;\n}\n}\nIn your constructor, use the this keyword to set the items property to an empty array Also, set the total property to 0, and the taxRate property to 8 25 --hints--\nYou should use the this keyword to set the items property of your class to an empty array js\nassert match(code, /this\\ items/);\nconst cart = new ShoppingCart();\nassert isArray(cart items);\nassert isEmpty(cart items);\nYou should use the this keyword to set the total property of your class to 0 js\nassert match(code, /this\\ total/);\nconst cart = new ShoppingCart();\nassert equal(cart total, 0);\nYou should use the this keyword to set the taxRate property of your class to 8 25 js\nassert match(code, /this\\ taxRate/);\nconst cart = new ShoppingCart();\nassert equal(cart taxRate, 8 25);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "a48d530e42fe16b6e6a38ec84c3b73d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "/this\\ taxRate/); const cart = new ShoppingCart(); assert equal(cart taxRate, 8 25); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "eb7e71e5d1e7cc39610a258280f689fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; }product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "61176df94f4d3cf76368db96d639a7df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 399,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "7aaca0e7c591117644c25f4f4d3e7800",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\n--fcc-editable-region--\nclass ShoppingCart {\nconstructor() {\n}\n};\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63ee611d478dca0b77f6a393.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "2fcddbd0b5ae4dd3ace52297e7a073d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eea5cea403a81a68ae493c\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nYou need to find the product that the user is adding to the cart Remember that arrays have a find() method In your addItem function, declare a product variable, and assign it the value of calling the find() method on the products array For the callback to find(), pass a function that takes a single parameter item, and returns whether the id property of item is strictly equal to the id parameter passed to addItem --hints--\nYou should declare a product variable in your addItem function js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /product\\s*=/);\nYou should call the find() method on your products array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(/);\nYou should pass a callback function to the find() method js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(/);\nThe callback function should take a single parameter js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)/);\nThe callback function should return whether the id property of item is strictly equal to the id parameter passed to addItem js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)\\s*\\{\\s*return\\s+item\\ id\\s*===\\s*id\\s*; \\s*\\}/);\nYou should assign the value of the find() method to the product variable js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /product\\s*=\\s*products\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "b6ee6688d3b2da1bfcd5222c5d371ee5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "should take a single parameter js const cart = new ShoppingCart(); assert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)/); The callback function should return whether the id property of item is strictly equal to the id parameter passed to addItem js const cart = new ShoppingCart(); assert match(cart addItem toString(), /products\\ find\\(\\s*function\\s*\\(\\s*item\\s*\\)\\s*\\{\\s*return\\s+item\\ id\\s*===\\s*id\\s*; \\s*\\}/); You should assign the value of the find() method to the product variable js const cart = new ShoppingCart(); assert match(cart addItem toString(), /product\\s*=\\s*products\\find\\(/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "bf55c767c6515fa983fdb2c1ebd8955f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "43c629f173d0f5c91b17895b4f8aa97c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "dd19d47899f15018f79b9f3d38187e20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "7450d94d85c5cfc937b9a58eb82afde3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7072,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea5cea403a81a68ae493c.md",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "dda67e9db06d61fd1f0e2a5098cc1237",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eea8e1e143ae1d098c8c9d\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nNow you need to push the product into the cart's items array Remember to use the this keyword --hints--\nYou should call the push method on the items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /items\\ push\\(/);\nRemember you need to use the this keyword to access the items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ push\\(/);\nYou should push the product variable to the items array js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert deepEqual(cart items, [products[0]]);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "be28f4d9905ce65ad2b38f1cb7fd41c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "fa13581e8924cb387c9d93fa0636ee4e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "204cae98bb9047611cff324aee1a3b5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "25f331673779bf6cb1e9b4bb2dcc11e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6134,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea8e1e143ae1d098c8c9d.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "f23a1b949bae4420e9a86ebaf38c600e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eea817673c8e1c22927fa6\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nUse const and destructuring to extract name and price variables from product --hints--\nYou should use destructuring to get the name and price variables js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /\\{\\s*name\\s*,\\s*price\\s*\\}/);\nYou should use const to declare the name and price variables js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s*\\{\\s*name\\s*,\\s*price\\s*\\}/);\nYou should use destructuring to get the name and price variables from product js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s*\\{\\s*name\\s*,\\s*price\\s*\\}\\s*=\\s*product\\s*; \\b/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "cf78111ab66ed6753434750676da2865",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "c49c39da4eefea5284859b056b490c03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "9b82c247d95ba64ba4b8aae7704f043d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "4194d049cab8f52f177ff9bae46fec83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6151,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eea817673c8e1c22927fa6.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "889f422fab34b005f1e36bf0c027da39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eeb8e86becbf1e75c2cb0d\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nYou now need a total count of each product that the user has in the cart Declare a totalCountPerProduct variable, and assign it an empty object --hints--\nYou should declare a totalCountPerProduct variable in your addItem function js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*=/);\nYou should use const to declare totalCountPerProduct js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+totalCountPerProduct\\s*=/);\nYou should assign an empty object to totalCountPerProduct js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+totalCountPerProduct\\s*=\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "55e83fee32e1b1724bf624f82dddefb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2867e999b6d53c28c8bc4c2306768754",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3387b54e70e67d99b02b9a9e41864c1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "796d05b3dfa302a3def904198b86802e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eeb8e86becbf1e75c2cb0d.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "57f0e96167677c61a908ef5e2798c1d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eedebb0ec0231ff1cede1a\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nUse the forEach() method to loop through the items array Pass an empty callback function that takes a single parameter dessert --hints--\nYou should use the forEach() method on your items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /items\\ forEach\\(/);\nRemember to use the this keyword to access the items array js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(/);\nYou should pass a callback function to the forEach() method js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(\\s*function\\s*\\(/);\nYour callback function should take a single parameter js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(\\s*function\\s*\\(\\s*dessert\\s*\\)/);\nYour callback function should be empty js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /this\\ items\\ forEach\\(\\s*function\\s*\\(\\s*dessert\\s*\\)\\s*\\{\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c6c8ab1d6d58fd7f6ba61d6eb792871f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "e2d9aba0c0f97708715bc91168ae0d89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "7a5bcfcfa2bbe3b4253311d268344424",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "5299b95e207b9825bb29a29835e0fe55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6636,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eedebb0ec0231ff1cede1a.md",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6223eb3a2baef8d61d410dbda2f486dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63efdbc22a0c56070beabed7\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nYou’re on the right track However, let’s take a moment to address a common issue when working with objects in JavaScript When you try to access an object property that doesn’t exist, JavaScript returns undefined If you then attempt to perform arithmetic operations on undefined, it can lead to unexpected results, such as NaN To prevent this, you can use the || (logical OR) operator to provide a default value ```js\nlet scores = {};\nlet players = [\"Alice\", \"Bob\", \"Charlie\"];\nplayers forEach(player => {\nscores[player] = scores[player] || 0;\n});\n```\nNow, let’s apply this concept to your totalCountPerProduct object in the forEach callback Make sure that each dessert id property is initialized properly Initialize totalCountPerProduct[dessert id] with a default value of 0 using the || operator --hints--\nYou should use dot notation to access the id property of dessert js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /dessert\\ id/);\nYou should use bracket notation to access the property of totalCountPerProduct that corresponds to dessert id js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]/);\nYou should initialize totalCountPerProduct[dessert id] with 0 as a default value using || operator at the end of the expression js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*totalCountPerProduct\\s*\\[\\s*dessert\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "43d803a7c3c23a8f093a90dd7375a3c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id property of dessert js const cart = new ShoppingCart(); assert match(cart addItem toString(), /dessert\\ id/); You should use bracket notation to access the property of totalCountPerProduct that corresponds to dessert id js const cart = new ShoppingCart(); assert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]/); You should initialize totalCountPerProduct[dessert id] with 0 as a default value using || operator at the end of the expression js const cart = new ShoppingCart(); assert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*totalCountPerProduct\\s*\\[\\s*dessert\\id\\s*\\]\\s*\\|\\|\\s*0\\s*/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "4d38db02fe7e0440cb952138b60fa12f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "4cf6fd674fbc3a214958f4316ea04a28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "978529aec5dc17de9d5a1567fac47670",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "5c551f3e56dd5819b856fea1c999de91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\n})\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efdbc22a0c56070beabed7.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "370e5a26a7b17ed83fcf61cebba369c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eff02f00e69a0b2ac10b43\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nNow you need to get prepared to update the display with the new product the user added Declare a currentProductCount variable, and assign it the value of the totalCountPerProduct object's property matching the id of product --hints--\nYou should declare a currentProductCount variable in your addItem function js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*=/);\nYou should use const to declare currentProductCount js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+currentProductCount\\s*=/);\nYou should assign the value of totalCountPerProduct[product id] to currentProductCount js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*=\\s*totalCountPerProduct\\s*\\[\\s*product\\ id\\s*\\]/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "dedcc63ff729fe928e77e0780aff10c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "*::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 12rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "dd3cc5ecb274a2cfcaae3b864ff7170a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "87b95fce23f2c520eed26c921e8dbdb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "d198272a7eb9e8d63f6731fb616b752e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6565,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff02f00e69a0b2ac10b43.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "5a7556c5303bc6e52b275098a9a4df98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63efe370bbfc4a08d500118e\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nIn the forEach callback, wrap the right-hand assignment totalCountPerProduct[dessert id] || 0 in parentheses () to ensure proper evaluation, then increment the value by one --hints--\nYou should use dot notation to access the id property of dessert js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /dessert\\ id/);\nYou should use bracket notation to access the property of totalCountPerProduct that corresponds to dessert id js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]/);\nYou should use the assignment operator to update the value of the property of totalCountPerProduct that corresponds to dessert id js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=/);\nYou should wrap totalCountPerProduct[dessert id] || 0 in parentheses () before incrementing it by one js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*\\|\\|\\s*0\\s*\\)\\s*\\+\\s*1/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "379f45ad814cb5c0fcdd9283860b95ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "const cart = new ShoppingCart(); assert match(cart addItem toString(), /totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\s*\\[\\s*dessert\\ id\\s*\\]\\s*\\|\\|\\s*0\\s*\\)\\s*\\+\\s*1/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "7fec83a663f48fd1ed43053e49f3fd55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "df8ed3db2a714d38d1524fbfbd00fda1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6e9c764420a7992de908f894c3b9af76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = totalCountPerProduct[dessert id] || 0\n})\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6893,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63efe370bbfc4a08d500118e.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "0537aec1ac70fe06b478d3f0ebab8f04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63eff98ffb1d5a0d24ec79cb\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nYou haven't written the code to generate the HTML yet, but if a product has already been added to the user's cart then there will be a matching element which you'll need Use getElementById() to get the matching element - you'll be setting the id value to product-count-for-id${product id}, so use a template literal to query that value Assign your query to a currentProductCountSpan variable --hints--\nYou should declare a currentProductCountSpan variable js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCountSpan\\s*=/);\nYou should use const to declare currentProductCountSpan js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /const\\s+currentProductCountSpan\\s*=/);\nYou should use document getElementById() to get the matching element js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /document\\ getElementById\\(/);\nYou should use a template literal to query the id value js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /document\\ getElementById\\(\\s*`product-count-for-id\\$\\{(product\\ ) id\\}`\\s*\\)/);\nYou should assign the value of document getElementById() to currentProductCountSpan js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCountSpan\\s*=\\s*document\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "19d0473c68c07d5c1e489402ab428391",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "currentProductCountSpan js const afterAdd = code split(\"addItem\")[1]; assert match(afterAdd, /const\\s+currentProductCountSpan\\s*=/); You should use document getElementById() to get the matching element js const cart = new ShoppingCart(); assert match(cart addItem toString(), /document\\ getElementById\\(/); You should use a template literal to query the id value js const afterAdd = code split(\"addItem\")[1]; assert match(afterAdd, /document\\ getElementById\\(\\s*`product-count-for-id\\$\\{(product\\ ) id\\}`\\s*\\)/); You should assign the value of document getElementById() to currentProductCountSpan js const cart = new ShoppingCart(); assert match(cart addItem toString(), /currentProductCountSpan\\s*=\\s*document\\getElementById\\(/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "fbb33f49098090188adf016e83982b73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "b9099c9f8ae365a7e20b6dda097fcbc1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "94830b55c99e46b1ff2104b7b0b3a676",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "00eda593d6ec48f2f8d02359aa87bf3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63eff98ffb1d5a0d24ec79cb.md",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "bac87ea152ac99529bed097b794db1e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63effe558c87a70e7072e447\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nThe behavior of the addItem method needs to change if the product is already in the cart or not Create a ternary that checks if the current product is already in the cart Use undefined for both the truthy and falsy expressions to avoid a syntax error --hints--\nYou should check if currentProductCount is greater than 1 js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1/);\nYou should use a ternary operator with your currentProductCount > 1 condition js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ /);\nYou should use undefined as the truthy expression js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*undefined/);\nYou should use undefined as the falsy expression js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*undefined\\s*:\\s*undefined/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "20ad65fa6902b4543db347d32a47c342",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0b58fc77d418dacf0e41372215d63f23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "15e2b2dd65a96557c4f9ffa802fd54bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "2b62449ffef5d7ccc8ef33576bdabaaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6894,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63effe558c87a70e7072e447.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "bcf8a2f92fa9c924f717f004f76c1c0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0165121a9181342d5bc66\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nFor your truthy expression, removing the undefined, you need to update the textContent of the currentProductCountSpan to be the currentProductCount followed by an x Use a template literal to do so --hints--\nYou should remove the undefined from your truthy expression js\nconst cart = new ShoppingCart();\nassert notMatch(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*undefined/);\nYou should access the textContent property of currentProductCountSpan js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /currentProductCount\\s*>\\s*1\\s*\\ \\s*currentProductCountSpan\\ textContent/);\nYou should use template literal syntax to update the textContent to be ${currentProductCount}x js\nconst afterAdd = code split(\"addItem\")[1];\nassert match(afterAdd, /currentProductCount\\s*>\\s*1\\s*\\ \\s*currentProductCountSpan\\ textContent\\s*=\\s*`\\$\\{currentProductCount\\}x`\\s*:/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "41285230ac00c6c6f784a9f5d6b5f285",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "3b3bee08399d2b432e240da7381f71d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "af10e6c436ffc90c0243806d843ae914",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "31b22fdb0a5f5111f59c34c61e0d5e0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 undefined : undefined;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6858,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0165121a9181342d5bc66.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a7eb7cc58e5a69ab07417addad81c110",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f017b4ad028a148eb713c0\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nFor your falsy expression, you'll need to add new HTML to your productsContainer Start by removing the undefined, then use the addition assignment operator and template literal syntax to add a div with the class set to product and the id set to dessert${id} to the innerHTML property of the productsContainer --hints--\nYou should remove the undefined from your falsy expression js\nconst cart = new ShoppingCart();\nassert notMatch(cart addItem toString(), /undefined/);\nYou should use the addition assignment operator to add HTML to the productsContainer Remember that HTML goes in the innerHTML property js\nconst cart = new ShoppingCart();\nassert match(cart addItem toString(), /productsContainer\\ innerHTML\\s*\\+=\\s*/);\nYou should use template literal syntax to add HTML to the productsContainer js\nassert match(code, /productsContainer\\ innerHTML\\s*\\+=\\s*`/);\nYou should add a div to the productsContainer js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert equal(productsContainer children [0] tagName, \"DIV\");\nYour div should have the class set to product js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert equal(productsContainer children [0] className, \"product\");\nYour div should have the id set to dessert${id} js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nassert equal(productsContainer children [0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "c644303da20ace7fb34c1a1e526f7765",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "the productsContainer js assert match(code, /productsContainer\\ innerHTML\\s*\\+=\\s*`/); You should add a div to the productsContainer js const cart = new ShoppingCart(); cart addItem(1, products); assert equal(productsContainer children [0] tagName, \"DIV\"); Your div should have the class set to product js const cart = new ShoppingCart(); cart addItem(1, products); assert equal(productsContainer children [0] className, \"product\"); Your div should have the id set to dessert${id} js const cart = new ShoppingCart(); cart addItem(1, products); assert equal(productsContainer children [0]id, \"dessert1\");\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "cbd9087b565f82a7fc50825de6ba637b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "361dc549b560844ca3816daab2695ee5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "ba504366d10708839febd1bd6d632413",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "93e7b11575b749b0a2ed5550d94a8cc7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } --fcc-editable-region-- addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1currentProductCountSpan textContent = `${currentProductCount}x`\n: undefined;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f017b4ad028a148eb713c0.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "6e762244023d4c3b15d744a17c7dd38d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f01861f813e01564c95315\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nInside your div, add two p elements Set the text of the second p element to be the value of the price variable --hints--\nYou should add two p elements inside your div element js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nassert equal(div children length, 2);\nassert equal(div children[0] tagName, 'P');\nassert equal(div children[1] tagName, 'P');\nYour second p element should have the text of the price variable js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nassert equal(div children[1] textContent, '12 99');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "f28da1a9f71f269f2fa22e2e1263bb29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "110d9780f1496a850edbf9b70f84e7d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "f8f363b4a0628d5a2d26e1ed8b922a51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3dedbe33bac63871a897978734722751",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n</div>\n`;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01861f813e01564c95315.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "2c8f8a9064219399356f1572027212a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f018f04e487e164dc27bd9\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nIn your first p element, add a span element Give the span a class of product-count and an id of product-count-for-id${id} Then, after the span, give your p element the text of the name variable --hints--\nYour first p element should have a span element js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p children length, 1);\nassert equal(p children[0] tagName, 'SPAN');\nYour span element should have a class of product-count js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p children[0] className, 'product-count');\nYour span element should have an id of product-count-for-id${id} js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p children[0] id, 'product-count-for-id1');\nYour first p element should have the text of the name variable This should be outside the span js\nconst cart = new ShoppingCart();\ncart addItem(1, products);\nconst div = document querySelector(' product');\nconst p = div querySelector('p');\nassert equal(p innerText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "28731514fefe7ef789abca5c0036c6bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "'product-count'); Your span element should have an id of product-count-for-id${id} js const cart = new ShoppingCart(); cart addItem(1, products); const div = document querySelector(' product'); const p = div querySelector('p'); assert equal(p children[0] id, 'product-count-for-id1'); Your first p element should have the text of the name variable This should be outside the span js const cart = new ShoppingCart(); cart addItem(1, products); const div = document querySelector(' product'); const p = div querySelector('p'); assert equal(p innerTexttrim(), 'Vanilla Cupcakes (6 Pack)');\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "b4b21ac3e4d4e1b2a109d374f37c159c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "2c1d33caf7b1259461d15b10e0f02f6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "a9b1d851da8bbc15325defcd927b1f30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\n--fcc-editable-region--\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "79ce4f0478d8d3c668e60f358ffc5f93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } --fcc-editable-region-- addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7505,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f018f04e487e164dc27bd9.md",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "2f9e1d101c2b0fb8a2c7d3db47a70b3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f01c9791a0aa1751c73760\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nThere is still more functionality that your ShoppingCart class needs, but first you need to be able to test the code you have currently written You'll need to instantiate a new ShoppingCart object and assign it to a variable Here is an example of instantiating the Computer class from earlier examples:\njs\nconst myComputer = new Computer();\nDeclare a cart variable, and assign it a new ShoppingCart object Note the use of the new keyword when instantiating the object --hints--\nYou should use const to declare a cart variable js\nassert match(code, /const\\s+cart\\s*=/);\nYou should use the new keyword to instantiate a new ShoppingCart object js\nassert match(code, /new\\s+ShoppingCart\\s*\\(\\s*\\)/);\nYou should assign your new ShoppingCart object to the cart variable js\nassert isTrue(cart instanceof ShoppingCart);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c781ff70724567e2776671aae62bbaf6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "20ed51181117da97b336259962b2ccde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "72ac84424803b75094e2e87114a47e8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "bff31aa6ed33d4946f96f9c39f3303c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f01c9791a0aa1751c73760.md",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "daae511ea525f2d4ddb6f42cd9db18ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f026d041bc6c1a3d5cba0f\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nYou need to iterate through the buttons in your addToCartBtns variable However, getElementsByClassName() returns a Collection, which does not have a forEach method Use the spread operator on the addToCartBtns variable to convert it into an array Then, use the forEach method to iterate through the array Do not pass a callback function yet --hints--\nYou should use the spread operator on the addToCartBtns variable js\nassert match(code, /\\ \\ \\ addToCartBtns/);\nYou should spread the addToCartBtns variable into an array js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]/);\nYou should use the forEach method on the array you created js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(/);\nYou should not pass a callback function to the forEach method js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "b4ff69cbf6b2ff8046127072989447fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "d432d43ef7709d5c7818b0dc943a79e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3911fbdb779314d8eb342ae80e59f36a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "ef40b390ce522ba2a48dc99804d81953",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f026d041bc6c1a3d5cba0f.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "8565f976a1c886b938c31169604c81e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0224ceb16dc196d2c860a\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nYou need to get all of the Add to cart buttons that you added to the DOM earlier Declare an addToCartBtns variable, and assign it the value of calling the getElementsByClassName() method on the document object, passing in the string \"add-to-cart-btn\" --hints--\nYou should use const to declare your addToCartBtns variable js\nassert match(code, /const\\s+addToCartBtns\\s*=/);\nYou should call the getElementsByClassName() method on the document object js\nassert match(code, /document\\s*\\ \\s*getElementsByClassName\\s*\\(/);\nYou should pass the string \"add-to-cart-btn\" to the getElementsByClassName() method js\nassert match(code, /document\\s*\\ \\s*getElementsByClassName\\s*\\(\\s*('|\"|`)add-to-cart-btn\\1\\s*\\)/);\nYou should assign the value returned by the getElementsByClassName() method to the addToCartBtns variable js\nassert deepEqual(addToCartBtns, document getElementsByClassName('add-to-cart-btn'));\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "17834327618c210685e0660434aa95cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2383dffc9fc762aaa91cff39679a244f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a0b49a6d751f7c773fdfbb036fff9a5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9256a415782c9adcb63fa8a284012f60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7205,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0224ceb16dc196d2c860a.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "c9af83871d416ddabd27d0f9fee8a28d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0289df84a581bbdbd29b7\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nIn your event listener callback, call the addItem() method of your cart object, and pass in the event target id Remember that the id here will be a string, so you need to convert it to a number Pass your products array as the second argument --hints--\nYour event listener callback should call the addItem() method of your cart object js\nassert match(code, /cart\\ addItem\\(/);\nYour addItem() method should be called with the event target id as the first argument Remember to convert the id to a number using Number() js\nassert match(code, /cart\\ addItem\\(\\s*Number\\(\\s*event\\ target\\ id\\s*\\)\\s*/);\nYour addItem() method should be called with the products array as the second argument js\nassert match(code, /cart\\ addItem\\(\\s*Number\\(\\s*event\\ target\\ id\\s*\\)\\s*,\\s*products\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "d0eb0b6da05cbaddcb8d99eb788b5c77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "3d2dba2304a15dbed9dd3f4d4b690196",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "acfe9e78ae075210545d42e0052d84cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "89b0f3376756de7227e69c499a7a1181",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\n})\n}\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7263,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0289df84a581bbdbd29b7.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "822dfacf11f3216166d5f06e9485b194",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0284532742c1b26c7a052\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nAdd your callback function to the forEach method It should take a btn parameter Then, in the callback, add an event listener to the btn The event listener should listen for a click event, and should take another callback with an event parameter The second callback should be empty --hints--\nYou should use arrow syntax to add a callback function to the forEach method which takes a btn parameter js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{|\\s*)/);\nYou should add an event listener to the btn variable js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(|\\s*btn\\s*\\ \\s*addEventListener\\s*\\()/);\nYou should listen for a click event on the btn variable js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*|\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\2\\s*,\\s*)/);\nYou should add an empty callback function to the event listener Remember to give it an event parameter js\nassert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "d42b3d48bd1151fad5e0bb2a369e43ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{|\\s*)/); You should add an event listener to the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(|\\s*btn\\s*\\ \\s*addEventListener\\s*\\()/); You should listen for a click event on the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*|\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\2\\s*,\\s*)/); You should add an empty callback function to the event listener Remember to give it an event parameter js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\3\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "d5df9ea5decd99da272d18ae75e56235",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{|\\s*)/); You should add an event listener to the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*(\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(|\\s*btn\\s*\\ \\s*addEventListener\\s*\\()/); You should listen for a click event on the btn variable js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*|\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\2\\s*,\\s*)/); You should add an empty callback function to the event listener Remember to give it an event parameter js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\3\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;\\s*\\))/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 592,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "a128ea7bf60bf2c430221deda3a1f96b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "js assert match(code, /\\[\\s*\\ \\ \\ addToCartBtns\\s*\\]\\s*\\ \\s*forEach\\s*\\(\\s*( :\\(\\s*btn\\s*\\)|btn)\\s*=>\\s*( :\\{\\s*btn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; \\s*\\}\\s*\\)|\\s*btn\\s*\\\\s*addEventListener\\s*\\(\\s*('|\"|`)click\\3\\s*,\\s*(\\(\\s*event\\s*\\)|event)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*;\\s*\\))/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "4d37f393e5c0bea2fe72bb0f85ff1e3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "--golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "6c65dad8e77b8a06aa042678f7bd7b20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = documentgetElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "9f5adf9c86b60c1abb4d5112728d38ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "8027681bf0fcd55ba42ee2c4da4c756b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n);\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7897,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0284532742c1b26c7a052.md",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "baf5154826047936331e2cad5d941ce9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0295e673b661ccb299e8a\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nYou need a way to access the total number of items in the cart The best way to do this is to add another method to your ShoppingCart class, rather than accessing the items array directly Add a getCounts method to the ShoppingCart class It should return the number of items in the items array --hints--\nYour ShoppingCart class should have a getCounts method js\nassert isFunction(cart getCounts);\nRemember to use the this keyword to access the items array js\nconst afterCounts = code split('getCounts')[1];\nassert match(afterCounts, /this\\s*\\ \\s*items\\s*\\ \\s*length/);\nYour getCounts method should return the number of items in the items array js\nassert equal(cart getCounts(), 0);\ncart addItem(1, products);\nassert equal(cart getCounts(), 1);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8052ed645caba4eaed5588c4d2f70d1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "5503915bb39dc415437987b296dc8e64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "701d7938290e11fb9b93d0100c851756",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "4be5d2c808c011a51e1fb264407478fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7484,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0295e673b661ccb299e8a.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "f674935e1d444cf0ac7ca502e6f8422f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f029b96b9e9e1df93be951\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nNow you can update the total number of items on the webpage Assign the value of your cart object's getCounts() method to the textContent of the totalNumberOfItems variable --hints--\nYou should access the textContent property of the totalNumberOfItems variable js\nassert match(code, /totalNumberOfItems\\s*\\ \\s*textContent/)\nYou should assign the value of your cart object's getCounts() method to the textContent property of the totalNumberOfItems variable js\nassert match(code, /totalNumberOfItems\\s*\\ \\s*textContent\\s*=\\s*cart\\s*\\ \\s*getCounts\\(\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "6c7e7d81e0046b75331034664c3b74b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "bfe1ae52a739343f75b0893ca72c63fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3f8734449d5c04244f5695fb8fa533d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "fa812c170d078b377480b6f783a3c039",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f029b96b9e9e1df93be951.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "9461a369656e130b3b18fd0a5b6b22bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02a4ef92d711ec1ff618c\ntitle: Step 43\nchallengeType: 0\ndashedName: step-43\n--description--\nYou also need to update the total price of the cart when the user adds an item Create a calculateTotal method in the ShoppingCart class In that method, declare a subTotal variable and use the reduce method on the items array to calculate the sum of the price property of each item in the array Use total and item as the parameters for your callback Remember to set your initial value in the reduce method --hints--\nYou should create a calculateTotal method in the ShoppingCart class js\nassert isFunction(cart calculateTotal);\nYour calculateTotal method should have a subTotal variable declared with const js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /const\\s+subTotal\\s*=/);\nYour calculateTotal method should use the reduce method on the items array js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /this\\s*\\ \\s*items\\s*\\ \\s*reduce/);\nYour reduce callback should use total and item as the first and second parameter Remember to use arrow function syntax js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>/);\nYour reduce callback should return the sum of total and item price Use an implicit return js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\ price\\s*\\+\\s*total)/);\nYour reduce call should have an initial value of 0 js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /this\\s*\\ \\s*items\\s*\\ \\s*reduce\\s*\\(\\s*\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "49a6efbec89b87dff7033f4983751633",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "use total and item as the first and second parameter Remember to use arrow function syntax js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>/); Your reduce callback should return the sum of total and item price Use an implicit return js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\ price\\s*\\+\\s*total)/); Your reduce call should have an initial value of 0 js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /this\\s*\\ \\s*items\\s*\\ \\s*reduce\\s*\\(\\s*\\(\\s*total\\s*,\\s*item\\s*\\)\\s*=>\\s*( :total\\s*\\+\\s*item\\ price|item\\price\\s*\\+\\s*total)\\s*,\\s*0\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "959e5b74e5912c8994accfff04296163",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "4b98d639315b9453c278698e0cf23283",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "3d634ab38a857fabf73079aef584cf0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "d74ae68f878712089fd20bf67c1fcd44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "21cdb068a0b5b46ec804e07fe8da6768",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- --fcc-editable-region-- }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event targetid), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02a4ef92d711ec1ff618c.md",
      "source_type": "git_repo"
    },
    "token_count": 272,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "5f09d6791f1b2133e3637f1b1bb96922",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02b22cce1c11fe9604381\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nPart of the total cost will include the tax, so you need to calculate that as well Create a calculateTaxes method in the ShoppingCart class This method should take an amount parameter --hints--\nYou should create a calculateTaxes method in the ShoppingCart class js\nassert isFunction(cart calculateTaxes);\nYour calculateTaxes method should take an amount parameter js\nassert match(cart calculateTaxes toString(), /\\(\\s*amount\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "a233c7243d41e86ba4469529d32a2488",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "ccc7de786f874e5bb5e4d07d0c39319f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "985f900a5e0878142a1fa7bb050d3597",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "730e8bc91687f097d8b6053e78dadc46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02b22cce1c11fe9604381.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "754b87aa630a6c6e94c3b0ebfcd9ddb4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02bdeb9b428208b97eb6b\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nYour calculateTaxes method should return the value of the taxRate (divided by 100, to convert it to a percent) multiplied by the amount parameter For clarity, wrap the taxRate / 100 calculation in parentheses --hints--\nYou should divide the taxRate by 100 in your calculateTaxes method Remember to use the this keyword js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /this\\s*\\ \\s*taxRate\\s*\\/\\s*100/);\nYou should wrap the this taxRate / 100 calculation in parentheses js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)/);\nYou should multiply the amount parameter by the taxRate divided by 100 in your calculateTaxes method js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /amount\\s*\\*\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)|\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount/);\nYour calculateTaxes method should return the value of the taxRate (divided by 100, to convert it to a percent) multiplied by the amount parameter js\nassert equal(cart calculateTaxes(10), (cart",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "53126adcfde4dff048042760ab57b07e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "should wrap the this taxRate / 100 calculation in parentheses js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)/); You should multiply the amount parameter by the taxRate divided by 100 in your calculateTaxes method js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /amount\\s*\\*\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)|\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount/); Your calculateTaxes method should return the value of the taxRate (divided by 100, to convert it to a percent) multiplied by the amount parameter js assert equal(cart calculateTaxes(10), (carttaxRate / 100) * 10);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "6b06d27859de4e0b48cb96b12d04fff8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "3a9609e9727a011507b254dde10bd7e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a8fd04ab0d08225829f180d41eabebc2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "3801fe6f2cac08d7d35b7a0e71c43ca9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "7f32d0ea19087b4c36fb38f9365a0ab1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- calculateTaxes(amount) { } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); } }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); }) } ); cartBtn addEventListener(\"click\", () => { isCartShowing = isCartShowing; showHideCartSpantextContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02bdeb9b428208b97eb6b.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "a58e8afef37239f56ab4082635afe94a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0311f5ea9382388d6124f\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nThe issue with toFixed() returning a string is that you want to be able to perform calculations with the tax rate To fix this, you can pass the toFixed() call (including the calculation) to the parseFloat() function This will convert the fixed string back into a number, preserving the existing decimal places Pass your toFixed() call to parseFloat() --hints--\nYou should pass your entire calculation (excluding the return statement) to parseFloat() js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*parseFloat\\(\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\ \\s*toFixed\\s*\\(\\s*2\\s*\\)\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "1582db99e853a7ed419a04f6072a82b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "1a02a05e90858d8a01d9f84e74beadbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "fc2032a27a6e3f887e63056ae2b1513f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "b68a8f345324aabb0bc66ca56a721d88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn ((this taxRate / 100) * amount) toFixed(2);\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "0d2d91a3d2cddbd3403ea156264730e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- calculateTaxes(amount) { return ((this taxRate / 100) * amount) toFixed(2); } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); } }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); }) } ); cartBtnaddEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7690,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0311f5ea9382388d6124f.md",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "b98fe6c908e77b5f9da5b9a6a3de45a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f033fdb1fbcc254999fcc3\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nYour cart currently isn't visible on the webpage To make it visible, start by adding an event listener to the cartBtn variable, listening for the click event The callback does not need any parameters --hints--\nYou should add an event listener to the cartBtn variable js\nassert match(code, /cartBtn\\s*\\ \\s*addEventListener\\s*\\(/);\nYou should listen for a click event on the cartBtn variable js\nassert match(code, /cartBtn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*/);\nYou should add an empty callback function (using arrow syntax) to the event listener Remember that it does not need any parameters js\nassert match(code, /cartBtn\\s*\\ \\s*addEventListener\\s*\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "de798fe4a119876ffa56be83e3c9d2e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; }dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "feecbf7e8c12126645333477c9e32619",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "85947154c352300df9921e6dbb97768d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "31885ed7c18b07397e9479447a2348a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7232,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f033fdb1fbcc254999fcc3.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "505683d77d15b7051150abd04d894248",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03446c2ed3e264be6c7fc\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nStart by inverting the value of isCartShowing Remember that you can use the logical not operator to invert the value of a boolean Assign the inverted value to isCartShowing --hints--\nYou should invert the value of isCartShowing js\nassert match(code, / isCartShowing/);\nYou should assign the inverted value of isCartShowing to isCartShowing js\nassert match(code, /isCartShowing\\s*=\\s* isCartShowing/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8ed5f5c17586d7580c9546c118aec944",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "a3c8a27cfab2feb5a2d391e7e60f6336",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "35350f51415f9902ebaa29fabffeceac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "ee79e46314bcb965e97efd82f1ad8e54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6956,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03446c2ed3e264be6c7fc.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "d8418dbfe4fa46be67177f5fec229096",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f02c6e18773921ba50aa53\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nBecause of the way computers store and work with numbers, calculations involving decimal numbers can result in some strange behavior For example, 0 1 + 0 2 is not equal to 0 3 This is because computers store decimal numbers as binary fractions, and some binary fractions cannot be represented exactly as decimal fractions We want to clean up the number result from your calculation Wrap your calculation in parentheses (don't include the return statement ) and call the toFixed() method on it Pass the toFixed() method the number 2 as an argument This will round the number to two decimal places and return a string --hints--\nYou should wrap your calculation in parentheses js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)/)\nYou should call the toFixed() method on your calculation js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\ \\s*toFixed\\(/)\nYou should pass the toFixed() method the number 2 as an argument js\nconst afterCalculateTaxes = code split('calculateTaxes')[1];\nassert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "cfa3d7802ae641399bf3e3a869cf648f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "as an argument This will round the number to two decimal places and return a string --hints-- You should wrap your calculation in parentheses js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)/) You should call the toFixed() method on your calculation js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\ \\s*toFixed\\(/) You should pass the toFixed() method the number 2 as an argument js const afterCalculateTaxes = code split('calculateTaxes')[1]; assert match(afterCalculateTaxes, /return\\s*\\(\\s*\\(\\s*this\\s*\\ \\s*taxRate\\s*\\/\\s*100\\s*\\)\\s*\\*\\s*amount\\s*\\)\\s*\\\\s*toFixed\\s*\\(\\s*2\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "df4777a426e2538553ce45e456c2749c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "531f75c664fb77b3aa5b1428079b620c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "d5de0ec8bd1fff8dbd31cacfd016f46e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "2f2553fe4c5e8d93c00a7284f7374089",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn (this taxRate / 100) * amount;\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "9b2abc42ca718bf873842baf90dc7a67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- calculateTaxes(amount) { return (this taxRate / 100) * amount; } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + itemprice, 0);\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8398,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f02c6e18773921ba50aa53.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "f2087c240f8ea40c39f05bce1ef28ea3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f034d012f74627ce538d3a\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nFinally, update the display property of the style object of the cartContainer variable to another ternary which checks if isCartShowing is true If it is, set the display property to \"block\", otherwise set it to \"none\" Now you should be able to see your cart and add items to it --hints--\nYou should access the display property of the style property of the cartContainer variable js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display/)\nYou should use the assignment operator on the display property of the style property of the cartContainer variable js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*/)\nYou should use ternary syntax to check if isCartShowing is true js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*/)\nYou should set the display property of the style property of the cartContainer variable to \"block\" if isCartShowing is true js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)block\\1\\s*:\\s*/)\nYou should set the display property of the style property of the cartContainer variable to \"none\" if isCartShowing is false js\nassert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "37c172fdcf07d44730f8290eec3dd92d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*/) You should use ternary syntax to check if isCartShowing is true js assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*/) You should set the display property of the style property of the cartContainer variable to \"block\" if isCartShowing is true js assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)block\\1\\s*:\\s*/) You should set the display property of the style property of the cartContainer variable to \"none\" if isCartShowing is false js assert match(code, /cartContainer\\s*\\ \\s*style\\s*\\ \\s*display\\s*=\\s*isCartShowing\\s*\\\\s*('|\"|`)block\\1\\s*:\\s*('|\"|`)none\\2/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "995ed43d0d620489aa330815a544072b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; }dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "170b026b2b1919617d034e6e8f7b9642",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "35225c72bd81d7b19439dc1d250ca421",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "7136e7c8b56afdced313cf90febe99e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f034d012f74627ce538d3a.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "5bbaea51e2589ec73dfc4d2deed57f95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0348a54a177272071a595\ntitle: Step 39\nchallengeType: 0\ndashedName: step-39\n--description--\nNow assign the textContent of the showHideCartSpan variable the result of a ternary expression which checks if isCartShowing is true If it is, set the textContent to \"Hide\", otherwise set it to \"Show\" --hints--\nYou should use the assignment operator on the textContent property of the showHideCartSpan variable js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*/)\nYou should use ternary syntax to check if isCartShowing is true js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*/)\nYou should set the textContent of the showHideCartSpan variable to \"Hide\" if isCartShowing is true js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)Hide\\1\\s*:\\s*/)\nYou should set the textContent of the showHideCartSpan variable to \"Show\" if isCartShowing is false js\nassert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)Hide\\1\\s*:\\s*('|\"|`)Show\\2/)\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "4807f1150d14fccd084fac9891e31539",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "to \"Show\" if isCartShowing is false js assert match(code, /showHideCartSpan\\s*\\ \\s*textContent\\s*=\\s*isCartShowing\\s*\\ \\s*('|\"|`)Hide\\1\\s*:\\s*('|\"|`)Show\\2/) --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "10cc61e6f502d115d3626487a0a50570",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "590a48779296ed3ef40dbcb5a29886a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "67433669f93875e59bed945f78c76f5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "420254decd52b5a810ea427b2c81e3bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainerinnerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\n});\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7590,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0348a54a177272071a595.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "b9f9103530e94a58065cee8da83d3dec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03686c5ea863533ec71f4\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nDeclare a variable tax and assign it the value of calling your new calculateTaxes() method, passing subTotal as the argument --hints--\nUse const to declare a variable named tax js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /const\\s+tax\\s*=/);\nAssign the value of calling your new calculateTaxes() method, passing subTotal as the argument, to the tax variable Remember to use the this keyword js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /const\\s+tax\\s*=\\s*this\\s*\\ \\s*calculateTaxes\\s*\\(\\s*subTotal\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "1e6567890010126f1df98d7f467158de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "a827e4f6ee61651bb734e2f893aeb5f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "9aba7a4494425ef38d4ba9aec094b897",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "6469bf618797546c7ffb5b13d61adf69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "34b5ef6892373bdc5f7aefe1234959ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p>${price}</p> </div> `; } getCounts() { return this items length; } calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); } --fcc-editable-region-- }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); }) } ); cartBtnaddEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7651,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03686c5ea863533ec71f4.md",
      "source_type": "git_repo"
    },
    "token_count": 205,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "70ace4f95ef23504bcd783379056032a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f036ec91fdf238c90665f5\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nUpdate the total value to be the sum of the subTotal and tax values --hints--\nYou should update the total value Remember to use the this keyword js\nassert match(cart calculateTotal toString(), /this\\ total/);\nYou should set the total value to be the sum of the subTotal and tax values js\nassert match(cart calculateTotal toString(), /this\\ total\\s*=\\s*(subTotal\\s*\\+\\s*tax|tax\\s*\\+\\s*subTotal)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "65a6b0b6f4edcdf8e22213653dceec3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "36123c96d4d57035c1330950d937d6f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3c915de12df35e771b369ef0a6a57493",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9bc2d057110d697c2ae5d2a47645a1d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7479,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f036ec91fdf238c90665f5.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a5788a53aa7d708b8be0ed5312e343cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0370b340915399d31e5eb\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nYou're going to update the HTML in this method as well Set the textContent of the cartSubTotal to be the value of subTotal to a fixed 2 decimal places Use template literal syntax to add the dollar sign to the beginning of the value --hints--\nYou should access the textContent property of the cartSubTotal element js\nassert match(cart calculateTotal toString(), /cartSubTotal\\ textContent/);\nYou should call the toFixed() method on the subTotal variable, passing 2 as the argument js\nassert match(cart calculateTotal toString(), /subTotal\\ toFixed\\(\\s*2\\s*\\)/);\nYou should use template literal syntax to add the dollar sign before your toFixed() call js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /`\\$\\$\\{subTotal\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should set the textContent of the cartSubTotal element to your template string js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /cartSubTotal\\ textContent\\s*=\\s*`\\$\\$\\{subTotal\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "fc09a8b47ad5040f4c7cce595ca7cdd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "string js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /cartSubTotal\\ textContent\\s*=\\s*`\\$\\$\\{subTotal\\ toFixed\\(\\s*2\\s*\\)\\}\\`/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "49af048acea800ee6b8dc0b55f28e7e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "d87660d22c2a81d59cf24fb199ab2500",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "ad0fdcef8c04b221c7f8e9a6634f0c0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "d9cdb0db051d13056003b377270ff9eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8193,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0370b340915399d31e5eb.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "8793981dd1b39799916a26656806f32e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0374d5351223a747c301d\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nFollowing the same pattern as your cartSubTotal, update the cartTaxes to display the tax value, and your cartTotal to display the total property --hints--\nYou should access the textContent property of the cartTaxes element js\nassert match(cart calculateTotal toString(), /cartTaxes\\ textContent/);\nYou should call the toFixed() method on the tax variable, passing 2 as the argument js\nassert match(cart calculateTotal toString(), /tax\\ toFixed\\(\\s*2\\s*\\)/);\nYou should use template literal syntax to add the dollar sign before your toFixed() call js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /`\\$\\$\\{tax\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should set the textContent of the cartTaxes element to tax toFixed template string js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /cartTaxes\\ textContent\\s*=\\s*`\\$\\$\\{tax\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should access the textContent property of the cartTotal element js\nassert match(cart calculateTotal toString(), /cartTotal\\ textContent/);\nYou should call the toFixed() method on the total variable, passing 2 as the argument Remember to use the this keyword js\nassert match(cart calculateTotal toString(), /this\\ total\\ toFixed\\(\\s*2\\s*\\)/);\nYou should use template literal syntax to add the dollar sign before your toFixed() call js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /`\\$\\$\\{this\\ total\\ toFixed\\(\\s*2\\s*\\)\\}\\`/);\nYou should set the textContent of the cartTotal element to your total toFixed template string js\nconst afterCalculateTotal = code split('calculateTotal')[1];\nassert match(afterCalculateTotal, /cartTotal\\ textContent\\s*=\\s*`\\$\\$\\{this\\ total\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "5be5e54a9f753c5730671cab487d19dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "method on the total variable, passing 2 as the argument Remember to use the this keyword js assert match(cart calculateTotal toString(), /this\\ total\\ toFixed\\(\\s*2\\s*\\)/); You should use template literal syntax to add the dollar sign before your toFixed() call js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /`\\$\\$\\{this\\ total\\ toFixed\\(\\s*2\\s*\\)\\}\\`/); You should set the textContent of the cartTotal element to your total toFixed template string js const afterCalculateTotal = code split('calculateTotal')[1]; assert match(afterCalculateTotal, /cartTotal\\ textContent\\s*=\\s*`\\$\\$\\{this\\ total\\toFixed\\(\\s*2\\s*\\)\\}\\`/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "35ba33d9d2972feeccb0fc6e8441f42d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "68ff6b87dbbbca1684745a8fcf7b1a3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "7ea7fd34723abcddaaa3eb40c6294138",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "962c54f2e23d4e72b74b3506b6192307",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "8ebf2ad85073bbca5685e37894117af8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } --fcc-editable-region-- calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); const tax = this calculateTaxes(subTotal); this total = subTotal + tax; cartSubTotal textContent = $${subTotal toFixed(2)}; } --fcc-editable-region-- }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btnaddEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0374d5351223a747c301d.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "929fe8d4af7add07c5d2887687c044f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f0378e173e3c3b7638b528\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nFinally, return the value of the total property Remember your this keyword --hints--\nYour calculateTotal method should return the value of the total property js\nassert equal(cart calculateTotal(), 0);\ncart addItem(1, products);\nassert approximately(cart calculateTotal(), 14 06, 0 1);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "5069066b9cd02fd6fef15398f8fccce3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "390fd88d9cc518e5389243e6f47c5fde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "9bdaaa5caae3c64887736a5603fe12c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "cbb2552391f73948ef61eff2d7296d34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\n--fcc-editable-region--\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\n}\n--fcc-editable-region--\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7547,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f0378e173e3c3b7638b528.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3e9b9ba4b506a980164a916b3f35da37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f039dbcef7673e4e758fa3\ntitle: Step 56\nchallengeType: 0\ndashedName: step-56\n--description--\nBrowsers have a built-in confirm() function which displays a confirmation prompt to the user confirm() accepts a string, which is the message displayed to the user It returns true if the user confirms, and false if the user cancels Declare a variable isCartCleared and assign it the value of calling confirm() with the string \"Are you sure you want to clear all items from your shopping cart \" --hints--\nYou should use const to declare the isCartCleared variable js\nconst afterClearCart = code split('clearCart()')[1];\nassert match(afterClearCart, /const\\s+isCartCleared\\s*=/);\nYou should call the confirm() function js\nassert match(cart clearCart toString(), /confirm\\s*\\(/);\nYou should pass the string Are you sure you want to clear all items from your shopping cart to the confirm() function js\nassert match(cart clearCart toString(), /confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\ \\1\\s*\\)/);\nYou should assign the value of the confirm() function to the isCartCleared variable js\nassert match(cart clearCart toString(), /isCartCleared\\s*=\\s*confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "a0019f39e096be55edd36a70162f2fdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "match(cart clearCart toString(), /confirm\\s*\\(/); You should pass the string Are you sure you want to clear all items from your shopping cart to the confirm() function js assert match(cart clearCart toString(), /confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\ \\1\\s*\\)/); You should assign the value of the confirm() function to the isCartCleared variable js assert match(cart clearCart toString(), /isCartCleared\\s*=\\s*confirm\\s*\\(\\s*('|\"|`)Are you sure you want to clear all items from your shopping cart\\\\1\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "b1e4154a73e883f1a5a16520197c0893",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "#fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "46261d12c070deba3b3cd9364e30d17c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = documentgetElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "f9c0142e84df3a82dd254d6629916ff7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 10 99, category: \"Pretzel\", }, { id: 6, name: \"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 299,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "0e91bb488094de0e6cdd83761fc7ab79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 8 25; } addItem(id, products) { const product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpantextContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8677,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f039dbcef7673e4e758fa3.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "7765f2620993d8b71c00f0cef2eedcc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f038a0ae041d3c5b0cdf23\ntitle: Step 54\nchallengeType: 0\ndashedName: step-54\n--description--\nYour last feature is to allow users to clear their cart Add a clearCart() method to your ShoppingCart class --hints--\nYour ShoppingCart class should have a clearCart method js\nassert isFunction(cart clearCart);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c373072a1d0c674209313fb9dd80790e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "645b854ec0a31bb19424164fa9747be2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "f042f38074cd860b495a75ef0152438c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "e8c477c548476b6343d2c16c61d883b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\n--fcc-editable-region--\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038a0ae041d3c5b0cdf23.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "4f56fc2582cae5531fefc510793f05c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f038e671d3f73d5a041973\ntitle: Step 55\nchallengeType: 0\ndashedName: step-55\n--description--\nThe first thing you should do is check if the items array is empty If it is, display an alert to the user with the text Your shopping cart is already empty, then return from the function Remember that 0 is a falsy value, so you can use the operator to check if the array is empty After displaying the alert, return from the function to stop execution --hints--\nYou should create an if statement that checks if the items array is empty, using the negation operator js\nassert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)/);\nYour if statement should display an alert to the user with the text Your shopping cart is already empty js\nassert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*( :window\\ |globalThis\\ ) alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*/);\nYour if statement should return from the function js\nassert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*( :window\\ |globalThis\\ ) alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*; \\s*return\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "011419385b4d544e5f737721a67e4611",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "the negation operator js assert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)/); Your if statement should display an alert to the user with the text Your shopping cart is already empty js assert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*( :window\\ |globalThis\\ ) alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*/); Your if statement should return from the function js assert match(cart clearCart toString(), /if\\s*\\(\\s* \\s*this\\s*\\ \\s*items\\s*\\ \\s*length\\s*\\)\\s*\\{\\s*( :window\\ |globalThis\\ ) alert\\s*\\(\\s*('|\"|`)Your shopping cart is already empty\\1\\s*\\)\\s*; \\s*return\\s*;\\s*\\}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "e44089eb6e9fc8ae1fe0b950f45e1c14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "*::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 12rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "ae80ed648bd00b322027339af19ec529",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "b3844c6805d47c3849ae70207c382e23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "3179fe1cf415c39c372118f73a7fb5e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "3508660dd58bcbf521db82eee42e4982",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "<p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } --fcc-editable-region-- clearCart() { } --fcc-editable-region-- calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); const tax = this calculateTaxes(subTotal); this total = subTotal + tax; cartSubTotal textContent = $${subTotal toFixed(2)}; cartTaxes textContent = $${tax toFixed(2)}; cartTotal textContent = $${this total toFixed(2)}; return thistotal;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8506,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f038e671d3f73d5a041973.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "81675f05cc589781c81e4dc7ab4cbe5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03a7143a6ef3f7f3344f0\ntitle: Step 57\nchallengeType: 0\ndashedName: step-57\n--description--\nYou only want to clear the cart if the user confirms the prompt Create an if statement that checks if the user confirmed the prompt In the if statement, set the items property back to an empty array, then set the total property to 0 --hints--\nYou should create an if statement that checks if the user confirmed the prompt Remember that you can check the truthiness of isCartCleared directly js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)/);\nYour if statement should set the items property back to an empty array js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]/);\nYour if statement should set the total property to 0 js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]\\s*; \\s*this\\s*\\ \\s*total\\s*=\\s*0\\s*; \\s*}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "8f243120a59b5d85accd43ecdbb9adb6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "to 0 js assert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]\\s*; \\s*this\\s*\\ \\s*total\\s*=\\s*0\\s*; \\s*}/); --seed-- --seed-contents-- ```html freeCodeCamp Shopping Cart Desserts Page Show Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); }title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "342db42fc6c578c8d6401ed502739d8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "}title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "94d6c2e90ca4f0df28bd3b74be569a2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d701e0684d0cdea9622ec03f62a54bf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4da44eca0d0cdc1ef1541da3c50061fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03a7143a6ef3f7f3344f0.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "b2fc409c09268af727046405a03bf195",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03ac2b428b2404a5a7518\ntitle: Step 58\nchallengeType: 0\ndashedName: step-58\n--description--\nYou also need to start clearing the HTML Set the innerHTML property of the productsContainer back to an empty string --hints--\nIn your if statement, you should set the innerHTML property of the productsContainer back to an empty string js\nassert match(cart clearCart toString(), /if\\s*\\(\\s*isCartCleared\\s*\\)\\s*{\\s*this\\s*\\ \\s*items\\s*=\\s*\\[\\s*\\]\\s*; \\s*this\\s*\\ \\s*total\\s*=\\s*0\\s*; \\s*productsContainer\\ innerHTML\\s*=\\s*('|\"|`)\\1\\s*; \\s*}/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "c3962ebeb3a064109b67d81ac804bcd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "a6030312eae2c676b19812fb8a8e8b84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "2cb5d03bb95e5afcf004ae1aa1b94224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d4bf20a9d0c31faca3f7b885fabc15c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis total = 0;\n}\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "821152f659e09e90929816ddc26b6dfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "( this items length) { alert(\"Your shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; this total = 0; } } --fcc-editable-region-- calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = this items reduce((total, item) => total + item price, 0); const tax = thiscalculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03ac2b428b2404a5a7518.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "eb1ec277a67b7606e387ca440b1ed004",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f6721d5110af243ef8f3d9\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nNow call your calculateTotal() method inside your forEach loop --hints--\nYou should call cart calculateTotal() inside your forEach loop js\nconst afterForEach = code split('[ addToCartBtns] forEach(')[1];\nassert match(afterForEach, /cart\\ calculateTotal\\(\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "799f363b4aaac5c2a9e7b37996d97c19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; } btn { display: block; cursor: pointer; width: 100px; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; }add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "1769b731b6cb1d3167f1a66f35b6fa06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; } dessert-card { flex: 1 0 21%; } #cart-container { width: 300px; } } ``` ```js const cartContainer = document getElementById(\"cart-container\"); const productsContainer = document getElementById(\"products-container\"); const dessertCards = document getElementById(\"dessert-card-container\"); const cartBtn = document getElementById(\"cart-btn\"); const clearCartBtn = document getElementById(\"clear-cart-btn\"); const totalNumberOfItems = document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = documentgetElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a69da9e67f7d74754ce40fa71dda20fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "\"Strawberry Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 7, name: \"Chocolate Macarons (4 Pack)\", price: 9 99, category: \"Macaron\", }, { id: 8, name: \"Strawberry Pretzel\", price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 1199,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6c206d3f00f3a8129d133e70a9191f48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "product = products find((item) => item id === id); const { name, price } = product; this items push(product); const totalCountPerProduct = {}; this items forEach((dessert) => { totalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1; }) const currentProductCount = totalCountPerProduct[product id]; const currentProductCountSpan = document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return thisitems length;\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n--fcc-editable-region--\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\n})\n}\n);\n--fcc-editable-region--\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7550,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f6721d5110af243ef8f3d9.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3dd2e9b1923c94e8d488379304c931e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03af535682e4138fdb915\ntitle: Step 59\nchallengeType: 0\ndashedName: step-59\n--description--\nSet the textContent of the totalNumberOfItems, cartSubTotal, cartTaxes, and cartTotal elements all to the number 0 --hints--\nYou should set the textContent of the totalNumberOfItems element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /totalNumberOfItems\\ textContent\\s*=\\s*0/);\nYou should set the textContent of the cartSubTotal element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /cartSubTotal\\ textContent\\s*=\\s*0/);\nYou should set the textContent of the cartTaxes element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /cartTaxes\\ textContent\\s*=\\s*0/);\nYou should set the textContent of the cartTotal element to 0 js\nconst secondIf = cart clearCart toString() split('if')[2];\nconst inIf = secondIf split('}')[0];\nassert match(inIf, /cartTotal\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "d5086a2c7ceb73034d4bb843f187dd52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "cartSubTotal element to 0 js const secondIf = cart clearCart toString() split('if')[2]; const inIf = secondIf split('}')[0]; assert match(inIf, /cartSubTotal\\ textContent\\s*=\\s*0/); You should set the textContent of the cartTaxes element to 0 js const secondIf = cart clearCart toString() split('if')[2]; const inIf = secondIf split('}')[0]; assert match(inIf, /cartTaxes\\ textContent\\s*=\\s*0/); You should set the textContent of the cartTotal element to 0 js const secondIf = cart clearCart toString() split('if')[2]; const inIf = secondIf split('}')[0]; assert match(inIf, /cartTotal\\textContent\\s*=\\s*0/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "e326f76ba88dbec356d75668b2319b8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "ac54430a912b6dc7e81450b83cbb9e82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "357c0197372874eba1fdbc0e9619d243",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "e755f23da92f3dff127926ec5fe47dae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\n--fcc-editable-region--\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis total = 0;\nproductsContainer innerHTML = \"\";\n}\n}\n--fcc-editable-region--\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "e20de4a7a8f239cc6c8d24de608cfb1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "{ if ( this items length) { alert(\"Your shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; this total = 0; productsContainer innerHTML = \"\"; } } --fcc-editable-region-- calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = this items reduce((total, item) => total + itemprice, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8733,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03af535682e4138fdb915.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "158f0e270d61b54b88f100a9e371480f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 63f03b1ed5ab15420c057463\ntitle: Step 60\nchallengeType: 0\ndashedName: step-60\n--description--\nYour final step is to make your clear button functional Add a click event listener to the clearCartBtn For the callback, you can pass in cart clearCart directly However, doing so will not work, because the context of this will be the clearCartBtn element You need to bind the clearCart method to the cart object You can do this by passing cart clearCart bind(cart) as the callback And with that, your shopping cart project is complete --hints--\nYou should add an event listener to your clearCartBtn element js\nassert match(code, /clearCartBtn\\ addEventListener\\(/);\nYour event listener should listen for the click event js\nassert match(code, /clearCartBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,/);\nYour event listener should take cart clearCart bind(cart) as the callback js\nassert match(code, /clearCartBtn\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*cart\\ clearCart\\s*\\ bind\\(\\s*cart\\s*\\)\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "61c4dee284a695ee964c03b27201ac69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "Cart Clear Cart Total number of items: 0 Subtotal: $0 Taxes: $0 Total: $0 ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; }dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n} btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "cb6a5b138a335eaaba862ca994c0657a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 3px; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; }product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n} dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "05e03820486bd0336ac7ea59de21567b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(\"total-items\"); const cartSubTotal = document getElementById(\"subtotal\"); const cartTaxes = document getElementById(\"taxes\"); const cartTotal = document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 599,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10 99,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "09ca0b1825d7b28212775568fb12fdc7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "price: 4 99, category: \"Pretzel\", }, { id: 9, name: \"Butter Pecan Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 10, name: \"Rocky Road Ice Cream\", price: 2 99, category: \"Ice Cream\", }, { id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCardsinnerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8 25;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "5742a1e28813b28d5145ba4181f8ba4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "document getElementById(`product-count-for-id${id}`); currentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x` : productsContainer innerHTML += ` <div id=\"dessert${id}\" class=\"product\"> <p> <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name} </p> <p>${price}</p> </div> `; } getCounts() { return this items length; } clearCart() { if ( this items length) { alert(\"Your shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; thistotal = 0;\nproductsContainer innerHTML = \"\";\ntotalNumberOfItems textContent = 0;\ncartSubTotal textContent = 0;\ncartTaxes textContent = 0;\ncartTotal textContent = 0;\n}\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this items reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "341a40d5c3ecf838d2cbc62892ba854f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "textContent = $${subTotal toFixed(2)}; cartTaxes textContent = $${tax toFixed(2)}; cartTotal textContent = $${this total toFixed(2)}; return this total; } }; const cart = new ShoppingCart(); const addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\"); [ addToCartBtns] forEach( (btn) => { btn addEventListener(\"click\", (event) => { cart addItem(Number(event target id), products); totalNumberOfItems textContent = cart getCounts(); cart calculateTotal(); }) } ); cartBtn addEventListener(\"click\", () => { isCartShowing = isCartShowing; showHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\"; cartContainer style display = isCartShowing\"block\" : \"none\";\n});\n--fcc-editable-region--\n--fcc-editable-region--\n```\n--solutions--\n```html\nfreeCodeCamp Shopping Cart\nDesserts Page\nShow Cart\nClear Cart\nTotal number of items: 0\nSubtotal: $0\nTaxes: $0\nTotal: $0\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--black: #000;\n--white: #fff;\n--grey: #3b3b4f;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n}\nbody {\nbackground-color: var(--dark-grey);\n} title {\ncolor: var(--light-grey);\ntext-align: center;\nmargin: 25px 0;\n}\ndessert-card-container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nalign-items: center;\n} dessert-card {\nbackground-color: var(--light-grey);\npadding: 15px;\ntext-align: center;\nborder-radius: 15px;\nmargin: 20px 10px;\n} dessert-price {\nfont-size: 1 2rem;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "7d2ce37a517c6916ba8d83972bee1e14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "margin: 0; padding: 0; box-sizing: border-box; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --black: #000; --white: #fff; --grey: #3b3b4f; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; } body { background-color: var(--dark-grey); } title { color: var(--light-grey); text-align: center; margin: 25px 0; } dessert-card-container { display: flex; flex-direction: column; flex-wrap: wrap; align-items: center; } dessert-card { background-color: var(--light-grey); padding: 15px; text-align: center; border-radius: 15px; margin: 20px 10px; } dessert-price { font-size: 1 2rem; }btn {\ndisplay: block;\ncursor: pointer;\nwidth: 100px;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\ncart-btn {\nposition: absolute;\ntop: 0;\nright: 0;\n} add-to-cart-btn {\nmargin: 30px auto 10px;\n}\ncart-container {\ndisplay: none;\nposition: absolute;\ntop: 60px;\nright: 0;\nbackground-color: var(--light-grey);\nwidth: 200px;\nheight: 400px;\nborder: 8px double var(--black);\nborder-radius: 15px;\ntext-align: center;\nfont-size: 1 2rem;\noverflow-y: scroll;\n} product {\nmargin: 25px 0;\n} product-count {\ndisplay: inline-block;\nmargin-right: 10px;\n} product-category {\nmargin: 10px 0;\n}\n@media (min-width: 768px) {\n#dessert-card-container {\nflex-direction: row;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "e99c09c52ade779ce6c0f578a39e4aa4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "var(--dark-orange)); } cart-btn { position: absolute; top: 0; right: 0; } add-to-cart-btn { margin: 30px auto 10px; } cart-container { display: none; position: absolute; top: 60px; right: 0; background-color: var(--light-grey); width: 200px; height: 400px; border: 8px double var(--black); border-radius: 15px; text-align: center; font-size: 1 2rem; overflow-y: scroll; } product { margin: 25px 0; } product-count { display: inline-block; margin-right: 10px; } product-category { margin: 10px 0; } @media (min-width: 768px) { #dessert-card-container { flex-direction: row; }dessert-card {\nflex: 1 0 21%;\n}\n#cart-container {\nwidth: 300px;\n}\n}\n```\n```js\nconst cartContainer = document getElementById(\"cart-container\");\nconst productsContainer = document getElementById(\"products-container\");\nconst dessertCards = document getElementById(\"dessert-card-container\");\nconst cartBtn = document getElementById(\"cart-btn\");\nconst clearCartBtn = document getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document getElementById(\"total-items\");\nconst cartSubTotal = document getElementById(\"subtotal\");\nconst cartTaxes = document getElementById(\"taxes\");\nconst cartTotal = document getElementById(\"total\");\nconst showHideCartSpan = document getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\nconst products = [\n{\nid: 1,\nname: \"Vanilla Cupcakes (6 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n{\nid: 2,\nname: \"French Macaron\",\nprice: 3 99,\ncategory: \"Macaron\",\n},\n{\nid: 3,\nname: \"Pumpkin Cupcake\",\nprice: 3 99,\ncategory: \"Cupcake\",\n},\n{\nid: 4,\nname: \"Chocolate Cupcake\",\nprice: 5 99,\ncategory: \"Cupcake\",\n},\n{\nid: 5,\nname: \"Chocolate Pretzels (4 Pack)\",\nprice: 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "2b982d6f0c8408d0f55b69bfef686b97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "= document getElementById(\"total\"); const showHideCartSpan = document getElementById(\"show-hide-cart\"); let isCartShowing = false; const products = [ { id: 1, name: \"Vanilla Cupcakes (6 Pack)\", price: 12 99, category: \"Cupcake\", }, { id: 2, name: \"French Macaron\", price: 3 99, category: \"Macaron\", }, { id: 3, name: \"Pumpkin Cupcake\", price: 3 99, category: \"Cupcake\", }, { id: 4, name: \"Chocolate Cupcake\", price: 5 99, category: \"Cupcake\", }, { id: 5, name: \"Chocolate Pretzels (4 Pack)\", price: 1099,\ncategory: \"Pretzel\",\n},\n{\nid: 6,\nname: \"Strawberry Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 7,\nname: \"Chocolate Macarons (4 Pack)\",\nprice: 9 99,\ncategory: \"Macaron\",\n},\n{\nid: 8,\nname: \"Strawberry Pretzel\",\nprice: 4 99,\ncategory: \"Pretzel\",\n},\n{\nid: 9,\nname: \"Butter Pecan Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 10,\nname: \"Rocky Road Ice Cream\",\nprice: 2 99,\ncategory: \"Ice Cream\",\n},\n{\nid: 11,\nname: \"Vanilla Macarons (5 Pack)\",\nprice: 11 99,\ncategory: \"Macaron\",\n},\n{\nid: 12,\nname: \"Lemon Cupcakes (4 Pack)\",\nprice: 12 99,\ncategory: \"Cupcake\",\n},\n];\nproducts forEach(\n({ name, id, price, category }) => {\ndessertCards innerHTML += <div class=\"dessert-card\">\n<h2>${name}</h2>\n<p class=\"dessert-price\">$${price}</p>\n<p class=\"product-category\">Category: ${category}</p>\n<button\nid=\"${id}\"\nclass=\"btn add-to-cart-btn\">Add to cart\n</button>\n</div>;\n}\n);\nclass ShoppingCart {\nconstructor() {\nthis items = [];\nthis total = 0;\nthis taxRate = 8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "23546367df29929092565174937be7f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "id: 11, name: \"Vanilla Macarons (5 Pack)\", price: 11 99, category: \"Macaron\", }, { id: 12, name: \"Lemon Cupcakes (4 Pack)\", price: 12 99, category: \"Cupcake\", }, ]; products forEach( ({ name, id, price, category }) => { dessertCards innerHTML += <div class=\"dessert-card\"> <h2>${name}</h2> <p class=\"dessert-price\">$${price}</p> <p class=\"product-category\">Category: ${category}</p> <button id=\"${id}\" class=\"btn add-to-cart-btn\">Add to cart </button> </div>; } ); class ShoppingCart { constructor() { this items = []; this total = 0; this taxRate = 825;\n}\naddItem(id, products) {\nconst product = products find((item) => item id === id);\nconst { name, price } = product;\nthis items push(product);\nconst totalCountPerProduct = {};\nthis items forEach((dessert) => {\ntotalCountPerProduct[dessert id] = (totalCountPerProduct[dessert id] || 0) + 1;\n})\nconst currentProductCount = totalCountPerProduct[product id];\nconst currentProductCountSpan = document getElementById(`product-count-for-id${id}`);\ncurrentProductCount > 1 currentProductCountSpan textContent = `${currentProductCount}x`\n: productsContainer innerHTML += `\n<div id=\"dessert${id}\" class=\"product\">\n<p>\n<span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n</p>\n<p>${price}</p>\n</div>\n`;\n}\ngetCounts() {\nreturn this items length;\n}\nclearCart() {\nif ( this items length) {\nalert(\"Your shopping cart is already empty\");\nreturn;\n}\nconst isCartCleared = confirm(\n\"Are you sure you want to clear all items from your shopping cart \"\n);\nif (isCartCleared) {\nthis items = [];\nthis total = 0;\nproductsContainer innerHTML = \"\";\ntotalNumberOfItems textContent = 0;\ncartSubTotal textContent = 0;\ncartTaxes textContent = 0;\ncartTotal textContent = 0;\n}\n}\ncalculateTaxes(amount) {\nreturn parseFloat(((this taxRate / 100) * amount) toFixed(2));\n}\ncalculateTotal() {\nconst subTotal = this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "b21ee692ea1a9eebefcf3edbce5eac66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp Shopping Cart",
    "content": "shopping cart is already empty\"); return; } const isCartCleared = confirm( \"Are you sure you want to clear all items from your shopping cart \" ); if (isCartCleared) { this items = []; this total = 0; productsContainer innerHTML = \"\"; totalNumberOfItems textContent = 0; cartSubTotal textContent = 0; cartTaxes textContent = 0; cartTotal textContent = 0; } } calculateTaxes(amount) { return parseFloat(((this taxRate / 100) * amount) toFixed(2)); } calculateTotal() { const subTotal = thisitems reduce((total, item) => total + item price, 0);\nconst tax = this calculateTaxes(subTotal);\nthis total = subTotal + tax;\ncartSubTotal textContent = $${subTotal toFixed(2)};\ncartTaxes textContent = $${tax toFixed(2)};\ncartTotal textContent = $${this total toFixed(2)};\nreturn this total;\n}\n};\nconst cart = new ShoppingCart();\nconst addToCartBtns = document getElementsByClassName(\"add-to-cart-btn\");\n[ addToCartBtns] forEach(\n(btn) => {\nbtn addEventListener(\"click\", (event) => {\ncart addItem(Number(event target id), products);\ntotalNumberOfItems textContent = cart getCounts();\ncart calculateTotal();\n})\n}\n);\ncartBtn addEventListener(\"click\", () => {\nisCartShowing = isCartShowing;\nshowHideCartSpan textContent = isCartShowing \"Hide\" : \"Show\";\ncartContainer style display = isCartShowing \"block\" : \"none\";\n});\nclearCartBtn addEventListener(\"click\", cart clearCart bind(cart));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-oop-by-building-a-shopping-cart\\63f03b1ed5ab15420c057463.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "8f49bf71e078343b31c626a754b9fcd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 652f948489abbb81e6bf5a01\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this project you will learn basic string and array methods by building a music player app You will be able to play, pause, skip, and shuffle songs The HTML and CSS of this project have been provided for you, so you can focus on the JavaScript Start by accessing the #playlist-songs, #play, and #pause elements with the getElementById() method Assign them to variables playlistSongs, playButton and pauseButton respectively --hints--\nYou should have a variable called playlistSongs js\nassert isDefined(playlistSongs);\nYou should use document getElementById() to get the #playlist-songs element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)playlist\\-songs\\1\\s*\\)/);\nYou should assign the #playlist-songs element to the variable playlistSongs js\nassert equal(playlistSongs, document getElementById('playlist-songs'));\nYou should have a variable called playButton js\nassert isDefined(playButton);\nYou should use document getElementById() to get the #play element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)play\\1\\s*\\)/);\nYou should assign the #play element to the variable playButton js\nassert equal(playButton, document getElementById('play'));\nYou should have a variable called pauseButton js\nassert isDefined(pauseButton);\nYou should use document getElementById() to get the #pause element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)pause\\1\\s*\\)/);\nYou should assign the #pause element to the variable pauseButton js\nassert equal(pauseButton, document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "323ae8268c84dd94c38c28fa50177c4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "a variable called playButton js assert isDefined(playButton); You should use document getElementById() to get the #play element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)play\\1\\s*\\)/); You should assign the #play element to the variable playButton js assert equal(playButton, document getElementById('play')); You should have a variable called pauseButton js assert isDefined(pauseButton); You should use document getElementById() to get the #pause element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)pause\\1\\s*\\)/); You should assign the #pause element to the variable pauseButton js assert equal(pauseButton, documentgetElementById('pause'));\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "1905714aecf4c2cb39f5e34c9102357c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "aeb3278d39d7101019b90bda9f03642f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a618a66e3e277d3c6b97579ce9746b9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "10afd74960a22ccfecd56f9fc4cf192b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "39588f31290c96ad7d5fc4ee28843938",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15933,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652f948489abbb81e6bf5a01.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "d91f7de47061119460b64fe0cf0646b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 652fa2aee6374ad29b5d49b4\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nAccess the #next, #previous and #shuffle elements from the HTML file Assign them to variables named nextButton, previousButton, and shuffleButton, respectively --hints--\nYou should have a variable called nextButton js\nassert isDefined(nextButton);\nYou should use document getElementById() to get the #next element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)next\\1\\s*\\)/);\nYou should assign the #next element to the variable nextButton js\nassert equal(nextButton, document getElementById('next'));\nYou should have a variable called previousButton js\nassert isDefined(previousButton);\nYou should use document getElementById() to get the #previous element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)previous\\1\\s*\\)/);\nYou should assign the #previous element to the variable previousButton js\nassert equal(previousButton, document getElementById('previous'));\nYou should have a variable called shuffleButton js\nassert isDefined(shuffleButton);\nYou should use document getElementById() to get the #shuffle element js\nassert match(code, /document\\ getElementById\\(\\s*('|\"|`)shuffle\\1\\s*\\)/);\nYou should assign the #shuffle element to the variable shuffleButton js\nassert equal(shuffleButton, document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "9546541aead45daa92cb69120f4c6e50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "a variable called previousButton js assert isDefined(previousButton); You should use document getElementById() to get the #previous element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)previous\\1\\s*\\)/); You should assign the #previous element to the variable previousButton js assert equal(previousButton, document getElementById('previous')); You should have a variable called shuffleButton js assert isDefined(shuffleButton); You should use document getElementById() to get the #shuffle element js assert match(code, /document\\ getElementById\\(\\s*('|\"|`)shuffle\\1\\s*\\)/); You should assign the #shuffle element to the variable shuffleButton js assert equal(shuffleButton, documentgetElementById('shuffle'));\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "cbff961cd2ab25eb2041f78dfd8563ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "57db8473cd8c5826369aec462ba542ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "f405a626c227c7b4dcd1c98493a96f71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "0a4ae5e1168bd71f7a4a41004d179a77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "ae10157e6e805658e4e34b6f46e452e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15807,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa2aee6374ad29b5d49b4.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "e1f4820b92d5eebf11e097298f644c2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 652fa3c4968fa9d6f8f6d873\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nNext, create an array to store all the songs Create an empty allSongs array --hints--\nYou should have a variable called allSongs js\nassert isDefined(allSongs)\nYou should assign an array to your allSongs variable js\nassert isArray(allSongs)\nYour array should be empty js\nassert isEmpty(allSongs)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "b2bbacbc9c274872dd1dccbf41fbefa0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); }parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "5a851b78b3423d1a7b6e960a531af26e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "e5ceec94ecdae2ccb5e90db71a3a8e21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "9a812138544f8c6dd3d992ef065e7015",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "13df8116a3bcd8b833742eec2e25519f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14918,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\652fa3c4968fa9d6f8f6d873.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "49e3033aeed3032ebab3c9c9bd265d0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65327e9c7ea42e125256b29a\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nWe've added the rest of the songs to the allSongs array for you Next, you'll learn about the Web Audio API and how to use it to play songs All modern browsers support the Web Audio API, which lets you generate and process audio in web applications Use const to create a variable named audio and set it equal to new Audio() This will create a new HTML5 audio element --hints--\nYou should use the new keyword to create an instance of the Audio object js\nassert match(code, /new\\s+Audio\\(\\s*\\)\\s*; /)\nYou should assign the Audio object to a constant named audio js\nassert match(code, /const\\s+audio\\s*=\\s*new\\s+Audio\\(\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "f3855229a8659192820925c6a71f5af8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); }player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "72a141c48c7ffe6cfc85db6481fcedaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "} parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; }player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "ea8a0a04d8142ca9530ff9936fba6e24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "837276c6cfc3a4575c706d326f95c5f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "99ea9660258e75904443994913e2699d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "ca05eef101d5e9e272eab8a3dd680211",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "00f57cc6045ce2f66351d95e72e3d776",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65327e9c7ea42e125256b29a.md",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "fb66d0c1cc8c8ffdffe053955bfef723",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 653281af14be5f2055310f8e\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nYour music player should keep track of the songs, the current song playing, and the time of the current song To do this, you will need to create an object to store this information Start by using the let keyword to declare a new variable called userData and assign it an empty object --hints--\nYou should use the let keyword to create the userData variable js\nassert match(code, /let\\s+userData\\s*=/)\nYou should assign an empty object to your userData variable js\nassert deepEqual(userData, {});\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "4036e0d821016c2d518686874db0cf32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "2d07ea97c9512443f825738723ebb5a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "7990b2764c9e140035fc45bad7ad7851",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "1a212c3d505223b8cb9b25e952ed1630",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "6a1c1ae01aca50961699599edf7b6d10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "77254642b6154a045c1bc1bd3efcdda1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "= document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "9372ff0ba716d777104558396322b59b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17169,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653281af14be5f2055310f8e.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "54af37c91b7764433866364db3be282e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 653283d07b8f9d294aafa83b\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nIt's time to begin implementing the functionality for playing the displayed songs Define a playSong function using const The function should take an id parameter which will represent the unique identifier of the song you want to play --hints--\nYou should use const to create an empty function named playSong js\nassert match(code, /const\\s+playSong\\s*=\\s*/)\nplaySong should be a function js\nassert isFunction(playSong)\nYour playSong function should use an arrow syntax js\nassert match(code, /const\\s+playSong\\s*=\\s*(\\( *\\)|[^\\s()]+)\\s*=>\\s*/)\nYour playSong function should take an id parameter js\nassert match(code, /const\\s+playSong\\s*=\\s*\\( \\s*id/)\nYour playSong function  should be empty js\nassert match(code, /const\\s+playSong\\s*=\\s*(\\(\\s*id\\s*\\)|id)\\s*=>\\s*\\{\\n \\s* \\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "0923a1042b371bad8d4b59f6d221021c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "d65862a64dccf889e6088f2287a6a2c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "d4c8c42d86b1498cb6616261a1096e79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "770667d4c0390a5bf0fe13340efc9c43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "97dea89406dc4ad77131f0a7b6da4e29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "3faee9a9c3121861fa29434b8dad7a54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "3a924ad6f445c06c38611b921c9ff248",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\n--fcc-editable-region--\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "87d677864f26abfb8b52795d6e2fe389",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "mp3\", }, { id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; --fcc-editable-region-- --fcc-editable-region-- const renderSongs = (array) => { const songsHTML = array map((song)=> { return <li id=\"song-${songid}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 542,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "65628344ef4da8b901a86676fe6fa821",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C628333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19157,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653283d07b8f9d294aafa83b.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "0ed26bd205f7f31df779406e73981948",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 653635c731206b718659d3d5\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nInside the playSong function, set the audio src property equal to song src This tells the audio element where to find the audio data for the selected song Also, set the audio title property equal to song title This tells the audio element what to display as the title of the song --hints--\nYou should not modify the existing playSong function and its content js\nassert match(code, /const\\s+playSong\\s*=\\s*\\(\\s*id\\s*\\)\\s*=>\\s*\\{\\s*const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*\\(\\s*song\\s*\\)\\s*=>\\s*song\\ id\\s*===\\s*id\\s*\\)\\s*; /)\nYou should set audio src to song src js\nassert match(code, /const\\s+playSong\\s*=\\s*\\(\\s*id\\s*\\)\\s*=>\\s*\\{\\s*const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*\\(\\s*song\\s*\\)\\s=>\\s*song\\ id\\s*===\\s*id\\s*\\)\\s*; \\s*audio\\ src\\s*=\\s*song\\ src\\s*; /)\nYou should set audio title to song title js\nassert match(code, /const\\s+playSong\\s*=\\s*\\(\\s*id\\s*\\)\\s*=>\\s*\\{\\s*const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*\\(\\s*song\\s*\\)\\s=>\\s*song\\ id\\s===\\s*id\\s*\\)\\s*; \\s*audio\\ src\\s*=\\s*song\\ src\\s*; \\s*audio\\ title\\s*=\\s*song\\ title\\s*; \\s*\\}\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "f41272fe0e7135ae9833e02f9d9a3e14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "the audio element what to display as the title of the song --hints-- You should not modify the existing playSong function and its content js assert match(code, /const\\s+playSong\\s*=\\s*\\(\\s*id\\s*\\)\\s*=>\\s*\\{\\s*const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*\\(\\s*song\\s*\\)\\s*=>\\s*song\\ id\\s*===\\s*id\\s*\\)\\s*; /) You should set audio src to song src js assert match(code, /const\\s+playSong\\s*=\\s*\\(\\s*id\\s*\\)\\s*=>\\s*\\{\\s*const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*\\(\\s*song\\s*\\)\\s=>\\s*song\\ id\\s*===\\s*id\\s*\\)\\s*; \\s*audio\\ src\\s*=\\s*song\\ src\\s*; /) You should set audio title to song title js assert match(code, /const\\s+playSong\\s*=\\s*\\(\\s*id\\s*\\)\\s*=>\\s*\\{\\s*const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*\\(\\s*song\\s*\\)\\s=>\\s*song\\ id\\s===\\s*id\\s*\\)\\s*; \\s*audio\\ src\\s*=\\s*song\\ src\\s*; \\s*audio\\ title\\s*=\\s*song\\ title\\s*; \\s*\\}\\s*;/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 546,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "c196331d8b54dcae70f03d348a5ec93e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\\s*\\}\\s*;/) --seed-- --seed-contents-- ```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "c7347a01bd533639978a86c785e2acda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "fe304ac368d90f463f51503e3833b18d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "6d8a5d07a68f4dc1a2ae5e17915fd5e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "a9e70188a4b956c0ca2fbff88b147517",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "eee997dc59c9b2846653723de4841ca0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "0d255d99cea8451c73dc06c827244a3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\n--fcc-editable-region--\nconst playSong = (id) => {\nconst song = userData songs find((song) => song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "52de6abb0334ced37bdede995b3bdd14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\", }, { id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; --fcc-editable-region-- const playSong = (id) => { const song = userData songs find((song) => songid === id);\n};\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 529,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "7429edfe308717464205c1377295ce1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\"> <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 105316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653635c731206b718659d3d5.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "97ad42b4702dd6dcd6915589bba7b4c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65362bfd67d61d517deef191\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nThe find() method retrieves the first element within an array that fulfills the conditions specified in the provided callback function If no element satisfies the condition, the method returns undefined In the example below, the find() method is used to find the first number greater than 25:\n```js\nconst numbers = [10, 20, 30, 40, 50];\n// Find the first number greater than 25\nconst foundNumber = numbers find((number) => number > 25);\nconsole log(foundNumber); // Output: 30\n```\nUse const to create a variable named song and assign it result of the find() method call on the userData songs array Use song as the parameter of the find() callback and check if song id is strictly equal to id This will iterate through the userData songs array, searching for a song that corresponds to the id passed into the playSong function --hints--\nYou should use the find method on userData songs js\nassert match(code, /userData\\ \\ songs\\ find\\(/)\nYour find method should have song as the parameter of its arrow function callback js\nassert match(code, /userData\\ \\ songs\\ find\\(\\s*(\\(\\s*song\\s*\\)|song)/)\nYour find method should use strict equality to check if song id is equal to id js\nassert match(code, /userData\\ \\ songs\\ find\\(\\s*(\\(\\s*song\\s*\\)|song)\\s*=>\\s*(song\\ id\\s*===\\s*id|id\\s*===\\s*song\\ id)\\s*\\)\\s*; /)\nYour find method should be assigned to a song constant js\nassert match(code, /const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*(\\(\\s*song\\s*\\)|song)\\s*=>\\s*(song\\ id\\s*===\\s*id|id\\s*===\\s*song\\ id)\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "f08e5092a08ed7aa1305918c4abfd8b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "on userData songs js assert match(code, /userData\\ \\ songs\\ find\\(/) Your find method should have song as the parameter of its arrow function callback js assert match(code, /userData\\ \\ songs\\ find\\(\\s*(\\(\\s*song\\s*\\)|song)/) Your find method should use strict equality to check if song id is equal to id js assert match(code, /userData\\ \\ songs\\ find\\(\\s*(\\(\\s*song\\s*\\)|song)\\s*=>\\s*(song\\ id\\s*===\\s*id|id\\s*===\\s*song\\ id)\\s*\\)\\s*; /) Your find method should be assigned to a song constant js assert match(code, /const\\s+song\\s*=\\s*userData\\ \\ songs\\ find\\(\\s*(\\(\\s*song\\s*\\)|song)\\s*=>\\s*(song\\ id\\s*===\\s*id|id\\s*===\\s*song\\ id)\\s*\\)\\s*;/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "eee779327fcf792f65de166478336496",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player,playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "68d6967ea5ab5adf16b5c10f8bc9bece",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "eeb56669f2f124d06b87e1526fa15a99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "4f83b7ff86ed5ec10cba5b512756a524",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "6144346a01851c797954b1bd50180380",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "16bfac72880db4841cba808fdc89ec4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "8749fdc185b950ecab4d58226b6c89ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\n--fcc-editable-region--\nconst playSong = (id) => {\n};\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "02e70541e53244c0e7e69f5352e0cccb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; --fcc-editable-region-- const playSong = (id) => { }; --fcc-editable-region-- const renderSongs = (array) => { const songsHTML = array map((song)=> { return <li id=\"song-${song id}\" class=\"playlist-song\"> <button class=\"playlist-song-info\"> <span class=\"playlist-song-title\">${song title}</span> <span class=\"playlist-song-artist\">${song artist}</span> <span class=\"playlist-song-duration\">${song duration}</span> </button> <button class=\"playlist-song-delete\" aria-label=\"Delete ${songtitle}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 552,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "bec3fc78173139e30e3f00b978344917",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 799999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19954,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65362bfd67d61d517deef191.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "382852c4877b296b7a1acdfe24312b37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 653639d63a45a077333312c8\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nBefore playing the song, you need to make sure it starts from the beginning This can be achieved by the use of the currentTime property on the audio object Add an if statement to check whether the userData currentSong is falsy OR if userData currentSong id is strictly not equal song id This condition will check if no current song is playing or if the current song is different from the one that is about to be played Inside if block, set the currentTime property of the audio object to 0 --hints--\nYou should create an if statement with the condition userData currentSong === null || userData currentSong id == song id Don't forget to include optional chaining js\nassert match(code, /if\\s*\\(\\s*( :( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null)\\s*\\|\\|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*\\|\\|\\s*( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null))\\s*\\)\\s*\\{/)\nYou should set audio currentTime to 0 inside your if block js\nassert match(code, /if\\s*\\(\\s*( :( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null)\\s*\\|\\|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*\\|\\|\\s*( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null))\\s*\\)\\s*\\{\\s*audio\\ currentTime\\s*=\\s*0\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "706080b51aed4469c8eb9afcc104eb40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id == song id Don't forget to include optional chaining js assert match(code, /if\\s*\\(\\s*( :( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null)\\s*\\|\\|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*\\|\\|\\s*( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null))\\s*\\)\\s*\\{/) You should set audio currentTime to 0 inside your if block js assert match(code, /if\\s*\\(\\s*( :( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null)\\s*\\|\\|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*|\\s*userData\\ \\ currentSong\\ id\\s* ==\\s*song\\ id\\s*\\|\\|\\s*( : userData\\ \\ currentSong|\\s*userData\\ \\ currentSong\\s*===\\s*null))\\s*\\)\\s*\\{\\s*audio\\ currentTime\\s*=\\s*0\\s*;\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "858be620cbe19b1e4876d034cf6205a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "31d59ffa3dfe59d50a436e5e878f82bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "98a560293b72e57e1938fc52e8aaa90e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "c32a03446e55dc56264663a51b72b10f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "9bbd8f139b9acf0bbeb7826953bc20d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "bfcbc8cde1e9a59cadf28b33784b84c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "c52c0de66096b8be3fb8fafc63adb0b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "eba44509ec6862737f7e77ca63148346",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const playSong = (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = songtitle;\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 535,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "b3057937023dbeca565ea2be65d1c10b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 939515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19881,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653639d63a45a077333312c8.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "affb8a825399563be5f8bad32abdeb2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 653641509b6e7681a9333245\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nYou need to update the current song being played as well as the appearance of the playButton element Assign song to the currentSong property on the userData object Note: You should not use the optional chaining operator in this step because userData currentSong will not be null or undefined at this point --hints--\nYou should assign song to userData currentSong js\nassert match(code, /userData\\ currentSong\\s*=\\s*song\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "3869f61777770325fbde6690251bc15a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "*::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar,playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "8c840ca3eae085602742a49692565a26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); }player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "2dd464d93bda43f9a49c3a20c54948e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; } playlist-song { display: flex; height: 55px; justify-content: space-between; align-items: center; padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); }playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "65afba04ae2f845dcc0fca0b0d81cfeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) { player, playlist { width: 300px; }player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "2e226c44f6fd38e7604d24daaf8e0ae7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; } player-display-song-artist > p { white-space: pre-wrap; }player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "8d5d29188cf389c87b67a25cfc3ea8b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "= document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "06b99aaa5745721595e3ff73f7dd52f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "2bd7c67f1db64a4dbabce483b0d688a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "currentSong: null, songCurrentTime: 0, }; const playSong = (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } --fcc-editable-region-- --fcc-editable-region-- }; const renderSongs = (array) => { const songsHTML = array map((song)=> { return <li id=\"song-${songid}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 556,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "c10059191d2f55613b8a190510ed60fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C48897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19091,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653641509b6e7681a9333245.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "b6d90ed37c22f34a38cee85456d276d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65420b821b14f25a6b35c3b3\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nWhen the songs are displayed on the page, it should show the title, artist, duration of each song and a delete button In the next few steps, you will learn how to add new HTML for each song using the map() method This method will be explained in more detail in the next step Start by using const to declare a variable named songsHTML and assign it array map() --hints--\nYou should have a const variable called songsHTML js\nassert match(code, /const\\s+songsHTML/);\nYou should assign array map() to your songsHTML js\nassert match(code, /const\\s+songsHTML\\s*=\\s*array\\ map\\(\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "0f491b4ac6a3aafffbd24de07074b509",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); }player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "c32066940b61b8d02474d2eda4d42e9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "} parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; }player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "5bafdbe31e49a11535a96fd8a5b061f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "d3a93558c812dec339e544210645b122",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "d1cf8dd5eb0d1f37c41e18b48f66f1d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "fea8e0a2ff7dd702056ec19b46fc1ca4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "0e6f4adbf34c9160b9836bb77d620ec9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst renderSongs = (array) => {\n--fcc-editable-region--\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17402,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420b821b14f25a6b35c3b3.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "d6abbed18c4af7b864f7e5701831fd9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 653fb19b515fde28243f727a\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nTo display the songs in the UI (User Interface), you'll need to create a function Use the arrow function syntax to create a renderSongs function that takes in array as its parameter --hints--\nYou should use const to create an empty function named renderSongs js\nassert match(code, /const\\s+renderSongs\\s*=\\s*/)\nrenderSongs should be a function js\nassert isFunction(renderSongs)\nYour renderSongs function should use the arrow function syntax js\nassert match(code, /const\\s+renderSongs\\s*=\\s*(\\([^)]*\\)|[^\\s()]+)\\s*=>\\s*/)\nYour renderSongs function should take array as a parameter js\nassert match(code, /const\\s+renderSongs\\s*=\\s*\\( \\s*array/)\nYour renderSongs function should be empty js\nassert match(code, /const\\s+renderSongs\\s*=\\s*(\\(\\s*array\\s*\\)|array)\\s*=>\\s*\\{\\s*\\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "20b3ef9345dbf039da291cfa8b8512f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "73ce0e33fe2a40367312eeb05ce96f95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "b2f40e32b5a037cf59dba322b1322875",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "021fa158df863125f14917188150ee9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "d10e0869794be9d5f613106b65f2b520",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "95c21aefa085f047d3041ba3cb30c15f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "25a09d9a02a105b8e09d0074130a6a56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\653fb19b515fde28243f727a.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "445ff9d9c5c0e32dea65ef68c22e9f55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65420dcfc60580678dad7a92\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nInside the map(), add a return statement with backticks where you will interpolate all the elements responsible to displaying the song details Inside the backticks, create an li element with an id attribute of song-${song id} and a class attribute of playlist-song --hints--\nYou should add a return statement with an empty pair of backticks js\nassert match(code, /return\\s*`/)\nYou should create an li tag inside the backticks js\nassert match(code, /return\\s*`\\s*<li\\s*/)\nYour opening li tag should have an id attribute set to song-${song id} js\nassert match(code, /return\\s*`\\s*<li[^>]*\\sid\\s*=\\s*('|\")song-\\$\\{song\\ id\\}\\1[^>]*>\\s*<\\/li>\\s*`\\s*; /)\nYour opening li tag should have a class attribute set to playlist-song js\nassert match(code, /return\\s*`\\s*<li[^>]*\\sclass\\s*=\\s*('|\")playlist-song\\1[^>]*>\\s*<\\/li>\\s*`\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "321f4a56ce243ca886f3af19273ef2d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "be2beda05e093f5e771a3df3405110c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "c9ccc0aed4b4e7b4342c759edea53ee2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "09da22d41ad54ba43264cca7cd9b4541",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "0d22879fa6ba99034eae1c1d67a60528",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "8a86a21191d086c49e90a7df2e840400",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "a83cc97c3472562fc3d09a3131ae8881",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\n--fcc-editable-region--\n--fcc-editable-region--\n})\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17711,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65420dcfc60580678dad7a92.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "1ecee4705f6430ed85204322f4c276b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65364566e84e378837fbaf2a\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nIn previous steps you built out the functionality for playing a song Now you need to add the functionality to the play button so that it will play the current song when it is clicked on Use the addEventListener() method and pass in a \"click\" event for the first argument and an empty callback function with arrow syntax for the second argument, e g , () => {} --hints--\nYou should call the addEventListener() method on your playButton variable js\nassert match(code, /playButton\\ addEventListener\\(/)\nYour event listener should listen for a \"click\" event js\nassert match(code, /playButton\\ addEventListener\\(\\s*('|\"|`)click\\1/)\nYou should use arrow syntax to pass in an empty callback into your event listener Don't forget you also need an empty pair of curly braces js\nassert match(code, /playButton\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "4d3ec19aab27338864be9398c2833ae2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "c2a60920bcc7413190658e86e032b0d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "66dee075e583af4608b36d0f55a2add9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "5957a748e3d4f9e8b529dcba23b4c615",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "f4aaa2790edd601a6769cbe333e621ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "fcfede846da4ca8fdea875e5590a970e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "2a6285beb056d17498b03406ae8c07a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "6a09afa425a05d3ce90ed79e86405ab3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const playSong = (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userDatacurrentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 528,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "802ce322e21ca8594006df9499745812",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "class=\"playlist-song-duration\">${song duration}</span> </button> <button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\"> <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 100281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\n--fcc-editable-region--\n--fcc-editable-region--\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19634,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65364566e84e378837fbaf2a.md",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "137fe7c847f6e60306b02668a5bb534c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 654210a9eda99477f5697a94\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nCreate a button element with class playlist-song-info Inside the button, add a span element with the class playlist-song-title, then interpolate song title as the text --hints--\nYou should create a button with the class playlist-song-info js\nassert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*/)\nYou should create a span element inside your button element js\nassert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*/)\nYour span element should have the class playlist-song-title js\nassert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*class\\s*=\\s*('|\")playlist-song-title\\2\\s*>/)\nYou should interpolate song title as the content of your span element js\nassert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*class\\s*=\\s*('|\")playlist-song-title\\2\\s*>\\s*\\$\\{\\s*song\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 284,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "b68c5e42cd7d0c7e83d1facc70181399",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "class playlist-song-info Inside the button, add a span element with the class playlist-song-title, then interpolate song title as the text --hints-- You should create a button with the class playlist-song-info js assert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*/) You should create a span element inside your button element js assert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*/) Your span element should have the class playlist-song-title js assert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*class\\s*=\\s*('|\")playlist-song-title\\2\\s*>/) You should interpolate song title as the content of your span element js assert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*class\\s*=\\s*('|\")playlist-song-title\\2\\s*>\\s*\\$\\{\\s*song\\title\\s*\\}\\s*<\\/span>\\s*<\\/button>/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "271c372b2ea2b2a0e21fbbc2af11f1ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "16d3e41bc08ae7ee8c4afe328c658ee7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "0649c739a7fd53325eb4b38a3c00a40a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "e5e0c6ce28ad971e87f559300a84c3c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "ec418bee136e84bebbcaf8b1070159b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "64d32430527ff8cfc20b1213203807aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "84ef0c099645db6dc969cb5919a3ee5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn `\n--fcc-editable-region--\n--fcc-editable-region--\n</li>\n`;\n})\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17905,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654210a9eda99477f5697a94.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "5485f3cb8330ed61e24dc71aa689001c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 654212b82fb5cf872f77148f\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nInside the button element, create two more span elements The first span element should have a class of playlist-song-artist In between the span tags, add ${song artist} The second span element should have a class of playlist-song-duration In between the span tags, add ${song duration} --hints--\nYou should not modify the existing button element and its content js\nassert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*class\\s*=\\s*('|\")playlist-song-title\\2\\s*>\\$\\{song\\ title\\}\\s*<\\/span>\\s* *\\s* *\\s*<\\/button>/)\nYou should create a span element with the class playlist-song-artist js\nassert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-artist\\1\\s*>/)\nYour span element with the class playlist-song-artist should interpolate song artist as its content js\nassert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-artist\\1\\s*>\\s*\\$\\{song\\ artist\\}\\s*<\\/span>/)\nYou should create a span element with the class playlist-song-duration js\nassert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-duration\\1\\s*>\\s*/)\nYour span element with the class playlist-song-duration should interpolate song duration as its content js\nassert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-duration\\1\\s*>\\s*\\$\\{song\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "aab4835a5d6e8125d607641a8bd2412b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "element and its content js assert match(code, /<button\\s*class\\s*=\\s*('|\")playlist-song-info\\1\\s*>\\s*<span\\s*class\\s*=\\s*('|\")playlist-song-title\\2\\s*>\\$\\{song\\ title\\}\\s*<\\/span>\\s* *\\s* *\\s*<\\/button>/) You should create a span element with the class playlist-song-artist js assert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-artist\\1\\s*>/) Your span element with the class playlist-song-artist should interpolate song artist as its content js assert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-artist\\1\\s*>\\s*\\$\\{song\\ artist\\}\\s*<\\/span>/) You should create a span element with the class playlist-song-duration js assert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-duration\\1\\s*>\\s*/) Your span element with the class playlist-song-duration should interpolate song duration as its content js assert match(code, /<span\\s*class\\s*=\\s*('|\")playlist-song-duration\\1\\s*>\\s*\\$\\{song\\duration\\}<\\/span>/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "79498ecaad99cc34fb38a620f0ad5cbf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "d7c06ff584f37e215f59ad02ef0ece09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "498c416475952762d65b3b8aa6952bc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "85b87314e8f1a1eae0d2af1d317e77bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "e5f512df862e1890c89eb45ff85c2aa3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "5dc11ea245b94d37995e77ef501a0ad5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "28fac6b17291397911466a4f14c8c443",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn `\n--fcc-editable-region--\n${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "08f4f3aa949e98f8bf7529f98092b1aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\", }, { id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const renderSongs = (array) => { const songsHTML = array map((song)=> { return ` --fcc-editable-region-- ${songtitle}\n</button>\n--fcc-editable-region--\n</li>\n`;\n})\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654212b82fb5cf872f77148f.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "ce314fcddaa33fd334eab4260f3f9116",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 654218753c255fabb81f57ca\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nNow you need to call the renderSongs function and pass in userData songs in order to finally display the songs in the UI Optional chaining ( ) helps prevent errors when accessing nested properties that might be null or undefined For example:\n```js\nconst user = {\nname: \"Quincy\",\naddress: {\ncity: \"San Francisco\",\nstate: \"CA\",\ncountry: \"USA\",\n},\n};\n// Accessing nested properties without optional chaining\nconst state = user address state; // CA\n// Accessing a non-existent nested property with optional chaining\nconst zipCode = user address zipCode; // Returns undefined instead of throwing an error\n```\nCall the renderSongs function with the songs property of userData This will render the songs in the playlist --hints--\nYou should call your renderSongs function with userData songs js\nassert match(code, /renderSongs\\(\\s*userData\\ \\ songs\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "ff0c2d67dd41caf0df7fd9579e0c631e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player,playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "7eea134bff643ee1e5af985cf0224c90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "725327c2ef00aa125d3f9ef4fe28575b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "1b6b4126ac8094b8e4258eaf282ae3a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "221d982acedd7a16a2a1f9ae10ddb19f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "88e0eab1040e1944f90a0978ec7f1191",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "324d523ef37e0ba26e3753ad1e571e7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "658cf4e7d51cbcb7325b3a5812446723",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const renderSongs = (array) => { const songsHTML = array map((song)=> { return <li id=\"song-${song id}\" class=\"playlist-song\"> <button class=\"playlist-song-info\"> <span class=\"playlist-song-title\">${song title}</span> <span class=\"playlist-song-artist\">${song artist}</span> <span class=\"playlist-song-duration\">${song duration}</span> </button> <button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\"> <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://wwww3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 559,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "56db6786de86d6c9e7aeba90e3b030f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 54684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18964,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654218753c255fabb81f57ca.md",
      "source_type": "git_repo"
    },
    "token_count": 263,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "24001e112f06f8283b6c3e4cf11d412f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65422ba173a18b1bedef1bb6\ntitle: Step 43\nchallengeType: 0\ndashedName: step-43\n--description--\nWithin the arrow function of the event listener, add an if to check if userData currentSong is null Inside the if block, call the playSong() function with the id of the first song in the userData songs array This will ensure the first song in the playlist is played first --hints--\nYou should create an if statement with the condition userData currentSong === null js\nassert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{/);\nYou should call the playSong function with userData songs[0] id inside your if block js\nassert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{\\s*playSong\\(\\s*userData\\ \\ songs\\s*\\[\\s*0\\s*\\]\\s*\\ id\\s*\\)\\s*; \\s*\\}/);\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "9e7e09ae8112b2f65e13a213e55c251f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player,playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "43fe9b17e8057da6362a6eaa484bb08c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "83bdf7b426d6b50f3f9cf7fef21db64b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "2f5129c59d330ded689dd6ffeb7c9567",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "547c2bd75f9382ae3605c23ac434f1a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "c53938f820dc2c3f17d107f810d48055",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "73e43d73d10c02d09520700427ca972d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "0f31ac5e4bf13d49703d27c87d5e7f39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "= (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } userData currentSong = song; playButton classList add(\"playing\"); audio play(); }; const renderSongs = (array) => { const songsHTML = array map((song)=> { return <li id=\"song-${songid}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 560,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "b6bb19c6e6e45c7fac68d87c2e6203b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 54684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nplayButton addEventListener(\"click\", () => {\n--fcc-editable-region--\n--fcc-editable-region--\n});\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(userData songs);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65422ba173a18b1bedef1bb6.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "3e2613987652db3d721a2d2218df6bbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 6552127b2576c2fbc5ecc2ea\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nAdd an else block Inside the else block, call the playSong function with the id of the currently playing song as an argument This ensures that the currently playing song will continue to play when the play button is clicked --hints--\nYou should not modify the existing if statement and its content js\nassert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{\\s*playSong\\(\\s*userData\\ \\ songs\\s*\\[\\s*0\\s*\\]\\s*\\ id\\s*\\)\\s*; \\s*\\}/)\nYou should add an else block to your if statement js\nassert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{\\s*playSong\\(\\s*userData\\ \\ songs\\s*\\[\\s*0\\s*\\]\\s*\\ id\\s*\\)\\s*; \\s*\\}\\s*else\\s*\\{/)\nYou should call the playSong function with userData currentSong id in the else block of your if statement js\nassert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{\\s*playSong\\(\\s*userData\\ \\ songs\\s*\\[\\s*0\\s*\\]\\s*\\ id\\s*\\)\\s*; \\s*\\}\\s*else\\s*\\{\\s*playSong\\(\\s*userData\\ \\ currentSong\\ id\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "a46ecfbcfce8c2b97cf531a0500b1111",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "button is clicked --hints-- You should not modify the existing if statement and its content js assert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{\\s*playSong\\(\\s*userData\\ \\ songs\\s*\\[\\s*0\\s*\\]\\s*\\ id\\s*\\)\\s*; \\s*\\}/) You should add an else block to your if statement js assert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{\\s*playSong\\(\\s*userData\\ \\ songs\\s*\\[\\s*0\\s*\\]\\s*\\ id\\s*\\)\\s*; \\s*\\}\\s*else\\s*\\{/) You should call the playSong function with userData currentSong id in the else block of your if statement js assert match(code, /if\\s*\\(\\s*userData\\ \\ currentSong\\s*===\\s*null\\s*\\)\\s*\\{\\s*playSong\\(\\s*userData\\ \\ songs\\s*\\[\\s*0\\s*\\]\\s*\\ id\\s*\\)\\s*; \\s*\\}\\s*else\\s*\\{\\s*playSong\\(\\s*userData\\ \\ currentSong\\ id\\s*\\)\\s*;\\s*\\}/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "adf025adab0cec8c78e13bda63f23d47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "de789394acb323333182bb852dc80847",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "32d2037d125af98e0e07d28e9a11eb37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "8b4a27c136b5f8269a9e28b955a108ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "285474adfcb52609a6b58fe059a8d7cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "0f321623d48f99da41dfea1b6ff38d74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "2a4b58f6a291835a5de3ac562e6c1b5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "a76d583441c489d98472dfb6619c270e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const playSong = (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userDatacurrentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 528,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "a0346bc07e5012c609ae4cc2c022929f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "class=\"playlist-song-duration\">${song duration}</span> </button> <button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\"> <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 100281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nplayButton addEventListener(\"click\", () => {\n--fcc-editable-region--\nif (userData currentSong === null) {\nplaySong(userData songs[0] id);\n}\n--fcc-editable-region--\n});\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 525,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "fd2ec9bd84915e79ea59e1df20edfeec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg> </button> </li>; }) join(\"\"); playlistSongs innerHTML = songsHTML; }; playButton addEventListener(\"click\", () => { --fcc-editable-region-- if (userData currentSong === null) { playSong(userData songs[0] id); } --fcc-editable-region-- }); const sortSongs = () => { userData songs sort((a,b) => { if (a title < b title) { return -1; } if (a title > btitle) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(userData songs);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19892,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552127b2576c2fbc5ecc2ea.md",
      "source_type": "git_repo"
    },
    "token_count": 190,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "7d195215b172aae8cf3bda8ff94aae99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 654215fe7b4a899ddceb3b60\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nRight now the songsHTML is an array If you tried to display this as is, you would see the songs separated by commas This is not the desired outcome because you want to display the songs as a list To fix this, you will need to join the array into a single string by using the join() method The join() method is used to concatenate all the elements of an array into a single string It takes an optional parameter called a separator which is used to separate each element of the array For example:\njs\nconst exampleArr = [\"This\", \"is\", \"a\", \"sentence\"];\nconst sentence = exampleArr join(\" \"); // Separator takes a space character\nconsole log(sentence); // Output: \"This is a sentence\"\nChain the join() method to your map() method and pass in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example:\njs\narray map() join();\n--hints--\nYou should add join(\"\") to the existing code js\nassert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 49
  },
  {
    "id": "991750d09bc231e2ac3fb5a1c49a1f27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "takes a space character console log(sentence); // Output: \"This is a sentence\" Chain the join() method to your map() method and pass in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 517,
    "chunk_index": 1,
    "total_chunks": 49
  },
  {
    "id": "4d45e8d11c12c86e4c7dd108a7bc0dda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 49
  },
  {
    "id": "5832ed5f54c87e0ac8c6aacb4b51b1ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 49
  },
  {
    "id": "4118d7b52020a82abc0cf449def16b31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 4,
    "total_chunks": 49
  },
  {
    "id": "4fd10a1f2a216910870b8c4594e6150d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 517,
    "chunk_index": 5,
    "total_chunks": 49
  },
  {
    "id": "fb01a8c84b24bcb1ff03dcae14994306",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 524,
    "chunk_index": 6,
    "total_chunks": 49
  },
  {
    "id": "5085a91616dd7475912f6d477a2c29cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 532,
    "chunk_index": 7,
    "total_chunks": 49
  },
  {
    "id": "03fe581349e769f40439bd8b857316f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 540,
    "chunk_index": 8,
    "total_chunks": 49
  },
  {
    "id": "a5dbbfa8055f2a8a82f3eaf2dd6f7a8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 548,
    "chunk_index": 9,
    "total_chunks": 49
  },
  {
    "id": "473b3f689532667b7ed8d7525e898dc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 558,
    "chunk_index": 10,
    "total_chunks": 49
  },
  {
    "id": "4c856eb818131408b5b7abb342ff93bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 563,
    "chunk_index": 11,
    "total_chunks": 49
  },
  {
    "id": "d0ed4d17747333a7886062ec654b18c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 571,
    "chunk_index": 12,
    "total_chunks": 49
  },
  {
    "id": "a4a10eb8a4a5e86b64d97df52ac0ffd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 576,
    "chunk_index": 13,
    "total_chunks": 49
  },
  {
    "id": "752b783ecfc6c96f6ca4b4920088294b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 14,
    "total_chunks": 49
  },
  {
    "id": "7c3d16f77be806080e930c1d776cc7e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 592,
    "chunk_index": 15,
    "total_chunks": 49
  },
  {
    "id": "4a3b1f1a67261eb39868c217a91c17d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 600,
    "chunk_index": 16,
    "total_chunks": 49
  },
  {
    "id": "2461b0217aab90ffc60c7c3934db2b37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 607,
    "chunk_index": 17,
    "total_chunks": 49
  },
  {
    "id": "b6f7646ec55065c153f7a6a299f52b41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 18,
    "total_chunks": 49
  },
  {
    "id": "32e8724f9e3189434745f253e6695e42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 19,
    "total_chunks": 49
  },
  {
    "id": "436f652aeb3112a046c7388e7c7b5069",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 20,
    "total_chunks": 49
  },
  {
    "id": "6c033dc78e56c280fb8fd0f3898a42f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 21,
    "total_chunks": 49
  },
  {
    "id": "02b04816403aeaaf2b6cd3c7c5c9280c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 22,
    "total_chunks": 49
  },
  {
    "id": "185b4982a7d7f95b82d28cc62206611f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 23,
    "total_chunks": 49
  },
  {
    "id": "2b0ccf4a04f3240bdbf863542ed3f7c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 24,
    "total_chunks": 49
  },
  {
    "id": "30cd731df9a02e1177b705494e6d7a01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 25,
    "total_chunks": 49
  },
  {
    "id": "7e410701e4a7cbcf64f53e22c863c6f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 26,
    "total_chunks": 49
  },
  {
    "id": "bc0a8147e8bd3b3be7cec6f9862f10ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 27,
    "total_chunks": 49
  },
  {
    "id": "a87c97ceadeb74c759da67dd146f0ea4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 28,
    "total_chunks": 49
  },
  {
    "id": "9d4f3c15bf242d3b739bd0fbd10b5ff0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 691,
    "chunk_index": 29,
    "total_chunks": 49
  },
  {
    "id": "c214f3e0d788204cb0e2bd97c14930f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 30,
    "total_chunks": 49
  },
  {
    "id": "d8ef7a201a11dd71574aa8a833d70189",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 707,
    "chunk_index": 31,
    "total_chunks": 49
  },
  {
    "id": "940478f65c0a668d32dfc27422ff27a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 715,
    "chunk_index": 32,
    "total_chunks": 49
  },
  {
    "id": "09209acd8df072852c26bce9782fa854",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 723,
    "chunk_index": 33,
    "total_chunks": 49
  },
  {
    "id": "22d427e19d5906a659ce0d13fdc3929d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 731,
    "chunk_index": 34,
    "total_chunks": 49
  },
  {
    "id": "5832fa4ebff3397a1b97bc82d49e7904",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\18571Z\"\\s{1}fill=\"white\"\\/>\\s*<\\/svg>\\s*<\\/button>\\s*<\\/li>\\s*`\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 766,
    "chunk_index": 35,
    "total_chunks": 49
  },
  {
    "id": "41243e8273815c1cc0b13122639bf94f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\18571Z\"\\s{1}fill=\"white\"\\/>\\s*<\\/svg>\\s*<\\/button>\\s*<\\/li>\\s*`\\s*;\\s*\\}\\s*\\)\\s*\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 774,
    "chunk_index": 36,
    "total_chunks": 49
  },
  {
    "id": "ae192bd4fcfe7b97018e50edc950bc0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\18571Z\"\\s{1}fill=\"white\"\\/>\\s*<\\/svg>\\s*<\\/button>\\s*<\\/li>\\s*`\\s*;\\s*\\}\\s*\\)\\s*\\join\\(\\s*('|\")\\3\\s*\\)\\s*;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 789,
    "chunk_index": 37,
    "total_chunks": 49
  },
  {
    "id": "5bb7d9257c5e2019ce64bdb035a8a06e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "in an empty string for the separator To chain multiple methods together, you can call the join() method on the result of the map() method For example: js array map() join(); --hints-- You should add join(\"\") to the existing code js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2>\\s*<svg\\s{1}width=\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\28651L8\\s{1}6\\ 75478L9\\ 39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\ 7888\\s{1}6\\ 31026L9\\ 1832\\s{1}7\\ 99999L10\\ 7888\\s{1}9\\ 68974C11\\ 1103\\s{1}10\\ 0281\\s{1}11\\ 059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\18571Z\"\\s{1}fill=\"white\"\\/>\\s*<\\/svg>\\s*<\\/button>\\s*<\\/li>\\s*`\\s*;\\s*\\}\\s*\\)\\s*\\join\\(\\s*('|\")\\3\\s*\\)\\s*;/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 993,
    "chunk_index": 38,
    "total_chunks": 49
  },
  {
    "id": "77dec1db5f0182b01da46eff9e1fe484",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\18571Z\"\\s{1}fill=\"white\"\\/>\\s*<\\/svg>\\s*<\\/button>\\s*<\\/li>\\s*`\\s*;\\s*\\}\\s*\\)\\s*\\join\\(\\s*('|\")\\3\\s*\\)\\s*;/) --seed-- --seed-contents-- ```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 514,
    "chunk_index": 39,
    "total_chunks": 49
  },
  {
    "id": "982dcd68d33596a715aaab2834ea325c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--seed-contents-- ```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 40,
    "total_chunks": 49
  },
  {
    "id": "cdeb874974246f20b5a2117ed3f9000e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 41,
    "total_chunks": 49
  },
  {
    "id": "f75691e4adcffe3dd154c6f8fc8077e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 42,
    "total_chunks": 49
  },
  {
    "id": "1a1542837ca56c261dcd638878df581e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 43,
    "total_chunks": 49
  },
  {
    "id": "952430d753f37da3407f69f281b1469e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 44,
    "total_chunks": 49
  },
  {
    "id": "a81a235a6fe0bed571f90d07b172a5e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 45,
    "total_chunks": 49
  },
  {
    "id": "ceaa26ed366614cf652022d6b94e09a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\n--fcc-editable-region--\nreturn <li id=\"song-${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 46,
    "total_chunks": 49
  },
  {
    "id": "fed3e5e5bab3a442ad266b88e1ea63f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\", }, { id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const renderSongs = (array) => { const songsHTML = array map((song)=> { --fcc-editable-region-- return <li id=\"song-${songid}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 533,
    "chunk_index": 47,
    "total_chunks": 49
  },
  {
    "id": "b8e093f5a66bbfc35339f56674286cd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 107135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n})\n--fcc-editable-region--\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20301,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654215fe7b4a899ddceb3b60.md",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 48,
    "total_chunks": 49
  },
  {
    "id": "040c0adf7399acca5a2f5b1c63963b74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65521badc7b7470edf952372\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nNow you need to work on pausing the currently playing song Define a pauseSong function using the const keyword and arrow function syntax The function should take no parameters --hints--\nYou should use const to create an empty function named pauseSong js\nassert match(code, /const\\s+pauseSong\\s*=\\s*/)\npauseSong should be a function js\nassert isFunction(pauseSong)\nYour pauseSong function should use an arrow syntax js\nassert match(code, /const\\s+pauseSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*/)\nYour pauseSong function  should be empty js\nassert match(code, /const\\s+pauseSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\n \\s* \\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "24c4c864f45b638bd7eb0d2e8db0564a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); }player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "2f31dbd5d091271d2a3ad8178540875f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "} parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; }player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "cf19c9c8d9b853abe23296321e90eea6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "ddc494dd5b9c7bbd1e9f298cca0b60b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "67d51c6b8ded811165ed14841e66b890",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "ab49acf928f0c1a8c355a94dd48ba336",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "35104ba95a072f8eddb4fcacbfef8968",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\n--fcc-editable-region--\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "2941dd61ab8711d6e126fcfba3cbbcc7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "}; const playSong = (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } userData currentSong = song; playButton classList add(\"playing\"); audio play(); }; --fcc-editable-region-- --fcc-editable-region-- const renderSongs = (array) => { const songsHTML = arraymap((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\" onclick=\"playSong(${song id})\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "911e7ea6247c8b2e5374b16593a9f69f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 799999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nplayButton addEventListener(\"click\", () => {\nif (userData currentSong === null) {\nplaySong(userData songs[0] id);\n} else {\nplaySong(userData currentSong id);\n}\n});\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521badc7b7470edf952372.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "f3bee7aec5385b5b9bb705687aec6f3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 654213f2fad2d48f74d6c239\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nCreate another button element with the class playlist-song-delete and the aria-label attribute set to Delete interpolated with song title For the content of the delete icon, paste in the following SVG:\nhtml\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n--hints--\nYou should create a button element with the class playlist-song-delete as its first attribute and value js\nassert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/)\nYour button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 551,
    "chunk_index": 0,
    "total_chunks": 55
  },
  {
    "id": "15e29c89275180fbd41675eae308878e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg> --hints-- You should create a button element with the class playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/)\nYou should paste in the provided svg as the content of your button element js\nassert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 1,
    "total_chunks": 55
  },
  {
    "id": "00fc5ee7e0c07a4aa931a8cc0533f2d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "fill=\"white\"/></svg> --hints-- You should create a button element with the class playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 2,
    "total_chunks": 55
  },
  {
    "id": "c968777b90f8cbfd29a0a0e2a9894066",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 55
  },
  {
    "id": "ee2b8c81fbf0dd81bc0606a6e03ceee4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 4,
    "total_chunks": 55
  },
  {
    "id": "3dcc31f91d19ddeecd8f7dfd8b33c394",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 514,
    "chunk_index": 5,
    "total_chunks": 55
  },
  {
    "id": "63d153c5f0339aabad0621e86e2fc2c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 6,
    "total_chunks": 55
  },
  {
    "id": "13ac2a847caec4d4333ce4e18e4c3021",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 527,
    "chunk_index": 7,
    "total_chunks": 55
  },
  {
    "id": "da54cb28baf1fbd8129666a023d926b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 532,
    "chunk_index": 8,
    "total_chunks": 55
  },
  {
    "id": "822ead2d33575037e2d6eb5ea05a6d72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 540,
    "chunk_index": 9,
    "total_chunks": 55
  },
  {
    "id": "69e9e01de47dbccff2d3e53034a7b578",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 548,
    "chunk_index": 10,
    "total_chunks": 55
  },
  {
    "id": "d690a063e87219edf6c9cc83529b951c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 11,
    "total_chunks": 55
  },
  {
    "id": "5b5bcf5db39922c0f55319abdaa0fe29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 563,
    "chunk_index": 12,
    "total_chunks": 55
  },
  {
    "id": "230b9822bc858fe089bf23a1a3ebeab9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 571,
    "chunk_index": 13,
    "total_chunks": 55
  },
  {
    "id": "4963a88b7a33510f99f760f9178cb8d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 576,
    "chunk_index": 14,
    "total_chunks": 55
  },
  {
    "id": "5d11dcbc74ae2271e2ff100a29277d55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 15,
    "total_chunks": 55
  },
  {
    "id": "e9a2c22bd434f48a8c91e651871087c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 591,
    "chunk_index": 16,
    "total_chunks": 55
  },
  {
    "id": "72ae5dcf13ab44a1996b9f3ccf980e02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 599,
    "chunk_index": 17,
    "total_chunks": 55
  },
  {
    "id": "f15f91b3bd9968331a604bb90a641f23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 607,
    "chunk_index": 18,
    "total_chunks": 55
  },
  {
    "id": "1c2e6a553565c5bf3b4c941b1ddf26f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 19,
    "total_chunks": 55
  },
  {
    "id": "d9234f0d3ed8dcb6e80d6bb6270e57d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 20,
    "total_chunks": 55
  },
  {
    "id": "315e7f54cb877dcb2def4dd6fc4966f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 21,
    "total_chunks": 55
  },
  {
    "id": "46d6498f4d7c61bb9b49237bf398d361",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 22,
    "total_chunks": 55
  },
  {
    "id": "64080c3243cdf2350dccdaa007a515ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 23,
    "total_chunks": 55
  },
  {
    "id": "609e46fd55822d480d4e255578e159b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 24,
    "total_chunks": 55
  },
  {
    "id": "ecc2a0630688f888e64d9644c2e26ab1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 659,
    "chunk_index": 25,
    "total_chunks": 55
  },
  {
    "id": "576c70607865bdc5b0d77160394b345b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 26,
    "total_chunks": 55
  },
  {
    "id": "9e1c0442dd09912e94526ab2453ec1fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 27,
    "total_chunks": 55
  },
  {
    "id": "9f9d8ce6c1d6d991a3d8c1e02de0f473",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 28,
    "total_chunks": 55
  },
  {
    "id": "e0cfcd7c8f712157908bc4df96b04f0c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 29,
    "total_chunks": 55
  },
  {
    "id": "2c27895744cd6c1895f4f848d829ef7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 695,
    "chunk_index": 30,
    "total_chunks": 55
  },
  {
    "id": "cbb3c285528427bcb9a1c1ce89513d3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 703,
    "chunk_index": 31,
    "total_chunks": 55
  },
  {
    "id": "ad35a097221f9d0db795b823ffedcb10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 711,
    "chunk_index": 32,
    "total_chunks": 55
  },
  {
    "id": "088aba64a162eb158bee7bd7474d646c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 719,
    "chunk_index": 33,
    "total_chunks": 55
  },
  {
    "id": "5270d2fe221ebbe541d024e64d5b4d67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 727,
    "chunk_index": 34,
    "total_chunks": 55
  },
  {
    "id": "b6636797a33097d8c37da7268f1e6551",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 732,
    "chunk_index": 35,
    "total_chunks": 55
  },
  {
    "id": "23e1b2fd59c459d7a111bd148f91eb9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 740,
    "chunk_index": 36,
    "total_chunks": 55
  },
  {
    "id": "40d698b910cecc56359f80842d5cb2eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 745,
    "chunk_index": 37,
    "total_chunks": 55
  },
  {
    "id": "99426cc8cec2946b40eb70747de3e78a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 753,
    "chunk_index": 38,
    "total_chunks": 55
  },
  {
    "id": "b1d77944b112c885f60f665078e24be8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 758,
    "chunk_index": 39,
    "total_chunks": 55
  },
  {
    "id": "c7092a129de5eaf2f4f5bd912d725632",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 766,
    "chunk_index": 40,
    "total_chunks": 55
  },
  {
    "id": "6cafb953c812dc8329f5963170a45cd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 774,
    "chunk_index": 41,
    "total_chunks": 55
  },
  {
    "id": "a23ebe22ac4a9c92a96404097380dfef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 782,
    "chunk_index": 42,
    "total_chunks": 55
  },
  {
    "id": "8c0d7e85a20029d056ab125e5053fb4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 790,
    "chunk_index": 43,
    "total_chunks": 55
  },
  {
    "id": "20ff78b1b37448cd39840a64ad3bf35d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 798,
    "chunk_index": 44,
    "total_chunks": 55
  },
  {
    "id": "54c2ef80ec2fbcc7250597c282d28387",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "playlist-song-delete as its first attribute and value js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*/) Your button element should have an aria-label attribute with the value Delete ${song title} as its second attribute and value js assertmatch(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>/) You should paste in the provided svg as the content of your button element js assert match(code, /<button\\s+class\\s*=\\s*('|\")playlist-song-delete\\1\\s*aria-label\\s*=\\s*('|\")Delete\\s*\\$\\{song\\ title\\}\\2\\s*>\\s*<svg\\s{1}width\\s*=\\s*\"20\"\\s{1}height=\"20\"\\s{1}viewBox=\"0\\s{1}0\\s{1}16\\s{1}16\"\\s{1}fill=\"none\"\\s{1}xmlns=\"http:\\/\\/www\\ w3\\ org\\/2000\\/svg\">\\s*<circle\\s{1}cx=\"8\"\\s{1}cy=\"8\"\\s{1}r=\"8\"\\s{1}fill=\"#4d4d62\"\\/>\\s*<path\\s{1}fill-rule=\"evenodd\"\\s{1}clip-rule=\"evenodd\"\\s{1}d=\"M5\\ 32587\\s{1}5\\ 18571C5\\ 7107\\s{1}4\\ 90301\\s{1}6\\ 28333\\s{1}4\\ 94814\\s{1}6\\ 60485\\s{1}5\\ 28651L8\\s{1}6\\ 75478L9\\39515\\s{1}5\\ 28651C9\\ 71667\\s{1}4\\ 94814\\s{1}10\\ 2893\\s{1}4\\ 90301\\s{1}10\\ 6741\\s{1}5\\ 18571C11\\ 059\\s{1}5\\ 4684\\s{1}11\\ 1103\\s{1}5\\ 97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\18571Z\"\\s{1}fill=\"white\"\\/>\\s*<\\/svg>\\s*<\\/button>\\s*/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 1027,
    "chunk_index": 45,
    "total_chunks": 55
  },
  {
    "id": "082de86c2746fc7165d2acc0afbb3b21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "97188\\s{1}10\\7888\\s{1}6\\31026L9\\1832\\s{1}7\\99999L10\\7888\\s{1}9\\68974C11\\1103\\s{1}10\\0281\\s{1}11\\059\\s{1}10\\5316\\s{1}10\\6741\\s{1}10\\8143C10\\2893\\s{1}11\\097\\s{1}9\\71667\\s{1}11\\0519\\s{1}9\\39515\\s{1}10\\7135L8\\s{1}9\\24521L6\\60485\\s{1}10\\7135C6\\28333\\s{1}11\\0519\\s{1}5\\7107\\s{1}11\\097\\s{1}5\\32587\\s{1}10\\8143C4\\94102\\s{1}10\\5316\\s{1}4\\88969\\s{1}10\\0281\\s{1}5\\21121\\s{1}9\\68974L6\\8168\\s{1}7\\99999L5\\21122\\s{1}6\\31026C4\\8897\\s{1}5\\97188\\s{1}4\\94102\\s{1}5\\4684\\s{1}5\\32587\\s{1}5\\18571Z\"\\s{1}fill=\"white\"\\/>\\s*<\\/svg>\\s*<\\/button>\\s*/) --seed-- --seed-contents-- ```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1125rem;\nline-height: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 544,
    "chunk_index": 46,
    "total_chunks": 55
  },
  {
    "id": "8bca4331f625bfdd96e786b2486fdbc7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--seed-contents-- ```html Learn Basic String and Array Methods by Building a Music Player App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1125rem; line-height: 16;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 47,
    "total_chunks": 55
  },
  {
    "id": "f1520be3eb66dcceb2fa5a875971b481",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 48,
    "total_chunks": 55
  },
  {
    "id": "575be8ac2ca65fadc185e6627586f5de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 49,
    "total_chunks": 55
  },
  {
    "id": "74d1ac07ca3cac1f7bc5471c70279626",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 50,
    "total_chunks": 55
  },
  {
    "id": "4027818dd95b29c74a99770457e1538b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 51,
    "total_chunks": 55
  },
  {
    "id": "01d8a511f9b2a0beb02bd6aa77501ef0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 52,
    "total_chunks": 55
  },
  {
    "id": "f5a7c9535e4a9c4fee8d9c6f92c3d58d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn `\n${song title}\n${song artist}\n${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 53,
    "total_chunks": 55
  },
  {
    "id": "4879f87a4de10edc9d19706cdc9ae8a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ id: 8, title: \"The Surest Way Out is Through\", artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const renderSongs = (array) => { const songsHTML = array map((song)=> { return ` ${song title} ${song artist} ${songduration}\n--fcc-editable-region--\n--fcc-editable-region--\n</li>\n`;\n})\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\654213f2fad2d48f74d6c239.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 54,
    "total_chunks": 55
  },
  {
    "id": "d4edbf475b6385d41222b8b4fb41b11e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 65521ec3bb117c195c4f6cb5\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nTo store the current time of the song when it is paused, set the songCurrentTime of the userData object to the currentTime of the audio variable Note: You should not use optional chaining for this step because userData songCurrentTime will not be null or undefined at this point --hints--\nYou should not modify the existing pauseSong function and its content js\nassert match(code, /const\\s+pauseSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s* *\\s*\\}\\s*; /)\nYou should assign audio currentTime to userData songCurrentTime js\nassert match(code, /userData\\ songCurrentTime\\s*=\\s*audio\\ currentTime\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "838b55bd4e6c11f30947a66bd88f9a1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); }player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "a8b43393c5a8d498391f829aa161ec0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "} parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; }player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "4b65a73090ac63ace53fac849ccaa537",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "a998792a5edf7e9dac09442d36daf40a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "6fbe84877acad96afd37054ef2c1b845",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "89029a77f8a466ca039a07f1da5e838a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "868a61d4563146595c26d3474dd76c14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\n--fcc-editable-region--\nconst pauseSong = () => {\n};\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "3529f496ab56141c9d33feddff80c120",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } userData currentSong = song; playButton classList add(\"playing\"); audio play(); }; --fcc-editable-region-- const pauseSong = () => { }; --fcc-editable-region-- const renderSongs = (array) => { const songsHTML = arraymap((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\" onclick=\"playSong(${song id})\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 553,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "23d771d0506a45d274e86b988d828240",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 799999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nplayButton addEventListener(\"click\", () => {\nif (userData currentSong === null) {\nplaySong(userData songs[0] id);\n} else {\nplaySong(userData currentSong id);\n}\n});\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19584,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\65521ec3bb117c195c4f6cb5.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "b2f8302274c88a8419d899117b9425cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 655220a3fa5c3c200bc8e938\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nUse classList and remove() method to remove the playing class from the playButton, since the song will be paused at this point To finally pause the song, use the pause() method on the audio variable pause() is a method of the Web Audio API for pausing music files --hints--\nYou should not modify the existing pauseSong function and its content js\nassert match(code, /const\\s+pauseSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*userData\\ songCurrentTime\\s*=\\s*audio\\ currentTime\\s*; \\s* *\\s* *\\s*\\}\\s*; /)\nYou should use the classList property and the remove() method to remove the class \"playing\" from the playButton js\nassert match(code, /playButton\\ classList\\ remove\\(\\s*('|\")playing\\1\\s*\\)\\s*; /)\nYou should use the pause() method on your audio variable js\nassert match(code, /audio\\ pause\\(\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "c849782d7c0b0bb4150871b8ba3a8d50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "App freeCodeCamp Playlist ``` ```css :root { / colors / --primary-color: #dfdfe2; --secondary-color: #ffffff; --app-background-color: #4d4d62; --background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; }container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "dc039b991861c1ad71d634007ddb5642",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "var(--background-color); border: 3px solid var(--foreground-color); } player { height: 260px; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } player-bar, playlist-bar { display: flex; justify-content: space-between; align-items: center; padding: 0 5px; width: 100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); }player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "e94ed4915398e46bc1890253f588c424",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; } player-display-song-artist { height: 80px; } player-buttons svg { fill: var(--primary-color); } playing > svg { fill: var(--highlight-color); } player-buttons { display: flex; justify-content: space-around; } button { background: transparent; border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist /playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n} playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "4fb9d953a3cdc1260bd2014f053065f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "padding: 5px; } [aria-current=\"true\"] { background-color: var(--background-color); } [aria-current=\"true\"] p { color: var(--highlight-color); } playlist-song-info { height: 100%; display: flex; flex-direction: row; align-items: center; justify-content: space-around; column-gap: 7px; padding: 5px 0; font-family: var(--font-family); } player-song-title, player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) { player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "14af64144c0639f574338137f4420742",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "340px; } #playlist-songs { height: 280px; padding: 5px 6px; overflow-y: scroll; overflow-x: hidden; scrollbar-color: var(--background-color) var(--secondary-color); scrollbar-width: thin; } #playlist-songs::-webkit-scrollbar { width: 5px; } #playlist-songs::-webkit-scrollbar-track { background: var(--background-color); } #playlist-songs::-webkit-scrollbar-thumb { background: var(--secondary-color); } h1 { font-size: 0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; }player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n} player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "e94e11d3c4b927264ec9e14607d135b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "{ white-space: pre-wrap; } player-display { position: absolute; width: 100%; z-index: 1000; background-color: transparent; top: 0; height: 280px; justify-content: space-between; text-align: center; } } ``` ```js const playlistSongs = document getElementById(\"playlist-songs\"); const playButton = document getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surfacemp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "797805ed9ba35e491f7331ce749533b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "\"https://cdn freecodecamp org/curriculum/js-music-player/still-learning mp3\", }, { id: 3, title: \"Cruising for a Musing\", artist: \"Quincy Larson\", duration: \"3:34\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\", }, { id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamporg/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down mp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "104e9cb7893532d3ffb04960691d512d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "artist: \"Quincy Larson\", duration: \"3:10\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\", }, { id: 9, title: \"Chasing That Feeling\", artist: \"Quincy Larson\", duration: \"2:43\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\", }, ]; const audio = new Audio(); let userData = { songs: [ allSongs], currentSong: null, songCurrentTime: 0, }; const playSong = (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userDatacurrentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\n--fcc-editable-region--\nconst pauseSong = () => {\nuserData songCurrentTime = audio currentTime;\n};\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\" onclick=\"playSong(${song id})\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 520,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "44ecbe841b959898d067095f893108c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "<li id=\"song-${song id}\" class=\"playlist-song\"> <button class=\"playlist-song-info\" onclick=\"playSong(${song id})\"> <span class=\"playlist-song-title\">${song title}</span> <span class=\"playlist-song-artist\">${song artist}</span> <span class=\"playlist-song-duration\">${song duration}</span> </button> <button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\"> <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/> <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 111103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nplayButton addEventListener(\"click\", () => {\nif (userData currentSong === null) {\nplaySong(userData songs[0] id);\n} else {\nplaySong(userData currentSong",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 542,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "62e0d1f7259d78df55379b475882e5eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg> </button> </li>; }) join(\"\"); playlistSongs innerHTML = songsHTML; }; playButton addEventListener(\"click\", () => { if (userData currentSong === null) { playSong(userData songs[0] id); } else { playSong(userData currentSongid);\n}\n});\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655220a3fa5c3c200bc8e938.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "99214ae3e33ab2d4a30a6021389377b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 655235c2e607297f00316650\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nNext, use the classList property and the add() method to add the \"playing\" class to the playButton element This will look for the class \"playing\" in the CSS file and add it to the playButton element To finally play the song, use the play() method on the audio variable play() is a method from the web audio API for playing an mp3 file --hints--\nYou should use the classList property and the add method to add the class \"playing\" to playButton js\nassert match(code, /playButton\\ classList\\ add\\(\\s*(\"|')playing\\1\\s*\\)\\s*; /)\nYou should use the play() method on the audio variable js\nassert match(code, /audio\\ play\\(\\s*\\)\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player, playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "a7ad3c14f6b606daf7791bfa4450a81c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player, playlist { width: 450px; background-color: var(--background-color); border: 3px solid var(--foreground-color); }player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n} player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "a31df939e83881b8017b5eadf8b643d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "} parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; } player-display { display: flex; flex-direction: column; row-gap: 20px; padding: 14px; background-color: var(--background-color); height: 153px; width: 226px; }player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "65fcce9628558b5fe4dc3c0f141f52cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "4e4d496c2486dd7d03a0a3a073eac74a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "8dae053e56fef03f33c9df169c7920a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "783a633c292212c57bb9bbfd6c8f45bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "1f372c596c5b7e4111cfd01ac3ba8576",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\n--fcc-editable-region--\n--fcc-editable-region--\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "0085bec0bae50cdd874c5b06cf8c4beb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "}; const playSong = (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } userData currentSong = song; --fcc-editable-region-- --fcc-editable-region-- }; const renderSongs = (array) => { const songsHTML = array map((song)=> { return <li id=\"song-${songid}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 560,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "0a1665d5613afe4ab0ed38e57dbd1778",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 494102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19336,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655235c2e607297f00316650.md",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "79a217bbe2d020a3dd1f3076587ba35a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 6552303a9a78704f8ff072e9\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nNow it is time to test out the pause button Add a \"click\" event listener to the pauseButton element, then pass in pauseSong as the second argument of the event listener This is the function the event listener will run Test out your app by first clicking on the play button followed by the pause button You should see that everything is working as expected --hints--\nYou should call the addEventListener() method on your pauseButton variable js\nassert match(code, /pauseButton\\ addEventListener\\(/)\nYour event listener should listen for a \"click\" event js\nassert match(code, /pauseButton\\ addEventListener\\(\\s*('|\"|`)click\\1/)\nYou should pass in pauseSong as the second argument of your addEventListener method js\nassert match(code, /pauseButton\\ addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*pauseSong\\s*\\)/)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "0f59cd9649430b8295e03d1744ffd24d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player,playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "4b1d29872848999bd597a108332d7b91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "1faeb07801674732e3cf89819947f96f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "6f2882f0b42d6e92e184299d6529b93a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "9cc4fcb2420e8f4e928b7dcafa8f8ff2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "b966c2207354ceece3ed455e556b9699",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "7fca4bc81b26dafc6d47706082c7dfbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\nconst pauseSong = () => {\nuserData songCurrentTime = audio currentTime;\nplayButton classList remove(\"playing\");\naudio",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "63ffddd141be10cdd8e79d470656a739",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "= (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } userData currentSong = song; playButton classList add(\"playing\"); audio play(); }; const pauseSong = () => { userData songCurrentTime = audio currentTime; playButton classList remove(\"playing\"); audiopause();\n};\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\" onclick=\"playSong(${song id})\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 551,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "8814525407482ec391293d25abb321f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10 5316 4 88969 10 0281 521121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nplayButton addEventListener(\"click\", () => {\nif (userData currentSong === null) {\nplaySong(userData songs[0] id);\n} else {\nplaySong(userData currentSong id);\n}\n});\n--fcc-editable-region--\n--fcc-editable-region--\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552303a9a78704f8ff072e9.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "850e353b21db0e544ba2b9c20fd8f844",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 6552385244ccf89b77d6b332\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nYou need to work on playing the next song and the previous song For this, you will need a playNextSong and playPreviousSong function Use const and arrow syntax to create an empty playNextSong function --hints--\nYou should use const to create an empty function named playNextSong js\nassert match(code, /const\\s+playNextSong\\s*=\\s*/)\nplayNextSong should be a function js\nassert isFunction(playNextSong)\nYour playNextSong function should use an arrow syntax js\nassert match(code, /const\\s+playNextSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*/)\nYour playNextSong function  should be empty js\nassert match(code, /const\\s+playNextSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\n \\s* \\}\\s*; /)\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "20b2fc9307f76ea075c0c0115e071a78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player,playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "8a8cd1456619c1eb5e9b93bf1094ecfb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "1a1d43be872a72f9c80e8b1c074747bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "c2963cfe8884e7236fb527941c818358",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "2587a6a502ddc9045fe1e79241214930",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "526de76fd77661ae6e39949da1c14832",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "d632819f0a02717d95a8bcfc48baaec0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\nconst pauseSong = () => {\nuserData songCurrentTime = audio currentTime;\nplayButton classList remove(\"playing\");\naudio",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "92f23b2a61f291bbd3f48b7849f14d37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "= (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } userData currentSong = song; playButton classList add(\"playing\"); audio play(); }; const pauseSong = () => { userData songCurrentTime = audio currentTime; playButton classList remove(\"playing\"); audiopause();\n};\n--fcc-editable-region--\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\" onclick=\"playSong(${song id})\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 548,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "41ecb6a4f36557985fedaf62dd3a8461",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10 8143C4 94102 105316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst getCurrentSongIndex = () => userData songs indexOf(userData currentSong);\nplayButton addEventListener(\"click\", () => {\nif (userData currentSong === null) {\nplaySong(userData songs[0] id);\n} else {\nplaySong(userData currentSong id);\n}\n});\npauseButton addEventListener(\"click\",  pauseSong);\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\6552385244ccf89b77d6b332.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "3706912ceae11bdcc25f6749f4eb5c25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 655243068222c2c1166b90b0\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nInside the playNextSong function, create an if statement to check if the currentSong of userData is strictly equal to null This will check if there's no current song playing in the userData object If the condition is true, call the playSong function with the id of the first song in the userData songs array as an argument --hints--\nYou should not modify the existing playNextSong function and its content js\nassert match(code, /const\\s+playNextSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s* *\\s* *\\s* *\\s*\\}\\s*; /)\nYou should create an if statement with the condition userData currentSong === null ```js\nconst splitter = code split('const getCurrentSongIndex = () => userData songs indexOf(userData currentSong);')\nassert match(splitter[0], /if\\s(\\suserData\\ currentSong\\s===\\snull\\s)\\s{\\s*/)\n```\nYou should call the playSong function with userData songs[0] id inside the if statement ```js\nconst splitter = code split('const getCurrentSongIndex = () => userData songs indexOf(userData currentSong);')\nassert match(splitter[0], /if\\s(\\suserData\\ currentSong\\s===\\snull\\s)\\s{\\splaySong(\\suserData\\ songs\\s[\\s0\\s]\\s id\\s)\\s;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "68811c9483e69df62cb3e90521a17827",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "its content js assert match(code, /const\\s+playNextSong\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s* *\\s* *\\s* *\\s*\\}\\s*; /) You should create an if statement with the condition userData currentSong === null ```js const splitter = code split('const getCurrentSongIndex = () => userData songs indexOf(userData currentSong);') assert match(splitter[0], /if\\s(\\suserData\\ currentSong\\s===\\snull\\s)\\s{\\s*/) ``` You should call the playSong function with userData songs[0] id inside the if statement ```js const splitter = code split('const getCurrentSongIndex = () => userData songs indexOf(userData currentSong);') assert match(splitter[0], /if\\s(\\suserData\\ currentSong\\s===\\snull\\s)\\s{\\splaySong(\\suserData\\ songs\\s[\\s0\\s]\\s id\\s)\\s;\\s*}/)\n```\n--seed--\n--seed-contents--\n```html\nLearn Basic String and Array Methods by Building a Music Player App\nfreeCodeCamp\nPlaylist\n```\n```css\n:root {\n/ colors /\n--primary-color: #dfdfe2;\n--secondary-color: #ffffff;\n--app-background-color: #4d4d62;\n--background-color: #1b1b32;\n--foreground-color: #3b3b4f;\n--highlight-color: #f1be32;\n/ font sizes /\n--root-font-size: 16px;\nfont-size: var(--root-font-size);\n/ font-families /\n--font-headline: \"Roboto Mono\", monospace;\n--font-family: \"Lato\", sans-serif;\n}\n,\n::after,\n*::before {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: var(--app-background-color);\ncolor: var(--primary-color);\nfont-family: var(--font-family);\n}\nh1 {\nfont-size: 1 125rem;\nline-height: 1 6;\n}\nh2 {\nfont-size: var(--root-font-size);\n}\nul {\nmargin: 0;\n} container {\nmargin-top: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 5px;\n} player,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "f3560285abbaa488a689a9403b4f58a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "--background-color: #1b1b32; --foreground-color: #3b3b4f; --highlight-color: #f1be32; / font sizes / --root-font-size: 16px; font-size: var(--root-font-size); / font-families / --font-headline: \"Roboto Mono\", monospace; --font-family: \"Lato\", sans-serif; } , ::after, *::before { box-sizing: border-box; } body { background-color: var(--app-background-color); color: var(--primary-color); font-family: var(--font-family); } h1 { font-size: 1 125rem; line-height: 1 6; } h2 { font-size: var(--root-font-size); } ul { margin: 0; } container { margin-top: 10px; display: flex; flex-direction: column; justify-content: center; align-items: center; row-gap: 5px; } player,playlist {\nwidth: 450px;\nbackground-color: var(--background-color);\nborder: 3px solid var(--foreground-color);\n} player {\nheight: 260px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n} player-bar, playlist-bar {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 5px;\nwidth: 100%;\nheight: 30px;\nbackground-color: var(--foreground-color);\n} parallel-lines {\ndisplay: flex;\nflex-wrap: wrap;\nrow-gap: 6px;\npadding: 0 5px;\n} parallel-lines > div {\nheight: 2px;\nwidth: 100%;\nmin-width: 75px;\nbackground-color: var(--highlight-color);\n} fcc-title, playlist-title {\ncolor: var(--secondary-color);\nmargin: 0 10px;\nfont-family: var(--font-headline);\n} player-content {\ndisplay: flex;\nbackground-color: var(--foreground-color);\nwidth: 430px;\nheight: 200px;\ncolumn-gap: 13px;\nalign-items: center;\njustify-content: center;\n}\nplayer-album-art {\nbackground-color: var(--secondary-color);\nborder: 6px solid var(--background-color);\n}\nplayer-album-art img {\nwidth: 150px;\ndisplay: block;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "3c44e11d950515819b22d56b60b0b110",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "100%; height: 30px; background-color: var(--foreground-color); } parallel-lines { display: flex; flex-wrap: wrap; row-gap: 6px; padding: 0 5px; } parallel-lines > div { height: 2px; width: 100%; min-width: 75px; background-color: var(--highlight-color); } fcc-title, playlist-title { color: var(--secondary-color); margin: 0 10px; font-family: var(--font-headline); } player-content { display: flex; background-color: var(--foreground-color); width: 430px; height: 200px; column-gap: 13px; align-items: center; justify-content: center; } player-album-art { background-color: var(--secondary-color); border: 6px solid var(--background-color); } player-album-art img { width: 150px; display: block; }player-display {\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 14px;\nbackground-color: var(--background-color);\nheight: 153px;\nwidth: 226px;\n} player-display-song-artist {\nheight: 80px;\n} player-buttons svg {\nfill: var(--primary-color);\n} playing > svg {\nfill: var(--highlight-color);\n} player-buttons {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\nbackground: transparent;\nborder: none;\ncolor: var(--primary-color);\ncursor: pointer;\nfont-size: var(--root-font-size);\noutline-color: var(--highlight-color);\ntext-align: center;\n} playlist-song {\noutline-color: var(--highlight-color);\n} playlist li:not(:last-child) {\nborder-bottom: 1px solid var(--background-color);\n}\nbutton:focus, playlist-song:focus {\noutline-style: dashed;\noutline-width: 2px;\n}\n/ Playlist / playlist {\nheight: auto;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nrow-gap: 10px;\n}\nplaylist-songs {\nwidth: 430px;\nheight: 100%;\nbackground-color: var(--foreground-color);\ndisplay: flex;\nflex-direction: column;\nrow-gap: 8px;\npadding: 8px 9px;\nvisibility: visible;\njustify-content: start;\nlist-style: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "e1d61410e5299847e8c40b8bfaa5c2e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "border: none; color: var(--primary-color); cursor: pointer; font-size: var(--root-font-size); outline-color: var(--highlight-color); text-align: center; } playlist-song { outline-color: var(--highlight-color); } playlist li:not(:last-child) { border-bottom: 1px solid var(--background-color); } button:focus, playlist-song:focus { outline-style: dashed; outline-width: 2px; } / Playlist / playlist { height: auto; padding: 10px; display: flex; flex-direction: column; align-items: center; row-gap: 10px; } playlist-songs { width: 430px; height: 100%; background-color: var(--foreground-color); display: flex; flex-direction: column; row-gap: 8px; padding: 8px 9px; visibility: visible; justify-content: start; list-style: none; }playlist-song {\ndisplay: flex;\nheight: 55px;\njustify-content: space-between;\nalign-items: center;\npadding: 5px;\n}\n[aria-current=\"true\"] {\nbackground-color: var(--background-color);\n}\n[aria-current=\"true\"] p {\ncolor: var(--highlight-color);\n} playlist-song-info {\nheight: 100%;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-around;\ncolumn-gap: 7px;\npadding: 5px 0;\nfont-family: var(--font-family);\n}\nplayer-song-title,\nplayer-song-artist {\nmargin: 0;\n}\nplayer-song-artist {\ncolor: var(--highlight-color);\nfont-size: 0 75rem;\n}\nplayer-song-title {\nfont-size: 1 125rem;\n} playlist-song-title {\nfont-size: 0 85rem;\nwidth: 241px;\ntext-align: left;\n} playlist-song-artist {\nfont-size: 0 725rem;\nwidth: 80px;\n} playlist-song-duration {\nfont-size: 0 725rem;\nmargin: auto;\nfont-family: var(--font-headline);\nwidth: 30px;\n} playlist-song-delete {\npadding: 0;\nwidth: 20px;\nheight: 20px;\n} playlist-song-delete, playlist-song-delete {\nfill: var(--foreground-color);\n} playlist-song-delete:hover circle, playlist-song-delete:focus circle {\nfill: #ff0000;\n}\n@media (max-width: 700px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "d4d813b83a51244d0b664b573f547f83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "player-song-artist { margin: 0; } player-song-artist { color: var(--highlight-color); font-size: 0 75rem; } player-song-title { font-size: 1 125rem; } playlist-song-title { font-size: 0 85rem; width: 241px; text-align: left; } playlist-song-artist { font-size: 0 725rem; width: 80px; } playlist-song-duration { font-size: 0 725rem; margin: auto; font-family: var(--font-headline); width: 30px; } playlist-song-delete { padding: 0; width: 20px; height: 20px; } playlist-song-delete, playlist-song-delete { fill: var(--foreground-color); } playlist-song-delete:hover circle, playlist-song-delete:focus circle { fill: #ff0000; } @media (max-width: 700px) {player, playlist {\nwidth: 300px;\n} player {\nheight: 340px;\n}\n#playlist-songs {\nheight: 280px;\npadding: 5px 6px;\noverflow-y: scroll;\noverflow-x: hidden;\nscrollbar-color: var(--background-color) var(--secondary-color);\nscrollbar-width: thin;\n}\n#playlist-songs::-webkit-scrollbar {\nwidth: 5px;\n}\n#playlist-songs::-webkit-scrollbar-track {\nbackground: var(--background-color);\n}\n#playlist-songs::-webkit-scrollbar-thumb {\nbackground: var(--secondary-color);\n}\nh1 {\nfont-size: 0 813rem;\n}\nh2 {\nfont-size: 0 75rem;\n} player-bar, playlist-bar, player-content,\n#playlist-songs {\nwidth: 280px;\n} playlist-song {\njustify-content: space-between;\n} playlist-song-title {\nwidth: 140px;\n} playlist-song-artist {\nwidth: 40px;\n} playlist-song-duration > button {\npadding: 0;\n} player-content {\ndisplay: inline;\nposition: relative;\njustify-items: center;\nheight: 100%;\n}\n#player-album-art {\nz-index: -100;\nheight: 280px;\nbox-shadow: none;\nbackground: #000;\n}\n#player-album-art img {\nwidth: 100%;\nopacity: 0 6;\n} player-display-song-artist {\npadding: 0 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "547924921f415ec176427eab022d5d40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "0 813rem; } h2 { font-size: 0 75rem; } player-bar, playlist-bar, player-content, #playlist-songs { width: 280px; } playlist-song { justify-content: space-between; } playlist-song-title { width: 140px; } playlist-song-artist { width: 40px; } playlist-song-duration > button { padding: 0; } player-content { display: inline; position: relative; justify-items: center; height: 100%; } #player-album-art { z-index: -100; height: 280px; box-shadow: none; background: #000; } #player-album-art img { width: 100%; opacity: 0 6; } player-display-song-artist { padding: 0 10px; }player-display-song-artist > p {\nwhite-space: pre-wrap;\n} player-display {\nposition: absolute;\nwidth: 100%;\nz-index: 1000;\nbackground-color: transparent;\ntop: 0;\nheight: 280px;\njustify-content: space-between;\ntext-align: center;\n}\n}\n```\n```js\nconst playlistSongs = document getElementById(\"playlist-songs\");\nconst playButton = document getElementById(\"play\");\nconst pauseButton = document getElementById(\"pause\");\nconst nextButton = document getElementById(\"next\");\nconst previousButton = document getElementById(\"previous\");\nconst shuffleButton = document getElementById(\"shuffle\");\nconst allSongs = [\n{\nid: 0,\ntitle: \"Scratching The Surface\",\nartist: \"Quincy Larson\",\nduration: \"4:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\",\n},\n{\nid: 1,\ntitle: \"Can't Stay Down\",\nartist: \"Quincy Larson\",\nduration: \"4:15\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\",\n},\n{\nid: 2,\ntitle: \"Still Learning\",\nartist: \"Quincy Larson\",\nduration: \"3:51\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learning",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "99e96380a6af8672d4262643e5100bc9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "getElementById(\"play\"); const pauseButton = document getElementById(\"pause\"); const nextButton = document getElementById(\"next\"); const previousButton = document getElementById(\"previous\"); const shuffleButton = document getElementById(\"shuffle\"); const allSongs = [ { id: 0, title: \"Scratching The Surface\", artist: \"Quincy Larson\", duration: \"4:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/scratching-the-surface mp3\", }, { id: 1, title: \"Can't Stay Down\", artist: \"Quincy Larson\", duration: \"4:15\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\", }, { id: 2, title: \"Still Learning\", artist: \"Quincy Larson\", duration: \"3:51\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/still-learningmp3\",\n},\n{\nid: 3,\ntitle: \"Cruising for a Musing\",\nartist: \"Quincy Larson\",\nduration: \"3:34\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cruising-for-a-musing mp3\",\n},\n{\nid: 4,\ntitle: \"Never Not Favored\",\nartist: \"Quincy Larson\",\nduration: \"3:35\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\",\n},\n{\nid: 5,\ntitle: \"From the Ground Up\",\nartist: \"Quincy Larson\",\nduration: \"3:12\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\",\n},\n{\nid: 6,\ntitle: \"Walking on Air\",\nartist: \"Quincy Larson\",\nduration: \"3:25\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\",\n},\n{\nid: 7,\ntitle: \"Can't Stop Me Can't Even Slow Me Down \",\nartist: \"Quincy Larson\",\nduration: \"3:52\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-down",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "0de60d1c35f6282649da82e02ff5ee4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "id: 4, title: \"Never Not Favored\", artist: \"Quincy Larson\", duration: \"3:35\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/never-not-favored mp3\", }, { id: 5, title: \"From the Ground Up\", artist: \"Quincy Larson\", duration: \"3:12\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/from-the-ground-up mp3\", }, { id: 6, title: \"Walking on Air\", artist: \"Quincy Larson\", duration: \"3:25\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/walking-on-air mp3\", }, { id: 7, title: \"Can't Stop Me Can't Even Slow Me Down \", artist: \"Quincy Larson\", duration: \"3:52\", src: \"https://cdn freecodecamp org/curriculum/js-music-player/cant-stop-me-cant-even-slow-me-downmp3\",\n},\n{\nid: 8,\ntitle: \"The Surest Way Out is Through\",\nartist: \"Quincy Larson\",\nduration: \"3:10\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/the-surest-way-out-is-through mp3\",\n},\n{\nid: 9,\ntitle: \"Chasing That Feeling\",\nartist: \"Quincy Larson\",\nduration: \"2:43\",\nsrc: \"https://cdn freecodecamp org/curriculum/js-music-player/chasing-that-feeling mp3\",\n},\n];\nconst audio = new Audio();\nlet userData = {\nsongs: [ allSongs],\ncurrentSong: null,\nsongCurrentTime: 0,\n};\nconst playSong = (id) => {\nconst song = userData songs find((song) => song id === id);\naudio src = song src;\naudio title = song title;\nif (userData currentSong === null || userData currentSong id == song id) {\naudio currentTime = 0;\n} else {\naudio currentTime = userData songCurrentTime;\n}\nuserData currentSong = song;\nplayButton classList add(\"playing\");\naudio play();\n};\nconst pauseSong = () => {\nuserData songCurrentTime = audio currentTime;\nplayButton classList remove(\"playing\");\naudio",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "64b6679038b5e8f515706a48c6868af2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "= (id) => { const song = userData songs find((song) => song id === id); audio src = song src; audio title = song title; if (userData currentSong === null || userData currentSong id == song id) { audio currentTime = 0; } else { audio currentTime = userData songCurrentTime; } userData currentSong = song; playButton classList add(\"playing\"); audio play(); }; const pauseSong = () => { userData songCurrentTime = audio currentTime; playButton classList remove(\"playing\"); audiopause();\n};\n--fcc-editable-region--\nconst playNextSong = () => {\n}\n--fcc-editable-region--\nconst renderSongs = (array) => {\nconst songsHTML = array map((song)=> {\nreturn <li id=\"song-${song id}\" class=\"playlist-song\">\n<button class=\"playlist-song-info\" onclick=\"playSong(${song id})\">\n<span class=\"playlist-song-title\">${song title}</span>\n<span class=\"playlist-song-artist\">${song artist}</span>\n<span class=\"playlist-song-duration\">${song duration}</span>\n</button>\n<button class=\"playlist-song-delete\" aria-label=\"Delete ${song title}\">\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www w3 org/2000/svg\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4d4d62\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 32587 5 18571C5 7107 4 90301 6 28333 4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 547,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "b873e3cbbeb99dda0549ca01b669b933",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
    "source_type": "git_repo",
    "title": "Learn Basic String and Array Methods by Building a Music Player App",
    "content": "4 94814 6 60485 5 28651L8 6 75478L9 39515 5 28651C9 71667 4 94814 10 2893 4 90301 10 6741 5 18571C11 059 5 4684 11 1103 5 97188 10 7888 6 31026L9 1832 7 99999L10 7888 9 68974C11 1103 10 0281 11 059 10 5316 10 6741 10 8143C10 2893 11 097 9 71667 11 0519 9 39515 10 7135L8 9 24521L6 60485 10 7135C6 28333 11 0519 5 7107 11 097 5 32587 108143C4 94102 10 5316 4 88969 10 0281 5 21121 9 68974L6 8168 7 99999L5 21122 6 31026C4 8897 5 97188 4 94102 5 4684 5 32587 5 18571Z\" fill=\"white\"/></svg>\n</button>\n</li>;\n}) join(\"\");\nplaylistSongs innerHTML = songsHTML;\n};\nconst getCurrentSongIndex = () => userData songs indexOf(userData currentSong);\nplayButton addEventListener(\"click\", () => {\nif (userData currentSong === null) {\nplaySong(userData songs[0] id);\n} else {\nplaySong(userData currentSong id);\n}\n});\npauseButton addEventListener(\"click\",  pauseSong);\nconst sortSongs = () => {\nuserData songs sort((a,b) => {\nif (a title < b title) {\nreturn -1;\n}\nif (a title > b title) {\nreturn 1;\n}\nreturn 0;\n});\nreturn userData songs;\n};\nrenderSongs(sortSongs());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\15-javascript-algorithms-and-data-structures-22\\learn-basic-string-and-array-methods-by-building-a-music-player\\655243068222c2c1166b90b0.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 10,
    "total_chunks": 11
  }
]