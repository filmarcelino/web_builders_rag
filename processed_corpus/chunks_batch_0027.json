[
  {
    "id": "42fdd281cca37ee3d0d87793a5bb3c0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\672d2654f78cbf20e0ba4501.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d2654f78cbf20e0ba4501\ntitle: What Is Bracket Notation, and How Do You Access Characters from a String challengeType: 19\ndashedName: what-is-bracket-notation-and-how-do-you-access-characters-from-a-string\n--description--\nIn JavaScript, strings are treated as sequences of characters, and each character in a string can be accessed using bracket notation This allows you to retrieve a specific character from a string based on its position, which is called its index An index is the position of a character within a string, and it is zero-based This means that the first character of a string has an index of 0, the second character has an index of 1, and so on For example, in the string hello, the character h is at index 0, e is at index 1, l is at index 2, and so on Bracket notation uses square brackets ([]) and the index of the character you want to access Let’s look at an example:\njs\nlet greeting = \"hello\";\nconsole log(greeting[1]); // Output: \"e\"\nIn this example, we can access the character at index 1, which is e To get the last character of a string, you can use the length of the string minus one The length property of a string tells you how many characters it contains, so to access the last character, you would subtract one from the length:\njs\nlet greeting = \"hello\";\nconsole log(greeting[greeting length - 1]); // Output: \"o\"\nIn this case, the length of hello is 5, and the last character (o) is at index 4 which is 5 - 1 If you want to get multiple characters, you can use bracket notation like this:\njs\nlet greeting = \"hello\";\nlet firstTwo = greeting[0] + greeting[1]; // Output: \"he\"\nconsole log(firstTwo);\nIn this example, we are concatenating the first and second characters using bracket notation to form the string he Bracket notation is useful when you need to access specific characters in a string, such as extracting initials from a name or checking a specific letter for validation --questions--\n--text--\nWhat is the index of the character \"r\" in the string \"JavaScript\" --answers--\n2\n--feedback--\nRemember that index numbers start from 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\672d2654f78cbf20e0ba4501.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c07fcbbf17a297191bb9cb20a434c371",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\672d2654f78cbf20e0ba4501.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "// Output: \"he\" console log(firstTwo); In this example, we are concatenating the first and second characters using bracket notation to form the string he Bracket notation is useful when you need to access specific characters in a string, such as extracting initials from a name or checking a specific letter for validation --questions-- --text-- What is the index of the character \"r\" in the string \"JavaScript\" --answers-- 2 --feedback-- Remember that index numbers start from 04\n--feedback--\nRemember that index numbers start from 0 6\n8\n--feedback--\nRemember that index numbers start from 0 --video-solution--\n3\n--text--\nHow would you access the last character of a string using bracket notation --answers--\nstring[length]\n--feedback--\nThink about how to find the index of the last character string[string length]\n--feedback--\nThink about how to find the index of the last character string[string length - 1]\nstring[string - 1]\n--feedback--\nThink about how to find the index of the last character --video-solution--\n3\n--text--\nWhat does bracket notation allow you to do with strings in JavaScript --answers--\nAdd new characters to the string --feedback--\nFocus on how bracket notation interacts with individual characters Change the data type of the string --feedback--\nFocus on how bracket notation interacts with individual characters Access specific characters in the string using their index Convert the string into an array of characters --feedback--\nFocus on how bracket notation interacts with individual characters --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\672d2654f78cbf20e0ba4501.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "afbf60702bedbc0fbcb972080bee66ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263df0eb568a7b450f2fc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673263df0eb568a7b450f2fc\ntitle: How Do You Create a Newline in Strings and Escape Strings challengeType: 19\ndashedName: how-do-you-create-a-newline-in-strings-and-escape-strings\n--description--\nWhen working with strings in JavaScript, there are times when you need to include special characters that the JavaScript engine might otherwise misinterpret Two common tasks involve creating a newline within a string and escaping certain characters (like quotes) to make sure they appear correctly In many programming languages, including JavaScript, you can create a newline in a string using a special character called an escape sequence The most common escape sequence for newlines is \\n For example, if you want to break a string into multiple lines, you would use \\n where you want the new line to begin:\njs\nlet poem = \"Roses are red,\\nViolets are blue,\\nJavaScript is fun,\\nAnd so are you \";\nconsole log(poem);\nThe output will be:\nmd\nRoses are red,\nViolets are blue,\nJavaScript is fun,\nAnd so are you The \\n escape sequence tells JavaScript to insert a line break at that point, which results in the string being displayed across multiple lines Another important concept when working with strings is escaping characters Sometimes, you need to include characters in your string that JavaScript normally uses for something else, such as quotes If you simply use quotes inside a string without escaping them, it can cause an error because JavaScript will think you're trying to end the string For example, this will cause an error:\njs\nlet statement = \"She said, \"Hello \"\";\nJavaScript gets confused because it thinks the string ends after the word \"said,\" but, you want the quotes around \"Hello \" to be part of the string To fix this, you can escape the inner quotes by placing a backslash (\\) before them:\njs\nlet statement = \"She said, \\\"Hello \\\"\";\nconsole log(statement); // Output: She said, \"Hello \"\nThe backslash tells JavaScript to treat the quotes as literal characters, so they appear correctly in the output You can also escape other special characters, such as the backslash itself (\\\\), or single quotes within a string surrounded by single quotes (\\') Here's another example using single quotes:\njs\nlet quote = 'It\\'s a beautiful day ';\nconsole log(quote); // Output: It's a beautiful day",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263df0eb568a7b450f2fc.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "abef3e30e9fcbb1988700078427c6f12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263df0eb568a7b450f2fc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "said, \\\"Hello \\\"\"; console log(statement); // Output: She said, \"Hello \" The backslash tells JavaScript to treat the quotes as literal characters, so they appear correctly in the output You can also escape other special characters, such as the backslash itself (\\\\), or single quotes within a string surrounded by single quotes (\\') Here's another example using single quotes: js let quote = 'It\\'s a beautiful day '; console log(quote); // Output: It's a beautiful dayBy escaping the single quote with \\', JavaScript knows to include it as part of the string rather than ending the string early Escaping and creating newlines are essential when you’re formatting output or handling special characters in strings These techniques help you prevent errors and ensure your text appears exactly as intended --questions--\n--text--\nWhich of the following escape sequences would you use to create a new line in a string --answers--\n\\\\\n--feedback--\nThink about how you would break a string into multiple lines \\t\n--feedback--\nThink about how you would break a string into multiple lines \\n\n\\\"\n--feedback--\nThink about how you would break a string into multiple lines --video-solution--\n3\n--text--\nWhy is it necessary to escape certain characters within a string --answers--\nTo perform mathematical operations on the string --feedback--\nConsider how JavaScript misinterprets special characters without escaping them To avoid syntax errors and ensure special characters are included in the string To combine two different strings into one --feedback--\nConsider how JavaScript misinterprets special characters without escaping them To change the string to uppercase --feedback--\nConsider how JavaScript misinterprets special characters without escaping them --video-solution--\n2\n--text--\nHow would you correctly include quotes within a string that is already wrapped in quotes --answers--\nUse single quotes inside double quotes --feedback--\nThink about how you can tell JavaScript to treat the inner quotes as part of the string Use the \\ character before the quotes you want to include Use \\n to break the string --feedback--\nThink about how you can tell JavaScript to treat the inner quotes as part of the string JavaScript doesn't allow quotes inside other quotes --feedback--\nThink about how you can tell JavaScript to treat the inner quotes as part of the string --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263df0eb568a7b450f2fc.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "75cfd286b6dae5d56734e65ebb74a90c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263d58da27ea7809963bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673263d58da27ea7809963bf\ntitle: What Are Template Literals, and What Is String Interpolation challengeType: 19\ndashedName: what-are-template-literals-and-what-is-string-interpolation\n--description--\nIn JavaScript, template literals are a powerful and flexible way to work with strings Unlike regular strings, which use single (') or double (\") quotes, template literals are defined with backticks (`) They allow for easier string manipulation, including embedding variables directly inside a string, a feature known as string interpolation Template literals make it easier to create strings that span multiple lines or include expressions (like variables or even JavaScript code) directly within the string Here's a basic example of a template literal:\njs\nlet name = \"Alice\";\nlet greeting = `Hello, ${name} `; // Output: \"Hello, Alice \"\nNotice the use of backticks instead of single or double quotes The ${name} syntax is an example of string interpolation, where the value of the variable name is directly inserted into the string String interpolation allows you to embed variables and expressions inside a string This is a significant improvement over the older method, where you would concatenate strings and variables using the + operator Here is an example using string concatenation and the plus (+) operator:\njs\nlet name = \"Alice\";\nlet age = 25;\nlet message = \"My name is \" + name + \" and I am \" + age + \" years old \";\nconsole log(message); // Output: \"My name is Alice and I am 25 years old \"\nAnd here is an example using template literals and string interpolation:\njs\nlet message = `My name is ${name} and I am ${age} years old `;\nconsole log(message); // Output: \"My name is Alice and I am 25 years old \"\nAs you can see, string interpolation with template literals is much cleaner and easier to read, especially when you're working with multiple variables Another great feature of template literals is that they support multiline strings With regular strings, you would need to use escape characters (\\n) to create new lines With template literals, you can simply write the string across multiple lines, and the formatting is preserved:\n``js\nlet poem =Roses are red,\nViolets are blue,\nJavaScript is fun,\nAnd so are you `;\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4442,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263d58da27ea7809963bf.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6a757917e4b53082a1c08b95a0085523",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263d58da27ea7809963bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is much cleaner and easier to read, especially when you're working with multiple variables Another great feature of template literals is that they support multiline strings With regular strings, you would need to use escape characters (\\n) to create new lines With template literals, you can simply write the string across multiple lines, and the formatting is preserved: ``js let poem =Roses are red, Violets are blue, JavaScript is fun, And so are you `; consolelog(poem);\n```\nThe output will retain the line breaks as written:\nmd\nRoses are red,\nViolets are blue,\nJavaScript is fun,\nAnd so are you Template literals are particularly useful when you need to include variables or expressions in strings, format complex strings, or work with multiline text They are more concise and readable compared to traditional string concatenation --questions--\n--text--\nWhich of the following symbols is used to define a template literal --answers--\nSingle quotes (')\n--feedback--\nTemplate literals require a special symbol not used in regular strings Double quotes (\")\n--feedback--\nTemplate literals require a special symbol not used in regular strings Backticks (`)\nSquare brackets ([])\n--feedback--\nTemplate literals require a special symbol not used in regular strings --video-solution--\n3\n--text--\nWhat is string interpolation used for in template literals --answers--\nCombining multiple strings without any variables --feedback--\nString interpolation helps you avoid concatenation Inserting variables and expressions directly into a string Changing the type of a string to a number --feedback--\nString interpolation helps you avoid concatenation Creating functions that manipulate strings --feedback--\nString interpolation helps you avoid concatenation --video-solution--\n2\n--text--\nWhich of the following is a feature of template literals that makes them better suited for writing multiline strings compared to regular strings --answers--\nTemplate literals automatically capitalize all letters --feedback--\nConsider how regular strings handle new lines Template literals preserve line breaks without needing escape characters Template literals allow for mathematical operations on strings --feedback--\nConsider how regular strings handle new lines Template literals require less memory to store strings --feedback--\nConsider how regular strings handle new lines --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4442,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263d58da27ea7809963bf.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "992dfe326c6e270da36d3d364aada717",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263f4a5899da8124542fd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673263f4a5899da8124542fd\ntitle: What Is the prompt() Method, and How Does It Work challengeType: 19\ndashedName: what-is-the-prompt-method-and-how-does-it-work\n--description--\nThe prompt() method is an important part of JavaScript's interaction with the user It’s one of the simplest ways to get input from a user through a small pop-up dialog box You'll often see it used in cases where the webpage needs a piece of information from the user, such as a name or some other form of text input So, what exactly does the prompt() method do It opens a dialog box that asks the user for some input, and then it returns the text entered by the user as a string The prompt() method takes two arguments: The first one is the message which will appear inside the dialog box, typically prompting the user to enter information And the second one is a default value which is optional and will fill the input field initially Here's an example of how it works:\njs\nlet userName = prompt(\"What is your name \", \"Guest\");\nIn this example, the prompt() method displays a dialog box with the message What is your name and an input field that initially contains the value Guest If the user types their name and presses \"OK\", the userName variable will store the entered value If the user presses \"Cancel,\" the userName variable will be set to null null signifies that the user did not provide any input When the page first loads, you'll see the prompt dialog box appear with the message What is your name and the input field pre-filled with Guest Keep in mind that the prompt() method will halt the execution of the script until the user interacts with the dialog box This means the rest of your JavaScript code won’t run until the user either provides input and clicks \"OK\", or cancels the prompt One other point to consider is that while prompt() is useful for quick testing or small applications, it's generally avoided in modern, complex web applications due to its disruptive nature and inconsistent behavior across different browsers Here's an example:\njs\nlet age = prompt(\"How old are you \");\nif (age == null) {\nconsole log(\"You are \" + age + \" years old \");\n} else {\nconsole log(\"User canceled the prompt \");\n}\nIn this example, if the user provides input, it will be displayed in the console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263f4a5899da8124542fd.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "722348a0decbcde30e4fde8ee2db75b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263f4a5899da8124542fd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "testing or small applications, it's generally avoided in modern, complex web applications due to its disruptive nature and inconsistent behavior across different browsers Here's an example: js let age = prompt(\"How old are you \"); if (age == null) { console log(\"You are \" + age + \" years old \"); } else { console log(\"User canceled the prompt \"); } In this example, if the user provides input, it will be displayed in the consoleIf they cancel, the console will log that the user canceled the prompt By understanding the prompt() method, you gain a simple way to interact with users and retrieve information directly through the browser, even though it may not be widely used in modern web applications --questions--\n--text--\nWhat does the prompt() method do in JavaScript --answers--\nDisplays a pop-up asking for user input and returns the input as a string Logs a message to the console --feedback--\nThink about how the method interacts with the user Opens a new browser window --feedback--\nThink about how the method interacts with the user Stops the script from executing --feedback--\nThink about how the method interacts with the user --video-solution--\n1\n--text--\nWhat happens if the user cancels the prompt dialog box --answers--\nThe script breaks --feedback--\nConsider what prompt() does when the user doesn't provide input The prompt method returns null The prompt method returns an empty string --feedback--\nConsider what prompt() does when the user doesn't provide input The script continues with the default value --feedback--\nConsider what prompt() does when the user doesn't provide input --video-solution--\n2\n--text--\nWhat is the second, optional argument of the prompt() method used for --answers--\nSpecifying the text of the cancel button --feedback--\nThink about what can be pre-filled for the user before they start typing Setting a default value in the input field Setting a time limit for the input --feedback--\nThink about what can be pre-filled for the user before they start typing Changing the color of the dialog box --feedback--\nThink about what can be pre-filled for the user before they start typing --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263f4a5899da8124542fd.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f8bd817a8fd7d2e6b826c62d4ff5a935",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263e80dd43da7df3ae565.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673263e80dd43da7df3ae565\ntitle: How Can You Find the Position of a Substring in a String challengeType: 19\ndashedName: how-can-you-find-the-position-of-a-substring-in-a-string\n--description--\nWhen working with strings in JavaScript, there may be times when you need to locate the position of a specific substring within a larger string A substring is a sequence of characters that appears within a larger string For example, in the string hello world, hello and world are substrings To locate the position of a substring inside of a string, you can use the indexOf() method The indexOf() method in JavaScript allows you to search for a substring within a string If the substring is found, indexOf() returns the index (or position) of the first occurrence of that substring If the substring is not found, indexOf() returns -1, which indicates that the search was unsuccessful The indexOf() method takes two arguments: the first is the substring you want to find within the larger string, and the second is an option starting position for the search If you don’t provide a starting position, the search will begin at the start of the string In this context, an argument is a value you give to a function or method when you call it, enabling that function or method to perform its task using the specific information you provide You will learn more about arguments in future lectures Here is an example of using the indexOf() method to find the position for the string awesome:\njs\nlet sentence = \"JavaScript is awesome \";\nlet position = sentence indexOf(\"awesome \");\nconsole log(position); // 14\nIn this example, the word awesome starts at index 14 in the string JavaScript is awesome , so the indexOf() method returns 14 Now, let's see what happens when the substring isn't found:\njs\nlet sentence = \"JavaScript is awesome \";\nlet position = sentence indexOf(\"fantastic\");\nconsole log(position); // -1\nSince the word fantastic does not appear in the string, the method returns -1 You can also specify where to begin searching within the string by providing a second argument to indexOf() Here’s an example:\njs\nlet sentence = \"JavaScript is awesome, and JavaScript is powerful \";\nlet position = sentence indexOf(\"JavaScript\", 10);\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263e80dd43da7df3ae565.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "94317a63adcea691f298d961188b605a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263e80dd43da7df3ae565.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "when the substring isn't found: js let sentence = \"JavaScript is awesome \"; let position = sentence indexOf(\"fantastic\"); console log(position); // -1 Since the word fantastic does not appear in the string, the method returns -1 You can also specify where to begin searching within the string by providing a second argument to indexOf() Here’s an example: js let sentence = \"JavaScript is awesome, and JavaScript is powerful \"; let position = sentence indexOf(\"JavaScript\", 10); consolelog(position); // 27\nIn this case, the search for JavaScript begins after the 10th character, and so the second occurrence of JavaScript is found at index 27 It is important to note that the indexOf() method is case sensitive In this example, the following would return -1 because the capital letter F is not found in the string freeCodeCamp js\nconsole log(\"freeCodeCamp\" indexOf(\"F\")) // -1\nUsing indexOf() can be very useful when you need to check if a substring is present in a string and to determine its position for further operations --questions--\n--text--\nWhat does the indexOf method return if the substring is not found in the string --answers--\n0\n--feedback--\nThink about the special value that indicates an unsuccessful search The length of the string --feedback--\nThink about the special value that indicates an unsuccessful search -1\nThe position of the first character --feedback--\nThink about the special value that indicates an unsuccessful search --video-solution--\n3\n--text--\nHow can you use indexOf to search for a substring starting at a specific position within the string --answers--\nBy using the first argument to specify the starting position --feedback--\nRemember, you can pass a second argument to the method to control where the search starts By using the second argument to specify the starting position By using an additional method --feedback--\nRemember, you can pass a second argument to the method to control where the search starts By changing the string first --feedback--\nRemember, you can pass a second argument to the method to control where the search starts --video-solution--\n2\n--text--\nWhat will indexOf() return in this example js\nconst str = \"I am learning JavaScript \";\nstr indexOf(\"Javascript\");\n--answers--\n14\n--feedback--\nRemember that the indexOf() method is case sensitive 2\n--feedback--\nRemember that the indexOf() method is case sensitive -1\n13\n--feedback--\nRemember that the indexOf() method is case sensitive",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263e80dd43da7df3ae565.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b51d9c697a7b1e545914ef45e8ee6f4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263e80dd43da7df3ae565.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "starts By changing the string first --feedback-- Remember, you can pass a second argument to the method to control where the search starts --video-solution-- 2 --text-- What will indexOf() return in this example js const str = \"I am learning JavaScript \"; str indexOf(\"Javascript\"); --answers-- 14 --feedback-- Remember that the indexOf() method is case sensitive 2 --feedback-- Remember that the indexOf() method is case sensitive -1 13 --feedback-- Remember that the indexOf() method is case sensitive--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4563,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-strings-in-javascript\\673263e80dd43da7df3ae565.md",
      "source_type": "git_repo"
    },
    "token_count": 112,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7837b791b7ec993cc8206bb8b70434d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995e43674fb3775b9ec5d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672995e43674fb3775b9ec5d\ntitle: How Do You Display Addresses in HTML challengeType: 19\ndashedName: how-do-you-display-addresses-in-html\n--description--\nThe contact address element is used to represent contact information for a section on a web page The address element is versatile and can be used for business pages, author pages, personal sites, and more When it comes to building out your website's contact sections, you should use the semantic address element over a generic element like a div Here is an example of using the address element for a company contact page:\n```html\nCompany Name\n1234 Elm Street\nSpringfield, IL 62701\nUnited States\nPhone: +1 (555) 555-5555\nEmail: contact@company com\n```\nIn this example, there is the company name, physical address, phone, and email information For the physical address, the line break element, br, is used to show the division between the street name, city, and country For the phone number, we have an anchor element with the href value set for telephone numbers The tel:+ value inside the href attribute creates a clickable link to initiate a phone call on certain devices that support that For the email address, another anchor element is used with the href value set to a mailto link mailto links are used in HTML documents to allow users to open a new email within their preferred email client One of the downsides of using a mailto link is that users often perceive it as spam Unfortunately, a lot of spammers will use this option to send emails to users So just keep that in mind when you're using it --questions--\n--text--\nWhat is the purpose of the address element --answers--\nIt's used to define a section for navigation links --feedback--\nThe name of this element implies what information should be included inside of it It's used to represent contact information for a section on a web page It's used to set the font style for a section of the page --feedback--\nThe name of this element implies what information should be included inside of it It's used to group content for styling with CSS --feedback--\nThe name of this element implies what information should be included inside of it --video-solution--\n2\n--text--\nWhat is the mailto link used for --answers--\nIt's used to link to a webpage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995e43674fb3775b9ec5d.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2c69ba3c9fac9ecc0479c0b449d6ae0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995e43674fb3775b9ec5d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a section on a web page It's used to set the font style for a section of the page --feedback-- The name of this element implies what information should be included inside of it It's used to group content for styling with CSS --feedback-- The name of this element implies what information should be included inside of it --video-solution-- 2 --text-- What is the mailto link used for --answers-- It's used to link to a webpage--feedback--\nReview the end of the lecture where there are examples showing how the mailto works It's used to create a file download link --feedback--\nReview the end of the lecture where there are examples showing how the mailto works It's used to redirect to another website --feedback--\nReview the end of the lecture where there are examples showing how the mailto works It's used to allow users to open a new email within their preferred email client --video-solution--\n4\n--text--\nWhat is a downside to using mailto links --answers--\nThese links are a target for spammers to send emails to users These links automatically create a webpage --feedback--\nThink about malicious attackers accessing these links These links enhance website SEO --feedback--\nThink about malicious attackers accessing these links These links improve website loading speed --feedback--\nThink about malicious attackers accessing these links --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995e43674fb3775b9ec5d.md",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f06b83a81d91ed6da269be6e709a3926",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-tables\\672a4e04a24858778f57ebfe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a4e04a24858778f57ebfe\ntitle: What Are HTML Tables Used For, and What Should They Not Be Used For challengeType: 19\ndashedName: what-are-html-tables-used-for\n--description--\nHTML tables aren't used as much these days as they used to be But, as a frontend developer, you should still be familiar with them Tables are one of the earliest ways devs had for displaying data in a browser way back in the 1990s Here's an example of code used to generate a table from the U S Bureau of Labor Statistics:\n```html\nQuick Facts: Software Developers, Quality Assurance Analysts, and Testers\n2023 Median Pay\n$130,160 per year\n$62 58 per hour\nTypical Entry-Level Education\nBachelor's degree\nWork Experience in a Related Occupation\nNone\nOn-the-job Training\nNone\nNumber of Jobs, 2022\n1,795,300\nJob Outlook, 2022-32\n25% (Much faster than average)\nEmployment Change, 2022-32\n451,200\nIf this table had a footer it would be here ```\nAs you can see, there's a main table element with an id set to quickfacts Inside it, the table has a table head element, thead, table body element, tbody, and a table foot element, tfoot The table head, body, and foot elements can each contain some number of table rows, tr And each table row can contain a table header th which labels the data in that row It can also contain some number of individual data cells, called table data, td Now, that's a lot of HTML elements But don't be intimidated – these follow a simple hierarchy Here's the simplest table we can create that includes all of these elements:\n```html\nThe title of this table\nFirst Row\nFirst Data Cell\nSecond Row\nSecond Data Cell\nThe footer of this table, which might contain date of publication, author credits, or other meta information ```\nSo as you can see, the data itself is always within a tr – and within that tr element is a th element with a header, and a td element with data Some websites will choose to use divs to build their own tables instead of using the more appropriate table element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5049,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-tables\\672a4e04a24858778f57ebfe.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d3c135ca861fd9afb6779eccaf156fe2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-tables\\672a4e04a24858778f57ebfe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Cell Second Row Second Data Cell The footer of this table, which might contain date of publication, author credits, or other meta information ``` So as you can see, the data itself is always within a tr – and within that tr element is a th element with a header, and a td element with data Some websites will choose to use divs to build their own tables instead of using the more appropriate table elementWhile it is possible to display tabular data using generic div elements, it is still better to use the table element instead Many years ago, developers might have used a table to position non-data elements on a webpage This was never considered a best practice But you may encounter some codebases where tables are still used like this Nowadays, developers use CSS flexbox and grid to layout their designs freeCodeCamp will cover these tools in depth later For now, just use HTML tables for their original intended purpose: displaying tabular data --questions--\n--text--\nIn an HTML table, which elements are contained within a tr element --answers--\nthead and tfoot --feedback--\nRefer back to the beginning of the lecture where the tr element was discussed td and th table and tbody --feedback--\nRefer back to the beginning of the lecture where the tr element was discussed div and span --feedback--\nRefer back to the beginning of the lecture where the tr element was discussed --video-solution--\n2\n--text--\nWhich of the following are the main sections of an HTML table --answers--\ntable, div, and span --feedback--\nRefer back to the beginning of the lecture where these elements were discussed header, section, and footer --feedback--\nRefer back to the beginning of the lecture where these elements were discussed thead, tbody, and tfoot article, aside, and nav --feedback--\nRefer back to the beginning of the lecture where these elements were discussed --video-solution--\n3\n--text--\nWhat is the main recommended use of HTML tables today --answers--\nCreating page layouts --feedback--\nRefer back to the end of the lecture where the recommended use was discussed Displaying tabular data Styling with CSS --feedback--\nRefer back to the end of the lecture where the recommended use was discussed Embedding images --feedback--\nRefer back to the end of the lecture where the recommended use was discussed --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5049,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-tables\\672a4e04a24858778f57ebfe.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "173af55b51c354fb6fe278151dd0cf59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995d673bd3237200b9e7c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672995d673bd3237200b9e7c\ntitle: How Do You Display Abbreviations and Acronyms in HTML challengeType: 19\ndashedName: how-do-you-display-abbreviations-and-acronyms-in-html\n--description--\nAn abbreviation is a shortened form of a word For example, \"Dr\" followed by a period, is an abbreviation for the word \"doctor\" An acronym is a word formed from the initial letters of a phrase, with each letter representing the first letter of a word in that phrase HTML is an example of an acronym It stands for HyperText Markup Language By taking the first letters of each word H, T, M, and L, you get the acronym HTML They are both very helpful for writing more concise text, especially when they are well-known and easy to understand in a given context If you need to display abbreviations and acronyms in HTML, the abbreviation element is exactly what you're looking for You should always explain their full meaning when you use them for the first time Then you can use the abbreviation element to highlight them and provide more details Here's an example where you can see a paragraph with the sentence HTML is the foundation of the web:\n```html\nHTML is the foundation of the web ```\nThe acronym HTML is within an abbreviation element In the browser, you'll see that nothing has really changed It still looks like normal text The abbreviation element is providing helpful context behind the scenes, but users will still see the acronym as normal text If you want to help users understand what this acronym means, you can show its full form with the title attribute The title attribute is optional, but if you decide to include it, it must be a human readable description of the abbreviation, or acronym Let's take the same example as before, but add the title attribute It will be HyperText Markup Language, the expanded form of the acronym:\n```html\nHTML is the foundation of the web ```\nUsually, the style of the abbreviation element will change when you add this attribute The specific style will depend on the browser Some browsers may display a dotted underline, while others may convert the contents to small caps, or even assign certain default styles, such as a dotted underline When the user hovers over the acronym with the mouse, the full form is displayed as a tooltip",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4625,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995d673bd3237200b9e7c.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fbd6b8800555873ebbb3798aaf6c3ed5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995d673bd3237200b9e7c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "```html HTML is the foundation of the web ``` Usually, the style of the abbreviation element will change when you add this attribute The specific style will depend on the browser Some browsers may display a dotted underline, while others may convert the contents to small caps, or even assign certain default styles, such as a dotted underline When the user hovers over the acronym with the mouse, the full form is displayed as a tooltipWhile you don't necessarily need to use the abbreviation element for every abbreviation, or acronym on your web page, it's recommended for those that might be unclear and those that might need additional context You should use your best judgment to find the right balance between information and presentation to avoid cluttering the text while being clear and concise --questions--\n--text--\nWhich HTML element is used to indicate an abbreviation or acronym --answers--\nabbr\nacronym\n--feedback--\nThink about an element that is specifically designed for shortened words abbrev\n--feedback--\nThink about an element that is specifically designed for shortened words acron\n--feedback--\nThink about an element that is specifically designed for shortened words --video-solution--\n1\n--text--\nWhat is the primary purpose of the abbr element --answers--\nTo style text as an abbreviation --feedback--\nThink about how the abbreviation element can help users To indicate an abbreviation or acronym and provide additional information To shorten the content of a webpage --feedback--\nThink about how the abbreviation element can help users To improve search engine rankings --feedback--\nThink about how the abbreviation element can help users --video-solution--\n2\n--text--\nWhat attribute can be used within the abbr element to provide the full form of an acronym or abbreviation --answers--\nexplain\n--feedback--\nThink about the attribute that displays more information about the abbreviation or acronym When the user hovers over the abbr element with the mouse, this information is displayed description\n--feedback--\nThink about the attribute that displays more information about the abbreviation or acronym When the user hovers over the abbr element with the mouse, this information is displayed title\nfullform\n--feedback--\nThink about the attribute that displays more information about the abbreviation or acronym When the user hovers over the abbr element with the mouse, this information is displayed --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4625,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995d673bd3237200b9e7c.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e7e1a182de4858d2c07e5194d38a8254",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995f16ed97837b365a9f6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672995f16ed97837b365a9f6\ntitle: How Do You Display Times and Dates in HTML challengeType: 19\ndashedName: how-do-you-display-times-and-dates-in-html\n--description--\nThe time element is used to represent a specific moment in time Here is an example using the time element to represent twenty hundred hours, or eight PM in the evening ```html\nThe reservations are for 20:00\n```\nThe datetime attribute is used to translate dates and times into a machine-readable format This is important, because it helps with search engine results and helps the browser process date and time information more effectively The value for the datetime attribute must be either a valid year, valid month, valid time, local date, global date, or valid duration string Here is another example of using the time element to represent a particular date:\n```html\nThe graduation will be on June 15\n```\nThe value for the datetime attribute is in the ISO 8601 format ISO 8601 is an international standard to represent dates and times The first part of that value is the year, month and day The capital T in the value is a separator between the date and time The fifteen hundred hours would be three PM in the afternoon Whenever you need to represent events, publication dates, or appointments, it is best to use the time element --questions--\n--text--\nWhat does the datetime attribute in the time element help with --answers--\nIt formats text in bold --feedback--\nThe datetime attribute represents dates and times for machines It translates dates and times into a machine-readable format It adds color to the text --feedback--\nThe datetime attribute represents dates and times for machines It creates hyperlinks to other pages --feedback--\nThe datetime attribute represents dates and times for machines --video-solution--\n2\n--text--\nWhat is the correct format for the datetime attribute value according to ISO 8601 --answers--\nYYYY-MM-DDTHH:MM:SS\nDD-MM-YYYY HH:MM\n--feedback--\nReview the lecture starting at the 45 second mark where ISO 8601 was discussed MM-DD-YYYY HH:MM AM/PM\n--feedback--\nReview the lecture starting at the 45 second mark where ISO 8601 was discussed YYYY/MM/DD HH:MM:SS\n--feedback--\nReview the lecture starting at the 45 second mark where ISO 8601 was discussed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995f16ed97837b365a9f6.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c96edb8c08e33700f6132d7f9f94b9c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995f16ed97837b365a9f6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dates and times for machines --video-solution-- 2 --text-- What is the correct format for the datetime attribute value according to ISO 8601 --answers-- YYYY-MM-DDTHH:MM:SS DD-MM-YYYY HH:MM --feedback-- Review the lecture starting at the 45 second mark where ISO 8601 was discussed MM-DD-YYYY HH:MM AM/PM --feedback-- Review the lecture starting at the 45 second mark where ISO 8601 was discussed YYYY/MM/DD HH:MM:SS --feedback-- Review the lecture starting at the 45 second mark where ISO 8601 was discussed--video-solution--\n1\n--text--\nWhat does the capital 'T' in the ISO 8601 datetime value represent --answers--\nThe time zone --feedback--\nReview the end of the lecture when ISO 8601 was discussed The separator between date and time The title of the document --feedback--\nReview the end of the lecture when ISO 8601 was discussed The temperature --feedback--\nReview the end of the lecture when ISO 8601 was discussed --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3023,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995f16ed97837b365a9f6.md",
      "source_type": "git_repo"
    },
    "token_count": 227,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bc985b4f12813a6abfeee5dbb3734a73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995c9e6f69436dbcccc79.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672995c9e6f69436dbcccc79\ntitle: How Do Block and Inline Quotes Work in HTML challengeType: 19\ndashedName: how-do-block-and-inline-quotes-work-in-html\n--description--\nIn HTML, quoted elements are used to distinguish quoted text from the surrounding content This gives the quoted text a format that is easy to identify You should use the block quotation element for representing a section quoted from another source It's mainly used for extended quotations If the source of the quote has an address, you can cite it with the cite attribute The value of this attribute should be a valid URL This is an example of a quote within a block quotation element:\n```html\n\"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \"\n```\nThis element has a cite attribute The value of the cite attribute is the URL of the source While this attribute doesn't change the presentation of the block quote, it's very helpful for giving screen readers and search engines more information about the quote In the browser, you'll see that the text is slightly indented If you want to start and end the block quote with quotation marks, you may need to write them explicitly within the text You can write the text directly within the block quotation element, like I just did, or wrap it within one or more paragraph elements This is helpful when the text has multiple paragraphs, but you want to keep them within the same block quote Here's an example with four paragraphs:\n```html\nBuild your projects Show them to your friends Build projects for your friends Build your network Help the people you meet along the way What goes around comes around You'll get what's coming to you It is not too late Life is long You will look back on this moment years from now and be glad you made a move ```\nAll the paragraphs are contained within the same block quotation element, so they are part of the same quotation You can see that the element has a cite attribute with the URL of the source In the browser, you'll see that the four paragraphs are aligned relative to each other, but they are indented relative to their container So far I've been using the cite attribute to attribute the source of the quotation, but the attribute doesn't really show the source to the user It only works behind the scenes If you want to attribute the source visually, you can add a citation element, cite, outside of the block quotation element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6926,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995c9e6f69436dbcccc79.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a783014045ee73cf7b6f00a4ed01fbf5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995c9e6f69436dbcccc79.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "In the browser, you'll see that the four paragraphs are aligned relative to each other, but they are indented relative to their container So far I've been using the cite attribute to attribute the source of the quotation, but the attribute doesn't really show the source to the user It only works behind the scenes If you want to attribute the source visually, you can add a citation element, cite, outside of the block quotation elementThis is different from the cite attribute The citation element is an HTML element that you can use to mark up the title of a referenced creative work like a book article, song, film, website, or research paper Here's an example:\n```html\nCan you imagine what it would be like to be a successful developer To have built software systems that people rely upon —Quincy Larson, How to Learn to Code and Get a Developer Job [Full Book] ```\nThe block quotation element contains quoted text Below the element you can see a paragraph element with the name of the author, followed by a citation element The citation element contains the title of the book where the quotation came from If you go to the browser, now the source will be clearly visible and see that the quote comes from a book written by Quincy Larson The title of this book is How to Learn to Code and Get a Developer Job You should use block quotes like these for long quotations from other sources But sometimes you will only need to quote a few words within a larger paragraph That's exactly what the inline quotation element is for It's for short inline quotations from other sources Most modern browsers will add quotation marks around the inline quote automatically when you use this element This is an example:\n```html\nAs Quincy Larson said,\nMomentum is everything ```\nYou can see a paragraph element that contains text Part of the text is an inline quote, because it's within the inline quotation element You can also add a cite attribute to attribute the source This works exactly the same as it did with the block quotation element There won't be any visual changes, but it will give screen readers and search engines more information about the quote In the browser, you'll see that the quoted text is part of the paragraph and it's surrounded by quotation marks Most modern browsers will add these quotation marks automatically What's the difference between block quotes and inline quotes You should use block quotes for extended quotations from other sources and inline quotes for short quotations from other sources that should be part of existing paragraphs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6926,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995c9e6f69436dbcccc79.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a064edf687d1792b7730719cb2aec5a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995c9e6f69436dbcccc79.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "give screen readers and search engines more information about the quote In the browser, you'll see that the quoted text is part of the paragraph and it's surrounded by quotation marks Most modern browsers will add these quotation marks automatically What's the difference between block quotes and inline quotes You should use block quotes for extended quotations from other sources and inline quotes for short quotations from other sources that should be part of existing paragraphs--questions--\n--text--\nWhich HTML element is used for displaying extended quotations from other sources --answers--\nq\n--feedback--\nAnalyze the two types of quotation elements Think about which one displays the quotation as an indented block blockquote\ncite\n--feedback--\nAnalyze the two types of quotation elements Think about which one displays the quotation as an indented block p\n--feedback--\nAnalyze the two types of quotation elements Think about which one displays the quotation as an indented block --video-solution--\n2\n--text--\nWhat is the purpose of the cite element in HTML --answers--\nTo display inline quotations --feedback--\nConsider how the cite element is used in relation to creative works like books, articles, or films To specify the source URL of a quotation --feedback--\nConsider how the cite element is used in relation to creative works like books, articles, or films To mark up the title of a referenced creative work To display extended quotations --feedback--\nConsider how the cite element is used in relation to creative works like books, articles, or films --video-solution--\n3\n--text--\nWhich HTML attribute is used to specify the source of a quotation in a block or inline quotation element --answers--\nhref\n--feedback--\nThink about the two types of quotation elements and how you can specify the URL of the source src\n--feedback--\nThink about the two types of quotation elements and how you can specify the URL of the source title\n--feedback--\nThink about the two types of quotation elements and how you can specify the URL of the source cite\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6926,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-text-and-time-semantic-elements\\672995c9e6f69436dbcccc79.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2e4313ac748ebc4c73fbc9035a57ce8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336894ae148431a870694d.md",
    "source_type": "git_repo",
    "title": "DOM Example",
    "content": "id: 67336894ae148431a870694d\ntitle: What Is the DOM, and How Do You Access Elements challengeType: 19\ndashedName: what-is-the-dom-and-how-do-you-access-elements\n--description--\nLet's learn about the DOM and why it's so important for web development DOM stands for Document Object Model It's a programming interface that lets us interact with HTML documents With the DOM, you can add, modify, or delete elements on a webpage You can even make your website interactive by making elements listen to and respond to events In the DOM, an HTML document is represented as a tree of nodes Each node represents an HTML element from the HTML document:\n```html\nDOM Example\nWhat is the DOM Let's learn about the DOM\n```\nThis is a diagram representing the basic DOM structure of our example:\n```md\nDocument\n========\nHTML\nHead\nTitle\nBody\nH1\nH2\n```\nOf course, this can be more detailed and complex based on the structure of the HTML markup of a webpage The HTML document is the root node in the DOM hierarchy It has one child node, the html element This is the root element of the HTML document, since all other nodes descend from it The html element has two children: head and body The head element contains metadata about the document It provides essential information about the webpage The body element contains the visible content of the webpage You can access these elements with JavaScript, work with them in your code, and even modify them dynamically That's the power of the DOM and web APIs To access these elements in JavaScript, you can use getElementById() and querySelector() methods These methods are web APIs because they provide standardized ways to interact with the DOM using JavaScript With getElementById(), you can get an object that represents the HTML element with the specified id Remember that ids must be unique in every HTML document, so this method will only return one Element object Here you can see an example:\njs\nconst container = document getElementById(\"container\");\nThis line of JavaScript code gets an element with the id value of container and assigns that object to a JavaScript constant You must pass the id within quotation marks as an argument If you log this object to the console, you will see it in the output:\njs\nconsole log(container); // <div id=\"container\"> </div>\nquerySelector() is broader than getElementById()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4835,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336894ae148431a870694d.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "92a82be70493ae441725b3234d046b55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336894ae148431a870694d.md",
    "source_type": "git_repo",
    "title": "DOM Example",
    "content": "return one Element object Here you can see an example: js const container = document getElementById(\"container\"); This line of JavaScript code gets an element with the id value of container and assigns that object to a JavaScript constant You must pass the id within quotation marks as an argument If you log this object to the console, you will see it in the output: js console log(container); // <div id=\"container\"> </div> querySelector() is broader than getElementById()With querySelector(), you can get the first element in the HTML document that matches the CSS selector passed as argument In this example, you will get the first element with the class section and assign it to a variable:\njs\nconst section = document querySelector(\" section\");\nYou also have other methods to match multiple elements, like getElementsByClassName() and querySelectorAll() You'll learn more about them in a coming module By understanding how to use web APIs to manipulate the DOM efficiently, you can create powerful and interactive web applications --questions--\n--text--\nWhat is the Document Object Model (DOM) --answers--\nA programming language used for web development --feedback--\nThink about how the DOM represents the structure of an HTML document A collection of CSS styles --feedback--\nThink about how the DOM represents the structure of an HTML document A tree-structured representation of an HTML document A method for creating dynamic web pages --feedback--\nThink about how the DOM represents the structure of an HTML document --video-solution--\n3\n--text--\nWhich of the following methods can be used to access an element by its id in JavaScript --answers--\ngetElementById()\ngetElementsByClassName()\n--feedback--\nConsider how to target a specific element based on its unique identifier querySelectorAll()\n--feedback--\nConsider how to target a specific element based on its unique identifier createElement()\n--feedback--\nConsider how to target a specific element based on its unique identifier --video-solution--\n1\n--text--\nWhat is the primary purpose of the querySelector() method --answers--\nTo create a new element in the DOM --feedback--\nThink about how querySelector() is used to target an element To select an element based on a CSS selector To modify the content of an existing element --feedback--\nThink about how querySelector() is used to target an element To remove an element from the DOM --feedback--\nThink about how querySelector() is used to target an element --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4835,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336894ae148431a870694d.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "67f98aaf6ab2316c0fdb59afc4713ef0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6732a0472f52015e511f8e58.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6732a0472f52015e511f8e58\ntitle: What Is an API, and What Are Web APIs challengeType: 19\ndashedName: what-is-an-api-and-what-are-web-apis\n--description--\nLet's learn about APIs and why they’re essential for web development API stands for Application Programming Interface APIs establish a set of rules and protocols that allow software applications to communicate with each other and exchange data efficiently You can think of them as constructs that allow developers to create more complex functionality based on simpler building blocks that are already implemented There are various types of APIs Web APIs are specifically designed for web applications There are different types of web APIs for client-side JavaScript development They are not part of JavaScript itself These types of APIs are often divided into two main categories: browser APIs and third-party APIs Browser APIs expose data from the browser As a web developer, you can access and manipulate this data using JavaScript They also provide access to various functionalities, such as manipulating the structure of the website, handling events, working with storage, and communicating with the network Some examples of commonly used Browser APIs include:\nThe DOM API, which you can use to manipulate HTML elements, their styles, and attributes You will learn much more about the DOM in the coming lectures It’s a core concept in web development The Storage API, to store data locally on the user’s device And more There are various browser APIs that you can use to handle user interactions and to get more information from the browser, like the user's current location You can also work with other types of elements, such as video and audio Browser APIs can be helpful tools for building powerful web applications They already come built into the browser But you can also use third-party APIs, which are not built into the browser by default To use them, you need to retrieve their code in some way Typically, they come with detailed documentation explaining how to use their services An example is the Google Maps API, which you can use to display interactive maps on your website There are various types of third-party web APIs, including weather APIs, social media APIs, payment APIs, data APIs, translation APIs, and more You just need to find the API that fits your needs Web APIs are essential tools for building modern web applications that can interact with various services and data sources By learning how to leverage their power, you will expanding your toolset for creating dynamic and engaging websites",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4513,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6732a0472f52015e511f8e58.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "99037a58d3307fbe8c226a4238c0ee61",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6732a0472f52015e511f8e58.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "display interactive maps on your website There are various types of third-party web APIs, including weather APIs, social media APIs, payment APIs, data APIs, translation APIs, and more You just need to find the API that fits your needs Web APIs are essential tools for building modern web applications that can interact with various services and data sources By learning how to leverage their power, you will expanding your toolset for creating dynamic and engaging websites--questions--\n--text--\nWhat is the primary purpose of an API --answers--\nTo create new programming languages --feedback--\nThink about how APIs facilitate interaction between different systems To provide a user interface for applications --feedback--\nThink about how APIs facilitate interaction between different systems To enable communication between different software applications To store and manage data --feedback--\nThink about how APIs facilitate interaction between different systems --video-solution--\n3\n--text--\nWhat is the difference between a general API and a web API --answers--\nGeneral APIs are only used for web applications, while web APIs can be used for any type of application --feedback--\nConsider the context in which APIs are used Web APIs are specifically designed for interacting with web browsers and servers There is no difference between general APIs and web APIs --feedback--\nConsider the context in which APIs are used General APIs are used for external communication within an application, while web APIs are used for internal communication --feedback--\nConsider the context in which APIs are used --video-solution--\n2\n--text--\nHow do web APIs simplify the development of web applications --answers--\nBy providing pre-built user interfaces --feedback--\nThink about how APIs can streamline the development process By eliminating the need for programming languages --feedback--\nThink about how APIs can streamline the development process By offering standardized ways to access and manipulate data and functionality By automating the entire development process --feedback--\nThink about how APIs can streamline the development process --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4513,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6732a0472f52015e511f8e58.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e1e5e19ac80ff5a9662a42e9f1a572d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733689f9f31dd31e7d9c789.md",
    "source_type": "git_repo",
    "title": "DOM Tree Example",
    "content": "id: 6733689f9f31dd31e7d9c789\ntitle: How Do DOM Nodes Exist Relative to Each Other in the DOM Tree challengeType: 19\ndashedName: how-do-dom-nodes-exist-relative-to-each-other-in-the-dom-tree\n--description--\nLet's learn about DOM nodes and their relationships in the DOM tree Just as a real tree has large and small branches connected in a hierarchical structure, DOM nodes also have direct and indirect relationships with one another We will use this example to illustrate these relationships:\n```html\nDOM Tree Example\nHeading 1\nParagraph 1\nList item 1\nList item 2\n```\nLet's start at the top The root of the DOM tree is the html element It's the top-level container for all the content of an HTML document All other nodes are descendants of this root node Then, below the root node, we find other nodes in the hierarchy A parent node is an element that contains other elements A child node is an element that is contained within another element In this example, the body element is the parent of the paragraph element while the paragraph element is a child of the body element These elements are represented as nodes in the DOM tree with the same relationships Just like we have parent nodes and child nodes, we also have sibling nodes Sibling nodes are elements that share the same parent In our example, two list item elements share the same unordered list parent, so they are siblings Similarly, the h1 and paragraph elements are siblings because they share the same parent, the body element We also have indirect relationships across different levels in the hierarchy Descendant nodes are elements that are contained within another element, either directly or indirectly An element is considered a descendant of another one if it can be reached by going through the DOM tree downwards from its ancestor In our example, the list item li elements are descendants of the body element, since they are indirectly contained within it An ancestor node is an element that is higher up in the DOM tree hierarchy than another element In our example, the body element is an ancestor of the list item li elements Understanding these relationships is essential for manipulating and navigating the DOM tree using JavaScript --questions--\n--text--\nWhich of the following is the parent node of the body element --answers--\nhead\n--feedback--\nThink about the top-level element that contains all other elements html\ntitle\n--feedback--\nThink about the top-level element that contains all other elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733689f9f31dd31e7d9c789.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "75e468c4da7e32a00af7d93e227ad9a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733689f9f31dd31e7d9c789.md",
    "source_type": "git_repo",
    "title": "DOM Tree Example",
    "content": "the DOM tree hierarchy than another element In our example, the body element is an ancestor of the list item li elements Understanding these relationships is essential for manipulating and navigating the DOM tree using JavaScript --questions-- --text-- Which of the following is the parent node of the body element --answers-- head --feedback-- Think about the top-level element that contains all other elements html title --feedback-- Think about the top-level element that contains all other elementsdocument\n--feedback--\nThink about the top-level element that contains all other elements --video-solution--\n2\n--text--\nThree li elements within the same ul element are considered:\n--answers--\nParent nodes --feedback--\nThink about their relationship to each other and their common parent Child nodes --feedback--\nThink about their relationship to each other and their common parent Sibling nodes Descendant nodes --feedback--\nThink about their relationship to each other and their common parent --video-solution--\n3\n--text--\nA p element contained directly within a div is a:\n--answers--\nParent node of the div --feedback--\nThink about the hierarchical relationship between the elements Child node of the div Sibling node of the div --feedback--\nThink about the hierarchical relationship between the elements Ancestor node of the div --feedback--\nThink about the hierarchical relationship between the elements --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733689f9f31dd31e7d9c789.md",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4afd6f7e17b8be8bc07eb9a1ea56e194",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368c0161e6b326a7e03f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673368c0161e6b326a7e03f0\ntitle: How Do You Create New Nodes Using innerHTML and createElement() challengeType: 19\ndashedName: how-do-you-create-new-nodes-using-innerhtml-and-createelement\n--description--\nLet's see how you can create nodes with innerHTML and createElement() We'll start with innerHTML innerHTML is a property of Element objects that you can use to set their HTML markup With innerHTML, you can set the HTML structure of an existing element with a string, creating all the necessary nodes This is an example We have an empty div and we'll add some elements within it using the innerHTML property:\n```html\n```\nFirst, we need to select the element by its ID:\njs\nconst container = document getElementById(\"container\");\nThen, we set the innerHTML property of the container to a string This string has to have all the markup necessary to represent the nodes and the structure that you want to create You can think of it as writing HTML within a string js\ncontainer innerHTML = \"<ul><li>Cheese</li><li>Tomato</li></ul>\";\nWe will set the innerHTML of this element to an unordered list of pizza ingredients (cheese and tomato) You can also write the string on multiple lines if it makes the markup easier to understand The important thing is that the markup accurately represents the HTML structure you want to create After running this code, you will see the following HTML structure if you inspect your markup ```html\nCheese\nTomato\n```\nThe new nodes were created and added dynamically to the DOM after the string was parsed innerHTML can be very helpful for certain scenarios However, it does have some security risks that you should be familiar with You shouldn't use it if you won't have full control over the string For example, if the string will be entered by the user, you shouldn't use innerHTML because the user might insert malicious content into your website Because of this, it’s usually recommended to use textContent instead, to insert plain text Another way to create a new node is by using the createElement() method With this new method, you can create a new element by specifying its tag name For example, if you want to create an image element, you would pass the img tag as a string when calling this method:\njs\ndocument",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368c0161e6b326a7e03f0.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "148f66193c3ef6733b8ef1e9c6e211e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368c0161e6b326a7e03f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the user might insert malicious content into your website Because of this, it’s usually recommended to use textContent instead, to insert plain text Another way to create a new node is by using the createElement() method With this new method, you can create a new element by specifying its tag name For example, if you want to create an image element, you would pass the img tag as a string when calling this method: js documentcreateElement(\"img\");\nAnd you can assign this new object to a variable:\njs\nconst img = document createElement(\"img\");\nThe createElement() method returns a new HTMLElement object if the document is an HTMLDocument Else, it returns an Element object Once you have this new element ready, you can add it to the DOM as a child of another existing element using the appendChild() method, or you can insert it at a specific location using other methods Choose the one that best fits your needs Creating nodes with innerHTML and createElement() allows you to dynamically manipulate the structure and content of your websites By combining these techniques, you can build interactive web applications --questions--\n--text--\nWhat is the primary purpose of the innerHTML property --answers--\nTo update HTML elements --feedback--\nThink about how innerHTML is used to manipulate the structure of an element To set the text content of an element --feedback--\nThink about how innerHTML is used to manipulate the structure of an element To modify the attributes of an element --feedback--\nThink about how innerHTML is used to manipulate the structure of an element To dynamically inject HTML content into an element --video-solution--\n4\n--text--\nWhich of the following methods is used to create a new HTML element in JavaScript --answers--\ncreateElement()\ncreateNode()\n--feedback--\nThink about how to create a new element from scratch appendChild()\n--feedback--\nThink about how to create a new element from scratch getElementById()\n--feedback--\nThink about how to create a new element from scratch --video-solution--\n1\n--text--\nWhat is the main risk of using innerHTML when you do not have control over the string --answers--\nCausing an infinite loop --feedback--\nThink about the potential for code injection when using innerHTML with untrusted input Insertion of malicious content Performance issues --feedback--\nThink about the potential for code injection when using innerHTML with untrusted input Accessibility issues --feedback--\nThink about the potential for code injection when using innerHTML with untrusted input --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368c0161e6b326a7e03f0.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b58d29294a03aa63cbaa314c1a1fdd20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368ccf52205329b729378.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673368ccf52205329b729378\ntitle: What Is the Difference Between innerText, textContent, and innerHTML challengeType: 19\ndashedName: what-is-the-difference-between-innertext-textcontent-and-innerhtml\n--description--\nLet's learn about innerText, textContent, and innerHTML These are properties that you can access in JavaScript to get or change the content of an HTML element Even if they may look very similar at first, they do have key differences Choosing the right one depends on your specific use case, so let's dive in Let's start with innerText innerText represents the visible text content of the HTML element and its descendants This property doesn't include hidden text or HTML tags, only rendered text For example, here you can see a div element that contains two paragraphs:\n```html\nHello, World I'm learning JavaScript\n```\nIf we get a reference to this HTML element in our JavaScript code using getElementById(), we can access the innerText property of this element:\njs\nconst container = document getElementById(\"container\");\nconsole log(container innerText);\nThis is the inner text of this element:\nmd\nHello, World I'm learning JavaScript\nThe property returns a string with the text contained within the element, including text from its descendants You should know that innerText only returns the text that is visible at the particular moment when the string is requested If a child element is hidden, its text won't be visible This is an example where the second paragraph is hidden:\n```html\nHello, World I'm learning JavaScript\n```\nIf we try to log the innerText again, now the output won’t have the text of the second paragraph:\njs\nconsole log(container innerText);\nThis will be the output:\nmd\nHello, World You can set the innerText of an HTML element like this, but this will replace the existing text and add a line break element (br) element for every line break:\njs\ncontainer innerText = \"JavaScript is awesome \";\nSince innerText takes visibility into account, getting its value triggers a process called \"reflow\", that recalculates the position of certain elements on the website This process can be computationally intensive, so you should avoid triggering it if possible Great Now let's talk about textContent textContent returns the plain text content of an element, including all the text within its descendants",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6322,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368ccf52205329b729378.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8f162bb357d98ba03672546900cb3e31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368ccf52205329b729378.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "break element (br) element for every line break: js container innerText = \"JavaScript is awesome \"; Since innerText takes visibility into account, getting its value triggers a process called \"reflow\", that recalculates the position of certain elements on the website This process can be computationally intensive, so you should avoid triggering it if possible Great Now let's talk about textContent textContent returns the plain text content of an element, including all the text within its descendantsThe most important difference between innerText and textContent is that textContent always returns the full text content of an HTML element and its descendants, regardless of whether it's visible or hidden Here we have the same example in HTML:\n```html\nHello, World I'm learning JavaScript\n```\nIf you try to access this property, you'll see the text of the element and its descendants as the output, keeping the indentation and spacing:\njs\nconst container = document getElementById(\"container\");\nconsole log(container textContent);\nmd\nHello, World I'm learning JavaScript\nIf an HTML element is not visible, like you can see over here, where we’ve hidden the second paragraph, its text will still be included in this property:\n```html\nHello, World I'm learning JavaScript\n```\nYou will see the same output:\nmd\nHello, World I'm learning JavaScript\ntextContent will also include the content of elements like script and style If you try to replace the value of textContent on a node, it will remove all its child nodes and replace them with a single text node containing the new string:\njs\nconst container = document getElementById(\"container\");\ncontainer textContent = \"Hello, World \";\nAnd finally, let's talk about how textContent and innerText differs from innerHTML Remember that with innerHTML you can set the inner HTML content of an element This is helpful for injecting new HTML into the DOM dynamically However, remember that this poses a security risk if you don't have control over the string, such as strings containing data entered by the user If that data is malicious, it can lead to serious security issues To avoid this, it's recommended to use the textContent property to insert plain text instead The innerText, textContent, and innerHTML properties in JavaScript provide different ways to access and manipulate the content of HTML elements You should understand the differences between these properties if your goal is to work with HTML content in JavaScript effectively",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6322,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368ccf52205329b729378.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f3469bbd385a2edb344b719820778cd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368ccf52205329b729378.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "such as strings containing data entered by the user If that data is malicious, it can lead to serious security issues To avoid this, it's recommended to use the textContent property to insert plain text instead The innerText, textContent, and innerHTML properties in JavaScript provide different ways to access and manipulate the content of HTML elements You should understand the differences between these properties if your goal is to work with HTML content in JavaScript effectively--questions--\n--text--\nWhich of the following properties returns the visible text content of an HTML element, excluding any hidden text or text within hidden elements --answers--\ninnerHTML\n--feedback--\nThink about how these properties handle hidden content textContent\n--feedback--\nThink about how these properties handle hidden content innerText\nAll of the above --feedback--\nThink about how these properties handle hidden content --video-solution--\n3\n--text--\nWhich of the following properties can be used to dynamically inject new HTML content into an element --answers--\ninnerHTML\ntextContent\n--feedback--\nThink about which property allows you to modify the HTML structure of an element innerText\n--feedback--\nThink about which property allows you to modify the HTML structure of an element None of the above --feedback--\nThink about which property allows you to modify the HTML structure of an element --video-solution--\n1\n--text--\nWhich of the following properties returns the plain text content of an element, including all text within child elements, regardless of whether it is visible or hidden --answers--\ninnerHTML\n--feedback--\nThink about how these properties handle hidden content textContent\ninnerText\n--feedback--\nThink about how these properties handle hidden content All of the above --feedback--\nThink about how these properties handle hidden content --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6322,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368ccf52205329b729378.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "18ffc150e218e112b415d744ed5c4cb1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368b1cf26253212a3cfb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673368b1cf26253212a3cfb2\ntitle: What Is the querySelectorAll() Method, and When Should You Use It challengeType: 19\ndashedName: what-is-the-queryselectorall-method-and-when-should-you-use-it\n--description--\nLet's learn about the querySelectorAll() method You can use this method to get a list of all the DOM elements that match a specific CSS selector This is how you can call the querySelectorAll() method:\njs\ndocument querySelectorAll(selectors);\nCall it on the document object and pass a string with the CSS selectors as an argument The argument must be a valid CSS selector string Otherwise, a SyntaxError exception will be thrown querySelectorAll() returns a NodeList object, a collection of nodes that match the specified CSS selector The list will contain one Element object for each element that matches the CSS selectors If no matches are found, the list will be empty The elements will be in the order in which they appear in the HTML document For example, you can match all elements of a specific type:\njs\ndocument querySelectorAll(\"div\");\nAll elements with a specific class:\njs\ndocument querySelectorAll(\" rounded\");\nAll elements with a specific ID:\njs\ndocument querySelectorAll(\"#logo\");\nOr all elements with a specific attribute, like all links that take users to a specific URL:\njs\ndocument querySelectorAll(\"a[href='https://www freecodecamp org/']\");\nYou can also use more complex CSS selectors, like this one, which matches all list items within an unordered list element with the class ingredients:\njs\ndocument querySelectorAll(\"ul ingredients li\");\nSince the method will return a collection of nodes, you can assign this collection to a variable and use it in your programs to work with the individual elements, like you can see in this example with the general syntax:\njs\nconst matches = document querySelectorAll(selectors);\nFor example, if you have this unordered list with three list items:\n```html\nFlour\nCheese\nWater\n```\nYou can call the querySelectorAll() method to match all list items within the unordered list with the class ingredients and assign the return value to the matches constant:\njs\nconst matches = document querySelectorAll(\"ul ingredients li\");\nThis will return a collection of three nodes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368b1cf26253212a3cfb2.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9b240629d072911c5f904af5557094fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368b1cf26253212a3cfb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "can see in this example with the general syntax: js const matches = document querySelectorAll(selectors); For example, if you have this unordered list with three list items: ```html Flour Cheese Water ``` You can call the querySelectorAll() method to match all list items within the unordered list with the class ingredients and assign the return value to the matches constant: js const matches = document querySelectorAll(\"ul ingredients li\"); This will return a collection of three nodesEach node represents a list item element:\njs\n// NodeList(3)\n{\n0: `<li>Flour</li>`,\n1: `<li>Cheese</li>`,\n2: `<li>Water</li>`,\nlength: 3,\n}\nYou can work with this collection exactly like you would work with any other JavaScript array For example, you can show it in the console with console log():\njs\nconsole log(matches);\nYou can also check the length of the collection with the length property:\njs\nconsole log(matches length);\nThe output will be an integer representing the number of nodes in the collection:\nmd\n3\nYou can also access the individual elements of the collection with their corresponding indices The first element will be at index 0:\njs\nconsole log(matches[0]);\nconsole log(matches[1]);\nconsole log(matches[2]);\nThis is the output:\n```html\nFlour\nCheese\nWater\n```\nThe elements are printed one by one on the console You can also iterate over the elements with a for loop:\njs\nfor (let i = 0; i < matches length; i++) {\nconsole log(matches[i]);\n}\nThe output will be exactly the same in this case But this can be very powerful for working with all the elements of the collection The querySelectorAll() method in JavaScript is a powerful tool for selecting multiple elements based on their CSS selectors With this method, you can select specific elements within your web pages and manipulate them as needed --questions--\n--text--\nWhat is the primary purpose of the querySelectorAll() method in JavaScript --answers--\nTo create new elements in the DOM --feedback--\nThink about how querySelectorAll() is used to target elements To modify the content of existing elements --feedback--\nThink about how querySelectorAll() is used to target elements To select multiple elements based on a CSS selector To remove elements from the DOM --feedback--\nThink about how querySelectorAll() is used to target elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368b1cf26253212a3cfb2.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d86f237b869905e987be3704120c948d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368b1cf26253212a3cfb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "them as needed --questions-- --text-- What is the primary purpose of the querySelectorAll() method in JavaScript --answers-- To create new elements in the DOM --feedback-- Think about how querySelectorAll() is used to target elements To modify the content of existing elements --feedback-- Think about how querySelectorAll() is used to target elements To select multiple elements based on a CSS selector To remove elements from the DOM --feedback-- Think about how querySelectorAll() is used to target elements--video-solution--\n3\n--text--\nWhat type of object does the querySelectorAll() method return --answers--\nString\n--feedback--\nThink about the data structure used to represent a collection of elements Number\n--feedback--\nThink about the data structure used to represent a collection of elements NodeList\nArray\n--feedback--\nThink about the data structure used to represent a collection of elements --video-solution--\n3\n--text--\nWhen using querySelectorAll() with a string selector, what happens if the selector doesn't match any elements --answers--\nAn error is thrown --feedback--\nThink about the possible outcomes of a querySelectorAll() query A null value is returned --feedback--\nThink about the possible outcomes of a querySelectorAll() query An empty NodeList is returned The first matching element is returned --feedback--\nThink about the possible outcomes of a querySelectorAll() query --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5468,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368b1cf26253212a3cfb2.md",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0ef0844036647fcc8b9e846912c9c38a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368d97e8ce232cdcd6b68.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673368d97e8ce232cdcd6b68\ntitle: How Do You Add and Remove Nodes from the DOM with appendChild() and removeChild() challengeType: 19\ndashedName: how-do-you-add-and-remove-nodes-from-the-dom-with-appendchild-and-removechild\n--description--\nThere will be times where you will need to add or remove nodes from the DOM and there are a couple of Web APIs you can use In this lecture, we will cover the appendChild() and removeChild() methods The appendChild() method is used to add a node to the end of the list of children of a specified parent node Here is the basic syntax for the appendChild() method:\njs\nparentNode appendChild(newNode);\nLet's take a look at an example to better understand how to use the appendChild() method In this example, we have an unordered list element with an ID of desserts inside the HTML This list contains two list items of Cake and Pie:\n```html\nCake\nPie\n```\nTo access that list inside the JavaScript file, we can use the getElementById() method:\njs\nconst dessertsList = document getElementById(\"desserts\");\nWe have a variable called dessertsList that stores the reference to the ul element with the ID of desserts Then we need to create a new list item element using the createElement() method:\njs\nconst dessertsList = document getElementById(\"desserts\");\nconst listItem = document createElement(\"li\");\nThe following code will create a new list item element and store it in a variable called listItem To add that node to the end of the list of children of the ul element, we can use the appendChild() method:\n```js\nconst dessertsList = document getElementById(\"desserts\");\nconst listItem = document createElement(\"li\");\ndessertsList appendChild(listItem);\n```\nIf you were to run this code, you will see that a new list item element is added to the end of the list of children of the ul element The problem is that the new list item element is empty To add text content to the new list item element, you can use the textContent property:\n```js\nconst dessertsList = document getElementById(\"desserts\");\nconst listItem = document createElement(\"li\");\nlistItem textContent = \"Cookies\";\ndessertsList appendChild(listItem);\n```\nNow the list will show Cake, Pie, and Cookies To remove a node from the DOM, you can use the removeChild() method",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368d97e8ce232cdcd6b68.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3eba26328e45ad80f98aa3f115072433",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368d97e8ce232cdcd6b68.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the list of children of the ul element The problem is that the new list item element is empty To add text content to the new list item element, you can use the textContent property: ```js const dessertsList = document getElementById(\"desserts\"); const listItem = document createElement(\"li\"); listItem textContent = \"Cookies\"; dessertsList appendChild(listItem); ``` Now the list will show Cake, Pie, and Cookies To remove a node from the DOM, you can use the removeChild() methodHere is the basic syntax for the removeChild() method:\njs\nparentNode removeChild(childNode);\nLet's take look at an example where we want to remove that last paragraph element from this section element:\n```html\nExample sub heading\nfirst paragraph\nsecond paragraph\n```\nWe can access the section element inside of the JavaScript file using the getElementById() method:\njs\nconst sectionEl = document getElementById(\"example-section\");\nOnce we have the reference to the section element, we can then access that last paragraph using the querySelector() method:\njs\nconst sectionEl = document getElementById(\"example-section\");\nconst lastParagraph = document querySelector(\"#example-section p:last-of-type\");\nWe are using the :last-of-type pseudo-class to select the last paragraph element inside the section element Now that we have the parent and child nodes, we can remove the last paragraph element from the section element using the removeChild() method:\n```js\nconst sectionEl = document getElementById(\"example-section\");\nconst lastParagraph = document querySelector(\"#example-section p:last-of-type\");\nsectionEl removeChild(lastParagraph);\n```\nHere is the new HTML markup after removing the last paragraph element:\n```html\nExample sub heading\nfirst paragraph\n```\nSo, when might you want to add or remove nodes from the DOM If you're working with dynamic content, you might need to add or remove nodes from the DOM Real world examples include shopping carts, to-do lists, and social media feeds --questions--\n--text--\nWhat does the appendChild() method do --answers--\nIt removes a node from the DOM --feedback--\nThink about where the node is placed relative to its siblings It adds a node to the end of the list of children of a specified parent node It replaces an existing node with a new node --feedback--\nThink about where the node is placed relative to its siblings It moves a node to a different location within the DOM",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368d97e8ce232cdcd6b68.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2540df4d7360a067656a2b6b7c2659b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368d97e8ce232cdcd6b68.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- What does the appendChild() method do --answers-- It removes a node from the DOM --feedback-- Think about where the node is placed relative to its siblings It adds a node to the end of the list of children of a specified parent node It replaces an existing node with a new node --feedback-- Think about where the node is placed relative to its siblings It moves a node to a different location within the DOM--feedback--\nThink about where the node is placed relative to its siblings --video-solution--\n2\n--text--\nHow would you add text content to a newly created list item element --answers--\nUse the setText() method on the new node --feedback--\nConsider the property that allows setting the text inside an element Directly assign a string to the innerHTML property of the new node --feedback--\nConsider the property that allows setting the text inside an element Set the textContent property of the new node to the desired string Use the appendChild() method with a text node as an argument --feedback--\nConsider the property that allows setting the text inside an element --video-solution--\n3\n--text--\nHow can you remove the last paragraph element from a section using JavaScript --answers--\nUse removeChild() on the section element with the reference to the last paragraph element Use deleteChild() on the section element with the reference to the last paragraph element --feedback--\nThink about the method that removes a child node from its parent Use detachChild() on the section element with the reference to the last paragraph element --feedback--\nThink about the method that removes a child node from its parent Use removeNode() on the section element with the reference to the last paragraph element --feedback--\nThink about the method that removes a child node from its parent --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368d97e8ce232cdcd6b68.md",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5f1f85ec50dbf7dbcafe98ebe0c1d4d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368e7bd043f331919514d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673368e7bd043f331919514d\ntitle: How Do the Navigator, Window, and Document Work challengeType: 19\ndashedName: how-do-the-navigator-window-and-document-work\n--description--\nWhen working with the DOM, you will often come across the Navigator, Window, and Document interfaces An interface is a collection of methods and properties that define a particular object In this lecture, we will explore how these interfaces work and how you can use them in your web applications Let's start by looking at the Navigator interface The Navigator interface provides information about the browser environment, such as the user agent string, the platform, and the version of the browser A user agent string is a text string that identifies the browser and operating system being used Here is an example of how to access the user agent string using the Navigator interface:\njs\nconsole log(navigator userAgent);\nThe result will be a string that contains information about the browser and operating system being used Here is an example string that you might see:\nmd\nMozilla/5 0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537 36 (KHTML, like Gecko) Chrome/128 0 0 0 Safari/537 36\nThis could be helpful if you want to display different content based on the user's browser or operating system Another useful property of the Navigator interface is the language property, which returns the language of the browser You can use this property to display content in the user's preferred language Here is an example of using the language property:\njs\nconsole log(navigator language);\nThe result will be a string that contains the language code of the browser If your preferred language is English, it will return en-US Next, let's look at the Window interface The Window interface represents the browser window that contains the DOM document It provides methods and properties for interacting with the browser window, such as resizing the window, opening new windows, and navigating to different URLs Here is an example of working with the innerWidth property of the Window interface:\njs\nconsole log(window innerWidth);\nThe result will be the width of the browser window in pixels For example, if the browser window is 800 pixels wide, it will return 800 Another example would be the location property of the Window interface, which provides information about the current URL of the browser window:\njs\nconsole log(window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5427,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368e7bd043f331919514d.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "30185a2d009936240f3b01940ef7e6a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368e7bd043f331919514d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "new windows, and navigating to different URLs Here is an example of working with the innerWidth property of the Window interface: js console log(window innerWidth); The result will be the width of the browser window in pixels For example, if the browser window is 800 pixels wide, it will return 800 Another example would be the location property of the Window interface, which provides information about the current URL of the browser window: js console log(windowlocation);\nThe result will be an object that contains information about the current URL, such as the protocol, hostname, and pathname Most of the time you won't need to interact with the Window interface directly, as it is automatically available in the global scope of your JavaScript code For example, you can access the location property directly without using the window object:\njs\nconsole log(location);\nYou will see the same results as before when you were using window location Finally, let's look at the Document interface The Document interface represents the DOM document that is displayed in the browser window It provides methods and properties for interacting with the DOM, such as selecting elements, creating new elements, and modifying the content of elements Here is an example of using the document children property:\njs\nconsole log(document children);\nThe result will be an HTMLCollection object that contains all the child elements of the document There are many more properties and methods available on the Document, Window, and Navigator interfaces However, this lecture has provided you with a basic understanding of how these interfaces work and how to use them in your web applications --questions--\n--text--\nWhat does the navigator userAgent property return --answers--\nThe width of the browser window --feedback--\nThis property helps identify the browser and operating system The current URL of the browser window --feedback--\nThis property helps identify the browser and operating system A string identifying the browser and operating system The language of the browser --feedback--\nThis property helps identify the browser and operating system --video-solution--\n3\n--text--\nWhich property of the Window interface provides information about the current URL --answers--\nwindow innerWidth\n--feedback--\nThis property helps you find out where the browser is currently navigating window location\nwindow navigator\n--feedback--\nThis property helps you find out where the browser is currently navigating window document\n--feedback--\nThis property helps you find out where the browser is currently navigating --video-solution--\n2\n--text--\nHow can you access the Document interface properties without explicitly using the window object --answers--\nBy using window document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5427,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368e7bd043f331919514d.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "80c08064c493dbc2fe349cff778d7c92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368e7bd043f331919514d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "provides information about the current URL --answers-- window innerWidth --feedback-- This property helps you find out where the browser is currently navigating window location window navigator --feedback-- This property helps you find out where the browser is currently navigating window document --feedback-- This property helps you find out where the browser is currently navigating --video-solution-- 2 --text-- How can you access the Document interface properties without explicitly using the window object --answers-- By using window document--feedback--\nThis is automatically available in the global scope of your JavaScript code By using document By using navigator document --feedback--\nThis is automatically available in the global scope of your JavaScript code By using navigator window --feedback--\nThis is automatically available in the global scope of your JavaScript code --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5427,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368e7bd043f331919514d.md",
      "source_type": "git_repo"
    },
    "token_count": 157,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fbd807ff38f842f0aab0bb3681411ca4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368f272706633516e4873.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673368f272706633516e4873\ntitle: How Do You Add Attributes with setAttribute() challengeType: 19\ndashedName: how-do-you-add-attributes-with-setattribute\n--description--\nYou have been used to working with attributes in your HTML and CSS projects But did you know that you can add attributes to your HTML elements in your JavaScript file In this lecture, you will learn how work with the setAttribute() method to add attributes to your HTML elements Here is the basic syntax:\njs\nsetAttribute(attribute, value);\nLet's take a look at a few examples to better understand how to use the setAttribute() method In this first example, we have a p element inside the HTML:\n```html\nI am a paragraph\n```\nTo add a class attribute we first need to access that p element using the getElementById() method Then we can use the setAttribute() method to add the class attribute and set the value to my-class:\njs\nconst para = document getElementById(\"para\");\npara setAttribute(\"class\", \"my-class\");\nIf we inspect the element inside the browser, we will see that the class attribute has been added to the p element If you have an existing attribute on an HTML element, you can update its value using the setAttribute() method In this example we have a div element with a class attribute set to my-class:\n```html\n```\nTo update the class attribute value to example, we can use the setAttribute() method again:\njs\nconst divEl = document querySelector(\" my-class\");\ndivEl setAttribute(\"class\", \"example\");\nIf we inspect the element inside the browser, we will see that the class attribute value has been updated to example So, what are some real-world examples of when to use the setAttribute() method If you were building a dynamic image gallery, you might need to update the src attribute of an image element when a user clicks on a thumbnail Another example would be if you're dealing with form validation and need to add certain attributes like required or minlength to an input element --questions--\n--text--\nWhat does the setAttribute() method do --answers--\nIt removes an attribute from an HTML element --feedback--\nThe method is used to modify attributes of existing elements It changes the text content of an HTML element --feedback--\nThe method is used to modify attributes of existing elements It adds a new attribute or updates the value of an existing attribute on an HTML element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4155,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368f272706633516e4873.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3b1e675ff9cf68407db131a4d45785e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368f272706633516e4873.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "add certain attributes like required or minlength to an input element --questions-- --text-- What does the setAttribute() method do --answers-- It removes an attribute from an HTML element --feedback-- The method is used to modify attributes of existing elements It changes the text content of an HTML element --feedback-- The method is used to modify attributes of existing elements It adds a new attribute or updates the value of an existing attribute on an HTML elementIt creates a new HTML element --feedback--\nThe method is used to modify attributes of existing elements --video-solution--\n3\n--text--\nHow can you update the value of an existing attribute using setAttribute() --answers--\nBy directly assigning a new value to the attribute in HTML --feedback--\nThe method involves accessing the element first and then applying the change By using getElementById() and then setting the attribute value with setAttribute() By modifying the HTML file directly --feedback--\nThe method involves accessing the element first and then applying the change By using the innerHTML property --feedback--\nThe method involves accessing the element first and then applying the change --video-solution--\n2\n--text--\nIn which scenario might you use setAttribute() in a real-world application --answers--\nTo add a class attribute to a static div element without any dynamic interaction --feedback--\nThink about situations where dynamic changes to elements are needed based on user actions To update the src attribute of an image element when a user interacts with a thumbnail To change the text content of a p element on page load --feedback--\nThink about situations where dynamic changes to elements are needed based on user actions To modify the style attribute directly within a CSS file --feedback--\nThink about situations where dynamic changes to elements are needed based on user actions --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4155,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368f272706633516e4873.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e014d9cd6f05a819f4dadc60b9af1352",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368fbe12a2b337645053d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673368fbe12a2b337645053d\ntitle: What Is the Event Object challengeType: 19\ndashedName: what-is-the-event-object\n--description--\nThe Event object is a payload that triggers when a user interacts with your web page in some way These interactions can be anything from clicking on a button or focusing an input to shaking their mobile device Like all JavaScript objects, the Event object has a number of properties that might be helpful The properties available depend on the event that triggered this payload All Event objects will have the type property This property reveals the type of event that triggered the payload, such as \"keydown\" or \"click\" These values will correspond to the same values you might pass to addEventListener(), where you can capture and utilize the Event object Event objects will always have the target property The target property is a reference to whatever object triggered the event Most commonly, this will be some sort of HTMLElement object, or the Document or Window objects But it can also be something more specific, like an AudioContext Events also have methods, which are functions exposed as properties on the object One commonly used method is preventDefault(), which prevents the default behavior of the event when called If you want to handle form submissions yourself, for example, you might call preventDefault() to keep the browser from trying to submit the form data as a POST request You will learn more about POST requests in future lectures You'll also likely run in to the stopPropagation() method This method prevents the event from bubbling up or propagating to parent elements You'll learn more about what this means in a later lecture There are also a large number of properties that are specific to certain implementations of the Event object For example, a FetchEvent will have a request property to contain the request that triggered the event If you are ever unsure of what properties are available, you can log the Event object in question or even check the documentation --questions--\n--text--\nWhat is the purpose of the Event object in JavaScript --answers--\nTo create new HTML elements --feedback--\nThe Event object is described as a payload triggered by user interactions To store user data --feedback--\nThe Event object is described as a payload triggered by user interactions To provide information about user interactions with a web page\nTo define CSS styles for elements --feedback--\nThe Event object is described as a payload triggered by user interactions --video-solution--\n3\n--text--\nWhich of the following properties is always available on all Event objects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368fbe12a2b337645053d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c677eb4a35d4a89f65c0ffa8e634dbb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368fbe12a2b337645053d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "HTML elements --feedback-- The Event object is described as a payload triggered by user interactions To store user data --feedback-- The Event object is described as a payload triggered by user interactions To provide information about user interactions with a web page To define CSS styles for elements --feedback-- The Event object is described as a payload triggered by user interactions --video-solution-- 3 --text-- Which of the following properties is always available on all Event objects--answers--\nrequest\n--feedback--\nThe lecture mentions two properties that are always available on Event objects type\nkeyCode\n--feedback--\nThe lecture mentions two properties that are always available on Event objects clientX\n--feedback--\nThe lecture mentions two properties that are always available on Event objects --video-solution--\n2\n--text--\nWhat does the preventDefault() method do when called on an Event object --answers--\nIt stops the event from bubbling up to parent elements --feedback--\nThink about what \"default behavior\" means in the context of events It prevents the default behavior of the event It removes all event listeners from the target element --feedback--\nThink about what \"default behavior\" means in the context of events It cancels the event entirely --feedback--\nThink about what \"default behavior\" means in the context of events --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673368fbe12a2b337645053d.md",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2f17b928597f65601d238a83e48db749",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369067f824d33a90a0534.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673369067f824d33a90a0534\ntitle: How Does the addEventListener Method Work challengeType: 19\ndashedName: how-does-the-addeventlistener-method-work\n--description--\nWhen the user clicks on a button or there is a change in a form, this is known as an event In your programs, you will need to have a way to listen for these events and respond to them The addEventListener() method is used to listen for events It takes two arguments: the event you want to listen for and a function that will be called when the event occurs Here is the basic syntax:\njs\nelement addEventListener(\"event\", listener);\nThe element is the HTML element to monitor for events, and event specifies the type of event to listen for, such as \"click\" The listener is an object that will receive the notification when the event occurs Most of the time, this will be a function that you define to handle the event Here is an example:\njs\nelement addEventListener(\"click\", () => {\n// code to run when the click event occurs\n});\nYou can also choose to pass in a function reference like this:\n```js\nfunction handleClick() {\n// code to run when the click event occurs\n}\nelement addEventListener(\"click\", handleClick);\n```\nSometimes you may want to create a separate function to handle the event This can make your code easier to read and maintain The listener argument can also be null, or it can be an object that uses the EventListener interface The EventListener interface defines a single method called handleEvent() This method is automatically called whenever the event you're listening for occurs Using this interface allows the same object to handle multiple events if needed Most of the time, you won't need to use this interface, and you can instead pass in a function that will be called when the event occurs Now, let's take a look at an example to better understand how this works:\nIn this example, we have a button element with the id of btn:\nhtml\n<button id=\"btn\">Show alert</button>\nWe want to listen for the \"click\" event on this button and show an alert when the button is clicked We first need to access that button element in our JavaScript code Then we need to add an event listener to listen for the click event and show an alert when the button is clicked:\n```js\nconst btn = document getElementById(\"btn\");\nbtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369067f824d33a90a0534.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b56c6fe884a6a5039bcadb0d077656be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369067f824d33a90a0534.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "we have a button element with the id of btn: html <button id=\"btn\">Show alert</button> We want to listen for the \"click\" event on this button and show an alert when the button is clicked We first need to access that button element in our JavaScript code Then we need to add an event listener to listen for the click event and show an alert when the button is clicked: ```js const btn = document getElementById(\"btn\"); btnaddEventListener(\"click\", () => alert(\"You clicked the button\"));\n```\nNow each time the button is clicked, the user will see an alert message displayed on the screen like this:\nmd\nYou clicked the button\nAnother type of event that you can listen for is the \"input\" event This event is triggered when the value of an input element changes Here is an example:\nhtml\n<input type=\"text\" id=\"input\" placeholder=\"Type something\" />\nWe want to listen for the input event on this input element and log the value of the input to the console each time the user types something We first need to access that input element in our JavaScript code Then we need to add an event listener to listen for the input event and log the value of the input to the console each time the user types something:\n```js\nconst input = document getElementById(\"input\");\ninput addEventListener(\"input\", () => {\nconsole log(input value);\n});\n```\nHere is what the console will look like when the user types something in the input field:\nmd\nh\nhe\nhel\nhell\nhello\nThere are many more events that you can listen for using the addEventListener() method Some common events include mouseover, mouseout, keydown, keyup, and submit In future lectures, we will cover more events and how to use the addEventListener() method to listen for them --questions--\n--text--\nWhat is the purpose of the addEventListener() method --answers--\nTo create new HTML elements --feedback--\nThink about how events are handled in JavaScript To listen for events on an HTML element To modify the style of an element --feedback--\nThink about how events are handled in JavaScript To change the HTML content of an element --feedback--\nThink about how events are handled in JavaScript --video-solution--\n2\n--text--\nWhat does the EventListener interface define --answers--\nMethods for creating new HTML elements --feedback--\nThink about what the interface is used for in relation to events The structure for event handling",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369067f824d33a90a0534.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0093e35aeb9db2c11186c198b17363ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369067f824d33a90a0534.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "JavaScript To listen for events on an HTML element To modify the style of an element --feedback-- Think about how events are handled in JavaScript To change the HTML content of an element --feedback-- Think about how events are handled in JavaScript --video-solution-- 2 --text-- What does the EventListener interface define --answers-- Methods for creating new HTML elements --feedback-- Think about what the interface is used for in relation to events The structure for event handlingProperties of the HTML document --feedback--\nThink about what the interface is used for in relation to events Styles for event-driven elements --feedback--\nThink about what the interface is used for in relation to events --video-solution--\n2\n--text--\nWhat type of event would you use addEventListener() with to capture user input in a text field --answers--\nclick\n--feedback--\nConsider what happens when a user types in an input field keydown\n--feedback--\nConsider what happens when a user types in an input field input\nsubmit\n--feedback--\nConsider what happens when a user types in an input field --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369067f824d33a90a0534.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0fbc484f6d3ffb22e407bc19a963d9e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733691d88e3053414689276.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733691d88e3053414689276\ntitle: What Are Inline Event Handlers, and Why Is It Best Practice to Use addEventListener Instead challengeType: 19\ndashedName: what-are-inline-event-handlers-and-why-is-it-best-practice-to-use-addeventlistener-instead\n--description--\nIn the previous lectures, you learned how to work with events by using the addEventListener() method But there is another, not recommended way, to work with events in JavaScript Inline event handlers are special attributes on an HTML element that are used to execute JavaScript code when an event occurs Here is an example of a button element with an inline click event handler:\nhtml\n<button onclick=\"alert('Hello World ')\">Show alert</button>\nWhen the user clicks on the button, the alert function is called and an alert dialog is displayed with the message Hello World Another way to use inline event handlers is to call a function that is defined in a script tag in the HTML document Here is an example of defining a function called changeBgColor and calling it from an inline click event handler:\n```html\nChange background color\n```\nWhen the user clicks on the button, the changeBgColor function is called and the background color of the page is changed to light blue While it is possible to use inline event handlers like this, it is not considered a best practice For one reason, inline event handlers can only be used to attach one event listener to an element If you want to attach multiple event listeners to the same element, you will need to use addEventListener() Another reason is that inline event handlers mix HTML and JavaScript code together, which can make your code harder to read and maintain It is better to keep your HTML code and JavaScript code separate by using addEventListener() to attach event listeners to elements Inline event handlers are not recommended for use in modern JavaScript So, it is best practice to stick with the addEventListener() method when working with events in JavaScript --questions--\n--text--\nWhat is an inline event handler --answers--\nA method to attach multiple event listeners to an element --feedback--\nThink about how inline event handlers are implemented in HTML An attribute on an HTML element that executes JavaScript code when an event occurs A way to define functions in a separate JavaScript file --feedback--\nThink about how inline event handlers are implemented in HTML A type of CSS styling for elements --feedback--\nThink about how inline event handlers are implemented in HTML",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3983,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733691d88e3053414689276.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4b88b5c5c8d290b8801d4b0e5ce89825",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733691d88e3053414689276.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "handler --answers-- A method to attach multiple event listeners to an element --feedback-- Think about how inline event handlers are implemented in HTML An attribute on an HTML element that executes JavaScript code when an event occurs A way to define functions in a separate JavaScript file --feedback-- Think about how inline event handlers are implemented in HTML A type of CSS styling for elements --feedback-- Think about how inline event handlers are implemented in HTML--video-solution--\n2\n--text--\nWhy is it considered best practice to use addEventListener() instead of inline event handlers --answers--\naddEventListener() allows you to mix HTML and JavaScript easily --feedback--\nConsider the limitations of inline event handlers Inline event handlers can only attach one event listener to an element addEventListener() is easier to write --feedback--\nConsider the limitations of inline event handlers Inline event handlers are faster than addEventListener() --feedback--\nConsider the limitations of inline event handlers --video-solution--\n2\n--text--\nWhat is a potential drawback of using inline event handlers --answers--\nThey are faster than using addEventListener() --feedback--\nThink about how code organization affects readability They require more lines of code --feedback--\nThink about how code organization affects readability They make code harder to read and maintain by mixing HTML and JavaScript They can only be used with buttons --feedback--\nThink about how code organization affects readability --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3983,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733691d88e3053414689276.md",
      "source_type": "git_repo"
    },
    "token_count": 274,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1db52445a8eae9913ca5eae718facbe6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369101e5c4a33db0e8a02.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673369101e5c4a33db0e8a02\ntitle: How Does the removeEventListener Method Work challengeType: 19\ndashedName: how-does-the-removeeventlistener-method-work\n--description--\nIn the previous lecture, you learned how to work with \"click\" and \"input\" events by using the addEventListener() method In this lecture, you will learn how to remove event listeners using the removeEventListener() method The removeEventListener() method is used to remove an event listener that was previously added to an element using the addEventListener() method This is useful when you want to stop listening for a particular event on an element Here is the basic syntax for the removeEventListener() method:\njs\nelement removeEventListener(\"event\", listener);\nJust like the addEventListener() method, the removeEventListener() method takes two arguments: the event you want to remove and the listener function that was previously added There is also an additional optional third argument that can be passed to the removeEventListener() method This argument can either be the options or useCapture The options argument is an object that specifies the options for the event listener, such as whether the event listener should be passive or once The useCapture argument is a boolean value that specifies whether the event should be captured during the event propagation phase Most of the time, you will only need to pass the event and listener arguments to the removeEventListener() method Let's take a look at an example to better understand how the removeEventListener() method works:\nIn this example, we have heading, paragraph and button elements in the HTML:\n```html\nEvent Listener examples\nMouseOver this text to remove the event listener\nChange background color\n```\nInside the CSS file, we are setting the body background color to grey:\ncss\nbody {\nbackground-color: grey;\n}\nIf we want to toggle the background color between grey and blue, then we can use an event listener for that We first need to access the paragraph and button elements along with the body element:\njs\nconst bodyEl = document querySelector(\"body\");\nconst para = document getElementById(\"para\");\nconst btn = document getElementById(\"btn\");\nThen we need to create the function responsible for toggling between the grey and blue colors:\n```js\nlet isBgColorGrey = true;\nfunction toggleBgColor() {\nbodyEl style backgroundColor = isBgColorGrey \"blue\" : \"grey\";\nisBgColorGrey =",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369101e5c4a33db0e8a02.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0ad988cec30b3b1e52067c6c84042d22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369101e5c4a33db0e8a02.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and blue, then we can use an event listener for that We first need to access the paragraph and button elements along with the body element: js const bodyEl = document querySelector(\"body\"); const para = document getElementById(\"para\"); const btn = document getElementById(\"btn\"); Then we need to create the function responsible for toggling between the grey and blue colors: ```js let isBgColorGrey = true; function toggleBgColor() { bodyEl style backgroundColor = isBgColorGrey \"blue\" : \"grey\"; isBgColorGrey =isBgColorGrey;\n}\n```\nWe are using a boolean variable isBgColorGrey to keep track of the current background color If the background color is grey, then we change it to blue, and vice versa Then we need to add an event listener to the button element to call the toggleBgColor function when the button is clicked:\njs\nbtn addEventListener(\"click\", toggleBgColor);\nEach time the button is clicked, the background color of the body will change between grey and blue To remove the event listener when the paragraph is hovered over, we can add an event listener to the paragraph element We are using the mouseover event and passing in a function that removes the event listener from the button element:\njs\npara addEventListener(\"mouseover\", () => {\nbtn removeEventListener(\"click\", toggleBgColor);\n});\nWhen the paragraph is hovered over, the event listener for the button click event is removed, and the background color will no longer change when the button is clicked Real world examples of when to use the removeEventListener() method include removing event listeners when a modal is closed in a web application or when a user logs out of an application --questions--\n--text--\nWhat is the purpose of the removeEventListener() method --answers--\nTo add a new event listener to an element --feedback--\nThis method is essential when you want to stop listening for specific events To remove an event listener that was previously added to an element To change the properties of an existing event listener --feedback--\nThis method is essential when you want to stop listening for specific events To prevent any event listeners from being added --feedback--\nThis method is essential when you want to stop listening for specific events --video-solution--\n2\n--text--\nWhich arguments are required for the removeEventListener() method --answers--\nOnly the event type --feedback--\nThink about what you need to specify to correctly remove an event listener The event type and the listener function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369101e5c4a33db0e8a02.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "08ff47390b625ef23fc4280166df71fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369101e5c4a33db0e8a02.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "existing event listener --feedback-- This method is essential when you want to stop listening for specific events To prevent any event listeners from being added --feedback-- This method is essential when you want to stop listening for specific events --video-solution-- 2 --text-- Which arguments are required for the removeEventListener() method --answers-- Only the event type --feedback-- Think about what you need to specify to correctly remove an event listener The event type and the listener functionThe event type, listener function, and options --feedback--\nThink about what you need to specify to correctly remove an event listener The event type and options only --feedback--\nThink about what you need to specify to correctly remove an event listener --video-solution--\n2\n--text--\nWhen might you want to use the removeEventListener() method in a real-world application --answers--\nWhen a user logs into the application --feedback--\nConsider scenarios where you want to stop listening for events after a certain action When a user interacts with a button --feedback--\nConsider scenarios where you want to stop listening for events after a certain action When a modal is closed or when a user logs out When a user refreshes the page --feedback--\nConsider scenarios where you want to stop listening for events after a certain action --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5646,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369101e5c4a33db0e8a02.md",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "bf97e4aa5e228ff7f3f229fc072ddc1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733693bfce9a43489a355db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733693bfce9a43489a355db\ntitle: What Is the DOMContentLoaded Event, and How Does It Work challengeType: 19\ndashedName: what-is-the-domcontentloaded-event-and-how-does-it-work\n--description--\nThe DOMContentLoaded event is fired when everything in the HTML document has been loaded and parsed If you have external stylesheets, or images, the DOMContentLoaded event will not wait for those to be loaded It will only wait for the HTML to be loaded This differs from the load event, which waits for everything to be loaded, including external stylesheets, images, and so on Here is the example syntax for using the DOMContentLoaded event:\njs\ndocument addEventListener(\"DOMContentLoaded\", function () {\nconsole log(\"DOM is loaded \");\n});\nOnce the DOM is loaded, the function will be executed and the message DOM is loaded will be logged to the console Now, let's take a look at another example using the DOMContentLoaded event In this example, we have an image inside the HTML:\n```html\nImage Change on DOM Loaded\n```\nTo update the image, we can create a function that changes the src attribute of the image:\njs\nfunction changeImg() {\nconst img = document getElementById(\"example-img\");\nimg src =\n\"https://cdn freecodecamp org/curriculum/responsive-web-design-principles/FCCStickers-CamperBot200x200 jpg\";\nconsole log(\"image was just changed\");\n}\nWe can then check if the DOM is still loading and add an event listener for the DOMContentLoaded event If the DOMContentLoaded event has already fired, we can call the changeImg function directly:\njs\nif (document readyState === \"loading\") {\ndocument addEventListener(\"DOMContentLoaded\", changeImg);\n} else {\nconsole log(\"DOMContentLoaded has already fired\");\nchangeImg();\n}\nIf you were to run this code, and refresh the page, you would see the image change to the new image after the DOM has loaded It happens pretty quickly, but you will see a slight flicker as the image changes The DOMContentLoaded event is useful when you want to run some JavaScript code as soon as the DOM is loaded, but before all the external resources like images and stylesheets are loaded --questions--\n--text--\nWhat does the DOMContentLoaded event signify --answers--\nAll external resources are fully loaded --feedback--\nThis event does not wait for images or stylesheets The HTML document has been fully loaded and parsed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733693bfce9a43489a355db.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b8d50bf52ceb0044d10f0323987475e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733693bfce9a43489a355db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "you will see a slight flicker as the image changes The DOMContentLoaded event is useful when you want to run some JavaScript code as soon as the DOM is loaded, but before all the external resources like images and stylesheets are loaded --questions-- --text-- What does the DOMContentLoaded event signify --answers-- All external resources are fully loaded --feedback-- This event does not wait for images or stylesheets The HTML document has been fully loaded and parsedThe browser has finished rendering the page --feedback--\nThis event does not wait for images or stylesheets All images on the page are fully loaded --feedback--\nThis event does not wait for images or stylesheets --video-solution--\n2\n--text--\nHow does the DOMContentLoaded event differ from the load event --answers--\nDOMContentLoaded waits for images to load, while load does not --feedback--\nConsider what resources each event waits for DOMContentLoaded fires before all resources are loaded, while load waits for everything DOMContentLoaded can only be used with external scripts --feedback--\nConsider what resources each event waits for There is no difference; they are the same event --feedback--\nConsider what resources each event waits for --video-solution--\n2\n--text--\nIn the provided example, what happens if the DOMContentLoaded event has already fired when the script runs --answers--\nThe image will not change at all --feedback--\nThink about the conditional check in the code An error will occur --feedback--\nThink about the conditional check in the code The changeImg function will be called directly The event listener will be added again --feedback--\nThink about the conditional check in the code --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733693bfce9a43489a355db.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f04b3293a7dca149734104535682feae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733694805a85d34ced08a9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733694805a85d34ced08a9b\ntitle: How Do the setTimeout and setInterval Methods Work challengeType: 19\ndashedName: how-do-the-settimeout-and-setinterval-methods-work\n--description--\nWhen building your programs, you'll often want something to happen after a delay, or repeat at regular intervals That's where the setTimeout() and setInterval() methods come in handy Both methods accept two parameters: a function and a delay Let's look at each of the methods in more detail so you can start using them in your web projects setTimeout() lets you delay an action for a specified time Here's the basic syntax of the setTimeout() method:\njs\nsetTimeout(functionToRun, delay);\nfunctionToRun is the code you want to execute after a specified delay, and delay is the time (in milliseconds) to wait before running the function Here's an example:\njs\nsetTimeout(function () {\nconsole log(\"This runs after 3 seconds\");\n}, 3000);\nYou can also use an arrow function for the callback, like this:\njs\nsetTimeout(() => {\nconsole log(\"This runs after 3 seconds\");\n}, 3000);\nsetInterval() keeps repeating a function at a set interval It's like having an alarm that goes off every few seconds setInterval() is perfect when you want something to happen over and over again, like refreshing data or creating an animation that moves continuously Just like setTimeout(), it takes a function and a delay:\njs\nsetInterval(functionToRun, delay);\nfunctionToRun is the code you want to run repeatedly, while delay is the time in milliseconds between each execution of that function Here's an example:\njs\nsetInterval(() => {\nconsole log(\"This runs every 2 seconds\");\n}, 2000);\nAnd here's the result in the console:\nmd\nThis runs every 2 seconds\nThis runs every 2 seconds\nThis runs every 2 seconds\nSince setInterval() keeps executing the provided function at the specified interval, you might want to stop it To do this, you have to use the clearInterval() method To do the work, clearInterval() takes the ID of the setInterval() you want to stop This could be a variable you assign the interval to One way to stop the interval is inside a setTimeout(), as that will stop the interval after a certain time:\n```js\nconst intervalID = setInterval(() => {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733694805a85d34ced08a9b.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "637c9905209d3691bb5c5dc099820394",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733694805a85d34ced08a9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the provided function at the specified interval, you might want to stop it To do this, you have to use the clearInterval() method To do the work, clearInterval() takes the ID of the setInterval() you want to stop This could be a variable you assign the interval to One way to stop the interval is inside a setTimeout(), as that will stop the interval after a certain time: ```js const intervalID = setInterval(() => { consolelog(\"This will stop after 5 seconds\");\n}, 1000);\nsetTimeout(() => {\nclearInterval(intervalID);\n}, 5000);\n```\nYou can also stop a timeout with the clearTimeout() method:\n```js\nlet timeoutID = setTimeout(() => {\nconsole log(\"This will not run\");\n}, 5000);\nclearTimeout(timeoutID);\n```\nWith that code, the setTimeout() will not run at all So, a more elegant way to do it is through the DOM, by adding a click event listener to a button to stop the timeout:\n```html\nCancel Timeout Example\nCancel Timeout\n```\n--questions--\n--text--\nWhat do both setTimeout() and setInterval() methods take as parameters --answers--\nA variable and a number --feedback--\nThink about what needs to be executed and how long to wait A function and a delay A string and a boolean --feedback--\nThink about what needs to be executed and how long to wait A loop and a condition --feedback--\nThink about what needs to be executed and how long to wait --video-solution--\n2\n--text--\nWhat does the setInterval() method do in JavaScript --answers--\nIt runs a function once after a delay --feedback--\nThink about the function that runs over and over again at regular intervals It repeatedly runs a function at a set interval, like an alarm going off every few seconds It stops a function from executing --feedback--\nThink about the function that runs over and over again at regular intervals It pauses a function for a set amount of time --feedback--\nThink about the function that runs over and over again at regular intervals --video-solution--\n2\n--text--\nWhat does the setTimeout() method do in JavaScript --answers--\nIt delays an action for a specified time and then runs a function It runs a function immediately after being called --feedback--\nThink about when you want JavaScript to wait before executing a function It repeats a function at regular intervals --feedback--\nThink about when you want JavaScript to wait before executing a function It stops a function from running after a delay",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733694805a85d34ced08a9b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4840d17e8af0282aef10aa0b5b092190",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733694805a85d34ced08a9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "intervals --video-solution-- 2 --text-- What does the setTimeout() method do in JavaScript --answers-- It delays an action for a specified time and then runs a function It runs a function immediately after being called --feedback-- Think about when you want JavaScript to wait before executing a function It repeats a function at regular intervals --feedback-- Think about when you want JavaScript to wait before executing a function It stops a function from running after a delay--feedback--\nThink about when you want JavaScript to wait before executing a function --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4950,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733694805a85d34ced08a9b.md",
      "source_type": "git_repo"
    },
    "token_count": 112,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d70b8a874f44f88721957911ca692b4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336956340e8a34fbd5d9f3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67336956340e8a34fbd5d9f3\ntitle: What Is the requestAnimationFrame() API, and How Can It Be Used to Set Up an Animation Loop challengeType: 19\ndashedName: what-is-the-requestanimationframe-api-and-how-can-it-be-used-to-set-up-an-animation-loop\n--description--\nCreating smooth animations on a web page can be tricky, especially if you're not sure how to handle timing properly The great news is that the requestAnimationFrame() API makes it easier requestAnimationFrame() is a method that allows you to schedule the next step of your animation before the next screen repaint, resulting in a fluid and visually appealing experience The next screen repaint refers to the moment when the browser refreshes the visual display of the web page This happens multiple times per second, typically around 60 times (or 60 frames per second) on most displays To use the requestAnimationFrame() method, all you need to do is to call it and pass a callback function into it:\njs\nrequestAnimationFrame(callback);\nCalling requestAnimationFrame() must first occur inside a function that handles the animation, such as animate(), along with a function to update the animation, traditionally called update():\njs\nfunction animate() {\n// Update the animation // for example, move an element, change a style, and more update();\n// Request the next frame\nrequestAnimationFrame(animate);\n}\nThe update() function is where the magic happens Inside it, you get to change whatever you want to animate For example, updating a style or changing the position of an element:\njs\nfunction update() {\nelement style transform = `translateX(${position}px)`;\nposition += 2;\n}\nWhat finally kicks off the animation is calling requestAnimationFrame() and passing in the animate function, this time outside the animate function:\njs\nrequestAnimationFrame(animate);\nThe loop will continue until you stop it Now, let's take a look at another example The HTML for this example is a div element with the text freeCodeCamp is Awesome:\n```html\nfreeCodeCamp is Awesome\n```\nThis is the CSS that makes the div a rectangle and hides anything that goes out of the viewport on the left or right:\n```css\nbody {\noverflow-x: hidden;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336956340e8a34fbd5d9f3.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4c781facdd337e9bbea6b098c5421b78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336956340e8a34fbd5d9f3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "animate function, this time outside the animate function: js requestAnimationFrame(animate); The loop will continue until you stop it Now, let's take a look at another example The HTML for this example is a div element with the text freeCodeCamp is Awesome: ```html freeCodeCamp is Awesome ``` This is the CSS that makes the div a rectangle and hides anything that goes out of the viewport on the left or right: ```css body { overflow-x: hidden; }rect {\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 400px;\nheight: 250px;\nborder-radius: 5px;\nbackground-color: #1b1b32;\ncolor: #f5f6f7;\nfont-size: 2rem;\nposition: absolute;\n}\n```\nThis is the commented JavaScript that moves the rectangle 2px to the right at every call of requestAnimationFrame(animate) with the animate function as a callback:\n```js\n// reference the rectangle\nconst rect = document getElementById(\"rect\");\n// start with a position of 0\nlet position = 0;\nfunction update() {\n// Move the rectangle 2px to the right\nrect style left = position + \"px\";\nposition += 2;\n// Reset the position when the rectangle reaches\n// the right side of the screen\nif (position > window innerWidth) {\n// Move the rectangle just outside the left side of the screen\nposition = -rect offsetWidth;\n}\n}\nfunction animate() {\n// Update the position\nupdate();\n//request the next frame\nrequestAnimationFrame(animate);\n}\n// Start the animation\nrequestAnimationFrame(animate);\n```\nThe result in the browser will be an animated title card floating across the screen --questions--\n--text--\nWhat does the requestAnimationFrame() method do --answers--\nIt stops an animation from running --feedback--\nThink about how this method helps create fluid animations It runs an animation immediately without delay --feedback--\nThink about how this method helps create fluid animations It speeds up an animation --feedback--\nThink about how this method helps create fluid animations It schedules the next step of an animation before the next screen repaint for smoother visuals --video-solution--\n4\n--text--\nWhat kicks off the animation when using requestAnimationFrame() --answers--\nCalling the animate function inside the requestAnimationFrame() method --feedback--\nThink about how the requestAnimationFrame() method triggers the animation Setting a timeout with setTimeout()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336956340e8a34fbd5d9f3.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c471deb46bc7253462ac6aa625f98d01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336956340e8a34fbd5d9f3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--feedback-- Think about how this method helps create fluid animations It speeds up an animation --feedback-- Think about how this method helps create fluid animations It schedules the next step of an animation before the next screen repaint for smoother visuals --video-solution-- 4 --text-- What kicks off the animation when using requestAnimationFrame() --answers-- Calling the animate function inside the requestAnimationFrame() method --feedback-- Think about how the requestAnimationFrame() method triggers the animation Setting a timeout with setTimeout()--feedback--\nThink about how the requestAnimationFrame() method triggers the animation Using setInterval() to repeat the animation --feedback--\nThink about how the requestAnimationFrame() method triggers the animation Calling requestAnimationFrame() and passing in the animate function outside the animate function --video-solution--\n4\n--text--\nWhat does the \"next screen repaint\" mean --answers--\nThe moment when the browser updates the HTML structure --feedback--\nThink about how often the browser updates what you see on the screen The moment when the browser refreshes the visual display of the web page, usually around 60 times per second The moment when the browser reloads the entire page --feedback--\nThink about how often the browser updates what you see on the screen The moment when the browser updates CSS styles --feedback--\nThink about how often the browser updates what you see on the screen --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\67336956340e8a34fbd5d9f3.md",
      "source_type": "git_repo"
    },
    "token_count": 272,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1286a98e8b14dc7cbe3a4bd73dbcb6d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733692ffe1da034469f7917.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733692ffe1da034469f7917\ntitle: How Do You Manipulate Styles Using Element style and Element classList challengeType: 19\ndashedName: how-do-you-manipulate-styles-using-elementstyle-and-elementclasslist\n--description--\nThere will be times when you will need to manipulate the styles of an HTML element inside your JavaScript file An example of this would be when you need to hide or show a menu when a user clicks on a button In this lecture, you will learn how to manipulate styles using the Element style and Element classList properties The Element style property is a read-only property that represents the inline style of an element You can use this property to get or set the style of an element Here is an example of a paragraph element with an ID of para:\n```html\nThis is a paragraph\n```\nYou can use the style property to change the color of the paragraph element to red:\njs\nconst paraEl = document getElementById(\"para\");\nparaEl style color = \"red\";\nThe style property can be used to set many CSS properties, such as color, background-color, font-size, font-weight, and so on Another way to manipulate styles is by using the Element classList property The classList property is a read-only property that can be used to add, remove, or toggle classes on an element Let's take a look at a couple of examples In this first example, you are going to add a class called highlight to a paragraph element with an ID of para:\n```html\nThis is a paragraph\n```\nIn the CSS, we will set the highlight class to change the background color of the paragraph element to yellow:\ncss highlight {\nbackground-color: yellow;\n}\nIn the JavaScript, we will add the highlight class to the paragraph element using the classList add() method:\njs\nconst paraEl = document getElementById(\"para\");\nparaEl classList add(\"highlight\");\nYou can also add multiple classes to an element by passing them as arguments to the classList add() method:\njs\nclassList add(\"class1\", \"class2\", \"class3\");\nIf you need to remove a class from an element, you can use the classList remove() method like this:\njs\nclassList remove(\"highlight\");\nTo toggle a class on an element, you can use the classList toggle() method",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733692ffe1da034469f7917.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "351851866bad94333a19464892e3ca03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733692ffe1da034469f7917.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "paragraph element using the classList add() method: js const paraEl = document getElementById(\"para\"); paraEl classList add(\"highlight\"); You can also add multiple classes to an element by passing them as arguments to the classList add() method: js classList add(\"class1\", \"class2\", \"class3\"); If you need to remove a class from an element, you can use the classList remove() method like this: js classList remove(\"highlight\"); To toggle a class on an element, you can use the classList toggle() methodIn this example, we have a button element with an ID of toggle-btn and a nav element with an ID of menu:\n```html\nToggle Menu\nHome\nAbout\nProducts\n```\nInside the CSS, we have added some styles for the menu and a class called show that will change the display property of the menu to block:\n```css menu {\ndisplay: none;\nbackground-color: lightgray;\nwidth: 50%;\npadding: 10px;\n} menu show {\ndisplay: block;\n}\n```\nInside the JavaScript, we are accessing the menu element and the button element using the getElementById() method Then, we are adding an event listener to the button element that will toggle the show class on the menu element when the button is clicked:\n```js\nconst menu = document getElementById(\"menu\");\nconst toggleBtn = document getElementById(\"toggle-btn\");\ntoggleBtn addEventListener(\"click\", () => menu classList toggle(\"show\"));\n```\nWhen a user clicks on the button, the show class will be added to the menu element, and the menu will be displayed If the user clicks on the button again, the show class will be removed from the menu element, and the menu will be hidden By using methods and properties such as style, add(), remove(), and toggle(), you can easily manipulate an element's styles with JavaScript, creating dynamic and interactive web pages --questions--\n--text--\nWhich property would you use to directly change the color of an element's text using JavaScript --answers--\nElement classList\n--feedback--\nThis property allows you to set inline CSS styles directly Element style\nElement innerHTML\n--feedback--\nThis property allows you to set inline CSS styles directly Element getAttribute\n--feedback--\nThis property allows you to set inline CSS styles directly --video-solution--\n2\n--text--\nHow would you add multiple classes to an element using the Element classList property --answers--\nclassList",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733692ffe1da034469f7917.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3e84948bdf365312800184c25e0862ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733692ffe1da034469f7917.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "property would you use to directly change the color of an element's text using JavaScript --answers-- Element classList --feedback-- This property allows you to set inline CSS styles directly Element style Element innerHTML --feedback-- This property allows you to set inline CSS styles directly Element getAttribute --feedback-- This property allows you to set inline CSS styles directly --video-solution-- 2 --text-- How would you add multiple classes to an element using the Element classList property --answers-- classListadd(\"class1 class2 class3\")\n--feedback--\nReview the portion of the lecture that discusses adding multiple classes to an element classList add(\"class1\", \"class2\", \"class3\")\nclassList append(\"class1\", \"class2\", \"class3\")\n--feedback--\nReview the portion of the lecture that discusses adding multiple classes to an element classList insert(\"class1\", \"class2\", \"class3\")\n--feedback--\nReview the portion of the lecture that discusses adding multiple classes to an element --video-solution--\n2\n--text--\nWhat will happen if you click the button in the provided example multiple times --answers--\nThe menu will be permanently visible --feedback--\nThe button's event listener uses a method that alternates the class on the menu The menu will be permanently hidden --feedback--\nThe button's event listener uses a method that alternates the class on the menu The menu will toggle between visible and hidden each time the button is clicked The menu will display an error message --feedback--\nThe button's event listener uses a method that alternates the class on the menu --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5624,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733692ffe1da034469f7917.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "b6c0100fdb26f37561dcefa70327d090",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733697661182d357fc643d2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733697661182d357fc643d2\ntitle: What Is the Canvas API, and How Does It Work challengeType: 19\ndashedName: what-is-the-canvas-api-and-how-does-it-work\n--description--\nThe Canvas API is a powerful tool that lets you manipulate graphics right inside your JavaScript file Everything begins with a canvas element in HTML This element serves as a drawing surface that you can manipulate using the instance methods and properties of the Canvas API The Canvas API provides everything you need to create amazing visuals, including shapes, text, animations, and even complex games It has interfaces like HTMLCanvasElement, CanvasRenderingContext2D, CanvasGradient, CanvasPattern, TextMetrics which provide methods and properties you can use to create graphics in your JavaScript file Let's look at how the Canvas API works so you can start creating graphics with JavaScript First, you need to create a canvas element in your HTML file:\n```html\n```\nThe canvas element is represented by the HTMLCanvasElement interface, which provides methods and properties for manipulating it Additionally, you can use methods and properties from other interfaces in the Canvas API You can give your canvas a width and height inside the HTML:\n```html\n```\nOr you can use the width and height properties of the HTMLCanvasElement interface:\njs\nconst canvas = document getElementById(\"my-canvas\");\ncanvas width = 400;\ncanvas height = 400;\nFor now, you can't see anything on the screen yet After creating your canvas element, the next thing to do is to get access to the drawing context of the canvas with the getContext() method of the HTMLCanvasElement interface The most common context is 2d, which allows you to draw in two dimensions:\njs\nconst canvas = document getElementById(\"my-canvas\");\nconst ctx = canvas getContext('2d');\nIf you log the ctx variable to the console, you'll see the methods and properties of CanvasRenderingContext2D that you can use to create shapes, colors, lines, and more, along with their default values:\njs\nconsole log(ctx);\nOnce you have the 2D context, you can start drawing on the canvas The Canvas API provides several methods and properties for drawing shapes, lines, and text One of those is the fillStyle property, which you can combine with the fillRect() method to draw a rectangle or square:\n```js\nconst canvas = document getElementById(\"my-canvas\");\nconst ctx = canvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733697661182d357fc643d2.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "00e1a5449757a4783238a28ca4fc1854",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733697661182d357fc643d2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "you can use to create shapes, colors, lines, and more, along with their default values: js console log(ctx); Once you have the 2D context, you can start drawing on the canvas The Canvas API provides several methods and properties for drawing shapes, lines, and text One of those is the fillStyle property, which you can combine with the fillRect() method to draw a rectangle or square: ```js const canvas = document getElementById(\"my-canvas\"); const ctx = canvasgetContext(\"2d\");\n// Set the background color\nctx fillStyle = \"crimson\";\n// Draw a rectangle\nctx fillRect(1, 1, 150, 100);\n```\nfillRect takes 4 number values which represent the x axis, y axis, width, and height, respectively There's something on the screen now You can also draw text or even create an animation Here's a canvas to represent text:\n```html\n```\nTo finally draw the text, pass the text into the fillText() method as the first argument, followed by the values for the x and y axis:\n```js\nconst textCanvas = document getElementById(\"my-text-canvas\");\nconst textCanvasCtx = textCanvas getContext(\"2d\");\n// Set font family and size\ntextCanvasCtx font = \"30px Arial\";\n// Set text color\ntextCanvasCtx fillStyle = \"crimson\";\n// Draw the text\ntextCanvasCtx fillText(\"Hello HTML Canvas \", 1, 50);\n```\nThe result in the browser will be the red text Hello HTML Canvas These's much more you can do with the Canvas API For example, you can combine it with requestAnimationFrame to create custom animations, visualizations, games, and more --questions--\n--text--\nWhich method and property let you draw and fill rectangles or squares in the Canvas API --answers--\nstrokeRect() and lineWidth --feedback--\nThink about both the method that draws the shape and the property that fills it with color fillRect() and fillStyle clearRect() and strokeStyle --feedback--\nThink about both the method that draws the shape and the property that fills it with color beginPath() and shadowColor --feedback--\nThink about both the method that draws the shape and the property that fills it with color --video-solution--\n2\n--text--\nWhich of these is not a property or method of the CanvasRenderingContext2D interface in the Canvas API",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733697661182d357fc643d2.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b969fcd38b8412f2e6d7164b17ea5856",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733697661182d357fc643d2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "draws the shape and the property that fills it with color fillRect() and fillStyle clearRect() and strokeStyle --feedback-- Think about both the method that draws the shape and the property that fills it with color beginPath() and shadowColor --feedback-- Think about both the method that draws the shape and the property that fills it with color --video-solution-- 2 --text-- Which of these is not a property or method of the CanvasRenderingContext2D interface in the Canvas API--answers--\nfillStyle\n--feedback--\nThink about the properties and methods commonly used in canvas rendering shadowColor\n--feedback--\nThink about the properties and methods commonly used in canvas rendering drawImage\n--feedback--\nThink about the properties and methods commonly used in canvas rendering backgroundColor\n--video-solution--\n4\n--text--\nHow do you draw text on a canvas using the fillText() method in JavaScript --answers--\nPass the text, followed by the values for the width and height --feedback--\nThink about the coordinates where the text should appear Pass the text, followed by the values for the x and y axis Pass the text and font size --feedback--\nThink about the coordinates where the text should appear Pass the text and color values --feedback--\nThink about the coordinates where the text should appear --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5463,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733697661182d357fc643d2.md",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a24d629d2e34c3165be3ea0275258cd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\67329f9e9eb84e5c6a5e4366.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67329f9e9eb84e5c6a5e4366\ntitle: What Is a String Object, and How Does It Differ from String Primitive challengeType: 19\ndashedName: what-is-a-string-object-and-how-does-it-differ-from-string-primitive\n--description--\nIn previous modules you have been used to working with strings literals like this:\njs\nconst greeting = \"Hello, World \";\nBut JavaScript also has string objects Both string objects and string primitives are used to handle text but they function differently under the hood A string object is created using the string constructor function, which wraps the primitive value in an object Here is how you would create a string object:\n```js\nconst greetingObject = new String(\"Hello, World \");\nconsole log(typeof greetingObject); // \"object\"\n```\nWhen we use the typeof operator we can see that the result is of type object instead of type string One of the things that you might have been wondering about is how you can use properties like the length property on string primitives When you use the length property on a string primitive, JavaScript temporarily wraps the string primitive in a string object, to perform the operation This is why you can use the length property and the different methods like repeat(), concat(), and slice() These types of methods and properties are referred to as instance methods also properties and static methods You will learn about how that works in detail in future modules One key difference between a string object and a string primitive is how it relates to memory and performance String primitives are usually more memory efficient and faster compared to string objects Although you will primarily work with string primitives in your code, it's still useful to understand how string objects work --questions--\n--text--\nWhat is the main difference between a string primitive and a string object in JavaScript --answers--\nString primitives are objects, while string objects are not --feedback--\nThink about how each type is represented and what they offer in terms of functionality String primitives are lighter and more efficient, while string objects provide additional properties and methods String objects cannot access methods like toUpperCase() --feedback--\nThink about how each type is represented and what they offer in terms of functionality String primitives can change their value after they are created --feedback--\nThink about how each type is represented and what they offer in terms of functionality --video-solution--\n2\n--text--\nWhich of the following correctly describes the length property of a string --answers--\nIt changes the value of a string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3797,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\67329f9e9eb84e5c6a5e4366.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2f00886b915b418648f790acc85b1e9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\67329f9e9eb84e5c6a5e4366.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "additional properties and methods String objects cannot access methods like toUpperCase() --feedback-- Think about how each type is represented and what they offer in terms of functionality String primitives can change their value after they are created --feedback-- Think about how each type is represented and what they offer in terms of functionality --video-solution-- 2 --text-- Which of the following correctly describes the length property of a string --answers-- It changes the value of a string--feedback--\nFocus on what the length property provides when used on a string It returns the number of characters in a string It works only on string objects --feedback--\nFocus on what the length property provides when used on a string It adds new characters to the string --feedback--\nFocus on what the length property provides when used on a string --video-solution--\n2\n--text--\nWhat will the following code output js\nlet str = \"JavaScript\";\nlet objStr = new String(\"JavaScript\");\nconsole log(str length === objStr length);\n--answers--\ntrue\nfalse\n--feedback--\nRemember that both string primitives and string objects have access to the length property undefined\n--feedback--\nRemember that both string primitives and string objects have access to the length property It throws an error --feedback--\nRemember that both string primitives and string objects have access to the length property --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3797,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\67329f9e9eb84e5c6a5e4366.md",
      "source_type": "git_repo"
    },
    "token_count": 270,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "be80da2a5f4d7536f3857273cb5821df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733696567d2273540aa6033\ntitle: What Is the Web Animations API, and How Does It Relate to CSS Animation Properties challengeType: 19\ndashedName: what-is-the-web-animations-api-and-how-does-it-relate-to-css-animation-properties\n--description--\nThe Web Animations API (WAAPI) allows you to create and control animations directly within JavaScript With WAAPI, you can work with animations more dynamically, making it easier to manipulate them Let's take a look at WAAPI in more detail, so you can start working with animations directly inside your JavaScript code At the core of WAAPI is the Animation constructor, which provides several instance methods and properties that allow you to dynamically animate elements A significant method in the Animation constructor is animate() It allows you to create an animation by specifying keyframes and options like duration, directions easing, and iterations Here's the basic syntax of the animate() method:\njs\nelement animate(keyframes, options);\nLet's look at an example Here's a div element for the HTML:\n```html\n```\nHere's the CSS that makes the div a square and centers everything on the page:\n```css\nbody {\nbackground: #f1f1f1;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nheight: 100vh;\n} square {\nbackground: #1b1b32;\nwidth: 10rem;\naspect-ratio: 1/1;\n}\n```\nAnd here's the JavaScript that uses the animate() method:\n```js\nconst square = document querySelector(\"#square\");\nconst animation = square animate(\n[{ transform: \"translateX(0px)\" }, { transform: \"translateX(100px)\" }],\n{\nduration: 2000, // makes animation lasts 2 seconds\niterations: Infinity, // loops indefinitely\ndirection: \"alternate\", // moves back and forth\neasing: \"ease-in-out\" // smooth easing\n}\n);\n```\nThe result in the browser will be a blue square moving back and forth horizontally The instance methods of the Animation constructor include:\njs\nplay()\npause()\nreverse()\nfinish()\ncancel()\nAnd the instance properties include:\nmd\nplaybackRate\ncurrentTime\nstartTime\neffect\ntimeline\nplayState\nfinished\nonfinish\noncancel\nLet's modify the example to use the play(), pause() methods and the onfinish property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6757,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "3729a71abd2e0358cf13c6cf15683da2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "// loops indefinitely direction: \"alternate\", // moves back and forth easing: \"ease-in-out\" // smooth easing } ); ``` The result in the browser will be a blue square moving back and forth horizontally The instance methods of the Animation constructor include: js play() pause() reverse() finish() cancel() And the instance properties include: md playbackRate currentTime startTime effect timeline playState finished onfinish oncancel Let's modify the example to use the play(), pause() methods and the onfinish propertyHere's the HTML with play and pause buttons:\n```html\nPlay\nPause\n```\nHere's the new CSS:\ncss\nbody {\nbackground: #f1f1f1;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nheight: 100vh;\n} square {\nbackground: #1b1b32;\nwidth: 10rem;\naspect-ratio: 1/1;\nmargin-bottom: 20px;\n}\nbutton {\nmargin: 10px;\npadding: 10px 20px;\nfont-size: 16px;\n}\nAnd here's the new JavaScript:\n```js\nconst square = document querySelector(\"#square\");\nconst playBtn = document querySelector(\"#playBtn\");\nconst pauseBtn = document querySelector(\"#pauseBtn\");\nconst animation = square animate(\n[{ transform: \"translateX(0px)\" }, { transform: \"translateX(200px)\" }],\n{\nduration: 5000, // Animation lasts 5 seconds\n// iterations: Infinity, // Loops indefinitely\ndirection: \"alternate\", // Moves back and forth\neasing: \"ease-in-out\" // Smooth easing function\n}\n);\n// Set the onfinish property to log a message when the animation ends\nanimation onfinish = () => {\nconsole log(\"Animation finished \");\n};\n// Play the animation when the \"Play\" button is clicked\nplayBtn addEventListener(\"click\", () => {\nanimation play();\nconsole log(\"You start the animation\");\n});\n// Pause the animation when the \"Pause\" button is clicked\npauseBtn addEventListener(\"click\", () => {\nanimation pause();\nconsole log(\"You pause the animation\");\n});\n```\nThe result in the browser will show the blue box moving from left to right when the play button is clicked WAAPI extends the capabilities of CSS animations by providing more dynamic control over animations right inside JavaScript",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6757,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "bcaad7960f85d04174cf3dd5d107fe47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "clicked playBtn addEventListener(\"click\", () => { animation play(); console log(\"You start the animation\"); }); // Pause the animation when the \"Pause\" button is clicked pauseBtn addEventListener(\"click\", () => { animation pause(); console log(\"You pause the animation\"); }); ``` The result in the browser will show the blue box moving from left to right when the play button is clicked WAAPI extends the capabilities of CSS animations by providing more dynamic control over animations right inside JavaScriptWith CSS animations, you define animations declaratively using properties like animation-name, animation-duration, and animation-timing-function You also have the opportunity to do the same thing using the animate() method of WAAPI The difference is that you can control the animations you create with the animate() method more directly and dynamically, but with CSS animations, you need to do way more by defining custom styles and triggering them inside your JavaScript file CSS animation is ideal for simple and declarative animations that run automatically Those include hover effects, transitions or animations that don't need much interaction once triggered If your animation needs to respond to user interactions like clicks, and scrolls, or you want the user to be able to pause, reverse, or change speed dynamically, WAAPI is the better choice You can consider combining both WAAPI and CSS animations when you want the simplicity of CSS for basic setup but need to control animations at runtime --questions--\n--text--\nWhat is the primary method in the Web Animations API (WAAPI) for creating animations --answers--\nsetInterval()\n--feedback--\nThink about the method that allows you to define keyframes and options like duration setTimeout()\n--feedback--\nThink about the method that allows you to define keyframes and options like duration animate()\nrequestAnimationFrame()\n--feedback--\nThink about the method that allows you to define keyframes and options like duration --video-solution--\n3\n--text--\nWhich of these is not an instance method of the Animation constructor in the Web Animations API (WAAPI) --answers--\nplay()\n--feedback--\nThink about the methods used to control animations pause()\n--feedback--\nThink about the methods used to control animations reverse()\n--feedback--\nThink about the methods used to control animations stop()\n--video-solution--\n4\n--text--\nWhen should you use WAAPI over CSS animations --answers--\nFor simple, automatic hover effects --feedback--\nThink about situations where you need more control over the animation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6757,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "402c0754412a637e5b7945ec76e9b2a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is not an instance method of the Animation constructor in the Web Animations API (WAAPI) --answers-- play() --feedback-- Think about the methods used to control animations pause() --feedback-- Think about the methods used to control animations reverse() --feedback-- Think about the methods used to control animations stop() --video-solution-- 4 --text-- When should you use WAAPI over CSS animations --answers-- For simple, automatic hover effects --feedback-- Think about situations where you need more control over the animationWhen you need animations to respond to user interactions like clicks, scrolls, or allow dynamic control such as pausing or reversing When you only need transitions with no interaction --feedback--\nThink about situations where you need more control over the animation For animations that don't require much interaction after being triggered --feedback--\nThink about situations where you need more control over the animation --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6757,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\6733696567d2273540aa6033.md",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "fdc5bc4a4ffd89999d30d6942ad7c62d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369829e232835c2732656.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673369829e232835c2732656\ntitle: How Do You Open and Close Dialog Elements Using JavaScript challengeType: 19\ndashedName: how-do-you-open-and-close-dialog-elements-using-javascript\n--description--\nDialogs let you display important information or actions to users With HTML's built-in dialog element, you can easily create these dialogs (both modal and non-modal dialogs) in your web apps A modal dialog is a type of dialog that forces the user to interact with it before they can access the rest of the application or webpage It effectively blocks interaction with other content until the user completes an action, such as closing the dialog or submitting a form In contrast, a non-modal dialog allows the user to continue interacting with other parts of the page or application even when the dialog is open It doesn't prevent access to the rest of the content In this lecture, you will learn how to open and close modals using the showModal() and close() methods When you want to make sure the user focuses on a specific action or message of a modal, you can open the modal dialog using the showModal() method This will add a backdrop to the other items on the page and disable them This is ideal for modals that display forms, confirmations, and critical information that requires user action Here's the HTML for the modal dialog:\n```html\nThis is a modal dialog ```\nFor now, you can't see anything on the page because the modal is closed on the initial render You can automatically open the modal by using the showModal() method:\njs\nconst dialog = document getElementById(\"my-modal\");\ndialog showModal();\nThe result in the browser will show a modal with the text This is a modal dialog It's best to give control to the user To achieve this, you can add a click event listener to a button and use the showModal() method:\n```html\nThis is a modal dialog Open Modal Dialog\n```\nHere's the JavaScript:\n```js\nconst dialog = document getElementById(\"my-modal\");\nconst openButton = document getElementById(\"open-modal\");\nopenButton addEventListener(\"click\", () => {\ndialog showModal();\n});\n```\nIf you needed to show a dialog while still allowing interaction with content outside of the dialog, then you can use the show() method:\n```js\nconst dialog = document getElementById(\"my-modal\");\nconst openButton = document getElementById(\"open-modal\");\nopenButton addEventListener(\"click\", () => {\ndialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5052,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369829e232835c2732656.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4b0e4df9ae5603cf124f546a1291849c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369829e232835c2732656.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "showModal() method: ```html This is a modal dialog Open Modal Dialog ``` Here's the JavaScript: ```js const dialog = document getElementById(\"my-modal\"); const openButton = document getElementById(\"open-modal\"); openButton addEventListener(\"click\", () => { dialog showModal(); }); ``` If you needed to show a dialog while still allowing interaction with content outside of the dialog, then you can use the show() method: ```js const dialog = document getElementById(\"my-modal\"); const openButton = document getElementById(\"open-modal\"); openButton addEventListener(\"click\", () => { dialogshow();\n});\n```\nTo close a modal, you can add a button to the modal inside the dialog element:\n```html\nThis is a modal dialog Close Modal\nOpen Modal Dialog\n```\nThen use the close() method on the button:\n```js\nconst dialog = document getElementById(\"my-modal\");\nconst openButton = document getElementById(\"open-modal\");\nconst closeButton = document getElementById(\"close-modal\");\nopenButton addEventListener(\"click\", () => {\ndialog show();\n});\ncloseButton addEventListener(\"click\", () => {\ndialog close();\n});\n```\n--questions--\n--text--\nWhat is the difference between a modal dialog and a non-modal dialog --answers--\nA modal dialog allows interaction with the rest of the page, while a non-modal dialog doesn't --feedback--\nThink about which type of dialog restricts the user's focus A modal dialog disables interaction with the rest of the page, while a non-modal dialog allows it A non-modal dialog forces the user to interact with it --feedback--\nThink about which type of dialog restricts the user's focus A modal dialog closes automatically, while a non-modal dialog requires user action to close --feedback--\nThink about which type of dialog restricts the user's focus --video-solution--\n2\n--text--\nWhich methods are used to open a modal in JavaScript --answers--\nopen() and display() --feedback--\nThink about the methods specifically designed for modals displayModal() and activate() --feedback--\nThink about the methods specifically designed for modals launch() and trigger() --feedback--\nThink about the methods specifically designed for modals showModal() and show() --video-solution--\n4\n--text--\nHow do you execute the show(), close(), and showModal() methods to open and close a modal --answers--\nBy calling the methods directly without any event --feedback--\nThink about how user interaction triggers these methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5052,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369829e232835c2732656.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5ffadb238692c9ec96588aa8bae66da3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369829e232835c2732656.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "open() and display() --feedback-- Think about the methods specifically designed for modals displayModal() and activate() --feedback-- Think about the methods specifically designed for modals launch() and trigger() --feedback-- Think about the methods specifically designed for modals showModal() and show() --video-solution-- 4 --text-- How do you execute the show(), close(), and showModal() methods to open and close a modal --answers-- By calling the methods directly without any event --feedback-- Think about how user interaction triggers these methodsBy linking them to form submission events --feedback--\nThink about how user interaction triggers these methods By adding a click event listener to a button and using the appropriate method By using a timeout function --feedback--\nThink about how user interaction triggers these methods --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5052,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-the-dom-click-events-and-web-apis\\673369829e232835c2732656.md",
      "source_type": "git_repo"
    },
    "token_count": 162,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9d4655166bfb78976df4740b90d0e785",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c68f4520d160584a6fd2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6732c68f4520d160584a6fd2\ntitle: What Is the toString() Method, and How Does It Work challengeType: 19\ndashedName: what-is-the-tostring-method-and-how-does-it-work\n--description--\nThe toString() method is a fundamental feature in JavaScript that converts a value to its string representation It's a method you can use for numbers, booleans, arrays, and objects One of the most common uses of toString() is to convert a number to its string representation Here's an example:\njs\nconst num = 10;\nconsole log(num toString()); // \"10\"\nThis method accepts an optional radix which is a number from 2 to 36 This radix represents the base, such as base 2 for binary or base 8 for octal If the radix is not specified it defaults to base 10, which is decimal Here's an example of passing 2 as an argument to the toString() method:\njs\nconst num = 10;\nconsole log(num toString(2)); // \"1010\"\nThe result will be 1010 which is the binary representation for the decimal number 10 You can also use the toString() method to convert arrays and objects to strings Arrays have a custom implementation of toString() that converts each element to a string and joins them with commas Here's an example:\njs\nconst arr = [1, 2, 3];\nconsole log(arr toString()); // \"1,2,3\"\nIn this example all the elements of the array are joined together to form the string 1,2,3 When toString() method is used with objects, the result will not be a stringified version of the object properties ```js\nconst person = {\nname: \"John\",\nage: 30,\nisStudent: true\n},\nconsole log(person toString()); // \"[object Object]\"\n```\nIn this example, the result will be the default string representation for the object which is [object Object] To get a stringified version of the person object properties you'll need to use JSON stringify() which you will learn about more in the future lectures In conclusion, the toString() method is used for converting values to strings Understanding how it works with different data types and how to customize it for your own objects can greatly advance your ability to manipulate and display data in your JavaScript applications --questions--\n--text--\nWhat will be the output of the following code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3916,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c68f4520d160584a6fd2.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9112bdfa45252089fccd638beae498e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c68f4520d160584a6fd2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "version of the person object properties you'll need to use JSON stringify() which you will learn about more in the future lectures In conclusion, the toString() method is used for converting values to strings Understanding how it works with different data types and how to customize it for your own objects can greatly advance your ability to manipulate and display data in your JavaScript applications --questions-- --text-- What will be the output of the following codejs\nlet num = 5 7;\nconsole log(num toString());\n--answers--\n\"5\"\n--feedback--\nThe toString() method is used to convert a value to its string representation \"5 7\"\n5 7\n--feedback--\nThe toString() method is used to convert a value to its string representation Error\n--feedback--\nThe toString() method is used to convert a value to its string representation --video-solution--\n2\n--text--\nWhat will be the output of the following code js\nlet arr = [1, 2, 3, 4, 5];\nconsole log(arr toString());\n--answers--\n\"[object Array]\"\n--feedback--\nArrays in JavaScript have a custom implementation of the toString() method \"1,2,3,4,5\"\n\"12345\"\n--feedback--\nArrays in JavaScript have a custom implementation of the toString() method Error\n--feedback--\nArrays in JavaScript have a custom implementation of the toString() method --video-solution--\n2\n--text--\nWhat will be the output of the following code js\nlet obj = { name: \"John\", age: 30 };\nconsole log(obj toString());\n--answers--\n\"{ name: 'John', age: 30 }\"\n--feedback--\nBy default, the toString() method for objects in JavaScript returns a less readable string representation \"[object Object]\"\n\"John30\"\n--feedback--\nBy default, the toString() method for objects in JavaScript returns a less readable string representation Error\n--feedback--\nBy default, the toString() method for objects in JavaScript returns a less readable string representation --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3916,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c68f4520d160584a6fd2.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b6fe045d4a20f7c22d7f073632d499dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271e8e3d43bda89f723b3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673271e8e3d43bda89f723b3\ntitle: What Are Unary Operators, and How Do They Work challengeType: 19\ndashedName: what-are-unary-operators-and-how-do-they-work\n--description--\nUnary operators act on a single operand to perform operations like type conversion, value manipulation, or checking certain conditions Let's look at some common unary operators and how they work The unary plus operator converts its operand into a number If the operand is already a number, it remains unchanged ```js\nconst str = '42';\nconst strToNum = +str;\nconsole log(strToNum); // 42\nconsole log(typeof str); // string\nconsole log(typeof strToNum); // number\n```\nUnary plus is handy when you want to make sure you're working with a numeric value As you might guess, there's a unary negation operator It negates the value of the operand It works similarly to the unary plus, except it flips the sign ```js\nconst str = '42';\nconst strToNegativeNum = -str;\nconsole log(strToNegativeNum); // -42\nconsole log(typeof str); // string\nconsole log(typeof strToNegativeNum); // number\n```\nThe logical NOT operator, represented by an exclamation mark ( ), is another unary operator It flips the boolean value of its operand So, if the operand is true, it becomes false, and if it's false, it becomes true ```js\nlet isOnline = true;\nconsole log( isOnline); // false\nlet isOffline = false;\nconsole log( isOffline); // true\n```\nThe bitwise NOT operator is a less commonly used unary operator Represented by a tilde, ~, it inverts the binary representation of a number Computers store numbers in binary format (1s and 0s) The ~ operator flips every bit, meaning it changes all 1s to 0s and all 0s to 1s You will learn more about binary and bits in a future lecture ```js\nconst num = 5; // The binary for 5 is 00000101\nconsole log(~num); // -6\n```\nIn this example, 5 became -6 because by applying the ~ operator to 5, you get - (5 + 1), which equals -6 due to two's complement representation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4374,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271e8e3d43bda89f723b3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f3aeacb38faede62a2928ae2446f1c04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271e8e3d43bda89f723b3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0s) The ~ operator flips every bit, meaning it changes all 1s to 0s and all 0s to 1s You will learn more about binary and bits in a future lecture ```js const num = 5; // The binary for 5 is 00000101 console log(~num); // -6 ``` In this example, 5 became -6 because by applying the ~ operator to 5, you get - (5 + 1), which equals -6 due to two's complement representationTwo's complement is a way computers represent negative numbers in binary You probably won't use the bitwise NOT often unless you're working with low-level programming tasks like manipulating bits directly The void keyword is a unary operator that evaluates an expression and returns undefined ```js\nconst result = void (2 + 2);\nconsole log(result); // undefined\n```\nvoid is also commonly used in hyperlinks to prevent navigation:\njs\n<a href=\"javascript:void(0);\">Click Me</a>\nFinally, there is the typeof operator which you learned about in previous lectures This returns the type of its operand as a string ```js\nconst value = 'Hello world';\nconsole log(typeof value); // string\n```\n--questions--\n--text--\nWhat do unary operators do --answers--\nThey act on two operands to perform arithmetic operations --feedback--\nThink about operators that require only one value They act on a single operand to perform tasks like type conversion, value manipulation, or condition checking They compare two values for equality --feedback--\nThink about operators that require only one value They only perform arithmetic operations --feedback--\nThink about operators that require only one value --video-solution--\n2\n--text--\nWhat does the typeof operator do --answers--\nIt converts a value to a string --feedback--\nThink about how to check the type of a variable It returns the type of its operand as a string It checks if two values are equal --feedback--\nThink about how to check the type of a variable It compares two variables for type coercion --feedback--\nThink about how to check the type of a variable --video-solution--\n2\n--text--\nHow does the bitwise NOT operator work in JavaScript --answers--\nIt multiplies the value by 2 --feedback--\nConsider how the operator alters the binary representation of a value It adds 1 to the value --feedback--\nConsider how the operator alters the binary representation of a value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4374,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271e8e3d43bda89f723b3.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ea7eaf4cced7a959f7686d9ea4aa4e88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271e8e3d43bda89f723b3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "about how to check the type of a variable It compares two variables for type coercion --feedback-- Think about how to check the type of a variable --video-solution-- 2 --text-- How does the bitwise NOT operator work in JavaScript --answers-- It multiplies the value by 2 --feedback-- Consider how the operator alters the binary representation of a value It adds 1 to the value --feedback-- Consider how the operator alters the binary representation of a valueIt flips every bit, turning all 1's to 0's and all 0's to 1's It checks if the value is positive or negative --feedback--\nConsider how the operator alters the binary representation of a value --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4374,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271e8e3d43bda89f723b3.md",
      "source_type": "git_repo"
    },
    "token_count": 146,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e266884a5ee1435132690fd6862ad12c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c69d82814160951b1aa7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6732c69d82814160951b1aa7\ntitle: What Is the Number Constructor, and How Does It Work for Type Coercion challengeType: 19\ndashedName: what-is-the-number-constructor-and-how-does-it-work-for-type-coercion\n--description--\nThe Number() constructor is used to create a number object The number object contains a few helpful properties and methods like the isNaN and the toFixed method Here's an example using the Number() constructor with the new keyword:\njs\nconst myNum = new Number(\"34\");\nconsole log(typeof myNum); // \"object\"\nIn this example we pass in a string literal to the Number() constructor and the return type is of type object instead of a string When the Number() constructor is called as a function without the new keyword, then the return value will be the primitive number type Most of the time you will be using the Number() constructor to convert other data types to the number data type Here's an example of converting a string to a number:\n```js\nconst myNum = Number(\"100\");\nconsole log(myNum); // 100\nconsole log(typeof myNum); // number\n```\nThis is helpful when you are getting input from the user and you need to convert that string input to a number so you can perform mathematical calculations If you try to call the Number() constructor through an empty string then the result will be the number 0:\njs\nconst num = Number(\"\");\nconsole log(num); // 0\nThis is because JavaScript will try to parse the string and since it doesn't contain any digits, the result will be zero If you try to pass in a string with random characters then the result will be NaN or \"Not a Number\" js\nconst num = Number(\"random\");\nconsole log(num); // NaN\nWhen working with booleans, true returns 1 because true gets converted to one and false returns 0 because false is converted to zero ```js\nconst boolTrue = Number(true);\nconst boolFalse = Number(false);\nconsole log(boolTrue); // 1\nconsole log(boolFalse); // 0\n```\nIf you pass in null, the result will be 0 and if you pass undefined, the result will be NaN ```js\nconst undefinedNum = Number(undefined);\nconst nullNum = Number(null);\nconsole log(undefinedNum); // NaN\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5287,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c69d82814160951b1aa7.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6edcc8b59ba1d8edb0167602ec912b96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c69d82814160951b1aa7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "NaN When working with booleans, true returns 1 because true gets converted to one and false returns 0 because false is converted to zero ```js const boolTrue = Number(true); const boolFalse = Number(false); console log(boolTrue); // 1 console log(boolFalse); // 0 ``` If you pass in null, the result will be 0 and if you pass undefined, the result will be NaN ```js const undefinedNum = Number(undefined); const nullNum = Number(null); console log(undefinedNum); // NaN consolelog(nullNum); // 0\n```\nWhen working with arrays there are a few things to consider An empty array will return 0 An array with a single number will return that number An array with multiple numbers returns NaN And an array with string(s) will also return NaN ```js\nconst emptyArr = Number([]);\nconst arrOneNum = Number([7]);\nconst arrMultiNum = Number([7, 36, 12]);\nconst arrStr = Number([\"str1\"]);\nconst arrMultiStr = Number([\"str1\", \"str2\"]);\nconsole log(emptyArr); // 0\nconsole log(arrOneNum); // 7\nconsole log(arrMultiNum); // NaN\nconsole log(arrStr); // NaN\nconsole log(arrMultiStr); // NaN\n```\nWhen working with objects, the result is always NaN ```js\nconst obj1 = Number({});\nconst obj2 = Number({2: 2});\nconst obj3 = Number({key: \"val\"});\nconst obj4 = Number({key: true});\nconsole log(obj1); // NaN\nconsole log(obj2); // NaN\nconsole log(obj3); // NaN\nconsole log(obj4); // NaN\n```\nIn conclusion, you'll mostly use the Number() constructor for type conversion more than creating a number or a number object --questions--\n--text--\nWhat is the purpose of the Number constructor in JavaScript --answers--\nIt only creates strings --feedback--\nThink about how you might turn a string into a number or create a new number in JavaScript It converts other data types to numbers and creates new number values It is used to manipulate arrays --feedback--\nThink about how you might turn a string into a number or create a new number in JavaScript It performs string concatenation --feedback--\nThink about how you might turn a string into a number or create a new number in JavaScript",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5287,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c69d82814160951b1aa7.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "cb4f8b76747065fce6752e7853500af8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c69d82814160951b1aa7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "how you might turn a string into a number or create a new number in JavaScript It converts other data types to numbers and creates new number values It is used to manipulate arrays --feedback-- Think about how you might turn a string into a number or create a new number in JavaScript It performs string concatenation --feedback-- Think about how you might turn a string into a number or create a new number in JavaScript--video-solution--\n2\n--text--\nHow do you create a number object using the Number constructor in JavaScript --answers--\nBy using the Number toString() method --feedback--\nThink about how you might create an instance of an object in JavaScript By initializing it with the new keyword and passing a number as an argument By declaring a variable with the var keyword --feedback--\nThink about how you might create an instance of an object in JavaScript By calling Number parseInt() with a string value --feedback--\nThink about how you might create an instance of an object in JavaScript --video-solution--\n2\n--text--\nWhich of these is one of the correct ways JavaScript handles arrays when converting them to numbers using the Number constructor --answers--\nAn empty array returns NaN --feedback--\nThink about how different array structures might behave during conversion An array with multiple numbers converts to their sum --feedback--\nThink about how different array structures might behave during conversion An array with a single number converts to that number, while an empty array returns 0 An array with string(s) converts to NaN --feedback--\nThink about how different array structures might behave during conversion --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5287,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-types-and-objects\\6732c69d82814160951b1aa7.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "de302d87ae1a2aa05cc262ae5022648a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673271f39f124ddac28866d5\ntitle: What Are Bitwise Operators, and How Do They Work challengeType: 19\ndashedName: what-are-bitwise-operators-and-how-do-they-work\n--description--\nBitwise operators in JavaScript are special operators that work on the binary representations of numbers To understand bitwise operators, we first need to grasp the concept of bits and binary numbers In computing, a bit is the most basic unit of information It can have only two values: 0 or 1 Binary is a number system that uses only these two digits to represent all numbers For example, the binary representation of the decimal number 10 is 1010 In this system, each digit represents a power of 2, starting from the rightmost digit and increasing as we move left 1\n0\n1\n0\n1 · 23\n0 · 22\n1 · 21\n0 · 20\n8\n0\n2\n0\nIn the table above, the first row shows the binary number `1010`, the second row shows the power of `2` represented by each binary position, and the third row shows the result of each multiplication If you add all the values in the third row, they total `10` Now, let's dive into bitwise operators These operators perform operations on the binary representations of numbers JavaScript provides several bitwise operators, including AND (`&`), OR (`|`), XOR (`^`), NOT (`~`), left shift (`<<`), and right shift (`>>`) The bitwise AND (`&`) operator returns a `1` in each bit position for which the corresponding bits of both operands are `1` Here's an example:\n```js\nlet a = 5;  // Binary: 101\nlet b = 3;  // Binary: 011\nconsole log(a & b);  // Output: 1 (Binary: 001)\n```\nIn this example, we perform a bitwise AND operation on `5` (`101` in binary) and `3` (`011` in binary) The result is `1` (`001` in binary) because only the rightmost bit is `1` in both numbers The bitwise OR (`|`) operator returns a `1` in each bit position for which the corresponding bits of either or both operands are `1`",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "0597230c529c286eb10e0a51bd9fbc1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "b = 3; // Binary: 011 console log(a & b); // Output: 1 (Binary: 001) ``` In this example, we perform a bitwise AND operation on `5` (`101` in binary) and `3` (`011` in binary) The result is `1` (`001` in binary) because only the rightmost bit is `1` in both numbers The bitwise OR (`|`) operator returns a `1` in each bit position for which the corresponding bits of either or both operands are `1`For example:\n```js\nlet a = 5;  // Binary: 101\nlet b = 3;  // Binary: 011\nconsole log(a | b);  // Output: 7 (Binary: 111)\n```\nHere, the result is `7` (`111` in binary) because at least one of the bits is `1` in each position The bitwise XOR (`^`) operator returns a `1` in each bit position for which the corresponding bits of either, but not both, operands are `1` For instance:\n```js\nlet a = 5;  // Binary: 101\nlet b = 3;  // Binary: 011\nconsole log(a ^ b);  // Output: 6 (Binary: 110)\n```\nThe result is `6` (`110` in binary) because the first and second bits from the right are different in the two numbers The bitwise NOT (`~`) operator inverts all the bits of its operand For example:\n```js\nlet a = 5;  // Binary: 101\nconsole log(~a);  // Output: -6\n```\nThis might seem surprising, but it's because of how negative numbers are represented in binary using two's complement The left shift (`<<`) operator shifts all bits to the left by a specified number of positions For example:\n```js\nlet a = 5;  // Binary: 101\nconsole log(a << 1);  // Output: 10 (Binary: 1010)\n```\nHere, all bits are shifted one position to the left, effectively multiplying the number by `2` The right shift (`>>`) operator shifts all bits to the right For example:\n```js\nlet a = 5;  // Binary: 101\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f34339c4311f817b6fcd1ac7bbbe4f2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "complement The left shift (`<<`) operator shifts all bits to the left by a specified number of positions For example: ```js let a = 5; // Binary: 101 console log(a << 1); // Output: 10 (Binary: 1010) ``` Here, all bits are shifted one position to the left, effectively multiplying the number by `2` The right shift (`>>`) operator shifts all bits to the right For example: ```js let a = 5; // Binary: 101 consolelog(a >> 1);  // Output: 2 (Binary: 10)\n```\nHere, all bits are shifted one position to the right, effectively dividing the number by `2` and rounding down Bitwise operators are often used in low-level programming and cryptography While they may not be as commonly used in everyday JavaScript programming, understanding them can be beneficial for certain specialized tasks and can deepen your understanding of how computers work at a fundamental level # --questions--\n## --text--\nWhat will be the output of the following code ```js\nlet a = 5;  // Binary: 101\nlet b = 3;  // Binary: 011\nconsole log(a & b);\n```\n## --answers--\n`8`\n### --feedback--\nThe bitwise `AND` operator returns `1` only where both operands have `1` in their binary representation ---\n`1`\n---\n`7`\n### --feedback--\nThe bitwise `AND` operator returns `1` only where both operands have `1` in their binary representation ---\n`15`\n### --feedback--\nThe bitwise `AND` operator returns `1` only where both operands have `1` in their binary representation ## --video-solution--\n2\n## --text--\nWhat will be the result of the following operation ```js\nlet x = 8;  // Binary: 1000\nconsole log(x << 2);\n```\n## --answers--\n`4`\n### --feedback--\nThe left shift operator moves all bits to the left by the specified number of positions ---\n`16`\n### --feedback--\nThe left shift operator moves all bits to the left by the specified number of positions ---\n`32`\n---\n`2`\n### --feedback--\nThe left shift operator moves all bits to the left by the specified number of positions ## --video-solution--\n3\n## --text--\nWhat is the binary representation of the number `6`",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "878c03792d4a1c8fdd21ee419f54d2f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--answers-- `4` ### --feedback-- The left shift operator moves all bits to the left by the specified number of positions --- `16` ### --feedback-- The left shift operator moves all bits to the left by the specified number of positions --- `32` --- `2` ### --feedback-- The left shift operator moves all bits to the left by the specified number of positions ## --video-solution-- 3 ## --text-- What is the binary representation of the number `6`## --answers--\n`101`\n### --feedback--\nRemember that in binary, each digit represents a power of 2, starting from the rightmost digit ---\n`110`\n---\n`111`\n### --feedback--\nRemember that in binary, each digit represents a power of 2, starting from the rightmost digit ---\n`100`\n### --feedback--\nRemember that in binary, each digit represents a power of 2, starting from the rightmost digit ## --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5603,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-working-with-unary-and-bitwise-operators\\673271f39f124ddac28866d5.md",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "f572f2b173a0ce7f53c3b92dd35e73ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-asynchronous-javascript\\66edd630f7666cfa54b404d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd630f7666cfa54b404d0\ntitle: Asynchronous JavaScript Quiz\nchallengeType: 8\ndashedName: quiz-asynchronous-javascript\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is asynchronous programming --distractors--\nA method for executing code sequentially A technique to handle errors in your code A way to make network requests, typically to retrieve or send data to the server --answer--\nA method to execute code concurrently without blocking the main thread --question--\n--text--\nWhat is a thread --distractors--\nA function used to retrieve data from the server A program that executes JavaScript code in a web browser A special type of function that is passed as an argument to another function --answer--\nA sequence of instructions that can be executed independently of the main program flow --question--\n--text--\nWhat is the purpose of the Fetch API in JavaScript --distractors--\nTo manage asynchronous callbacks To create and manage cookies To render dynamic HTML content --answer--\nTo make network requests to servers --question--\n--text--\nWhich HTTP method is used to send data to a server for processing --distractors--\nGET\nDELETE\nHEAD\n--answer--\nPOST\n--question--\n--text--\nWhich of the following is the correct way to fetch data from an API --distractors--\njs\nfetch('https://api example com/data') accept(response => response json()) accept(data => console log(data))\njs\nfetch('https://api example com/data') allow(response => response json()) allow(data => console log(data))\njs\nfetch('https://api example com/data') send(response => response json()) send(data => console log(data))\n--answer--\njs\nfetch('https://api example com/data') then(response => response json()) then(data => console log(data))\n--question--\n--text--\nWhat is a promise in JavaScript --distractors--\nA way to synchronize multiple operations when working with the Fetch API A special type of callback function that you must use in all higher order functions A technique used to handle errors when you work with the Fetch API --answer--\nAn object that represents the eventual completion (or failure) of an asynchronous operation --question--\n--text--\nWhat does promise chaining allow you to do --distractors--\nAllows you to execute multiple synchronous operations in parallel",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6623,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-asynchronous-javascript\\66edd630f7666cfa54b404d0.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6703f0a9b6fe271d839ecb91338ef2c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-asynchronous-javascript\\66edd630f7666cfa54b404d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "JavaScript --distractors-- A way to synchronize multiple operations when working with the Fetch API A special type of callback function that you must use in all higher order functions A technique used to handle errors when you work with the Fetch API --answer-- An object that represents the eventual completion (or failure) of an asynchronous operation --question-- --text-- What does promise chaining allow you to do --distractors-- Allows you to execute multiple synchronous operations in parallelAllows you to handle synchronous operations more efficiently Allows you to retry failed operations automatically --answer--\nAllows you to perform a sequence of asynchronous operations one after the other --question--\n--text--\nWhich method is used to handle a successful completion of a promise --distractors-- finally() catch() error()\n--answer-- then()\n--question--\n--text--\nWhich method is used to handle errors in a promise chain --distractors-- finally() then() error()\n--answer-- catch()\n--question--\n--text--\nWhich of the following is NOT a valid HTTP method --distractors--\nPUT\nGET\nPOST\n--answer--\nSEND\n--question--\n--text--\nWhich of the following is the correct syntax for creating an async function --distractors--\nfunction myFunction() {}\nfunction async myFunction() {}\nasync {} => ()\n--answer--\nasync function myFunction() {}\n--question--\n--text--\nWhat does the await keyword do in an async function --distractors--\nIt creates a new promise It executes code immediately without waiting and returns an object It logs the result of the promise and returns null --answer--\nIt pauses the execution of the function until the promise is resolved --question--\n--text--\nWhich of the following APIs is used to provide a way for websites to request the user's location --distractors--\nLocator API\nGeo API\nLocate API\n--answer--\nGeolocation API\n--question--\n--text--\nWhich of the following attributes downloads the script asynchronously but waits for the HTML document to be fully parsed before running the script --distractors--\nasyncDefer\ndeferred\ndeferring\n--answer--\ndefer\n--question--\n--text--\nWhat will the following code return js\nfetch('https://api example com/data')\n--distractors--\nAn error saying that the data is corrupted An error saying that the data cannot be fetched Nothing will be returned and JavaScript will move to the next function in the script --answer--\nA Promise that resolves to a Response object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6623,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-asynchronous-javascript\\66edd630f7666cfa54b404d0.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "8ed8c6fa9910251ffad7924f3e15207b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-asynchronous-javascript\\66edd630f7666cfa54b404d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "script asynchronously but waits for the HTML document to be fully parsed before running the script --distractors-- asyncDefer deferred deferring --answer-- defer --question-- --text-- What will the following code return js fetch('https://api example com/data') --distractors-- An error saying that the data is corrupted An error saying that the data cannot be fetched Nothing will be returned and JavaScript will move to the next function in the script --answer-- A Promise that resolves to a Response object--question--\n--text--\nWhat is the default HTTP method for the Fetch API --distractors--\nPOST\nPUT\nDELETE\n--answer--\nGET\n--question--\n--text--\nWhich of the following methods is used to delete resources on the server --distractors--\nREMOVING\nREMOVE\nDELETING\n--answer--\nDELETE\n--question--\n--text--\nWhich of the following is the correct way to create a promise --distractors--\njs\nconst promise = get Promise((resolve, reject) => {\nsetTimeout(() => {\nresolve('Data received successfully');\n}, 2000);\n});\njs\nconst promise = set Promise((resolve, reject) => {\nsetTimeout(() => {\nresolve('Data received successfully');\n}, 2000);\n});\njs\nconst promise = put Promise((resolve, reject) => {\nsetTimeout(() => {\nresolve('Data received successfully');\n}, 2000);\n});\n--answer--\njs\nconst promise = new Promise((resolve, reject) => {\nsetTimeout(() => {\nresolve('Data received successfully');\n}, 2000);\n});\n--question--\n--text--\nWhich of the following attributes tells the browser to download the script file asynchronously while continuing to parse the HTML document --distractors--\nresolve\ncatch\nput\n--answer--\nasync\n--question--\n--text--\nWhich method of the Geolocation API is used to get the current position of a device --distractors--\ngetLocation()\ngetPosition()\ngetLatLong()\n--answer--\ngetCurrentPosition()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6623,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-asynchronous-javascript\\66edd630f7666cfa54b404d0.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fb89c514eac91eba9ebea8580888f7cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-commands\\66f1af4fedf643c78d024c5e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1af4fedf643c78d024c5e\ntitle: Bash Commands Quiz\nchallengeType: 8\ndashedName: quiz-bash-commands\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat command is used to see the path of the working directory --distractors--\nmv\ncd\nls\n--answer--\npwd\n--question--\n--text--\nWhich command is used to see what is present in a file --distractors--\ntouch\nmv\nls\n--answer--\ncat\n--question--\n--text--\nWhich command is used to create a new file --distractors--\nmkdir\ncd\nls\n--answer--\ntouch\n--question--\n--text--\nWhich command is used to remove a file --distractors--\ncp\ncd\nmv\n--answer--\nrm\n--question--\n--text--\nWhich command is used to copy a particular file to a folder --distractors--\nrm <file> <destination>\nmv <file> <destination>\ncd <file> <destination>\n--answer--\ncp <file> <destination>\n--question--\n--text--\nWhich command is used to see the list of files an folder present in a directory --distractors--\ntouch\nls -l\nmv\n--answer--\nls\n--question--\n--text--\nWhich command will rename the 'menlo font' file to 'menlo otf' --distractors--\nrm menlo font menlo otf\ncp menlo font menlo otf\nls menlo font menlo otf\n--answer--\nmv menlo font menlo otf\n--question--\n--text--\nWhich command can be used to find files or view a file tree --distractors--\nls\nmv\nrm\n--answer--\nfind\n--question--\n--text--\nWhich command is used to make a directory --distractors--\ndir\nmv\ntouch\n--answer--\nmkdir\n--question--\n--text--\nWhich command would print the text I finished the example quiz",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-commands\\66f1af4fedf643c78d024c5e.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9032499489e1f441a12975ff11971411",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-commands\\66f1af4fedf643c78d024c5e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "file to 'menlo otf' --distractors-- rm menlo font menlo otf cp menlo font menlo otf ls menlo font menlo otf --answer-- mv menlo font menlo otf --question-- --text-- Which command can be used to find files or view a file tree --distractors-- ls mv rm --answer-- find --question-- --text-- Which command is used to make a directory --distractors-- dir mv touch --answer-- mkdir --question-- --text-- Which command would print the text I finished the example quiz--distractors--\ncd I finished the example quiz\ncp I finished the example quiz\nls I finished the example quiz\n--answer--\necho I finished the example quiz\n--question--\n--text--\nWhich command would you use if you want to add text a to file directly from the terminal --distractors--\nls <text> >> <filename>\ncp <text> >> <filename>\nmv <text> >> <filename>\n--answer--\necho <text> >> <filename>\n--question--\n--text--\nWhich command is used to remove directories and their content recursively --distractors--\ncd -r\ncp -r\ndir -r\n--answer--\nrm -r\n--question--\n--text--\nWhich command is used to remove a protected file --distractors--\nrm -r\nrm\nrm --help\n--answer--\nrm -f\n--question--\n--text--\nWhich command is used to go back to the previous directory --distractors--\nmv dir cp --answer--\ncd --question--\n--text--\nWhich flag can be used for any command to get a help menu --distractors--\n--info\n--r\n-l\n--answer--\n--help\n--question--\n--text--\nWhich keybind is used to stop a running process --distractors--\nCtrl + L\nAlt + C\nShift + C\n--answer--\nCtrl + C\n--question--\n--text--\nWhich keybind is used to clear the terminal --distractors--\nCtrl + C\nShift + L\nAlt + L\n--answer--\nCtrl + L\n--question--\n--text--\nWhich command is used to copy the whole folder",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-commands\\66f1af4fedf643c78d024c5e.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "368bb3bfa4768f56abdca33c7eeabf90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-commands\\66f1af4fedf643c78d024c5e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be used for any command to get a help menu --distractors-- --info --r -l --answer-- --help --question-- --text-- Which keybind is used to stop a running process --distractors-- Ctrl + L Alt + C Shift + C --answer-- Ctrl + C --question-- --text-- Which keybind is used to clear the terminal --distractors-- Ctrl + C Shift + L Alt + L --answer-- Ctrl + L --question-- --text-- Which command is used to copy the whole folder--distractors--\ndir -r <folder_to_copy> <name_of_copy>\nmv -r <folder_to_copy> <name_of_copy>\ncd -r <folder_to_copy> <name_of_copy>\n--answer--\ncp -r <folder_to_copy> <name_of_copy>\n--question--\n--text--\nWhich flag is used with ls to include hidden files and folders --distractors--\n-rf\n-r\n-l\n--answer--\n-a\n--question--\n--text--\nWhich flag is used with the ls command to include additional information, such as the permissions --distractors--\nls -f\nls -rf\nls --help\n--answer--\nls -l",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4254,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-commands\\66f1af4fedf643c78d024c5e.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8b06f4be7174f4feb7ca6263f04620cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-and-sql\\66f1affc0ef4fcca423d4688.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1affc0ef4fcca423d4688\ntitle: Bash and SQL Quiz\nchallengeType: 8\ndashedName: quiz-bash-and-sql\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat does SQL stand for --distractors--\nStandard Query Language Simple Quantum Language Sophisticated Query Language --answer--\nStructured Query Language --question--\n--text--\nWhich SQL command is used to create a new database --distractors--\nBUILD DATABASE\nGENERATE DATABASE\nNEW DATABASE\n--answer--\nCREATE DATABASE\n--question--\n--text--\nWhat is First Normal Form (1NF) --distractors--\nNo redundant data No partial dependencies No transitive dependencies --answer--\nAtomic values in columns --question--\n--text--\nHow do you select all columns from a table --distractors--\nSELECT []\nSELECT ALL\nSELECT COLUMNS\n--answer--\nSELECT *\n--question--\n--text--\nWhat does FOREIGN KEY establish --distractors--\nA unique identifier key A primary key A null constraint --answer--\nA relationship between tables --question--\n--text--\nWhat is the purpose of normalization in SQL --distractors--\nSpeed up queries Increase storage space Add more indexes --answer--\nReduce data redundancy --question--\n--text--\nWhat is the best defense against SQL injection --distractors--\nRemove all user input Disable SQL access Remove database access --answer--\nUse prepared statements --question--\n--text--\nWhich command modifies existing table data --distractors--\nMODIFY\nCHANGE\nALTER\n--answer--\nUPDATE\n--question--\n--text--\nIn a junction table, what do you typically include --distractors--\nOnly foreign keys Only timestamps Only primary keys --answer--\nForeign keys and additional data --question--\n--text--\nWhat command adds new data to a table --distractors--\nADD\nPUT\nNEW DATA\n--answer--\nINSERT\n--question--\n--text--\nWhich key can have duplicate values --distractors--\nPrimary Key Unique Key Composite Key --answer--\nForeign Key --question--\n--text--\nWhat does Third Normal Form (3NF) eliminate --distractors--\nMulti-Valued Dependencies Partial Dependencies All Dependencies --answer--\nTransitive Dependencies --question--\n--text--\nHow do you filter SQL results",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5215,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-and-sql\\66f1affc0ef4fcca423d4688.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "439ceb76a259263bc0e11f520e330c7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-and-sql\\66f1affc0ef4fcca423d4688.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Only foreign keys Only timestamps Only primary keys --answer-- Foreign keys and additional data --question-- --text-- What command adds new data to a table --distractors-- ADD PUT NEW DATA --answer-- INSERT --question-- --text-- Which key can have duplicate values --distractors-- Primary Key Unique Key Composite Key --answer-- Foreign Key --question-- --text-- What does Third Normal Form (3NF) eliminate --distractors-- Multi-Valued Dependencies Partial Dependencies All Dependencies --answer-- Transitive Dependencies --question-- --text-- How do you filter SQL results--distractors--\nFILTER\nSORT\nTAGS\n--answer--\nWHERE\n--question--\n--text--\nWhat is the primary characteristic of the N+1 problem in SQL --distractors--\nExecuting one large, complex query and sending it back to the server A query that returns too much data at once but sorts it alpabetically Using too many JOINs in a single query and returning too much data --answer--\nExecuting one initial query followed by N additional queries for related data --question--\n--text--\nWhich of the following is a key difference between a Super Key and a Candidate Key --distractors--\nA Super Key cannot contain multiple attributes or columns, while a Candidate Key can A Candidate Key must be a single column and cannot be a composite key, while a Super Key can be composite A Super Key is chosen by the database administrator and it doesn't have to be unique --answer--\nA Super Key can contain extra attributes not essential for unique identification, while a Candidate Key cannot --question--\n--text--\nWhen normalizing, what do we call data that depends on only part of a composite key --distractors--\nTransitive Dependency Multi-Valued Dependency Functional Dependency --answer--\nPartial Dependency --question--\n--text--\nIn Bash, what is the primary purpose of the > operator --distractors--\nTo append output to a file and create a copy in tmp To read input from a file and encode it To compare two files for differences and print the differences --answer--\nTo redirect standard output to a file, overwriting the file if it exists --question--\n--text--\nWhat does the wc -l command do --distractors--\nCounts the number of words in a file Counts the number of characters in a file Lists all files in the current directory --answer--\nCounts the number of lines in a file",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5215,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-and-sql\\66f1affc0ef4fcca423d4688.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "032efeba719a2a510e01dd5e6c599fd8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-and-sql\\66f1affc0ef4fcca423d4688.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "tmp To read input from a file and encode it To compare two files for differences and print the differences --answer-- To redirect standard output to a file, overwriting the file if it exists --question-- --text-- What does the wc -l command do --distractors-- Counts the number of words in a file Counts the number of characters in a file Lists all files in the current directory --answer-- Counts the number of lines in a file--question--\n--text--\nIn a Bash script, how can you access the first argument passed to it --distractors--\n$ARG1\n$0\n$#\n--answer--\n$1\n--question--\n--text--\nIn a many-to-many relationship between students and courses, what does the junction table contain --distractors--\nOnly student IDs Only Course IDs Full student and course details --answer--\nBoth IDs and Enrollment date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5215,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-and-sql\\66f1affc0ef4fcca423d4688.md",
      "source_type": "git_repo"
    },
    "token_count": 179,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "13cf9cc76e307f811fdad49c22856cd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1afbd9998e9c985d8e73b\ntitle: Bash Scripting Quiz\nchallengeType: 8\ndashedName: quiz-bash-scripting\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is a correct shebang line in bash script --distractors-- #/bin/bash\n/# bin/bash\n/# /bin/bash\n--answer--\n# /bin/bash\n--question--\n--text--\nWhich command would define MY_VAR and print it to the console --distractors--\nMY_VAR=10; echo MY_VAR\n$MY_VAR=10; echo MY_VAR\n$MY_VAR=10; echo $MY_VAR\n--answer--\nMY_VAR=10; echo $MY_VAR\n--question--\n--text--\nWhich command is used to view all variables in the shell --distractors--\ndeclare -n env\ndeclare -p env\ndeclare -x bashrc\n--answer--\ndeclare -p\n--question--\n--text--\nWhich command would run a script sh file --distractors--\nscript sh bash\nzsh /script sh /sh script sh\n--answer-- /script sh\n--question--\n--text--\nHow to view the manual for the less command in bash --distractors--\nless man\nless --man\nman --less\n--answer--\nman less\n--question--\n--text--\nHow would you call the print_arguments function to print a and b to the terminal ```bash\nprint_arguments() {\necho \"Argument 1: $1\"\necho \"Argument 2: $2\"\n}\n```\n--distractors--\nprint_arguments(\"a\", \"b\")\nprint_arguments(a, b)\nprint_arguments{a, b}\n--answer--\nprint_arguments \"a\" \"b\"\n--question--\n--text--\nHow do you initialize an array in bash --distractors--\nARR=[\"item1\" \"item2\" \"item3\"]\nARR=[[\"item1\" \"item2\" \"item3\"]]\nARR={\"item1\" \"item2\" \"item3\"}\n--answer--\nARR=(\"item1\" \"item2\" \"item3\")\n--question--\n--text--\nHow do you print the third value of an array in bash",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "5e17bd8167c7d6b7ff7b9032543b60da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "would you call the print_arguments function to print a and b to the terminal ```bash print_arguments() { echo \"Argument 1: $1\" echo \"Argument 2: $2\" } ``` --distractors-- print_arguments(\"a\", \"b\") print_arguments(a, b) print_arguments{a, b} --answer-- print_arguments \"a\" \"b\" --question-- --text-- How do you initialize an array in bash --distractors-- ARR=[\"item1\" \"item2\" \"item3\"] ARR=[[\"item1\" \"item2\" \"item3\"]] ARR={\"item1\" \"item2\" \"item3\"} --answer-- ARR=(\"item1\" \"item2\" \"item3\") --question-- --text-- How do you print the third value of an array in bash--distractors--\necho ${ARR[3]}\necho $ARR[2]\necho $ARR[3]\n--answer--\necho ${ARR[2]}\n--question--\n--text--\nHow do you assign user input to a variable in bash --distractors--\ninput MY_VAR\ncin MY_VAR\nget MY_VAR\n--answer--\nread MY_VAR\n--question--\n--text--\nWhat will be the permission flags for the 1 txt file after executing the command chmod 765 1 txt --distractors--\nrwxrwxrwx\nrwxr-xrw-\nr-xrw-rwx\n--answer--\nrwxrw-r-x\n--question--\n--text--\nWhat keyword does the statement if then end with --distractors--\nend\ndone\nstop\n--answer--\nfi\n--question--\n--text--\nWhat keyword does the statement for do end with --distractors--\nend\nod\nstop\n--answer--\ndone\n--question--\n--text--\nHow do you create a comment in bash --distractors--\n// comment comment\n/* comment\n--answer--\n# comment\n--question--\n--text--\nWhat line should you add to the beginning of this snippet to create a for loop",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "47a232776fd9e693830c30fa6f51cb5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "rwxrwxrwx rwxr-xrw- r-xrw-rwx --answer-- rwxrw-r-x --question-- --text-- What keyword does the statement if then end with --distractors-- end done stop --answer-- fi --question-- --text-- What keyword does the statement for do end with --distractors-- end od stop --answer-- done --question-- --text-- How do you create a comment in bash --distractors-- // comment comment /* comment --answer-- # comment --question-- --text-- What line should you add to the beginning of this snippet to create a for loop```bash\ndo\necho $i\ndone\n```\n--distractors--\nfor ( int i = 0; i < 10; i++ )\nfor (( int i = 0; i < 10; i++ ))\nfor (( let i = 0; i < 10; i++ ))\n--answer--\nfor (( i = 0; i < 10; i++ ))\n--question--\n--text--\nHow would you assign the result of the sum of variables A and B to the variable C --distractors--\nC=$A + $B\nC=$( A + B )\n$C=$(( $A + $B ))\n--answer--\nC=$(( A + B ))\n--question--\n--text--\nWhich command is used to create a new file --distractors--\nnewfile\necho new_file\nfileargs\n--answer--\ntouch\n--question--\n--text--\nWhat does the command echo $ do --distractors--\nPrints the value of the last used variable Prints the value of the last used arithmetic operation Prints the value of the last executed condition --answer--\nPrints the exit code of the last executed command --question--\n--text--\nWhat advantage does Bash provide when testing parts of a script --distractors--\nBash scripts must be compiled before testing\nYou can only test scripts using an IDE\nBash automatically generates test cases\n--answer--\nScript sections can be pasted directly into the terminal for testing\n--question--\n--text--\nWhat types of loops exist in bash --distractors--\nfor\nfor, while\nfor, while, until, forEach\n--answer--\nfor, while, until\n--question--\n--text--\nHow do you print all values of an array in bash",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ea0919754dbb38b649d59abdb415f066",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "does Bash provide when testing parts of a script --distractors-- Bash scripts must be compiled before testing You can only test scripts using an IDE Bash automatically generates test cases --answer-- Script sections can be pasted directly into the terminal for testing --question-- --text-- What types of loops exist in bash --distractors-- for for, while for, while, until, forEach --answer-- for, while, until --question-- --text-- How do you print all values of an array in bash--distractors--\necho $ARR[@]\necho {ARR[@]}\necho ${ARR[$@]}\n--answer--\necho ${ARR[@]}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-bash-scripting\\66f1afbd9998e9c985d8e73b.md",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "45aee2237af5afcf307f734bcaf8ed7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-classes-and-objects\\67f413038f0f8c452c660dc5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f413038f0f8c452c660dc5\ntitle: Classes and Objects Quiz\nchallengeType: 8\ndashedName: quiz-classes-and-objects\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is the correct way to define a class --distractors--\npy\ndef className(class):\npass\npy\nself className:\npass\npy\nclass className\npass\n--answer--\npy\nclass className:\npass\n--question--\n--text--\nWhat is the purpose of the special method __init__ --distractors--\nIt sets a shortcut to create an instance of a class It prevents an object from having duplicate attributes It sets the value of self to the current object --answer--\nIt initializes objects' attributes upon instantiation --question--\n--text--\nWhat is the difference between an instance attribute and a class attribute --distractors--\nInstance attributes define methods that can be accessed from an object; class attributes define methods that can be accessed from a class Instance attributes are set within the __init__ method; class attributes are set within the __class__ method Instance attributes can be directly accessed from the class; class attributes can be only accessed from an actual instance of the class --answer--\nInstance attributes belong to a specific object; class attributes belong to a class --question--\n--text--\nWhich of the following is the correct way to call the spam method from the menu object --distractors--\nspam menu()\nmenu[spam]\nspam menu\n--answer--\nmenu spam()\n--question--\n--text--\nWhich of the following special methods is called under the hood when an object is printed to the console --distractors--\n__print__\n__log__\n__string__\n--answer--\n__str__\n--question--\n--text--\nWhat is the result of the following code ```py\nclass Menu:\ndish_of_the_day = \"spam\"\nprint(Menu dish_of_the_day)\n```\n--distractors--\nNone\nAttributeError\nSyntaxError\n--answer--\nspam\n--question--\n--text--\nWhat does the self parameter refer to inside a method --distractors--\nIt's a reference to the object initializer It's a reference to the module where the class is defined It's a reference to the class being used",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-classes-and-objects\\67f413038f0f8c452c660dc5.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bf3d70a6b560508e5f9ed5d340eed5dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-classes-and-objects\\67f413038f0f8c452c660dc5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "object is printed to the console --distractors-- __print__ __log__ __string__ --answer-- __str__ --question-- --text-- What is the result of the following code ```py class Menu: dish_of_the_day = \"spam\" print(Menu dish_of_the_day) ``` --distractors-- None AttributeError SyntaxError --answer-- spam --question-- --text-- What does the self parameter refer to inside a method --distractors-- It's a reference to the object initializer It's a reference to the module where the class is defined It's a reference to the class being used--answer--\nIt's a reference to the instance of the class calling the method --question--\n--text--\nWhich of the following correctly creates an instance of a class Person --distractors--\nPerson new()\nnew Person()\nnew Person\n--answer--\nPerson()\n--question--\n--text--\nWhat will be the result of the following code ```py\nclass Dog:\ndef init(name, age):\nself name = name\nself age = age\ndog = Dog(\"Pinky\", 3)\nprint(dog name)\n```\n--distractors--\nPinky\n3\nAttributeError\n--answer--\nTypeError\n--question--\n--text--\nWhich of the following is the correct way to access the name attribute of the dog object --distractors--\ndog() name\ndog name()\ndog get('name')\n--answer--\ndog name",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3386,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-classes-and-objects\\67f413038f0f8c452c660dc5.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ee119bbb0f24f5221dbdb6f3bdbf486a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-accessibility\\66ed8fc1f45ce3ece4053ead.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fc1f45ce3ece4053ead\ntitle: CSS Accessibility Quiz\nchallengeType: 8\ndashedName: quiz-css-accessibility\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhy do you need to have good color contrast on your webpage --distractors--\nTo make the page more vibrant To meet requirements for search engine optimization (SEO) To make important elements of the page stand out --answer--\nTo make the page content accessible and readable --question--\n--text--\nWhich of the following tools allows you to enter background and foreground colors and check their contrast ratio --distractors--\nTPGi Colour Contrast Analyzer\nFigma\nCanva\n--answer--\nWebAIM's Color Contrast Checker\n--question--\n--text--\nWhich of the following tools allows you to pick background and foreground colors from a live webpage and check for their contrast ratio --distractors--\nFigma\nCanva\nWebAIM's Color Contrast Checker\n--answer--\nTPGi Colour Contrast Analyzer\n--question--\n--text--\nWhy should you NOT use display: none and visibility: hidden to visually hide content --distractors--\nThese methods make it so that only assistive technologies like screen readers can access the hidden content These methods make it so that the content is only hidden until users move their mouse over the content These methods do not work with some browsers --answer--\nThese methods remove the content from the accessibility tree, making it impossible for screen readers to access the hidden content --question--\n--text--\nWhat is an accessibility tree --distractors--\nA visual representation of the layout of a webpage A structure used by screen readers to read the text content of a webpage A copy of the DOM tree --answer--\nA structure used by screen readers to interpret and interact with the content on a webpage --question--\n--text--\nWhich of the following ensures that an image has a minimum width of 400px, but becomes wider when the viewport width is greater than 1000px",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-accessibility\\66ed8fc1f45ce3ece4053ead.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "42290d34959cb60f67c09d5240fd63c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-accessibility\\66ed8fc1f45ce3ece4053ead.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "accessibility tree --distractors-- A visual representation of the layout of a webpage A structure used by screen readers to read the text content of a webpage A copy of the DOM tree --answer-- A structure used by screen readers to interpret and interact with the content on a webpage --question-- --text-- Which of the following ensures that an image has a minimum width of 400px, but becomes wider when the viewport width is greater than 1000px--distractors--\ncss\nimg {\nwidth: max(400px, 10vw);\n}\ncss\nimg {\nwidth: max(400px, 30vw);\n}\ncss\nimg {\nwidth: max(400px, 20vw);\n}\n--answer--\ncss\nimg {\nwidth: max(400px, 40vw);\n}\n--question--\n--text--\nWhich of the following scroll-behavior value allows a smooth scrolling behavior --distractors--\nauto\ninherit\nrevert\n--answer--\nsmooth\n--question--\n--text--\nWhich of the following features is used to detect the user's animation preference --distractors--\nprefers-contrast\ndisplay-mode\nanimation\n--answer--\nprefers-reduce-motion\n--question--\n--text--\nWhich of the following is an accessibility issue of the placeholder attribute in an input element --distractors--\nPlaceholder text prevents screen readers from reading the input label text Placeholder text prevents screen readers from reading the input value Placeholder text is too small to be readable --answer--\nPlaceholder text can be confused with an actual input value --question--\n--text--\nWhat does the hidden attribute do --distractors--\nIt hides content and reveals on hover It hides content only from the accessibility tree It hides content visually, but the content is available in the accessibility tree --answer--\nIt hides content both visually and from the accessibility tree",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3754,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-accessibility\\66ed8fc1f45ce3ece4053ead.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "77039fe12d31685e4742fe8105edf3ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fa2f45ce3ece4053eab\ntitle: Basic CSS Quiz\nchallengeType: 8\ndashedName: quiz-basic-css\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat does CSS stand for --distractors--\nCascading Style Script\nConcatenating Style Script\nCastor Sage Style\n--answer--\nCascading Style Sheets\n--question--\n--text--\nWhich of the following is a correct CSS rule --distractors--\np=red\np (color: red)\n{p color: red;}\n--answer--\np {color: red;}\n--question--\n--text--\nWhat does <meta name=\"viewport\"> do --distractors--\nIt links external stylesheets to a webpage for responsive design It specifies the metadata used by search engines to index a webpage It specifies the character encoding used on the webpage --answer--\nIt controls the shape and size of a web page on different screen sizes --question--\n--text--\nWhich syntax is correct to use inline CSS --distractors--\n<p color =  blue></p>\n<p><style = blue></p>\np {color: blue;}\n--answer--\n<p style=\"color: blue;\"></p>\n--question--\n--text--\nWhen using internal CSS, where is the style element placed within the HTML --distractors--\nIn the meta element In the script element In the body element --answer--\nIn the head element --question--\n--text--\nWhich rule is correct for setting the width and height in CSS --distractors--\nheight-width: 50px;\nwidth-and-height: 50px;\nflex-width: 50px; flex-height: 50px;\n--answer--\nwidth: 50px; height: 50px;\n--question--\n--text--\nWhich selector correctly targets h1 elements only when inside a div --distractors--\ndiv, h1 {}\ndiv ~ h1 {}\ndiv + h1 {}\n--answer--\ndiv h1 {}\n--question--\n--text--\nWhich selector is correct to target direct children of a footer --distractors--\nfooter ~ ul {}\nfooter + ul {}\nfooter ul {}\n--answer--\nfooter > ul {}\n--question--\n--text--\nWhich selector is correct to target the next sibling of an img",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "04c0fd45e3c7bcbb45cbf5cc9fc100f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "50px; height: 50px; --question-- --text-- Which selector correctly targets h1 elements only when inside a div --distractors-- div, h1 {} div ~ h1 {} div + h1 {} --answer-- div h1 {} --question-- --text-- Which selector is correct to target direct children of a footer --distractors-- footer ~ ul {} footer + ul {} footer ul {} --answer-- footer > ul {} --question-- --text-- Which selector is correct to target the next sibling of an img--distractors--\nimg h1 {}\nimg > h1 {}\nimg ~ h1 {}\n--answer--\nimg + h1 {}\n--question--\n--text--\nWhich selector is correct to target all siblings preceded by an img element --distractors--\nimg > caption {}\nimg caption {}\nimg + caption {}\n--answer--\nimg ~ caption {}\n--question--\n--text--\nWhat statement is TRUE about block-level elements --distractors--\nBlock-level elements stack horizontally by default width and height properties usually do not apply to block-level elements unless you set their display property to inline-block Block-level elements cannot contain inline elements inside them --answer--\nBlock-level elements start on a new line and take up the full width of their container --question--\n--text--\nWhat statement is TRUE when using the inline-block value --distractors--\nElements stack vertically, always taking up the full width of their container Elements align horizontally but cannot apply vertical padding or margin Elements respect width and height settings but cannot contain other elements inside them --answer--\nElements retain inline flow but allow setting width and height --question--\n--text--\nGiven the following selectors, which has the highest specificity --distractors--\ndiv\nh1\np\n--answer--\n#id\n--question--\n--text--\nGiven the following selectors, which has the lowest specificity --distractors--\n#id class\ndiv h1\n--answer--\nh1\n--question--\n--text--\nWhat does the * selector do --distractors--\nTargets some elements on the page Targets elements that have children on the page Targets all p elements on the page --answer--\nTargets all elements on the page --question--\n--text--\nWhat does important do in CSS --distractors--\nIt makes the CSS rule work exclusively for inline styles and ignores styles defined in external or internal stylesheets",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "619f9ce3bf4971662743b49dd61d53b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "has the lowest specificity --distractors-- #id class div h1 --answer-- h1 --question-- --text-- What does the * selector do --distractors-- Targets some elements on the page Targets elements that have children on the page Targets all p elements on the page --answer-- Targets all elements on the page --question-- --text-- What does important do in CSS --distractors-- It makes the CSS rule work exclusively for inline styles and ignores styles defined in external or internal stylesheetsIt disables all other CSS properties applied to the same element, effectively making it the only rule that affects the element's styling It applies on to a certain selector or group of elements --answer--\nIt overrides any other values applied to the property for that selector --question--\n--text--\nHow does the CSS Cascade algorithm work --distractors--\nIt determines styles of the element based on order of declaration, regardless of other factors It applies styles based solely on the order they are written, ignoring specificity It applies styles prioritizing specificity, ignoring origin and relevance --answer--\nIt determines styles of the element based on specificity and order of declaration --question--\n--text--\nWhich rule applies 32px of margin to all sides --distractors--\nmargin-top: 32px;\nmargin: 32px 0;\nmargin: 0 32px;\n--answer--\nmargin: 32px;\n--question--\n--text--\nWhich rule applies 24px padding to the top and bottom --distractors--\npadding: 24px;\npadding-top-bottom: 24px;\npadding: 0 24px;\n--answer--\npadding: 24px 0;\n--question--\n--text--\nFor padding: 10px 20px 30px 40px, what is the correct order of values --distractors--\nRight, Top, Left, Bottom Top, Left, Bottom, Right Top, Bottom, Right, Left --answer--\nTop, Right, Bottom, Left --quiz--\n--question--\n--text--\nWhat are the main parts of a CSS rule --distractors--\nElements and attributes\nStyle and sheets\nScripts and values\n--answer--\nSelectors and declaration blocks\n--question--\n--text--\nWhich of the following is the correct syntax for a CSS rule",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "785fdf42859d1fb7cbde1ba68afcf727",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "24px 0; --question-- --text-- For padding: 10px 20px 30px 40px, what is the correct order of values --distractors-- Right, Top, Left, Bottom Top, Left, Bottom, Right Top, Bottom, Right, Left --answer-- Top, Right, Bottom, Left --quiz-- --question-- --text-- What are the main parts of a CSS rule --distractors-- Elements and attributes Style and sheets Scripts and values --answer-- Selectors and declaration blocks --question-- --text-- Which of the following is the correct syntax for a CSS rule--distractors--\ncss\nbody [\nfont-family: Arial;\n]\ncss\nfont-family {\nbody: Arial;\n}\ncss\nbody {\nfont-family; Arial:\n}\n--answer--\ncss\nbody {\nfont-family: Arial;\n}\n--question--\n--text--\nWhat are default browser styles --distractors--\nHTML elements that have the same styling properties regardless of the browser They are mandatory styles that you must use for specific HTML elements They are the color themes for the various browsers --answer--\nThe CSS rules that browsers apply automatically --question--\n--text--\nWhat is the default value for the width property --distractors--\nnone\n0\n100%\n--answer--\nauto\n--question--\n--text--\nWhat does the min-height property specify --distractors--\nThe starting height for an element The height for an element The maximum height for an element --answer--\nThe minimum height for an element --question--\n--text--\nWhich of the following is TRUE about the universal selector * --distractors--\nIt has the highest specificity because it can style all the elements on a page It contributes 1 to all parts of the specificity value It cannot reset styles across different browsers --answer--\nIt has the lowest specificity value of any selector --question--\n--text--\nWhich selector correctly targets li elements for an ordered list --distractors--\nli {}\nul li {}\nol + li {}\n--answer--\nol li {}\n--question--\n--text--\nWhich selector targets the paragraph elements of a div element --distractors--\np div {}\ndiv, p {}\np, div {}\n--answer--\ndiv p {}\n--question--\n--text--\nWhere does the margin apply styling properties --distractors--\nThe space inside element Between the content and the border On the border of the element --answer--\nThe space outside the element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "b7739a66a39c995d3640bec3acbccfc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for an ordered list --distractors-- li {} ul li {} ol + li {} --answer-- ol li {} --question-- --text-- Which selector targets the paragraph elements of a div element --distractors-- p div {} div, p {} p, div {} --answer-- div p {} --question-- --text-- Where does the margin apply styling properties --distractors-- The space inside element Between the content and the border On the border of the element --answer-- The space outside the element--question--\n--text--\nWhere does the padding property apply styling --distractors--\nBetween the elements border and the surrounding elements The space outside the element On the border of the element --answer--\nThe space inside the element --question--\n--text--\nWhich statement is FALSE about block-level elements --distractors--\nThey can stretch to fit the width of their container Common block level elements include div, paragraph, and section Block-level elements start on a new line and take up the full width of their container --answer--\nThey cannot take up the full width available as they are blocked from doing so --question--\n--text--\nWhich statement is FALSE when using the inline-block value --distractors--\ninline-block elements behave like inline elements They can have width and height properties Elements retain inline flow but allow setting width and height --answer--\nThey do not share properties with inline or block level elements --question--\n--text--\nWhich is TRUE about the important keyword --distractors--\nThey are used to make comments for an important CSS property They make sure a CSS property has the correct syntax They make CSS rules easier to maintain --answer--\nThey override the specificity of other selectors --question--\n--text--\nWhat character precedes a class selector name --distractors--\n#\n$\n*\n--answer-- --question--\n--text--\nWhich is FALSE about inline level elements --distractors--\nThey take up only as much space as they need They do not start on a new line Common inline elements include span and img --answer--\nThey always start on a new line --question--\n--text--\nWhere are internal CSS styles accessed --distractors--\nThey are styles that are important to the project, so are not shared externally Since they form the core styling of the project, they are saved in the styles css file so other web pages can access them They are stored inside the body element when there is only one web page to style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "6e3fbc54269941a32eae950b05c198de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "elements include span and img --answer-- They always start on a new line --question-- --text-- Where are internal CSS styles accessed --distractors-- They are styles that are important to the project, so are not shared externally Since they form the core styling of the project, they are saved in the styles css file so other web pages can access them They are stored inside the body element when there is only one web page to style--answer--\nThey are written within the style section within the head element --question--\n--text--\nWhat is the order for applying the padding property when using the shorthand syntax --distractors--\ntop, bottom, left, right\nleft, right, top, bottom\nright, top, left, bottom\n--answer--\ntop, right, bottom, left\n--question--\n--text--\nWhat is the order for applying the margin property when using the shorthand syntax --distractors--\nleft, right, top, bottom\nright, top, left, bottom\ntop, bottom, left, right\n--answer--\ntop, right, bottom, left\n--question--\n--text--\nWhat are inline CSS styles used for --distractors--\nThey are used to style inline elements only They are used to style elements only when they all appear on the same line of the browser viewport They are used to resolve the issue with separation of concerns --answer--\nThey are used to directly style within the element, instead of using internal or external CSS --question--\n--text--\nWhat symbol precedes the ID selector --distractors-- *\n$\n--answer--\n#",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11843,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-css\\66ed8fa2f45ce3ece4053eab.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "094165a9b4889ba43271f7740327c31a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fb9f45ce3ece4053eac\ntitle: Computer Basics Quiz\nchallengeType: 8\ndashedName: quiz-computer-basics\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat part of a computer is used to connect the other internal components together --distractors--\nProcessor\nGraphics Card Memory\n--answer--\nMotherboard\n--question--\n--text--\nWhat are browser developer tools --distractors--\nTools for editing browser settings and managing user profiles Utilities for blocking ads and improving web page performance Software for managing browser extensions and plug-ins --answer--\nBuilt-in features in browsers that help developers debug and inspect websites --question--\n--text--\nWhich of the following ISP connections are typically the fastest --distractors--\nDSL\nSatellite\nCable\n--answer--\nFiber Optic --question--\n--text--\nWhich of the following is NOT a safe practice when signing in --distractors--\nUsing a fingerprint or face scanner Making a long and complex password like @ppl3_+B@nana34823 Setting up two-factor authentication (2FA) --answer--\nUsing passwords based on personal information like your birthday --question--\n--text--\nWhich of the following is NOT a Web Browser --distractors--\nSafari\nOpera\nMicrosoft Edge --answer--\nGoogle Drive --question--\n--text--\nWhen you need to edit a piece of code, which of the following are you most likely going to use --distractors--\nNode Package Manager Microsoft Edge GitHub\n--answer--\nVisual Studio Code --question--\n--text--\nWhich of the following is used primarily for managing files stored on a local hard drive --distractors--\nDropbox\nMicrosoft OneDrive Google Drive --answer--\nWindows File Explorer --question--\n--text--\nWhat is NOT a good practice when naming files --distractors--\nPutting an underscore or hyphen between words Use a casing style such as camelCase and sticking with it Putting a version number at the end of a document like summaryReport_v2 docx --answer--\nUsing non-descriptive names like file1 txt --question--\n--text--\nWhat does the term \"domain name\" refer to --distractors--\nA type of software that manages website files and databases The physical location of a web server in a data center",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "203af5408b7acf5d0188de199ce93e82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "good practice when naming files --distractors-- Putting an underscore or hyphen between words Use a casing style such as camelCase and sticking with it Putting a version number at the end of a document like summaryReport_v2 docx --answer-- Using non-descriptive names like file1 txt --question-- --text-- What does the term \"domain name\" refer to --distractors-- A type of software that manages website files and databases The physical location of a web server in a data centerNone of the other choices --answer--\nThe address used to identify websites on the internet --question--\n--text--\nWhich of the following is a way to send a file to the Recycle Bin/Trash --distractors--\nAll of the other choices Pressing the Backspace key on the keyboard Moving it to an Archived folder --answer--\nRight-click on it and select the Delete/Move to trash option --question--\n--text--\nWhat is a RAM --distractors--\nA network protocol used for transferring files between devices A permanent storage device used for saving files and applications A component in a computer responsible for generating graphics and rendering images --answer--\nA temporary memory for fast data access by the processor --question--\n--text--\nWhat file type will be best suited for writing a README file --distractors-- php html json\n--answer-- md\n--question--\n--text--\nWhat is an Integrated Development Environment (IDE) --distractors--\nA platform designed for deploying and hosting web applications A type of hardware device used for testing and debugging electronic circuits A version control system that helps developers track changes in source code during software development --answer--\nA program that integrates tools for writing, debugging, and running code --question--\n--text--\nWhat is a piece of software that allows you to look at online content called --distractors--\nInternet Content Displayer Search Engine Website\n--answer--\nWeb Browser --question--\n--text--\nWhat is a piece of software that lists web pages related to a user's query called --distractors--\nPage Finder Web Browser Website\n--answer--\nSearch Engine --question--\n--text--\nWhat is a set of one or more web pages under one domain name called --distractors--\nWeb Browser Hyperlink\nSearch Engine --answer--\nWebsite\n--question--\n--text--\nTo search for an exact phrase, what should you enclose your search query with",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0e28d5c209e008eabe2e3a8737c39337",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Content Displayer Search Engine Website --answer-- Web Browser --question-- --text-- What is a piece of software that lists web pages related to a user's query called --distractors-- Page Finder Web Browser Website --answer-- Search Engine --question-- --text-- What is a set of one or more web pages under one domain name called --distractors-- Web Browser Hyperlink Search Engine --answer-- Website --question-- --text-- To search for an exact phrase, what should you enclose your search query with--distractors--\nBackticks\nParentheses\nBrackets\n--answer--\nQuotation marks --question--\n--text--\nWhich is NOT a way to install a Web Browser --distractors--\nUsing a Package Manager Directly downloading from the website Using an App Store like Microsoft Store --answer--\nPressing the Network/Internet button in Settings --question--\n--text--\nWhich of the following formats does NOT preserve image quality after compression --distractors--\nAll of the other choices PNG\nSVG\n--answer--\nJPEG\n--question--\n--text--\nWhich of the following parts is located in a socket on the motherboard --distractors--\nThe Router The Keyboard The Hard Drive (HDD) --answer--\nThe CPU --quiz--\n--question--\n--text--\nWhich of the following is a basic part of the computer --distractors--\nThe word processor The task manager The memory manager --answer--\nThe central processing unit --question--\n--text--\nWhat is a pointing device for a computer --distractors--\nA stick for pointing at computers A retractable device used in PowerPoint presentations A laser pointer --answer--\nA mouse or touchpad --question--\n--text--\nWhat is a type of ISP provider --distractors--\nSatellite Fiber optic Dial up --answer--\nTier 1 --question--\n--text--\nWhat is a best practice when naming files for a web application --distractors--\nUsing special characters Using spaces to separate the words Using generic words --answer--\nUsing hyphens instead of spaces --question--\n--text--\nWhich of the following is a common file type when working with web applications --distractors-- xls aud doc\n--answer-- css\n--question--\n--text--\nWhat is a common file type for a video file --distractors-- vid mp3 wav\n--answer-- mp4\n--question--\n--text--\nWhich of the following types is commonly used for image files",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3a079b490f2152f0744cbdcfaf1f75c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for a web application --distractors-- Using special characters Using spaces to separate the words Using generic words --answer-- Using hyphens instead of spaces --question-- --text-- Which of the following is a common file type when working with web applications --distractors-- xls aud doc --answer-- css --question-- --text-- What is a common file type for a video file --distractors-- vid mp3 wav --answer-- mp4 --question-- --text-- Which of the following types is commonly used for image files--distractors-- pix ppg gfi\n--answer-- svg\n--question--\n--text--\nMicrosoft Edge is the default web browser of which operating system --distractors--\nLinux\nMacOS\nUnix\n--answer--\nWindows\n--question--\n--text--\nWhat is a search engine --distractors--\nA part of the hard drive of a computer Advanced software that is only used by academic researchers A tool for finding web components --answer--\nA web based tool for searching information on the internet --question--\n--text--\nWhich of the following is NOT a type of browser --distractors--\nGoogle Chrome\nMozilla Firefox\nMicrosoft Edge\n--answer--\nGitHub\n--question--\n--text--\nWhich of the following is NOT a cloud-based hosting service for repositories --distractors--\nGitHub\nGitLab\nBitBucket\n--answer--\nGitpod\n--question--\n--text--\nWhich of the following is not primarily a part of an integrated development environment --distractors--\nA tool for writing A tool for testing code A tool for debugging code --answer--\nA tool for storing code --question--\n--text--\nWhat is a best practice for naming files --distractors--\nCreating a script that uses the same file names for all your projects Naming the main file with the same name as the folder it is in Using a unique sequence of numbers at the end of the file name --answer--\nUsing a descriptive name for each file --question--\n--text--\nWhat is the built-in way you can use to search for files on your computer --distractors--\nGoogle or Firefox A search engine GitHub --answer--\nThe file explorer --question--\n--text--\nWhat is a common search strategy to search for file types --distractors--\nsite:\ntypeof:\ntype:\n--answer--\nfiletype:\n--question--\n--text--\nWhat is the default page for a website --distractors--\nstyles css\nmain",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "85b3820eb9299c7493c88db7931cb280",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the end of the file name --answer-- Using a descriptive name for each file --question-- --text-- What is the built-in way you can use to search for files on your computer --distractors-- Google or Firefox A search engine GitHub --answer-- The file explorer --question-- --text-- What is a common search strategy to search for file types --distractors-- site: typeof: type: --answer-- filetype: --question-- --text-- What is the default page for a website --distractors-- styles css mainhtml\nhome html\n--answer--\nindex html\n--question--\n--text--\nWhich file managers can you use to create, move, and delete files --distractors--\nGoogle or Bing Windows or MacOS Findex or Firefox --answer--\nExplorer or Finder --question--\n--text--\nWhat is Git --distractors--\nA centralized storage location for code repositories A tool for adding, updating, and removing libraries and project dependencies A cloud-based hosting service for repositories --answer--\nA version control system for tracking changes and collaborating with others --question--\n--text--\nWhat is random access memory --distractors--\nA permanent storage location that is used to store data A volatile way to access data in a sequential manner A processor used for generating passwords --answer--\nA temporary storage location for the computer's central processing unit --question--\n--text--\nWhich file format is used to compress files --distractors--\nTTF\nMOV\nZAP\n--answer--\nZIP",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10312,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-computer-basics\\66ed8fb9f45ce3ece4053eac.md",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "8c4e10479f256538dc79481fd2cb64e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-attribute-selectors\\66ed8fd0f45ce3ece4053eaf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fd0f45ce3ece4053eaf\ntitle: CSS Attribute Selectors Quiz\nchallengeType: 8\ndashedName: quiz-css-attribute-selectors\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat are CSS attribute selectors used for --distractors--\nTo apply styles to elements based on their tag name To apply styles to elements based on their class name To apply styles to elements based on their parent element --answer--\nTo apply styles to elements based on their attributes --question--\n--text--\nWhich of the following will NOT be selected by this CSS selector css\n[title~=\"flower\"] {\nborder: 5px solid yellow;\n}\n--distractors--\nhtml\n<img src=\"img1 jpg\" title=\"clematis flower\" width=\"150\" height=\"113\">\nhtml\n<img src=\"img2 jpg\" title=\"flower\" width=\"150\" height=\"113\">\nhtml\n<img src=\"img2 jpg\" title=\"FLOWERS of flower\" width=\"150\" height=\"113\">\n--answer--\nhtml\n<img src=\"img2 jpg\" title=\"flowers\" width=\"150\" height=\"113\">\n--question--\n--text--\nWhich CSS selector matches all p elements with a lang attribute set to \"fr\" --distractors--\ncss\np[lang-=\"fr\"] { color: blue; }\ncss\np[lang~=\"fr\"] { color: blue; }\ncss\np[lang==\"fr\"] { color: blue; }\n--answer--\ncss\np[lang=\"fr\"] { color: blue; }\n--question--\n--text--\nWhich CSS selector matches all a elements with an href attribute --distractors--\ncss\na(href) { color: green; }\ncss\na { color: green; }\ncss\na[href~=\"\"] { color: green; }\n--answer--\ncss\na[href] { color: blue; }\n--question--\n--text--\nWhich CSS selector matches all ordered lists with uppercase Roman numerals",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-attribute-selectors\\66ed8fd0f45ce3ece4053eaf.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "13bd16730d11ed4abef0601bddad21d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-attribute-selectors\\66ed8fd0f45ce3ece4053eaf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "p[lang-=\"fr\"] { color: blue; } css p[lang~=\"fr\"] { color: blue; } css p[lang==\"fr\"] { color: blue; } --answer-- css p[lang=\"fr\"] { color: blue; } --question-- --text-- Which CSS selector matches all a elements with an href attribute --distractors-- css a(href) { color: green; } css a { color: green; } css a[href~=\"\"] { color: green; } --answer-- css a[href] { color: blue; } --question-- --text-- Which CSS selector matches all ordered lists with uppercase Roman numerals--distractors--\ncss\nol[type=\"a\"] { border-color: black; }\ncss\nol[type=\"A\"] { border-color: black; }\ncss\nol[type=\"i\"] { border-color: black; }\n--answer--\ncss\nol[type=\"I\"] { border-color: black; }\n--question--\n--text--\nWhat is the data-lang attribute commonly used for --distractors--\nTo specify the language of the document To define the character encoding of the document To set the language of an element based on its parent element --answer--\nTo apply styles to elements based on this custom data attribute --question--\n--text--\nWhich CSS selector should you use to style img elements only if their alt attribute is equal to \"code\" --distractors--\ncss\nimg[alt~=\"code\"] { border: 1px solid red; }\ncss\nimg[alt==\"code\"] { border: 1px solid red; }\ncss\nimg[alt*=\"code\"] { border: 1px solid red; }\n--answer--\ncss\nimg[alt=\"code\"] { border: 1px solid red; }\n--question--\n--text--\nWhich CSS selector matches ordered lists with a numerical numbering type --distractors--\ncss\nol[type=\"i\"] { color: purple; }\ncss\nol[type=\"I\"] { color: purple; }\ncss\nol[type=\"a\"] { color: purple; }\n--answer--\ncss\nol[type=\"1\"] { color: purple; }\n--question--\n--text--\nWhich of the following CSS selectors would you use to style a elements with both href and title attributes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-attribute-selectors\\66ed8fd0f45ce3ece4053eaf.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c8f76f6131a66b601d8dfd29de5301c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-attribute-selectors\\66ed8fd0f45ce3ece4053eaf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "img[alt*=\"code\"] { border: 1px solid red; } --answer-- css img[alt=\"code\"] { border: 1px solid red; } --question-- --text-- Which CSS selector matches ordered lists with a numerical numbering type --distractors-- css ol[type=\"i\"] { color: purple; } css ol[type=\"I\"] { color: purple; } css ol[type=\"a\"] { color: purple; } --answer-- css ol[type=\"1\"] { color: purple; } --question-- --text-- Which of the following CSS selectors would you use to style a elements with both href and title attributes--distractors--\ncss\na[href] a[title] { text-decoration: underline dotted; }\ncss\na[href]a[title] { text-decoration: underline dotted; }\ncss\na[href] [title] { text-decoration: underline dotted; }\n--answer--\ncss\na[href][title] { text-decoration: underline dotted; }\n--question--\n--text--\nWhich CSS selector would you use if you are developing a website for a restaurant and want to style all elements with the menu-item class that have a data-special attribute --distractors--\ncss\nmenu-item[data-special] { background-color: blue; }\n```css\nmenu-item[data-special] { background-color: blue; }\n```\ncss\n[data-special=\"menu-item\"] { background-color: blue; }\n--answer--\ncss menu-item[data-special] { background-color: blue; }",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-attribute-selectors\\66ed8fd0f45ce3ece4053eaf.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9a49592b0e458d2b50bd14a0878221a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fc9f45ce3ece4053eae\ntitle: CSS Animations Quiz\nchallengeType: 8\ndashedName: quiz-css-animations\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is the purpose of the transform property in CSS --distractors--\nTo change the visibility of an element To apply a visual effect to text To set the dimensions of an element --answer--\nTo modify the position, size, and shape of an element --question--\n--text--\nHow does the CSS animation-direction property affect an animation --distractors--\nIt specifies if an animation should be repeated It sets the duration of the animation It defines the speed of the animation --answer--\nIt defines how an animation should play --question--\n--text--\nWhich CSS property makes an animation run 3 times --distractors--\nanimation-repeat: 3\nanimation-loop: 3\nanimation-delay: 3\n--answer--\nanimation-iteration-count: 3\n--question--\n--text--\nWhich CSS timing function makes an animation run at a consistent speed from start to end --distractors--\nease\nease-in\nease-in-out\n--answer--\nlinear\n--question--\n--text--\nWhat does the @keyframes at-rule define in CSS --distractors--\nThe colors of a CSS gradient The angles of a CSS rotation The dimensions of an element --answer--\nThe stages of a CSS animation --question--\n--text--\nWhat is the purpose of the translateX() function in CSS --distractors--\nIt changes the opacity of the element It rotates the element It repositions the element vertically --answer--\nIt repositions the element horizontally --question--\n--text--\nWhich of the following is NOT a potential concern with CSS animations --distractors--\nThey may cause discomfort or physical harm to certain users Users may find them distracting Overuse can lead to poor performance --answer--\nThey can enhance user experience --question--\n--text--\nWhere is the @keyframes at-rule defined --distractors--\nWithin the body element of an HTML file Within the head element of an HTML file Within a CSS class definition --answer--\nAt the top level, outside of any CSS selectors --question--\n--text--\nWhich CSS property allows you to pause and resume an animation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "bc63857198130197e481518e9082d7fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "or physical harm to certain users Users may find them distracting Overuse can lead to poor performance --answer-- They can enhance user experience --question-- --text-- Where is the @keyframes at-rule defined --distractors-- Within the body element of an HTML file Within the head element of an HTML file Within a CSS class definition --answer-- At the top level, outside of any CSS selectors --question-- --text-- Which CSS property allows you to pause and resume an animation--distractors--\nanimation-timing-function\nanimation-delay\nanimation-direction\n--answer--\nanimation-play-state\n--question--\n--text--\nWhat value should be assigned to the animation-name property in CSS --distractors--\nThe duration of the animation in seconds The timing function used for the animation The delay before the animation starts in seconds --answer--\nThe name of the animation defined by the @keyframes --question--\n--text--\nWhat does this @keyframe at-rule do to the animated element css\n@keyframes animation {\n0% {\ntransform: translateX(-50px);\n}\n100% {\ntransform: translateX(100px);\n}\n}\n--distractors--\nIt rotates the element 90 degrees clockwise It changes the color of the element to blue It scales the element to 50% of its initial size and then to 100% of its initial size --answer--\nIt moves the element horizontally from -50px to 100px, relative to its starting point --question--\n--text--\nWhich CSS property defines how an animation progresses over time --distractors--\nanimation-delay\nanimation-fill-mode\nanimation-iteration-count\n--answer--\nanimation-timing-function\n--question--\n--text--\nWhich CSS property is used to specify that an animation should take 5 seconds to complete --distractors--\ncss\nanimation-name: 5s;\ncss\nanimation-delay: 5s;\ncss\nanimation-timing-function: 5s;\n--answer--\ncss\nanimation-duration: 5s;\n--question--\n--text--\nWhat does 50% represent in the following CSS @keyframe at-rule css\n@keyframes animation {\n0% {\ntransform: translateX(-50px);\n}\n50% {\ntransform: translateX(25px);\n}\n100% {\ntransform: translateX(100px);\n}\n}\n--distractors--\nThe starting point of the animation The ending point of the animation The speed of the animation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "3ec9362515987760ebf5df6f2b211afd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "used to specify that an animation should take 5 seconds to complete --distractors-- css animation-name: 5s; css animation-delay: 5s; css animation-timing-function: 5s; --answer-- css animation-duration: 5s; --question-- --text-- What does 50% represent in the following CSS @keyframe at-rule css @keyframes animation { 0% { transform: translateX(-50px); } 50% { transform: translateX(25px); } 100% { transform: translateX(100px); } } --distractors-- The starting point of the animation The ending point of the animation The speed of the animation--answer--\nThe halfway point of the animation --question--\n--text--\nWhat will happen when the property transform: translateX(200px); is applied --distractors--\nThe element will move 200px to the left The element will move 200px to the bottom The element will rotate 200 degrees clockwise --answer--\nThe element will move 200px to the right --question--\n--text--\nHow will the animation behave if animation-iteration-count is set to infinite --distractors--\nIt will run once and stop It will pause after the first iteration It will stop after three iterations --answer--\nIt will repeat indefinitely --question--\n--text--\nWhich @keyframes selector specifies the starting point of an animation --distractors--\n50%\n25%\n100%\n--answer--\n0%\n--question--\n--text--\nWhat properties can be specified using the animation shorthand CSS property --distractors--\nOnly the name of the animation The name and duration of the animation The name, duration, and delay of the animation --answer--\nAll animation properties --question--\n--text--\nWhich CSS property is used to apply an animation defined by an @keyframes at-rule --distractors--\nanimation-duration\napply\ntranslate\n--answer--\nanimation\n--question--\n--text--\nWhich CSS property allows you to set a time before the animation begins --distractors--\nanimation-fill-mode\nanimation-timing-function\nanimation-iteration-count\n--answer--\nanimation-delay\n--quiz--\n--question--\n--text--\nWhat does the CSS animation-delay property do --distractors--\nSets how long the animation lasts Specifies the timing function Defines animation direction --answer--\nDelays the start of the animation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "6b8b1d01daf40e56e5b96c01a23a53cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "animation properties --question-- --text-- Which CSS property is used to apply an animation defined by an @keyframes at-rule --distractors-- animation-duration apply translate --answer-- animation --question-- --text-- Which CSS property allows you to set a time before the animation begins --distractors-- animation-fill-mode animation-timing-function animation-iteration-count --answer-- animation-delay --quiz-- --question-- --text-- What does the CSS animation-delay property do --distractors-- Sets how long the animation lasts Specifies the timing function Defines animation direction --answer-- Delays the start of the animation--question--\n--text--\nWhich animation property specifies how the element should be styled before and after the animation --distractors--\nanimation-delay\nanimation-direction\nanimation-iteration-count\n--answer--\nanimation-fill-mode\n--question--\n--text--\nWhy should CSS animations be used in moderation --distractors--\nToo many CSS animations can lead to styles breaking as well as inconsistent styles across different browsers Too many CSS animations can lead to lower or non existent rankings in search engine results Too many CSS animations will automatically crash the server and increase the likelihood for security risks --answer--\nToo many CSS animations can lead to poor performance and may be distracting or problematic for users with certain accessibility needs --question--\n--text--\nWhich animation property determines whether the animation should play forwards, backwards, or alternate --distractors--\nanimation-fill-mode\nanimation-delay\nanimation-timing-function\n--answer--\nanimation-direction\n--question--\n--text--\nWhich CSS media query detects if the user has requested minimal animations or motion effects --distractors--\nreduce-motion\nmin-motion-preference\nmotion-preferences\n--answer--\nprefers-reduced-motion\n--question--\n--text--\nWhich property sets how many times an animation repeats --distractors--\nanimation-duration\nanimation-count\nanimation-delay\n--answer--\nanimation-iteration-count\n--question--\n--text--\nWhich CSS rule is used to define the stages and styles of an animation at various points during its duration --distractors--\n@style\n@transition\n@transform\n--answer--\n@keyframes\n--question--\n--text--\nInside the reduced‑motion media query, which declaration disables transitions --distractors--\nanimation: none;\ntransition: remove;\nanimation-play-state: paused;\n--answer--\ntransition: none;\n--question--\n--text--\nWhat does the animation-play-state property allow you to do",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "7371089e2bc3e2eb804e14681d1679df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- Which property sets how many times an animation repeats --distractors-- animation-duration animation-count animation-delay --answer-- animation-iteration-count --question-- --text-- Which CSS rule is used to define the stages and styles of an animation at various points during its duration --distractors-- @style @transition @transform --answer-- @keyframes --question-- --text-- Inside the reduced‑motion media query, which declaration disables transitions --distractors-- animation: none; transition: remove; animation-play-state: paused; --answer-- transition: none; --question-- --text-- What does the animation-play-state property allow you to do--distractors--\nSet how many times the animation repeats Specify how long the animation takes to complete Determine the direction in which the animation plays --answer--\nPause and resume the animation --question--\n--text--\nWhich of the following is a good practice when working with animations --distractors--\nUse as many flashing colors and rapid movements as possible to grab attention Avoid testing animations on different devices or screen sizes Make animations last as long as possible to ensure users notice them --answer--\nAvoid content that flashes more than three times per second to prevent triggering seizures or causing discomfort --question--\n--text--\nWhy is the important declaration used in the CSS rules --distractors--\nTo prevent other media queries from loading To limit styles to the first child element To debug CSS more easily --answer--\nTo ensure these rules take precedence over other styles --question--\n--text--\nWhat does animation-iteration-count: 1 important; ensure in CSS --distractors--\nThat animations are paused That animations run infinitely That animations reverse direction each cycle --answer--\nThat any looping animations only play once --question--\n--text--\nWhat CSS property is used to specify how long an animation should take to complete --distractors--\nanimation-delay\nanimation-timing-function\nanimation-iteration-count\n--answer--\nanimation-duration\n--question--\n--text--\nWhich property is NOT part of the animation shorthand --distractors--\nanimation-delay\nanimation-timing-function\nanimation-direction\n--answer--\nanimation-transform\n--question--\n--text--\nWhat does the @keyframes rule define --distractors--\nThe timing function of an animation The default state of an element The media queries for animations --answer--\nThe sequence of styles at different points in an animation --question--\n--text--\nWhat does this @keyframe at-rule do to the animated element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "736c540178839e33194ef40333e9a668",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should take to complete --distractors-- animation-delay animation-timing-function animation-iteration-count --answer-- animation-duration --question-- --text-- Which property is NOT part of the animation shorthand --distractors-- animation-delay animation-timing-function animation-direction --answer-- animation-transform --question-- --text-- What does the @keyframes rule define --distractors-- The timing function of an animation The default state of an element The media queries for animations --answer-- The sequence of styles at different points in an animation --question-- --text-- What does this @keyframe at-rule do to the animated elementcss\n@keyframes fade-in {\n0% {\nopacity: 0;\n}\n100% {\nopacity: 1;\n}\n}\n--distractors--\nIt scales the element up from 0% to 100% It moves the element from left to right It changes the text color to black --answer--\nIt makes the element fade in by gradually increasing its transparency --question--\n--text--\nIn a keyframes rule, what does 100% represent --distractors--\nThe start of the animation The halfway point The easing function --answer--\nThe end of the animation --question--\n--text--\nWhich property controls the pace of an animation over its duration --distractors--\nanimation-duration\nanimation-delay\nanimation-iteration-count\n--answer--\nanimation-timing-function\n--question--\n--text--\nWhat should developers consider when implementing animations to maintain accessibility --distractors--\nRely entirely on JavaScript for all animations Add frequent and intense animations for impact Include only bold, fast, and surprising effects --answer--\nUse subtle, intentional effects, honor preferences, and offer user control --question--\n--text--\nWhich of the following is the correct syntax to slide an element in from the left --distractors--\ncss\n@keyframes slide-in {\n0 {\ntransform: translate(-100%);\n}\n100 {\ntransform: translate(0);\n}\n}\ncss\n@keyframes slide-in {\nfrom {\ntranslateX(-100%);\n}\nto {\ntranslateX(0);\n}\n}\ncss\n@keyframes slide-in {\nstart {\ntransform: moveX(-100%);\n}\nend {\ntransform: moveX(0);\n}\n}\n--answer--\ncss\n@keyframes slide-in {\n0% {\ntransform: translateX(-100%);\n}\n100% {\ntransform: translateX(0);\n}\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12888,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-animations\\66ed8fc9f45ce3ece4053eae.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "a5e3d7f3d0e178be2c092e8ef081a08b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fd7f45ce3ece4053eb0\ntitle: CSS Backgrounds and Borders Quiz\nchallengeType: 8\ndashedName: quiz-css-backgrounds-and-borders\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich CSS property is used to specify the image to be used as a list item marker --distractors--\nlist-style-position\nbackground-image\ncontent-image\n--answer--\nlist-style-image\n--question--\n--text--\nWhich property is used to control the position of the list item marker --distractors--\nlist-style-type\nlist-position\nposition-marker\n--answer--\nlist-style-position\n--question--\n--text--\nWhat does the line-height property do --distractors--\nIt is used to set the background size for an element It is used to style links that have not be visited by the user It is used to create space to the right of list items --answer--\nIt is used to create space between lines of text --question--\n--text--\nWhich pseudo-class is used to style links when a user hovers over them --distractors--\n:hovered\n:hovering\n:hasHovered\n--answer--\n:hover\n--question--\n--text--\nWhat is the default value for the background-repeat property --distractors--\nno-repeat\nrepeat-x\nspace\n--answer--\nrepeat\n--question--\n--text--\nWhich CSS property can be used to control the size of a background image --distractors--\nimage-size\nbackground-fit\nsize-image\n--answer--\nbackground-size\n--question--\n--text--\nWhich of the following is the correct way to apply a solid red top border to an element --distractors--\nset-top-border: 3px solid red;\nborder-top: apply 3px solid red;\ntop-border: 3px solid red;\n--answer--\nborder-top: 3px solid red;\n--question--\n--text--\nWhich of the following is NOT a valid border property --distractors--\nborder-bottom\nborder-right\nborder-top\n--answer--\nborder-side\n--question--\n--text--\nWhich of the following is a valid border-style value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "fa2df5e462c6c01236b883a7b59f48be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "background image --distractors-- image-size background-fit size-image --answer-- background-size --question-- --text-- Which of the following is the correct way to apply a solid red top border to an element --distractors-- set-top-border: 3px solid red; border-top: apply 3px solid red; top-border: 3px solid red; --answer-- border-top: 3px solid red; --question-- --text-- Which of the following is NOT a valid border property --distractors-- border-bottom border-right border-top --answer-- border-side --question-- --text-- Which of the following is a valid border-style value--distractors--\nwave\ntriple\nzig zag\n--answer--\ndotted\n--question--\n--text--\nWhich of the following is the correct way to apply borders using the shorthand property --distractors--\ncss box {\nborders: 1px solid black;\n}\ncss box {\nborderShort: 1px solid black;\n}\ncss box {\nborder-short: 1px solid black;\n}\n--answer--\ncss box {\nborder: 1px solid black;\n}\n--question--\n--text--\nWhat is the role of the linear-gradient function --distractors--\nIt is used to set the style of an element's border It is used to determine how background images should be repeated along the horizontal and vertical axes It is used to style an element that was activated by the user --answer--\nIt is used to create a transition between multiple colors along a straight line --question--\n--text--\nWhich value for the background-repeat property ensures the image repeats horizontally but not vertically --distractors--\nrepeat-y\nspace\nno-repeat\n--answer--\nrepeat-x\n--question--\n--text--\nWhat is the purpose of the border-radius property --distractors--\nTo create shadows around the border To change the width of the border To make the border disappear --answer--\nTo round the corners of an element --question--\n--text--\nWhich of the following is NOT a valid value for the background-position property --distractors--\ntop\ncenter\nbottom\n--answer--\nside\n--question--\n--text--\nWhich of the following background-repeat values can be used to repeat a background image vertically --distractors--\nrepeat-x\nvertical-only\nstretch\n--answer--\nrepeat-y\n--question--\n--text--\nWhat does background-position: center; do to a background image",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "a43ba3238f19459a09deeebc00bf2f4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "border To change the width of the border To make the border disappear --answer-- To round the corners of an element --question-- --text-- Which of the following is NOT a valid value for the background-position property --distractors-- top center bottom --answer-- side --question-- --text-- Which of the following background-repeat values can be used to repeat a background image vertically --distractors-- repeat-x vertical-only stretch --answer-- repeat-y --question-- --text-- What does background-position: center; do to a background image--distractors--\nIt aligns the background image to the top of the element It repeats the background image horizontally and vertically It scales the background image to fill the entire element --answer--\nIt positions the background image in the center of the element --question--\n--text--\nWhich of these is NOT a valid border value --distractors--\n1px solid black\n3px dotted blue\n2px dashed red\n--answer--\n5px inverted green\n--question--\n--text--\nWhat does the radial-gradient function do --distractors--\nIt creates a background that transitions between multiple colors along a straight line It specifies whether the background image should scroll with the content or remain fixed in place It is used to style an element that was activated by the user --answer--\nIt creates an image that radiates from a particular point and gradually transitions between multiple colors --question--\n--text--\nWhich of the following is NOT a valid pseudo-class --distractors--\n:focus\n:visited\n:link\n--answer--\n:before\n--question--\n--text--\nWhich of the following shows the background shorthand property being used properly --distractors--\ncss\nbody {\nbackground: apply url(\"example-url-goes-here\");\n}\ncss\nbody {\nbackground: set url(\"example-url-goes-here\");\n}\ncss\nbody {\nbackground: 2px solid red url(\"example-url-goes-here\");\n}\n--answer--\ncss\nbody {\nbackground: no-repeat url(\"example-url-goes-here\");\n}\n--quiz--\n--question--\n--text--\nWhat kind of values can the line-height property accept --distractors--\nOnly pixel values\nOnly keyword values like inherit\nOnly em units\n--answer--\nNumbers, percentages, and length units\n--question--\n--text--\nWhich of the following is not a valid value for line-height",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "7d2be298b816b7b82d1a5895755e1b80",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "properly --distractors-- css body { background: apply url(\"example-url-goes-here\"); } css body { background: set url(\"example-url-goes-here\"); } css body { background: 2px solid red url(\"example-url-goes-here\"); } --answer-- css body { background: no-repeat url(\"example-url-goes-here\"); } --quiz-- --question-- --text-- What kind of values can the line-height property accept --distractors-- Only pixel values Only keyword values like inherit Only em units --answer-- Numbers, percentages, and length units --question-- --text-- Which of the following is not a valid value for line-height--distractors--\nnormal\n150%\n2em\n--answer--\nbold\n--question--\n--text--\nWhat does list-style-type control --distractors--\nThe position of a list marker\nThe spacing of list items\nThe alignment of list items\n--answer--\nThe marker symbol used in a list\n--question--\n--text--\nWhich value is not valid for list-style-type --distractors--\ncircle\ndisc\nsquare\n--answer--\nhexagon\n--question--\n--text--\nWhat are the two acceptable values for list-style-position --distractors--\ntop and bottom\ninline and block\nleft and right\n--answer--\ninside and outside\n--question--\n--text--\nWhich CSS property adds spacing outside each list item to improve readability --distractors--\npadding\nline-height\ntext-indent\n--answer--\nmargin\n--question--\n--text--\nWhat does the :link pseudo-class target --distractors--\nAll hyperlinks\nHovered links\nAlready visited links\n--answer--\nUnvisited links\n--question--\n--text--\nWhat pseudo-class styles a link when the user has already clicked on it --distractors--\n:hover\n:link\n:focus\n--answer--\n:visited\n--question--\n--text--\nWhich pseudo-class styles an element when it gains input focus --distractors--\n:hover\n:visited\n:target\n--answer--\n:focus\n--question--\n--text--\nWhen does the :active pseudo-class apply --distractors--\nWhen the link is first loaded\nWhen the user is not interacting\nWhen the browser finishes rendering\n--answer--\nWhen a user clicks or taps the element\n--question--\n--text--\nWhich pseudo-class is used for hover effects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "e947c167c44e6f7ca0da2671e5d8d594",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "when the user has already clicked on it --distractors-- :hover :link :focus --answer-- :visited --question-- --text-- Which pseudo-class styles an element when it gains input focus --distractors-- :hover :visited :target --answer-- :focus --question-- --text-- When does the :active pseudo-class apply --distractors-- When the link is first loaded When the user is not interacting When the browser finishes rendering --answer-- When a user clicks or taps the element --question-- --text-- Which pseudo-class is used for hover effects--distractors--\n:link\n:click\n:active\n--answer--\n:hover\n--question--\n--text--\nWhat does background-size: cover do --distractors--\nRepeats the image in all directions\nCrops the image\nFixes the image in one position\n--answer--\nScales the image to fill the element while preserving aspect ratio\n--question--\n--text--\nWhich value of background-repeat will repeat the background image both horizontally and vertically --distractors--\nno-repeat\nrepeat-x\nspace\n--answer--\nrepeat\n--question--\n--text--\nWhich property sets where the background image is placed --distractors--\nbackground-location\nbackground-origin\nbackground-place\n--answer--\nbackground-position\n--question--\n--text--\nWhat value of background-attachment keeps the image fixed when scrolling --distractors--\nscroll\nstatic\nsticky\n--answer--\nfixed\n--question--\n--text--\nWhich of the following correctly sets a background image that doesn’t repeat and is centered --distractors--\nbackground: no-repeat-center img(\"img png\");\nbackground: image url(\"img png\") center;\nbackground-position: center no-repeat url(\"img png\");\n--answer--\nbackground: center no-repeat url(\"img png\");\n--question--\n--text--\nWhich property is used to set the top, right, bottom, and left borders in a single declaration --distractors--\nborder-style\nborder-radius\noutline\n--answer--\nborder\n--question--\n--text--\nWhat effect does setting border-radius: 10px; have on an element --distractors--\nIt changes the border's opacity\nIt creates a 10-pixel border\nIt adds a 10px shadow\n--answer--\nIt rounds the corners of the element\n--question--\n--text--\nWhich of the following CSS rules correctly creates a linear gradient from red to yellow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "b10904d6fcdfe4d9f6543b38a36b4945",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Which property is used to set the top, right, bottom, and left borders in a single declaration --distractors-- border-style border-radius outline --answer-- border --question-- --text-- What effect does setting border-radius: 10px; have on an element --distractors-- It changes the border's opacity It creates a 10-pixel border It adds a 10px shadow --answer-- It rounds the corners of the element --question-- --text-- Which of the following CSS rules correctly creates a linear gradient from red to yellow--distractors--\nbackground: gradient-linear(red to yellow);\nbackground: linear(red, yellow);\nbackground-color: gradient(red, yellow);\n--answer--\nbackground: linear-gradient(red, yellow);\n--question--\n--text--\nWhich of the following CSS declarations correctly applies a radial gradient from white in the center to blue at the edges --distractors--\nbackground: linear-gradient(white to blue);\nbackground: gradient-radial(white to blue);\nbackground: radial-gradient(blue, white);\n--answer--\nbackground: radial-gradient(white, blue);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-backgrounds-and-borders\\66ed8fd7f45ce3ece4053eb0.md",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "ef8ecf1c35b5b16fda66cd64d42bcc76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fe1f45ce3ece4053eb1\ntitle: CSS Colors Quiz\nchallengeType: 8\ndashedName: quiz-css-colors\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of these color systems cannot be used to set a color in CSS --distractors--\nRGB\nHSL\nHEX\n--answer--\nCMYK\n--question--\n--text--\nWhat are the primary colors in color theory --distractors--\nGreen, Blue, Purple\nOrange, Green, Purple\nYellow, Green, Red\n--answer--\nYellow, Blue, Red\n--question--\n--text--\nWhich type of color scheme uses colors that are opposite each other on the color wheel --distractors--\nAnalogous\nTriadic\nMonochromatic\n--answer--\nComplementary\n--question--\n--text--\nWhich type of color scheme uses colors that are adjacent to each other on the color wheel --distractors--\nComplementary\nTriadic\nMonochromatic\n--answer--\nAnalogous\n--question--\n--text--\nWhat is the term for colors that are created by mixing equal parts of two primary colors --distractors--\nTertiary\nComplementary\nAnalogous\n--answer--\nSecondary\n--question--\n--text--\nWhat is the default value of alpha in rgba if it's not specified --distractors--\n0 (completely transparent)\n2 (completely opaque)\n0 5 (half transparent)\n--answer--\n1 (completely opaque)\n--question--\n--text--\nWhich of the following is a valid hex color code --distractors--\n#12345G\n#12ffg0\n#12ffgg\n--answer--\n#ff12ff\n--question--\n--text--\nHow many hexadecimal characters are used to define a color in shorthand hex notation --distractors--\n5\n4\n2\n--answer--\n3\n--question--\n--text--\nWhich of these functions allows specifying the transparency of a color --distractors--\nrgb()\nhsl()\nalpha()\n--answer--\nrgba()\n--question--\n--text--\nWhich of the following hex codes represents a shade of red",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "45d341be8674b9ca408564e2151253b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--answer-- 1 (completely opaque) --question-- --text-- Which of the following is a valid hex color code --distractors-- #12345G #12ffg0 #12ffgg --answer-- #ff12ff --question-- --text-- How many hexadecimal characters are used to define a color in shorthand hex notation --distractors-- 5 4 2 --answer-- 3 --question-- --text-- Which of these functions allows specifying the transparency of a color --distractors-- rgb() hsl() alpha() --answer-- rgba() --question-- --text-- Which of the following hex codes represents a shade of red--distractors--\n#0000ff\n#ffff00\n#00ff00\n--answer--\n#ff0000\n--question--\n--text--\nHow many colors are required to create a valid CSS gradient --distractors--\nAt least 4 Exactly 2 Exactly 3 --answer--\nAt least 2 --question--\n--text--\nWhich is NOT a valid way to apply a linear-gradient --distractors--\ncss\nbackground: linear-gradient(to right, red, blue);\ncss\nbackground: linear-gradient(90deg, red, green, blue);\ncss\nbackground: linear-gradient(#F00, #00F);\n--answer--\ncss\nbackground: linear-gradient(up, red, blue);\n--question--\n--text--\nWhat unit is used to express the lightness value in the hsl color model --distractors--\nDegrees\nHex\nPixels\n--answer--\nPercent\n--question--\n--text--\nWhat does the rgb() function stand for --distractors--\nRed, Gray, Black\nRadiant, Glow, Blend\nRendered, Graphic, Background\n--answer--\nRed, Green, Blue\n--question--\n--text--\nWhat does the hsl() function stand for --distractors--\nHue, Saturation, Luminosity\nHue, Shadow, Lightness\nHue, Shadow, Luminosity\n--answer--\nHue, Saturation, Lightness\n--question--\n--text--\nWhich of these is a valid CSS named color --distractors--\nhsl(yellow)\nrgb(red)\n#blue\n--answer--\ngold\n--question--\n--text--\nWhat is the maximum value allowed for a single color component in the RGB color system",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "994cb13d7bfbfab258cab0eb4b83f714",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "rgb() function stand for --distractors-- Red, Gray, Black Radiant, Glow, Blend Rendered, Graphic, Background --answer-- Red, Green, Blue --question-- --text-- What does the hsl() function stand for --distractors-- Hue, Saturation, Luminosity Hue, Shadow, Lightness Hue, Shadow, Luminosity --answer-- Hue, Saturation, Lightness --question-- --text-- Which of these is a valid CSS named color --distractors-- hsl(yellow) rgb(red) #blue --answer-- gold --question-- --text-- What is the maximum value allowed for a single color component in the RGB color system--distractors--\n200\n500\n128\n--answer--\n255\n--question--\n--text--\nWhich of these correctly uses one of the color models to set the background color --distractors--\ncss\nbackground: rgb(50%, 255, 155);\ncss\nbackground: #blue;\ncss\nbackground: #0I0I0I;\n--answer--\ncss\nbackground: hsl(50, 50%, 50%);\n--question--\n--text--\nWhich of these sets the opacity of the color --distractors--\ncss\nhsl(0, 20%, 30%, 50%)\ncss\nrgb(20, 30, 80, 0 5)\ncss\nrgba(20, 30, 80)\n--answer--\ncss\nhsla(0, 20%, 30%, 50%)\n--question--\n--text--\nWhich of the following is the correct way to give an element a top-to-bottom red-to-blue gradient background --distractors--\ncss\nbackground: radial-gradient(red, blue)\ncss\nbackground: radial-gradient(blue, red)\ncss\nbackground: linear-gradient(blue, red)\n--answer--\ncss\nbackground: linear-gradient(red, blue)\n--quiz--\n--question--\n--text--\nWhat are the 3 secondary colors in color theory --distractors--\nBlue, Orange, Yellow\nPurple, Green, Yellow\nGreen, Orange, Pink\n--answer--\nGreen, Orange, Purple\n--question--\n--text--\nWhat feelings do warm colors evoke",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "7cc1dcff2e456efc94b15d5e2abc8051",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "css hsla(0, 20%, 30%, 50%) --question-- --text-- Which of the following is the correct way to give an element a top-to-bottom red-to-blue gradient background --distractors-- css background: radial-gradient(red, blue) css background: radial-gradient(blue, red) css background: linear-gradient(blue, red) --answer-- css background: linear-gradient(red, blue) --quiz-- --question-- --text-- What are the 3 secondary colors in color theory --distractors-- Blue, Orange, Yellow Purple, Green, Yellow Green, Orange, Pink --answer-- Green, Orange, Purple --question-- --text-- What feelings do warm colors evoke--distractors--\nSubtlety, Isolation, Loneliness\nClarity, Freshness, Cleanliness\nMelancholy, Nonchalance, Frostiness\n--answer--\nComfort, Warmth, Coziness\n--question--\n--text--\nWhich type of color scheme uses colors that are equidistant from each other on the color wheel --distractors--\nComplementary\nAnalogous\nMonochromatic\n--answer--\nTriadic\n--question--\n--text--\nWhich type of color scheme uses colors that are derived from the same base color --distractors--\nComplementary\nAnalogous\nTriadic\n--answer--\nMonochromatic\n--question--\n--text--\nWhat is the name of a circular diagram that shows how colors relate to each other --distractors--\nSwatch Wheel\nColor Picker\nShade Spiral\n--answer--\nColor Wheel\n--question--\n--text--\nWhich of these is not a tertiary color --distractors--\nYellow-Green\nBlue-Green\nBlue-Violet\n--answer--\nYellow-Blue\n--question--\n--text--\nWhat are the three primary colors of light --distractors--\nRed, Yellow, Blue\nRed, Green, Purple\nRed, Green, Brown\n--answer--\nRed, Green, Blue\n--question--\n--text--\nWhat does the alpha value control in rgba --distractors--\nHue\nSaturation\nIntensity\n--answer--\nTransparency\n--question--\n--text--\nWhich of these functions is a valid hsl function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "0264716633c18d13c5cdf5eba50d2322",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Swatch Wheel Color Picker Shade Spiral --answer-- Color Wheel --question-- --text-- Which of these is not a tertiary color --distractors-- Yellow-Green Blue-Green Blue-Violet --answer-- Yellow-Blue --question-- --text-- What are the three primary colors of light --distractors-- Red, Yellow, Blue Red, Green, Purple Red, Green, Brown --answer-- Red, Green, Blue --question-- --text-- What does the alpha value control in rgba --distractors-- Hue Saturation Intensity --answer-- Transparency --question-- --text-- Which of these functions is a valid hsl function--distractors--\nhsl(0, 100%, 50)\nhsl(0%, 100%, 50%)\nhsl(0, 100%, 150%)\n--answer--\nhsl(0, 100%, 50%)\n--question--\n--text--\nWhich of these hsl functions represents the color black --distractors--\nhsl(255,100%,100%)\nhsl(0,0%,100%)\nhsl(283,0%,75%)\n--answer--\nhsl(255,100%,0%)\n--question--\n--text--\nWhat is \"hex code\" short for --distractors--\nHexagonal code\nHexabinary code\nHexaglyphic code\n--answer--\nHexadecimal code\n--question--\n--text--\nWhich letters can be used in a hex code --distractors--\nA-G\nA-H\nA-E\n--answer--\nA-F\n--question--\n--text--\nWhich digits can be used in a hex code --distractors--\n0-10\n10-19\n1-9\n--answer--\n0-9\n--question--\n--text--\nWhat’s the maximum hue value in an hsl color --distractors--\n100\n255\n60\n--answer--\n360\n--question--\n--text--\nWhat’s the fourth value in the hsla() function --distractors--\nAbsorbtion\nAura\nAperture\n--answer--\nAlpha\n--question--\n--text--\nLinear gradients create a gradual blend across what type of line --distractors--\nCurved\nCircular\nPerpendicular\n--answer--\nStraight\n--question--\n--text--\nWhat types of color codes can be used in a gradient",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4f29ec6b4c415bb024c2ff2f869e2f68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "used in a hex code --distractors-- 0-10 10-19 1-9 --answer-- 0-9 --question-- --text-- What’s the maximum hue value in an hsl color --distractors-- 100 255 60 --answer-- 360 --question-- --text-- What’s the fourth value in the hsla() function --distractors-- Absorbtion Aura Aperture --answer-- Alpha --question-- --text-- Linear gradients create a gradual blend across what type of line --distractors-- Curved Circular Perpendicular --answer-- Straight --question-- --text-- What types of color codes can be used in a gradient--distractors--\nHex code and HSL\nHSL and RGB\nRGB and Hex code\n--answer--\nAny CSS color\n--question--\n--text--\nHow many color stops can you have in one gradient --distractors--\nUp to 2\nUp to 3\nUp to 5\n--answer--\nUnlimited\n--question--\n--text--\nWhich of these is NOT a valid radial gradient --distractors--\nradial-gradient(circle, red, blue)\nradial-gradient(circle, #33ff11, rgb(255,0,255))\nradial-gradient(circle, #bbb123, blue, rgb(255,0,255))\n--answer--\nradial-gradient(45deg, red, blue)\n--question--\n--text--\nWhich of these is NOT a valid gradient --distractors--\nradial-gradient(circle, red, blue, green)\nlinear-gradient(80deg, red, #44bb23, rgba(200,255,0,0 5))\nradial-gradient(circle, red, #1168ff, rgba(200,255,0,0 5), hsl(120,100%,50%))\n--answer--\nlinear-gradient(30deg, blue, hsl(120%,100%,50%))",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-colors\\66ed8fe1f45ce3ece4053eb1.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "9838e3368d140ba7218be3e2d0b3278c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66df3b712c41c499e9d31e5b\ntitle: Basic HTML Quiz\nchallengeType: 8\ndashedName: quiz-basic-html\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nHow does the loop attribute work inside the audio element --distractors--\nIt allows the audio element to synchronize playback with other multimedia elements on the webpage It adjusts the pitch and tone of the audio It triggers the audio element to stop and restart playback in a random sequence --answer--\nIt starts the audio again once it is finished --question--\n--text--\nWhat is a void element in HTML --distractors--\nAn element used to embed videos on the screen An element for displaying lists An element used for embedding sound in to the document --answer--\nAn element without any content or an end tag --question--\n--text--\nWhich of the following is a correct value for the id attribute --distractors--\nid=\"main@content\"\nid=\"main content\"\nid=\"main~content\"\n--answer--\nid=\"main-content\"\n--question--\n--text--\nHow does target=\"_parent\" work --distractors--\nIt opens a link in a new browsing context It specifies the position within the linked document where the browser should scroll to after clicking the link It redirects the user to a different website specified in the href attribute --answer--\nIt opens a link in the parent of the current context --question--\n--text--\nWhat is the difference between a boolean and regular attribute --distractors--\nBoolean attributes can only be used with checkboxes, while regular attribute are used with radio buttons Regular attributes are always required for images, while boolean attributes are optional Boolean attributes must always have a value assigned to them, while regular attributes do not need values assigned to them --answer--\nA boolean attribute can be present or absent, while a regular attribute always has a specified value --question--\n--text--\nWhich element is used to link scripts to your HTML file --distractors--\nimg\nul\nh2\n--answer--\nscript\n--question--\n--text--\nWhat is an HTML boilerplate --distractors--\nA special tool used by web developers to add watermarks to documents A type of markup language A plugin that automatically generates \"lorem ipsum\" text on the page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "51af124c9af8561c7054a4fac1e0cdf5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assigned to them --answer-- A boolean attribute can be present or absent, while a regular attribute always has a specified value --question-- --text-- Which element is used to link scripts to your HTML file --distractors-- img ul h2 --answer-- script --question-- --text-- What is an HTML boilerplate --distractors-- A special tool used by web developers to add watermarks to documents A type of markup language A plugin that automatically generates \"lorem ipsum\" text on the page--answer--\nA template that includes all of the essential information needed for an HTML document --question--\n--text--\nWhich attribute applies a unique identifier to an HTML element --distractors--\nclass\nhref\naction\n--answer--\nid\n--question--\n--text--\nWhat is an HTML entity (character reference) --distractors--\nA graphical representation of a character in HTML A special formatting tag used in HTML An image used to represent a character in web design --answer--\nA set of characters used to represent a reserved character in HTML --question--\n--text--\nWhat is the purpose of the audio element --distractors--\nIt is used to allow users to record their voice directly on a webpage It is used to style audio and video elements on the page It is used to make text on a webpage audible when clicked --answer--\nIt is used to add audio to the HTML document --question--\n--text--\nWhich of the following is NOT an example of an HTML element --distractors--\nimg\nh1\nlink\n--answer--\nbyte\n--question--\n--text--\nWhat is the role of the target attribute inside anchor elements --distractors--\nIt defines the color of the link when it is hovered over by the user It specifies the position within the linked document where the browser should scroll to after clicking the link It determines the font size of the anchor text inside the link element --answer--\nIt is used to specify where the linked document will be opened when the user clicks on the link --question--\n--text--\nWhat is an absolute path --distractors--\nA path that is relative to the current file A path that includes variables A path that includes wildcard characters --answer--\nA complete path to a resource, starting from the root directory --question--\n--text--\nWhat is the role of the link element in HTML --distractors--\nIt's used to create hyperlinks within the same webpage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "6c495dd0e78bfacf170bdbfbbe098c41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "where the linked document will be opened when the user clicks on the link --question-- --text-- What is an absolute path --distractors-- A path that is relative to the current file A path that includes variables A path that includes wildcard characters --answer-- A complete path to a resource, starting from the root directory --question-- --text-- What is the role of the link element in HTML --distractors-- It's used to create hyperlinks within the same webpageIt's used to define the layout and structure of a webpage It's used to embed audio or video files into a webpage --answer--\nIt's used to link to external resources like stylesheets and site icons --question--\n--text--\nWhich of the following is a valid value for working with open graph properties --distractors--\n\"og:socialMedia\"\n\"og:mediaOG\"\n\"og:openGraph\"\n--answer--\n\"og:title\"\n--question--\n--text--\nWhich of the following is an example of a boolean attribute --distractors--\nhref\nsrc\nwidth\n--answer--\nchecked\n--question--\n--text--\nWhich of the following is a correct syntax for the img element --distractors--\n<img src=\"image jpg\" alt=\"Description of the image\"></img>\n<img source=\"image jpg\" desc=\"Description of the image\"></img>\n<img src=\"image jpg\" desc=\"Description of the image\">\n--answer--\n<img src=\"image jpg\" alt=\"Description of the image\">\n--question--\n--text--\nWhat is the iframe element used for --distractors--\nIt's used to add captions to images It's used to add copyright information for media It's used to create hyperlinks within the same webpage --answer--\nIt's used to embed another document within the current HTML document --question--\n--text--\nWhich of the following is NOT a valid link state for anchor elements --distractors--\nhover\nvisited\nactive\n--answer--\nhref\n--question--\n--text--\nWhat is the role of the title element --distractors--\nAn element that allows users to edit the source code of a webpage It defines the layout and positioning of elements within a web page It's used to embed videos and multimedia content directly into an HTML document --answer--\nIt specifies the title for a document and appears in the browser tab or window --quiz--\n--question--\n--text--\nWhich of the following target attributes opens a link in the parent of the current context",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "38551dbac6f4011fc29b70dcc7a046f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "title element --distractors-- An element that allows users to edit the source code of a webpage It defines the layout and positioning of elements within a web page It's used to embed videos and multimedia content directly into an HTML document --answer-- It specifies the title for a document and appears in the browser tab or window --quiz-- --question-- --text-- Which of the following target attributes opens a link in the parent of the current context--distractors--\n_blank\n_self\n_unfencedTop\n--answer--\n_parent\n--question--\n--text--\nWhich attribute is used to set the UTF-8 character encoding for an HTML document --distractors--\naccept\ncapture\nenctype\n--answer--\ncharset\n--question--\n--text--\nWhat is the role of HTML on the web --distractors--\nHTML is used for style and layout HTML is used to add interactivity on the page HTML is a registry for software packages --answer--\nHTML represents the content and structure for a web page --question--\n--text--\nWhich image license works for the public domain --distractors--\nJPG\nCreative Commons BSD\n--answer--\nCreative Commons 0 --question--\n--text--\nHow do you set a boolean attribute to false --distractors--\nBy setting the attribute value to 0 By using the not operator before the attribute name By setting the attribute to an empty string (\"\") --answer--\nBy omitting the attribute from the element --question--\n--text--\nWhat is the script element used for --distractors--\nIt's used to embed CSS into the HTML document or link to an external CSS file It's used to embed Pascal code into the HTML document It's used to embed C# code into the HTML document --answer--\nIt's used to embed JavaScript into the HTML document or link to an external JavaScript file --question--\n--text--\nWhich of the following elements is used to set the title for an HTML document --distractors--\nfooter\nsection\nfigcaption\n--answer--\ntitle\n--question--\n--text--\nWhat is the class attribute typically used for --distractors--\nIt's used to embed metadata about the element It's used to define inline styles directly within the HTML tag It's used to specify unique identifiers for JavaScript functions --answer--\nIt's used to apply a set of styles to multiple elements --question--\n--text--\nWhich of the following is NOT an example of a commonly used HTML entity",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "bfc099c6f91bf4511f9488eaebd0702d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an HTML document --distractors-- footer section figcaption --answer-- title --question-- --text-- What is the class attribute typically used for --distractors-- It's used to embed metadata about the element It's used to define inline styles directly within the HTML tag It's used to specify unique identifiers for JavaScript functions --answer-- It's used to apply a set of styles to multiple elements --question-- --text-- Which of the following is NOT an example of a commonly used HTML entity--distractors--\n&quot; (Double quote) &copy; (Copyright symbol) &gt; (Greater than Symbol) --answer--\n&div; (div element) --question--\n--text--\nWhich element is used to add audio to your HTML document --distractors--\nmedia\nvideo\nhr\n--answer--\naudio\n--question--\n--text--\nWhere is the content represented on the page placed in an HTML document --distractors--\nIn between the head and the body elements Within the repr element Within the script element --answer--\nWithin the body element --question--\n--text--\nWhich attribute is used to start the audio again once it is finished --distractors--\nmultiple\ninputmode\nenctype\n--answer--\nloop\n--question--\n--text--\nWhich of the following is the correct syntax for a div element --distractors--\n<<div>>block container<</div>>\n>>div>>block container>>div>>\n[div]block container[/div]\n--answer--\n<div>block container</div>\n--question--\n--text--\nHow does target=\"_self\" work --distractors--\nIt specifies the position within the linked document where the browser should scroll to after clicking the link It automatically downloads the linked document to the user's computer It redirects the user to a different website specified in the href attribute --answer--\nIt opens a link in the current browsing context --question--\n--text--\nWhat is a relative path --distractors--\nIt specifies the exact location of a file or directory from the root directory of the file system It includes the full URL starting from the domain name to the specific file or directory It always begins with a forward slash (/) indicating the root directory of the website or file system --answer--\nIt specifies the location of a file or directory relative to the current working directory --question--\n--text--\nWhich of the following elements is the correct syntax for a link element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "322f9174301ba9a416a39988e1cc3dd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "file or directory from the root directory of the file system It includes the full URL starting from the domain name to the specific file or directory It always begins with a forward slash (/) indicating the root directory of the website or file system --answer-- It specifies the location of a file or directory relative to the current working directory --question-- --text-- Which of the following elements is the correct syntax for a link element--distractors--\n<link rel=\"stylesheet\" href=\" /styles css\"></link>\n</link rel=\"stylesheet\" href=\" /styles css\"></link>\n<<link rel=\"stylesheet\" href=\" /styles css\"></link>>\n--answer--\n<link rel=\"stylesheet\" href=\" /styles css\" />\n--question--\n--text--\nWhich of the following is NOT a valid value for working with open graph properties --distractors--\n\"og:title\"\n\"og:type\"\n\"og:image\"\n--answer--\n\"og:socialMedia\"\n--question--\n--text--\nWhich of the following is the correct syntax for a paragraph element --distractors--\n>p>paragraph element>/p>\n<<p>>paragraph element<</p>>\n<p>\n--answer--\n<p>paragraph element</p>\n--question--\n--text--\nWhat does the name of the iframe element stand for --distractors--\nInline Framing\nInner Frame\nInline video\n--answer--\nInline Frame\n--question--\n--text--\nWhat does the active state mean for anchor elements --distractors--\nThe link is disabled and cannot be clicked The mouse cursor is over the link The link has been visited by the user --answer--\nA user is actively clicking on it --quiz--\n--question--\n--text--\nWhich of the following will open the link in a new browser tab --distractors--\nhtml\n<a target=\"_parent\" href=\"https://freecatphotoapp com\">cat photos</a>\nhtml\n<a target=\"_top\" href=\"https://freecatphotoapp com\">cat photos</a>\nhtml\n<a target=\"_self\" href=\"https://freecatphotoapp com\">cat photos</a>\n--answer--\nhtml\n<a target=\"_blank\" href=\"https://freecatphotoapp com\">cat photos</a>\n--question--\n--text--\nWhich of the following is a void element --distractors--\ndiv\nsection\np\n--answer--\nimg\n--question--\n--text--\nWhich of the following is the correct way to use HTML entities",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "0f7ac00304487cba8af58237111e45c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "actively clicking on it --quiz-- --question-- --text-- Which of the following will open the link in a new browser tab --distractors-- html <a target=\"_parent\" href=\"https://freecatphotoapp com\">cat photos</a> html <a target=\"_top\" href=\"https://freecatphotoapp com\">cat photos</a> html <a target=\"_self\" href=\"https://freecatphotoapp com\">cat photos</a> --answer-- html <a target=\"_blank\" href=\"https://freecatphotoapp com\">cat photos</a> --question-- --text-- Which of the following is a void element --distractors-- div section p --answer-- img --question-- --text-- Which of the following is the correct way to use HTML entities--distractors--\n<p>This is an &lt&img /&gt& element</p>\n<p>This is an ;lt&img /;gt& element</p>\n<p>This is an ;lt;img /;gt; element</p>\n--answer--\n<p>This is an &lt;img /&gt; element</p>\n--question--\n--text--\nWhat is the ul element used for in HTML --distractors--\nIt is used to group a list of images only It is used to group a list of links only It is used to group an ordered list of items --answer--\nIt is used to group a bulleted list of items --question--\n--text--\nWhich of the following is the correct way to apply multiple classes to an HTML element --distractors--\n```html\n```\n```html\n```\n```html\n```\n--answer--\n```html\n```\n--question--\n--text--\nWhich of the following elements is used to represent an ordered list of items --distractors--\nspan\ndiv\nul\n--answer--\nol\n--question--\n--text--\nWhat are open graph properties used for --distractors--\nThese properties are used to embed interactive multimedia content directly into web pages These properties are used to generate dynamic pop-up advertisements on websites These properties are used to encrypt sensitive data transmitted between web servers and users' browsers --answer--\nThese properties are used to set how a website's content will be seen on different social media platforms --question--\n--text--\nWhich of the following is used to set a short description for a web page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "f44270a371f426809e16d99c91ed7fee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--distractors-- These properties are used to embed interactive multimedia content directly into web pages These properties are used to generate dynamic pop-up advertisements on websites These properties are used to encrypt sensitive data transmitted between web servers and users' browsers --answer-- These properties are used to set how a website's content will be seen on different social media platforms --question-- --text-- Which of the following is used to set a short description for a web page--distractors--\nhtml\n<meta\nadd=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\nhtml\n<meta\nset=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\nhtml\n<meta\ndescription=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\n--answer--\nhtml\n<meta\nname=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\n--question--\n--text--\nWhat does SVG stand for --distractors--\nScalable Vector Graph\nScalable Vistor Graphics\nSite Vector Graphics\n--answer--\nScalable Vector Graphics\n--question--\n--text--\nWhat is the role of the footer element --distractors--\nThis element is used to group related captions and images on a web page This element is used to create horizontal lines in between paragraphs on the page This element is used to create a list of ordered items at the bottom of the page --answer--\nThis element is used to group copyright content or related documents at the bottom of the page --question--\n--text--\nWhat is UTF-8 character encoding --distractors--\nIt is a standardized character encoding used to set the title for a web page It is a set of characters used to set the page description for the web page It is a special set of characters used in elements to improve media performance --answer--\nIt is a standardized character encoding widely used on the web --question--\n--text--\nWhich of the following is an example of a replaced element --distractors--\nslot\ndiv\np\n--answer--\niframe\n--question--\n--text--\nWhich of the following is considered the most important heading on a web page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "717cec2bd9624dd1012dd7dd2fd0099c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is a set of characters used to set the page description for the web page It is a special set of characters used in elements to improve media performance --answer-- It is a standardized character encoding widely used on the web --question-- --text-- Which of the following is an example of a replaced element --distractors-- slot div p --answer-- iframe --question-- --text-- Which of the following is considered the most important heading on a web page--distractors--\nh6\nh3\nh5\n--answer--\nh1\n--question--\n--text--\nWhich of the following elements is used to link to external resources like stylesheets and site icons --distractors--\na\np\ndiv\n--answer--\nlink\n--question--\n--text--\nWhich of the following elements is used to convey a sense of urgency, seriousness or strong importance --distractors--\nimportant\nheavy\nstrength\n--answer--\nstrong\n--question--\n--text--\nWhat is the role of the figcaption element --distractors--\nIt provides captions for the content inside a span element It provides captions for the content inside a slot element It provides captions for the content inside a div element --answer--\nIt provides captions for the content inside a figure element --question--\n--text--\nWhich of the following is the correct way to set the DOCTYPE declaration for an HTML document --distractors--\n<DOCTYPE>\n<*DOCTYPE html>\n<<DOCTYPE html>>\n--answer--\n< DOCTYPE html>\n--question--\n--text--\nWhat is the purpose of the head element in an HTML document --distractors--\nIt is a container of anchor elements for the HTML document It is a container of images for the HTML document It is a container of heading elements for the HTML document --answer--\nIt is a container of meta data for the HTML document --question--\n--text--\nWhich of the following is the correct way to set the language of the HTML document to english --distractors--\n<html lang-set=\"en\">\n<html set-lang=\"en\">\n<html language=\"en\">\n--answer--\n<html lang=\"en\">\n--question--\n--text--\nWhich of the following elements should NOT be placed inside of the head --distractors--\nlink\nmeta\ntitle\n--answer--\nimg\n--quiz--\n--question--\n--text--\nWhich of the following is NOT a correct statement about absolute and relative paths",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "2c5ed6a06e9cd2ed3e88a58879867ace",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "container of meta data for the HTML document --question-- --text-- Which of the following is the correct way to set the language of the HTML document to english --distractors-- <html lang-set=\"en\"> <html set-lang=\"en\"> <html language=\"en\"> --answer-- <html lang=\"en\"> --question-- --text-- Which of the following elements should NOT be placed inside of the head --distractors-- link meta title --answer-- img --quiz-- --question-- --text-- Which of the following is NOT a correct statement about absolute and relative paths--distractors--\nAbsolute paths start from the root directory, while relative paths depend on the location of the current file Relative paths are shorter and more flexible for linking within a website, while absolute paths include the full URL Both absolute and relative paths can be used to link to files within the same website --answer--\nRelative paths cannot use to move up directories, but absolute paths can --question--\n--text--\nWhich of the following is NOT a valid target attribute value in an a tag --distractors--\n_self\n_parent\n_top\n--answer--\n_main\n--question--\n--text--\nWhat is the purpose of the controls attribute in the audio element --distractors--\nIt defines the audio file format for the browser to use It automatically starts the audio when the page loads It specifies the audio file’s source URL --answer--\nIt adds built-in playback controls like play, pause, and volume adjustment --question--\n--text--\nWhich of the following elements improves SEO by providing a brief description of the web page --distractors--\nhtml\n<meta\ndescription=\"describe\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\nhtml\n<meta\nname=\"desc\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\nhtml\n<meta\ndescription=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\n--answer--\nhtml\n<meta\nname=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\n--question--\n--text--\nWhat does <meta charset=\"utf-8\" /> do --distractors--\nSets the language of the webpage to English Links an external CSS stylesheet",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "69a37cdab4834e4ae969dacdc6e335ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a thriving garden \" /> html <meta description=\"description\" content=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \" /> --answer-- html <meta name=\"description\" content=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \" /> --question-- --text-- What does <meta charset=\"utf-8\" /> do --distractors-- Sets the language of the webpage to English Links an external CSS stylesheetSpecifies the title of the webpage --answer--\nDefines the character encoding to ensure proper text display --question--\n--text--\nWhat is the difference between link and script elements in HTML --distractors--\nlink is for JavaScript files, and script is for CSS files Both link and script are used to style web pages script is for adding styles, and link is for running JavaScript --answer--\nlink is used to add styles from an external CSS file, while script is used to run JavaScript code --question--\n--text--\nWhich of the following statements about HTML classes and IDs is incorrect --distractors--\nA class name can be used multiple times throughout an HTML document The rel attribute defines the relationship between the linked resource and the HTML document The og:image property is used to specify the image displayed in social media posts --answer--\nID names cannot contain underscores and must be unique --question--\n--text--\nWhich of the following statements about HTML heading elements is true --distractors--\nThe text size increases from h1 to h6 The text size remains the same for all heading elements h3 is larger than h2 --answer--\nThe text size decreases from h1 to h6 --question--\n--text--\nWhich statement is incorrect about HTML elements --distractors--\nHTML elements are the basic building blocks of a webpage Some codebases include a forward slash (/) inside void elements A boolean attribute is one that works simply by being present or absent in a tag --answer--\nVoid elements contain content and only have a start tag --question--\n--text--\nWhich of the following statements about void elements in HTML is true --distractors--\nA void element must always include a forward slash / before closing A void element should never include a forward slash / The forward slash / is mandatory for self-closing void elements in all versions of HTML --answer--\nBoth <img> and <img/> are acceptable in modern HTML",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "da69ba630278704bf3701fbd6a33dc45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in a tag --answer-- Void elements contain content and only have a start tag --question-- --text-- Which of the following statements about void elements in HTML is true --distractors-- A void element must always include a forward slash / before closing A void element should never include a forward slash / The forward slash / is mandatory for self-closing void elements in all versions of HTML --answer-- Both <img> and <img/> are acceptable in modern HTML--question--\n--text--\nWhat is the primary purpose of comments in programming --distractors--\nTo make the code run faster To change how the browser displays content To store temporary data within the code --answer--\nTo leave notes for yourself and other developers in the code --question--\n--text--\nWhich target attribute opens a link in the same browsing context as the current one --distractors--\n_blank\n_top\n_parent\n--answer--\n_self\n--question--\n--text--\nWhat is the purpose of the em element in HTML --distractors--\nTo make text bigger To change the text color To underline words for emphasis --answer--\nTo highlight important text by making it italic --question--\n--text--\nWhat does the strong element do in HTML --distractors--\nIncreases the font size Changes the text color Underlines the text --answer--\nMakes text bold to show importance --question--\n--text--\nWhat is the main difference between the figure and figcaption elements in HTML --distractors--\nfigure is used for captions, while figcaption is used to group related content like images or diagrams figcaption must always be placed outside the figure element There is no difference; both are used for the same purpose --answer--\nfigure groups related content like images or diagrams, while figcaption provides a caption for that content\n--question--\n--text--\nWhy are HTML entities used --distractors--\nTo add styling to text To create hyperlinks in a webpage To increase the font size of special characters --answer--\nTo represent reserved characters like < and & in HTML --question--\n--text--\nWhich of the following statements about Open Graph tags is correct --distractors--\nOpen Graph tags are used to style a webpage with CSS Open Graph tags are only used for SEO and have no effect on social media Open Graph tags must be placed inside the body section of HTML --answer--\nThe og:title property sets the title that appears when content is shared on social media",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "130922613515aefd8eb35af0251488c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "reserved characters like < and & in HTML --question-- --text-- Which of the following statements about Open Graph tags is correct --distractors-- Open Graph tags are used to style a webpage with CSS Open Graph tags are only used for SEO and have no effect on social media Open Graph tags must be placed inside the body section of HTML --answer-- The og:title property sets the title that appears when content is shared on social media--question--\n--text--\nWhich of the following statements about image formats is incorrect --distractors--\nWEBP and AVIF are better for modern image optimization SVG images can scale without losing quality Compression helps reduce image file sizes --answer--\nPNG and JPG are the best formats for optimized images today --question--\n--text--\nWhat does the loop attribute do in the audio element --distractors--\nPlays the audio once Stops the audio after one play Slows down the audio playback --answer--\nRepeats the audio continuously --question--\n--text--\nWhich of the following best describes an HTML boilerplate --distractors--\nA special tool used by web developers to add watermarks to documents A browser plugin that speeds up webpage loading A coding framework exclusively for animations in HTML --answer--\nA predefined template containing essential HTML structure for web development",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-basic-html\\66df3b712c41c499e9d31e5b.md",
      "source_type": "git_repo"
    },
    "token_count": 255,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "a94a03f24efdfce26c54b2ed49977168",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-libraries-and-frameworks\\66f1aeb60b11aec5abe83c2e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1aeb60b11aec5abe83c2e\ntitle: CSS Libraries and Frameworks Quiz\nchallengeType: 8\ndashedName: quiz-css-libraries-and-frameworks\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is a CSS framework --distractors--\nA tool to fix CSS errors A tool to lint CSS files A formatter for CSS files --answer--\nA library for CSS styles --question--\n--text--\nWhich of the following is a popular utility-first CSS framework --distractors--\nTemplate CSS\nLoading CSS\nMinimal CSS\n--answer--\nTailwind CSS\n--question--\n--text--\nWhat is a disadvantage of CSS frameworks --distractors--\nToo few components No customization options Improved browser support --answer--\nCan bloat CSS files --question--\n--text--\nWhat does SCSS stand for --distractors--\nSuper Cascading Style Sheets Structured CSS Simple CSS --answer--\nSassy CSS --question--\n--text--\nWhich of the following is a feature of Sass --distractors--\nComments\nCSS linting Inline CSS --answer--\nMixins\n--question--\n--text--\nWhich of the following is the correct way to use utility classes in Tailwind CSS --distractors--\nhtml\n<button class=\"color-blue text-color font-size allow-hover round-btn\">\nButton\n</button>\nhtml\n<button class=\"blue text font-size hover round-btn margin-full\">\nButton\n</button>\nhtml\n<button class=\"set-blue set-text set-font set-hover round-btn padding-full\">\nButton\n</button>\n--answer--\nhtml\n<button class=\"bg-blue-500 text-white font-bold py-2 px-4 rounded-full hover:bg-blue-700\">\nButton\n</button>\n--question--\n--text--\nWhat are the two types of CSS frameworks --distractors--\nTablet first CSS frameworks and Component-based CSS frameworks Utility-first CSS frameworks and Lazy loading CSS frameworks Minimal CSS frameworks and Utility-first CSS frameworks --answer--\nUtility-first CSS frameworks and Component-based CSS frameworks --question--\n--text--\nWhat is the file extension for SCSS --distractors-- sass scsss css\n--answer-- scss\n--question--\n--text--\nWhich of the following is the correct way to define a variable in SCSS",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-libraries-and-frameworks\\66f1aeb60b11aec5abe83c2e.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cd46052744fb1086337bba1586c4188b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-libraries-and-frameworks\\66f1aeb60b11aec5abe83c2e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "hover:bg-blue-700\"> Button </button> --question-- --text-- What are the two types of CSS frameworks --distractors-- Tablet first CSS frameworks and Component-based CSS frameworks Utility-first CSS frameworks and Lazy loading CSS frameworks Minimal CSS frameworks and Utility-first CSS frameworks --answer-- Utility-first CSS frameworks and Component-based CSS frameworks --question-- --text-- What is the file extension for SCSS --distractors-- sass scsss css --answer-- scss --question-- --text-- Which of the following is the correct way to define a variable in SCSS--distractors--\n```css\nprimary-color: #3498eb;\nheader {\nbackground-color: #primary-color;\n}\n```\n```css\nprimary-color: #3498eb;\nheader {\nbackground-color: >primary-color;\n}\n```\n```css primary-color: #3498eb;\nheader {\nbackground-color: primary-color;\n}\n```\n--answer--\n```css\n$primary-color: #3498eb;\nheader {\nbackground-color: $primary-color;\n}\n```\n--question--\n--text--\nWhich of the following is the correct way to define a mixin --distractors--\ncss\n--mixin center-flex {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n```css\nmixin center-flex {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n```\ncss\nmixin center-flex {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n--answer--\ncss\n@mixin center-flex {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3447,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-libraries-and-frameworks\\66f1aeb60b11aec5abe83c2e.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7d124f0ac7a9e2ee138c954813de6a7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fe7f45ce3ece4053eb2\ntitle: CSS Flexbox Quiz\nchallengeType: 8\ndashedName: quiz-css-flexbox\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is flexbox --distractors--\nA two-dimensional model for layout A three-dimensional model for layout A multi-dimensional model for layout --answer--\nA one-dimensional model for layout --question--\n--text--\nWhat CSS property is set to enable the flexbox layout for the div element --distractors--\ncss\ndiv {\nflex: 1;\n}\ncss\ndiv {\nflex-direction: row;\n}\ncss\ndiv {\nflex-wrap: wrap;\n}\n--answer--\ncss\ndiv {\ndisplay: flex;\n}\n--question--\n--text--\nWhich CSS property lets flex items wrap onto a new row when the current row is full --distractors--\nflex-direction\njustify-content\nalign-items\n--answer--\nflex-wrap\n--question--\n--text--\nWhat does the flexbox property justify-content control --distractors--\nIt controls the direction of the child elements of the flexbox container It controls the text style of the child elements of the flexbox container It controls the alignment of the child elements within the flexbox container --answer--\nIt controls the distribution of the child elements on the main axis --question--\n--text--\nWhat property controls the direction of the elements within the flexbox container --distractors--\nflex-wrap\nflex\njustify-content\n--answer--\nflex-direction\n--question--\n--text--\nWhich CSS properties can be used to make flex items flow from left to right, and have the new flex item appear on top of the previous one if the width of the current row is exceeded --distractors--\ncss container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap-reverse;\n}\ncss container {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\n}\ncss container {\ndisplay: flex;\nflex-direction: column-reverse;\nflex-wrap: wrap;\n}\n--answer--\ncss container {\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap-reverse;\n}\n--question--\n--text--\nWhat property controls the positioning of the elements on the cross axis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "c01a068143b211db29f016f3eaf2f6e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the new flex item appear on top of the previous one if the width of the current row is exceeded --distractors-- css container { display: flex; flex-direction: column; flex-wrap: wrap-reverse; } css container { display: flex; flex-direction: row; flex-wrap: wrap; } css container { display: flex; flex-direction: column-reverse; flex-wrap: wrap; } --answer-- css container { display: flex; flex-direction: row; flex-wrap: wrap-reverse; } --question-- --text-- What property controls the positioning of the elements on the cross axis--distractors--\nflex-wrap\nflex-direction\njustify-content\n--answer--\nalign-items\n--question--\n--text--\nWhich is not a value for justify-content --distractors--\nflex-start\ncenter\nspace-between\n--answer--\nrow\n--question--\n--text--\nWhat CSS properties would you use to center an element within a flex container horizontally, and vertically --distractors--\ncss container {\ndisplay: flex;\njustify-content: center;\n}\ncss container {\ndisplay: flex;\nalign-items: center;\n}\ncss container {\ndisplay: flex;\nalign-content: center;\n}\n--answer--\ncss container {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n--question--\n--text--\nWhat value of flex-direction makes the flex items go from right to left --distractors--\ncolumn-reverse\ncolumn\nrow\n--answer--\nrow-reverse\n--question--\n--text--\nWhat is not a value of the flex-wrap property --distractors--\nnowrap\nwrap\nwrap-reverse\n--answer--\nrow\n--question--\n--text--\nWhat does the stretch value in align-items do --distractors--\nItems are packed directly against each other toward the start edge of the container Items are aligned such that their flex container baselines align Items are packed directly against each other toward the end edge of the container --answer--\nAuto-size items to be equally large to fill the container --question--\n--text--\nWhich justify-content value places the first item at the start, the last item at the end, and evenly spaces the other items between them along the main axis --distractors--\nspace-evenly\nspace-around\ncenter\n--answer--\nspace-between\n--question--\n--text--\nWhich justify-content value spaces items so that the gaps between every pair of adjacent items and the container’s edges are all equal",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "b6e115b330114fa06875754d335a74ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "end edge of the container --answer-- Auto-size items to be equally large to fill the container --question-- --text-- Which justify-content value places the first item at the start, the last item at the end, and evenly spaces the other items between them along the main axis --distractors-- space-evenly space-around center --answer-- space-between --question-- --text-- Which justify-content value spaces items so that the gaps between every pair of adjacent items and the container’s edges are all equal--distractors--\nspace-between\nspace-around\ncenter\n--answer--\nspace-evenly\n--question--\n--text--\nWhich justify-content value spaces items equally along the main axis while leaving half that amount of space at the container’s edges --distractors--\nspace-evenly\ncenter\nspace-between\n--answer--\nspace-around\n--question--\n--text--\nWhich of the following results in the items being aligned at the start of the cross axis --distractors--\nalign-items: flex-starts;\nalign-items: baseline;\nalign-items: first-baseline;\n--answer--\nalign-items: flex-start;\n--question--\n--text--\nWhich of the following results in the items being aligned at the end of the cross axis --distractors--\nalign-items: flex-ends;\nalign-items: end;\nalign-items: flex-ending;\n--answer--\nalign-items: flex-end;\n--question--\n--text--\nWhich value for flex-direction will make it so items are aligned along the main axis from left to right --distractors--\ncolumn\ncolumn-reverse\nrow-reverse\n--answer--\nrow\n--question--\n--text--\nWhich value for flex-direction will make it so items are aligned along the cross axis from top to bottom --distractors--\nrow\ncolumn-reverse\nrow-reverse\n--answer--\ncolumn\n--question--\n--text--\nWhich of the following use case is not suitable for flexbox --distractors--\nCentering an item in a container Vertical alignment of items in a row Dynamically adjusting distribution and alignment of items for different viewports --answer--\nFixed sizing and space between items like a grid --quiz--\n--question--\n--text--\nWhat is the purpose of a one-dimensional layout model like Flexbox --distractors--\nTo handle layout in two dimensions, both rows and columns at the same time To control the stacking order of positioned elements using z-index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "3d36865e868dc3437ca85826f2b9302b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "suitable for flexbox --distractors-- Centering an item in a container Vertical alignment of items in a row Dynamically adjusting distribution and alignment of items for different viewports --answer-- Fixed sizing and space between items like a grid --quiz-- --question-- --text-- What is the purpose of a one-dimensional layout model like Flexbox --distractors-- To handle layout in two dimensions, both rows and columns at the same time To control the stacking order of positioned elements using z-indexTo create 3D transforms and complex animations on page elements --answer--\nTo lay out items along a single line or axis, either as a row or as a column --question--\n--text--\nWhich CSS property will align all the flex items to the right side of the container element css container {\ndisplay: flex;\nflex-direction: row;\n}\n--distractors--\njustify-content: flex-start;\njustify-content: space-between;\nalign-items: flex-end;\n--answer--\njustify-content: flex-end;\n--question--\n--text--\nWhat are the two axes that define the direction of item layout in the Flex Model --distractors--\nThe horizontal axis and the vertical axis The x-axis and the y-axis The primary axis and the secondary axis --answer--\nThe main axis and the cross axis --question--\n--text--\nWhich of the following CSS rules will arrange items in a vertical column and also center them horizontally within their container --distractors--\ncss container {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n}\ncss container {\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\n}\ncss container {\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\n}\n--answer--\ncss container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}\n--question--\n--text--\nWhat is the main purpose of the flex-wrap property --distractors--\nIt sets the direction that flex items are placed in the flex container It aligns flex items along the main axis of the container It aligns flex items along the cross axis of the container --answer--\nIt determines if flex items should wrap onto new lines to fit available space --question--\n--text--\nWhat is the default behavior of the flex-wrap: nowrap; declaration --distractors--\nIt forces flex items to wrap onto a new line if they are too wide for the container It wraps items onto a new line, but in the reverse order",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "ec1e60acbcca1769a8202a8dccccb9d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "along the main axis of the container It aligns flex items along the cross axis of the container --answer-- It determines if flex items should wrap onto new lines to fit available space --question-- --text-- What is the default behavior of the flex-wrap: nowrap; declaration --distractors-- It forces flex items to wrap onto a new line if they are too wide for the container It wraps items onto a new line, but in the reverse orderIt prevents the flex container from being larger than its parent element --answer--\nIt forces flex items to remain on a single line, even if they overflow the container --question--\n--text--\nWhich CSS property is a shorthand for setting both the flex-direction and flex-wrap properties at once --distractors--\nflex-box\nflex-align\nflex-container\n--answer--\nflex-flow\n--question--\n--text--\nWhat is the effect of setting flex-direction: column-reverse; on a flex container --distractors--\nIt arranges items horizontally from right to left It reverses the items in a row, but keeps them on a single line It arranges items vertically from top to bottom --answer--\nIt arranges items vertically in a reverse order from bottom to top --question--\n--text--\nWhich CSS snippet correctly arranges flex items in a vertical column and allows them to wrap onto a new column if they overflow the container's height --distractors--\ncss container {\ndisplay: flex;\nflex-flow: row wrap;\n}\ncss container {\ndisplay: flex;\nflex-direction: column;\nflex-wrap: nowrap;\n}\ncss container {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n--answer--\ncss container {\ndisplay: flex;\nflex-flow: column wrap;\n}\n--question--\n--text--\nWhich justify-content value aligns all flex items to the end of the container's main axis --distractors--\njustify-content: end;\njustify-content: center;\njustify-content: flex-start;\n--answer--\njustify-content: flex-end;\n--question--\n--text--\nWhat is the effect of the following CSS rule on flex items css container {\nflex-flow: row nowrap;\n}\n--distractors--\nItems are arranged in a column and will wrap to a new column Items are arranged in a row and will wrap to a new row Items are arranged in a column and will overflow if they don't fit --answer--\nItems are arranged in a row and will overflow the container if they don't fit",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "813c22e7126501d7be76983ef85ade25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- What is the effect of the following CSS rule on flex items css container { flex-flow: row nowrap; } --distractors-- Items are arranged in a column and will wrap to a new column Items are arranged in a row and will wrap to a new row Items are arranged in a column and will overflow if they don't fit --answer-- Items are arranged in a row and will overflow the container if they don't fit--question--\n--text--\nHow does justify-content: space-evenly; align flex items css container {\ndisplay: flex;\njustify-content: space-evenly;\n}\n--distractors--\nItems are evenly spaced, with no space at the start or end Items are packed together in the center of the container Items are pushed to the right side of the container, with equal spacing between them --answer--\nItems have equal space between them and at both ends of the container --question--\n--text--\nWhich property would you use to vertically center items when flex-direction: row; is set --distractors--\njustify-content: center;\nvertical-align: middle;\ntext-align: center;\n--answer--\nalign-items: center;\n--question--\n--text--\nWhat does the flex-start value for the justify-content property do --distractors--\nIt aligns items to the start of the cross axis It stretches items to fill the container's main axis It centers all the items along the main axis --answer--\nIt aligns items to the beginning of the container's main axis --question--\n--text--\nHow would you set up a flex container to arrange its items from right-to-left on a single line, and also position them at the top of the container --distractors--\ncss container {\ndisplay: flex;\nflex-direction: row-reverse;\nalign-items: center;\n}\ncss container {\ndisplay: flex;\nflex-direction: column-reverse;\nalign-items: flex-start;\n}\ncss container {\ndisplay: flex;\nflex-wrap: wrap-reverse;\nalign-items: flex-start;\n}\n--answer--\ncss container {\ndisplay: flex;\nflex-direction: row-reverse;\nalign-items: flex-start;\n}\n--question--\n--text--\nWhich of the following is a valid declaration for the flex-flow property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "98ae747918e5c35a03d19d1d64f5ef68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to arrange its items from right-to-left on a single line, and also position them at the top of the container --distractors-- css container { display: flex; flex-direction: row-reverse; align-items: center; } css container { display: flex; flex-direction: column-reverse; align-items: flex-start; } css container { display: flex; flex-wrap: wrap-reverse; align-items: flex-start; } --answer-- css container { display: flex; flex-direction: row-reverse; align-items: flex-start; } --question-- --text-- Which of the following is a valid declaration for the flex-flow property--distractors--\nflex-flow: center wrap;\nflex-flow: row space-between;\nflex-flow: column reverse;\n--answer--\nflex-flow: column wrap-reverse;\n--question--\n--text--\nWhich of the following CSS rules will result in flex items being centered horizontally and stretched vertically to fill the height of the container --distractors--\ncss container {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\ncss container {\ndisplay: flex;\njustify-content: stretch;\nalign-items: center;\n}\ncss container {\ndisplay: flex;\njustify-content: flex-start;\nalign-items: stretch;\n}\n--answer--\ncss container {\ndisplay: flex;\njustify-content: center;\nalign-items: stretch;\n}\n--question--\n--text--\nWhat effect does align-items: stretch; have when flex-direction is set to column --distractors--\nIt stretches items vertically to fill the container's height It has no effect when the direction is column It stretches items vertically to match the tallest item --answer--\nIt stretches items horizontally to fill the container's width --question--\n--text--\nIf you want to reverse the order of items in a horizontal row, which declaration should you use --distractors--\nflex-direction: column-reverse;\nflex-wrap: wrap-reverse;\nflex-direction: reverse-row;\n--answer--\nflex-direction: row-reverse;\n--question--\n--text--\nWhich value of align-items will position items at the top of a container whose flex-direction is row --distractors--\nalign-items: top;\njustify-content: flex-start;\nalign-items: stretch;\n--answer--\nalign-items: flex-start;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14556,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-flexbox\\66ed8fe7f45ce3ece4053eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "0ff82b1dae4a0d73bac77f53004b7741",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8ff4f45ce3ece4053eb4\ntitle: CSS Layout and Effects Quiz\nchallengeType: 8\ndashedName: quiz-css-layout-and-effects\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat term is used in CSS to describe when an element's content exceeds the size of its container --distractors--\nUnderflow\nCompression\nPadding\n--answer--\nOverflow\n--question--\n--text--\nWhat is the default behavior of CSS when content overflows an element --distractors--\nHiding the content Clipping the content Resizing the content --answer--\nKeeping the content visible --question--\n--text--\nWhy does CSS typically avoid hiding content when there is overflow --distractors--\nTo maintain the original layout and design To prevent performance issues in the browser To allow for better search engine optimization --answer--\nTo ensure all content is accessible to users --question--\n--text--\nHow can you handle vertical overflow in CSS by hiding content or displaying scrollbars --distractors--\nUse overflow-y: visible to hide content and overflow-y: auto to always display scrollbars Use overflow-y: collapse to hide content and overflow-y: expand to display scrollbars Use overflow-y: none to hide content and overflow-y: show to display scrollbars --answer--\nUse overflow-y: hidden to hide content and overflow-y: scroll to always display scrollbars --question--\n--text--\nHow can you specify different horizontal and vertical scrolling behaviors in CSS --distractors--\nBy using the scroll-x and scroll-y properties By specifying the same value for overflow-x and overflow-y By specifying two values for the overflow property, where the first value applies to overflow-y and the second value to overflow-x --answer--\nBy specifying two values for the overflow property, where the first value applies to overflow-x and the second value to overflow-y --question--\n--text--\nWhat does the transform CSS property allow you to do --distractors--\nChange the color and font style of an element Adjust the margin and padding of an element Modify the visibility and display of an element --answer--\nRotate, scale, skew, and translate an element --question--\n--text--\nHow does the transform: translate(15px, 200px) property modify an element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "299ca4dc06faf93143d7b9f5c6316714",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "values for the overflow property, where the first value applies to overflow-x and the second value to overflow-y --question-- --text-- What does the transform CSS property allow you to do --distractors-- Change the color and font style of an element Adjust the margin and padding of an element Modify the visibility and display of an element --answer-- Rotate, scale, skew, and translate an element --question-- --text-- How does the transform: translate(15px, 200px) property modify an element--distractors--\nIt moves the element 15 pixels to the left and 200 pixels down from its original position It rotates the element 15 degrees in a clockwise direction It moves the element 15 pixels to the right and 200 pixels up from its original position --answer--\nIt moves the element 15 pixels to the right and 200 pixels down from its original position --question--\n--text--\nWhat is the purpose of the CSS properties overflow-x and overflow-y --distractors--\nThey adjust the padding and margin of an element They set the background color and font style of an element They define the visibility and display properties of an element --answer--\nThey control the horizontal and vertical overflow of an element's content --question--\n--text--\nWhat is the purpose of the margin property in CSS --distractors--\nIt defines the space between the content and the border of an element It defines the space between the border and the padding of an element It defines the width and height of an element --answer--\nIt defines the space around an element, outside of its border --question--\n--text--\nWhat does the content area of an element represent in CSS --distractors--\nIt defines the margins and padding around the element It defines the thickness of the element's border It controls the visibility of the element on the page --answer--\nIt contains the actual content of the element, such as text, images, and videos --question--\n--text--\nWhat is the difference between content-box and border-box in CSS --distractors--\ncontent-box includes padding and border, while border-box includes only content dimensions Both content-box and border-box include only the border dimensions content-box is used for 2D elements, while border-box is used for 3D elements --answer--\ncontent-box includes only content dimensions, while border-box includes content, padding, and border in the dimensions --question--\n--text--\nWhat is the purpose of CSS resets",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "4558be803d1b000856445a65d00115e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as text, images, and videos --question-- --text-- What is the difference between content-box and border-box in CSS --distractors-- content-box includes padding and border, while border-box includes only content dimensions Both content-box and border-box include only the border dimensions content-box is used for 2D elements, while border-box is used for 3D elements --answer-- content-box includes only content dimensions, while border-box includes content, padding, and border in the dimensions --question-- --text-- What is the purpose of CSS resets--distractors--\nTo apply default styles to all elements for faster loading To minimize the size of CSS files by removing unused styles To optimize images and fonts for better performance --answer--\nTo remove default browser styling and ensure consistent styling across browsers --question--\n--text--\nWhich of the following is a common example of a CSS reset --distractors--\nbootstrap css\nundo css\nrestore css\n--answer--\nnormalize css\n--question--\n--text--\nWhich CSS property is used to apply changes such as rotation, scaling, and translation to elements --distractors--\nbox-shadow\nopacity\nz-index\n--answer--\ntransform\n--question--\n--text--\nHow is the total width of an element calculated in CSS when using the border-box value for the box-sizing property --distractors--\nTotal Width = Content Width + Border + Margin\nTotal Width = Content Width + Padding + Border + Margin\nTotal Width = Content Width\n--answer--\nTotal Width = Content Width + Padding + Border\n--question--\n--text--\nWhat is the purpose of the filter property in CSS --distractors--\nChanging the scale and rotation of an element Changing the background color and texture of an element Altering the size and position of an element --answer--\nModifying the visual appearance of an element by using various graphical effects --question--\n--text--\nWhat does the CSS property filter: grayscale(50%); do to an element --distractors--\nIt increases the brightness of the element by 50% It decreases the contrast of the element by 50% It applies a sepia effect to the element --answer--\nIt applies a 50% grayscale effect to the element --question--\n--text--\nWhat is the purpose of the contrast() function in CSS --distractors--\nIt adjusts the brightness of the image, where 0% makes it black and 100% makes it white",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "70a9c947cf197b2a6ab1bfdff456d675",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the CSS property filter: grayscale(50%); do to an element --distractors-- It increases the brightness of the element by 50% It decreases the contrast of the element by 50% It applies a sepia effect to the element --answer-- It applies a 50% grayscale effect to the element --question-- --text-- What is the purpose of the contrast() function in CSS --distractors-- It adjusts the brightness of the image, where 0% makes it black and 100% makes it whiteIt adjusts the contrast of the image, where 100% makes it grey, 0% has no effect, and values over 100% increase contrast It adjusts the opacity of the image, where 0% makes it transparent and 100% makes it opaque --answer--\nIt adjusts the contrast of the image, where 0% makes it grey, 100% has no effect, and values over 100% increase contrast --question--\n--text--\nWhat is the purpose of the hue-rotate() function in CSS --distractors--\nIt changes the brightness of an image It rotates an image clockwise by a certain number of degrees It adjusts the saturation and contrast of an image --answer--\nIt applies a color shift, where the angle value defines the number of degrees to rotate around the color circle --question--\n--text--\nWhat is margin collapsing in CSS --distractors--\nWhen the margin of an element is set to a negative number and this causes issues in the layout When the margin of an element is decreased by the padding and this changes the element's dimensions When the margin of an element is ignored by the browser, so it's not visible --answer--\nWhen the vertical margins of adjacent elements overlap, so they are combined into a single margin --quiz--\n--question--\n--text--\nWhich of the following is TRUE about the translate() function --distractors--\nIt is used to scale the size of an element It is used to translate the text of an element It is used to change the shape or size of an element --answer--\nIt is used to move an element from its current position --question--\n--text--\nWhich of the following is a component of the CSS box model --distractors--\nWidth\nHeight\nSize\n--answer--\nPadding\n--question--\n--text--\nWhen an element's box-sizing is set to content-box, which part of the box model does the width and height apply to",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "d8fbba205e8e56041bd9327d39882fa7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is used to translate the text of an element It is used to change the shape or size of an element --answer-- It is used to move an element from its current position --question-- --text-- Which of the following is a component of the CSS box model --distractors-- Width Height Size --answer-- Padding --question-- --text-- When an element's box-sizing is set to content-box, which part of the box model does the width and height apply to--distractors--\nContent, padding, border, and margin\nContent and padding\nContent, padding, and border\n--answer--\nContent\n--question--\n--text--\nWhen an element's box-sizing is set to border-box, which parts of the CSS box model does the width and height NOT apply to --distractors--\nThe content area Padding\nBorder\n--answer--\nMargin\n--question--\n--text--\nWhich value for the brightness() function makes an element completely black --distractors--\n100%\n0px\n100px\n--answer--\n0%\n--question--\n--text--\nWhat kind of values does the hue-rotate() function use --distractors--\nPixels\nRadians\nPercentages\n--answer--\nDegrees\n--question--\n--text--\nWhat does the CSS property filter: contrast(0%); do to an element --distractors--\nIt will make the element appear completely white It will make the element appear completely black It will have no effect on the element --answer--\nIt will make the element appear completely grey --question--\n--text--\nWhat is the minimum value for the brightness() CSS function to brighten an element --distractors--\n100px\n50px\n50%\n--answer--\n100%\n--question--\n--text--\nWhat kind of values does the grayscale() function use --distractors--\nPixels\nDegrees\nRadians\n--answer--\nPercentages\n--question--\n--text--\nWhat kind of values does the contrast() function use --distractors--\nPixels\nDegrees\nRadians\n--answer--\nPercentages\n--question--\n--text--\nWhat does the overflow-x property in CSS control --distractors--\nIt determines the horizontal overflow on the y-axis It determines the vertical overflow on the y-axis It determines the vertical overflow on the x-axis --answer--\nIt determines the horizontal overflow on the x-axis --question--\n--text--\nWhat does the overflow-y property in CSS control",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "1efb7cf083e6e32fdc3978ddb8f38c3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Pixels Degrees Radians --answer-- Percentages --question-- --text-- What kind of values does the contrast() function use --distractors-- Pixels Degrees Radians --answer-- Percentages --question-- --text-- What does the overflow-x property in CSS control --distractors-- It determines the horizontal overflow on the y-axis It determines the vertical overflow on the y-axis It determines the vertical overflow on the x-axis --answer-- It determines the horizontal overflow on the x-axis --question-- --text-- What does the overflow-y property in CSS control--distractors--\nIt determines the horizontal overflow on the x-axis It determines the vertical overflow on the x-axis It determines the horizontal overflow on the y-axis --answer--\nIt determines the vertical overflow on the y-axis --question--\n--text--\nWhat is an example of a third party option for a CSS reset --distractors--\nclean css\nrestore css\nreset css\n--answer--\nsanitize css\n--question--\n--text--\nHow many dimensions are there to the overflow property in CSS --distractors--\nOne\nThree\nFour\n--answer--\nTwo\n--question--\n--text--\nIf the shorthand property overflow is given two values, which property will use the first value --distractors--\noverflow-y\noverflow-w\noverflow-z\n--answer--\noverflow-x\n--question--\n--text--\nWhat kind of blur effect does the blur() function apply to an element in CSS --distractors--\nGiliani\nGalilei\nGalileo\n--answer--\nGaussian\n--question--\n--text--\nWhat kind of values does the sepia() function use --distractors--\nPixels\nRadians\nDegrees\n--answer--\nPercentages\n--question--\n--text--\nIf the shorthand property overflow is given two values, which property will use the second value --distractors--\noverflow-w\noverflow-x\noverflow-z\n--answer--\noverflow-y\n--question--\n--text--\nWhat does a CSS reset do --distractors--\nIt forces browsers to use dark mode by default It removes inline styles from HTML elements It disables browser extensions that include CSS --answer--\nIt removes default browser styling --question--\n--text--\nWhat does the CSS property filter: grayscale(100%); do to an element --distractors--\nIt will have no effect on the element It will make the element appear completely black It will make the element appear completely white",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "89807301aac8d0a3d725b2ffe509bb3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--question-- --text-- What does a CSS reset do --distractors-- It forces browsers to use dark mode by default It removes inline styles from HTML elements It disables browser extensions that include CSS --answer-- It removes default browser styling --question-- --text-- What does the CSS property filter: grayscale(100%); do to an element --distractors-- It will have no effect on the element It will make the element appear completely black It will make the element appear completely white--answer--\nIt will make the element appear completely grey",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13059,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-layout-and-effects\\66ed8ff4f45ce3ece4053eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 110,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "81dd8e3f49a3ff2993c8980c2a75696d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8fedf45ce3ece4053eb3\ntitle: CSS Grid Quiz\nchallengeType: 8\ndashedName: quiz-css-grid\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is CSS Grid --distractors--\nA method used for displaying tables on a website A method used for tiling images A way to display outlines around HTML elements --answer--\nA two-dimensional layout for HTML documents --question--\n--text--\nWhich of the following is the correct way to create a grid container --distractors--\ndisplay: grid-area;\ngrid: grid-template;\ngrid-template: set;\n--answer--\ndisplay: grid;\n--question--\n--text--\nWhat does the grid-template-columns property do --distractors--\nDefines two columns and three rows for a grid container Sets all columns for the grid layout to a fixed length Creates a two column grid layout container --answer--\nDefines the number of columns in a grid layout --question--\n--text--\nWhat does the grid-template-rows property do --distractors--\nSpecifies a grid item's size and location in a grid layout Creates a template for creating new grid rows Specifies a default row size in the grid container --answer--\nSpecifies the number and height for each row in a grid layout --question--\n--text--\nWhat does the minmax() function do --distractors--\nToggles between the first and second value, depending on available space Returns the average of the two inputs Sets the minimal size of the element for browser working in full-screen mode --answer--\nSets the minimum and maximum sizes for a track --question--\n--text--\nWhat is the shorthand for the column-gap and row-gap properties --distractors--\ngap-column-row\ngutters\ngrid-gap\n--answer--\ngap\n--question--\n--text--\nWhat is the difference between an implicit and explicit grid --distractors--\nImplicit grids use the grid-template-columns property while explicit grids use the grid-template-rows property Explicit grids use the grid-template-columns property while implicit grids use the grid-template-rows property Implicit grids use the grid-template-columns or grid-template-rows properties to create columns while rows and columns are automatically created in explicit grids --answer--\nExplicit grids use the grid-template-columns or grid-template-rows properties to create columns while rows and columns are automatically created in implicit grids",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "e95d08d8851ef036223302ebb07d4298",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "between an implicit and explicit grid --distractors-- Implicit grids use the grid-template-columns property while explicit grids use the grid-template-rows property Explicit grids use the grid-template-columns property while implicit grids use the grid-template-rows property Implicit grids use the grid-template-columns or grid-template-rows properties to create columns while rows and columns are automatically created in explicit grids --answer-- Explicit grids use the grid-template-columns or grid-template-rows properties to create columns while rows and columns are automatically created in implicit grids--question--\n--text--\nWhich of the following units represents a fraction of the space within the grid container --distractors--\nfractional\nfrac\nf\n--answer--\nfr\n--question--\n--text--\nWhat are grid lines --distractors--\nShorthand for rows and columns Outlines of a grid element Lines along which grid columns and rows are created --answer--\nLines on which each of the grid items begin and end --question--\n--text--\nWhat does the grid-column property do --distractors--\nAdds a new grid element as a child of the element it's applied to Aligns text in the grid item vertically Sets two columns for a grid container --answer--\nTells the grid item on which grid line it should start and end at --question--\n--text--\nHow do you create four columns of equal width --distractors--\ngrid-template-columns: repeat(4);\ngrid-template-columns: repeat(1, 4);\ngrid-template-columns: repeat(1fr, 4);\n--answer--\ngrid-template-columns: repeat(4, 1fr);\n--question--\n--text--\nWhat does the grid-template-areas property do --distractors--\nIt is used to specify where the item begins on a line in the grid container It is used to create gaps between tracks in the container It is used to repeat sections in the track listing --answer--\nIt is used to provide a name for the items you are going to position on the grid --question--\n--text--\nWhat does the grid-auto-flow property do --distractors--\nControls the order in which grid items are displayed Adjusts the spacing between the grid elements Automatically adjusts the element to fit in the grid --answer--\nControls how auto-placed elements get inserted to the grid --question--\n--text--\nWhich of the following is the correct way to use the grid-template-areas property --distractors--\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "1cb3e319fd7134c175dbde7b55dd1b6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to provide a name for the items you are going to position on the grid --question-- --text-- What does the grid-auto-flow property do --distractors-- Controls the order in which grid items are displayed Adjusts the spacing between the grid elements Automatically adjusts the element to fit in the grid --answer-- Controls how auto-placed elements get inserted to the grid --question-- --text-- Which of the following is the correct way to use the grid-template-areas property --distractors-- csscontainer {\ndisplay: grid;\ngrid-template-columns: 200px 1fr;\ngrid-template-rows: auto 1fr auto;\ngrid-template-areas: set(\n\"header header\"\n\"sidebar main\"\n\"footer footer\"\n);\ngap: 20px;\n}\ncss container {\ndisplay: grid;\ngrid-template-columns: 200px 1fr;\ngrid-template-rows: auto 1fr auto;\ngrid-template-areas: apply(\n\"header header\"\n\"sidebar main\"\n\"footer footer\"\n);\ngap: 20px;\n}\ncss container {\ndisplay: grid;\ngrid-template-columns: 200px 1fr;\ngrid-template-rows: auto 1fr auto;\ngrid-template-areas: set-areas;\ngap: 20px;\n}\n--answer--\ncss container {\ndisplay: grid;\ngrid-template-columns: 200px 1fr;\ngrid-template-rows: auto 1fr auto;\ngrid-template-areas:\n\"header header\"\n\"sidebar main\"\n\"footer footer\";\ngap: 20px;\n}\n--question--\n--text--\nWhich of the following is the correct way to work with the grid-auto-flow property --distractors--\ncss social-icons {\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: none;\ngrid-auto-columns: 1fr;\n}\ncss social-icons {\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: allow;\ngrid-auto-columns: 1fr;\n}\ncss social-icons {\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: set;\ngrid-auto-columns: 1fr;\n}\n--answer--\ncss social-icons {\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\ngrid-auto-flow: column;\ngrid-auto-columns: 1fr;\n}\n--question--\n--text--\nWhich of the following is NOT a valid grid property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "9f6a955c8b6b74198c4156627205dee5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is the correct way to work with the grid-auto-flow property --distractors-- css social-icons { display: grid; grid-template-columns: repeat(5, 1fr); grid-auto-flow: none; grid-auto-columns: 1fr; } css social-icons { display: grid; grid-template-columns: repeat(5, 1fr); grid-auto-flow: allow; grid-auto-columns: 1fr; } css social-icons { display: grid; grid-template-columns: repeat(5, 1fr); grid-auto-flow: set; grid-auto-columns: 1fr; } --answer-- css social-icons { display: grid; grid-template-columns: repeat(5, 1fr); grid-auto-flow: column; grid-auto-columns: 1fr; } --question-- --text-- Which of the following is NOT a valid grid property--distractors--\ngap\ngrid-column\ngrid-template-columns\n--answer--\ngrid-set\n--question--\n--text--\nWhich of these properties can be used to center items inside a grid element --distractors--\nallow-items\nset-items\ncenter-items\n--answer--\nalign-items\n--question--\n--text--\nWhich of the following is a correct value to use with the grid-auto-columns property --distractors--\ngrid-auto-columns: unset-grid;\ngrid-auto-columns: revert-grid;\ngrid-auto-columns: set-content(20%);\n--answer--\ngrid-auto-columns: 1fr;\n--question--\n--text--\nWhat are grid tracks --distractors--\nShorthand for rows and columns Lines along which you can animate movement of the grid items Lines on which each of the grid items begins and ends --answer--\nSpaces between two adjacent grid lines --question--\n--text--\nWhich of the following is the correct way to use the minmax() function --distractors--\ncss container {\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-auto-rows: minmax(apply);\n}\ncss container {\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-auto-rows: minmax();\n}\ncss container {\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-auto-rows: minmax(set);\n}\n--answer--\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "5a788beffa83b1c1b9ff9ba4c3994a4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "can animate movement of the grid items Lines on which each of the grid items begins and ends --answer-- Spaces between two adjacent grid lines --question-- --text-- Which of the following is the correct way to use the minmax() function --distractors-- css container { display: grid; grid-template-columns: repeat(4, 1fr); grid-auto-rows: minmax(apply); } css container { display: grid; grid-template-columns: repeat(4, 1fr); grid-auto-rows: minmax(); } css container { display: grid; grid-template-columns: repeat(4, 1fr); grid-auto-rows: minmax(set); } --answer-- csscontainer {\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-auto-rows: minmax(150px, auto);\n}\n--quiz--\n--question--\n--text--\nHow do you position a grid item within a layout defined by grid-template-areas --distractors--\nBy directly defining the item's size and location within the grid using grid-template-rows and grid-template-columns By using the grid-area property and specifying both row and column start and end positions By setting both grid-area and explicit pixel coordinates --answer--\nBy assigning the named area to the item's grid-area property --question--\n--text--\nWhat does the grid-auto-rows property control --distractors--\nThe height of explicitly defined rows The maximum width of grid columns The spacing between rows --answer--\nThe size of implicitly created rows --question--\n--text--\nWhich property would you use to make a grid item span multiple rows --distractors--\ngrid-row-span\nrow-span\nspan-rows\n--answer--\ngrid-row\n--question--\n--text--\nWhat defines an explicit grid --distractors--\nTracks created automatically to fit content Tracks defined by the fr unit Tracks added with grid-auto-flow --answer--\nTracks explicitly set by grid-template-columns or grid-template-rows --question--\n--text--\nWhich value for grid-auto-flow would make new items fill columns first --distractors--\nrow\nvertical\nrow dense\n--answer--\ncolumn\n--question--\n--text--\nWhat is the purpose of grid-template-areas --distractors--\nTo auto-generate implicit tracks To replace the fr unit To set z-index values --answer--\nTo visually map items to named grid areas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "7698923ed5c32fe7f17b21ba7f1f36a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--distractors-- Tracks created automatically to fit content Tracks defined by the fr unit Tracks added with grid-auto-flow --answer-- Tracks explicitly set by grid-template-columns or grid-template-rows --question-- --text-- Which value for grid-auto-flow would make new items fill columns first --distractors-- row vertical row dense --answer-- column --question-- --text-- What is the purpose of grid-template-areas --distractors-- To auto-generate implicit tracks To replace the fr unit To set z-index values --answer-- To visually map items to named grid areas--question--\n--text--\nHow can you make a grid item start at column line 2 and end at column line 4 --distractors--\ngrid-column: 2 / span 4;\ngrid-column: start 2 / end 4;\ngrid-column: from 2 to 4;\n--answer--\ngrid-column: 2 / 4;\n--question--\n--text--\nWhat is the effect of grid-template-columns: 1fr 2fr 1fr --distractors--\nCreates three equal-width columns Makes the middle column three times as wide as the others Forces all columns to be exactly 1fr wide --answer--\nCreates three columns where the middle is twice as wide as the sides --question--\n--text--\nHow would you create a grid with 3 equal columns and a 20px gap between them --distractors--\ncss container {\ndisplay: grid;\ngrid-template: repeat(3, 1fr) / 20px;\n}\ncss container {\ndisplay: grid;\ngrid: 1fr 1fr 1fr / gap 20px;\n}\ncss container {\ndisplay: grid;\ngrid-template-columns: 20px 1fr 1fr 1fr;\n}\n--answer--\ncss container {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 20px;\n}\n--question--\n--text--\nWhat does repeat(3, minmax(100px, 1fr)) create --distractors--\nThree columns that can't shrink below 100px Three fixed 100px columns Three rows with maximum height of 1fr --answer--\nThree columns that grow proportionally but won't shrink below 100px --question--\n--text--\nWhich statement about implicit grids is true --distractors--\nImplicit grids ignore the gap property Implicit tracks must be defined with grid-template-areas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "694f6e6804dc632336c6078f5a7976a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1fr 1fr; } --answer-- css container { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; } --question-- --text-- What does repeat(3, minmax(100px, 1fr)) create --distractors-- Three columns that can't shrink below 100px Three fixed 100px columns Three rows with maximum height of 1fr --answer-- Three columns that grow proportionally but won't shrink below 100px --question-- --text-- Which statement about implicit grids is true --distractors-- Implicit grids ignore the gap property Implicit tracks must be defined with grid-template-areasImplicit tracks can only be created using the grid-auto-flow property --answer--\nImplicit tracks are created when content doesn't fit explicit tracks --question--\n--text--\nWhat does the place-items property do in CSS Grid --distractors--\nIt sets the size of grid items automatically based on available space It controls the grid template's column and row definitions It adjusts the order of grid items within the container --answer--\nIt is a shorthand for aligning grid items in both the block and inline axes --question--\n--text--\nWhat does this CSS accomplish css container {\ngrid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n}\n--distractors--\nCreates fixed 150px columns that overflow the container Creates columns that are exactly 1fr wide regardless of content Creates a maximum of one column per 150px of available width --answer--\nCreates flexible columns that are at least 150px and collapse when space is limited --question--\n--text--\nHow can you create asymmetric grid layouts --distractors--\nBy using only fr units By mixing different length units in grid-template-columns By setting grid-asymmetric: true --answer--\nBy defining different sizes for each track --question--\n--text--\nWhat does grid-column-start: 2 do to a grid item --distractors--\nMakes it span 2 columns Offsets it by 2 pixels Positions it starting at the second vertical grid line --answer--\nMakes it start at the second column line --question--\n--text--\nWhich property would you use to control overflow behavior in grid tracks --distractors--\ngrid-overflow\ntrack-sizing\nfit-content\n--answer--\nminmax()\n--question--\n--text--\nWhat will be the result for the following code css",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "61730ad400588a603e3eb46092f20e0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "sizes for each track --question-- --text-- What does grid-column-start: 2 do to a grid item --distractors-- Makes it span 2 columns Offsets it by 2 pixels Positions it starting at the second vertical grid line --answer-- Makes it start at the second column line --question-- --text-- Which property would you use to control overflow behavior in grid tracks --distractors-- grid-overflow track-sizing fit-content --answer-- minmax() --question-- --text-- What will be the result for the following code csscontainer {\ndisplay: grid;\ngrid-template-columns: 100px 1fr 2fr;\ngrid-template-rows: auto 150px;\ngap: 10px;\n}\n--distractors--\nThe container will have three columns of equal width, and two rows with 150px height each The container will have three columns, all with 100px width, and two rows with 150px height The container will have two rows, each with a height of 1fr --answer--\nThe container will have three columns: 100px, 1fr and 2fr wide and two rows: one auto and one with 150px height --question--\n--text--\nHow would you make a grid item span all available rows --distractors--\ngrid-row: full;\ngrid-row: auto / -1;\ngrid-row: 1 / span infinite;\n--answer--\ngrid-row: 1 / -1;\n--question--\n--text--\nWhich property controls the alignment of grid items along the block axis --distractors--\njustify-items\nplace-items\nalign-content\n--answer--\nalign-items\n--question--\n--text--\nHow can you ensure a grid item stays in the first column regardless of grid changes --distractors--\ngrid-column: fixed;\ngrid-column: first;\ngrid-lock: column;\n--answer--\ngrid-column: 1;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-grid\\66ed8fedf45ce3ece4053eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "fc65ee9b779297e5b60e847324e9130a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-relative-and-absolute-units\\66ed9009f45ce3ece4053eb7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed9009f45ce3ece4053eb7\ntitle: CSS Relative and Absolute Units Quiz\nchallengeType: 8\ndashedName: quiz-css-relative-and-absolute-units\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is an absolute unit --distractors--\nUnits that adjust dynamically based on screen size Units that depend on the font size of the parent element Units measured in percentages of the viewport --answer--\nFixed length units that are not relative to anything else --question--\n--text--\nWhat does 100vw cover in terms of screen width --distractors--\n100% of the screen width 100% of the viewport height 100% of the parent's width --answer--\n100% of the viewport width --question--\n--text--\nWhich of the following is a relative unit --distractors--\npt\ncm\nmm\n--answer--\nem\n--question--\n--text--\nIf the root font size is 20px, what is 1rem equal to --distractors--\n18px\n16px\n10px\n--answer--\n20px\n--question--\n--text--\nWhat can the calc() function do in CSS --distractors--\nModify colors dynamically Set a fixed width Only work with percentages --answer--\nAdd, subtract, multiply, or divide different units --question--\n--text--\nWhich unit is the most commonly used absolute unit in CSS --distractors--\ninch\nrem\n%\n--answer--\npx\n--question--\n--text--\nIf the viewport height is 800px, what would 50vh be --distractors--\n50px\n200px\n100px\n--answer--\n400px\n--question--\n--text--\nWhat does setting an element's width to 100% mean --distractors--\nIt takes up the full width of the document It takes up the full width of the screen It takes up 100px --answer--\nIt takes up the full width of its parent --question--\n--text--\nWhat happens with calc(10px + 20%) in CSS --distractors--\nIt adds 10px to 10% of the document width It always equals 30px It adds 10px to 20% of the screen width",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-relative-and-absolute-units\\66ed9009f45ce3ece4053eb7.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c0434fe305361f7114adf3adff34b5f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-relative-and-absolute-units\\66ed9009f45ce3ece4053eb7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- What does setting an element's width to 100% mean --distractors-- It takes up the full width of the document It takes up the full width of the screen It takes up 100px --answer-- It takes up the full width of its parent --question-- --text-- What happens with calc(10px + 20%) in CSS --distractors-- It adds 10px to 10% of the document width It always equals 30px It adds 10px to 20% of the screen width--answer--\nIt adds 10px to 20% of the parent's width --question--\n--text--\nWhich unit is relative to the font size of the root element --distractors--\npx\npt\n%\n--answer--\nrem\n--question--\n--text--\nWith a root font size of 16px, how big is 10rem --distractors--\n140px\n10px\n100px\n--answer--\n160px\n--question--\n--text--\nWhy might you use point instead of pixels in design --distractors--\nPoints are scalable Points are better for responsive layouts Points are easier to manage on screens --answer--\nPoints are for print design --question--\n--text--\nWhy are rem units preferred over pixels in typography --distractors--\nBecause they provide fixed sizing regardless of screen resolution Because they ensure compatibility with older browsers Because they are easier to implement in responsive designs --answer--\nBecause they scale proportionally with the user’s browser settings --question--\n--text--\nHow much screen space does 80vw take --distractors--\n80% of the parent's width 100% of the viewport height 80px\n--answer--\n80% of the viewport width --question--\n--text--\nWhich units should you use if you want to make an element occupy a certain width or height by the percentage of the screen --distractors--\npt and px\nrem and em\npt and pc\n--answer--\nvw and vh\n--question--\n--text--\nWhat does vw stand for --distractors--\nVertical Width Virtual Width Variable Width --answer--\nViewport Width --question--\n--text--\nWhat's the key difference between rem and em in CSS --distractors--\nem is relative to the root element, while rem is relative to the parent element rem is relative to desktop width, while em is relative to mobile width",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-relative-and-absolute-units\\66ed9009f45ce3ece4053eb7.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "37cd562dfb398c04eb280296b56a286b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-relative-and-absolute-units\\66ed9009f45ce3ece4053eb7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "percentage of the screen --distractors-- pt and px rem and em pt and pc --answer-- vw and vh --question-- --text-- What does vw stand for --distractors-- Vertical Width Virtual Width Variable Width --answer-- Viewport Width --question-- --text-- What's the key difference between rem and em in CSS --distractors-- em is relative to the root element, while rem is relative to the parent element rem is relative to desktop width, while em is relative to mobile widthrem is relative to the user-defined width, while em is relative to the browser width --answer--\nem is relative to the font size of the parent element, while rem is relative to the root element --question--\n--text--\nWhat is a vh unit --distractors--\nA unit based on the width of the viewport A unit based on the height of the element A unit that adjusts based on font size --answer--\nA unit equal to 1% of the viewport height --question--\n--text--\nWhat does setting an element's width to auto do in CSS --distractors--\nIt sets the width to 100% of the parent element by default It sets the width to 50% of the viewport unless other styles override it It sets the width to 0px if no content or padding is present --answer--\nIt allows the browser to determine the width based on the content and container --question--\n--text--\nWhat’s a key advantage of the calc() function --distractors--\nIt automatically minifies your CSS files for better performance It enables the use of variables within CSS without any preprocessors It allows embedding JavaScript expressions directly within CSS rules --answer--\nIt lets you determine the value of a CSS property dynamically based on different aspects of the application or viewport",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-relative-and-absolute-units\\66ed9009f45ce3ece4053eb7.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "37d0d32df1bc548ab44d05bfbe089410",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed9002f45ce3ece4053eb6\ntitle: CSS Pseudo-classes Quiz\nchallengeType: 8\ndashedName: quiz-css-pseudo-classes\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat are pseudo-classes --distractors--\nThey are CSS rules that create additional content within an element when needed They are properties that adjust an element's size or layout on the page They are selectors used to add movement effects to an element during interactions --answer--\nThey are keywords added to a selector that style an element based on its state --question--\n--text--\nWhich pseudo-class applies when a pointing device is being positioned over an element --distractors--\n:focus\n:active\n:checked\n--answer--\n:hover\n--question--\n--text--\nWhich pseudo-element allows you to style the first letter of a paragraph --distractors--\n:first-letter\n:first-child\n:last-of-type\n--answer--\n::first-letter\n--question--\n--text--\nWhich pseudo-class changes the style of an element while it is being clicked --distractors--\n:focus\n:hover\n:checked\n--answer--\n:active\n--question--\n--text--\nWhich pseudo-class is used to style an element when it is ready to receive user input, such as a text field being clicked or tabbed into --distractors--\n::focus\n:active\n:visited\n--answer--\n:focus\n--question--\n--text--\nWhich of the following CSS rules correctly adds the text Note: in front of each paragraph element with a class of note --distractors--\ncss note::before {\ncontent: \"Note:\";\n}\ncss\np note::after {\ncontent: \"Note:\";\n}\ncss\np::before {\ncontent: \"Note:\";\n}\n--answer--\ncss\np note::before {\ncontent: \"Note:\";\n}\n--question--\n--text--\nWhich pseudo-class applies to an input field when it is selected or toggled on --distractors--\n:required\n:disabled\n:optional\n--answer--\n:checked\n--question--\n--text--\nWhich of the following is the correct syntax to style the last child of a list --distractors--\ncss\nli:nth-child(last) {\ncolor: blue;\n}\n```css\nli:last-child {\ncolor: blue;\n}\n```\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "b34d64af693a5a2e672f145665747b22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "css p note::after { content: \"Note:\"; } css p::before { content: \"Note:\"; } --answer-- css p note::before { content: \"Note:\"; } --question-- --text-- Which pseudo-class applies to an input field when it is selected or toggled on --distractors-- :required :disabled :optional --answer-- :checked --question-- --text-- Which of the following is the correct syntax to style the last child of a list --distractors-- css li:nth-child(last) { color: blue; } ```css li:last-child { color: blue; } ``` cssli:last-child() {\ncolor: blue;\n}\n--answer--\ncss\nli:last-child {\ncolor: blue;\n}\n--question--\n--text--\nWhich pseudo-class targets input fields that are not required to fill out --distractors--\n:required\n:enabled\n::optional\n--answer--\n:optional\n--question--\n--text--\nWhat does the :disabled pseudo-class do --distractors--\nIt styles checked inputs It styles elements being hovered over It selects elements that do not match a given selector --answer--\nIt styles elements that are not available for user interaction --question--\n--text--\nWhich pseudo-class applies when a form input meets its validation criteria --distractors--\n:checked\n:required\n:disabled\n--answer--\n:valid\n--question--\n--text--\nWhich one of these is not a location pseudo-class --distractors--\n:visited\n:any-link\n:link\n--answer--\n:current\n--question--\n--text--\nWhich of the following selects the third list item --distractors--\ncss\nli:child(3) {\ncolor: red;\n}\ncss\nli:last-child(3) {\ncolor: red;\n}\ncss\nli:nth-child(three) {\ncolor: red;\n}\n--answer--\ncss\nli:nth-child(3) {\ncolor: red;\n}\n--question--\n--text--\nWhich elements will have a color of blue with the following CSS css\np:is( blue,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "f7ea6d2774f789b135cd65d37b70e1c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": ":checked :required :disabled --answer-- :valid --question-- --text-- Which one of these is not a location pseudo-class --distractors-- :visited :any-link :link --answer-- :current --question-- --text-- Which of the following selects the third list item --distractors-- css li:child(3) { color: red; } css li:last-child(3) { color: red; } css li:nth-child(three) { color: red; } --answer-- css li:nth-child(3) { color: red; } --question-- --text-- Which elements will have a color of blue with the following CSS css p:is( blue,highlight) {\ncolor: blue;\n}\n--distractors--\n```html\nParagraph 1\nParagraph 2\n```\n```html\nParagraph 1\nParagraph 2\n```\n```html\nParagraph 1\nParagraph 2\n```\n--answer--\n```html\nParagraph 1\nParagraph 2\n```\n--question--\n--text--\nWhat does the :not() pseudo-class do --distractors--\nIt adds styles to all elements It selects all child elements of a parent It selects elements that match a given selector --answer--\nIt selects elements that do not match a given selector --question--\n--text--\nWhat does the following CSS rule do css\np:first-of-type {\nfont-style: italic;\n}\n--distractors--\nIt selects the first p element in the document It selects all p elements in the document It selects the first child of every p element --answer--\nIt selects the first p element within a parent container --question--\n--text--\nWhat does the :last-of-type pseudo class do --distractors--\nIt selects the first child element of a specific type within its parent It selects the middle child element of a specific type within its parent It selects every child element of a specific type within its parent --answer--\nIt selects the last child element of a specific type within its parent --question--\n--text--\nWhich pseudo-class is used to select the second item in a list --distractors--\n:first-child\n:required\n:is()\n--answer--\n:nth-child(2)\n--question--\n--text--\nWhich one of these is a functional pseudo-class",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "3c121130c95e785b3f3aaa97d68149b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of a specific type within its parent It selects the middle child element of a specific type within its parent It selects every child element of a specific type within its parent --answer-- It selects the last child element of a specific type within its parent --question-- --text-- Which pseudo-class is used to select the second item in a list --distractors-- :first-child :required :is() --answer-- :nth-child(2) --question-- --text-- Which one of these is a functional pseudo-class--distractors--\n:first-child\n:match()\n:checked\n--answer--\n:is()\n--question--\n--text--\nWhich one of these is not a functional pseudo-class --distractors--\n:has()\n:not()\n:where()\n--answer--\n:contains()\n--quiz--\n--question--\n--text--\nWhich pseudo-class is used to target form elements that are enabled --distractors--\n:disabled\n:active\n:focus\n--answer--\n:enabled\n--question--\n--text--\nWhich pseudo-class allows you to select elements by counting from the end --distractors--\n:nth-child(n)\n:last-child\n:last-of-type\n--answer--\n:nth-last-child(n)\n--question--\n--text--\nWhich of the following allows you to select elements that contain specific child elements --distractors--\n:is()\n:where()\n:in-range\n--answer--\n:has()\n--question--\n--text--\nWhich of the following selects elements that do not contain any content or child elements --distractors--\n:only-child\n:last-child\n:not()\n--answer--\n:empty\n--question--\n--text--\nWhat does this CSS selector target css\ninput:invalid {\nbackground-color: red;\n}\n--distractors--\nAll input elements All input elements with values inside the allowed range All input elements that pass validation --answer--\nAll input elements that fail validation --question--\n--text--\nWhich pseudo-class selects input fields whose value is automatically filled by the browser --distractors--\n:visited\n:valid\n:where()\n--answer--\n:autofill\n--question--\n--text--\nWhich pseudo-class selects an element if it or any of its descendants is focused --distractors--\n:focus\n:in-range\n:only-child\n--answer--\n:focus-within\n--question--\n--text--\nWhich pseudo class represents links that point to the same document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "b855fa05a8d18d44be8d668aa7fdcf16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "elements with values inside the allowed range All input elements that pass validation --answer-- All input elements that fail validation --question-- --text-- Which pseudo-class selects input fields whose value is automatically filled by the browser --distractors-- :visited :valid :where() --answer-- :autofill --question-- --text-- Which pseudo-class selects an element if it or any of its descendants is focused --distractors-- :focus :in-range :only-child --answer-- :focus-within --question-- --text-- Which pseudo class represents links that point to the same document--distractors--\n:target\n:target-within\n:link\n--answer--\n:local-link\n--question--\n--text--\nWhich of the following styles the p element when it is the target of a URL fragment --distractors--\ncss\np:empty {\nbackground-color: gold;\n}\ncss\np:not( targeted) {\nbackground-color: gold;\n}\ncss\np:is( target) {\nbackground-color: gold;\n}\n--answer--\ncss\np:target {\nbackground-color: gold;\n}\n--question--\n--text--\nWhich pseudo-class selects an element when it or one of its descendants is the target of a URL fragment --distractors--\n:focus-within\n:target\n:visited\n--answer--\n:target-within\n--question--\n--text--\nWhat does the :only-child pseudo-class select --distractors--\nIt selects the parent element which has only one child It selects all child elements inside the parent element It selects the parent element that contains only one type of child element --answer--\nIt selects an element that has no siblings inside its parent element --question--\n--text--\nWhich pseudo-class selects an element if it's the only one of its type within its parent --distractors--\n:only-child\n:nth-of-type(n)\n:first-of-type\n--answer--\n:only-of-type\n--question--\n--text--\nWhich CSS rule will apply a color of yellow to the second p element in the following HTML",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "533766fb4da2086631c65edf984aa6e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "child elements inside the parent element It selects the parent element that contains only one type of child element --answer-- It selects an element that has no siblings inside its parent element --question-- --text-- Which pseudo-class selects an element if it's the only one of its type within its parent --distractors-- :only-child :nth-of-type(n) :first-of-type --answer-- :only-of-type --question-- --text-- Which CSS rule will apply a color of yellow to the second p element in the following HTML```html\nCourses\nHTML\nCSS\nJavaScript\n```\n--distractors--\ncss\np:nth-child(2) {\ncolor: yellow;\n}\ncss\np:first-of-type {\ncolor: yellow;\n}\ncss\np:last-of-type {\ncolor: yellow;\n}\n--answer--\ncss\np:nth-of-type(2) {\ncolor: yellow;\n}\n--question--\n--text--\nWhich pseudo-element allows you to select the marker of list items for styling --distractors--\n::before\n::after\n:root\n--answer--\n::marker\n--question--\n--text--\nWhich pseudo-class allows you to target the highest-level element in the document, typically the html element --distractors--\n:first-child\n:in-range\n:target\n--answer--\n:root\n--question--\n--text--\nWhich CSS pseudo-class has a specificity of zero, ensuring it won’t interfere with other specific styling rules --distractors--\n:is()\n:not()\n:focus\n--answer--\n:where()\n--question--\n--text--\nWhich one of the following is a tree-structural pseudo-class --distractors--\n:where()\n:valid\n:link\n--answer--\n:root\n--question--\n--text--\nWhich CSS rule will set the background-color of the following element to red if its value is outside the specified range html\n<input type=\"number\" min=\"10\" max=\"25\"/>\n--distractors--\ncss\ninput:in-range {\nbackground-color: red;\n}\ncss\ninput {\nbackground-color: red;\n}\ncss\ninput:valid {\nbackground-color: red;\n}\n--answer--\ncss\ninput:out-of-range {\nbackground-color: red;\n}\n--question--\n--text--\nWhich pseudo-element uses the content property to insert content after the element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "3dbf988b65d1f08c9c0b7cbc5f437dd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "tree-structural pseudo-class --distractors-- :where() :valid :link --answer-- :root --question-- --text-- Which CSS rule will set the background-color of the following element to red if its value is outside the specified range html <input type=\"number\" min=\"10\" max=\"25\"/> --distractors-- css input:in-range { background-color: red; } css input { background-color: red; } css input:valid { background-color: red; } --answer-- css input:out-of-range { background-color: red; } --question-- --text-- Which pseudo-element uses the content property to insert content after the element--distractors--\n::before\n::marker\n::first-letter\n--answer--\n::after\n--question--\n--text--\nWhich pseudo-class applies styles to an element if its value is within the specified range --distractors--\n:out-of-range\n:enabled\n:checked\n--answer--\n:in-range",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11412,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-pseudo-classes\\66ed9002f45ce3ece4053eb6.md",
      "source_type": "git_repo"
    },
    "token_count": 201,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "53a227be519104ad79f8cefd6864e361",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-data-structures\\67f41341453c2247fb2828f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f41341453c2247fb2828f7\ntitle: Data Structures Quiz\nchallengeType: 8\ndashedName: quiz-data-structures\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4287,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-data-structures\\67f41341453c2247fb2828f7.md",
      "source_type": "git_repo"
    },
    "token_count": 60,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d6fad60060da44356b386769e00d39a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-data-structures\\67f41341453c2247fb2828f7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f41341453c2247fb2828f7\ntitle: Data Structures Quiz\nchallengeType: 8\ndashedName: quiz-data-structures\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below--quizzes--\n--quiz--\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4287,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-data-structures\\67f41341453c2247fb2828f7.md",
      "source_type": "git_repo"
    },
    "token_count": 826,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "04bf7a68b47d4e823c9539c8d5212998",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed9010f45ce3ece4053eb8\ntitle: CSS Typography Quiz\nchallengeType: 8\ndashedName: quiz-css-typography\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is the correct way to write an @font-face rule in CSS --distractors--\n@font-face { font: 'MyFont'; size: 12px; }\n@font-family { url: 'myfont ttf'; }\nfont-face: 'MyFont', sans-serif;\n--answer--\n@font-face { font-family: 'MyFont'; src: url('myfont woff2'); }\n--question--\n--text--\nHow do the offset values in the CSS text-shadow property affect the shadow's appearance --distractors--\nThey adjust the weight and color of the shadow They change the color of the shadow They remove the text from the path of the shadow --answer--\nThey control the position of the shadow relative to the text --question--\n--text--\nWhat does kerning refer to in the context of typography --distractors--\nHow the space between lines of text is adjusted to improve readability and aesthetics How the overall spacing of a text block is adjusted for visual purposes How the font size is adjusted for accessibility purposes --answer--\nHow the space between specific pairs of characters is adjusted to improve readability and aesthetics --question--\n--text--\nWhat is a font family in the context of typography --distractors--\nA specific font style used for headings and body text A collection of text options for formatting text A set of visually consistent colors used for text --answer--\nA group of fonts that share similar design characteristics --question--\n--text--\nHow do you import the Roboto font from Google Fonts into your CSS using the @import rule --distractors--\n@font-face { font-family: 'Roboto'; url: 'https://fonts googleapis com/css2 family=Roboto&display=swap'; }\nlink: 'https://fonts googleapis com/css2 family=Roboto';\n@import google-font('Roboto');\n--answer--\n@import url('https://fonts googleapis com/css2 family=Roboto&display=swap');\n--question--\n--text--\nWhich one of the following is a web safe font",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "83b3d4ff03be5ab8d1272db771b27858",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "formatting text A set of visually consistent colors used for text --answer-- A group of fonts that share similar design characteristics --question-- --text-- How do you import the Roboto font from Google Fonts into your CSS using the @import rule --distractors-- @font-face { font-family: 'Roboto'; url: 'https://fonts googleapis com/css2 family=Roboto&display=swap'; } link: 'https://fonts googleapis com/css2 family=Roboto'; @import google-font('Roboto'); --answer-- @import url('https://fonts googleapis com/css2 family=Roboto&display=swap'); --question-- --text-- Which one of the following is a web safe font--distractors--\nComic Sans MS\nPapyrus\nImpact\n--answer--\nTimes New Roman\n--question--\n--text--\nWhat is the purpose of the @font-face rule in CSS --distractors--\nIt defines the font size It creates a fallback font for web pages It adjusts the line height for text --answer--\nIt allows you to use custom fonts by importing them --question--\n--text--\nWhat is the baseline in the context of typography --distractors--\nThe parts of lowercase letters that extend above the x-height The average height of lowercase letters, excluding ascenders and descenders The height of uppercase letters, measured from the baseline to the top --answer--\nThe imaginary line on which most characters rest --question--\n--text--\nWhy is it important to include multiple font options in the font-family property --distractors--\nIt reduces page load time by optimizing the process of loading fonts It prevents browser compatibility issues by providing multiple options It makes the web page more engaging and interactive --answer--\nIt ensures a consistent user experience in case the custom font doesn't load --question--\n--text--\nWhat is the purpose of the text-shadow property in CSS --distractors--\nIt changes the color and font family of the text It adds a decorative border and background color to the text It makes the text bold and adjusts the space between the characters --answer--\nIt creates a visual effect by adding a blurred or offset duplicate of the text --question--\n--text--\nWhat is leading in the context of Typography --distractors--\nA group of fonts that share a common design How space is adjusted between specific pairs of characters in a block of text How space is adjusted between all characters in a block of text --answer--\nThe vertical space between lines of text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "fc0b60b90ecce8b87d3fcb427ca0df17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "adjusts the space between the characters --answer-- It creates a visual effect by adding a blurred or offset duplicate of the text --question-- --text-- What is leading in the context of Typography --distractors-- A group of fonts that share a common design How space is adjusted between specific pairs of characters in a block of text How space is adjusted between all characters in a block of text --answer-- The vertical space between lines of text--question--\n--text--\nWhy is typographic hierarchy important in design --distractors--\nIt improves the readability of large blocks of text It ensures consistency across different devices It ensures that all text elements are the same size --answer--\nIt helps organize content and guide users through the information --question--\n--text--\nWhich of the following is NOT a CSS property related to fonts --distractors--\nfont-size\nfont-weight\nfont-family\n--answer--\nfont-padding\n--question--\n--text--\nWhich of the following is a correct example of the text-shadow property in CSS --distractors--\ntext-shadow: solid 5px black;\ntext-shadow: 5px blur black;\ntext-shadow: inset 2px 2px white;\n--answer--\ntext-shadow: 2px 2px 5px rgba(0, 0, 0, 0 5);\n--question--\n--text--\nWhat are web safe fonts --distractors--\nFonts that provide advanced typographic features Fonts that automatically adjust to the user's preferred settings Fonts that are specifically designed for print media --answer--\nFonts that are very likely to be available on most devices and browsers --question--\n--text--\nWhy are sans-serif fonts generally considered easier to read on screens than serif fonts --distractors--\nBecause they have small lines at the end of characters Because they are primarily used for decorative purposes Because they were specifically designed for print media --answer--\nBecause they have simple and clean lines --question--\n--text--\nHow do you specify multiple font families in the font-family property in CSS --distractors--\nBy separating them with spaces and listing the preferred font last By separating them with commas and listing the preferred font last By enclosing them in curly braces and listing the preferred font first --answer--\nBy separating them with commas and listing the preferred font first --question--\n--text--\nIn the @font-face rule, which property specifies where the font file is located",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "c56232665903a6021f3640ac2632a1cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- How do you specify multiple font families in the font-family property in CSS --distractors-- By separating them with spaces and listing the preferred font last By separating them with commas and listing the preferred font last By enclosing them in curly braces and listing the preferred font first --answer-- By separating them with commas and listing the preferred font first --question-- --text-- In the @font-face rule, which property specifies where the font file is located--distractors--\nfont-size\nurl\nfont-family\n--answer--\nsrc\n--question--\n--text--\nWhich of the following is a good practice when using fonts in web design --distractors--\nAlways using at least eight different font families throughout the website Using decorative fonts for both headings and body text Avoiding fallback fonts whenever possible --answer--\nUsing no more than two or three font families to ensure visual consistency --question--\n--text--\nWhat is tracking in the context of typography --distractors--\nThe parts of lowercase letters that extend below the baseline The average height of lowercase letters, excluding ascenders and descenders How space is adjusted between all lines of text in a block of text --answer--\nHow space is adjusted between all characters in a block of text --quiz--\n--question--\n--text--\nWhat is typography --distractors--\nIt is the overall design and style of a set of characters, numbers, and symbols It is about how the individual characters are designed and arranged on a page It is the specific variation of a typeface with specific characteristics --answer--\nIt is the art of choosing fonts and format to make text visually appealing and easy to read --question--\n--text--\nWhat characteristics does the font weight NOT include --distractors--\nLight\nRegular\nBold\n--answer--\nItalics\n--question--\n--text--\nWhich lowercase letter does NOT contain an ascender --distractors--\nh\nb\nf\n--answer--\ng\n--question--\n--text--\nWhich lowercase letter does NOT contain a descender --distractors--\ny\ng\nq\n--answer--\nd\n--question--\n--text--\nWhat does tracking affect in typography --distractors--\nIt affects the vertical alignment of characters It affects how complementary fonts are used It affects the slant and orientation of characters --answer--\nIt affects how dense and open the text will be --question--\n--text--\nWhere are web safe fonts stored --distractors--\nIn the website hosting the web page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5e1886656d2cdd77ce47afc63648bab0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--answer-- g --question-- --text-- Which lowercase letter does NOT contain a descender --distractors-- y g q --answer-- d --question-- --text-- What does tracking affect in typography --distractors-- It affects the vertical alignment of characters It affects how complementary fonts are used It affects the slant and orientation of characters --answer-- It affects how dense and open the text will be --question-- --text-- Where are web safe fonts stored --distractors-- In the website hosting the web pageIn folders on internet servers In the styles css file --answer--\nIn the system files of the computer or device --question--\n--text--\nWhich of the following is NOT a valid format for a font --distractors--\nwoff\ncollection\nsvg\n--answer--\nett\n--question--\n--text--\nWhat does the acronym woff stand for --distractors--\nWeb Only Font Format Web Open Font Family Web Only Font Family --answer--\nWeb Open Font Format --question--\n--text--\nWhich character can you use to separate multiple text-shadow property values --distractors-- ;\n:\n--answer--\n,\n--question--\n--text--\nHow is leading measured in typography --distractors--\nFrom the end of one character to the start of the next character From the average height of uppercase letters to average height of lowercase letters From the baseline to the top of uppercase letters --answer--\nFrom the baseline of one line to the baseline of the next line --question--\n--text--\nWhat is an example of kerning --distractors--\nMoving the tails of lowercase letters y and g above the baseline Adjusting the space between all characters Adjusting the white space between words --answer--\nReducing the space between the letters A and V --question--\n--text--\nWhat is an example of a serif font --distractors--\nIt does not have small lines at the end of characters It has small dots at the end of characters It has large dots at the end of characters --answer--\nIt has small lines at the end of characters --question--\n--text--\nWhich of the following is TRUE about a sans-serif font --distractors--\nIt has small dots at the end of characters It has large dots at the end of characters It has small lines at the end of characters --answer--\nIt does not have small lines at the end of characters --question--\n--text--\nWhich example correctly uses the font-family property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "2cd681fce2e4a9e8aaeae76bd254e992",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "at the end of characters --answer-- It has small lines at the end of characters --question-- --text-- Which of the following is TRUE about a sans-serif font --distractors-- It has small dots at the end of characters It has large dots at the end of characters It has small lines at the end of characters --answer-- It does not have small lines at the end of characters --question-- --text-- Which example correctly uses the font-family property--distractors--\ncss\nfont-family {\nbody: Arial;\n}\ncss\nbody {\nArial: font-family;\n}\ncss\nbody {\nfont-family; Arial:\n}\n--answer--\ncss\nbody {\nfont-family: Arial;\n}\n--question--\n--text--\nWhat is font weight in typography --distractors--\nIt is the weight of the font It is the size of the the font It is the average weight of the characters --answer--\nIt is the thickness of the characters --question--\n--text--\nWhat is a best practice with typography --distractors--\nChoosing commonly used fonts as they can load in a short amount of time Using metrics to see how many users visit your site and engage with the content Using unique fonts and images that are eye catching and relevant to the content --answer--\nChoosing clear and simple fonts to make your designs easy to understand --question--\n--text--\nHow are font families related --distractors--\nThey are developed by the same design team They are all designed by the same designer They share the same name but are based on a different typeface --answer--\nThey are a group of fonts that share a common design --question--\n--text--\nWhich element is used when accessing external fonts --distractors--\nstyle\nmeta\nhead\n--answer--\nlink\n--question--\n--text--\nWhich of the following can be used to access external fonts --distractors--\nstyle\n@font-face\nmeta\n--answer--\n@import\n--question--\n--text--\nWhich attribute does the link element use to access fonts --distractors--\nrel\nurl\nsrc\n--answer--\nhref",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12752,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-typography\\66ed9010f45ce3ece4053eb8.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "8e0a3efc4b4075865aaa7eadce853602",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed8ffcf45ce3ece4053eb5\ntitle: CSS Positioning Quiz\nchallengeType: 8\ndashedName: quiz-css-positioning\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is NOT a valid value for the position property --distractors--\nfixed\nabsolute\nrelative\n--answer--\nabove\n--question--\n--text--\nWhat is the main purpose of the float property in CSS --distractors--\nFloats are used to remove an element from its normal flow on the page and automatically position it in the upper right hand side of the webpage Floats are used to remove an element from its normal flow on the page and position it to the top of its container Floats are used to remove an element from its normal flow on the page and automatically position it to the bottom right hand side of webpage --answer--\nFloats are used to remove an element from its normal flow on the page and position it either on the left or right side of its container --question--\n--text--\nWhich of the following is an example making a box element float to the left --distractors--\ncss box {\nleft: float;\nmargin-right: 15px;\nwidth: 50px;\nheight: 50px;\nbackground-color: black;\n}\ncss box {\nposition: float-left;\nmargin-right: 15px;\nwidth: 50px;\nheight: 50px;\nbackground-color: black;\n}\ncss box {\nfloat: left-side;\nmargin-right: 15px;\nwidth: 50px;\nheight: 50px;\nbackground-color: black;\n}\n--answer--\ncss box {\nfloat: left;\nmargin-right: 15px;\nwidth: 50px;\nheight: 50px;\nbackground-color: black;\n}\n--question--\n--text--\nWhat is the role of the clear property --distractors--\nIt is used to determine if an element needs to be moved to the bottom of the page It is used to determine if an element needs to be completely cleared from the page It is used to determine if an element needs to be fixed to the top of the page --answer--\nIt is used to determine if an element needs to be moved below the floated content",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "3464230d95d94b583e7d2f60b353b3b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the role of the clear property --distractors-- It is used to determine if an element needs to be moved to the bottom of the page It is used to determine if an element needs to be completely cleared from the page It is used to determine if an element needs to be fixed to the top of the page --answer-- It is used to determine if an element needs to be moved below the floated content--question--\n--text--\nWhich CSS property is used to control the vertical stacking order of positioned elements that overlap on the page --distractors--\nposition\nbg-green\nfloat\n--answer--\nz-index\n--question--\n--text--\nWhich of the following is the correct syntax for relative positioning --distractors--\ncss relative {\nposition: relative-position;\ntop: 30px;\nleft: 30px;\n}\ncss relative {\nrelative-position: relative;\ntop: 30px;\nleft: 30px;\n}\ncss relative {\nrelative: position;\ntop: 30px;\nleft: 30px;\n}\n--answer--\ncss relative {\nposition: relative;\ntop: 30px;\nleft: 30px;\n}\n--question--\n--text--\nWhich CSS property would you use to fix an element at a certain position on the page so that it does not move when scrolling occurs --distractors--\nposition: no-scroll;\nposition: relative;\ndisplay: block;\n--answer--\nposition: fixed;\n--question--\n--text--\nWhat does absolute positioning do to an element --distractors--\nAbsolute positioning is used to determine if an element needs to be moved below the floated content Absolute positioning is used to position the element within the normal document flow Absolute positioning is used to control the vertical stacking order of positioned elements that overlap on the page --answer--\nAbsolute positioning allows you to take an element out of the normal document flow, making it behave independently from other elements --question--\n--text--\nWhich of the following is NOT a valid property that you can use for absolute positioning --distractors--\nright\nbottom\ntop\n--answer--\nside\n--question--\n--text--\nWhat is the key difference between relative and absolute positioning --distractors--\nAbsolute positioning sets the element in a sticky position while relative positioning takes an element out of the normal document flow Relative positioning sets the element in a fixed position while absolute positioning takes an element out of the normal document flow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "034d3db5d8943852b0f0949e8ed027f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the following is NOT a valid property that you can use for absolute positioning --distractors-- right bottom top --answer-- side --question-- --text-- What is the key difference between relative and absolute positioning --distractors-- Absolute positioning sets the element in a sticky position while relative positioning takes an element out of the normal document flow Relative positioning sets the element in a fixed position while absolute positioning takes an element out of the normal document flowAbsolute positioning positions the element within the normal document flow while relative positioning takes an element out of the normal document flow --answer--\nRelative positioning positions the element within the normal document flow while absolute positioning takes an element out of the normal document flow --question--\n--text--\nWhich of the following is an example of positioning a box in the upper left hand corner of the page --distractors--\ncss box {\nposition: absolute;\nbottom: 0;\nleft: 0;\nbackground-color: coral;\nwidth: 50px;\nheight: 50px;\n}\ncss box {\nposition: absolute;\ntop: 0;\nright: 0;\nbackground-color: coral;\nwidth: 50px;\nheight: 50px;\n}\ncss box {\nposition: absolute;\nbottom: 0;\nright: 0;\nbackground-color: coral;\nwidth: 50px;\nheight: 50px;\n}\n--answer--\ncss box {\nposition: absolute;\ntop: 0;\nleft: 0;\nbackground-color: coral;\nwidth: 50px;\nheight: 50px;\n}\n--question--\n--text--\nWhich positioning method allows an element to stick to a defined position only when you scroll past a certain point --distractors--\nFloat positioning Fixed positioning Absolute positioning --answer--\nSticky positioning --question--\n--text--\nWhich of the following is a correct example of using sticky positioning --distractors--\ncss box {\nsticky: position;\ntop: 30px;\nright: 30px;\nwidth: 50px;\nheight: 50px;\nbackground-color: red;\n}\ncss box {\nposition: sticky-fixed;\ntop: 30px;\nright: 30px;\nwidth: 50px;\nheight: 50px;\nbackground-color: red;\n}\ncss box {\nposition: sticky-top;\nright: 30px;\nwidth: 50px;\nheight: 50px;\nbackground-color: red;\n}\n--answer--\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "2e48b405ce9eb666764f16b0908138c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a certain point --distractors-- Float positioning Fixed positioning Absolute positioning --answer-- Sticky positioning --question-- --text-- Which of the following is a correct example of using sticky positioning --distractors-- css box { sticky: position; top: 30px; right: 30px; width: 50px; height: 50px; background-color: red; } css box { position: sticky-fixed; top: 30px; right: 30px; width: 50px; height: 50px; background-color: red; } css box { position: sticky-top; right: 30px; width: 50px; height: 50px; background-color: red; } --answer-- cssbox {\nposition: sticky;\ntop: 30px;\nright: 30px;\nwidth: 50px;\nheight: 50px;\nbackground-color: red;\n}\n--question--\n--text--\nWhat is the difference between sticky and fixed positioning --distractors--\nSticky elements can only be used in table layouts while fixed elements can be used in any type of CSS layout Sticky elements will always remain in the same position while fixed elements will stick to a certain point then behave like relative elements Fixed elements will be positioned relative to its normal position while sticky elements will only stick to a certain point then behave like relative elements --answer--\nFixed elements will remain in the same position on the screen while sticky elements will only stick to a certain point then behave like relative elements --question--\n--text--\nWhat problem did the clearfix hack solve when working with floats --distractors--\nThe clearfix hack helped solve the issue of floated elements being removed from the normal document flow and being placed in a fixed position on the page The clearfix hack helped solve the issue of floated elements not being responsive in mobile and tablet layouts The clearfix hack helped solve the issue of floated elements disappearing from the page --answer--\nThe clearfix hack helped solve the issue of overlaps and collapsing in the layouts when multiple floated elements were stacked next to each other --question--\n--text--\nWhich of the following is a correct example for using the clearfix hack --distractors--\ncss clearfix::before {\nposition: fixed;\ntop: 0;\nwidth: 100%;\nclear: both;\n}\ncss clearfix::after {\nposition: relative;\ntop: 30px;\nleft: 30px;\nclear: all;\n}\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "dcbd01fb639b03bce7e2f791ff07efff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "solve the issue of floated elements disappearing from the page --answer-- The clearfix hack helped solve the issue of overlaps and collapsing in the layouts when multiple floated elements were stacked next to each other --question-- --text-- Which of the following is a correct example for using the clearfix hack --distractors-- css clearfix::before { position: fixed; top: 0; width: 100%; clear: both; } css clearfix::after { position: relative; top: 30px; left: 30px; clear: all; } cssclearfix::before {\ntop: 30px;\nclear: none;\n}\n--answer--\ncss clearfix::after {\ncontent: \"\";\ndisplay: block;\nclear: both;\n}\n--question--\n--text--\nWhat is static positioning --distractors--\nThis is used to remove an element from its normal flow on the page and automatically position it in the upper right hand side of the webpage This allows you to take an element out of the normal document flow, making it behave independently from other elements This allows an element to stick to a defined position only when you scroll past a certain point --answer--\nThis is the normal flow for the document Elements are positioned from top to bottom and left to right one after another --question--\n--text--\nWhich of the following is an example of setting the navbar to the top of the page using fixed positioning --distractors--\ncss navbar {\nfixed: top;\ntop: 0;\nwidth: 100%;\n}\ncss navbar {\nupper: fixed;\nwidth: 100%;\n}\ncss navbar {\nposition: fixed-top;\ntop: 0;\nwidth: 100%;\n}\n--answer--\ncss navbar {\nposition: fixed;\ntop: 0;\nwidth: 100%;\n}\n--question--\n--text--\nWhich of the following is a valid value to use for the z-index property --distractors--\n12 0\nnone\nup\n--answer--\n1\n--question--\n--text--\nWhich of the following is the default value of the position property --distractors--\ninherit\ninitial\nrelative\n--answer--\nstatic\n--quiz--\n--question--\n--text--\nWhich position value lets you adjust an element's position with top and left while keeping it within the normal document flow --distractors--\nposition: absolute;\nposition: static;\nposition: fixed;\n--answer--\nposition: relative;\n--question--\n--text--\nHow does an element with position: sticky; initially behave",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "7a7a57d6009d73aaee55802d06f3b9fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for the z-index property --distractors-- 12 0 none up --answer-- 1 --question-- --text-- Which of the following is the default value of the position property --distractors-- inherit initial relative --answer-- static --quiz-- --question-- --text-- Which position value lets you adjust an element's position with top and left while keeping it within the normal document flow --distractors-- position: absolute; position: static; position: fixed; --answer-- position: relative; --question-- --text-- How does an element with position: sticky; initially behave--distractors--\nIt behaves like a fixed element until a scroll position is reached It is always removed from the normal document flow It behaves like an absolute element within its parent --answer--\nIt behaves like a relative element until a specified scroll position is met --question--\n--text--\nWhich of the following demonstrates a valid and effective use of the z-index property to make box-two appear on top of box-one --distractors--\ncss box-one {\nposition: static;\nz-index: 2;\n} box-two {\nposition: static;\nz-index: 1;\n}\ncss box-one {\nposition: absolute;\nstack-order: 1;\n} box-two {\nposition: absolute;\nstack-order: 2;\n}\ncss box-one {\nfloat: left;\nz-index: 1;\n} box-two {\nfloat: left;\nz-index: 2;\n}\n--answer--\ncss box-one {\nposition: absolute;\nz-index: 1;\n} box-two {\nposition: absolute;\nz-index: 2;\n}\n--question--\n--text--\nWhat is the z-index property used for in CSS --distractors--\nIt sets the zoom level of the page It controls the horizontal alignment of elements within a flex container It defines the spacing between an element's content and its border --answer--\nIt controls the vertical stacking order of positioned elements that overlap --question--\n--text--\nWhen you apply top: 10%; to an element with position: fixed;, what is the 10% calculated in relation to --distractors--\nThe height of the element itself The height of its parent container The width of the viewport --answer--\nThe height of the viewport --question--\n--text--\nWhich of the code examples is a correct use of the z-index property to place an overlay above other content --distractors--\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "5c7a84dce897b646b68fb1cefe0f5b2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "stacking order of positioned elements that overlap --question-- --text-- When you apply top: 10%; to an element with position: fixed;, what is the 10% calculated in relation to --distractors-- The height of the element itself The height of its parent container The width of the viewport --answer-- The height of the viewport --question-- --text-- Which of the code examples is a correct use of the z-index property to place an overlay above other content --distractors-- cssoverlay {\nz-index: 5;\nbackground-color: black;\n}\ncss overlay {\ndisplay: block;\nz-layer: 1;\nbackground-color: black;\n}\ncss overlay {\nfloat: left;\nz-index: 2;\nbackground-color: black;\n}\n--answer--\ncss overlay {\nposition: absolute;\nz-index: 10;\nbackground-color: black;\n}\n--question--\n--text--\nWhich CSS property is used to control whether an element should be moved below floated elements --distractors--\nfloat\noverflow\ndisplay\n--answer--\nclear\n--question--\n--text--\nHow will an element with position: relative; and bottom: 25px; be moved --distractors--\nIt will move 25px down from its normal position It will move 25px to the right of its normal position It will be positioned 25px from the bottom of the viewport --answer--\nIt will move 25px up from its normal position --question--\n--text--\nThe z-index property will only affect elements that have what CSS property applied --distractors--\nA float value other than none A display value of inline-block A background-color set --answer--\nA position value other than static --question--\n--text--\nWhat would be the effect of applying float: right; to a logo in a header --distractors--\nThe logo would be aligned to the right, but would remain in the normal document flow, preventing other content from wrapping The logo would be taken out of the flow and positioned on the right side of the entire browser viewport, not its container The logo would become a block-level element that takes up the full width of the header, pushing other elements below it --answer--\nThe logo would be removed from its normal flow and placed on the right side of its container, with other content wrapping around it --question--\n--text--\nWhich CSS snippet will keep an element fixed to the top of the viewport once it is scrolled to",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "c07a9b691224d060a4336fcdb164a75e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "side of the entire browser viewport, not its container The logo would become a block-level element that takes up the full width of the header, pushing other elements below it --answer-- The logo would be removed from its normal flow and placed on the right side of its container, with other content wrapping around it --question-- --text-- Which CSS snippet will keep an element fixed to the top of the viewport once it is scrolled to--distractors--\ncss header {\nposition: fixed;\ntop: 0;\n}\ncss header {\nposition: relative;\ntop: 0;\n}\ncss header {\nposition: absolute;\ntop: 0;\n}\n--answer--\ncss header {\nposition: sticky;\ntop: 0;\n}\n--question--\n--text--\nWhat is the specific purpose of clear: both; in CSS --distractors--\nIt cancels out the float property on the element itself, returning it to the normal document flow It removes any clear properties that were inherited from a parent element, restoring the default floating behavior It only clears floated elements that are on the right side, allowing left-floated elements to remain as they are --answer--\nIt ensures the element is moved below any floated elements that appear before it on both the left and right sides --question--\n--text--\nGiven the following code, how will child be positioned css parent {\n/* No position property set */\nheight: 200px;\n} child {\nposition: absolute;\ntop: 10px;\n}\n--distractors--\nIt will be positioned 10px from the top of the parent element, as absolute positioning is always relative to the direct parent It will remain in its default static position because the absolute value is invalid without a z-index property It will be positioned 10px from the top of the browser window, remaining fixed in place even when the user scrolls the page --answer--\nIt will be positioned 10px from the top of the initial containing block, such as the <body>, because its parent is not positioned --question--\n--text--\nWhat effect will the following CSS have on the box element css box {\nposition: absolute;\ntop: 50px;\nleft: 50px;\n}\n--distractors--\nThe element will remain in its normal flow but will be indented by 50px from the top and left, pushing other elements away",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "733b2755b9b80b5b44cd0618a079e879",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the user scrolls the page --answer-- It will be positioned 10px from the top of the initial containing block, such as the <body>, because its parent is not positioned --question-- --text-- What effect will the following CSS have on the box element css box { position: absolute; top: 50px; left: 50px; } --distractors-- The element will remain in its normal flow but will be indented by 50px from the top and left, pushing other elements awayThe element will be fixed to the viewport and will stay 50px from the top and 50px from the left, even when the page is scrolled The element will be positioned relative to its own starting point, moving 50px down and 50px to the right without leaving the document flow --answer--\nThe element will be taken out of the normal flow and placed 50px from the top and 50px from the left of its nearest positioned ancestor --question--\n--text--\nWhich of the following position values removes an element entirely from the document's normal flow --distractors--\nposition: static;\nposition: relative;\nposition: inherit;\n--answer--\nposition: absolute;\n--question--\n--text--\nGiven a parent and a child element, which CSS snippet will correctly position the child 20px from the top left corner of the parent element --distractors--\ncss parent {\n/* position: static; by default */\n} child {\nposition: absolute;\ntop: 20px;\nleft: 20px;\n}\ncss parent {\nposition: relative;\n} child {\nposition: relative;\ntop: 20px;\nleft: 20px;\n}\ncss parent {\nposition: relative;\n} child {\nfloat: left;\ntop: 20px;\nleft: 20px;\n}\n--answer--\ncss parent {\nposition: relative;\n} child {\nposition: absolute;\ntop: 20px;\nleft: 20px;\n}\n--question--\n--text--\nWhat is the difference between static and relative positioning --distractors--\nstatic positioning removes an element from the document flow, while relative positioning keeps it in the flow An element with position: static; can be offset with the top and left properties, while position: relative; cannot static positioning is for block-level elements, while relative positioning is only intended for inline elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "ec026f5639e0f0da9fd7c02126110083",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "parent { position: relative; } child { position: absolute; top: 20px; left: 20px; } --question-- --text-- What is the difference between static and relative positioning --distractors-- static positioning removes an element from the document flow, while relative positioning keeps it in the flow An element with position: static; can be offset with the top and left properties, while position: relative; cannot static positioning is for block-level elements, while relative positioning is only intended for inline elements--answer--\nBoth keep an element in the normal document flow, but relative allows the element to be offset from its original position --question--\n--text--\nWhich CSS snippet correctly floats an image to the left, allowing other content to wrap around it --distractors--\ncss image {\nposition: absolute;\nleft: 0;\n}\ncss image {\ndisplay: inline-block;\n}\ncss image {\ntext-align: left;\n}\n--answer--\ncss image {\nfloat: left;\n}\n--question--\n--text--\nWhat is the difference between absolute and fixed positioning --distractors--\nabsolute positioning is relative to the viewport, while fixed positioning is relative to the nearest positioned ancestor absolute positioning keeps the element in the normal document flow, while fixed positioning removes it from the flow Both are positioned relative to the viewport, but fixed elements will scroll with the page while absolute elements will not --answer--\nabsolute positioning is relative to the nearest positioned ancestor, while fixed positioning is relative to the browser viewport --question--\n--text--\nWhich position value places an element in the normal document flow and prevents offset properties like top and left from having any effect --distractors--\nposition: relative;\nposition: absolute;\nposition: fixed;\n--answer--\nposition: static;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19286,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-positioning\\66ed8ffcf45ce3ece4053eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "c63de7e679f701a8f41b73ff904478c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-debugging-javascript\\66edd10913f078e7669eca81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd10913f078e7669eca81\ntitle: Debugging JavaScript Quiz\nchallengeType: 8\ndashedName: quiz-debugging-javascript\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat type of error occurs when a variable is used before it is defined --distractors--\nSyntaxError\nLogicalError\nRangeError\n--answer--\nReferenceError\n--question--\n--text--\nWhich JavaScript statement can be used to intentionally pause the execution of your code for debugging purposes --distractors--\ntry catch\nconsole log()\nalert()\n--answer--\ndebugger\n--question--\n--text--\nWhich console method can be used to display data as a table --distractors--\nconsole log()\nconsole warn()\nconsole error()\n--answer--\nconsole table()\n--question--\n--text--\nHow can you inspect network requests in Chrome developer tools --distractors--\nBy using the \"Network Links\" tab By using the \"Console\" tab By using the \"Sources\" tab --answer--\nBy using the \"Network\" tab --question--\n--text--\nWhat is the correct syntax for using try catch in JavaScript --distractors--\ntry { } else { }\ntry { } stack(catch) { }\ntry { } error { }\n--answer--\ntry { } catch(error) { }\n--question--\n--text--\nWhich of the following is an example of a SyntaxError --distractors--\nUsing a variable before it is declared Using a variable twice in the same scope Using a variable that is out of scope --answer--\nMissing a comma between elements of an array --question--\n--text--\nWhat is the purpose of breakpoints in JavaScript debugging --distractors--\nAutomatically correct code mistakes Prevent code from being executed Log messages to the console --answer--\nPause execution at a specific point --question--\n--text--\nWhat happens when the throw statement is executed --distractors--\nThe program terminates immediately, ignoring all remaining code The throw statement logs an error to the console but does not stop execution It pauses code execution until resumed by disabling breakpoints --answer--\nAn exception is thrown and the catch block (if present) is executed --question--\n--text--\nWhich method would you use to inspect variables or expressions during debugging in developer tools --distractors--\ninspect()\ntrace()\nconsole error()\n--answer--\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6419,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-debugging-javascript\\66edd10913f078e7669eca81.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e64d7fb68452b6330446fe3f585afeb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-debugging-javascript\\66edd10913f078e7669eca81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "happens when the throw statement is executed --distractors-- The program terminates immediately, ignoring all remaining code The throw statement logs an error to the console but does not stop execution It pauses code execution until resumed by disabling breakpoints --answer-- An exception is thrown and the catch block (if present) is executed --question-- --text-- Which method would you use to inspect variables or expressions during debugging in developer tools --distractors-- inspect() trace() console error() --answer-- consolelog()\n--question--\n--text--\nWhat type of error will occur when the following code is executed ```js\nfunction example() {\nconsole log(a);\nlet a = 5;\n}\nexample();\n```\n--distractors--\nFunctionError\nSyntaxError\nStack overflow error\n--answer--\nReferenceError\n--question--\n--text--\nWhich tool is commonly used to step through code line by line during debugging --distractors--\nconsole log()\nalert()\nthrow statement --answer--\nBreakpoints in Developer Tools --question--\n--text--\nWhat type of error occurs when attempting to access a property of undefined --distractors--\nSyntaxError\nLogicalError\nRangeError\n--answer--\nTypeError\n--question--\n--text--\nWhat does the finally block do in a try catch statement --distractors--\nOnly executes if there's an error Skips execution if catch is triggered Exits the code block immediately --answer--\nAlways executes, regardless of errors --question--\n--text--\nWhat would be the result of running the following code js\nconst arr = [];\narr length = -1;\n--distractors--\nThe code will throw a SyntaxError The code will log an empty array to the console The code will throw an out of memory error --answer--\nThe code will throw a RangeError --question--\n--text--\nWhich of the following answers is true about the debugger statement in JavaScript --distractors--\nThe debugger statement is always ignored by the browser The debugger statement sends an error report to the server The debugger statement always reloads the page and clears the console --answer--\nThe debugger statement is ignored when the developer tools are not open --question--\n--text--\nWhat is the primary purpose of \"profiling\" in JavaScript --distractors--\nTo write unit tests for JavaScript functions and create profiles of code execution To pause code execution and release the captured resources like memory and CPU To convert JavaScript code into machine code for faster execution",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6419,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-debugging-javascript\\66edd10913f078e7669eca81.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5aa7ffb33c6db0576b77ead18ba0508a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-debugging-javascript\\66edd10913f078e7669eca81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "report to the server The debugger statement always reloads the page and clears the console --answer-- The debugger statement is ignored when the developer tools are not open --question-- --text-- What is the primary purpose of \"profiling\" in JavaScript --distractors-- To write unit tests for JavaScript functions and create profiles of code execution To pause code execution and release the captured resources like memory and CPU To convert JavaScript code into machine code for faster execution--answer--\nTo identify performance bottlenecks by recording CPU usage, function calls, and execution time --question--\n--text--\nWhat is a \"watcher\" in the context of debugging --distractors--\nA tool for pausing code execution A built-in function for logging errors A JavaScript method for handling exceptions --answer--\nA tool for monitoring the value of variables --question--\n--text--\nWhen should you use console error() instead of console log() --distractors--\nTo display table data To log messages only during debugging To log information about the browser --answer--\nTo log error messages --question--\n--text--\nWhat does the Error() constructor do in JavaScript --distractors--\nLogs error messages to the console Runs code in a sandbox Terminates the program --answer--\nCreates a new error object that can be thrown --question--\n--text--\nWhat is the purpose of the console dir() method in JavaScript --distractors--\nTo create a separate directory for log files for individual error type To generate a visual representation of the console output and save it in a pdf file To stop the program execution and display an error message related to memory and CPU usage --answer--\nTo output a hierarchical, interactive list of properties for a specified JavaScript object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6419,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-debugging-javascript\\66edd10913f078e7669eca81.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fe5af8338aa4a2b4825c6c8653f5b0ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed9018f45ce3ece4053eb9\ntitle: CSS Variables Quiz\nchallengeType: 8\ndashedName: quiz-css-variables\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is NOT a valid descriptor in the @property rule --distractors--\nsyntax\ninherits\ninitial-value\n--answer--\nanimation\n--question--\n--text--\nIn the following code, which value will color have if --main-color is not defined css\np {\ncolor: var(--main-color, pink);\n}\n--distractors--\nUndefined\nNo color will be applied --main-color\n--answer--\npink\n--question--\n--text--\nWhich of the following is a valid way to declare a custom property in CSS --distractors--\n$background-color: #333;\n@property: #333\nvar(--background-color: #333);\n--answer--\n--background-color: #333;\n--question--\n--text--\nWhat is the main purpose of using custom properties in CSS --distractors--\nTo change the DOM structure To create dynamic selectors To improve accessibility --answer--\nTo define reusable styles --question--\n--text--\nWhat does the :root selector represent --distractors--\nThe first child element of the body The parent element of all header elements The first child of the html tag --answer--\nThe highest-level element in the DOM tree --question--\n--text--\nHow do you apply a --foreground custom property as the color in CSS --distractors--\ncolor: --foreground;\ncolor: css(--foreground);\ncolor: $foreground;\n--answer--\ncolor: var(--foreground);\n--question--\n--text--\nWhat is the purpose of the @property rule in CSS --distractors--\nTo define a media query To control CSS animations and their timing To group CSS properties into one rule --answer--\nTo define how custom properties behave --question--\n--text--\nWhen declaring a custom @property, what is the purpose of the syntax in its definition --distractors--\nIt specifies the default value of the custom property It determines whether the property can be inherited by child elements It defines whether the property is applied to all elements --answer--\nIt enforces a specific data type or value pattern for the custom property --question--\n--text--\nWhat should you be cautious of when using custom properties",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "98b2d3b12ea6cd1a3062c31788d45191",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "properties behave --question-- --text-- When declaring a custom @property, what is the purpose of the syntax in its definition --distractors-- It specifies the default value of the custom property It determines whether the property can be inherited by child elements It defines whether the property is applied to all elements --answer-- It enforces a specific data type or value pattern for the custom property --question-- --text-- What should you be cautious of when using custom properties--distractors--\nCustom properties are automatically converted to px units Custom properties always override inline styles Custom properties cannot be used to set font values --answer--\nCustom properties may not be supported in older browsers --question--\n--text--\nWhat is the purpose of providing a fallback value in the var() function for CSS custom properties --distractors--\nTo reduce the amount of CSS code To improve performance in modern browsers To optimize rendering time on slow networks --answer--\nTo ensure a valid value is applied if the custom property is undefined --question--\n--text--\nWhen defining a variable --foreground inside a media query, what happens when the media query no longer matches the current viewport --distractors--\nThe custom property is preserved and continues to apply The custom property reverts to its initial value The custom property is recalculated based on the viewport --answer--\nThe custom property is no longer available as it is scoped to the media query --question--\n--text--\nHow would the following declaration behave css\ncolor: var(--main-color, var(--fallback-color, #000));\n--distractors--\nIt will apply --main-color even if it is not defined, defaulting to that value It will apply --main-color and --fallback-color simultaneously, resulting in a blend of the two colors It will always default to #000, regardless of whether --main-color or --fallback-color is defined --answer--\nIt applies --main-color if defined; otherwise, checks --fallback-color; and if both are undefined, it uses #000 --question--\n--text--\nWhat is one benefit of using @property in CSS --distractors--\nIt improves performance by precomputing custom property values It automatically prefixes custom properties for better browser support It restricts the use of custom properties to specific elements --answer--\nIt allows for animations of custom properties --question--\n--text--\nWhat does the inherits property in a custom @property declaration control --distractors--\nWhether the custom property will have an initial value Whether the property can have a shorthand version",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "7bd42a7969d041e1c128d8b6c10803c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "What is one benefit of using @property in CSS --distractors-- It improves performance by precomputing custom property values It automatically prefixes custom properties for better browser support It restricts the use of custom properties to specific elements --answer-- It allows for animations of custom properties --question-- --text-- What does the inherits property in a custom @property declaration control --distractors-- Whether the custom property will have an initial value Whether the property can have a shorthand versionWhether the property accepts fallback values --answer--\nWhether the custom property's value is passed to child elements --question--\n--text--\nIn the declaration of a custom @property, what does the initial-value specify --distractors--\nThe acceptable values the property can accept The priority of the property in the cascade The type of value the property must have --answer--\nThe fallback value for the property --question--\n--text--\nGiven the following HTML and CSS code, what will be the value of the color property for the box element ```html\nText\n```\n```css\n:root {\n--main-color: red;\n} container {\n--main-color: blue;\n} box {\ncolor: var(--main-color, black);\n}\n```\n--distractors--\nblack\nred\ngreen\n--answer--\nblue\n--question--\n--text--\nWhich property should a CSS gradient be applied to --distractors--\ncolor\nborder-radius\nbox-shadow\n--answer--\nbackground\n--question--\n--text--\nWhat is the purpose of color stops in CSS gradients --distractors--\nTo define the transparency level of the gradient To specify the direction of the gradient To repeat the gradient in a fixed pattern --answer--\nTo define the specific points where colors change in the gradient --question--\n--text--\nWhat happens if no angle or direction is specified in a CSS linear gradient --distractors--\nThe gradient defaults to a diagonal direction The gradient defaults to moving from bottom to top The gradient defaults to moving from left to right --answer--\nThe gradient defaults to moving from top to bottom --question--\n--text--\nWhich CSS gradient function allows you to create a gradient that radiates outward from a central point --distractors--\nlinear-gradient()\nconic-gradient()\nrepeating-linear-gradient()\n--answer--\nradial-gradient()\n--quiz--\n--question--\n--text--\nWhich of the following is a correct way to declare a CSS custom property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "05f5fd1b63e6383c12a33eab4c9e5a29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "gradient defaults to a diagonal direction The gradient defaults to moving from bottom to top The gradient defaults to moving from left to right --answer-- The gradient defaults to moving from top to bottom --question-- --text-- Which CSS gradient function allows you to create a gradient that radiates outward from a central point --distractors-- linear-gradient() conic-gradient() repeating-linear-gradient() --answer-- radial-gradient() --quiz-- --question-- --text-- Which of the following is a correct way to declare a CSS custom property--distractors--\nbackground-color: var(--blue);\ncustom-property: blue;\ndefine --my-color: blue;\n--answer--\n--my-color: blue;\n--question--\n--text--\nWhat selector is typically used to define global CSS custom properties --distractors-- global {}\n* {}\nbody {}\n--answer--\n:root {}\n--question--\n--text--\nWhen using var(), why is it recommended to include a fallback value --distractors--\nIt ensures the variable will animate correctly It avoids loading external stylesheets It prevents browser reflow --answer--\nIt guarantees a valid value if the custom property is undefined --question--\n--text--\nWhat is the correct syntax to apply a custom property as a background color --distractors--\nbackground: get(--main-bg);\nbackground: css(--main-bg);\nbackground: --main-bg;\n--answer--\nbackground: var(--main-bg);\n--question--\n--text--\nWhich CSS rule allows developers to define custom properties with greater control over their behavior --distractors--\n@media\n@keyframes\n@supports\n--answer--\n@property\n--question--\n--text--\nWhat does the inherits field in an @property definition control --distractors--\nWhether the property is used in JavaScript Whether the property will trigger repaints Whether the property can contain functions --answer--\nWhether the property's value is passed to child elements --question--\n--text--\nWhen defining an animated gradient angle using @property, which syntax should be used --distractors--\n\"<number>\"\n\"<color>\"\n\"<string>\"\n--answer--\n\"<angle>\"\n--question--\n--text--\nWhat distinguishes a CSS custom property from a standard CSS property in terms of how it's defined --distractors--\nStandard CSS properties are defined with a single dash, while custom properties use two dashes Standard CSS properties use var() for definition, while custom properties do not Standard CSS properties are defined using the @property rule, while custom properties are not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "8cb5e5bed632d2e88c21758f41040548",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "gradient angle using @property, which syntax should be used --distractors-- \"<number>\" \"<color>\" \"<string>\" --answer-- \"<angle>\" --question-- --text-- What distinguishes a CSS custom property from a standard CSS property in terms of how it's defined --distractors-- Standard CSS properties are defined with a single dash, while custom properties use two dashes Standard CSS properties use var() for definition, while custom properties do not Standard CSS properties are defined using the @property rule, while custom properties are not--answer--\nCustom properties must start with two dashes (--), while standard CSS properties do not --question--\n--text--\nWhich of these is a benefit of using CSS custom properties --distractors--\nThey reduce the need for CSS comments They automatically optimize images They make JavaScript variables obsolete --answer--\nThey allow styles to be reused and centrally maintained --question--\n--text--\nWhich CSS property can change dynamically based on media queries using custom properties --distractors--\nOnly background-color\nOnly font-family\nOnly z-index\n--answer--\nAny property that accepts a value --question--\n--text--\nIn the context of CSS variables, what is the role of initial-value in an @property rule --distractors--\nIt sets the minimum value of the property It defines the maximum value for animations It changes the selector priority --answer--\nIt assigns a default value for the property if none is set --question--\n--text--\nIn the following CSS, how does the custom property --bg-color behave ```css\n:root {\n--bg-color: white;\n} dark-theme {\n--bg-color: #333;\n}\n```\n--distractors--\nOverrides the root value globally Applies to all elements by default Is inherited automatically by all children --answer--\nOnly applies within dark-theme scope --question--\n--text--\nWhich part of this @property declaration enforces type checking css\n@property --my-color {\nsyntax: \"<color>\";\ninherits: false;\ninitial-value: red;\n}\n--distractors--\ninitial-value\ninherits\n--my-color\n--answer--\nsyntax\n--question--\n--text--\nWhat is the purpose of the --gradient-angle custom property in this example ```css\n@property --gradient-angle {\nsyntax: \"\";\ninherits: false;\ninitial-value: 0deg;\n} gradient {\nwidth: 100px;\nheight: 100px;\nbackground: linear-gradient(var(--gradient-angle), red, blue);\ntransition: --gradient-angle 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "5208d898d3fee4b6fde9f1ca32d8dacd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "automatically by all children --answer-- Only applies within dark-theme scope --question-- --text-- Which part of this @property declaration enforces type checking css @property --my-color { syntax: \"<color>\"; inherits: false; initial-value: red; } --distractors-- initial-value inherits --my-color --answer-- syntax --question-- --text-- What is the purpose of the --gradient-angle custom property in this example ```css @property --gradient-angle { syntax: \"\"; inherits: false; initial-value: 0deg; } gradient { width: 100px; height: 100px; background: linear-gradient(var(--gradient-angle), red, blue); transition: --gradient-angle 05s;\n} gradient:hover {\n--gradient-angle: 90deg;\n}\n```\n--distractors--\nIt defines the speed of the gradient transition It specifies the size of the gradient It sets the color blending mode --answer--\nIt controls the direction of the gradient --question--\n--text--\nWhich scenario best shows the advantage of using custom properties for themes --distractors--\nUsing them just for font sizes Applying them only on :hover Restricting them to one CSS class --answer--\nChanging values via class --question--\n--text--\nWhy might developers prefer using :root for defining CSS variables --distractors--\nBecause :root improves page load speed Because :root disables specificity Because :root is required for JavaScript --answer--\nBecause :root allows the properties to be globally scoped --question--\n--text--\nWhat would the following CSS do if --secondary-color is undefined css\nh1 {\ncolor: var(--secondary-color, orange);\n}\n--distractors--\nIt will apply black It will ignore the color property It will apply --secondary-color --answer--\nIt will apply orange --question--\n--text--\nWhat type of values does <color> represent in an @property syntax field --distractors--\nAngles like 90deg Lengths like 10px Percentages like 50% --answer--\nColor values like #ff0000 or red --question--\n--text--\nWhat is the main benefit of using custom properties in combination with @property --distractors--\nThey prevent needing fallback values They force static layout They reduce the need for classes --answer--\nThey allow property animation --question--\n--text--\nWhat does var(--undefined-property, fallback) do when the custom property is not defined",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "82f5cdafaf7a7cd879970b3708cfa05b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "values does <color> represent in an @property syntax field --distractors-- Angles like 90deg Lengths like 10px Percentages like 50% --answer-- Color values like #ff0000 or red --question-- --text-- What is the main benefit of using custom properties in combination with @property --distractors-- They prevent needing fallback values They force static layout They reduce the need for classes --answer-- They allow property animation --question-- --text-- What does var(--undefined-property, fallback) do when the custom property is not defined--distractors--\nThrows an error and stops applying styles Ignores the entire CSS rule Applies the variable name as is --answer--\nApplies the fallback value instead",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-css-variables\\66ed9018f45ce3ece4053eb9.md",
      "source_type": "git_repo"
    },
    "token_count": 151,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "7dd20633c01c4b49b7166db098e64c06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dynamic-programming\\67f413a2abe9894c52e15c6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f413a2abe9894c52e15c6e\ntitle: Dynamic Programming Quiz\nchallengeType: 8\ndashedName: quiz-dynamic-programming\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dynamic-programming\\67f413a2abe9894c52e15c6e.md",
      "source_type": "git_repo"
    },
    "token_count": 63,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a8250a42ce0460c677a7faf37d102c87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dynamic-programming\\67f413a2abe9894c52e15c6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f413a2abe9894c52e15c6e\ntitle: Dynamic Programming Quiz\nchallengeType: 8\ndashedName: quiz-dynamic-programming\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below--quizzes--\n--quiz--\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dynamic-programming\\67f413a2abe9894c52e15c6e.md",
      "source_type": "git_repo"
    },
    "token_count": 829,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e632173b96614db1e0d89284955ceb25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-error-handling\\67f412eaf6e68343aab8ea81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f412eaf6e68343aab8ea81\ntitle: Error Handling Quiz\nchallengeType: 8\ndashedName: quiz-error-handling\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat will be the output of this code py\ntry:\nprint(22 / 0)\nexcept ZeroDivisionError:\nprint(\"You can't divide by zero \")\n--distractors--\n22\n10\n0\n--answer--\nYou can't divide by zero --question--\n--text--\nWhich module of the Python standard library lets you debug your code in an interactive way --distractors--\nABC\nnumpy\ndebugpy\n--answer--\npdb\n--question--\n--text--\nWhich exception does Python raise when you try to use a method or attribute that does not exist for that type --distractors--\nSyntaxError\nAttributeBug\nSyntaxBug\n--answer--\nAttributeError\n--question--\n--text--\nWhich Python statement can you insert around various points in your code so you can see the values of variables while debugging --distractors--\nlen()\nconsole()\nlog()\n--answer--\nprint()\n--question--\n--text--\nWhich statement lets you manually raise an exception --distractors--\nif\nthrow\nfrom\n--answer--\nraise\n--question--\n--text--\nWhich error will the code print(\"Hello world\" raise in your Python code --distractors--\nIt would not raise any error ValueError\nNameError\n--answer--\nSyntaxError\n--question--\n--text--\nWhat does try except let you do in Python --distractors--\nIt provides a way to test your code interactively It lets you write mathematical expressions It speeds up testing --answer--\nIt lets you execute a block of code that might raise an exception --question--\n--text--\nWhich object lets you access the exception itself for better debugging and direct printing of the error message --distractors--\nDebugger Object\nTraceback Object\nBugFinder Object\n--answer--\nException Object\n--question--\n--text--\nWhich of the following optional clauses can be added to a try except statement --distractors--\nif and else\nelif and if\nelse and elif\n--answer--\nelse and finally\n--question--\n--text--\nWhich block of a try statement runs whether an error occurs or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-error-handling\\67f412eaf6e68343aab8ea81.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ef529493f573d289afc3df27b2c6e71b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-error-handling\\67f412eaf6e68343aab8ea81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "exception --question-- --text-- Which object lets you access the exception itself for better debugging and direct printing of the error message --distractors-- Debugger Object Traceback Object BugFinder Object --answer-- Exception Object --question-- --text-- Which of the following optional clauses can be added to a try except statement --distractors-- if and else elif and if else and elif --answer-- else and finally --question-- --text-- Which block of a try statement runs whether an error occurs or not--distractors--\nelse\nexcept\ntry\n--answer--\nfinally",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2641,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-error-handling\\67f412eaf6e68343aab8ea81.md",
      "source_type": "git_repo"
    },
    "token_count": 117,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e2c71afd21fc1fe2cb5d66d5c82629c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f412ac59601c4151b763da\ntitle: Dictionaries and Sets Quiz\nchallengeType: 8\ndashedName: quiz-dictionaries-and-sets\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is a dictionary --distractors--\nA data structure that only holds strings and lists A data structure that is a collection of key-value pairs that only accept large numbers A data structure that only holds a collection of tuples --answer--\nA data structure that is a collection of key-value pairs --question--\n--text--\nWhich of the following is the correct syntax for a dictionary --distractors--\npy\ndictionary = {\n<key1: value1>,\n<key2: value2>\n}\npy\ndictionary = {\n(key1: value1),\n(key2: value2)\n}\npy\ndictionary = {\n[key1: value1],\n[key2: value2]\n}\n--answer--\npy\ndictionary = {\nkey1: value1,\nkey2: value2\n}\n--question--\n--text--\nWhich of the following is true about dictionaries --distractors--\nKeys must be at least two characters in length Keys must include a special symbol Keys must include at least one number --answer--\nKeys must be unique --question--\n--text--\nWhich of the following constructors can be used to create a dictionary --distractors--\ndiction()\ndic()\ndictionary()\n--answer--\ndict()\n--question--\n--text--\nWhich of the following is the correct way to access a value from a dictionary --distractors--\ndictionary<key>\ndictionary/key/\ndictionary{key}\n--answer--\ndictionary[key]\n--question--\n--text--\nWhich of the following is the correct way to update a value in a dictionary --distractors--\npizza['name'] >> 'Margherita'\npizza['name'] << 'Margherita'\npizza['name'] == 'Margherita'\n--answer--\npizza['name'] = 'Margherita'\n--question--\n--text--\nWhich of the following methods can be used to retrieve a value associated with a key --distractors--\naccess()\nset()\nretrieve()\n--answer--\nget()\n--question--\n--text--\nWhat is a view object --distractors--\nA special object used to turn strings into dictionaries",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "cd13a8ff72e3ad4e25e21409dcc9b1f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dictionary/key/ dictionary{key} --answer-- dictionary[key] --question-- --text-- Which of the following is the correct way to update a value in a dictionary --distractors-- pizza['name'] >> 'Margherita' pizza['name'] << 'Margherita' pizza['name'] == 'Margherita' --answer-- pizza['name'] = 'Margherita' --question-- --text-- Which of the following methods can be used to retrieve a value associated with a key --distractors-- access() set() retrieve() --answer-- get() --question-- --text-- What is a view object --distractors-- A special object used to turn strings into dictionariesA way to view the content of a dictionary only if the dictionary has two or more key-value pairs A special object used to turn lists into dictionaries --answer--\nA way to see the content of a dictionary without creating a separate copy of the data --question--\n--text--\nWhich of the following methods returns a view object with all the key-value pairs in the dictionary --distractors--\nlists()\ndictionaries()\ncollections()\n--answer--\nitems()\n--question--\n--text--\nWhich of the following methods removes all of the key-value pairs from the dictionary --distractors--\nempty()\nreplace()\nremove()\n--answer--\nclear()\n--question--\n--text--\nWhat will be the output for the following code ```py\nproducts = {\n'Laptop': 990,\n'Smartphone': 600,\n'Tablet': 250,\n'Headphones': 70,\n}\nfor product in products items():\nprint(product)\n```\n--distractors--\npy\n<'Laptop', 990>\n<'Smartphone', 600>\n<'Tablet', 250>\n<'Headphones', 70>\npy\n'Laptop', 990\n'Smartphone', 600\n'Tablet', 250\n'Headphones', 70\npy\n['Laptop', 990]\n['Smartphone', 600]\n['Tablet', 250]\n['Headphones', 70]\n--answer--\npy\n('Laptop', 990)\n('Smartphone', 600)\n('Tablet', 250)\n('Headphones', 70)\n--question--\n--text--\nWhich of the following is true about sets --distractors--\nSets are mutable and ordered in reverse Sets are mutable and ordered Sets are immutable and unordered",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1b9ecddfefcc6ff712affd43f23f061a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Headphones': 70, } for product in products items(): print(product) ``` --distractors-- py <'Laptop', 990> <'Smartphone', 600> <'Tablet', 250> <'Headphones', 70> py 'Laptop', 990 'Smartphone', 600 'Tablet', 250 'Headphones', 70 py ['Laptop', 990] ['Smartphone', 600] ['Tablet', 250] ['Headphones', 70] --answer-- py ('Laptop', 990) ('Smartphone', 600) ('Tablet', 250) ('Headphones', 70) --question-- --text-- Which of the following is true about sets --distractors-- Sets are mutable and ordered in reverse Sets are mutable and ordered Sets are immutable and unordered--answer--\nSets are mutable and unordered --question--\n--text--\nWhich of the following is the correct way to create a set --distractors--\nmy_set = (1, 2, 3, 4, 5)\nmy_set = <1, 2, 3, 4, 5>\nmy_set = [1, 2, 3, 4, 5]\n--answer--\nmy_set = {1, 2, 3, 4, 5}\n--question--\n--text--\nWhich of the following functions is used to create an empty set --distractors--\ncreate_set()\nempty_set()\nsets()\n--answer--\nset()\n--question--\n--text--\nWhat will be output to the terminal ```py\nmy_set = {1, 2, 3, 4, 5, 6}\nmy_set add(5)\nprint(my_set)\n```\n--distractors--\nSyntaxError\nRangeError\n{1, 2, 3, 4, 5, 5, 6}\n--answer--\n{1, 2, 3, 4, 5, 6}\n--question--\n--text--\nWhich of the following methods checks if a set is a subset --distractors--\nissub()\nisset()\nsubset()\n--answer--\nissubset()\n--question--\n--text--\nWhich of the following methods checks if two sets are disjoint",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "d21436221f3bfb7a08c32ab3c81d7ce4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "empty_set() sets() --answer-- set() --question-- --text-- What will be output to the terminal ```py my_set = {1, 2, 3, 4, 5, 6} my_set add(5) print(my_set) ``` --distractors-- SyntaxError RangeError {1, 2, 3, 4, 5, 5, 6} --answer-- {1, 2, 3, 4, 5, 6} --question-- --text-- Which of the following methods checks if a set is a subset --distractors-- issub() isset() subset() --answer-- issubset() --question-- --text-- Which of the following methods checks if two sets are disjoint--distractors--\njoint()\nisjoint()\ndisjoint()\n--answer--\nisdisjoint()\n--question--\n--text--\nWhat does the symmetric difference operator(^) do --distractors--\nIt returns a new set with only the elements that the sets have in common It finds the difference between the sets and updates the first set with that result It returns a new set with the elements of the first set that are not in the other set --answer--\nIt returns a new set with the elements that are either on the first or the second set, but not both --question--\n--text--\nWhich of the following built-in modules is used for generating random numbers --distractors--\nset_random\nget_random\nrand\n--answer--\nrandom\n--question--\n--text--\nWhich of the following modules is used for working with regular expressions --distractors--\nregex\nreg\nr\n--answer--\nre",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5998,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dictionaries-and-sets\\67f412ac59601c4151b763da.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "23b670019787812fc68d8ce3ec1b000d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dom-manipulation-and-click-event-with-javascript\\66edd07682767adff3a6231e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd07682767adff3a6231e\ntitle: DOM Manipulation and Click Events with JavaScript Quiz\nchallengeType: 8\ndashedName: quiz-dom-manipulation-and-click-event-with-javascript\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is the Document Object Model --distractors--\nA programming language used to interact with an HTML page A set of objects that contain only floating point numbers A set of JavaScript classes representing HTML elements --answer--\nA programming interface that lets you interact with HTML documents --question--\n--text--\nWhat does API stand for --distractors--\nAdditional Programming Interface\nAdding Programming Interface\nAnother Programming Interface\n--answer--\nApplication Programming Interface\n--question--\n--text--\nHow can you use JavaScript to find all HTML anchors with missing hyperlinks --distractors--\njs\ndocument findAll(\"link [href]\");\njs\ndocument find(\"link:not([href])\");\njs\ndocument querySelector(\"a [href]\");\n--answer--\njs\ndocument querySelectorAll(\"a:not([href])\");\n--question--\n--text--\nWhat does the textContent property do --distractors--\nIt removes text content from all HTML elements It removes text content from your JavaScript file It adds text to all arrays and objects in your JavaScript file --answer--\nIt returns the plain text content of an element --question--\n--text--\nWhat does the innerHTML property do --distractors--\nIt is a property of the Element used to get all text content for an HTML element It is a property of the Element used to add annotations to your HTML It is a property of the Element used to trigger events in your HTML --answer--\nIt is a property of the Element used to set or update parts of the HTML markup --question--\n--text--\nWhich of the following will add a valid event listener --distractors--\njs\nbtn addEventListener(\"accept\", () => alert(\"You clicked the button\"));\njs\nbtn addEventListener(\"allow\", () => alert(\"You clicked the button\"));\njs\nbtn addEventListener(\"trigger\", () => alert(\"You clicked the button\"));\n--answer--\njs\nbtn addEventListener(\"click\", () => alert(\"You clicked the button\"));\n--question--\n--text--\nWhich of the following is NOT a valid method of the document object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dom-manipulation-and-click-event-with-javascript\\66edd07682767adff3a6231e.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b57aa237071016063293020e775b3ede",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dom-manipulation-and-click-event-with-javascript\\66edd07682767adff3a6231e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Element used to set or update parts of the HTML markup --question-- --text-- Which of the following will add a valid event listener --distractors-- js btn addEventListener(\"accept\", () => alert(\"You clicked the button\")); js btn addEventListener(\"allow\", () => alert(\"You clicked the button\")); js btn addEventListener(\"trigger\", () => alert(\"You clicked the button\")); --answer-- js btn addEventListener(\"click\", () => alert(\"You clicked the button\")); --question-- --text-- Which of the following is NOT a valid method of the document object--distractors--\ngetElementById()\nquerySelector()\ncreateElement()\n--answer--\naddElementToDOM()\n--question--\n--text--\nWhich of the following will set the class attribute to my-class --distractors--\njs\nconst para = document getElementById(\"para\");\npara setAttribute(\"set\", \"class\");\njs\nconst para = document getElementById(\"para\");\npara setAttribute(\"remove\", \"my-class\");\njs\nconst para = document getElementById(\"para\");\npara setAttribute(\"add\", \"class\");\n--answer--\njs\nconst para = document getElementById(\"para\");\npara setAttribute(\"class\", \"my-class\");\n--question--\n--text--\nWhat is the Event object --distractors--\nIt is a special object used to remove events from your JavaScript project It is used to automatically add events to your JavaScript projects It is a special object used when working with arrays --answer--\nIt is a payload that triggers when a user interacts with your web page in some way --question--\n--text--\nWhich of the following is a method used to remove an event listener that was previously added to an element using the addEventListener() method --distractors--\nremovalOfEventListener()\nremovedEventListener()\nremovingEventListener()\n--answer--\nremoveEventListener()\n--question--\n--text--\nWhat are inline event handlers --distractors--\nSpecial attributes on an HTML element that are used to cancel all events Special attributes on an HTML element used only to trigger form submissions in your JavaScript code Special attributes on an HTML element used to remove events --answer--\nSpecial attributes on an HTML element that are used to execute JavaScript code when an event occurs --question--\n--text--\nWhat are the two main categories for web APIs --distractors--\nJava APIs and third-party APIs Browser APIs and Rust APIs System APIs and third-party APIs --answer--\nBrowser APIs and third-party APIs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dom-manipulation-and-click-event-with-javascript\\66edd07682767adff3a6231e.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5f33ecbb3885fdd10a8d224f491d701d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dom-manipulation-and-click-event-with-javascript\\66edd07682767adff3a6231e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "attributes on an HTML element used only to trigger form submissions in your JavaScript code Special attributes on an HTML element used to remove events --answer-- Special attributes on an HTML element that are used to execute JavaScript code when an event occurs --question-- --text-- What are the two main categories for web APIs --distractors-- Java APIs and third-party APIs Browser APIs and Rust APIs System APIs and third-party APIs --answer-- Browser APIs and third-party APIs--question--\n--text--\nWhich event is triggered when all of the HTML page's elements have been parsed by the browser --distractors--\nload\nDOMLoaded\nHTMLContentLoaded\n--answer--\nDOMContentLoaded\n--question--\n--text--\nWhich of the following is a property that represents the inline style of an element --distractors--\ncontent\nevent\nload\n--answer--\nstyle\n--question--\n--text--\nWhich of the following is the correct way to use an inline event handler --distractors--\nhtml\n<button eventclick=\"validate()\">Validate</button>\nhtml\n<button click=\"validate()\">Validate</button>\nhtml\n<button clickevent=\"validate()\">Validate</button>\n--answer--\nhtml\n<button onclick=\"validate()\">Validate</button>\n--question--\n--text--\nWhich of the following methods is used to delay an action for a specified time --distractors--\nsetInterval()\ndelay()\nsleep()\n--answer--\nsetTimeout()\n--question--\n--text--\nWhich of the following can be used to create and control animations directly inside JavaScript --distractors--\nAllow Animations API\nControl Animations API\nCreate Animations API\n--answer--\nWeb Animations API\n--question--\n--text--\nWhat does the Canvas API do --distractors--\nIt is used to animate graphics in your CSS file It is used to only remove graphics from your JavaScript file It is used to remove graphics from your HTML file --answer--\nIt is used to manipulate graphics via your JavaScript file --question--\n--text--\nWhat is event delegation --distractors--\nThe process of listening to events when an event is canceled The process of listening to events when a click event occurs The process of listening to events when a change event occurs --answer--\nThe process of listening to events that have bubbled up to a parent --question--\n--text--\nWhich of the following is NOT a method you can use when working with dialogs and modals --distractors--\nshow()\nclose()\nshowModal()\n--answer--\nremoveModal()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6993,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-dom-manipulation-and-click-event-with-javascript\\66edd07682767adff3a6231e.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3e5cbbbee26dac9b5edcfc1f600700c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed901ff45ce3ece4053eba\ntitle: Design Fundamentals Quiz\nchallengeType: 8\ndashedName: quiz-design-fundamentals\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat are some reasons why whitespace is important for good design --distractors--\nImproves readability by placing many elements on the page Focuses the viewer's attention by having elements placed close together Creates breathing space in the design to make users scroll for more information --answer--\nCreates visual hierarchy, improves readability, focuses the viewer's attention on different elements --question--\n--text--\nWhat is the design principle of carefully choosing the size of elements in relation to each other --distractors--\nVisual hierarchy Proportion\nBalance\n--answer--\nScale\n--question--\n--text--\nWhich of the following sites would most likely benefit from using breadcrumbs --distractors--\nA single-page portfolio site An infinite scroll gallery site A simple blog with only a few posts --answer--\nA complex e-commerce site with multiple categories and subcategories --question--\n--text--\nWhich design pattern allows users to access and interact with elements and content on a website without requiring immediate registration --distractors--\nCaptcha validation Lazy loading Progressive enhancement --answer--\nDeferred/lazy registration --question--\n--text--\nWhat are three types of text alignment --distractors--\nTop, center, horizontal Left, right, middle Vertical, horizontal, equal --answer--\nLeft, right, center --question--\n--text--\nWhich interaction design pattern reduces the complexity of interaction by hiding parts of interfaces progressively so that content is only introduced to the user as they progress through the application --distractors--\nExtended discoverability Delayed implementation Gradual engagement --answer--\nProgressive disclosure --question--\n--text--\nWhat is contrast in design --distractors--\nElements that are visually similar The difference in saturation between two colors Matching elements on a page --answer--\nElements that are strikingly different from each other visually --question--\n--text--\nWhich of the following is an example of visual hierarchy in design --distractors--\nHeadline and title text are a similar color to the background and other elements to blend in Text and images are all the same size on the page The logo banner is smaller than all the minor images on the main landing page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "3e0111faf9d8cb6c335f902b62bb46bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "between two colors Matching elements on a page --answer-- Elements that are strikingly different from each other visually --question-- --text-- Which of the following is an example of visual hierarchy in design --distractors-- Headline and title text are a similar color to the background and other elements to blend in Text and images are all the same size on the page The logo banner is smaller than all the minor images on the main landing page--answer--\nMaking the headline of the page larger than other text that comprise the body or sub-headings\n--question--\n--text--\nWhat is a common goal of conducting exit interviews in user research --distractors--\nTo increase the number of new users To test new features with existing users To gather data for A/B testing --answer--\nTo understand the factors causing user churn --question--\n--text--\nWhat is user centered design --distractors--\nA design process where once the design is completed, designers test the product by getting user feedback A design process where designers consider user accessibility requirements A design process focused on client requirements at every stage of the process --answer--\nAn iterative design process where designers design a product considering user requirements at every stage of the process --question--\n--text--\nWhat is the minimum required contrast ratio for regular text for accessibility according to WCAG guidelines --distractors--\n1:1\n7:1\n3:1\n--answer--\n4 5:1\n--question--\n--text--\nWhat are some colors to consider when designing dark mode --distractors--\nPure white Highly saturated colors Bright highly contrasting colors --answer--\nDark colors and muted light colors for contrast in dim lighting conditions --question--\n--text--\nHow can user research impact user requirements --distractors--\nIt has no impact on user requirements It only affects non-functional requirements It only affects functional requirements --answer--\nIt can help define and refine user requirements based on user feedback --question--\n--text--\nWhy is it important for a design brief to be reviewed and approved by all stakeholders before the project begins --distractors--\nTo ensure everyone is aware of the project's social media strategy To finalize the color palette and design elements To determine the project's marketing budget --answer--\nTo confirm that all stakeholders agree on the project's objectives and requirements --question--\n--text--\nWhat is considered bad practice when implementing infinite scroll --distractors--\nAllowing users to jump to a page or section through the navbar or a pagination drop down menu",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "c135b20e17a4c6e08069cb31cd8327c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "by all stakeholders before the project begins --distractors-- To ensure everyone is aware of the project's social media strategy To finalize the color palette and design elements To determine the project's marketing budget --answer-- To confirm that all stakeholders agree on the project's objectives and requirements --question-- --text-- What is considered bad practice when implementing infinite scroll --distractors-- Allowing users to jump to a page or section through the navbar or a pagination drop down menuAdding a load more indicator or symbol after a certain point in the page along with the infinite scroll Integrating a footer reveal at the bottom --answer--\nNot adding alternative methods of navigating the page --question--\n--text--\nWhich of the following is a best practice when designing progress indicators for forms --distractors--\nRequiring users to restart the form if they navigate away from the page Keeping the progress indicator small and discreet Making sure the progress is just displayed visually without any text --answer--\nBreaking the progress indicator into labeled sections --question--\n--text--\nWhat is one way to make shopping cart design intuitive and user friendly --distractors--\nUse a new shopping cart icon that no other website has used before Do not allow users to add or remove items from the cart Automatically add products to the cart without user interaction --answer--\nInclude thumbnail images of products in the cart --question--\n--text--\nDark mode doesn't mean pure black What is a good technique to create an effective dark mode color scheme --distractors--\nMake images and elements darker and reduce contrast between different elements to have them blend in Invert the color scheme Use many saturated colors --answer--\nUse dark gray or a dark shade of the brand color instead of pure black --question--\n--text--\nWhat is one good design practice when creating modals --distractors--\nPut a lot of important information inside a modal Have multiple modals on the same screen Ensure the modal draws the user's attention away from it --answer--\nMake the modal dismiss icon visible --question--\n--text--\nWhat is a design brief --distractors--\nA document outlining the programming and design standards of the project A document explaining how to replicate a design A document with detailed information of icons, colors, and assets the designer should use --answer--\nA document stating the goals and project scope, budget and design requirements --quiz--\n--question--\n--text--\nWhich design tool is especially known for real-time collaboration in the cloud",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "a8210bb6487b30fb7cde73d973f3dc4e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--answer-- Make the modal dismiss icon visible --question-- --text-- What is a design brief --distractors-- A document outlining the programming and design standards of the project A document explaining how to replicate a design A document with detailed information of icons, colors, and assets the designer should use --answer-- A document stating the goals and project scope, budget and design requirements --quiz-- --question-- --text-- Which design tool is especially known for real-time collaboration in the cloud--distractors--\nAdobe XD\nSketch\nCanva\n--answer--\nFigma\n--question--\n--text--\nWhich tool is most suitable for beginners creating posters and presentations --distractors--\nSketch\nFigma\nAdobe XD\n--answer--\nCanva\n--question--\n--text--\nWhy should breadcrumbs be designed to be easily readable but not oversized --distractors--\nTo match the font size of main headers To keep them consistent across all screen sizes To make them blend into the background --answer--\nTo balance visibility without overwhelming the page layout --question--\n--text--\nWhat is a common mistake to avoid in card component design --distractors--\nKeeping the card visually simple Adding hover animations for feedback Using white space effectively --answer--\nDisplaying too much information at once --question--\n--text--\nWhat usability issue can arise with infinite scroll without a \"back\" option --distractors--\nUsers may load duplicate content Users may scroll too fast Users may exit the app accidentally --answer--\nUsers may lose their original context --question--\n--text--\nWhich of the following helps visually distinguish a modal from the page content behind it --distractors--\nAdding a shadow to modal buttons Animating the modal with a fade-in effect Increasing modal font size significantly --answer--\nUsing a dim overlay on the background content --question--\n--text--\nWhy should a progress indicator in a registration form support backward navigation --distractors--\nIt reduces loading time It makes the form look shorter It avoids page refreshes --answer--\nIt provides built-in accessibility features --question--\n--text--\nWhen using progressive enhancement, what's the primary benefit for users on older devices or browsers --distractors--\nThey get alerted to upgrade their browser They are redirected to mobile-optimized sites They see a basic version of animations --answer--\nThey can still access essential content and features --question--\n--text--\nWhy might deferred (lazy) registration improve conversion rates --distractors--\nIt reduces backend authentication load It hides premium features",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "552b092ee53fcda83d231dc104ceb379",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "avoids page refreshes --answer-- It provides built-in accessibility features --question-- --text-- When using progressive enhancement, what's the primary benefit for users on older devices or browsers --distractors-- They get alerted to upgrade their browser They are redirected to mobile-optimized sites They see a basic version of animations --answer-- They can still access essential content and features --question-- --text-- Why might deferred (lazy) registration improve conversion rates --distractors-- It reduces backend authentication load It hides premium featuresIt requires fewer third-party integrations --answer--\nIt lets users explore value before committing --question--\n--text--\nWhat does a good responsive image setup accomplish on mobile devices --distractors--\nIt reduces color depth for performance It triggers a mobile-only animation It stretches images to fill available space --answer--\nIt adapts image size without losing quality --question--\n--text--\nWhat is the purpose of establishing a strong visual hierarchy in UI design --distractors--\nIt ensures animations run smoothly on low-end devices It helps with color contrast and branding It reduces the need for progressive disclosure --answer--\nIt guides the user's eye through information in the intended order --question--\n--text--\nWhy is contrast more than just choosing black text on white --distractors--\nIt's about matching brand fonts It's mainly about marketing visibility Contrast ensures pixel-perfect accuracy --answer--\nContrast must work across all lighting conditions and devices --question--\n--text--\nWhy is user testing critical when refining an interface design --distractors--\nIt determines how well colors follow contrast ratio guidelines It helps finalize stakeholder preferences It reduces the time spent on writing design briefs --answer--\nIt reveals how users interact with the interface in practice --question--\n--text--\nWhat is A/B testing based on standard UI design practices --distractors--\nIt requires smaller participant groups It uses exit interviews to gather feedback It only applies to mobile-first designs --answer--\nIt tests a new feature with a random subset of users --question--\n--text--\nWhat does alignment help achieve in a visual layout --distractors--\nIt balances all colors equally across the design It increases contrast between unrelated elements It forces all elements into the same grid --answer--\nIt makes the design look organized and visually clean --question--\n--text--\nWhich of the following best describes the goal of composition in visual design --distractors--\nGrouping all UI elements in one corner of the screen",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4d4a44cca5efa92b1dedac5ad61eee7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "with a random subset of users --question-- --text-- What does alignment help achieve in a visual layout --distractors-- It balances all colors equally across the design It increases contrast between unrelated elements It forces all elements into the same grid --answer-- It makes the design look organized and visually clean --question-- --text-- Which of the following best describes the goal of composition in visual design --distractors-- Grouping all UI elements in one corner of the screenScaling up every element to fit the full canvas Using only symmetrical layouts for visual consistency --answer--\nArranging elements so they relate to each other in a harmonious way --question--\n--text--\nWhich design principle is concerned with distributing visual weight to create a sense of equilibrium --distractors--\nScale\nHierarchy\nComposition\n--answer--\nBalance\n--question--\n--text--\nWhat does hierarchy help users do when interacting with a visual design --distractors--\nZoom in on text for better readability Access navigation menus without scrolling Choose between symmetrical and asymmetrical layouts --answer--\nUnderstand which elements are most important at a glance --question--\n--text--\nWhich of the following best defines white space in a design context --distractors--\nThe white background color used for body text A gap that must be filled with branding elements The padding used between interactive buttons --answer--\nThe empty area around or between visual elements --question--\n--text--\nWhat is vector-based design --distractors--\nDrawing with pixel-based tools for realistic detail Editing scanned images using raster techniques Building mockups with photos and bitmap textures --answer--\nCreating art using formulas for lines, shapes, and colors",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13890,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-design-fundamentals\\66ed901ff45ce3ece4053eba.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "1dcd42882847dce14fa7a2d07c36fdd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-form-validation-with-javascript\\66edd3403d7077eece6dc4b6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd3403d7077eece6dc4b6\ntitle: Form Validation with JavaScript Quiz\nchallengeType: 8\ndashedName: quiz-form-validation-with-javascript\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich method is used to check if an input element's value satisfies the validation rules --distractors--\nvalidateInput()\nisValid()\ncheckValue()\n--answer--\ncheckValidity()\n--question--\n--text--\nWhat happens if the checkValidity() method finds an invalid input --distractors--\nThe form is automatically submitted Nothing happens The input value is cleared --answer--\nThe browser displays a validation message --question--\n--text--\nWhich method is used to customize the message shown during validation failure --distractors--\nsetErrorMessage()\nsetValidationMessage()\ncustomMessage()\n--answer--\nsetCustomValidity()\n--question--\n--text--\nWhat is the default validation behavior for required fields when the form is submitted --distractors--\nThe form is submitted even if required fields are empty The form submits but gives a warning The form resets the input values --answer--\nThe browser stops the form submission if required fields are empty --question--\n--text--\nWhich actions does not cause an HTML form to be checked for errors --distractors--\nChanging the input value Submitting the form Calling reportValidity() --answer--\nClicking a reset button --question--\n--text--\nWhat does checkValidity() return when all form inputs are valid --distractors--\nfalse\nundefined\nnull\n--answer--\ntrue\n--question--\n--text--\nWhen does the checkValidity() method stop form submission --distractors--\nWhen the form has no submit button When the form action is empty When the form method is POST --answer--\nWhen the form has at least one invalid input (and the default behavior of form submission is prevented) --question--\n--text--\nWhat happens if checkValidity() is called, but a field fails validation --distractors--\nThe form submits without error The input values are cleared The form closes immediately --answer--\nThe invalid field is highlighted and a message appears --question--\n--text--\nWhich action will make checkValidity() run --distractors--\nResetting the form Changing an input value Clicking an anchor tag --answer--\nSubmitting the form manually",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5732,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-form-validation-with-javascript\\66edd3403d7077eece6dc4b6.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b3f50e5112ff93008cdee44cd98c08f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-form-validation-with-javascript\\66edd3403d7077eece6dc4b6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "least one invalid input (and the default behavior of form submission is prevented) --question-- --text-- What happens if checkValidity() is called, but a field fails validation --distractors-- The form submits without error The input values are cleared The form closes immediately --answer-- The invalid field is highlighted and a message appears --question-- --text-- Which action will make checkValidity() run --distractors-- Resetting the form Changing an input value Clicking an anchor tag --answer-- Submitting the form manually--question--\n--text--\nWhat is the purpose of calling checkValidity() before submitting a form --distractors--\nTo automatically submit the form To reload the page To clear all input fields --answer--\nTo check if all input elements meet their specified constraints --question--\n--text--\nWhat is the main purpose of e preventDefault() --distractors--\nTo reload the form To clear form data To reset the form values --answer--\nTo stop the default action of an event --question--\n--text--\nWhen used on a form's submit event, what does e preventDefault() do --distractors--\nIt submits the form It clears all form fields It disables the form temporarily --answer--\nIt prevents the form from being submitted --question--\n--text--\nIn which scenario is e preventDefault() most useful --distractors--\nWhen handling a button click that submits a form When closing a modal dialog When opening a new page --answer--\nWhen submitting a form and preventing a page reload --question--\n--text--\nWhat happens if you forget to call e preventDefault() on a form submit event --distractors--\nAll the input fields are set to their default values The form does not submit The form data is lost --answer--\nThe form submits and refreshes the page --question--\n--text--\nWhich default behavior can be prevented using e preventDefault() --distractors--\nEditing a form Rendering the form Reloading the form --answer--\nThe default behavior caused by submitting a form --question--\n--text--\nWhat triggers the form's submit event --distractors--\nWhen an input field changes When the form is reset When the form's action is cleared --answer--\nWhen a form's submit button is clicked or Enter is pressed --question--\n--text--\nWhere do you usually handle the submit event in JavaScript --distractors--\nOn a text input element On any field in the form On a button element outside the form",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5732,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-form-validation-with-javascript\\66edd3403d7077eece6dc4b6.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5e5f4d07d6a097577f5584f6a6c49356",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-form-validation-with-javascript\\66edd3403d7077eece6dc4b6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "The default behavior caused by submitting a form --question-- --text-- What triggers the form's submit event --distractors-- When an input field changes When the form is reset When the form's action is cleared --answer-- When a form's submit button is clicked or Enter is pressed --question-- --text-- Where do you usually handle the submit event in JavaScript --distractors-- On a text input element On any field in the form On a button element outside the form--answer--\nOn the form element itself --question--\n--text--\nWhat does the submit event do by default --distractors--\nIt validates the form but doesn't submit it It clears the form fields It cancels form submission --answer--\nIt sends form data to the server specified in the form's action --question--\n--text--\nWhich event should you listen for to handle form data when the form is submitted in JavaScript --distractors--\n\"input\"\n\"change\"\n\"focus\"\n--answer--\n\"submit\"\n--question--\n--text--\nWhat is the default value of the method attribute in an HTML form --distractors--\n\"POST\"\n\"UPDATE\"\n\"PUT\"\n--answer--\n\"GET\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5732,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-form-validation-with-javascript\\66edd3403d7077eece6dc4b6.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fe57958b5462851ea8451b86ce3799fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-graphs-and-trees\\67f4138c34cd9c4ac783ceef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f4138c34cd9c4ac783ceef\ntitle: Graphs and Trees Quiz\nchallengeType: 8\ndashedName: quiz-graphs-and-trees\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4289,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-graphs-and-trees\\67f4138c34cd9c4ac783ceef.md",
      "source_type": "git_repo"
    },
    "token_count": 65,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "24c5fe8a86e0d70f0f9d91b0ebc6d6a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-graphs-and-trees\\67f4138c34cd9c4ac783ceef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f4138c34cd9c4ac783ceef\ntitle: Graphs and Trees Quiz\nchallengeType: 8\ndashedName: quiz-graphs-and-trees\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below--quizzes--\n--quiz--\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4289,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-graphs-and-trees\\67f4138c34cd9c4ac783ceef.md",
      "source_type": "git_repo"
    },
    "token_count": 831,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7b3a73f25bfc7089e0ff8296df42fcf1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-git\\66f1b06a5a5d10cc100af620.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1b06a5a5d10cc100af620\ntitle: Git Quiz\nchallengeType: 8\ndashedName: quiz-git\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWho can use git --distractors--\nDevelopers\nAdministrators\nSubscribers/Premium Users --answer--\nEveryone\n--question--\n--text--\nWhy is using version control software a best practice for high performing software and DevOps teams --distractors--\nA complete long-term change history of every file Branching and merging Traceability\n--answer--\nAll of the options --question--\n--text--\nWhat are the main advantages of using sites like GitHub and GitLab --distractors--\nThey allow online shopping They are a social media platform for posting photos They only act as cloud storage for individual files --answer--\nThey provide version control and collaboration for code development --question--\n--text--\nWhich command would not display the current git version --distractors--\ngit --version\ngit -v\ngit version\n--answer--\ngit v\n--question--\n--text--\nWhich statement is true regarding encryption --distractors--\nSSH keys cannot be used for encrypting data and communication Neither GPG keys nor SSH keys can be used for encrypting data and communication GPG keys can only be used for encrypting images and not for any other type of data --answer--\nGPG keys can be used for encrypting data and communication --question--\n--text--\nWho can you share a repository with --distractors--\nFriends/classmates\nCo-workers\nStrangers\n--answer--\nAll of the options --question--\n--text--\nWhat is the advantage of a git repository --distractors--\nWhen we work on an open-source repository, it becomes easy to detract from the project By using GitHub or any other repository management tool, it's easy to develop robust ignorance of the project Markdown allows you to use a simple text editor to write unformatted text documents --answer--\nThe repositories that you create on GitHub or Bitbucket can also integrate with different CI/CD tools like Jenkins --question--\n--text--\nWhich push command is correct",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5943,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-git\\66f1b06a5a5d10cc100af620.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1a4e3481bde51a9a1f3f673731828d02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-git\\66f1b06a5a5d10cc100af620.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "git repository --distractors-- When we work on an open-source repository, it becomes easy to detract from the project By using GitHub or any other repository management tool, it's easy to develop robust ignorance of the project Markdown allows you to use a simple text editor to write unformatted text documents --answer-- The repositories that you create on GitHub or Bitbucket can also integrate with different CI/CD tools like Jenkins --question-- --text-- Which push command is correct--distractors--\ngit push BRANCH-NAME\ngit push -r REMOTE-NAME BRANCH-NAME\ngit push REMOTE-NAME BRANCH-NAME --notforce\n--answer--\ngit push REMOTE-NAME BRANCH-NAME\n--question--\n--text--\nWhat is the correct way to contribute to other people's repositories --distractors--\ngit add, git commit, git clone, git push\ngit clone, git commit, git add, git push\nNone of the options --answer--\ngit clone, git add, git commit, git push\n--question--\n--text--\ngit checkout works hand-in-hand with --distractors--\ngit pull\ngit push\ngit commit\n--answer--\ngit branch\n--question--\n--text--\nYou created a branch named \"alex\" for his work Which command should you run to switch to that branch --distractors--\ngit checkout\ngit checkout alex branch\ngit checkout -- alex\n--answer--\ngit checkout alex\n--question--\n--text--\nWhich of the following is true --distractors--\nDevelopers must wait for the maintainer to approve their changes Both statements are true Both statements are false --answer--\nTeam members can work simultaneously without impacting each other's contributions --question--\n--text--\nWhere can a contributor make a pull request --distractors--\nGitHub com\nGitHub Codespaces GitHub Mobile --answer--\nAll of the options --question--\n--text--\nWhy are code reviews important --distractors--\nPromoting secrecy among teams Keeping innovation private Decreasing effectiveness --answer--\nCoaching new developers --question--\n--text--\nWhat is the file structure required for a GitHub Pages site --distractors--\nAll files must be in a src folder Only CSS files are allowed in the root JavaScript files cannot be included --answer--\nHTML files should be in the root directory --question--\n--text--\nHow do you troubleshoot a 404 error on your GitHub Pages site",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5943,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-git\\66f1b06a5a5d10cc100af620.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "691f71608d28135e47c58e80555048a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-git\\66f1b06a5a5d10cc100af620.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "are code reviews important --distractors-- Promoting secrecy among teams Keeping innovation private Decreasing effectiveness --answer-- Coaching new developers --question-- --text-- What is the file structure required for a GitHub Pages site --distractors-- All files must be in a src folder Only CSS files are allowed in the root JavaScript files cannot be included --answer-- HTML files should be in the root directory --question-- --text-- How do you troubleshoot a 404 error on your GitHub Pages site--distractors--\nClear your browser cache Check if the correct branch is published Ensure the file names match the links exactly --answer--\nAll of the options --question--\n--text--\nWhat command do you use to fetch changes from the remote repository --distractors--\ngit get\ngit sync\ngit update\n--answer--\ngit fetch\n--question--\n--text--\nWhat should you add to your gitignore to ignore all log files in your repository --distractors--\nlog/*\nlogs/* log\n**/* log\n--answer--\n* log\n--question--\n--text--\nWhat is a common branching strategy for managing features in git --distractors--\nMonolithic branching: A single central branch for all development work Single branching: A method where only one branch is used for all changes Nested branching: A branching strategy that creates branches within branches --answer--\nFeature branching: A strategy where separate branches are created for each feature development --question--\n--text--\nWhat happens if you encounter a conflict during a rebase --distractors--\nThe rebase automatically completes The changes are lost The rebase fails and cannot be retried --answer--\nYou must resolve the conflict before continuing the rebase",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5943,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-git\\66f1b06a5a5d10cc100af620.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "db612028f6c8630ced818b6681f58a0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed9026f45ce3ece4053ebb\ntitle: HTML Accessibility Quiz\nchallengeType: 8\ndashedName: quiz-html-accessibility\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is accessibility --distractors--\nAccessibility is a set of standardized practices that ensures your code is free from all security risks Accessibility is a set of standardized practices that enhances the speed and performance for your web applications Accessibility is a set of standardized practices that ensures your code meets 100% test coverage --answer--\nAccessibility is a set of standardized practices to ensure your web applications can be used by everyone, including those with disabilities --question--\n--text--\nWhich of the following is a good example for proper heading level structure --distractors--\n```html\nHeading 3\nHeading 3\nHeading 3\nHeading 1\nHeading 2\nHeading 4\n```\n```html\nHeading 6\nHeading 1\nHeading 1\nHeading 5\nHeading 2\nHeading 2\n```\n```html\nHeading 6\nHeading 5\nHeading 4\nHeading 3\nHeading 2\nHeading 1\n```\n--answer--\n```html\nHeading 1\nHeading 2\nHeading 3\nHeading 4\nHeading 5\nHeading 6\n```\n--question--\n--text--\nWhat are the six main categories of ARIA roles --distractors--\nDocument Structure, Landmark, Window, Explicit, Fidget, and Footer Landmark, House, Live Region, Application, Window, and Extension Window, Alert Dialog, Article, Cell, Banner, and Button --answer--\nDocument Structure, Landmark, Window, Abstract, Widget, and Live Region --question--\n--text--\nWhat is the correct way to add an alt attribute to an img element --distractors--\nhtml\nalt=\"cat running\"<img src=\"cat jpg\">\nhtml\nalt=\"\"<img src=\"cat jpg\">\nhtml\n<img src=\"cat jpg\"> alt=\"cat running\"\n--answer--\nhtml\n<img src=\"cat jpg\" alt=\"cat running\">\n--question--\n--text--\nWhat does WAI-ARIA stand for --distractors--\nWebsite Accessible Initiative - Accessible Rust Internet Applications Web Anchor Initiative - Anchor Rich Internet Applications",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ba2554f80e8775607ab98f21a32db9be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Banner, and Button --answer-- Document Structure, Landmark, Window, Abstract, Widget, and Live Region --question-- --text-- What is the correct way to add an alt attribute to an img element --distractors-- html alt=\"cat running\"<img src=\"cat jpg\"> html alt=\"\"<img src=\"cat jpg\"> html <img src=\"cat jpg\"> alt=\"cat running\" --answer-- html <img src=\"cat jpg\" alt=\"cat running\"> --question-- --text-- What does WAI-ARIA stand for --distractors-- Website Accessible Initiative - Accessible Rust Internet Applications Web Anchor Initiative - Anchor Rich Internet ApplicationsWeb Accessibility Initial - Accessible Ready Internet Applications --answer--\nWeb Accessibility Initiative - Accessible Rich Internet Applications --question--\n--text--\nWhat is the role of the aria-hidden attribute --distractors--\nThis attribute is used to hide elements only for users with visual impairments This attribute is used to hide and add label text for an element This attribute is used to hide an element only to keyboard users --answer--\nThis attribute is used to hide an element from assistive technologies --question--\n--text--\nWhich attribute makes elements focusable and defines the relative order in which they are navigated using the keyboard --distractors--\nkeyboardindex\ntabbingindex\nindextab\n--answer--\ntabindex\n--question--\n--text--\nWhy is it a good practice to include the caption element inside an HTML table --distractors--\nIt enhances the table's appearance by adding a decorative header It allows users to easily sort and filter the table's data It helps improve the table's responsiveness on mobile devices --answer--\nIt is helpful for users to quickly understand the table's purpose and content --question--\n--text--\nWhat is the difference between the attributes aria-label and aria-labelledby --distractors--\nThe aria-label and aria-labelledby attributes serve the same purpose The aria-label attribute is used to give a color to its label while the aria-labelledby attribute is used to give height to its label The aria-label and aria-labelledby attributes keep labels undefined --answer--\nThe aria-labelledby attribute allows you to give an element an accessible name by referencing an existing element on the page while the aria-label attribute allows you to define the name in the attribute itself --question--\n--text--\nWhich of the following attributes provides additional information about an element to screen reader users by referencing existing content on the page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "dcb5fbe2b47509233c34b352ec4d30c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "attribute is used to give height to its label The aria-label and aria-labelledby attributes keep labels undefined --answer-- The aria-labelledby attribute allows you to give an element an accessible name by referencing an existing element on the page while the aria-label attribute allows you to define the name in the attribute itself --question-- --text-- Which of the following attributes provides additional information about an element to screen reader users by referencing existing content on the page--distractors--\naria-described\naria-set\naria-sets\n--answer--\naria-describedby\n--question--\n--text--\nWhich of the following attributes is used to define a keyboard shortcut for an element --distractors--\nprovideaccesskey\ntabindexkey\naccessingkey\n--answer--\naccesskey\n--question--\n--text--\nWhich of the following examples is the correct way to associate a label with an input element --distractors--\n```html\nYour Name\n```\n```html\nYour Name\n```\n```html\nYour Name\n```\n--answer--\n```html\nYour Name\n```\n--question--\n--text--\nHow does a screen magnifier help visually-impaired users navigate web pages --distractors--\nA screen magnifier will enlarge only images to twice their size so they can be better viewed by visually-impaired users A screen magnifier converts text to Braille for tactile reading A screen magnifier automatically adjusts the color contrast of web pages --answer--\nA screen magnifier helps visually-impaired users navigate web pages by allowing them to zoom in and out --question--\n--text--\nWhich of the following is the correct use of aria-describedby to provide more context about a button's action --distractors--\n```html\nDelete\nWarning All deletions are permanent ```\n```html\nDelete\nWarning All deletions are permanent ```\n```html\nDelete\nWarning All deletions are permanent ```\n--answer--\n```html\nDelete\nWarning All deletions are permanent ```\n--question--\n--text--\nWhat is the difference between WCAG and WAI-ARIA --distractors--\nWCAG provides general guidelines for mobile only accessibility, while WAI-ARIA offers specific rules for making dynamic and interactive content accessible for users of assistive technologies WAI-ARIA provides general guidelines for mobile only accessibility, while WCAG offers specific rules for making dynamic and interactive content accessible for users of assistive technologies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "04440e502e0c8cb458fdf068521cb964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Warning All deletions are permanent ``` --answer-- ```html Delete Warning All deletions are permanent ``` --question-- --text-- What is the difference between WCAG and WAI-ARIA --distractors-- WCAG provides general guidelines for mobile only accessibility, while WAI-ARIA offers specific rules for making dynamic and interactive content accessible for users of assistive technologies WAI-ARIA provides general guidelines for mobile only accessibility, while WCAG offers specific rules for making dynamic and interactive content accessible for users of assistive technologiesWAI-ARIA provides general guidelines for web accessibility, while WCAG offers specific rules for making dynamic and interactive content accessible for users of assistive technologies --answer--\nWCAG provides general guidelines for web accessibility, while WAI-ARIA offers specific rules for making dynamic and interactive content accessible for users of assistive technologies --question--\n--text--\nWhich of the following is a common use case for using the aria-hidden attribute --distractors--\nForms and tables that don't contain important information Paragraphs and headings that don't contain important information Links and images that only have a decorative purpose --answer--\nIcons and images that only have a decorative purpose --question--\n--text--\nWhat is the purpose of the role attribute --distractors--\nTo style elements with CSS animations allowing assistive technologies to better understand how the element should be interpreted and interacted with To define the visual appearance of HTML elements allowing assistive technologies to better understand how the element should be interpreted and interacted with To add labels to form elements allowing assistive technologies to better understand how the element should be interpreted and interacted with --answer--\nTo specify the type and purpose of an element, allowing assistive technologies to better understand how the element should be interpreted and interacted with --question--\n--text--\nWhy is it important to use descriptive link text for links --distractors--\nTo make the link text stand out visually from the rest of the page content To ensure the link loads faster when clicked To ensure that search engines will always list your site as the first result in the list --answer--\nTo ensure that everyone, including users of assistive technology understand the purpose of the link --question--\n--text--\nWhich of the following is a best practice for making audio and video content accessible --distractors--\nProviding high-quality graphics to accompany the audio and video content to make it accessible to people with visual impairments",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "39297b8fd8f8c26e7c4e629e6266bf3a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the link loads faster when clicked To ensure that search engines will always list your site as the first result in the list --answer-- To ensure that everyone, including users of assistive technology understand the purpose of the link --question-- --text-- Which of the following is a best practice for making audio and video content accessible --distractors-- Providing high-quality graphics to accompany the audio and video content to make it accessible to people with visual impairmentsUsing bright colors and large text to make the content more engaging and to make it accessible to people with visual impairments Limiting the length of audio and video content to make it accessible to people with hearing impairments --answer--\nProviding captions and transcripts for audio and video content to make it accessible to people with hearing impairments --question--\n--text--\nWhat are the four principles behind the Web Content Accessibility Guidelines --distractors--\nPerceivable, Operable, Units, and Robust Perceivable, Operations, Understandable, and Robust Persistent, Operable, Understandable, and Robust --answer--\nPerceivable, Operable, Understandable, and Robust",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-accessibility\\66ed9026f45ce3ece4053ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a95a2a41858957ec1302f400e834473b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edcccbba6dacdb65a59067\ntitle: JavaScript Arrays Quiz\nchallengeType: 8\ndashedName: quiz-javascript-arrays\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat will be the output for the following code js\nconst numbers = [1, 2, 3];\nconsole log(numbers[10]);\n--distractors--\n[1, 2, 3]\nnull\n10\n--answer--\nundefined\n--question--\n--text--\nWhich of the following is the correct way to access the string \"Jessica\" from the developers array --distractors--\njs\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers[1]\njs\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers[2]\njs\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers[-1]\n--answer--\njs\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers[0]\n--question--\n--text--\nWhat value will be assigned to the index variable js\nconst numbers = [10, 20, 30, 40];\nconst index = numbers indexOf(20);\nconsole log(index);\n--distractors--\n2\n3\n-1\n--answer--\n1\n--question--\n--text--\nWhat does the rest syntax do --distractors--\nIt is used to divide a string into an array of substrings It is used to add or remove elements from any position in an array It is used to add elements to the end of the array and will return the new length --answer--\nIt captures the remaining elements of an array into a new array --question--\n--text--\nWhat is array destructuring --distractors--\nIt is used to concatenate all of the elements of an array into a single string It is used to check if an array contains a specific value It is used to remove the last element from an array and will return that removed element --answer--\nIt is used to extract values from arrays and assign them to variables in a more concise and readable way --question--\n--text--\nWhat value will be assigned to the arr2 variable js\nconst arr1 = [1, 2, 3];\nconst arr2 = [",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "78662e4aa6fc305fe7a686811be95cce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "into a single string It is used to check if an array contains a specific value It is used to remove the last element from an array and will return that removed element --answer-- It is used to extract values from arrays and assign them to variables in a more concise and readable way --question-- --text-- What value will be assigned to the arr2 variable js const arr1 = [1, 2, 3]; const arr2 = [arr1, 4, 5];\nconsole log(arr2);\n--distractors--\n[4, 5, 1, 2, 3]\n[1, 2, [3, 4, 5]]\n[1, 2, 3]\n--answer--\n[1, 2, 3, 4, 5]\n--question--\n--text--\nWhat will this code log to the console js\nconst colors = [\"red\", \"blue\", \"green\", \"yellow\"];\ncolors splice(1, 2, \"purple\");\nconsole log(colors);\n--distractors--\n[\"red\", \"blue\", \"green\", \"yellow\"]\n[\"red\", \"blue\", \"yellow\"]\n[\"red\", \"yellow\"]\n--answer--\n[\"red\", \"purple\", \"yellow\"]\n--question--\n--text--\nWhat value will be assigned to the slicedArr variable js\nconst arr = [\"apple\", \"banana\", \"cherry\", \"date\"];\nconst slicedArr = arr slice(1, 3);\nconsole log(slicedArr);\n--distractors--\n[\"apple\", \"banana\"]\n[\"cherry\", \"date\"]\n[\"apple\", \"cherry\"]\n--answer--\n[\"banana\", \"cherry\"]\n--question--\n--text--\nWhich method returns the first index of a given element in an array --distractors--\nfirstIndex()\nlastIndex()\nsearchIndex()\n--answer--\nindexOf()\n--question--\n--text--\nWhich method is used to remove the first element from an array and returns that removed element --distractors--\npop()\nslice()\nsplice()\n--answer--\nshift()\n--question--\n--text--\nWhat does the concat() method do --distractors--\nJoins array elements into a string Adds an element to the beginning of an array Removes an element from the array --answer--\nMerges two arrays into a new array --question--\n--text--\nWhat will be the output of this code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "d2ba16ad89104a1a143de44d24338f07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "searchIndex() --answer-- indexOf() --question-- --text-- Which method is used to remove the first element from an array and returns that removed element --distractors-- pop() slice() splice() --answer-- shift() --question-- --text-- What does the concat() method do --distractors-- Joins array elements into a string Adds an element to the beginning of an array Removes an element from the array --answer-- Merges two arrays into a new array --question-- --text-- What will be the output of this code```js\nconst fruits = [\"apple\", \"banana\", \"cherry\", \"apple\", \"orange\"];\nfruits splice(0, 1);\nconsole log(fruits);\n```\n--distractors--\n[\"apple\", \"banana\", \"cherry\", \"apple\", \"orange\"]\n[\"apple\", \"banana\", \"cherry\"]\n[\"cherry\", 'apple']\n--answer--\n[\"banana\", \"cherry\", \"apple\", \"orange\"]\n--question--\n--text--\nWhat does the includes() method do --distractors--\nIt is used to divide a string into an array of substrings It is used to concatenate all of the elements of an array into a single string It is used to add or remove elements from any position in an array --answer--\nIt is used to check if an array contains a specific value --question--\n--text--\nWhich of the following methods is used to reverse an array in place --distractors--\nreversed()\nreverseArr()\nreversing()\n--answer--\nreverse()\n--question--\n--text--\nWhat is a two dimensional array --distractors--\nAn array that only contains object literals An array of fixed length An array of floating point numbers --answer--\nAn array of arrays --question--\n--text--\nWhich of the following is true about the indexOf() method in arrays --distractors--\nIt always returns the last occurrence of the element It throws an error if the element is not found It requires the array to be sorted --answer--\nIt returns -1 if the element is not found --question--\n--text--\nWhich of the following is NOT an array method --distractors--\nincludes()\npop()\npush()\n--answer--\ntrim()\n--question--\n--text--\nWhat will be the output for the following code js\nconst arr = [\"o\", \"l\", \"l\", \"e\", \"h\"];\nconsole log(arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "53816610f9d2d7eae6ece6cf1ec36705",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--distractors-- It always returns the last occurrence of the element It throws an error if the element is not found It requires the array to be sorted --answer-- It returns -1 if the element is not found --question-- --text-- Which of the following is NOT an array method --distractors-- includes() pop() push() --answer-- trim() --question-- --text-- What will be the output for the following code js const arr = [\"o\", \"l\", \"l\", \"e\", \"h\"]; console log(arrjoin(\"\"));\n--distractors--\n[\"o\", \"l\", \"l\", \"e\", \"h\"]\n\"hello\"\nundefined\n--answer--\n\"olleh\"\n--question--\n--text--\nWhat will be the result of using the shift() method on an empty array --distractors--\nTypeError\n[]\nnull\n--answer--\nundefined\n--question--\n--text--\nWhich method will return a new array without changing the original array --distractors--\nshift()\npop()\npush()\n--answer--\nslice()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-arrays\\66edcccbba6dacdb65a59067.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "5e69b4e236cd7a868042523a32196f8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
    "source_type": "git_repo",
    "title": "User information",
    "content": "id: 66ed902df45ce3ece4053ebc\ntitle: HTML Tables and Forms Quiz\nchallengeType: 8\ndashedName: quiz-html-tables-and-forms\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following attributes is used to specify the URL where the form data should be sent --distractors--\ncapture\naccept\nlang\n--answer--\naction\n--question--\n--text--\nWhich two elements are used to specify a row and a row header in a table --distractors--\nThe r element is used for rows and the thead element is used for the header The row element is used for rows and the th element is used for the header The tr element is used for rows and the head element is used for the header --answer--\nThe tr element is used for rows and the th element is used for the header --question--\n--text--\nWhat is the td element used for --distractors--\nIt is used to define a table data type It is used to merge two columns It is used to merge two rows --answer--\nIt is used to define a table cell --question--\n--text--\nWhat is the function of the colspan attribute --distractors--\nIt defines the length of a column in a table It removes the breakline between text in a column It's used to define the number of columns --answer--\nIt defines the number of columns a table cell should span --question--\n--text--\nWhat is the role of the placeholder attribute --distractors--\nIt's used to send data to the server when the form is submitted It's used to associate a label element with an input element It's used to specify that an input field is read-only to the user --answer--\nIt's used to provide a hint for an input field --question--\n--text--\nWhat is the purpose of the thead element --distractors--\nIt's used to group the body content in an HTML table It's used to group the description of an HTML table It's used to group the footer content in an HTML table --answer--\nIt's used to group the header content in an HTML table --question--\n--text--\nWhich of the following is an example of explicit form association between labels and inputs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "32f7e217f6bf5e20517d6dc000f6cd45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
    "source_type": "git_repo",
    "title": "User information",
    "content": "for an input field --question-- --text-- What is the purpose of the thead element --distractors-- It's used to group the body content in an HTML table It's used to group the description of an HTML table It's used to group the footer content in an HTML table --answer-- It's used to group the header content in an HTML table --question-- --text-- Which of the following is an example of explicit form association between labels and inputs--distractors--\n```html\nAge:\n```\n```html\nAge:\n```\n```html\nAge:\n```\n--answer--\n```html\nAge:\n```\n--question--\n--text--\nWhat is an HTML validator used for --distractors--\nA validator is a tool that automatically formats your HTML code A validator is a tool that applies styles to your HTML A validator is a tool that makes your HTML code run faster --answer--\nA validator is a tool that checks the syntax of HTML code to ensure it is valid --question--\n--text--\nWhich element is used to define a cell in a table --distractors--\nth\ntc\ntcol\n--answer--\ntd\n--question--\n--text--\nWhich of the following is a tool that allows you to inspect and modify the HTML structure of a web page --distractors--\nDOM removal DOM tester DOM validation --answer--\nDOM inspector --question--\n--text--\nWhich of the following is the correct way to group related input fields --distractors--\n```html\nUser information\nName:\nEmail:\n```\n```html\nUser information\nName:\nEmail:\n```\n```html\nUser information\nName:\nEmail:\n```\n--answer--\n```html\nUser information\nName:\nEmail:\n```\n--question--\n--text--\nWhich of the following is used to specify that an input field is read-only --distractors--\nreadInputOnly\nread-only\nonly-read\n--answer--\nreadonly\n--question--\n--text--\nWhich attribute specifies that an input must be filled out before submitting the form --distractors--\nnecessary\nobligatory\nessential\n--answer--\nrequired\n--question--\n--text--\nWhat are Devtools used for --distractors--\nThese tools are built directly into the browser and they are used to spot any linting issues in your code These tools are built directly into the browser and are used to automatically format your code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "6287b2fe6c7ea918ac73b8b0589bba71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
    "source_type": "git_repo",
    "title": "User information",
    "content": "input field is read-only --distractors-- readInputOnly read-only only-read --answer-- readonly --question-- --text-- Which attribute specifies that an input must be filled out before submitting the form --distractors-- necessary obligatory essential --answer-- required --question-- --text-- What are Devtools used for --distractors-- These tools are built directly into the browser and they are used to spot any linting issues in your code These tools are built directly into the browser and are used to automatically format your codeThese tools are built directly into the browser and are used to help you ensure 100% test coverage for your code --answer--\nThese tools are built directly into the browser and are used to help you debug, profile, and analyze web pages --question--\n--text--\nWhich of the following is the correct way to disable an input --distractors--\nhtml\n<input type=\"checkbox\" disabling />\nhtml\n<input type=\"checkbox\" inputDisabled />\nhtml\n<input type=\"checkbox\" disabledInput />\n--answer--\nhtml\n<input type=\"checkbox\" disabled />\n--question--\n--text--\nWhich of the following is a valid value for the type attribute --distractors--\nhtml\n<input type=\"time\" />\nhtml\n<input type=\"action\" />\nhtml\n<input type=\"capture\" />\n--answer--\nhtml\n<input type=\"email\" />\n--question--\n--text--\nWhich of the following is the correct use of the size attribute --distractors--\nhtml\n<input id=\"fullName\" type=\"text\" size=\" 001\" />\nhtml\n<input id=\"fullName\" type=\"text\" size=\"large\" />\nhtml\n<input id=\"fullName\" type=\"text\" size=\"10vh\" />\n--answer--\nhtml\n<input id=\"fullName\" type=\"text\" size=\"10\" />\n--question--\n--text--\nWhich of the following attributes are used to specify the minimum and maximum number of characters required in an input field --distractors--\nminlen and maxlen\nmin and max\nminimumLen and maximumLen\n--answer--\nminlength and maxlength\n--question--\n--text--\nWhich of the following button examples does NOT use a correct value for the type attribute",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "c853cc45f8431df647fd8f02621dc35f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
    "source_type": "git_repo",
    "title": "User information",
    "content": "001\" /> html <input id=\"fullName\" type=\"text\" size=\"large\" /> html <input id=\"fullName\" type=\"text\" size=\"10vh\" /> --answer-- html <input id=\"fullName\" type=\"text\" size=\"10\" /> --question-- --text-- Which of the following attributes are used to specify the minimum and maximum number of characters required in an input field --distractors-- minlen and maxlen min and max minimumLen and maximumLen --answer-- minlength and maxlength --question-- --text-- Which of the following button examples does NOT use a correct value for the type attribute--distractors--\nhtml\n<button type=\"submit\">Submit</button>\nhtml\n<button type=\"button\">Example Button</button>\nhtml\n<button type=\"reset\">Reset</button>\n--answer--\nhtml\n<button type=\"btn\">Example Btn</button>\n--question--\n--text--\nWhich of the following attributes is used to specify the value for a button --distractors--\nbuttonValue\nval\nbtnVal\n--answer--\nvalue\n--quiz--\n--question--\n--text--\nWhat is the role of the action attribute inside of the opening form tag --distractors--\nIt is used to specify that an input field is read-only It is used to define the number of characters that should be visible as the user types into the input It is used to show a hint to the user to show them what to enter in the input field --answer--\nIt is used to specify the URL where the form data should be sent --question--\n--text--\nWhich of the following attributes is used to specify the HTTP method to use when sending the form data --distractors--\nset\ntype\nhttp\n--answer--\nmethod\n--question--\n--text--\nWhich of the following is a common method used when working with forms --distractors--\nPUSH\nSET\nPULL\n--answer--\nGET\n--question--\n--text--\nWhich of the following is NOT a valid value for the type attribute --distractors--\nnumber\nemail\ntext\n--answer--\nhttp\n--question--\n--text--\nWhich of the following is the correct way to create a button in a form --distractors--\n```html\n```\n```html\n```\n```html\n```\n--answer--\n```html\n```\n--question--\n--text--\nWhat is implicit form association",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "20f760389bb77720d6481683ef17e790",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
    "source_type": "git_repo",
    "title": "User information",
    "content": "--question-- --text-- Which of the following is a common method used when working with forms --distractors-- PUSH SET PULL --answer-- GET --question-- --text-- Which of the following is NOT a valid value for the type attribute --distractors-- number email text --answer-- http --question-- --text-- Which of the following is the correct way to create a button in a form --distractors-- ```html ``` ```html ``` ```html ``` --answer-- ```html ``` --question-- --text-- What is implicit form association--distractors--\nThis is where inputs can be associated with labels by using the action and for attributes on the label element This is where inputs can be associated with labels by using the required and for attributes on the label element This is where inputs can be associated with labels by using the for attribute on the label element --answer--\nThis is where inputs can be associated with labels by wrapping the input field inside the label element --question--\n--text--\nWhat is the role of the fieldset element --distractors--\nIt is used to group the header content in an HTML table It is used to create a label for an input field It is used to add a caption to describe the group of inputs --answer--\nIt is used to group related inputs together --question--\n--text--\nWhich of the following is used to create a checkbox in a form --distractors--\nhtml\n<input check=\"type\" id=\"location\" name=\"location\" value=\"location\" />\nhtml\n<input type=\"check\" id=\"location\" name=\"location\" value=\"location\" />\nhtml\n<input checkbox=\"type\" id=\"location\" name=\"location\" value=\"location\" />\n--answer--\nhtml\n<input type=\"checkbox\" id=\"location\" name=\"location\" value=\"location\" />\n--question--\n--text--\nWhich of the following elements is used to add a title for an HTML table --distractors--\ntitles\ntitle\ncaptions\n--answer--\ncaption\n--question--\n--text--\nWhat is the role of the legend element --distractors--\nIt is used to group the body content in an HTML table It is used to add a caption to describe the cells for a table It is used to group related inputs together --answer--\nIt is used to add a caption to describe the group of inputs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "f19097fadec4950a62bd01b5b8b41c25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
    "source_type": "git_repo",
    "title": "User information",
    "content": "elements is used to add a title for an HTML table --distractors-- titles title captions --answer-- caption --question-- --text-- What is the role of the legend element --distractors-- It is used to group the body content in an HTML table It is used to add a caption to describe the cells for a table It is used to group related inputs together --answer-- It is used to add a caption to describe the group of inputs--question--\n--text--\nWhich of the following elements is used to group the header content in an HTML table --distractors--\nheader\nhead\ntheader\n--answer--\nthead\n--question--\n--text--\nWhich of the following is the correct way to add rows and data cells to a table --distractors--\n```html\nDavis\nAlex\n54\n```\n```html\nDavis\nAlex\n54\n```\n```html\nDavis\nAlex\n54\n```\n--answer--\n```html\nDavis\nAlex\n54\n```\n--question--\n--text--\nWhat is the DOM inspector --distractors--\nA tool that is used to remove all elements from the DOM A set of tools built directly into the browser that helps you debug, profile, and analyze web pages A tool that checks the syntax of HTML code to ensure it is valid --answer--\nA tool that allows you to inspect and modify the HTML structure of a web page --question--\n--text--\nWhich of the following is a tool that checks the syntax of HTML code to ensure it is valid --distractors--\nHTML validate\nHTML isValid\nHTML valid\n--answer--\nHTML validator\n--question--\n--text--\nWhich of the following is the correct way to specify the number of columns for data cell in a table --distractors--\n```html\nAverage Grade\n```\n```html\nAverage Grade\n```\n```html\nAverage Grade\n```\n--answer--\n```html\nAverage Grade\n```\n--question--\n--text--\nWhat is a focused state for an input field --distractors--\nThis is the state of an input field when the focus is removed by the user This is the state of an input field when it is set to readonly by the user This is the state of an input field when it is disabled by the user --answer--\nThis is the state of an input field when it is selected by the user",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "b32f61afe7f7d013da15fab19e7006a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
    "source_type": "git_repo",
    "title": "User information",
    "content": "--question-- --text-- What is a focused state for an input field --distractors-- This is the state of an input field when the focus is removed by the user This is the state of an input field when it is set to readonly by the user This is the state of an input field when it is disabled by the user --answer-- This is the state of an input field when it is selected by the user--question--\n--text--\nWhich of the following is the correct way to create a radio button --distractors--\nhtml\n<input id=\"no-option\" select=\"radio\" name=\"hotel-stay\" />\nhtml\n<input id=\"no-option\" radio=\"type\" name=\"hotel-stay\" />\nhtml\n<input id=\"no-option\" type=\"radio-btn\" name=\"hotel-stay\" />\n--answer--\nhtml\n<input id=\"no-option\" type=\"radio\" name=\"hotel-stay\" />\n--question--\n--text--\nWhat is the role of the for attribute --distractors--\nIt is used to show a hint to the user It is used to specify the value of the input\nIt is used to create a label for an input field --answer--\nIt is used to specify which input field the label is for --question--\n--text--\nWhich of the following attributes is used to define the number of characters that should be visible as the user types into the input --distractors--\nsetsize\nsizing\nsizes\n--answer--\nsize\n--question--\n--text--\nWhich of the following attributes is used to show a hint to the user to show them what to enter in the input field --distractors--\nshowhint\nhint\nclue\n--answer--\nplaceholder",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14614,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-html-tables-and-forms\\66ed902df45ce3ece4053ebc.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "dfac58bb59e04d31f284246b1775ffc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-audio-and-video\\66edd3b3096349f06cf688bb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd3b3096349f06cf688bb\ntitle: JavaScript Audio and Video Quiz\nchallengeType: 8\ndashedName: quiz-javascript-audio-and-video\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is the purpose of the Audio() constructor in JavaScript --distractors--\nCreate a new audio file Play an existing audio file Modify audio files --answer--\nCreate a new audio element --question--\n--text--\nWhich method is used to begin playback of an audio or video element --distractors--\nstart()\nbegin()\nresume()\n--answer--\nplay()\n--question--\n--text--\nWhat is the difference between pause() and play() methods for media elements --distractors--\npause() returns a Promise while play() does not pause() cannot be resumed while play() can start from any position pause() automatically resets to the beginning while play() starts from where the audio was paused --answer--\npause() stops playback but maintains the current position while play() starts playback --question--\n--text--\nWhich audio format has the widest browser support --distractors--\nFLAC\nOGG\nWAV\n--answer--\nMP3\n--question--\n--text--\nWhat is the purpose of the source element within an audio or video element --distractors--\nSpecify the volume of the media Add subtitles to the media Link to an external audio processor --answer--\nSpecify multiple media sources for different formats --question--\n--text--\nWhat are the two possible MIME types an MP4 format can have --distractors--\nmp4/audio and mp4/video\naudio/mpeg4 and video/mpeg4\nmp4/mpeg and mp4/stream\n--answer--\naudio/mp4 and video/mp4\n--question--\n--text--\nWhat does a codec do in the context of audio and video --distractors--\nIncreases the volume of the media Changes the file format of the media Encrypts the media for secure transmission --answer--\nConverts media between analogue and digital formats --question--\n--text--\nWhich API provides a way to create, process, and analyze audio in web applications --distractors--\nAudio Processing API Sound Manipulation API Media Stream API --answer--\nWeb Audio API --question--\n--text--\nWhat is the purpose of the getUserMedia() method",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-audio-and-video\\66edd3b3096349f06cf688bb.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e1a6f1f1df303974763a3976d26ca2c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-audio-and-video\\66edd3b3096349f06cf688bb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "do in the context of audio and video --distractors-- Increases the volume of the media Changes the file format of the media Encrypts the media for secure transmission --answer-- Converts media between analogue and digital formats --question-- --text-- Which API provides a way to create, process, and analyze audio in web applications --distractors-- Audio Processing API Sound Manipulation API Media Stream API --answer-- Web Audio API --question-- --text-- What is the purpose of the getUserMedia() method--distractors--\nAuthenticate users with a media service Retrieve user preferences for media playback Download media files to the user's device --answer--\nAccess the user's camera and/or microphone --question--\n--text--\nWhich property of the HTMLMediaElement interface represents the current playback time --distractors--\ntime\nplaybackPosition\ncurrentPosition\n--answer--\ncurrentTime\n--question--\n--text--\nWhat does the following code snippet do javascript\nconst audio = new Audio('song mp3');\naudio loop = true;\n--distractors--\nPlays the audio file once Increases the volume of the audio Pauses the audio after one loop --answer--\nSets the audio to repeat indefinitely --question--\n--text--\nWhat is the full meaning of MIME --distractors--\nMultiple Internet Message Extensions\nMail Internet Multimedia Extensions\nMultimedia Internet Mail Extensions\n--answer--\nMultipurpose Internet Mail Extensions\n--question--\n--text--\nWhat does the canPlayType() method help you do --distractors--\nCheck if audio is currently playing in the browser in a specific format Verify if a media file exists in the browser's cache and accessible for playback Test if an audio element has controls enabled and whether the user has appropriate permissions to interact with it --answer--\nDetermine if a browser is likely to be able to play your specific audio format --question--\n--text--\nWhich of the following is NOT a valid event of the HTMLMediaElement API --distractors--\nwaiting\ncanplay\nended\n--answer--\nstopped\n--question--\n--text--\nWhat HTMLMediaElement event fires when playback is paused due to data buffering --distractors--\nstopped\npause\nbuffering\n--answer--\nwaiting\n--question--\n--text--\nWhich Web Audio API interface is used to represent an audio-processing graph --distractors--\nAudioNode\nAudioBuffer\nAudioListener\n--answer--\nAudioContext\n--question--\n--text--\nWhat is the purpose of the Media Source Extensions API",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-audio-and-video\\66edd3b3096349f06cf688bb.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "704d4830ee1def83f4a28d150f05e27d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-audio-and-video\\66edd3b3096349f06cf688bb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "specific audio format --question-- --text-- Which of the following is NOT a valid event of the HTMLMediaElement API --distractors-- waiting canplay ended --answer-- stopped --question-- --text-- What HTMLMediaElement event fires when playback is paused due to data buffering --distractors-- stopped pause buffering --answer-- waiting --question-- --text-- Which Web Audio API interface is used to represent an audio-processing graph --distractors-- AudioNode AudioBuffer AudioListener --answer-- AudioContext --question-- --text-- What is the purpose of the Media Source Extensions API--distractors--\nAdd visual effects to video Convert between different media formats Enable JavaScript to synchronize multiple audio tracks --answer--\nIt lets you directly pass a user's webcam feed to a video element\n--question--\n--text--\nWhen is the ended event fired --distractors--\nWhen the media source is changed When the pause() method is called When the media is manually stopped --answer--\nWhen the end of the media has been reached --question--\n--text--\nHow is the Screen Capture API exposed --distractors--\nThrough the window screenCapture interface\nBy using the navigator capture property\nBy using the captureScreen() method\n--answer--\nBy calling the getDisplayMedia() method --question--\n--text--\nWhat is the WMV format associated with --distractors--\nWide Media Video\nWorld Media Video\nWeb Media Player\n--answer--\nWindows Media Player",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5896,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-audio-and-video\\66edd3b3096349f06cf688bb.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ffc1fbca32095ccad0e00286358250d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-comparisons-and-conditionals\\66edc47c11492ac5cf258ad9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edc47c11492ac5cf258ad9\ntitle: JavaScript Comparisons and Conditionals Quiz\nchallengeType: 8\ndashedName: quiz-javascript-comparisons-and-conditionals\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat's the result of the expression undefined > 0 --distractors--\ntrue\nundefined\nnull\n--answer--\nfalse\n--question--\n--text--\nWhich logical operation does || represent --distractors--\nXOR\nAND\nNOT\n--answer--\nOR\n--question--\n--text--\nWhat's the output of the following code js\nconsole log(5 === 2 + 3 || 4 == 2);\n--distractors--\nundefined\nfalse\nAn error is raised --answer--\ntrue\n--question--\n--text--\nWhat is a truthy and falsy value --distractors--\nA value that's both true and false A value that changes depending on context A value that functions differently than true or false value --answer--\nA value that is considered true or false when encountered in a Boolean context --question--\n--text--\nWhat's logged to the console from the code below js\nif (1) {\nconsole log(\"True \");\n}\n--distractors--\nfalse\nNothing gets printed to the console An error is raised --answer--\nTrue --question--\n--text--\nWhat's the difference between undefined and null --distractors--\nnull and undefined point to an out-of-range memory location and are inaccessible null is the implicit value assigned to variables and it can not be changed, while undefined is the explicit value assigned to variables null is a global property, undefined is not --answer--\nVariables without a value are undefined, while null represents an intentional absence of an object value --question--\n--text--\nWhat happens when you don't include break while implementing a switch statement --distractors--\nThe switch statement will stop abruptly The switch statement will throw an error after previous statement The switch statement will exit after the first match --answer--\nThe code continues to evaluate the following case statements, even after finding a match --question--\n--text--\nWhat is printed to the console from the code below js\nconst a = 2;\nif (1 == \"1\") {\nlet b = 3;\nconsole log(a + b);\n}\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3734,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-comparisons-and-conditionals\\66edc47c11492ac5cf258ad9.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3e56ce971822bd5878fea1478686645a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-comparisons-and-conditionals\\66edc47c11492ac5cf258ad9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a switch statement --distractors-- The switch statement will stop abruptly The switch statement will throw an error after previous statement The switch statement will exit after the first match --answer-- The code continues to evaluate the following case statements, even after finding a match --question-- --text-- What is printed to the console from the code below js const a = 2; if (1 == \"1\") { let b = 3; console log(a + b); } consolelog(b);\n--distractors--\nAn error is raised js\n5\n3\njs\n5\nundefined\n--answer--\n5, and then an error is raised --question--\n--text--\nWhat will be the output of the following JavaScript code ```js\nlet vehicle = \"car\";\nswitch (vehicle) {\ncase \"bike\":\nconsole log(\"Bikes are two-wheelers \");\nbreak;\ncase \"car\":\nconsole log(\"Some cars are 4x4 \");\ncase \"truck\":\nconsole log(\"Trucks can carry heavy loads \");\nbreak;\ndefault:\nconsole log(\"Unknown vehicle \");\n}\n```\n--distractors--\nmd\nSome cars are 4x4 md\nSome cars are 4x4 Trucks can carry heavy loads Unknown vehicle md\nUnknown vehicle --answer--\nmd\nSome cars are 4x4 Trucks can carry heavy loads --question--\n--text--\nWhat is printed to the console with code below js\nlet x = 5;\nif (x > 1 && x < 10) {\nconsole log(\"x is between 1 and 10\");\n} else {\nconsole log(\"x is not between 1 and 10\");\n}\n--distractors--\nAn error is raised Nothing is printed x is not between 1 and 10\n--answer--\nx is between 1 and 10",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3734,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-comparisons-and-conditionals\\66edc47c11492ac5cf258ad9.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1c36031cf88abab290331dcc66bdb708",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-classes\\67358ac128957c865dcf3ddf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67358ac128957c865dcf3ddf\ntitle: JavaScript Classes Quiz\nchallengeType: 8\ndashedName: quiz-javascript-classes\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is the purpose of a class in JavaScript --distractors--\nTo define only properties, not methods To define static variables only To organize only primitive data --answer--\nTo create reusable blueprints for objects --question--\n--text--\nHow do you define a class in JavaScript --distractors--\nUsing the className keyword Using the object keyword Using the constructor keyword only --answer--\nUsing the class keyword --question--\n--text--\nWhich method is used in a class to initialize properties --distractors--\nstatic\ninit\ndefine\n--answer--\nconstructor\n--question--\n--text--\nWhat does this represent inside a class constructor --distractors--\nThe global class object The function itself An undefined reference --answer--\nAn instance of the class --question--\n--text--\nWhich of the following describes how this behaves in an arrow function inside a class method --distractors--\nIt inherits the value of this from the nearest function in a different scope It refers to a newly created instance of the class It inherits the value of this from the global object in strict mode --answer--\nIt inherits the value of this from the enclosing scope where it is defined --question--\n--text--\nWhat is the primary purpose of the extends keyword --distractors--\nTo define static methods in a parent class constructor To create a method in a class To initialize default properties in the parent class --answer--\nTo create a subclass that inherits from a parent class --question--\n--text--\nWhich of the following is an example of how to create a Car class that inherits from a Vehicle class --distractors--\njavascript\nclass Car uses Vehicle {}\njavascript\nclass Car = Vehicle {}\njavascript\nclass Car inherits Vehicle {}\n--answer--\njavascript\nclass Car extends Vehicle {}\n--question--\n--text--\nWhat is the output of the following code ```javascript\nclass Animal {\nspeak() {\nreturn \"Animal speaks\";\n}\n}\nclass Dog extends Animal {\nspeak() {\nreturn \"Dog barks\";\n}\n}\nconst myDog = new Dog();\nconsole log(myDog speak());\n```\n--distractors--\nAnimal speaks\nAn error is raised",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6617,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-classes\\67358ac128957c865dcf3ddf.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "641c2ce9bf12ecdf29a28f873ea3e4f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-classes\\67358ac128957c865dcf3ddf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "class --distractors-- javascript class Car uses Vehicle {} javascript class Car = Vehicle {} javascript class Car inherits Vehicle {} --answer-- javascript class Car extends Vehicle {} --question-- --text-- What is the output of the following code ```javascript class Animal { speak() { return \"Animal speaks\"; } } class Dog extends Animal { speak() { return \"Dog barks\"; } } const myDog = new Dog(); console log(myDog speak()); ``` --distractors-- Animal speaks An error is raisedundefined\n--answer--\nDog barks\n--question--\n--text--\nWhat is the function of the super keyword in a subclass --distractors--\nTo define a new instance of the parent class To delete methods and properties from the parent class To access only the static methods of the parent class --answer--\nTo call the constructor or methods of the parent class --question--\n--text--\nWhich of the following describes a static method --distractors--\nA method that is inaccessible inside the class itself A method that is used only in arrow functions A method that is unique to each instance of a class --answer--\nA method that belongs to the class itself, not to any instance --question--\n--text--\nWhat will the following code output ```js\nclass Calculator {\nstatic add(a, b) {\nreturn a + b;\n}\n}\nconsole log(Calculator add(3, 4));\n```\n--distractors--\nAn error is raised undefined\nNaN\n--answer--\n7\n--question--\n--text--\nHow would you access a static property in JavaScript class --distractors--\nBy using this propertyName within a method By using instance propertyName after creating an instance By using super propertyName within a subclass --answer--\nBy using ClassName propertyName --question--\n--text--\nIn which scenario would you use a static method over an instance method --distractors--\nWhen you need to access and modify the instance's properties When the method needs to be called on an object instance When the method doesn't rely on instance-specific data and operates on class-level data --answer--\nWhen the method operates on data that is shared by all instances of the class --question--\n--text--\nWhat will the following code output ```js\nclass MyClass {\nsayHello() {\nreturn \"Hello \";\n}\n}\nconsole log(MyClass sayHello());\n```\n--distractors--\nHello null\nundefined\n--answer--\nIt throws an error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6617,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-classes\\67358ac128957c865dcf3ddf.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7680472255e6eb7eaa5ff60b110c00d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-classes\\67358ac128957c865dcf3ddf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "modify the instance's properties When the method needs to be called on an object instance When the method doesn't rely on instance-specific data and operates on class-level data --answer-- When the method operates on data that is shared by all instances of the class --question-- --text-- What will the following code output ```js class MyClass { sayHello() { return \"Hello \"; } } console log(MyClass sayHello()); ``` --distractors-- Hello null undefined --answer-- It throws an error--question--\n--text--\nWhat keyword is used to inherit properties and methods from another class --distractors--\nimport\ninherit\nstatic\n--answer--\nextends\n--question--\n--text--\nWhat is printed by the following code ```js\nclass Person {\nstatic species = \"Human\";\n}\nconsole log(Person species);\n```\n--distractors--\nundefined\nnull\nAn error is raised --answer--\nHuman\n--question--\n--text--\nWhich of the following best describes inheritance --distractors--\nIt allows a method to return a new object It allows an instance to define its own properties It allows a static property to be converted into a non-static property --answer--\nIt allows a class to acquire properties and methods from another class --question--\n--text--\nWhat happens if a constructor is not defined in a subclass --distractors--\nAn error will be thrown The subclass will inherit the constructor from any class in the code The subclass cannot create new instances --answer--\nThe superclass's constructor will be used by default --question--\n--text--\nWhat does this represent in the following code js\nclass Animal {\nconstructor(name) {\nthis name = name;\n}\n}\n--distractors--\nThe global object The Animal class itself An undefined variable --answer--\nThe instance of Animal --question--\n--text--\nWhat is the primary use of static properties --distractors--\nTo define default properties for each class instance To override methods in a subclass To define instance-specific data --answer--\nTo store class-wide data shared across instances",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6617,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-classes\\67358ac128957c865dcf3ddf.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "29be9fa2645167920be125096a2c162d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-dates\\66edd3711bb9f7efa73aef91.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd3711bb9f7efa73aef91\ntitle: JavaScript Dates Quiz\nchallengeType: 8\ndashedName: quiz-javascript-dates\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is the JavaScript Date object used for --distractors--\nWork with just dates only Work with just time only Work with just leap years --answer--\nWork with both dates and time --question--\n--text--\nWhich code creates a new Date object instance --distractors--\nDate new()\nDate fetch()\nnew Date()\n--answer--\nnew Date()\n--question--\n--text--\nHow does Date now() work --distractors--\nIt returns the current time in nanoseconds since July 4, 1776 It returns the previous time in milliseconds since January 1, 1974 It returns the current date in minutes since January 1, 1970 --answer--\nIt returns the current time in milliseconds since January 1, 1970 --question--\n--text--\nWhich method returns the current year --distractors--\ngetNewYear()\ngetLastYear()\ngetLeapYear()\n--answer--\ngetFullYear()\n--question--\n--text--\nWhich method returns the current month, as a zero-indexed integer --distractors--\ngetCalendar()\nfetchMonth()\nget Month()\n--answer--\ngetMonth()\n--question--\n--text--\nWhich method formats a date as a string --distractors--\ngetMonth()\nformatDate()\ntoStingy()\n--answer--\ntoString()\n--question--\n--text--\nWhat would the result of console log(new Date() getFullYear()); be, if it is June 12th 2022 --distractors--\n\"June 12th 2022\"\n\"2023\"\n\"06/12/2022\"\n--answer--\n\"2022\"\n--question--\n--text--\nWhat does fr-FR in date toLocaleDateString(\"fr-FR\") represent --distractors--\nA French-Canadian locale A French-Italian locale A French-Finnish locale --answer--\nA French locale --question--\n--text--\nIf the time in your locale is formatted as HH:MM:SS AM/PM, which line of code would correctly display the current time --distractors--\nconsole log(new Date() toLocaleDateString());\nconsole log(new Date() toString());\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5308,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-dates\\66edd3711bb9f7efa73aef91.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1be886f5699b866d3a5a5f5b59b0fa31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-dates\\66edd3711bb9f7efa73aef91.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of console log(new Date() getFullYear()); be, if it is June 12th 2022 --distractors-- \"June 12th 2022\" \"2023\" \"06/12/2022\" --answer-- \"2022\" --question-- --text-- What does fr-FR in date toLocaleDateString(\"fr-FR\") represent --distractors-- A French-Canadian locale A French-Italian locale A French-Finnish locale --answer-- A French locale --question-- --text-- If the time in your locale is formatted as HH:MM:SS AM/PM, which line of code would correctly display the current time --distractors-- console log(new Date() toLocaleDateString()); console log(new Date() toString()); consolelog(new Date() toCityDateString());\n--answer--\nconsole log(new Date() toLocaleTimeString());\n--question--\n--text--\nIn which format does the toISOString() method return a date --distractors--\nA USA-863 string format An MP3 string format A UTC string format --answer--\nAn ISO-8601 string format --question--\n--text--\nWhat should an ISO-8601 date format look like --distractors--\nDD-MM-YYYY\nDD-MM-YYTHH\nYYYY-MM-DDTHH:mm:ssZ\n--answer--\nYYYY-MM-DDTHH:mm:ss sssZ\n--question--\n--text--\nWhat is the corresponding month for console log(new Date(2003, 6, 27) getMonth()); --distractors--\nJune\nApril\nJanuary\n--answer--\nJuly\n--question--\n--text--\nHow would you format a date to a locale-specific string or a more readable format --distractors-- toLocaleDate() toLocaleString() toLocaleTimeString()\n--answer-- toLocaleDateString()\n--question--\n--text--\nWhat is the default locale used by the toLocaleDateString() method if no locales parameter is provided --distractors--\nEnglish (Great Britain) The locale closest to United States French (France) --answer--\nThe user's system locale --question--\n--text--\nWhat gets assigned to now in the code below js\nconst now = new Date();\n--distractors--\nThe current time in milliseconds since January 1, 1990 The current date in milliseconds minus the Unix epoch The current time in nanoseconds since January 1, 1990",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5308,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-dates\\66edd3711bb9f7efa73aef91.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "792d174dc35960fd2b9e31b79b1769d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-dates\\66edd3711bb9f7efa73aef91.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the default locale used by the toLocaleDateString() method if no locales parameter is provided --distractors-- English (Great Britain) The locale closest to United States French (France) --answer-- The user's system locale --question-- --text-- What gets assigned to now in the code below js const now = new Date(); --distractors-- The current time in milliseconds since January 1, 1990 The current date in milliseconds minus the Unix epoch The current time in nanoseconds since January 1, 1990--answer--\nThe current date and time based on your computer system's clock --question--\n--text--\nWhat is the output of console log(new Date(2003, 6, 27) getFullYear()); --distractors--\n\"27/6/2003\"\n27\n6\n--answer--\n2003\n--question--\n--text--\nWhat does getDate return when the date is invalid --distractors--\n0\nnull\nundefined\n--answer--\nNaN\n--question--\n--text--\nIf we are in the month of October, what will console log(new Date() getMonth()); output --distractors--\n1\n3\n10\n--answer--\n9\n--question--\n--text--\nWhich option will output 2021 for the following object js\nconst d = new Date(\"2021-12-25\");\n--distractors--\nconsole log(d getTime())\nconsole log(d toUTCString())\nconsole log(d getDate())\n--answer--\nconsole log(d getFullYear())\n--question--\n--text--\nWhich option will output \"2021-12-25T00:00:00 000Z\" for the following object js\nconst d = new Date(\"2021-12-25\");\n--distractors--\nconsole log(d getFullYear())\nconsole log(d toUTCString())\nconsole log(d getTime())\n--answer--\nconsole log(d toISOString())",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5308,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-dates\\66edd3711bb9f7efa73aef91.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e32779641591712b319639d66c1b2d6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functional-programming\\66edd4f31ff19bf5573bf64b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd4f31ff19bf5573bf64b\ntitle: JavaScript Functional Programming Quiz\nchallengeType: 8\ndashedName: quiz-javascript-functional-programming\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is a pure function --distractors--\nA function that modifies global variables and returns either undefined or null A function that logs an output to the console A function that changes its behavior based on external factors and returns null --answer--\nA function that always returns the same output for the same input and produces no side effects --question--\n--text--\nWhat is a side effect in functional programming --distractors--\nAn unexpected TypeError in your code A function that takes too long to execute and crashes the program A recursive function call that produces an infinite loop and crashes the program --answer--\nA change to the state of the program that are observable outside the function --question--\n--text--\nWhat is currying in functional programming --distractors--\nA technique for designing tests to help you ensure your code is 100% error free A more optimized way to write recursive functions so they run twice as fast as other functions The process of building, designing and testing your code to ensure that it meets the standards laid out by ECMAScript --answer--\nThe process of transforming a function with multiple arguments into a sequence of functions, each with a single argument --question--\n--text--\nWhat will be the output for the following pure function js\nconst add = (a, b) => a + b;\nconsole log(add(2, 5));\n--distractors--\n3\n4\nundefined\n--answer--\n7\n--question--\n--text--\nWhich of the following is an example of currying",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3925,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functional-programming\\66edd4f31ff19bf5573bf64b.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "aa223d3176729af508df59332fba2458",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functional-programming\\66edd4f31ff19bf5573bf64b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "testing your code to ensure that it meets the standards laid out by ECMAScript --answer-- The process of transforming a function with multiple arguments into a sequence of functions, each with a single argument --question-- --text-- What will be the output for the following pure function js const add = (a, b) => a + b; console log(add(2, 5)); --distractors-- 3 4 undefined --answer-- 7 --question-- --text-- Which of the following is an example of currying--distractors--\njs\nconst curriedAverage = (a, b, c) => a + b + c / 3\njs\nconst curriedAverage = (a, b, c) => a + b + c\n```js\nfunction curriedAverage(a) {\nreturn a\n}\nfunction curried(c) {\nreturn c\n}\n```\n--answer--\njs\nfunction curriedAverage(a) {\nreturn function(b) {\nreturn function(c) {\nreturn (a + b + c) / 3;\n};\n};\n}\n--question--\n--text--\nWhich of the following is a key principle of functional programming --distractors--\nModifying global variables frequently Using mutable data structures extensively Emphasizing object-oriented inheritance --answer--\nAvoiding side effects and using immutable data --question--\n--text--\nWhat is an impure function --distractors--\nA function that returns an object A function without side effects A function that returns null\n--answer--\nA function with side effects --question--\n--text--\nWhich of the following is the correct way to call a curried function --distractors--\njs\ncurriedAverage(2 3 4);\njs\ncurriedAverage(2)==(3)==(4);\njs\ncurriedAverage(2)=>(3)=>(4);\n--answer--\njs\ncurriedAverage(2)(3)(4);\n--question--\n--text--\nWhich of the following is an example of an impure function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3925,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functional-programming\\66edd4f31ff19bf5573bf64b.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0f0debe00eec9bcb2e61e6311ae100aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functional-programming\\66edd4f31ff19bf5573bf64b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "side effects and using immutable data --question-- --text-- What is an impure function --distractors-- A function that returns an object A function without side effects A function that returns null --answer-- A function with side effects --question-- --text-- Which of the following is the correct way to call a curried function --distractors-- js curriedAverage(2 3 4); js curriedAverage(2)==(3)==(4); js curriedAverage(2)=>(3)=>(4); --answer-- js curriedAverage(2)(3)(4); --question-- --text-- Which of the following is an example of an impure function--distractors--\njs\nfunction example(num) {\nreturn num;\n}\njs\nfunction sum(num1, num2) {\nreturn num1 + num2\n}\njs\nfunction addToTotal(value) {\nlet total = 0;\ntotal += value;\nreturn total;\n}\n--answer--\njs\nlet total = 0;\nfunction addToTotal(value) {\ntotal += value;\nreturn total;\n}\n--question--\n--text--\nWhich of the following is NOT an example of a side effect --distractors--\nWriting to a file Modifying a global variable Making an API call --answer--\nReturning the sum of two values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3925,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functional-programming\\66edd4f31ff19bf5573bf64b.md",
      "source_type": "git_repo"
    },
    "token_count": 268,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1db10ad95a55093f291c10064c553718",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edcc779993c0da6906dbb9\ntitle: JavaScript Functions Quiz\nchallengeType: 8\ndashedName: quiz-javascript-functions\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is the correct way to declare a function in JavaScript --distractors--\njs\nfunc greet() {\nconsole log(\"Hello there \");\n}\njs\ndefineFunction greet() {\nconsole log(\"Hello there \");\n}\njs\ndef greet() {\nconsole log(\"Hello there \");\n}\n--answer--\njs\nfunction greet() {\nconsole log(\"Hello there \");\n}\n--question--\n--text--\nWhat happens when you call (or execute) a function --distractors--\nThe code inside the function will run and null will always be returned Nothing will happen when you call a function A TypeError will be thrown and the program will crash --answer--\nThe code inside the function will run and a value will be returned --question--\n--text--\nWhich of the following is the correct way to call a function --distractors--\njs\nexampleFunction;\njs\nexampleFunction>>;\njs\n()exampleFunction();\n--answer--\njs\nexampleFunction();\n--question--\n--text--\nWhat is the role of the return keyword --distractors--\nThe return keyword will execute the function The return keyword will throw a type error The return keyword serves no purpose in functions --answer--\nThe return keyword returns a value from the function --question--\n--text--\nWhich of the following is a valid function expression --distractors--\njs\nexpression function getSum(x, y) {\nreturn x + y;\n};\njs\ngetSum: function(x, y) {\nreturn x + y;\n};\njs\nfunction = getSum(x, y) {\nreturn x + y;\n};\n--answer--\njs\nconst getSum = function(x, y) {\nreturn x + y;\n};\n--question--\n--text--\nWhat are function arguments --distractors--\nValues that represents the absence of a value Special values that act similar to anonymous functions Placeholder values used inside of the function --answer--\nReal values passed to a function when it is called --question--\n--text--\nWhat are function parameters --distractors--\nFloating point values used inside of the function Values passed to a function when it is called",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "9c5c29351116e03651d7cdb8bdae3e14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const getSum = function(x, y) { return x + y; }; --question-- --text-- What are function arguments --distractors-- Values that represents the absence of a value Special values that act similar to anonymous functions Placeholder values used inside of the function --answer-- Real values passed to a function when it is called --question-- --text-- What are function parameters --distractors-- Floating point values used inside of the function Values passed to a function when it is calledValues that represent the intentional absence of the value --answer--\nValues listed inside the function definition --question--\n--text--\nWhat will be logged to the console ```js\nconst calculateTotal = (amount, taxRate = 0 05) => {\nreturn amount + (amount * taxRate);\n};\nconsole log(calculateTotal(100));\n```\n--distractors--\n10\nundefined\n1\n--answer--\n105\n--question--\n--text--\nWhich of the following is the correct syntax for an arrow function --distractors--\njs\nconst sum <<>> (num1, num2) => num1 + num2\njs\nconst sum === (num1, num2) === num1 + num2\njs\nconst sum >=> (num1, num2) => num1 + num2\n--answer--\njs\nconst sum = (num1, num2) => num1 + num2\n--question--\n--text--\nWhat will be result for the following code ```js\nfunction greet() {\nconst developer = \"Jessica\";\nconsole log(\"Hello there \");\n}\nconsole log(developer);\n```\n--distractors--\nNothing will happen and the code will run normally The string \"Hello there \" will be logged to the console The string \"Hello \" will be logged to the console --answer--\nYou will get a reference error because developer is not defined globally --question--\n--text--\nWhen can you omit a set of parentheses around a parameter list for an arrow function --distractors--\nYou should always omit the parentheses around a parameter list You are never supposed to omit the parentheses for an arrow function You should only omit the parentheses when you are working with multiple parameters --answer--\nYou should only omit the parentheses when you only have one parameter --question--\n--text--\nWhen can you omit the curly braces and return keyword for an arrow function --distractors--\nYou should always omit the curly braces and return keyword",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3a62388017807209a4bc1fb9ea177698",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--distractors-- You should always omit the parentheses around a parameter list You are never supposed to omit the parentheses for an arrow function You should only omit the parentheses when you are working with multiple parameters --answer-- You should only omit the parentheses when you only have one parameter --question-- --text-- When can you omit the curly braces and return keyword for an arrow function --distractors-- You should always omit the curly braces and return keywordYou should never omit the curly braces and return keyword When the function body has multiple lines of code --answer--\nWhen the function body consists of a single expression --question--\n--text--\nWhat will be the result for the following code ```js\nfunction exampleFunction() {\nreturn \"Hello\";\nreturn \"World \";\n};\nexampleFunction();\n```\n--distractors--\n\"World \"\n\"Hello World \"\nundefined\n--answer--\n\"Hello\"\n--question--\n--text--\nWhich of the following is the correct way to use default parameters --distractors--\njs\nfunction sum(num1, num2 <<>> 12) {\nreturn num1 + num2\n}\njs\nfunction sum(num1, num2 === 12) {\nreturn num1 + num2\n}\njs\nfunction sum(num1, num2 >> 12) {\nreturn num1 + num2\n}\n--answer--\njs\nfunction sum(num1, num2 = 12) {\nreturn num1 + num2\n}\n--question--\n--text--\nWhat will be the result for the following code ```js\nconst developer = \"Jessica\";\nfunction greet() {\nconsole log(\"Hello, \" + developer)\n}\ngreet();\n```\n--distractors--\nThe string \"Hello, developer\" will be logged to the console An error message will display in the console Nothing will display in the console --answer--\nThe string \"Hello, Jessica\" will be logged to the console --question--\n--text--\nWhat happens if you try to remove the curly braces for a regular function --distractors--\nAn alert box will display on the page with an error The program will crash and not start again Nothing will happen --answer--\nYou will get a syntax error --question--\n--text--\nWhat will be the result for the following code js\nconst sum = (num1, num2) => num1 + num2\nconsole log(sum(0, 0) + 10);\n--distractors--\nAn error message will display in the console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "c63753c9482bee81a84f0ebc2c3fce72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "you try to remove the curly braces for a regular function --distractors-- An alert box will display on the page with an error The program will crash and not start again Nothing will happen --answer-- You will get a syntax error --question-- --text-- What will be the result for the following code js const sum = (num1, num2) => num1 + num2 console log(sum(0, 0) + 10); --distractors-- An error message will display in the consoleThe number 0 will be logged to the console Nothing will be logged to the console --answer--\nThe number 10 will be logged to the console --question--\n--text--\nWhat will be the output for the following code js\nconst exampleFunction = (param1, param2) => param1 + param2;\nconsole log(exampleFunction(3, \"Something\"));\n--distractors--\nnull\nundefined\n3 + \"Something\"\n--answer--\n\"3Something\"\n--question--\n--text--\nWhat will be the result for the following code js\nconst sum = (num1, num2) => num1 + num2\nconsole log(sum(0, 0) + num2);\n--distractors--\nAn error message saying num1 is not defined The number 0 will be displayed in the console undefined will be displayed in the console --answer--\nAn error message saying num2 is not defined --question--\n--text--\nWhat will be the output for the following code js\nconst divideTwoNumbers = (num1, num2) => num1 / num2;\nconsole log(divideTwoNumbers(3, 0));\n--distractors--\nError\n0\nnull\n--answer--\nInfinity",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7512,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-functions\\66edcc779993c0da6906dbb9.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "c4f953798e160e7ec105a556cf65089a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edcd875b0d91de1fbbb492\ntitle: JavaScript Fundamentals Quiz\nchallengeType: 8\ndashedName: quiz-javascript-fundamentals\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich one of these will create a String object --distractors--\njs\nString({ \"Hello World\" });\njs\nString(\"Hello World\");\njs\n\"Hello World\" toString();\n--answer--\njs\nnew String(\"Hello World\");\n--question--\n--text--\nHow can you convert a String object into a string literal --distractors--\nWith the String() constructor With the stringify() method Enclose the String object in double quotes --answer--\nWith the toString() method --question--\n--text--\nWhy can you use methods like length, repeat(), concat(), and slice() on a string primitive in JavaScript --distractors--\nThose methods exist natively on string primitives String primitives are stored as objects internally JavaScript temporarily converts the string primitive to an array --answer--\nJavaScript temporarily wraps the string primitive in a String object --question--\n--text--\nWhat will the following code log to the console js\nlet stringArray = [8, 9, 10] toString();\nconsole log(stringArray);\n--distractors--\n[8,9,10]\n[\"8\", \"9\", \"10\"]\n\"8\", \"9\", \"10\"\n--answer--\n\"8,9,10\"\n--question--\n--text--\nHow can you convert a string literal into a Number object --distractors--\nWith the Object() constructor With the toNumber() method With the parseInt() method --answer--\nWith the Number() constructor --question--\n--text--\nWhat will Number(true) and Number(false) return, respectively --distractors--\nundefined and undefined\nNaN and NaN\ntrue and false\n--answer--\n1 and 0\n--question--\n--text--\nWhat will Number(undefined) and Number(null) return, respectively --distractors--\nNaN and NaN\n0 and 0\nundefined and null\n--answer--\nNaN and 0\n--question--\n--text--\nWhich of the following is the best name for a boolean variable that checks if a user is allowed to do something on your website",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8ddf16f2904b878ce64bbcfbd2d87598",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the Number() constructor --question-- --text-- What will Number(true) and Number(false) return, respectively --distractors-- undefined and undefined NaN and NaN true and false --answer-- 1 and 0 --question-- --text-- What will Number(undefined) and Number(null) return, respectively --distractors-- NaN and NaN 0 and 0 undefined and null --answer-- NaN and 0 --question-- --text-- Which of the following is the best name for a boolean variable that checks if a user is allowed to do something on your website--distractors--\ngetPermission\nhandlePermission\npermission\n--answer--\nhasPermission\n--question--\n--text--\nWhich of the following is the best name for a function that runs when a user submits a form --distractors--\nhasSubmitted\nformSubmit\ndidSubmit\n--answer--\nhandleSubmit\n--question--\n--text--\nWhat is a sparse array --distractors--\nAn array where one or more indices have a value of null An array where one or more indices have a value of undefined An array where one or more indices have a value of an empty object literal --answer--\nAn array where one or more indices are not assigned a value --question--\n--text--\nIn which of the following examples will arr NOT be a sparse array --distractors--\njs\nconst arr = new Array(5);\njs\nconst arr = [1, 2, 3];\narr[4] = 4;\njs\nconst arr = [1, 2, 3, , 5];\n--answer--\njs\nconst arr = Array from({ length: 5 });\n--question--\n--text--\nWhat is the primary purpose of a linter --distractors--\nTo format code automatically To optimize code for performance To create documentation for code --answer--\nTo detect potential errors and issues in code --question--\n--text--\nWhat is a benefit of using a formatter in a codebase --distractors--\nThey allow developers to compile code more efficiently They convert code to a specific programming language They detect logical errors --answer--\nThey ensure a consistent code style --question--\n--text--\nIn JavaScript, who or what is typically responsible for allocating memory to variables --distractors--\nThe developer The operating system The server --answer--\nThe runtime engine --question--\n--text--\nWhat will be logged to the console in the following code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "88b8569084744ff8bbb86fbf836c8717",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "benefit of using a formatter in a codebase --distractors-- They allow developers to compile code more efficiently They convert code to a specific programming language They detect logical errors --answer-- They ensure a consistent code style --question-- --text-- In JavaScript, who or what is typically responsible for allocating memory to variables --distractors-- The developer The operating system The server --answer-- The runtime engine --question-- --text-- What will be logged to the console in the following code```js\nfunction trackTotal(initialValue) {\nlet total = initialValue;\nreturn function(increment) {\ntotal += increment;\nreturn total;\n};\n}\nlet track = trackTotal(1);\nconsole log(track(2));\nconsole log(track(3));\n```\n--distractors--\njs\n2\n5\njs\n2\n3\njs\n5\n6\n--answer--\njs\n3\n6\n--question--\n--text--\nWhat is hoisting in JavaScript --distractors--\nRaising errors to the top of the code The process of creating new variables Automatically moving var declarations to the top of the block --answer--\nThe process of moving variable declarations to the top of their scope --question--\n--text--\nWhy is using the var keyword considered bad practice in modern JavaScript --distractors--\nThey're slower than let and const They cause syntax errors They don't allow type checking --answer--\nThey're accessible outside their block --question--\n--text--\nWhat is the purpose of modules in JavaScript --distractors--\nTo improve code performance To make code more difficult to understand To create new programming languages --answer--\nTo organize code into reusable units --question--\n--text--\nHow do you add an app js script as a module in an HTML document --distractors--\n```html\n```\n```html\n```\n```html\n```\n--answer--\n```html\n```\n--question--\n--text--\nWhich of the following examples exports the calculateSum function from a utils js module and properly imports and uses it in an app js file --distractors--\njs\n// utils js\nexport default function calculateSum(a, b) {\nreturn a + b;\n}\njs\n// app js\nimport { calculateSum } from ' /utils js';\nconsole log(calculateSum(2, 3));\njs\n// utils js\nexport function calculateSum(a, b) {\nreturn a + b;\n}\njs\n// app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "4bb99da42cdebdecb4601a190f185121",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "``` --question-- --text-- Which of the following examples exports the calculateSum function from a utils js module and properly imports and uses it in an app js file --distractors-- js // utils js export default function calculateSum(a, b) { return a + b; } js // app js import { calculateSum } from ' /utils js'; console log(calculateSum(2, 3)); js // utils js export function calculateSum(a, b) { return a + b; } js // appjs\nimport calculateSum from ' /utils js';\nconsole log(calculateSum(2, 3));\njs\n// utils js\nfunction calculateSum(a, b) {\nreturn a + b;\n}\n```js\nexport default calculateSum;\n// app js\nimport * as utils from ' /utils js';\nconsole log(utils calculateSum(2, 3));\n```\n--answer--\njs\n// utils js\nexport function calculateSum(a, b) {\nreturn a + b;\n}\njs\n// app js\nimport { calculateSum } from ' /utils js';\nconsole log(calculateSum(2, 3));",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6986,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-fundamentals\\66edcd875b0d91de1fbbb492.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "87f27047f6879ea39de9ef8f6659ca8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edcdd18a4ef8df16e6bb7e\ntitle: JavaScript Higher Order Functions Quiz\nchallengeType: 8\ndashedName: quiz-javascript-higher-order-functions\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following statements about JavaScript higher-order functions is NOT true --distractors--\nHigher-order functions can greatly enhance code readability and maintainability by enabling functional programming techniques Higher-order functions like map, filter, and reduce are powerful tools for array manipulation, but they are not unique to functional programming Higher-order functions may introduce complexity in understanding code, but they can also lead to more expressive and concise solutions --answer--\nAll functions in JavaScript, including those that do not take or return other functions, can be classified as higher-order functions --question--\n--text--\nWhat is a factory function in the context of higher order functions --distractors--\nA function that creates new variables A function that only works with strings A function that automatically generates code comments --answer--\nA function that returns a new function based on specific parameters\n--question--\n--text--\nAfter code execution, what will be the value of forEachRes and mapRes js\nconst numbers = [1, 1, 1, 1, 1];\nlet sum = 0;\nconst forEachRes = numbers forEach(num => {\nreturn (sum += num);\n});\nconst mapRes = numbers map(num => {\nreturn (sum += num);\n});\n--distractors--\nforEachRes is undefined and mapRes is [1,2,3,4,5]\nforEachRes is 0 and mapRes is [1,2,3,4,5]\nforEachRes is 5 and mapRes is [1,2,3,4,5]\n--answer--\nforEachRes is undefined and mapRes is [6,7,8,9,10]\n--question--\n--text--\nWhat is the result of this code js\n[, undefined, 'a', 'b', { 20: 5 }] sort();\n--distractors--\nUnsupported elements for an array to be sorted, hence error Callback not supplied, hence error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "9ed2a509055712ceb23c15f8f6661eae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "mapRes = numbers map(num => { return (sum += num); }); --distractors-- forEachRes is undefined and mapRes is [1,2,3,4,5] forEachRes is 0 and mapRes is [1,2,3,4,5] forEachRes is 5 and mapRes is [1,2,3,4,5] --answer-- forEachRes is undefined and mapRes is [6,7,8,9,10] --question-- --text-- What is the result of this code js [, undefined, 'a', 'b', { 20: 5 }] sort(); --distractors-- Unsupported elements for an array to be sorted, hence error Callback not supplied, hence errorjs\n[empty, 'a', 'b', undefined, { '20': 5 }]\n--answer--\njs\n[{ '20': 5 }, 'a', 'b', undefined, empty]\n--question--\n--text--\nWhich of the following describes a callback function in JavaScript --distractors--\nA function that is called immediately upon declaration A function that is invoked with a specific context A function that returns another function --answer--\nA function passed as an argument to another function, to be executed by that function's logic --question--\n--text--\nWhat is the result of using reduce() on an array --distractors--\nA boolean indicating whether any elements meet a condition An Array with all elements reduced by specified callback function An Array of booleans --answer--\nIt varies depending on the accumulator's initial value and the callback function --question--\n--text--\nHow does the sort() method behave if no compare function is provided in numerical sorting --distractors--\nIt fills the empty slots with null It returns an array of special characters It sorts the array in reverse order --answer--\nIt sorts the array as strings based on UTF-16 code units --question--\n--text--\nWhat is the purpose of the some() method in JavaScript --distractors--\nTo create a new array with the results of a function applied to each element To iterate through an array without producing a result To reduce an array to a single value based on a callback function --answer--\nTo determine if any elements in an array pass a specified test --question--\n--text--\nWhich of the following is a valid example of method chaining --distractors--\njs\nMath random();\njs\narray push(1)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "855231a9571974d83e5b36a76b99052f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the some() method in JavaScript --distractors-- To create a new array with the results of a function applied to each element To iterate through an array without producing a result To reduce an array to a single value based on a callback function --answer-- To determine if any elements in an array pass a specified test --question-- --text-- Which of the following is a valid example of method chaining --distractors-- js Math random(); js array push(1)pop();\njs\nconsole log('Hello');\n--answer--\njs\nstr toLowerCase() trim() replace(' ', '_');\n--question--\n--text--\nWhat is the output of the following code ```js\nlet numbers = [2, 4, 8, 10];\nnumbers forEach(function(number) {\nconsole log(number % 2);\n});\n```\n--distractors--\n2 4 8 10\nnull null null null\n1 2 4 5\n--answer--\n0 0 0 0\n--question--\n--text--\nWhich of the following is a benefit of method chaining --distractors--\nIt inherently optimizes performance by reducing the execution time of functions It eliminates the need for temporary variables, but may increase memory usage in some cases It allows for error handling and debugging to be more straightforward --answer--\nIt promotes simplified syntax and more readable code by allowing multiple operations in a single expression --question--\n--text--\nHow can you sort an array of objects by a specific property using the sort method --distractors--\nThe sort method cannot sort objects Use the reverse method after sorting Convert the objects to strings and sort them --answer--\nUse a compare function that compares the property values --question--\n--text--\nIn method chaining, what is a common practice to enhance clarity and debugging --distractors--\nUse fewer methods in the chain Avoid chaining methods that return only primitive values Use only built-in methods --answer--\nBreak long chains into multiple steps --question--\n--text--\nWhat is a potential downside of using method chaining excessively in your code --distractors--\nIt makes the code run slower It prevents the use of comments It makes the file size larger --answer--\nIt can make the code harder to debug --question--\n--text--\nWhich method would you use to determine if all elements in an array are strings",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "b586b40840f4b6644d13d074d044477f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that return only primitive values Use only built-in methods --answer-- Break long chains into multiple steps --question-- --text-- What is a potential downside of using method chaining excessively in your code --distractors-- It makes the code run slower It prevents the use of comments It makes the file size larger --answer-- It can make the code harder to debug --question-- --text-- Which method would you use to determine if all elements in an array are strings--distractors--\nsome()\neveryInstance()\nfilter()\n--answer--\nevery()\n--question--\n--text--\nWhat will be the value of originalArray after the following code is run js\nconst originalArray = [{ id: 1 }, { id: 2 }, { id: 3 }];\nconst filteredArray = originalArray filter(item => item id > 1);\nfilteredArray[0] id = 4;\n--distractors--\n[{ id: 1 }, { id: 2 }, { id: 3 }]\n[{ id: 1 }]\n[{ id: 4 }, { id: 2 }, { id: 3 }]\n--answer--\n[{ id: 1 }, { id: 4 }, { id: 3 }]\n--question--\n--text--\nWhat will be the value of shortWords after the following code is run js\nconst words = ['apple', 'banana', 'pear', 'kiwi'];\nconst shortWords = words filter(word => word length <= 5);\n--distractors--\n[]\n['pear', 'kiwi']\n['apple', 'banana']\n--answer--\n['apple', 'pear', 'kiwi']\n--question--\n--text--\nWhat is the purpose of providing an initial value as an argument to the reduce() method --distractors--\nTo set the length of the array To limit the number of iterations To specify the return type of the function --answer--\nTo define the starting value for the accumulator --question--\n--text--\nCan the map method be used on objects that are not arrays --distractors--\nYes, it can be used on any object Yes, but only on objects with numeric properties It depends on the JavaScript version --answer--\nNo, it is specifically designed for arrays --question--\n--text--\nWhat is the primary purpose of the map method in JavaScript --distractors--\nTo sort an array and return a new array while maintaining the original order To filter elements from an array and remove or add elements based on a condition",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "e2c134570b9407a60016a423ffe3fad2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "not arrays --distractors-- Yes, it can be used on any object Yes, but only on objects with numeric properties It depends on the JavaScript version --answer-- No, it is specifically designed for arrays --question-- --text-- What is the primary purpose of the map method in JavaScript --distractors-- To sort an array and return a new array while maintaining the original order To filter elements from an array and remove or add elements based on a conditionTo find a specific element in an array and return its index along with the element --answer--\nTo create a new array containing the results of calling a provided function on each element in the starting array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8070,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-higher-order-functions\\66edcdd18a4ef8df16e6bb7e.md",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "b9a8b1d228b576aa4866ea66d790898f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-maps-and-sets\\67358be1c7903489c0a7db78.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67358be1c7903489c0a7db78\ntitle: JavaScript Maps and Sets Quiz\nchallengeType: 8\ndashedName: quiz-javascript-maps-and-sets\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is a Set in JavaScript --distractors--\nA data structure that allows duplicate values A data structure that only stores strings and numbers A collection that does not allow deletion of its elements --answer--\nA collection in which a value can only occur once --question--\n--text--\nWhich of the following methods is available in Maps but not in Sets --distractors--\nhas() clear() values() --answer--\nset() --question--\n--text--\nWhat method is used to add elements to a Set --distractors-- push() append() insert()\n--answer-- add()\n--question--\n--text--\nHow do you check if a Set contains a certain value --distractors-- contains() hasValue() find()\n--answer-- has()\n--question--\n--text--\nWhich of these is a great use case for Sets --distractors--\nManaging key-value pairs in a database Creating ordered lists of items Storing hierarchical data structures in the browser local storage --answer--\nEliminating duplicates from an array --question--\n--text--\nWhat is a WeakSet in JavaScript --distractors--\nA Set-like collection that only allows primitive data types A Set-like collection that allows duplicate values A Set-like collection that prevents values from being removed --answer--\nA Set-like collection that only stores objects --question--\n--text--\nWhat is one difference between a Set and a WeakSet --distractors--\nA WeakSet can store any type of value, including numbers A Set does not allow duplicate values, but a WeakSet does A Set allows garbage collection, whereas a WeakSet does not --answer--\nA Set can hold any type of value, while a WeakSet only holds objects --question--\n--text--\nWhat is a Map in JavaScript --distractors--\nA collection that only allows unique values A collection that can only use strings as keys A collection that does not allow deletion of its items --answer--\nA collection of key-value pairs of any type --question--\n--text--\nWhat method is used to insert key-value pairs into a Map --distractors-- append() add()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-maps-and-sets\\67358be1c7903489c0a7db78.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c96aee79017393b54757bcb342480358",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-maps-and-sets\\67358be1c7903489c0a7db78.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "not --answer-- A Set can hold any type of value, while a WeakSet only holds objects --question-- --text-- What is a Map in JavaScript --distractors-- A collection that only allows unique values A collection that can only use strings as keys A collection that does not allow deletion of its items --answer-- A collection of key-value pairs of any type --question-- --text-- What method is used to insert key-value pairs into a Map --distractors-- append() add()insert()\n--answer-- set()\n--question--\n--text--\nWhat will the following code output js\nconst myMap = new Map();\nmyMap set('a', 1);\nmyMap set('a', 2);\nconsole log(myMap get('a'));\n--distractors--\n1\nundefined\nnull\n--answer--\n2\n--question--\n--text--\nHow does a Map differ from an Object in JavaScript --distractors--\nA Map only allows numbers as keys Objects allow any type as keys, while Maps only allow strings Maps do not support iteration, while Objects do --answer--\nMaps allow any type of key, but Objects only allow strings and symbols --question--\n--text--\nHow can you remove a key-value pair from a Map --distractors-- remove() deleteKey() erase()\n--answer-- delete()\n--question--\n--text--\nWhat does the size property of a Map return --distractors--\nThe number of indexes in the Map The number of unique values in the Map The total memory used by the Map --answer--\nThe number of key-value pairs in the Map --question--\n--text--\nWhat is a WeakMap in JavaScript --distractors--\nA Map-like collection that allows primitive values as keys A Map-like collection that blocks the deletion of items A Map-like collection that automatically sorts its keys --answer--\nA Map-like collection with weak references to the keys --question--\n--text--\nWhat is one difference between a Map and a WeakMap --distractors--\nA Map allows only primitive types as keys, whereas a WeakMap only allows objects A Map allows garbage collection, whereas a WeakMap does not A WeakMap allows duplicate keys, whereas a Map does not --answer--\nA Map is iterable, whereas a WeakMap is not --question--\n--text--\nWhich of the following methods does NOT exist on a WeakMap --distractors-- has() set() delete()\n--answer--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-maps-and-sets\\67358be1c7903489c0a7db78.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0d1c10b5f2f7a0f3e7858eae5585f887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-maps-and-sets\\67358be1c7903489c0a7db78.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "keys --question-- --text-- What is one difference between a Map and a WeakMap --distractors-- A Map allows only primitive types as keys, whereas a WeakMap only allows objects A Map allows garbage collection, whereas a WeakMap does not A WeakMap allows duplicate keys, whereas a Map does not --answer-- A Map is iterable, whereas a WeakMap is not --question-- --text-- Which of the following methods does NOT exist on a WeakMap --distractors-- has() set() delete() --answer--size()\n--question--\n--text--\nWhat will be the output of the following code js\nconst set = new Set([1, 2, 3]);\nset delete(2);\nconsole log(set has(2));\n--distractors--\ntrue\nundefined\n2\n--answer--\nfalse\n--question--\n--text--\nHow can you iterate over the values in a Set --distractors--\nBy using the map() method By using the reduce() method By using the filter() method --answer--\nBy using the forEach() method --question--\n--text--\nWhich two methods of Sets return a SetIterator that contains the values of a certain Set --distractors--\nentries() and values() forEach() and values() has() and add() --answer--\nkeys() and values() --question--\n--text--\nWhat will be the output of the following code js\nconst map = new Map([[\"a\", 1], [\"b\", 2]]);\nmap clear();\nconsole log(map size);\n--distractors--\n2\n1\nundefined\n--answer--\n0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5731,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-maps-and-sets\\67358be1c7903489c0a7db78.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4ee594124fb5ccfc5ef51c8622f9985b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-math\\66edc3ab8c6413c344f401bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edc3ab8c6413c344f401bf\ntitle: JavaScript Math Quiz\nchallengeType: 8\ndashedName: quiz-javascript-math\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat does NaN stand for --distractors--\nNumeric and Number\nNot a Null\nNull and Number\n--answer--\nNot a Number\n--question--\n--text--\nWhich of the following is NOT an arithmetic operator in JavaScript --distractors--\n*\n+\n-\n--answer-- --question--\n--text--\nWhat happens if you try to divide by zero in JavaScript --distractors--\nJavaScript will output 0 Nothing will happen JavaScript will throw an error --answer--\nJavaScript will output Infinity\n--question--\n--text--\nWhich of the following is the correct use of the exponentiation operator --distractors--\n2*3\n2#3\n2%3\n--answer--\n2**3\n--question--\n--text--\nWhich operator should you use when decrementing a variable in JavaScript --distractors--\n++\n//\n**\n--answer--\n--\n--question--\n--text--\nWhich of the following is NOT a bitwise operator --distractors--\n&\n|\n^\n--answer--\n>\n--question--\n--text--\nWhich of the following is the correct compound operator for getting the remainder --distractors--\n//=\n\\=\n%%=\n--answer--\n%=\n--question--\n--text--\nWhat is the difference between the == and === operators --distractors--\nThere is no difference The comparison result will always have the same result The == operator is used to check if the data type is the same while the === is used to check if the value is equal The == operator can only be used with primitive types while the === operator is only used for objects --answer--\nThe == operator only compares values whereas the === operator compares values and types --question--\n--text--\nWhat is the unary plus operator (+) used for --distractors--\nIt is used to decrement a value by one It is used to get the remainder from an operation It is used to invert the binary representation of a number --answer--\nIt is used to convert its operand into a number --question--\n--text--\nWhich of the following Math methods rounds a value to the nearest whole integer --distractors--\nMath",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-math\\66edc3ab8c6413c344f401bf.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "29adf24733a354381810f67b881e2187",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-math\\66edc3ab8c6413c344f401bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "operator compares values and types --question-- --text-- What is the unary plus operator (+) used for --distractors-- It is used to decrement a value by one It is used to get the remainder from an operation It is used to invert the binary representation of a number --answer-- It is used to convert its operand into a number --question-- --text-- Which of the following Math methods rounds a value to the nearest whole integer --distractors-- Mathtrunc()\nMath max()\nMath min()\n--answer--\nMath round()\n--question--\n--text--\nWhat does the Math sqrt() method do --distractors--\nThis method returns a random floating point number This method returns the absolute value for a number This method returns the cube of a number --answer--\nThis method returns the square root of a number --question--\n--text--\nWhich of the following is NOT a valid method for the Math object --distractors--\nMath ceil()\nMath pow()\nMath abs()\n--answer--\nMath extend()\n--question--\n--text--\nWhich of the following will return false --distractors--\nisNaN(\"Matt\")\nisNaN()\nisNaN(undefined)\n--answer--\nisNaN(7)\n--question--\n--text--\nWhat does the parseFloat() method do --distractors--\nIt parses a string argument and performs a bitwise operation on it It parses a string argument and returns false It parses a string argument and returns an integer --answer--\nIt parses a string argument and returns a floating-point number --question--\n--text--\nWhat will be logged to the console js\nlet num = 5;\nconsole log(++num);\n--distractors--\nerror\nnull\n5\n--answer--\n6\n--question--\n--text--\nWhat would be the output for the following code js\nconsole log(5 == '5');\n--distractors--\nundefined\nfalse\nnull\n--answer--\ntrue\n--question--\n--text--\nWhat is operator precedence --distractors--\nOperator precedence is used to check if the value on the left is less than the one on the right Operator precedence is used to raise a variable to the power of the specified number and reassigns the result to the variable Operator precedence is used to to increase the value by one --answer--\nOperator precedence determines the order in which operations are evaluated in an expression --question--\n--text--\nWhich of the following is NOT a comparison operator --distractors--\n>\n>=\n<\n--answer--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-math\\66edc3ab8c6413c344f401bf.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b0e035c4033a7dc0a9d04bb0a1be5e9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-math\\66edc3ab8c6413c344f401bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the value on the left is less than the one on the right Operator precedence is used to raise a variable to the power of the specified number and reassigns the result to the variable Operator precedence is used to to increase the value by one --answer-- Operator precedence determines the order in which operations are evaluated in an expression --question-- --text-- Which of the following is NOT a comparison operator --distractors-- > >= < --answer-->\n--question--\n--text--\nWhat does the unary negation operator (-) do --distractors--\nIt flips the boolean value of its operand It decreases the value by one It increases the value by one --answer--\nIt negates the operand --question--\n--text--\nWhich of the following is an example of using the nullish coalescing operator --distractors--\n```js\nconst userSettings = {\ntheme: null,\nvolume: 0,\nnotifications: false,\n};\nuserSettings theme () 'light';\n```\n```js\nconst userSettings = {\ntheme: null,\nvolume: 0,\nnotifications: false,\n};\nuserSettings theme ** 'light';\n```\n```js\nconst userSettings = {\ntheme: null,\nvolume: 0,\nnotifications: false,\n};\nuserSettings theme \\ 'light';\n```\n--answer--\n```js\nconst userSettings = {\ntheme: null,\nvolume: 0,\nnotifications: false,\n};\nuserSettings theme 'light';\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-math\\66edc3ab8c6413c344f401bf.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "36ff0c0caaca4936d9314e55bcc114f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edcd49e73385dd4df54ac7\ntitle: JavaScript Loops Quiz\nchallengeType: 8\ndashedName: quiz-javascript-loops\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following best describes iteration --distractors--\nIt is the process of writing code repeatedly until it works correctly It is a technique for storing data in consecutive memory locations It is the process of sending signals between components to establish a connection --answer--\nIt is the process of repeating a set of instructions multiple times --question--\n--text--\nWhat technique is used for iterations in programming --distractors--\nRecursion\nConditionals\nCompilation\n--answer--\nLooping\n--question--\n--text--\nWhich of the following is an iterable object --distractors--\nUndefined\nNumber\nBoolean\n--answer--\nString\n--question--\n--text--\nWhich of the following is not a type of loop supported in JavaScript --distractors--\nfor loop while loop for in loop --answer--\nif else loop --question--\n--text--\nWhat is the correct order of the for loop declaration --distractors--\njavascript\nfor (condition; increment/decrement; initialization) {\nstatement;\n}\njavascript\nfor (increment/decrement; condition; initialization) {\nstatement;\n}\njavascript\nfor (initialization; increment/decrement; condition) {\nstatement;\n}\n--answer--\njavascript\nfor (initialization; condition; increment/decrement) {\nstatement;\n}\n--question--\n--text--\nWhich loop executes the code block once, before checking if the condition is true, and will continue working as long as the condition remains true --distractors--\nwhile loop for of loop for in loop --answer--\ndo while loop --question--\n--text--\nWhich of the following will loop over the values of an iterable object --distractors--\nfor in loop for loop do while loop --answer--\nfor of loop --question--\n--text--\nWhich of the following best defines an infinite loop --distractors--\nA loop that runs until the condition becomes false A loop that runs once and then is terminated A loop that automatically stops after a fixed number of iterations --answer--\nA loop whose termination condition is never met or is absent --question--\n--text--\nHow many times will the following loop run",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6569,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8ef9218a2c99cfd8e040edda03b08448",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--distractors-- for in loop for loop do while loop --answer-- for of loop --question-- --text-- Which of the following best defines an infinite loop --distractors-- A loop that runs until the condition becomes false A loop that runs once and then is terminated A loop that automatically stops after a fixed number of iterations --answer-- A loop whose termination condition is never met or is absent --question-- --text-- How many times will the following loop runjs\nfor (let i = 2; i < 10; i+=2) {\nconsole log(i);\n}\n--distractors--\n5\n9\n10\n--answer--\n4\n--question--\n--text--\nWhich loop is the best for iterating objects --distractors--\nfor of loop do while loop for loop --answer--\nfor in loop --question--\n--text--\nWhat is the difference between the for in loop and the for of loop --distractors--\nfor in loop iterates over property values, while the for of loop iterates over property names (keys) for in loops create new properties, while for of loops modify existing properties for in loops can only be used with strings, while the for of loops can be used with both strings and numbers --answer--\nfor in loop iterates over property names (keys), while the for of loop iterates over property values --question--\n--text--\nWhich of these would cause an infinite loop --distractors--\nInitialization of variable A loop condition that eventually gives false Increment/decrement logic --answer--\nA loop condition that always returns true --question--\n--text--\nWhat statement can be used to break out of a loop completely --distractors--\nThe continue statement The label statement The skip statement --answer--\nThe break statement --question--\n--text--\nWhich statement can be used to skip the current iteration and move to the next iteration --distractors--\nThe break statement The label statement The return statement --answer--\nThe continue statement --question--\n--text--\nWhat is printed to the console with the following code js\nfor (let i = 0; i < 25; i += 2) {\nif (i % 5 === 0) {\ncontinue;\n}\nif (i % 13 === 0) {\nbreak;\n}\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6569,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3ce22d81c374096f7758ac6bbc9df4f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--question-- --text-- Which statement can be used to skip the current iteration and move to the next iteration --distractors-- The break statement The label statement The return statement --answer-- The continue statement --question-- --text-- What is printed to the console with the following code js for (let i = 0; i < 25; i += 2) { if (i % 5 === 0) { continue; } if (i % 13 === 0) { break; } consolelog(i);\n}\n--distractors--\n0, 2, 4, 6, 8, 12, 14, 16, 18, 22, 24\n0, 2, 4, 6, 8, 12\n2, 4, 6, 8, 12\n--answer--\n2, 4, 6, 8, 12, 14, 16, 18, 22, 24\n--question--\n--text--\nWhat would the following code print to the console javascript\nfor (let i = 1; i < 6; i++) {\nif (i === 4) break;\nconsole log(i);\n}\n--distractors--\n1, 2, 3, 4, 5, 6\n1, 2, 3, 4, 5\n1, 2, 3, 4\n--answer--\n1, 2, 3\n--question--\n--text--\nWhat will be printed to the console with the code below javascript\nconst shoppingList = { tomatoes: 4, apples: 10 };\nfor (const item in shoppingList) {\nconsole log(item);\n}\n--distractors--\ntomatoes - 4, apples - 10\n4, 10\ntomatoes:4, apples:10\n--answer--\ntomatoes, apples\n--question--\n--text--\nWhat will be the console output of the code below javascript\nfor (let i = 2; i <= 13; i++) {\nif (i % 2 === 0) continue;\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6569,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "5f93d11e32aa386cf952c2208a9accb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- What will be printed to the console with the code below javascript const shoppingList = { tomatoes: 4, apples: 10 }; for (const item in shoppingList) { console log(item); } --distractors-- tomatoes - 4, apples - 10 4, 10 tomatoes:4, apples:10 --answer-- tomatoes, apples --question-- --text-- What will be the console output of the code below javascript for (let i = 2; i <= 13; i++) { if (i % 2 === 0) continue; consolelog(i);\n}\n--distractors--\n2, 4, 6, 8, 10, 12\n1, 3, 5, 7, 9, 11, 13\n1, 3, 5, 7, 9, 11\n--answer--\n3, 5, 7, 9, 11, 13\n--question--\n--text--\nWhat would be printed to the console with the code below javascript\nconst fruits = [\"Mango\", \"Pineapple\", \"Oranges\"];\nfor (const fruit of fruits) {\nconsole log(fruit);\n}\n--distractors--\n0, 1, 2\nPineapple, Oranges, Mango\nOranges, Pineapple, Mango\n--answer--\nMango, Pineapple, Oranges\n--question--\n--text--\nHow many times will the code below output the string in the loop javascript\nlet x = 0\nwhile (x < 5) {\nconsole log(\"in the loop\");\n}\n--distractors--\n3 times\n4 times\n5 times\n--answer--\nInfinite times",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6569,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-loops\\66edcd49e73385dd4df54ac7.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "419a47c636d1d2c16b7b7f2857517d52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-objects\\66edcd0ecb4b25dc64a34804.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edcd0ecb4b25dc64a34804\ntitle: JavaScript Objects Quiz\nchallengeType: 8\ndashedName: quiz-javascript-objects\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following does NOT describe an object in JavaScript --distractors--\nA collection of key-value pairs A container for properties and methods A non-primitive data type --answer--\nA primitive data type --question--\n--text--\nWhich of the following object definitions is invalid --distractors--\nconst book = { \"pages\": 255 };\nconst car = { year: 2025 };\nconst person = { \"name\": \"nora\" };\n--answer--\nconst product = { color: blue };\n--question--\n--text--\nHow can you access the job property of this person object js\nlet person = { job: \"Software Developer\" };\n--distractors--\nperson -> job\nperson#job\nperson[job]\n--answer--\nperson job\n--question--\n--text--\nHow can you access the street property of the person object below js\nconst person = {\naddress: {\nstreet: \"sample-street\"\n}\n};\n--distractors--\nperson -> address -> street\nperson#address#street\nperson[address street]\n--answer--\nperson[\"address\"][\"street\"]\n--question--\n--text--\nWhich of these property keys can only be accessed using bracket notation --distractors--\nA property key that is known and static A property key that is nested within multiple levels of an object A property key that might not exist in the object --answer--\nA property key that is dynamic --question--\n--text--\nWhich of the following correctly uses destructuring to access the name property of the person object below js\nconst person = { name: \"John\" }\n--distractors--\nconst name = person name;\nconst name = person[\"name\"];\nconst { name } = person;\n--answer--\nconst { name } = person;\n--question--\n--text--\nWhich of the following correctly uses destructuring to access the flour property of the recipe object below js\nconst recipe = {\ningredients: {\nflour: \"2 cups\",\nsugar: \"1 cup\"\n}\n};\n--distractors--\nconst flour = recipe ingredients",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6242,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-objects\\66edcd0ecb4b25dc64a34804.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ce3cdd7b2ef551d8aad6c33463646de2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-objects\\66edcd0ecb4b25dc64a34804.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the person object below js const person = { name: \"John\" } --distractors-- const name = person name; const name = person[\"name\"]; const { name } = person; --answer-- const { name } = person; --question-- --text-- Which of the following correctly uses destructuring to access the flour property of the recipe object below js const recipe = { ingredients: { flour: \"2 cups\", sugar: \"1 cup\" } }; --distractors-- const flour = recipe ingredientsflour;\nconst flour = recipe[\"ingredients\"][\"flour\"];\nconst { ingredients: flour } = recipe;\n--answer--\nconst { ingredients: { flour } } = recipe;\n--question--\n--text--\nHow can you assign a default value to a property key when using destructuring in JavaScript --distractors--\nconst key = object key && \"defaultValue\";\nconst key = object key || \"defaultValue\";\nconst { key: \"defaultValue\" } = object;\n--answer--\nconst { key = \"defaultValue\" } = object;\n--question--\n--text--\nHow can you check if a car object has a year property --distractors--\nyear hasProperty(\"car\");\ncar hasProperty(\"year\");\ncar hasOwnProperty(year);\n--answer--\ncar hasOwnProperty(\"year\");\n--question--\n--text--\nWhat is an object method --distractors--\nA string associated with an object An array associated with an object A number associated with an object --answer--\nA function associated with an object --question--\n--text--\nHow can you call the add method of this calculator object to add the numbers 10 and 7 js\nconst calculator = {\nadd: function(a, b) {\nreturn a + b;\n}\n};\n--distractors--\ncalculator#add(10, 7);\ncalculator call(add(10, 7));\nadd calculator(10, 7);\n--answer--\ncalculator add(10, 7);\n--question--\n--text--\nWhich operator removes a property from an object --distractors--\nremove\nerase\ndiscard\n--answer--\ndelete\n--question--\n--text--\nHow can you check if a score property exists in a player object --distractors--\nplayer in \"score\"\nplayer in score\nscore in player\n--answer--\n\"score\" in player\n--question--\n--text--\nHow can you create a new empty object in JavaScript",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6242,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-objects\\66edcd0ecb4b25dc64a34804.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7398e6c9210a9a252d3bd45c0ef479dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-objects\\66edcd0ecb4b25dc64a34804.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return a + b; } }; --distractors-- calculator#add(10, 7); calculator call(add(10, 7)); add calculator(10, 7); --answer-- calculator add(10, 7); --question-- --text-- Which operator removes a property from an object --distractors-- remove erase discard --answer-- delete --question-- --text-- How can you check if a score property exists in a player object --distractors-- player in \"score\" player in score score in player --answer-- \"score\" in player --question-- --text-- How can you create a new empty object in JavaScript--distractors--\nobject() new\nnew object()\nObject() new\n--answer--\nnew Object()\n--question--\n--text--\nWhat is the correct syntax for using optional chaining in JavaScript --distractors--\nobject key\nobject [\"key\"]\nobject key\n--answer--\nobject key\n--question--\n--text--\nWhat is optional chaining used for in JavaScript --distractors--\nUsed to define variables with default values Used to define optional methods within an object that may or may not be called Used to write more concise code by chaining multiple method calls together in a single statement --answer--\nUsed to safely access properties of an object that might be null or undefined --question--\n--text--\nWhat method is used to convert a JavaScript object into a JSON string --distractors--\nStringify toJSON()\nJSON toObject()\nObject toJSON()\n--answer--\nJSON stringify()\n--question--\n--text--\nWhat method converts a JSON string back into a JavaScript object --distractors--\nJSON toObject()\nJSON convert()\nJSON object()\n--answer--\nJSON parse()\n--question--\n--text--\nWhich one of these options accesses the color property of a toy object using bracket notation --distractors--\ntoy color\ntoy[color]\ncolor[toy]\n--answer--\ntoy[\"color\"]\n--question--\n--text--\nHow can you access the home phone of this learner object in JavaScript using dot notation js\nconst learner = {\nname: \"Nora\",\nage: 45,\ncontact: {\nemail: \"nora@email com\",\nphone: {\nhome: \"123-456-7890\",\nwork: \"098-765-4321\"\n}\n}\n};\n--distractors--\nlearner name phone home\nlearner email work\nlearner contact home\n--answer--\nlearner contact phone home",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6242,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-objects\\66edcd0ecb4b25dc64a34804.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "97691c9ff9a560d97cfa07d306454d74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edc31c44f1b9c1d5c5ebca\ntitle: JavaScript Strings Quiz\nchallengeType: 8\ndashedName: quiz-javascript-strings\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is the return value for the includes() method --distractors--\nIf the substring is found within the string, the method returns the string Otherwise, it returns undefined If the substring is found within the string, the method returns true Otherwise, it returns an empty string If the substring is found within the string, the method returns the string Otherwise, it returns null --answer--\nIf the substring is found within the string, the method returns true Otherwise, it returns false --question--\n--text--\nWhich option demonstrates string interpolation --distractors--\n\"Hello, \" + user + \" \"\n\"Hello, $user \"\n`Hello, {user} `\n--answer--\n`Hello, ${user} `\n--question--\n--text--\nWhich of the following options is the newline character --distractors--\n\\newline\n\\new\n\\line\n--answer--\n\\n\n--question--\n--text--\nWhich of the following statements is correct about strings --distractors--\nStrings are mutable and can be changed after they are created Strings are non primitive data types Strings can only be created using single quotes --answer--\nStrings are immutable --question--\n--text--\nWhat does ASCII stand for --distractors--\nAmerican Standard Code for Internet Information\nAdvanced Systematic Code for Internal Interchange\nAutomatic Standard Code for Internal Information\n--answer--\nAmerican Standard Code for Information Interchange\n--question--\n--text--\nWhich of the following methods extracts a portion of a string and returns a new string --distractors--\ntrim()\nindexOf()\nprompt()\n--answer--\nslice()\n--question--\n--text--\nWhat is the purpose of the prompt() method --distractors--\nIt displays a message in the console It displays an alert box with a message It displays a confirmation box with a message --answer--\nIt displays a dialog box that waits for the user input --question--\n--text--\nWhich of the following is the correct way to access the third character of a string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "845b9503dd5e50764f1ba7d4087486ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "string and returns a new string --distractors-- trim() indexOf() prompt() --answer-- slice() --question-- --text-- What is the purpose of the prompt() method --distractors-- It displays a message in the console It displays an alert box with a message It displays a confirmation box with a message --answer-- It displays a dialog box that waits for the user input --question-- --text-- Which of the following is the correct way to access the third character of a string--distractors--\njs\nconst developer = \"Jessica\";\ndeveloper[3];\njs\nconst developer = \"Jessica\";\ndeveloper[-1];\njs\nconst developer = \"Jessica\";\ndeveloper[0];\n--answer--\njs\nconst developer = \"Jessica\";\ndeveloper[2];\n--question--\n--text--\nHow can you obtain the ASCII value of the first character in the string \"hello\" --distractors--\n\"hello\" charCode(0)\n\"hello\" codeAt(0)\n\"hello\" getCharIndex(0)\n--answer--\n\"hello\" charCodeAt(0)\n--question--\n--text--\nWhich method can you use to obtain the character corresponding to an ASCII value --distractors--\ntoASCII()\ntoChar()\ntoCode()\n--answer--\nfromCharCode()\n--question--\n--text--\nWhich of the following indexOf examples will log -1 to the console --distractors--\njs\nconst organization = \"freeCodeCamp\";\nconsole log(organization indexOf(\"e\"));\njs\nconst organization = \"freeCodeCamp\";\nconsole log(organization indexOf(\"f\"));\njs\nconst organization = \"freeCodeCamp\";\nconsole log(organization indexOf(\"C\"));\n--answer--\njs\nconst organization = \"freeCodeCamp\";\nconsole log(organization indexOf(\"c\"));\n--question--\n--text--\nHow can you check if the string \"JavaScript\" contains \"Script\" --distractors--\n\"JavaScript\" has(\"Script\")\n\"JavaScript\" contains(\"Script\")\n\"JavaScript\" exists(\"Script\")\n--answer--\n\"JavaScript\" includes(\"Script\")\n--question--\n--text--\nWhich of the following extracts the substring \"Script\" from the string \"JavaScript\" --distractors--\n\"JavaScript\" find(5)\n\"JavaScript\" extract(4)\n\"JavaScript\" cut(5)\n--answer--\n\"JavaScript\" slice(4)\n--question--\n--text--\nHow do you convert the string \"JavaScript\" to uppercase --distractors--\n\"JavaScript\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "a5e91ac64e999b9999b289e999ecd1fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js const organization = \"freeCodeCamp\"; console log(organization indexOf(\"C\")); --answer-- js const organization = \"freeCodeCamp\"; console log(organization indexOf(\"c\")); --question-- --text-- How can you check if the string \"JavaScript\" contains \"Script\" --distractors-- \"JavaScript\" has(\"Script\") \"JavaScript\" contains(\"Script\") \"JavaScript\" exists(\"Script\") --answer-- \"JavaScript\" includes(\"Script\") --question-- --text-- Which of the following extracts the substring \"Script\" from the string \"JavaScript\" --distractors-- \"JavaScript\" find(5) \"JavaScript\" extract(4) \"JavaScript\" cut(5) --answer-- \"JavaScript\" slice(4) --question-- --text-- How do you convert the string \"JavaScript\" to uppercase --distractors-- \"JavaScript\"upper()\n\"JavaScript\" toUpper()\n\"JavaScript\" convertUpper()\n--answer--\n\"JavaScript\" toUpperCase()\n--question--\n--text--\nHow do you convert the string \"JavaScript\" to lowercase --distractors--\n\"JavaScript\" lower()\n\"JavaScript\" toLower()\n\"JavaScript\" convertLower()\n--answer--\n\"JavaScript\" toLowerCase()\n--question--\n--text--\nWhich of the following will replace \"dogs\" with \"cats\" in the string \"I love dogs\" --distractors--\n\"I love dogs\" slice(\"dogs\", \"cats\")\n\"I love dogs\" replaceWith(\"dogs\", \"cats\")\n\"I love dogs\" find(\"dogs\", \"cats\")\n--answer--\n\"I love dogs\" replace(\"dogs\", \"cats\")\n--question--\n--text--\nWhich method is used to repeat a string a specified number of times --distractors--\ntimes()\nrepeatTimes()\nrepeatNumber()\n--answer--\nrepeat()\n--question--\n--text--\nWhat will the following code return: \"abc\" repeat(3) --distractors--\n\"abcabc\"\n\"abcabcabcabc\"\nIt will throw an error --answer--\n\"abcabcabc\"\n--question--\n--text--\nWhich method will remove whitespace from the beginning and end of a string --distractors--\nstrip()\nremoveWhitespace()\ntrimWhitespace()\n--answer--\ntrim()\n--question--\n--text--\nWhich of the following is the correct syntax for escaping quotes --distractors--\njs\n\"She said, \"Hello \"\"\njs\n\"She said, \"Hello \"\"\njs\n\"She said, //\"Hello",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "3ec53136b5be6bfdb9cb2ded0426f035",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "times --distractors-- times() repeatTimes() repeatNumber() --answer-- repeat() --question-- --text-- What will the following code return: \"abc\" repeat(3) --distractors-- \"abcabc\" \"abcabcabcabc\" It will throw an error --answer-- \"abcabcabc\" --question-- --text-- Which method will remove whitespace from the beginning and end of a string --distractors-- strip() removeWhitespace() trimWhitespace() --answer-- trim() --question-- --text-- Which of the following is the correct syntax for escaping quotes --distractors-- js \"She said, \"Hello \"\" js \"She said, \"Hello \"\" js \"She said, //\"Hello//\"\"\n--answer--\njs\n\"She said, \\\"Hello \\\"\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-strings\\66edc31c44f1b9c1d5c5ebca.md",
      "source_type": "git_repo"
    },
    "token_count": 162,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6b19158cf05b3768505509c64fcba07e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd3011f18f4ee1bd9d28b\ntitle: JavaScript Regular Expressions Quiz\nchallengeType: 8\ndashedName: quiz-javascript-regular-expressions\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is NOT a valid regular expression --distractors--\njs\n/hello, world /i\njs\nnew RegExp(\"hello, world \")\njs\n/( :^|\\s)hello[,] \\sworld[ ] ( :$|\\s)/i\n--answer--\njs\n\"hello, world \"\n--question--\n--text--\nWhich RegExp contains the same pattern as the regular expression /f[o0]{2} b[a4@]r/i --distractors--\njs\nnew RegExp(\"/f[o0]{2} b[a4@]r/\", \"i\")\njs\nnew RegExp(\"f[o0]{2} b[a4@]r\", \"g\")\njs\nnew RegExp(\"f[o0]{2} b[a4@]r\")\n--answer--\njs\nnew RegExp(\"f[o0]{2} b[a4@]r\", \"i\")\n--question--\n--text--\nWhat is the return type for the regular expression method test --distractors--\nAn array of strings that matched the regular expression An object containing information about the (sub)string the regular expression matched null, the method test only validates if the given regular expression is valid --answer--\nA boolean indicating whether the string matches the regular expression --question--\n--text--\nWhat does the match method do when passed a regular expression without any flags --distractors--\nIt searches for any strings that match the given regular expression, and returns ALL matches as an array It searches for the first full match, and returns the starting index of that match It searches for the first full match, and returns a boolean indicating whether or not a match was found --answer--\nIt searches for the first full match, and returns an array containing that first match --question--\n--text--\nWhich is the best use case for test --distractors--\nFor verifying a given regular expression For getting detailed information about a string match, such as the length of the matched string To extract all matches from a given string --answer--\nTo check if a given string matches the regular expression",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8056,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "66a4e69b9c150a6139d06f2291d767cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "indicating whether or not a match was found --answer-- It searches for the first full match, and returns an array containing that first match --question-- --text-- Which is the best use case for test --distractors-- For verifying a given regular expression For getting detailed information about a string match, such as the length of the matched string To extract all matches from a given string --answer-- To check if a given string matches the regular expression--question--\n--text--\nWhat is the purpose of using replace --distractors--\nTo replace the current regular expression with a new regular expression When given an index and a string, to replace the character at the specified index with the string provided To remove all instances of a matched substring from a string --answer--\nTo replace a matched string with a given replacement string --question--\n--text--\nWhat is the difference between match and matchAll --distractors--\nmatch always returns a string, while matchAll always returns an array of matches match returns a boolean indicating whether a match is found, while matchAll returns a number representing the amount of matches found match returns a number indicating the starting index of the first match found, while matchAll returns an array of numbers containing indices where a match was found --answer--\nmatch returns an array of strings that match, while matchAll returns an iterator object of all matches found --question--\n--text--\nWhich of the following is the correct use of replaceAll --distractors--\njs\nfoo replaceAll(/foobar/, \"fizzbuzz\")\njs\nfoo replaceAll(/foobar/i, \"fizzbuzz\")\njs\nfoo replaceAll(/foobar/gi, /fizzbuzz/)\n--answer--\njs\nfoo replaceAll(/foobar/g, \"fizzbuzz\")\n--question--\n--text--\nWhich of the following character classes is equivalent to the regular expression /[a-zA-Z0-9_]/ --distractors--\n\\d\n\\s\n\\n\n--answer--\n\\w\n--question--\n--text--\nWhich of the following character classes is most appropriate for extracting digits from a phone number --distractors--\n\\w\n\\s\n\\D\n--answer--\n\\d\n--question--\n--text--\nWhat happens when a lookahead ( =) is used in a regular expression --distractors--\nThe lookahead will assert to the left of the string, verifying that the sub-pattern IS present A lookahead is an alternate regular expression pattern used when the main pattern fails to match",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8056,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3ede7c4bbe889fdbd28ce865245fc3de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\\s \\n --answer-- \\w --question-- --text-- Which of the following character classes is most appropriate for extracting digits from a phone number --distractors-- \\w \\s \\D --answer-- \\d --question-- --text-- What happens when a lookahead ( =) is used in a regular expression --distractors-- The lookahead will assert to the left of the string, verifying that the sub-pattern IS present A lookahead is an alternate regular expression pattern used when the main pattern fails to matchThe lookahead will assert to the right of the string, verifying that the sub-pattern IS NOT present --answer--\nA lookahead asserts to the right of the string, verifying that the sub-pattern IS present --question--\n--text--\nWhen making a regular expression, where should a lookbehind ( <=) be placed --distractors--\nThe lookbehind can be placed anywhere in the regular expression The lookbehind should be placed to the right of the main pattern of the regular expression The lookbehind should include the main pattern of the regular expression --answer--\nThe lookbehind should be placed to the left of the main pattern of the regular expression --question--\n--text--\nWhich quantifier matches the preceding element zero or one times --distractors--\n+\n*\na{0,}\n--answer-- --question--\n--text--\nWhich of the following regular expressions only allows numbers between 0 and 999,999 --distractors--\n/^\\d{6}$/\n/^\\d{0, 999999}$/\n/^\\d+$/\n--answer--\n/^\\d{1,6}$/\n--question--\n--text--\nWhich of the following statements is true about the custom character class ([]) --distractors--\nIt's a set of characters to be removed from the match It can define a set of characters to match without the need to escape any special characters It represents a set of characters in Unicode form --answer--\nIt can define a custom set of characters to match --question--\n--text--\nWhich of the following character classes correctly matches the uppercase alphabet --distractors--\n\\w\n[a-z]\n[AZ]\n--answer--\n[A-Z]\n--question--\n--text--\nWhat happens when a capturing group ( ) is used in a regular expression --distractors--\nThe capturing group is immediately evaluated, regardless of where it is located in the regular expression",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8056,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "296da743c2c33e2e9d212c4831ded422",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "escape any special characters It represents a set of characters in Unicode form --answer-- It can define a custom set of characters to match --question-- --text-- Which of the following character classes correctly matches the uppercase alphabet --distractors-- \\w [a-z] [AZ] --answer-- [A-Z] --question-- --text-- What happens when a capturing group ( ) is used in a regular expression --distractors-- The capturing group is immediately evaluated, regardless of where it is located in the regular expressionThe capturing group attempts to match using the given subpattern, and continues without memorizing the result The capturing group is a prioritized subpattern, which will immediately return when a match is found for the subpattern --answer--\nThe capturing group attempts to match using the given subpattern, and continues with the result in memory --question--\n--text--\nWhat happens when a non-capturing group ( : ) is used in a regular expression --distractors--\nThe non-capturing group attempts to match using the given subpattern, and continues with the result in memory The non-capturing group immediately terminates when it finds a match for the given subpattern The non-capturing group is considered an optional match, so only a successful match is added on the result --answer--\nThe non-capturing group attempts to match using the given subpattern, and continues without keeping the result in memory --question--\n--text--\nGiven the following regular expression, which of these tests will return true js\nconst regex = /(cat)\\s+\\1/i;\n--distractors--\njs\nregex test(\"cat dog cat\");\njs\nregex test(\"catcat\");\njs\nregex test(\"cat\\s+cat\");\n--answer--\njs\nregex test(\"cat   cat\");\n--question--\n--text--\nWhat does the wildcard character class ( ) do in a regular expression --distractors--\nIt matches only whitespace characters It matches the start of a string It matches a single digit --answer--\nIt matches any single character except a newline",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8056,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-regular-expressions\\66edd3011f18f4ee1bd9d28b.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "3a9b75a4c28bac919b8725647bb6d5c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-js-a11y\\68376949899fcbad3c9cac23.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68376949899fcbad3c9cac23\ntitle: JavaScript and Accessibility Quiz\nchallengeType: 8\ndashedName: quiz-js-a11y\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich attribute is used for accessibility purposes to indicate if a control is expanded or collapsed --distractors--\naria-controlled\naria-controls\naria-expands\n--answer--\naria-expanded\n--question--\n--text--\nWhich two attributes can be used in combination with aria-expanded to establish a programmatic connection between the controlling element and the element it controls --distractors--\naria-labelledBy and aria-owns\naria-controls and aria-label\naria-live and aria-owns\n--answer--\naria-controls and aria-owns\n--question--\n--text--\nWhich of the following attributes creates a live region on your page which can be used to notify screen reader users of dynamic content changes in the live region as they occur --distractors--\naria-live-regions\naria-lives\naria-live-region\n--answer--\naria-live\n--question--\n--text--\nWhich of the following div elements will be disabled only to people using assistive technologies, such as screen readers --distractors--\n```html\nEdit\n```\n```html\nEdit\n```\n```html\nEdit\n```\n--answer--\n```html\nEdit\n```\n--question--\n--text--\nWhich of the following is a valid use of the aria-expanded attribute --distractors--\nhtml\n<button aria-expanded=\"expand\">Menu</button>\nhtml\n<button aria-expanded=\"allow\">Menu</button>\nhtml\n<button aria-expanded=\"set\">Menu</button>\n--answer--\nhtml\n<button aria-expanded=\"true\">Menu</button>\n--question--\n--text--\nWhich attribute is used to create a programmatic relationship between a controlling element and the element it affects on the page --distractors--\naria-set\naria-region\naria-expanded\n--answer--\naria-controls\n--question--\n--text--\nWhich of the following is NOT a common use case for live regions --distractors--\nMessages that are displayed after an action has been taken (such as an error message or confirmation) Content that updates periodically (such as a ticker, marquee, or countdown timer) General status messages (such as updates about a process)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4355,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-js-a11y\\68376949899fcbad3c9cac23.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7a016e4fae02256fd3c358f7a9145c60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-js-a11y\\68376949899fcbad3c9cac23.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "create a programmatic relationship between a controlling element and the element it affects on the page --distractors-- aria-set aria-region aria-expanded --answer-- aria-controls --question-- --text-- Which of the following is NOT a common use case for live regions --distractors-- Messages that are displayed after an action has been taken (such as an error message or confirmation) Content that updates periodically (such as a ticker, marquee, or countdown timer) General status messages (such as updates about a process)--answer--\nMessages that are displayed before an action has been taken (such as a confirmation dialog) --question--\n--text--\nWhich of the following examples is the correct way to indicate which tab is currently selected --distractors--\n```html\nTab 1\nTab 2\nTab 3\n```\n```html\nTab 1\nTab 2\nTab 3\n```\n```html\nTab 1\nTab 2\nTab 3\n```\n--answer--\n```html\nTab 1\nTab 2\nTab 3\n```\n--question--\n--text--\nWhich of the following is NOT a valid value for the aria-live attribute --distractors--\noff\npolite\nassertive\n--answer--\non\n--question--\n--text--\nWhich of the following aria-live attribute values means that the update is very important and has the highest priority --distractors--\nnow\nimmediate\nurgent\n--answer--\nassertive",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4355,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-js-a11y\\68376949899fcbad3c9cac23.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6cc146da573ddd5df255563c80a764b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-variables-and-data-types\\66edc25ae5ea80bf6f785552.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edc25ae5ea80bf6f785552\ntitle: JavaScript Variables and Data Types Quiz\nchallengeType: 8\ndashedName: quiz-javascript-variables-and-data-types\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following best describes JavaScript --distractors--\nA markup language used to design websites A server-side programming language A database management system --answer--\nA programming language used for web development --question--\n--text--\nWhich of the following is NOT a JavaScript data type --distractors--\nNumber\nUndefined\nObject\n--answer--\nDouble\n--question--\n--text--\nWhich of the following is NOT a valid JavaScript variable declaration --distractors--\nconst x = 0;\nlet x;\nvar x;\n--answer--\npublic Int x;\n--question--\n--text--\nWhich of the following is a common naming convention for variables in JavaScript --distractors--\nJavaScript case Lightning case Giraffe case --answer--\nCamel case --question--\n--text--\nWhat is the difference between let and const variable declarations in JavaScript --distractors--\nconst cannot be re-assigned nor re-declared let can be re-assigned and re-declared const can be re-assigned and re-declared let cannot be re-assigned nor re-declared const can be re-assigned but not re-declared let can be re-declared, but not re-assigned --answer--\nconst cannot be re-assigned or re-declared let can be re-assigned, but not re-declared --question--\n--text--\nWhy are strings considered immutable in JavaScript --distractors--\nYou cannot create strings using variables Strings can only be created using literals You can change strings, but only through global variables --answer--\nOnce a string is created, you cannot change its characters directly --question--\n--text--\nHow would you print out the string Hello, world in the console in JavaScript --distractors--\nprint(\"Hello, world \")\nalert(\"Hello, world\");\nSystem out println(\"Hello, world \");\n--answer--\nconsole log(\"Hello, world \");\n--question--\n--text--\nWhat does the code below do js\nlet hello = \"Hello\";\nhello += \" world\";\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-variables-and-data-types\\66edc25ae5ea80bf6f785552.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "87cdd41c441d0b34b5189f0b691802f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-variables-and-data-types\\66edc25ae5ea80bf6f785552.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "only be created using literals You can change strings, but only through global variables --answer-- Once a string is created, you cannot change its characters directly --question-- --text-- How would you print out the string Hello, world in the console in JavaScript --distractors-- print(\"Hello, world \") alert(\"Hello, world\"); System out println(\"Hello, world \"); --answer-- console log(\"Hello, world \"); --question-- --text-- What does the code below do js let hello = \"Hello\"; hello += \" world\"; consolelog(hello);\n--distractors--\nReassigns \" world\" to the variable hello, and prints it out in the console Prints out the number of characters in Hello world in the console Combines \"Hello\" and \" world\" into a new string and prints it, but the value of hello remains \"Hello\" --answer--\nCombines the current value of hello with the string \" world\", reassigns it to hello, and prints it to the console --question--\n--text--\nWhich JavaScript character is used to mark the end of a statement --distractors--\n:\n, --answer--\n;\n--question--\n--text--\nWhich of the following is a valid single line comment syntax in JavaScript --distractors--\n# This is a single line comment\n-- This is a single line comment\n/* This is a single line comment */\n--answer--\n// This is a single line comment\n--question--\n--text--\nDynamic typing in JavaScript means that:\n--distractors--\nYou need to declare the data type of a variable before using it You cannot assign a value of one data type to a variable of a different type JavaScript performs type checking before execution, meaning type related errors will be thrown before the code is run --answer--\nJavaScript infers the type based on the value assigned to the variable --question--\n--text--\nWhich of the following prints out the type of the variable x in the console --distractors--\nconsole log(x type);\nconsole log(typeOf(x));\nconsole log(isNaN(x));\n--answer--\nconsole log(typeof x);\n--question--\n--text--\nWhat will be the output of console log(typeof null); --distractors--\n\"undefined\"\n\"null\"\n\"NaN\"\n--answer--\n\"object\"\n--question--\n--text--\nWhich of the following is a valid multi-line comment in JavaScript",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-variables-and-data-types\\66edc25ae5ea80bf6f785552.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "95f6152cec5af3c729498e2265bc1c21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-variables-and-data-types\\66edc25ae5ea80bf6f785552.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the code is run --answer-- JavaScript infers the type based on the value assigned to the variable --question-- --text-- Which of the following prints out the type of the variable x in the console --distractors-- console log(x type); console log(typeOf(x)); console log(isNaN(x)); --answer-- console log(typeof x); --question-- --text-- What will be the output of console log(typeof null); --distractors-- \"undefined\" \"null\" \"NaN\" --answer-- \"object\" --question-- --text-- Which of the following is a valid multi-line comment in JavaScript--distractors--\njs\n// This is a\n// multi-line\n// comment\npy\n'''\nThis is a\nmulti-line\ncomment\n'''\n```html\n```\n--answer--\njs\n/*\nThis is a\nmulti-line\ncomment\n*/\n--question--\n--text--\nWhich of the following declares a variable in JavaScript that cannot be changed --distractors--\nvar x = 0;\nlet x = 0;\nfinal x = 0;\n--answer--\nconst x = 0;\n--question--\n--text--\nWhich of the following is a valid variable name in JavaScript --distractors--\ntart@n\n4cats dogs\n--answer--\n$number\n--question--\n--text--\nWhich of the following is NOT a valid string concatenation method in JavaScript --distractors--\nconsole log(string1 + \" \" + string2);\nconsole log(\"string1 \" + string2);\nconsole log(string1 concat(\" \", string2));\n--answer--\nconsole log(string1 string2);\n--question--\n--text--\nWhich of the following variable names uses camel case correctly --distractors--\na_long_variable_name\nalongvariableName\nALongVariableName\n--answer--\naLongVariableName\n--question--\n--text--\nWhy is it beneficial to use semicolons explicitly even though JavaScript has Automatic Semicolon Insertion --distractors--\nTo increase the execution speed of the code To maintain consistency with other programming languages To allow for better debugging and error tracing --answer--\nTo improve code readability and reliability --question--\n--text--\nWhich of the following is NOT a JavaScript data type --distractors--\nSymbol\nBoolean\nNull\n--answer--\nFloat",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-javascript-variables-and-data-types\\66edc25ae5ea80bf6f785552.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c9d7452421e63bbf90ee76ef58a6a2b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-object-oriented-programming\\67f4131db7777346b1b3dc6f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f4131db7777346b1b3dc6f\ntitle: Object Oriented Programming Quiz\nchallengeType: 8\ndashedName: quiz-object-oriented-programming\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4311,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-object-oriented-programming\\67f4131db7777346b1b3dc6f.md",
      "source_type": "git_repo"
    },
    "token_count": 65,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "27f0ce19ec2bfba92b9945bb7edf3752",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-object-oriented-programming\\67f4131db7777346b1b3dc6f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f4131db7777346b1b3dc6f\ntitle: Object Oriented Programming Quiz\nchallengeType: 8\ndashedName: quiz-object-oriented-programming\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below--quizzes--\n--quiz--\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer\n--question--\n--text--\nPlaceholder question\n--distractors--\nPlaceholder distractor 1\nPlaceholder distractor 2\nPlaceholder distractor 3\n--answer--\nPlaceholder answer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4311,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-object-oriented-programming\\67f4131db7777346b1b3dc6f.md",
      "source_type": "git_repo"
    },
    "token_count": 831,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3ba318da0943fddbbeac21e1ecaf2750",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-local-storage-and-crud\\66edd3f9bef926f129990425.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd3f9bef926f129990425\ntitle: Local Storage and CRUD Quiz\nchallengeType: 8\ndashedName: quiz-local-storage-and-crud\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat does CRUD stand for in the context of web development --distractors--\nCreate, Replace, Undo, Delete Connect, Remove, Update, Display Copy, Retrieve, Update, Delete --answer--\nCreate, Read, Update, Delete --question--\n--text--\nWhich HTTP method is commonly associated with the Create operation in a RESTful API --distractors--\nGET\nPUT\nDELETE\n--answer--\nPOST\n--question--\n--text--\nWhich of the following CRUD operations is typically performed when modifying an existing record in a database --distractors--\nRead\nDelete\nCreate\n--answer--\nUpdate\n--question--\n--text--\nWhat is the main difference between localStorage and sessionStorage in the Web Storage API --distractors--\nlocalStorage stores data in memory, while sessionStorage stores data on the disk sessionStorage is faster than localStorage for retrieving data localStorage data is only available during a session, while sessionStorage persists across sessions --answer--\nlocalStorage data persists until explicitly deleted, while sessionStorage data is cleared when the page session ends --question--\n--text--\nWhich method is used to store data in localStorage --distractors--\nlocalStorage setData()\nlocalStorage saveItem()\nlocalStorage storeData()\n--answer--\nlocalStorage setItem()\n--question--\n--text--\nHow can you remove a single item from sessionStorage --distractors--\nsessionStorage clearItem('key')\nsessionStorage remove('key')\nsessionStorage deleteItem('key')\n--answer--\nsessionStorage removeItem('key')\n--question--\n--text--\nWhat is the difference between PUT and PATCH --distractors--\nPUT modifies specific fields, while PATCH replaces the entire resource PUT only adds new resources, while PATCH updates existing ones PUT is used for retrieving data, while PATCH is used for sending data --answer--\nPUT replaces the entire resource, while PATCH updates specific fields --question--\n--text--\nWhat is the cache storage used for --distractors--\nCache storage is used to permanently store user credentials securely in the browser for authentication purposes Cache storage is used to store large volumes of structured data in the browser using a database system",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-local-storage-and-crud\\66edd3f9bef926f129990425.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d882a1ea6d8166114252522ea5dd688f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-local-storage-and-crud\\66edd3f9bef926f129990425.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "adds new resources, while PATCH updates existing ones PUT is used for retrieving data, while PATCH is used for sending data --answer-- PUT replaces the entire resource, while PATCH updates specific fields --question-- --text-- What is the cache storage used for --distractors-- Cache storage is used to permanently store user credentials securely in the browser for authentication purposes Cache storage is used to store large volumes of structured data in the browser using a database systemCache storage is used to track user sessions and preferences by storing key-value pairs accessible across multiple websites --answer--\nCache storage is used to store frequently requested network resources, reducing load times and improving performance --question--\n--text--\nWhat is a cookie in the context of web development --distractors--\nA type of HTTP request A piece of code that runs in the browser A method to store large files on a server --answer--\nA small piece of data stored by the user's web browser --question--\n--text--\nWhich of the following methods is used to manually set a cookie in JavaScript --distractors--\ndocument setCookie\ndocument cookie set\ndocument createCookie\n--answer--\ndocument cookie\n--question--\n--text--\nWhich of the following code snippets correctly deletes a cookie named username --distractors--\ndocument cookie delete(\"username\");\ndocument removeCookie(\"username\");\ncookie delete(\"username\");\n--answer--\ndocument cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n--question--\n--text--\nWhich of the following statements about cookies is false --distractors--\nSession cookies expire when the browser is closed HttpOnly cookies cannot be accessed by JavaScript Secure cookies are only transmitted over HTTPS --answer--\nCookies can only be set by the server --question--\n--text--\nWhat is browser fingerprinting --distractors--\nA technique used in identifying users based on their IP address A form of data encryption A method of storing data in the browser's cache --answer--\nA way of tracking users through browser and device attributes --question--\n--text--\nWhat is a primary risk associated with storing passwords in local storage --distractors--\nLocal storage data is deleted once you close the browser tab Local storage data is lost once you delete cookies Local storage doesn't work offline --answer--\nLocal storage is not encrypted and can be accessed easily --question--\n--text--\nWhat of the following statements is true about client-side storage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-local-storage-and-crud\\66edd3f9bef926f129990425.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3a3fa537f006e131f00f65d141f677a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-local-storage-and-crud\\66edd3f9bef926f129990425.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "browser's cache --answer-- A way of tracking users through browser and device attributes --question-- --text-- What is a primary risk associated with storing passwords in local storage --distractors-- Local storage data is deleted once you close the browser tab Local storage data is lost once you delete cookies Local storage doesn't work offline --answer-- Local storage is not encrypted and can be accessed easily --question-- --text-- What of the following statements is true about client-side storage--distractors--\nClient-side storage uses objects instead of strings to store data Client-side storage uses cloud services to sync user data across multiple devices Client-side storage is more secure than server-side storage --answer--\nClient-side storage allows websites to store data on a user's device --question--\n--text--\nWhat is the primary benefit of using IndexedDB over localStorage --distractors--\nIndexedDB does not require user consent for data storage IndexedDB has a simpler API IndexedDB is supported in all web browsers --answer--\nIndexedDB can handle larger amounts of data and more complex queries --question--\n--text--\nWhich of the following is a valid way to retrieve data from an object store in IndexedDB --distractors--\nCalling retrieve() on the object store Using query() to access specific records Using fetch() method --answer--\nUsing get() on the store reference --question--\n--text--\nWhat type of transactions does IndexedDB support --distractors--\nRead transactions only Asynchronous transactions only Synchronous transactions only --answer--\nRead and write transactions --question--\n--text--\nWhich of the following is true about the lifecycle of a Service Worker --distractors--\nService Workers run in the main thread of the web application Service Workers can be activated before they are installed Service Workers can only run when the web application is open in the browser --answer--\nA Service Worker can intercept network requests after it has been activated --question--\n--text--\nWhich statement best describes a key feature of Progressive Web Apps (PWAs) --distractors--\nPWAs can only be installed on mobile devices PWAs are required to have a backend server PWAs can only be accessed through specific browsers --answer--\nPWAs provide offline functionality through Service Workers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7144,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-local-storage-and-crud\\66edd3f9bef926f129990425.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "12e2954bcd4f027dd6f0a95810bfb632",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f41268a129e63f8e071736\ntitle: Loops and Sequences Quiz\nchallengeType: 8\ndashedName: quiz-loops-and-sequences\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is the correct syntax for a list --distractors--\npy\ncities = //'Los Angeles', 'London', 'Tokyo'\\\\\npy\ncities = {'Los Angeles', 'London', 'Tokyo'}\npy\ncities = <'Los Angeles', 'London', 'Tokyo'>\n--answer--\npy\ncities = ['Los Angeles', 'London', 'Tokyo']\n--question--\n--text--\nWhat will be printed to the console py\ncities = ['Los Angeles', 'London', 'Tokyo']\nprint(cities[-1])\n--distractors--\n'None'\n'Los Angeles'\n'London'\n--answer--\n'Tokyo'\n--question--\n--text--\nWhat is an iterable --distractors--\nIt is a special type of string that can hold a large amount of characters It is a special type of number used to represent really large values It is a special data type mainly used in classes and special functions --answer--\nIt is a special type of object that can be looped over one item at a time --question--\n--text--\nWhat will the following print to the console ```py\ndeveloper = 'Jessica'\nprint(list(developer))\n```\n--distractors--\n'J', 'e', 's', 's', 'i', 'c', 'a'\n{'J', 'e', 's', 's', 'i', 'c', 'a'}\n<'J', 'e', 's', 's', 'i', 'c', 'a'>\n--answer--\n['J', 'e', 's', 's', 'i', 'c', 'a']\n--question--\n--text--\nWhich of the following is used to get the number of elements in a list --distractors--\nlist()\nlong()\nlength()\n--answer--\nlen()\n--question--\n--text--\nWhat happens if you try to pass in an index (either positive or negative) that is out of bounds for a list --distractors--\nYou will receive a SyntaxError You will receive a RangeError",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "db6343acc46c64a4066dc813ff6f9d0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'i', 'c', 'a'} <'J', 'e', 's', 's', 'i', 'c', 'a'> --answer-- ['J', 'e', 's', 's', 'i', 'c', 'a'] --question-- --text-- Which of the following is used to get the number of elements in a list --distractors-- list() long() length() --answer-- len() --question-- --text-- What happens if you try to pass in an index (either positive or negative) that is out of bounds for a list --distractors-- You will receive a SyntaxError You will receive a RangeErrorYou will receive a TypeError --answer--\nYou will receive an IndexError --question--\n--text--\nWhat will be printed to the console py\ndesserts = ['Cake', 'Cookies', 'Ice Cream', 'Pie']\nprint(desserts[1:3])\n--distractors--\n['Cake', 'Cookies', 'Ice Cream', 'Pie']\n['Cake', 'Cookies']\n['Cake', 'Cookies', 'Cookies', 'Ice Cream']\n--answer--\n['Cookies', 'Ice Cream']\n--question--\n--text--\nWhich of the following methods is used to add an item to the end of a list --distractors--\nadd()\npop()\npush()\n--answer--\nappend()\n--question--\n--text--\nWhat will be printed to the console ```py\nnumbers = [1, 2, 3, 4, 5]\neven_numbers = [6, 8, 10]\nnumbers extend(even_numbers)\nprint(numbers)\n```\n--distractors--\n[2, 3, 4, 5, 6, 8, 10]\n[5, 6, 8, 10]\n[1, 2, 3, 4]\n--answer--\n[1, 2, 3, 4, 5, 6, 8, 10]\n--question--\n--text--\nWhich of the following methods is used to insert an element at a specific index in a list --distractors--\npush()\nadd()\nplace()\n--answer--\ninsert()\n--question--\n--text--\nWhat will be printed to the console ```py\nnumbers = [1, 2, 3, 4, 5, 5, 5]\nnumbers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "80e4e98df415b84c8aebbe00ce3e551d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "10] numbers extend(even_numbers) print(numbers) ``` --distractors-- [2, 3, 4, 5, 6, 8, 10] [5, 6, 8, 10] [1, 2, 3, 4] --answer-- [1, 2, 3, 4, 5, 6, 8, 10] --question-- --text-- Which of the following methods is used to insert an element at a specific index in a list --distractors-- push() add() place() --answer-- insert() --question-- --text-- What will be printed to the console ```py numbers = [1, 2, 3, 4, 5, 5, 5] numbersremove(5)\nprint(numbers)\n```\n--distractors--\n[1, 2, 3, 4]\n[1, 2, 3, 4, 5, 5, 5]\n[1, 2, 3, 4, 5]\n--answer--\n[1, 2, 3, 4, 5, 5]\n--question--\n--text--\nWhich of the following methods is used to empty a list --distractors--\npop()\nempty()\nremove()\n--answer--\nclear()\n--question--\n--text--\nWhat is a tuple --distractors--\nIt is a mutable data type of a random sequence of values It is a special data type used to represent large numbers It is a method used to add elements to a list --answer--\nIt is an immutable ordered sequence of values --question--\n--text--\nWhich of the following is the correct way to unpack items from a tuple --distractors--\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\n(name, age, job) <= developer\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\n<<name, age, job>> = developer\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\nname, age, job == developer\n--answer--\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\nname, age, job = developer\n--question--\n--text--\nWhat will be the result of the following code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c6c822188519ecd8de0f4a69e70f4aee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- Which of the following is the correct way to unpack items from a tuple --distractors-- py developer = ('Alice', 34, 'Rust Developer') (name, age, job) <= developer py developer = ('Alice', 34, 'Rust Developer') <<name, age, job>> = developer py developer = ('Alice', 34, 'Rust Developer') name, age, job == developer --answer-- py developer = ('Alice', 34, 'Rust Developer') name, age, job = developer --question-- --text-- What will be the result of the following codepy\ndeveloper = ('Jane Doe', 23, 'Python Developer')\ndel developer[1]\n--distractors--\nIt will produce a RangeError Nothing will happen It will create an infinite loop --answer--\nIt will produce a TypeError --question--\n--text--\nWhat will be the result for the following code py\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python')\nprogramming_languages index('Python', 3)\n--distractors--\n2\n6\n0\n--answer--\n5\n--question--\n--text--\nWhich of the following functions is used to create a new list of the sorted values --distractors--\nhas_sort()\nsort()\nis_sorted()\n--answer--\nsorted()\n--question--\n--text--\nWhich of the following is the correct way to use a for loop --distractors--\n```py\nprogramming_languages = ['Rust', 'Java', 'Python', 'C++']\nfor language in programming_languages [\nprint(language)\n]\n```\n```py\nprogramming_languages = ['Rust', 'Java', 'Python', 'C++']\nfor language of programming_languages:\nprint(language)\n```\n```py\nprogramming_languages = ['Rust', 'Java', 'Python', 'C++']\nfor language in programming_languages {\nprint(language)\n}\n```\n--answer--\n```py\nprogramming_languages = ['Rust', 'Java', 'Python', 'C++']\nfor language in programming_languages:\nprint(language)\n```\n--question--\n--text--\nWhich of the following functions is used to generate a sequence of integers --distractors--\nfor()\nint()\nsequence()\n--answer--\nrange()\n--question--\n--text--\nWhich of the following functions is used to iterate over multiple iterables in parallel",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "aa108a8f4c49cbe34a4b5b12d61fd75a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "['Rust', 'Java', 'Python', 'C++'] for language of programming_languages: print(language) ``` ```py programming_languages = ['Rust', 'Java', 'Python', 'C++'] for language in programming_languages { print(language) } ``` --answer-- ```py programming_languages = ['Rust', 'Java', 'Python', 'C++'] for language in programming_languages: print(language) ``` --question-- --text-- Which of the following functions is used to generate a sequence of integers --distractors-- for() int() sequence() --answer-- range() --question-- --text-- Which of the following functions is used to iterate over multiple iterables in parallel--distractors--\nmap()\nfilter()\nreduce()\n--answer--\nzip()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6376,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-loops-and-sequences\\67f41268a129e63f8e071736.md",
      "source_type": "git_repo"
    },
    "token_count": 158,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a80aa9bb927579729396043c5872b145",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-basics\\66f1a2009e65c9a40a26d51e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1a2009e65c9a40a26d51e\ntitle: React Basics Quiz\nchallengeType: 8\ndashedName: quiz-react-basics\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is not a JavaScript library or framework --distractors--\nAngular\nReact\nJQuery\n--answer--\nLaravel\n--question--\n--text--\nWhich of the following is NOT a method for conditional rendering in React --distractors--\nTernary operators Logical && operator if statements --answer--\nsetTimeout\n--question--\n--text--\nWhat is the primary purpose of adding a key prop when rendering a list in React --distractors--\nTo apply a unique CSS style to each list item To serve as the text content for the element To add an event listener to each specific item in the list --answer--\nTo help React identify items for efficient rendering --question--\n--text--\nWhere do the project's packages and libraries get installed --distractors--\nThe user directory of your computer The package json file The src folder --answer--\nThe node_modules folder --question--\n--text--\nWhich of the following is TRUE about JSX --distractors--\nJSX must always be written in separate files from JavaScript JSX cannot use JavaScript expressions JSX is not recommended for React applications --answer--\nJSX allows writing HTML within JavaScript code --question--\n--text--\nWhich of the following is a common problem with SPAs --distractors--\nServer resources are used more heavily due to constant page rendering Browser caching becomes unreliable due to frequent DOM updates Multiple page loads create inconsistent state management --answer--\nScreen readers struggle with dynamically updated content --question--\n--text--\nHow does a single-page application typically update the view --distractors--\nBy making a full server reload By reloading the entire HTML document By using server-side rendering only --answer--\nBy updating only the necessary parts of the page --question--\n--text--\nWhich of the following commands starts a React project in development mode --distractors--\nnpm run build\nnpm install\nnpm run develop\n--answer--\nnpm run dev\n--question--\n--text--\nWhich of the following is not a valid JSX element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5497,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-basics\\66f1a2009e65c9a40a26d51e.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bccff7fa1225df25c0f798e728f45acc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-basics\\66f1a2009e65c9a40a26d51e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "How does a single-page application typically update the view --distractors-- By making a full server reload By reloading the entire HTML document By using server-side rendering only --answer-- By updating only the necessary parts of the page --question-- --text-- Which of the following commands starts a React project in development mode --distractors-- npm run build npm install npm run develop --answer-- npm run dev --question-- --text-- Which of the following is not a valid JSX element--distractors--\n<div className='class'></div>\n<span>Hello World</span>\n<button>Click Me</button>\n--answer--\n<img class='img'>\n--question--\n--text--\nWhich JavaScript array method is commonly used to transform an array of data into an array of JSX elements --distractors--\nforEach()\nfilter()\nreduce()\n--answer--\nmap()\n--question--\n--text--\nWhich of the following is the best practice for passing the key prop in React --distractors--\nUse array indexes in all cases Randomly generate keys on each render Omit the key prop altogether --answer--\nUse unique and stable IDs from the data --question--\n--text--\nWhat command installs dependencies listed in package json --distractors--\nnpm run\nnpm update\nnpm build\n--answer--\nnpm install\n--question--\n--text--\nHow would you pass a name prop to a child component --distractors--\n<ChildComponent props=\"name\" />\n<ChildComponent {props} />\n<ChildComponent {'John'} />\n--answer--\n<ChildComponent name=\"Vignesh\" />\n--question--\n--text--\nWhat is the correct way to pass multiple props using the spread operator in React --distractors--\n<Child person={name , age , city } /> <Child spreader={ person} /> <Child spread={person} /> --answer--\n<Child { person} /> --question--\n--text--\nWhat are the building blocks of React --distractors--\nFunctions and Modules DOM Elements and Events Classes and Objects --answer--\nReusable Components --question--\n--text--\nWhat is the correct way to add an inline style in React --distractors--\nstyle={{ color: blue }}\nstyle=\"color: blue\"\nstyle: { color: 'blue' }\n--answer--\nstyle={{ color: 'blue' }}\n--question--\n--text--\nWhat is the correct way to conditionally render a React component --distractors--\nUsing if statements inside JSX",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5497,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-basics\\66f1a2009e65c9a40a26d51e.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3781e807a8748e9c9462353630195a2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-basics\\66f1a2009e65c9a40a26d51e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ person} /> --question-- --text-- What are the building blocks of React --distractors-- Functions and Modules DOM Elements and Events Classes and Objects --answer-- Reusable Components --question-- --text-- What is the correct way to add an inline style in React --distractors-- style={{ color: blue }} style=\"color: blue\" style: { color: 'blue' } --answer-- style={{ color: 'blue' }} --question-- --text-- What is the correct way to conditionally render a React component --distractors-- Using if statements inside JSXDeclaring a new component inside a render() method Using while loops inside JSX --answer--\nUsing ternary operators or logical && operators within JSX --question--\n--text--\nWhich keyword is used to bring a component into another file --distractors--\nrequire\ninclude\nadd\n--answer--\nimport\n--question--\n--text--\nWhat is the full meaning of SPAs --distractors--\nServer Page Architectures Selective Page Applications Static Progressive Apps --answer--\nSingle-page Applications --question--\n--text--\nWhich extension of JavaScript syntax is used to describe the UI in React --distractors--\nTSC\nHTML+\nReactML\n--answer--\nJSX",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5497,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-basics\\66f1a2009e65c9a40a26d51e.md",
      "source_type": "git_repo"
    },
    "token_count": 255,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "38d0352681249ab42e301a4e4b69176e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f41242431cbf3db8ca79c7\ntitle: Python Basics Quiz\nchallengeType: 8\ndashedName: quiz-python-basics\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following functions is used to check if a variable matches a specific data type --distractors--\nistype()\nisdata()\nisvariable()\n--answer--\nisinstance()\n--question--\n--text--\nWhich of the following is NOT a form of string concatenation --distractors--\n```py\ngreeting = 'My name is '\ndeveloper = 'Jessica'\ngreeting += developer\n```\npy\ndeveloper = 'Jessica'\ngreeting = 'My name is ' + developer + ' '\npy\ndeveloper = 'Jessica'\nage = 30\ngreeting = 'My name is ' + developer + ' and I am ' + str(age) + ' years old '\n--answer--\npy\ndeveloper = 'Jessica'\ngreeting = x'My name is {developer} '\n--question--\n--text--\nWhich of the following functions is used to return the number of the characters in the string --distractors--\npy\ncounting()\npy\nlength()\npy\niscount()\n--answer--\npy\nlen()\n--question--\n--text--\nWhat will result be in this example ```py\ndeveloper = 'Naomi'\nresult = developer endswith('N') # ```\n--distractors--\nUndefined\nTrue\nNone\n--answer--\nFalse\n--question--\n--text--\nWhat happens when you add a float and an integer --distractors--\nThe result will be an error message The result will be None The result will be an integer --answer--\nThe result will be a float --question--\n--text--\nWhich of the following is the correct way to define a function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d32acc57f36d1319c8479bf911b2fa19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--text-- What will result be in this example ```py developer = 'Naomi' result = developer endswith('N') # ``` --distractors-- Undefined True None --answer-- False --question-- --text-- What happens when you add a float and an integer --distractors-- The result will be an error message The result will be None The result will be an integer --answer-- The result will be a float --question-- --text-- Which of the following is the correct way to define a function--distractors--\npy\ndefine get_sum(num_1, num_2) {\nreturn num_1 + num_2\n}\npy\nset get_sum(num_1, num_2):\nreturn num_1 + num_2\npy\nfunction get_sum(num_1, num_2) {\nreturn num_1 + num_2\n}\n--answer--\npy\ndef get_sum(num_1, num_2):\nreturn num_1 + num_2\n--question--\n--text--\nWhat will be printed to the console ```py\ndef greet():\npass\nprint(greet()) # ```\n--distractors--\nTypeError\nRangeError\nNull\n--answer--\nNone\n--question--\n--text--\nWhich of the following statements is false when naming variables --distractors--\nVariable names can only start with a letter or an underscore (_), not a number Variable names can only contain alphanumeric characters (a-z, A-Z, 0-9) and underscores (_) Variable names cannot be one of Python's reserved keywords such as if, class, or def --answer--\nVariable names must have a max length of 10 characters, otherwise Python will throw an error --question--\n--text--\nWhich of the following is NOT a supported data type in Python --distractors--\nNone\nint\nfloat\n--answer--\nGeneric\n--question--\n--text--\nWhich of the following will return a new string with all characters converted to uppercase --distractors--\n```py\ndeveloper = 'Jessica'\nprint(developer isupper()) # JESSICA\n```\n```py\ndeveloper = 'Jessica'\nprint(developer up()) # JESSICA\n```\n```py\ndeveloper = 'Jessica'\nprint(developer toUpper()) # JESSICA\n```\n--answer--\n```py\ndeveloper = 'Jessica'\nprint(developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "2c54d13fd0a11b1fa64036c5894d2a08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Python will throw an error --question-- --text-- Which of the following is NOT a supported data type in Python --distractors-- None int float --answer-- Generic --question-- --text-- Which of the following will return a new string with all characters converted to uppercase --distractors-- ```py developer = 'Jessica' print(developer isupper()) # JESSICA ``` ```py developer = 'Jessica' print(developer up()) # JESSICA ``` ```py developer = 'Jessica' print(developer toUpper()) # JESSICA ``` --answer-- ```py developer = 'Jessica' print(developerupper()) # JESSICA\n```\n--question--\n--text--\nWhich of the following functions is used to get input from a user --distractors--\nread()\ncout()\nprompt()\n--answer--\ninput()\n--question--\n--text--\nWhat will be the result for the following code ```py\nmessage = 'Python is fun '\nprint(message[0:6])  # ```\n--distractors--\n'Py'\n'fun'\n'is'\n--answer--\n'Python'\n--question--\n--text--\nWhat does the split() method do --distractors--\nThis method is used to split a tuple into a list of substrings This method is used to split a float into a list of substrings This method is used to split a dictionary into a list of substrings --answer--\nThis method is used to split a string into a list of substrings --question--\n--text--\nWhat will the following print to the console ```py\nexample_list = ['example', 'dashed', 'name']\njoined_str = ' ' join(example_list)\nprint(joined_str)  # ```\n--distractors--\nTypeError\n'dashed name'\nNone\n--answer--\n'example dashed name'\n--question--\n--text--\nWhich of the following functions is used to create a table of 1 to 1 character mappings for translation --distractors--\nstr translations()\nstr gettranslate()\nstr tran()\n--answer--\nstr maketrans()\n--question--\n--text--\nWhat will be the result for the following code ```py\nint_1 = 4\nint_2 = 2\nprint(int_1 ** int_2) #",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "58fa46357c4ae3e1bab3d03bd42c7d28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "```py example_list = ['example', 'dashed', 'name'] joined_str = ' ' join(example_list) print(joined_str) # ``` --distractors-- TypeError 'dashed name' None --answer-- 'example dashed name' --question-- --text-- Which of the following functions is used to create a table of 1 to 1 character mappings for translation --distractors-- str translations() str gettranslate() str tran() --answer-- str maketrans() --question-- --text-- What will be the result for the following code ```py int_1 = 4 int_2 = 2 print(int_1 ** int_2) #```\n--distractors--\n8\n2\n4\n--answer--\n16\n--question--\n--text--\nWhat will be returned from the find() method if no substring occurrences are found in a string --distractors--\n-2\n1\n0\n--answer--\n-1\n--question--\n--text--\nWhich of the following functions is used to count the times a substring appears in a string --distractors--\ncounter()\nhascount()\ncounting()\n--answer--\ncount()\n--question--\n--text--\nWhat does floor division do in Python --distractors--\nThis operator is used to multiply two numbers and round up the result to the nearest whole number This operator is used to convert a float to an integer This operator is used to raise a number to the power of another --answer--\nThis operator is used to divide two numbers and round down the result to the nearest whole number --question--\n--text--\nWhich of the following functions is used to round a number to the nearest whole integer --distractors--\nfloor()\nceil()\nfloat()\n--answer--\nround()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6167,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-python-basics\\67f41242431cbf3db8ca79c7.md",
      "source_type": "git_repo"
    },
    "token_count": 360,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d96c4f61845717cc35234f8de7d66420",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-recursion\\66edd43cded6bff30944b676.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66edd43cded6bff30944b676\ntitle: Recursion Quiz\nchallengeType: 8\ndashedName: quiz-recursion\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is recursion in programming --distractors--\nA method of sorting arrays A loop that never ends A function that returns undefined --answer--\nA process in which a function calls itself --question--\n--text--\nWhich of the following is an example of recursion --distractors--\n```js\nfunction factorial(n) {\nlet result = 1;\nwhile (n > 0) {\nresult = result * n;\nn--;\n}\nreturn result;\n}\n```\njs\nfunction factorial(n) {\nconst arr = Array(n) fill() map((_, i) => i + 1);\nreturn arr reduce((acc, curr) => acc * curr, 1);\n}\n```js\nfunction factorial(n) {\nlet result = 1;\nfor (let i = n; i > 0; i--) {\nresult *= i;\n}\nreturn result;\n}\n```\n--answer--\njs\nfunction factorial(n) {\nif (n === 0 || n === 1) {\nreturn 1;\n}\nreturn n * factorial(n - 1);\n}\n--question--\n--text--\nWhat will the following function return js\nfunction sum(n) {\nif (n === 0) return 0;\nreturn n + sum(n - 1);\n}\nsum(3);\n--distractors--\n3\n0\n1\n--answer--\n6\n--question--\n--text--\nHow many times will the mystery function be called javascript\nfunction mystery(n) {\nif (n <= 1) return 1;\nreturn mystery(n - 2);\n}\nmystery(5);\n--distractors--\n2\n5\n4\n--answer--\n3\n--question--\n--text--\nWhich of the following is true about recursion --distractors--\nIt should never have a base case It should only be used for the fibonacci sequence It should only be used for factorials --answer--\nIt should always have a base case --question--\n--text--\nWhich of the following options would be an appropriate base case for the given example ```js\nfunction countDownToZero(number) {\n// Base case goes here console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-recursion\\66edd43cded6bff30944b676.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0771d70261d90458dba4e66e97470606",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-recursion\\66edd43cded6bff30944b676.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "mystery(5); --distractors-- 2 5 4 --answer-- 3 --question-- --text-- Which of the following is true about recursion --distractors-- It should never have a base case It should only be used for the fibonacci sequence It should only be used for factorials --answer-- It should always have a base case --question-- --text-- Which of the following options would be an appropriate base case for the given example ```js function countDownToZero(number) { // Base case goes here consolelog(number);\ncountDownToZero(number - 1);\n}\n```\n--distractors--\njs\nif (number > 0) {\nreturn;\n}\njs\nif (number == 0) {\nreturn;\n}\njs\nif (number === 0) {\nreturn;\n}\n--answer--\njs\nif (number < 0) {\nreturn;\n}\n--question--\n--text--\nWhy must recursion have a base case --distractors--\nTo ensure the function always has a return value To reduce the number of function calls To ensure all recursive calls are executed in the correct order and a RecursionError is not thrown --answer--\nTo provide a way for the function to break out of its recursive calls and prevent infinite loops --question--\n--text--\nWhat will this recursive function do js\nfunction repeatString(str) {\nreturn str + repeatString(str);\n}\n--distractors--\nReturn the string twice Return undefined Create an empty string --answer--\nCause a stack overflow --question--\n--text--\nWhat is a call stack --distractors--\nA list of function calls that have been executed A list of values that were returned by a function A special function used to call a function exactly three times --answer--\nA data structure that keeps track of function calls and their execution order --question--\n--text--\nWhat does this recursive function do js\nfunction changeString(str) {\nif (str === \"\") return \"\";\nreturn changeString(str slice(1)) + str[0];\n}\n--distractors--\nDuplicates a string Removes vowels Removes spaces --answer--\nReverses a string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-recursion\\66edd43cded6bff30944b676.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6bef785a06161e9d3cb1fdeb5b533b08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1ad049d7a6ac0886cc2ba\ntitle: React Forms, Data Fetching and Routing Quiz\nchallengeType: 8\ndashedName: quiz-react-forms-data-fetching-and-routing\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is an example of a controlled input --distractors--\njsx\n<input id=\"name\" type=\"text\" />\njsx\n<input id=\"name\" onChange={handleChange} type=\"text\" />\njsx\n<input value=\"\" id=\"name\" type=\"text\" />\n--answer--\njsx\n<input value={name} id=\"name\" onChange={handleChange} type=\"text\" />\n--question--\n--text--\nWhich of the following is an example of an uncontrolled input --distractors--\njsx\n<input type=\"text\" references={nameRef} id=\"name\" />\njsx\n<input type=\"text\" refs={nameRef} id=\"name\" />\njsx\n<input type=\"text\" reference={nameRef} id=\"name\" />\n--answer--\njsx\n<input type=\"text\" ref={nameRef} id=\"name\" />\n--question--\n--text--\nWhich of the following is NOT a commonly used way to fetch data in React --distractors--\nSWR\nAxios\nFetch API\n--answer--\nRedux\n--question--\n--text--\nWhich of the following hooks is commonly associated with fetching data in React --distractors--\nuseParams\nuseContext\nuseReducer\n--answer--\nuseEffect\n--question--\n--text--\nWhat is memoization --distractors--\nA common algorithm used to find the shortest path between two vertices in a graph A special technique used to optimize the performance for all controlled and uncontrolled inputs A divide and conquer algorithm used to recursively sort sub arrays and merge them together --answer--\nAn optimization technique in which the result of expensive function calls are cached (remembered) based on specific arguments --question--\n--text--\nWhich of the following hooks is used to memoize computed values --distractors--\nuseParams\nuseEffect\nuseState\n--answer--\nuseMemo\n--question--\n--text--\nWhich of the following uses the correct hook to memoize function references",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "3882442d94bf3707be6fc0a045acf164",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "optimize the performance for all controlled and uncontrolled inputs A divide and conquer algorithm used to recursively sort sub arrays and merge them together --answer-- An optimization technique in which the result of expensive function calls are cached (remembered) based on specific arguments --question-- --text-- Which of the following hooks is used to memoize computed values --distractors-- useParams useEffect useState --answer-- useMemo --question-- --text-- Which of the following uses the correct hook to memoize function references--distractors--\njs\nuseContext(() => {\n// code goes here\n}, [dependency]);\njs\nuseParams(() => {\n// code goes here\n}, [dependency]);\njs\nuseState(() => {\n// code goes here\n}, [dependency]);\n--answer--\njs\nuseCallback(() => {\n// code goes here\n}, [dependency]);\n--question--\n--text--\nWhat is a dependency --distractors--\nA dependency is a commonly used testing library used in React applications A dependency is a type of React component that only runs on the server A dependency is a special compiler used in React applications to compile the React code into JavaScript --answer--\nA dependency is where one component or module in an application relies on another to function properly --question--\n--text--\nWhat is a package manager --distractors--\nA tool used to update third-party packages installed in applications A tool used to manage packages solely created within a project A tool used to move dependencies out of the node_modules folder and into a special config folder --answer--\nA tool used for installation, updates and removal of dependencies --question--\n--text--\nWhich of the following is NOT a commonly used package manager in the JavaScript ecosystem --distractors--\npnpm\nYarn\nnpm\n--answer--\nJest\n--question--\n--text--\nWhich of the following is a key configuration file that contains metadata about your project --distractors--\nconfig json\nlint json\nnode_modules json\n--answer--\npackage json\n--question--\n--text--\nWhich of the following is a commonly used React framework --distractors--\nDjango\nWebpack\nGulp\n--answer--\nRemix\n--question--\n--text--\nWhich of the following is the correct way to add routes to your React application using React Router",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "074a8188efadf37ffab76d220f34c18a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "manager in the JavaScript ecosystem --distractors-- pnpm Yarn npm --answer-- Jest --question-- --text-- Which of the following is a key configuration file that contains metadata about your project --distractors-- config json lint json node_modules json --answer-- package json --question-- --text-- Which of the following is a commonly used React framework --distractors-- Django Webpack Gulp --answer-- Remix --question-- --text-- Which of the following is the correct way to add routes to your React application using React Router--distractors--\njsx\n<StrictMode>\n<AddRouter>\n<Routes>\n<Route path=\"/\" element={<App />} />\n</Routes>\n</AddRouter>\n</StrictMode>\njsx\n<StrictMode>\n<ContextRouter>\n<Routes>\n<Route path=\"/\" element={<App />} />\n</Routes>\n</ContextRouter>\n</StrictMode>\njsx\n<StrictMode>\n<SetRoute>\n<Routes>\n<Route path=\"/\" element={<App />} />\n</Routes>\n</SetRoute>\n</StrictMode>\n--answer--\njsx\n<StrictMode>\n<BrowserRouter>\n<Routes>\n<Route path=\"/\" element={<App />} />\n</Routes>\n</BrowserRouter>\n</StrictMode>\n--question--\n--text--\nWhich of the following is the correct way to create a dynamic route in React Router --distractors--\njsx\n<Route path=\" category\" element={<Category />} />\njsx\n<Route path=\"<category\" element={<Category />} />\njsx\n<Route path=\"/category\" element={<Category />} />\n--answer--\njsx\n<Route path=\":category\" element={<Category />} />\n--question--\n--text--\nWhich of the following hooks is used to access the dynamic parameters from a URL path --distractors--\nuseParameterized\nusePar\nuseParameters\n--answer--\nuseParams\n--question--\n--text--\nWhich of the following is the correct way to create a custom request handler in Next js --distractors--\n```js\nexport async function SERVE() {\nconst res = await fetch(\"https://example-api com\");\nconst data = await res json();\nreturn Response json({ data });\n}\n```\n```js\nexport async function FETCH() {\nconst res = await fetch(\"https://example-api com\");\nconst data = await res json();\nreturn Response json({ data });\n}\n```\n```js\nexport async function SET() {\nconst res = await fetch(\"https://example-api com\");\nconst data = await res json();\nreturn Response",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2bcf94063a47e51960f1a15e19234cd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "request handler in Next js --distractors-- ```js export async function SERVE() { const res = await fetch(\"https://example-api com\"); const data = await res json(); return Response json({ data }); } ``` ```js export async function FETCH() { const res = await fetch(\"https://example-api com\"); const data = await res json(); return Response json({ data }); } ``` ```js export async function SET() { const res = await fetch(\"https://example-api com\"); const data = await res json(); return Responsejson({ data });\n}\n```\n--answer--\n```js\nexport async function GET() {\nconst res = await fetch(\"https://example-api com\");\nconst data = await res json();\nreturn Response json({ data });\n}\n```\n--question--\n--text--\nWhat is prop drilling --distractors--\nThe process of creating a reducer that specifies how state should change in response to particular props used The process of passing props from child component up to the parent component The process of creating a context provider for a React application and using that to send props from parent to child components --answer--\nThe process of passing props from a parent component to deeply nested child components, even when some of the child components don't need the props --question--\n--text--\nWhich of the following is NOT a commonly used state management solution for React applications --distractors--\nContext API\nZustand\nRedux\n--answer--\nSpring\n--question--\n--text--\nWhat are the React Developer Tools used for --distractors--\nThese tools are used to only check for accessibility issues in React applications These tools are used to add additional tests for React components These tools are used to memoize all React components inside the application --answer--\nThese tools are used to inspect React components and identify performance issues --question--\n--text--\nWhat are React Server Components --distractors--\nThese are components that manage context exclusively on the server These are memoized components that render exclusively on the server These are components that manage state exclusively on the server --answer--\nThese are components that render exclusively on the server",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7957,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-forms-data-fetching-and-routing\\66f1ad049d7a6ac0886cc2ba.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4615b5c5d79f175040c0691255770848",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1a417757b6ca4eecd89d6\ntitle: React State and Hooks Quiz\nchallengeType: 8\ndashedName: quiz-react-state-and-hooks\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich of the following is the correct way to add a click event to a button in React --distractors--\njsx\n<button onClick={{ handleLoginClick }} />\njsx\n<button onclick={handleLoginClick} />\njsx\n<button onClick={handleLoginClick()} />\n--answer--\njsx\n<button onClick={handleLoginClick} />\n--question--\n--text--\nWhat is a React Synthetic Event --distractors--\nA type of JSX element for inputs and submit events only A type of JSX element for submit events only A way to alter the bubbling phase of event propagation to be more user friendly --answer--\nA wrapper around native events like click and submit events --question--\n--text--\nWhich of the following is a common prefix used for naming event handler functions --distractors--\nisHandling\nhasHandled\nhandling\n--answer--\nhandle\n--question--\n--text--\nWhat are the three major stages in React's rendering --distractors--\nHandshake, loading and hydration Fetching, decoding and execution Mounting, updating and unmounting --answer--\nTriggering, rendering and committing --question--\n--text--\nWhich of the following is the correct way to work with the useState hook --distractors--\njs\nconst [count, setCount] = useState<0>;\njs\nconst <count, setCount> = useState(0);\njs\nconst count, setCount = useState(0);\n--answer--\njs\nconst [count, setCount] = useState(0);\n--question--\n--text--\nWhich of the following is NOT a valid attribute used for handling React events --distractors--\nonChange\nonClick\nonSubmit\n--answer--\nonHandle\n--question--\n--text--\nWhich of the following is the correct way to update array state js\nconst [certificates, setCertificates] = useState([]);\n--distractors--\njs\nsetCertificates(previousItems => previousItems, \"Front End\");\njs\nsetCertificates push(\"Front End\");\njs\nsetCertificates() append(\"Front End\");\n--answer--\njs\nsetCertificates(previousItems => [",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "cf2817bf1c75c2440955bc5655ac319d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "useState(0); js const count, setCount = useState(0); --answer-- js const [count, setCount] = useState(0); --question-- --text-- Which of the following is NOT a valid attribute used for handling React events --distractors-- onChange onClick onSubmit --answer-- onHandle --question-- --text-- Which of the following is the correct way to update array state js const [certificates, setCertificates] = useState([]); --distractors-- js setCertificates(previousItems => previousItems, \"Front End\"); js setCertificates push(\"Front End\"); js setCertificates() append(\"Front End\"); --answer-- js setCertificates(previousItems => [previousItems, \"Front End\"]);\n--question--\n--text--\nWhat is wrong with this function js\nfunction updateSpaceship() {\nsetSpaceship(previousState => ({\nname: \"Discovery\"\n}));\n}\n--distractors--\nUpdating a useState variable is not allowed inside a nested function previousState needs to be surrounded by parenthesis Arrow functions should not be used inside a state setter function --answer--\npreviousState must be spread before name to ensure any other properties are not overwritten --question--\n--text--\nWhich of the following is the correct way to update state to remove items from an array --distractors--\njs\nconst removeItem = (id) => {\nsetItems((prevItems) => prevItems reduce((item) => item id));\n};\njs\nconst removeItem = (id) => {\nsetItems((prevItems) => prevItems map((item) => item id == id));\n};\njs\nconst removeItem = (id) => {\nsetItems(() => delete item id == id);\n};\n--answer--\njs\nconst removeItem = (id) => {\nsetItems((prevItems) => prevItems filter((item) => item id == id));\n};\n--question--\n--text--\nWhat is the ref attribute typically used for in React --distractors--\nIt is used to audit for performance issues in react components It is used to audit for accessibility issues in react components It is used to remove DOM nodes --answer--\nIt is used to access a DOM node --question--\n--text--\nWhich of the following is the correct way to access the current value for a ref --distractors--\njs\nconst inputRef = useRef(null);\ninputRef initial\njs\nconst inputRef = useRef(null);\ninputRef",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f93d0f5d1a43ad4637d73531ce81e3a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "typically used for in React --distractors-- It is used to audit for performance issues in react components It is used to audit for accessibility issues in react components It is used to remove DOM nodes --answer-- It is used to access a DOM node --question-- --text-- Which of the following is the correct way to access the current value for a ref --distractors-- js const inputRef = useRef(null); inputRef initial js const inputRef = useRef(null); inputRefval\njs\nconst inputRef = useRef(null);\ninputRef curr\n--answer--\njs\nconst inputRef = useRef(null);\ninputRef current\n--question--\n--text--\nHow many times will this message be logged to the console js\nuseEffect(() => {\nconsole log(\"Nice work \");\n}, []);\n--distractors--\nThree times Twice None as the dependency array is empty --answer--\nOnly once on initial render --question--\n--text--\nWhat are React custom hooks typically used for --distractors--\nThey are used to execute an app's most complex functionality They are not typically used, built-in hooks are preferred They replace life cycle methods from previous versions of React --answer--\nThey are helpful for reusing stateful logic across components --question--\n--text--\nHow many times will this message get logged to the console js\nuseEffect(() => {\nconsole log(\"I love freeCodeCamp \");\n});\n--distractors--\nIt will be logged anytime a form is submitted or a click event happens It will be logged twice It will only get logged once --answer--\nIt will be logged each time the component renders --question--\n--text--\nWhich of the following is the correct way to prevent a browser refresh for an onSubmit event --distractors--\n```jsx\nfunction handleSubmit(event) {\nevent defaultPrevent();\nconsole log(\"Form submitted \");\n}\nSubmit\n;\n```\n```jsx\nfunction handleSubmit(event) {\nevent Default();\nconsole log(\"Form submitted \");\n}\nSubmit\n;\n```\n```jsx\nfunction handleSubmit(event) {\nevent prevent();\nconsole log(\"Form submitted \");\n}\nSubmit\n;\n```\n--answer--\n```jsx\nfunction handleSubmit(event) {\nevent preventDefault();\nconsole log(\"Form submitted \");\n}\nSubmit\n;\n```\n--question--\n--text--\nWhich of the following hooks is typically used to fetch data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "b41e3f1534593c5a66e4ae5d40350110",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "refresh for an onSubmit event --distractors-- ```jsx function handleSubmit(event) { event defaultPrevent(); console log(\"Form submitted \"); } Submit ; ``` ```jsx function handleSubmit(event) { event Default(); console log(\"Form submitted \"); } Submit ; ``` ```jsx function handleSubmit(event) { event prevent(); console log(\"Form submitted \"); } Submit ; ``` --answer-- ```jsx function handleSubmit(event) { event preventDefault(); console log(\"Form submitted \"); } Submit ; ``` --question-- --text-- Which of the following hooks is typically used to fetch data--distractors--\nuseReducer\nuseState\nuseDebounce\n--answer--\nuseEffect\n--question--\n--text--\nWhich of the following is NOT a valid property on the native Event object --distractors--\ncurrentTarget\ntype\ntarget\n--answer--\nprop\n--question--\n--text--\nWhich of the following rendering stages occurs when React detects that something has changed and the user interface (UI) might need to be updated --distractors--\nsetter\ncommit\nloop\n--answer--\ntrigger\n--question--\n--text--\nWhich of the following stages refers to when React takes the prepared changes from the virtual DOM and applies them to the real DOM --distractors--\ntrigger\nrender\nsetter\n--answer--\ncommit\n--question--\n--text--\nWhat is the purpose of the dependencies in a useEffect js\nuseEffect(() => {\n// Your side effect logic (usually a function) goes here\n}, [dependencies]);\n--distractors--\nThe optional dependencies argument does not effect anything dealing with the useEffect The optional dependencies argument makes the effect run on an infinite loop The optional dependencies argument is used to prevent the effect from running --answer--\nThe optional dependencies argument controls when the effect runs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7882,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-react-state-and-hooks\\66f1a417757b6ca4eecd89d6.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "7249bb3229b8ac3cb991296033a4eaa0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-searching-and-sorting-algorithms\\67f4136110dddb491be2e90a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f4136110dddb491be2e90a\ntitle: Searching and Sorting Algorithms Quiz\nchallengeType: 8\ndashedName: quiz-searching-and-sorting-algorithms\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhich search algorithm iterates through a list of items, checking each item from the beginning until the target item is found --distractors--\nMerge search\nBubble search\nBinary search\n--answer--\nLinear search\n--question--\n--text--\nWhich technique is used to break down a problem into smaller sub-problems --distractors--\nBreak-down-and-solve\nDivide-and-solve\nBreak-down-and-conquer\n--answer--\nDivide-and-conquer\n--question--\n--text--\nWhat is the space complexity of the linear search algorithm --distractors--\nO(n)\nO(log n)\nO(n²)\n--answer--\nO(1)\n--question--\n--text--\nWhich is more suitable for a larger list of items between binary search and linear search --distractors--\nBoth\nLinear search\nNone\n--answer--\nBinary search\n--question--\n--text--\nWhat is the space complexity of binary search --distractors--\nO(log n)\nO(n)\nO(n log n)\n--answer--\nO(1)\n--question--\n--text--\nWhat does the binary search algorithm return when it finds the target item --distractors--\nThe value of the target item The size of the list searched A boolean value of the target --answer--\nThe index of the target item --question--\n--text--\nWhat does the linear search algorithm return if it doesn't find the target item --distractors--\n0\nNull\nUndefined\n--answer--\n-1\n--question--\n--text--\nHow does the merge sort algorithm work --distractors--\nIt searches for an element by checking each item one by one It builds a sorted list by repeatedly finding the smallest element It swaps adjacent elements until the list is sorted --answer--\nIt recursively splits the list into smaller items, then merges them in sorted order --question--\n--text--\nWhat is the condition for a binary search to work --distractors--\nThe list must contain only unique values The list must be sorted in descending order The list must contain no negative numbers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2778,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-searching-and-sorting-algorithms\\67f4136110dddb491be2e90a.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "895e148407503233b5b6951302ee343a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-searching-and-sorting-algorithms\\67f4136110dddb491be2e90a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "checking each item one by one It builds a sorted list by repeatedly finding the smallest element It swaps adjacent elements until the list is sorted --answer-- It recursively splits the list into smaller items, then merges them in sorted order --question-- --text-- What is the condition for a binary search to work --distractors-- The list must contain only unique values The list must be sorted in descending order The list must contain no negative numbers--answer--\nThe list must be sorted in ascending order --question--\n--text--\nWhich computer science approach is used to implement the merge sort algorithm --distractors--\nDynamic programming\nGreedy algorithm\nTracing\n--answer--\nDivide-and-conquer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2778,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-searching-and-sorting-algorithms\\67f4136110dddb491be2e90a.md",
      "source_type": "git_repo"
    },
    "token_count": 139,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "40fd6e420c2f4324ad85f5161d9b7a68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-relational-database\\66f1af82732957c895f0b21a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1af82732957c895f0b21a\ntitle: Relational Database Quiz\nchallengeType: 8\ndashedName: quiz-relational-database\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is a relational database --distractors--\nA database structured to recognize non-relation between stored items A database that stores unstructured data A flat file-based system --answer--\nA database structured to recognize and manage relationships between data in tables --question--\n--text--\nHow does a non-relational database differ from a relational database --distractors--\nNon-relational databases use tables, while relational databases do not Relational databases can store unstructured data Non-relational databases are slower than relational databases --answer--\nNon-relational databases can store unstructured data --question--\n--text--\nWhat does the \\l command do when executed in the PostgreSQL interactive terminal (psql) --distractors--\nLists all schemas Lists all tables Connects to a database --answer--\nLists all databases --question--\n--text--\nWhich of the following commands creates a new table in SQL --distractors--\nADD TABLE\nNEW TABLE\nALTER TABLE\n--answer--\nCREATE TABLE\n--question--\n--text--\nWhat is the purpose of a foreign key in a relational database --distractors--\nTo allow duplication of data To uniquely identify a row in the table To store large amounts of text data --answer--\nTo create a relationship between two tables --question--\n--text--\nWhich command will add a new column to an existing table --distractors--\nADD COLUMN column_name TO table_name data_type;\nINSERT COLUMN column_name INTO table_name data_type;\nMODIFY TABLE table_name ADD COLUMN column_name data_type;\n--answer--\nALTER TABLE table_name ADD COLUMN column_name data_type;\n--question--\n--text--\nWhat type of relationship exists when one record in Table A corresponds to one or more records in Table B --distractors--\nOne-to-One (1-1)\nMany-to-Many (m-m)\nMany-to-one(m-1)\n--answer--\nOne-to-Many (1-m)\n--question--\n--text--\nWhat is a query --distractors--\nA request to remove all data from the database A special row for unique values in a database A special column for unique values in a database",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5877,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-relational-database\\66f1af82732957c895f0b21a.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "faaeab8e1f0183c0bd1d159a2c96a09a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-relational-database\\66f1af82732957c895f0b21a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "COLUMN column_name data_type; --answer-- ALTER TABLE table_name ADD COLUMN column_name data_type; --question-- --text-- What type of relationship exists when one record in Table A corresponds to one or more records in Table B --distractors-- One-to-One (1-1) Many-to-Many (m-m) Many-to-one(m-1) --answer-- One-to-Many (1-m) --question-- --text-- What is a query --distractors-- A request to remove all data from the database A special row for unique values in a database A special column for unique values in a database--answer--\nA request for specific data from the database --question--\n--text--\nHow do you delete a column from a table in SQL --distractors--\nREMOVE COLUMN column_name FROM table_name;\nDELETE COLUMN column_name FROM table_name;\nMODIFY TABLE table_name DELETE column_name;\n--answer--\nALTER TABLE table_name DROP COLUMN column_name;\n--question--\n--text--\nWhat is the function of the PRIMARY KEY constraint in SQL --distractors--\nTo link two tables together To define the default value for a column To allow null values in the column --answer--\nTo ensure that the column contains unique values --question--\n--text--\nWhat does the command \\c do in the PostgreSQL interactive terminal (psql) --distractors--\nLists all tables in the current database Displays the current database connection details Exits the psql shell --answer--\nConnects to the specified database --question--\n--text--\nWhat is a composite key in a relational database --distractors--\nA key that is derived from another key A key that changes frequently based on data updates A key used exclusively for foreign key relationships --answer--\nA key that is composed of multiple columns to uniquely identify a record --question--\n--text--\nWhich command inserts data into a table --distractors--\nPUT VALUES\nUPDATE INTO\nADD DATA\n--answer--\nINSERT INTO\n--question--\n--text--\nHow do you rename a column in SQL --distractors--\nMODIFY COLUMN\nCHANGE COLUMN\nALTER COLUMN\n--answer--\nRENAME COLUMN\n--question--\n--text--\nWhich query will delete all records from the employees table --distractors--\nREMOVE ALL\nTRUNCATE employees\nDROP RECORDS\n--answer--\nDELETE FROM employees\n--question--\n--text--\nWhich SQL constraint specifically ensures that a column can contain only unique values, allowing nulls",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5877,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-relational-database\\66f1af82732957c895f0b21a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6d783cec84b2c2e920d6ab6d4eb67b49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-relational-database\\66f1af82732957c895f0b21a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "command inserts data into a table --distractors-- PUT VALUES UPDATE INTO ADD DATA --answer-- INSERT INTO --question-- --text-- How do you rename a column in SQL --distractors-- MODIFY COLUMN CHANGE COLUMN ALTER COLUMN --answer-- RENAME COLUMN --question-- --text-- Which query will delete all records from the employees table --distractors-- REMOVE ALL TRUNCATE employees DROP RECORDS --answer-- DELETE FROM employees --question-- --text-- Which SQL constraint specifically ensures that a column can contain only unique values, allowing nulls--distractors--\nNOT NULL\nFOREIGN KEY\nPRIMARY KEY\n--answer--\nUNIQUE\n--question--\n--text--\nWhich of the following is NOT an example of a commonly used relational database in the industry --distractors--\nMySQL\nSQLite\nPostgreSQL\n--answer--\nSQLQuery\n--question--\n--text--\nWhat does a one-to-one (1-1) relationship represent in a relational database --distractors--\nEach record in Table A corresponds to one or more records in Table B Each record in Table A corresponds to no records in Table B Each record in Table A corresponds to multiple records in Table B and vice versa --answer--\nEach record in Table A corresponds to exactly one record in Table B --question--\n--text--\nWhat command will list all tables in the current PostgreSQL database --distractors--\n\\l\nSHOW TABLES\n\\t\n--answer--\n\\d\n--question--\n--text--\nWhich of the following allows you to join a table with itself --distractors--\nLEFT OUTER JOIN\nCROSS JOIN\nRIGHT OUTER JOIN\n--answer--\nSELF JOIN",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5877,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-relational-database\\66f1af82732957c895f0b21a.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "56cf785e63d9c9785e86c814bbfde18c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-styling-forms\\66ed9043f45ce3ece4053ebf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed9043f45ce3ece4053ebf\ntitle: Styling Forms Quiz\nchallengeType: 8\ndashedName: quiz-styling-forms\n--description--\nTo pass the quiz, you must correctly answer at least 9 of the 10 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is a common issue for styling the datetime-local input type --distractors--\nIt does not work with the float property It is impossible to make it responsive It does not work with rem units --answer--\nThe input format is different across browsers --question--\n--text--\nWhich of the following is considered best practice for styling text inputs --distractors--\nText input font sizes need to be set with em units and colors should be a light gray Text input sizes should only use dark green borders on focus and the text color should be dark gray Text input font colors need to be light colors and the size should only be set using the px unit --answer--\nText input fonts need to be adequately sized, and the color needs to have sufficient contrast with the background --question--\n--text--\nWhy is it important to not remove the ability for users to resize a textarea input --distractors--\nUsers should be able to zoom in and out and there should be no change in the input Users should be able to zoom in and out and the input should increase to twice its size Users should be able to zoom in and out and the input text should triple in size --answer--\nUsers should be able to zoom in and out and the input should scale accordingly --question--\n--text--\nWhat is a best practice for styling inputs in a focused state --distractors--\nIt is important to use only light gray borders for focused inputs It is important to only use dark red borders for focused inputs It is important to remove any noticeable indicator --answer--\nIt is important to preserve a noticeable indicator --question--\n--text--\nWhat is a best practice for styling inputs in an error state --distractors--\nIncrease the font size for the input text to 3rem Set the input to display: none; so it is removed from the page Set the input to be disabled so users can no longer interact with it --answer--\nProvide a visual indicator with a message so users know that something is incorrect and needs to be fixed --question--\n--text--\nWhy is it important to use descriptive placeholder text in form inputs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4448,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-styling-forms\\66ed9043f45ce3ece4053ebf.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b5013a8ad27d0e3dc9cc936573cbea3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-styling-forms\\66ed9043f45ce3ece4053ebf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in an error state --distractors-- Increase the font size for the input text to 3rem Set the input to display: none; so it is removed from the page Set the input to be disabled so users can no longer interact with it --answer-- Provide a visual indicator with a message so users know that something is incorrect and needs to be fixed --question-- --text-- Why is it important to use descriptive placeholder text in form inputs--distractors--\nIt helps to pre-fill the form for the user It automatically validates the input as the user types It hides the input label, reducing visual clutter --answer--\nIt provides users with guidance on the expected input format --question--\n--text--\nWhat is WebKit --distractors--\nIt is a browser engine that ensures that there are no validation errors in your CSS It is a special CSS property used in CSS Grid It is a special CSS property used in CSS flexbox --answer--\nIt is a browser engine that displays webpages --question--\n--text--\nWhen is it appropriate to use appearance: none; for form elements --distractors--\nTo remove form elements completely from the DOM and page To hide form elements from those who use assistive technologies like screen readers To remove only default colors that are applied to the form elements and use your own --answer--\nTo remove some of the default styles that are applied to the form elements --question--\n--text--\nWhat are some considerations when working with appearance: none; on form elements --distractors--\nIt is important to preserve hovered and submit indicators on interactive elements It is important to only use appearance: none; when you want to apply different styles for the Safari browser It is important to use appearance: none; when you need to completely remove a form element from the page --answer--\nIt is important to preserve focus and error indicators on interactive elements --question--\n--text--\nWhich type of form elements are commonly styled using appearance: none; to remove their default look --distractors--\nlabel elements div elements span elements --answer--\ninput elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4448,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-styling-forms\\66ed9043f45ce3ece4053ebf.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "db3b2594c788264f23452f241cf76f0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed9034f45ce3ece4053ebd\ntitle: Responsive Web Design Quiz\nchallengeType: 8\ndashedName: quiz-responsive-web-design\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat are breakpoints in responsive web design --distractors--\nSpecific points in a design where floats overlap with other elements on the page Specific points used to set the columns and rows for a grid or flex layout Specific points used to determine how a tabular layout will behave on the page --answer--\nSpecific points in a design where the layout and content adjust to accommodate different screen sizes --question--\n--text--\nWhich of the following is NOT a breakpoint used for smaller devices --distractors--\n600px\n480px\n320px\n--answer--\n960px\n--question--\n--text--\nWhat is the main purpose of using media queries in responsive web design --distractors--\nTo change the color scheme of the page for Safari browsers To create animations for table layouts To adjust margins and padding for layouts using CSS flexbox --answer--\nTo apply different styles based on the screen size or device type --question--\n--text--\nWhich media feature in a media query checks the width of the browser window --distractors--\nset-width\naccept-width\nallow-width\n--answer--\nmin-width\n--question--\n--text--\nWhat will the following code do css\n@media screen and (min-width: 768px) {\n/* Styles go here */\n}\n--distractors--\nThis will ignore styles for screens that are 768px wide This will apply styles for screens that are only 768px wide This will apply styles for screens that are smaller than 768px --answer--\nThis will apply styles for screens that are 768px and wider --question--\n--text--\nWhat does mobile-first design emphasize --distractors--\nDesigning for smaller devices only and ignoring the others Designing for mobile devices built by Apple only Designing for smaller Android screens first and ignoring Apple devices --answer--\nDesigning for smaller screens first and scaling up for larger devices --question--\n--text--\nWhich media query will apply styles when the device's width is between 600px and 1200px",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "a62644756618dc9ef72920cff6271d4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--answer-- This will apply styles for screens that are 768px and wider --question-- --text-- What does mobile-first design emphasize --distractors-- Designing for smaller devices only and ignoring the others Designing for mobile devices built by Apple only Designing for smaller Android screens first and ignoring Apple devices --answer-- Designing for smaller screens first and scaling up for larger devices --question-- --text-- Which media query will apply styles when the device's width is between 600px and 1200px--distractors--\n@media screen and (max-width: 1200px)\n@media screen and (min-width: 600px)\n@media screen and (width: 800px)\n--answer--\n@media screen and (min-width: 600px) and (max-width: 1200px)\n--question--\n--text--\nWhich of the following is NOT a valid media type --distractors--\nall\nprint\nscreen\n--answer--\nposter\n--question--\n--text--\nWhich of the following media types is intended for paged material and documents viewed on a screen in print preview mode --distractors--\naspect-ratio\nflex\nscreen\n--answer--\nprint\n--question--\n--text--\nWhat does the aspect-ratio do in media queries --distractors--\nIt describes the ratio between flex properties in a flex layout It describes the ratio between the x and y axis for grid containers It describes the ratio between rows and columns for table layouts --answer--\nIt describes the ratio between the width and height of the viewport --question--\n--text--\nWhich of the following is used to indicate whether the device is in landscape or portrait orientation --distractors--\napply-orientation\nset-orientation\noriente\n--answer--\norientation\n--question--\n--text--\nWhich of the following is commonly used to target desktop screens and larger --distractors--\ncss\n@media screen and (min-width: 140000px) {\n/* Styles go here */\n}\ncss\n@media screen and (min-width: 140px) {\n/* Styles go here */\n}\ncss\n@media screen and (min-width: 14000px) {\n/* Styles go here */\n}\n--answer--\ncss\n@media screen and (min-width: 1400px) {\n/* Styles go here */\n}\n--question--\n--text--\nWhich of the following is used to detect if the user has requested a light or dark color theme",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "1f75e739902b83309526d3d8a17f5333",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "larger --distractors-- css @media screen and (min-width: 140000px) { /* Styles go here */ } css @media screen and (min-width: 140px) { /* Styles go here */ } css @media screen and (min-width: 14000px) { /* Styles go here */ } --answer-- css @media screen and (min-width: 1400px) { /* Styles go here */ } --question-- --text-- Which of the following is used to detect if the user has requested a light or dark color theme--distractors--\nallow-colors-scheme\napply-color-scheme\nset-colors-scheme\n--answer--\nprefers-color-scheme\n--question--\n--text--\nWhich of the following is used to test whether the primary input mechanism can hover over elements --distractors--\ncss\n@media (set: hover) {\n/* Styles for devices that support hover */\n}\ncss\n@media (apply: hover) {\n/* Styles for devices that support hover */\n}\ncss\n@media (hover: apply) {\n/* Styles for devices that support hover */\n}\n--answer--\ncss\n@media (hover: hover) {\n/* Styles for devices that support hover */\n}\n--question--\n--text--\nWhich of the following is NOT a type of logical operator you can use with media queries --distractors--\nonly\nnot\nand\n--answer--\naccept\n--question--\n--text--\nWhich of the following breakpoints is commonly used for tablets in responsive web design --distractors--\n480px\n1920px\n2560px\n--answer--\n768px\n--question--\n--text--\nWhich of the following is the correct way to apply the aspect-ratio in a media query",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "874e8449441adc8f21281b28c22b4bf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "hover) { /* Styles for devices that support hover */ } --question-- --text-- Which of the following is NOT a type of logical operator you can use with media queries --distractors-- only not and --answer-- accept --question-- --text-- Which of the following breakpoints is commonly used for tablets in responsive web design --distractors-- 480px 1920px 2560px --answer-- 768px --question-- --text-- Which of the following is the correct way to apply the aspect-ratio in a media query--distractors--\ncss\n@media screen and (aspect-ratio: 16-9) {\n/* Styles for screens with a 16:9 aspect ratio */\n}\ncss\n@media screen and (aspect-ratio: 16=9) {\n/* Styles for screens with a 16:9 aspect ratio */\n}\ncss\n@media screen and (aspect-ratio: 16:9) {\n/* Styles for screens with a 16:9 aspect ratio */\n}\n--answer--\ncss\n@media screen and (aspect-ratio: 16/9) {\n/* Styles for screens with a 16:9 aspect ratio */\n}\n--question--\n--text--\nWhich CSS property is used to create a layout that adjusts based on screen size without media queries --distractors--\nfloat\ndisplay: block;\nwidth: 100%;\n--answer--\nflex\n--question--\n--text--\nWhich of the following can be used to target landscape screens 768px and larger --distractors--\ncss\n@media screen and (min-width: 768px) and (landscape: orientation) {\n/* Styles go here */\n}\ncss\n@media screen and (max-width: 768px) and (orientation: landscape) {\n/* Styles go here */\n}\ncss\n@media screen and (min-width: 768px) and (landscape: set) {\n/* Styles go here */\n}\n--answer--\ncss\n@media screen and (min-width: 768px) and (orientation: landscape) {\n/* Styles go here */\n}\n--question--\n--text--\nWhat is the default media type if no media type is specified --distractors--\nscreen\nmobile\nprint\n--answer--\nall\n--quiz--\n--question--\n--text--\nWhich CSS unit is commonly used in responsive design to create fluid layouts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "cbe1b1de1dda739c99b3ed5a7840c0d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ /* Styles go here */ } css @media screen and (min-width: 768px) and (landscape: set) { /* Styles go here */ } --answer-- css @media screen and (min-width: 768px) and (orientation: landscape) { /* Styles go here */ } --question-- --text-- What is the default media type if no media type is specified --distractors-- screen mobile print --answer-- all --quiz-- --question-- --text-- Which CSS unit is commonly used in responsive design to create fluid layouts--distractors--\npx\nem\nrem\n--answer--\n%\n--question--\n--text--\nWhat is the primary purpose of using media queries in responsive web design --distractors--\nTo apply different styles based on user input\nTo make the website load faster\nTo change the website’s color scheme automatically\n--answer--\nTo adjust the layout and design based on screen size\n--question--\n--text--\nWhich CSS width value causes an element to scale proportionally with the width of its parent container, making it suitable for responsive design --distractors--\nauto\n100vh\nfit-content\n--answer--\n100%\n--question--\n--text--\nWhich of the following is an example of a media feature that can be used in a media query --distractors--\nbackground-color\nfont-size\ntext-align\n--answer--\nmin-width\n--question--\n--text--\nWhat does the @media screen and (max-width: 768px) media query apply to --distractors--\nIt applies styles to screens larger than 768px wide It applies styles to all screens, regardless of size It applies styles to screens with a resolution greater than 768dpi --answer--\nIt applies styles to screens smaller than 768px wide --question--\n--text--\nWhich of the following media query features targets devices with a screen resolution of at least 300dpi --distractors--\n@media screen and (min-width: 300dpi)\n@media screen and (resolution: 300dpi)\n@media screen and (min-res: 300dpi)\n--answer--\n@media screen and (min-resolution: 300dpi)\n--question--\n--text--\nWhich of the following media features would you use to apply styles only when a device does not support hover interactions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "3707f0d8bb5cf18a453bab11fada1a9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "than 768dpi --answer-- It applies styles to screens smaller than 768px wide --question-- --text-- Which of the following media query features targets devices with a screen resolution of at least 300dpi --distractors-- @media screen and (min-width: 300dpi) @media screen and (resolution: 300dpi) @media screen and (min-res: 300dpi) --answer-- @media screen and (min-resolution: 300dpi) --question-- --text-- Which of the following media features would you use to apply styles only when a device does not support hover interactions--distractors--\n@media (hover: hover)\n@media (hover: auto)\n@media (no-hover: false)\n--answer--\n@media (hover: none)\n--question--\n--text--\nWhich of the following is a valid way to target devices with a portrait orientation using a media query --distractors--\n@media screen and (orientation: landscape) { }\n@media (orientation: portrait) { }\n@media screen and (min-orientation: portrait) { }\n--answer--\n@media screen and (orientation: portrait) { }\n--question--\n--text--\nWhich media query feature is used to apply styles based on the resolution of the device --distractors--\n@media (resolution: high) { }\n@media screen and (resolution: 300dpi) { }\n@media (min-resolution: 150) { }\n--answer--\n@media (min-resolution: 300dpi) { }\n--question--\n--text--\nWhat is the purpose of the @media (hover: hover) query in CSS --distractors--\nIt applies styles only on touch devices It changes styles based on device orientation It detects if the device uses a touchscreen --answer--\nIt checks if a device supports mouse hover --question--\n--text--\nWhich media feature allows you to apply styles only on high pixel density screens like Retina displays --distractors--\ndevice-type\naspect-ratio\nmin-width\n--answer--\nmin-resolution\n--question--\n--text--\nWhich keyword can be used in media queries to combine multiple conditions --distractors--\nif\nthen\ncombine\n--answer--\nand\n--question--\n--text--\nWhich CSS technique is commonly used with media queries to apply styles only under specific conditions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "1cda212521db4bfbc9b7414a81033cfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "device uses a touchscreen --answer-- It checks if a device supports mouse hover --question-- --text-- Which media feature allows you to apply styles only on high pixel density screens like Retina displays --distractors-- device-type aspect-ratio min-width --answer-- min-resolution --question-- --text-- Which keyword can be used in media queries to combine multiple conditions --distractors-- if then combine --answer-- and --question-- --text-- Which CSS technique is commonly used with media queries to apply styles only under specific conditions--distractors--\nUsing inline styles for all elements\nUsing JavaScript to detect screen size and apply classes\nLinking to different HTML files for mobile and desktop\n--answer--\nCombining media features using logical operators like and in media queries\n--question--\n--text--\nWhich CSS technique helps ensure images scale proportionally on different screen sizes --distractors--\nUsing fixed pixel widths for images\nSetting images as background elements\nApplying inline styles with exact dimensions\n--answer--\nSetting the image width to a percentage like width: 100%\n--question--\n--text--\nWhat is the purpose of the @media screen and (min-resolution: 300dpi) query --distractors--\nTo apply styles for screens with a low pixel density To apply styles based on the screen’s width To apply styles based on the device's resolution in pixels --answer--\nTo apply styles for screens with a high pixel density --question--\n--text--\nWhich of the following is true about the mobile-first approach in responsive design --distractors--\nIt focuses on designing for large desktop screens first and then scaling down It designs primarily for tablet screens before scaling down It only targets smartphones and ignores tablets or desktops --answer--\nIt focuses on designing for mobile devices first, then scaling up for larger screens --question--\n--text--\nWhich media query feature is used to detect the screen orientation (landscape or portrait) --distractors--\naspect-ratio\ndevice-width\nmax-width\n--answer--\norientation\n--question--\n--text--\nWhat does the prefers-color-scheme media feature detect --distractors--\nThe type of device used for display\nThe screen resolution\nThe user's preferred font size\n--answer--\nWhether the user prefers a light or dark theme\n--question--\n--text--\nWhat does the orientation media feature detect",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "12a627e80b5bfbd774c82377f88f0444",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for mobile devices first, then scaling up for larger screens --question-- --text-- Which media query feature is used to detect the screen orientation (landscape or portrait) --distractors-- aspect-ratio device-width max-width --answer-- orientation --question-- --text-- What does the prefers-color-scheme media feature detect --distractors-- The type of device used for display The screen resolution The user's preferred font size --answer-- Whether the user prefers a light or dark theme --question-- --text-- What does the orientation media feature detect--distractors--\nThe width of the screen\nThe resolution of the display\nThe type of device (tablet, phone, etc )\n--answer--\nWhether the device is in landscape or portrait mode\n--question--\n--text--\nWhat is the correct syntax to apply styles for devices with at least 2x pixel density --distractors--\n@media (resolution: 2x)\n@media screen and (pixel-ratio: 2)\n@media (dpi: 300)\n--answer--\n@media screen and (min-resolution: 192dpi)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13384,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-responsive-web-design\\66ed9034f45ce3ece4053ebd.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "42003cd46d50499ed15518cba8806434",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-testing\\66f1aeffc5774ac692112a7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1aeffc5774ac692112a7e\ntitle: Testing Quiz\nchallengeType: 8\ndashedName: quiz-testing\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat type of testing focuses on verifying individual components or functions of code in isolation --distractors--\nFunctional testing End-to-end testing Integration testing --answer--\nUnit testing --question--\n--text--\nWhich testing approach evaluates a system's compliance with specified requirements from an end-user perspective --distractors--\nUnit testing Performance testing Security testing --answer--\nAcceptance testing --question--\n--text--\nWhat type of testing assesses how well a system performs under various workloads --distractors--\nCompatibility testing Usability testing Security testing --answer--\nPerformance testing --question--\n--text--\nWhich testing practice involves evaluating a system's ability to protect data and maintain functionality in the face of malicious attacks --distractors--\nUsability testing Compatibility testing Performance testing --answer--\nSecurity testing --question--\n--text--\nWhat type of testing involves providing two versions of software to users and analyzing which performs better --distractors--\nCompatibility testing Performance testing Comparative testing --answer--\nA/B testing --question--\n--text--\nWhich popular JavaScript testing framework is often used for unit testing --distractors--\nSelenium\nCypress\nPlaywright\n--answer--\nJest\n--question--\n--text--\nWhat term describes replacing some components used during testing with objects that return pre-defined responses --distractors--\nMocking\nFaking\nPre-defining\n--answer--\nStubbing\n--question--\n--text--\nWhich stage comes first in the Software Development Lifecycle --distractors--\nDesign stage Implementation stage Testing stage --answer--\nPlanning stage --question--\n--text--\nWhat type of testing evaluates the entire system from start to finish, simulating real-world scenarios --distractors--\nUnit testing Integration testing Functional testing --answer--\nEnd-to-end (E2E) testing --question--\n--text--\nWhich testing approach focuses on how easy and satisfying a product is to use --distractors--\nPerformance testing Security testing Compatibility testing --answer--\nUsability testing --question--\n--text--\nWhich one is an assertion library",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-testing\\66f1aeffc5774ac692112a7e.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4a40f5ad67dad5524c38d854964a2054",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-testing\\66f1aeffc5774ac692112a7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the Software Development Lifecycle --distractors-- Design stage Implementation stage Testing stage --answer-- Planning stage --question-- --text-- What type of testing evaluates the entire system from start to finish, simulating real-world scenarios --distractors-- Unit testing Integration testing Functional testing --answer-- End-to-end (E2E) testing --question-- --text-- Which testing approach focuses on how easy and satisfying a product is to use --distractors-- Performance testing Security testing Compatibility testing --answer-- Usability testing --question-- --text-- Which one is an assertion library--distractors--\nMocha\nSelenium\nGrowthBook\n--answer--\nChai\n--question--\n--text--\nWhich testing tool is specifically designed for end-to-end testing of web applications across multiple browsers --distractors--\nJest\nMocha\nJasmine\n--answer--\nPlaywright\n--question--\n--text--\nWhat type of testing ensures that a system works correctly with different hardware, operating systems, or network environments --distractors--\nFunctional testing Unit testing Usability testing --answer--\nCompatibility testing --question--\n--text--\nWhat is regression testing --distractors--\nThis test ensures that the application works properly after downgrading to previous versions This test runs tests repeatedly to ensure the application works under high load This test re-runs the test that found a bug to confirm that the issue has been fixed --answer--\nThis test re-runs tests to check for new issues introduced by recent changes to the codebase --question--\n--text--\nWhat is alpha testing --distractors--\nThe first phase of A/B testing An automated test suite that checks for critical issues before beta testing begins Iterative testing performed in the Agile model of software development --answer--\nProviding the application to a selected group of testers to use it as part of acceptance testing --question--\n--text--\nWhat is the primary purpose of smoke testing in software development --distractors--\nTo test the system under extreme stress To check for security vulnerabilities To ensure all features are working perfectly --answer--\nTo verify that the most critical functions of a system are working --question--\n--text--\nWhich test involves creating simulated cyberattacks on the application to identify any vulnerabilities --distractors--\nSmoke testing Breakpoint testing Usability testing --answer--\nPenetration Testing --question--\n--text--\nWhat does TDD stand for in software development methodologies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-testing\\66f1aeffc5774ac692112a7e.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1a12bc8ff820ec361d64bd00c6305c8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-testing\\66f1aeffc5774ac692112a7e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "purpose of smoke testing in software development --distractors-- To test the system under extreme stress To check for security vulnerabilities To ensure all features are working perfectly --answer-- To verify that the most critical functions of a system are working --question-- --text-- Which test involves creating simulated cyberattacks on the application to identify any vulnerabilities --distractors-- Smoke testing Breakpoint testing Usability testing --answer-- Penetration Testing --question-- --text-- What does TDD stand for in software development methodologies--distractors--\nTest-Driven Deployment\nTotal Design Development\nTechnical Design Document\n--answer--\nTest-Driven Development\n--question--\n--text--\nWhich of the following is an example of a non-functional testing type --distractors--\nUnit testing Integration testing User acceptance testing --answer--\nPerformance testing --question--\n--text--\nWhich function is used with matchers to check a value in Jest --distractors--\ncheck\ntest\nmatch\n--answer--\nexpect",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-testing\\66f1aeffc5774ac692112a7e.md",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8035731f30dd03852d49dd368ba11ade",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1ae758b77cfc3e4da6151\ntitle: TypeScript Quiz\nchallengeType: 8\ndashedName: quiz-typescript\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is Typescript --distractors--\nA framework used for system programming A database management tool A programming language used for styling websites --answer--\nA superset of JavaScript that adds static typing --question--\n--text--\nWhy should TypeScript be used in a project --distractors--\nIt eliminates the need for testing in applications It is faster than all other programming languages It makes styling websites easier --answer--\nIt improves maintainability by adding type definitions to JavaScript --question--\n--text--\nWhat language is TypeScript compiled down to --distractors--\nJava\nPython\nC++\n--answer--\nJavaScript\n--question--\n--text--\nWhat would be the output of the following code snippet ts\nfunction sum(a: number, b: number): number {\nreturn a + b;\n}\nconsole log(sum(2, 3));\n--distractors--\n2 + 3\nundefined\nError: Type 'number' is not assignable to type 'string'\n--answer--\n5\n--question--\n--text--\nWhat is the primary purpose of an interface in TypeScript --distractors--\nTo compile TypeScript code into JavaScript To create a new data type To create a new JavaScript Object --answer--\nTo define the structure of an object --question--\n--text--\nWhich of the following is NOT a basic primitive in TypeScript --distractors--\nstring\nboolean\nnumber\n--answer--\narray\n--question--\n--text--\nWhich of the following correctly defines a literal type in TypeScript --distractors--\nlet y: string;\nlet z: boolean;\nlet a: number[];\n--answer--\nlet x: 5;\n--question--\n--text--\nWhat is the primary purpose of the type keyword in TypeScript --distractors--\nTo declare variables To create classes To implement interfaces --answer--\nTo define custom types --question--\n--text--\nWhich of the following correctly defines a union type",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "758862df84567ed0e287e283f14f3ecf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "basic primitive in TypeScript --distractors-- string boolean number --answer-- array --question-- --text-- Which of the following correctly defines a literal type in TypeScript --distractors-- let y: string; let z: boolean; let a: number[]; --answer-- let x: 5; --question-- --text-- What is the primary purpose of the type keyword in TypeScript --distractors-- To declare variables To create classes To implement interfaces --answer-- To define custom types --question-- --text-- Which of the following correctly defines a union type--distractors--\ntype Result = Pass && Fail;\ntype Result = Pass & Fail;\ntype Result = Pass + Fail;\n--answer--\ntype Result = Pass | Fail;\n--question--\n--text--\nWhich of the following capabilities is unique to interface and CANNOT be achieved using type in TypeScript --distractors--\nDefining object shapes Creating union types Defining types that include only specific values --answer--\nDeclaring class implementations --question--\n--text--\nWhat is the primary purpose of using generics in TypeScript --distractors--\nTo implement inheritance between classes To define structure of an object To create a new data type --answer--\nTo write reusable code that can work with multiple types --question--\n--text--\nWhich of the following is a proper example of a generic function in TypeScript --distractors--\nfunction add(a: number, b: number): number { return a + b; }\nfunction multiply(a: number, b: number): { return a * b; }\nfunction getValue<T>(value: any): any { return value; }\n--answer--\nfunction identity<T>(value: T): T { return value; }\n--question--\n--text--\nWhat is type narrowing in TypeScript --distractors--\nReducing the size of compiled JavaScript Limiting the number of types in a union Removing unused types from a TypeScript project --answer--\nTo write code that narrows down a union type to a more specific type --question--\n--text--\nWhich file is typically used to configure TypeScript compiler options --distractors--\npackage json\npackage config json\ntypescript config js\n--answer--\ntsconfig json\n--question--\n--text--\nWhat does the rootDir option in the tsconfig json file specify --distractors--\nThe version of TypeScript to use during compilation The target runtime environment (e g , Node js or browser) for the TypeScript code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "9984d52dfb50ad40b27ae5fb90303628",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--answer-- To write code that narrows down a union type to a more specific type --question-- --text-- Which file is typically used to configure TypeScript compiler options --distractors-- package json package config json typescript config js --answer-- tsconfig json --question-- --text-- What does the rootDir option in the tsconfig json file specify --distractors-- The version of TypeScript to use during compilation The target runtime environment (e g , Node js or browser) for the TypeScript codeThe specific module system to use for imports and exports --answer--\nThe directory that holds your source files --question--\n--text--\nWhich example uses instanceof correctly to narrow the type to access the value property safely --distractors--\nts\nconst email = document querySelector(\"#email\");\nif (email instanceof <input>) {\nconsole log(email value);\n}\nts\nconst email = document querySelector(\"#email\");\nif (email instanceof Element) {\nconsole log(email value);\n}\nts\nconst email = document querySelector(\"#email\");\nif (email instanceof <HTMLInputElement>) {\nconsole log(email value);\n}\n--answer--\nts\nconst email = document querySelector(\"#email\");\nif (email instanceof HTMLInputElement) {\nconsole log(email value);\n}\n--question--\n--text--\nWhat does setting \"strict\": true in tsconfig json do in TypeScript --distractors--\nEnables static type check so that you can catch the mistakes before you run your code Enforces you to always use ES6 syntax Enforces you to compile the code before you run it --answer--\nEnables a set of type-checking options such as requiring handling of null or undefined and preventing implicit any --question--\n--text--\nWhat is the purpose of the never type in TypeScript --distractors--\nTo represent null or undefined To represent any possible value To represent a type that can be anything except null --answer--\nTo represent the type of values that never occur --question--\n--text--\nWhich of the following getRandomValue function calls will compile successfully in TypeScript ts\nconst getRandomValue = (array: string[]) => {\nreturn array[Math floor(Math random() * array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8741d5e2e7aedd40a369abca84754d90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "undefined and preventing implicit any --question-- --text-- What is the purpose of the never type in TypeScript --distractors-- To represent null or undefined To represent any possible value To represent a type that can be anything except null --answer-- To represent the type of values that never occur --question-- --text-- Which of the following getRandomValue function calls will compile successfully in TypeScript ts const getRandomValue = (array: string[]) => { return array[Math floor(Math random() * arraylength)];\n}\n--distractors--\ngetRandomValue([1, 2, 3])\ngetRandomValue(\"ABC\")\ngetRandomValue({A: \"A\", B: \"B\", C: \"C\"})\n--answer--\ngetRandomValue([\"A\", \"B\", \"C\"])\n--question--\n--text--\nHow can you fix the TypeScript compiler error 'email' is possibly 'null' in the following code using optional chaining ts\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email value);\n--distractors--\nconsole log(email :value);\nconsole log(email value);\nconsole log(email value);\n--answer--\nconsole log(email value);",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-typescript\\66f1ae758b77cfc3e4da6151.md",
      "source_type": "git_repo"
    },
    "token_count": 234,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "85322ff0d3d4f3632289b58ffab0290f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-and-sql\\6724e46581a1742244e45b59.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e46581a1742244e45b59\ntitle: Bash and SQL Review\nchallengeType: 24\ndashedName: review-bash-and-sql\n--description--\nDescription placeholder\n--assignment--\nReview the Bash and SQL topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-and-sql\\6724e46581a1742244e45b59.md",
      "source_type": "git_repo"
    },
    "token_count": 59,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "abc68e2f0224dd25dde4239208e5034b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed903cf45ce3ece4053ebe\ntitle: Semantic HTML Quiz\nchallengeType: 8\ndashedName: quiz-semantic-html\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is presentational HTML --distractors--\nPresentational HTML controls how data is stored on the server Presentational HTML determines the website's overall layout and navigation structure Presentational HTML is used for embedding multimedia content --answer--\nPresentational HTML uses elements to control the appearance of content, rather than its meaning or structure --question--\n--text--\nWhat is the role of the pre element --distractors--\nIt is used to represent a placeholder inside a web component It is used to display an indicator showing the completion progress of a task It is used to convey seriousness or strong importance --answer--\nIt is used to represent preformatted text --question--\n--text--\nWhat is the role of the h1 element --distractors--\nIt is used to group multiple heading elements on the page It serves as a container for the meta data in the HTML document It represents the root or top level element for the HTML document --answer--\nIt defines the main heading of a webpage, indicating its primary topic --question--\n--text--\nWhat is the role of the address element --distractors--\nIt specifies the font size for the main content It creates a navigation menu for the website It formats text as superscript --answer--\nIt is used to represent contact information for a section on a web page --question--\n--text--\nWhich of the following elements holds no semantic meaning --distractors--\narticle\nmain\nfooter\n--answer--\ndiv\n--question--\n--text--\nWhich of the following elements is used to represent a specific moment in time --distractors--\noutput\nins\ndiv\n--answer--\ntime\n--question--\n--text--\nWhat is a typical use case of the ruby element --distractors--\nIt specifies the document's character encoding It inserts a table for displaying tabular data It embeds a video or audio player in the document --answer--\nIt is used to show the pronunciation of East Asian characters --question--\n--text--\nWhich element is used to highlight keywords in summaries or product names in reviews",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "682963595da337de80cc7edce2ecde01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a specific moment in time --distractors-- output ins div --answer-- time --question-- --text-- What is a typical use case of the ruby element --distractors-- It specifies the document's character encoding It inserts a table for displaying tabular data It embeds a video or audio player in the document --answer-- It is used to show the pronunciation of East Asian characters --question-- --text-- Which element is used to highlight keywords in summaries or product names in reviews--distractors--\nruby\ntable\ntemplate\n--answer--\nb\n--question--\n--text--\nWhat is the role of the u element --distractors--\nIt styles text with custom fonts It specifies the document's character encoding It creates a dropdown menu for selecting options --answer--\nIt is used to represent inline text that has non-textual annotation applied --question--\n--text--\nWhich of the following elements is used to represent an extended quotation --distractors--\ntextarea\nsup\narticle\n--answer--\nblockquote\n--question--\n--text--\nWhich of the following elements is used to provide a description, or definition for the term inside a description list --distractors--\ndt\ndl\ndiv\n--answer--\ndd\n--question--\n--text--\nWhich of the following elements is typically used with the code element --distractors--\nins\nsummary\ndiv\n--answer--\npre\n--question--\n--text--\nWhich of the following attributes is used to translate dates and times into a machine-readable format --distractors--\nalt\nrel\naccept\n--answer--\ndatetime\n--question--\n--text--\nWhy is it important to not skip heading levels --distractors--\nSkipping heading levels improves website design aesthetics Skipping heading levels makes text appear in different colors Skipping heading levels enhances page loading speed --answer--\nSkipping heading levels can confuse screen readers and hinder content accessibility by disrupting the logical content hierarchy --question--\n--text--\nWhich of the following is a deprecated presentational HTML element --distractors--\ndiv\nfooter\narticle\n--answer--\nfont\n--question--\n--text--\nWhich of the following elements is used to represent navigation links --distractors--\nfigure\ndiv\nsection\n--answer--\nnav\n--question--\n--text--\nWhich of the following elements represents a description term inside a description list",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "0d7cb21f49dac425dc70870de036636b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "heading levels enhances page loading speed --answer-- Skipping heading levels can confuse screen readers and hinder content accessibility by disrupting the logical content hierarchy --question-- --text-- Which of the following is a deprecated presentational HTML element --distractors-- div footer article --answer-- font --question-- --text-- Which of the following elements is used to represent navigation links --distractors-- figure div section --answer-- nav --question-- --text-- Which of the following elements represents a description term inside a description list--distractors--\ndd\ndfn\ndel\n--answer--\ndt\n--question--\n--text--\nWhat is the role of the i element --distractors--\nIt is used to represent text that has been marked for reference purposes It is used to provide a caption or legend for disclosure boxes It is used to format numerical data and sort it from smallest to largest --answer--\nIt is used to represent idiomatic text, technical terms, and taxonomical designations --question--\n--text--\nWhich of the following elements is used to emphasize text --distractors--\nanchor\ndiv\noptgroup\n--answer--\nem\n--question--\n--text--\nWhich of the following attributes is used to specify the source or reference of the quoted content for a blockquote --distractors--\nalt\nclass\nlang\n--answer--\ncite\n--quiz--\n--question--\n--text--\nWhich of the following is NOT an example of a presentational HTML element --distractors--\nfont\ncenter\nbig\n--answer--\narticle\n--question--\n--text--\nWhich of the following elements is used to represent a single line of code in HTML --distractors--\ncodes\ncodecs\ncoding\n--answer--\ncode\n--question--\n--text--\nWhat is the difference between the strong and b elements --distractors--\nThe b element is used to emphasize the importance of the text while the strong is used to highlight alternative voice or mood The strong element is used to highlight alternative voice or mood while the b element emphasizes text that is crucial, or urgent The strong element is commonly used to highlight keywords in summaries while the b element emphasizes text that is crucial, or urgent --answer--\nThe b element is commonly used to highlight keywords in summaries while the strong element emphasizes text that is crucial, or urgent --question--\n--text--\nWhich of the following is the correct way to use to emphasize a piece of text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "d68e4040ec81c69d1de29c38b035a04b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "or mood while the b element emphasizes text that is crucial, or urgent The strong element is commonly used to highlight keywords in summaries while the b element emphasizes text that is crucial, or urgent --answer-- The b element is commonly used to highlight keywords in summaries while the strong element emphasizes text that is crucial, or urgent --question-- --text-- Which of the following is the correct way to use to emphasize a piece of text--distractors--\n```html\nNever give up on your dreams ```\n```html\nNever give up on your dreams ```\n```html\nNever give up on your dreams ```\n--answer--\n```html\nNever give up on your dreams ```\n--question--\n--text--\nWhich of the following elements is used to bring attention to text that is not important for the meaning of the content --distractors--\nem\nsmall\nstrong\n--answer--\nb\n--question--\n--text--\nWhen should you use CSS instead of the i or em elements --distractors--\nWhen the text has a special purpose or meaning in the paragraph When the text is an idiomatic expression When the text needs to be emphasized for importance --answer--\nWhen you want to display text in italics for presentational purposes only --question--\n--text--\nWhich of the following elements is used to represent a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation --distractors--\nsub\nspan\ns\n--answer--\nu\n--question--\n--text--\nWhich of the following is the correct way to represent a section quoted from another source --distractors--\nhtml\n<cite cite=\"https://www freecodecamp org/news/learn-to-code-book/\">\n\"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \"\n</cite>\nhtml\n<block cite=\"https://www freecodecamp org/news/learn-to-code-book/\">\n\"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \"\n</block>\nhtml\n<quotes cite=\"https://www freecodecamp org/news/learn-to-code-book/\">\n\"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \"\n</quotes>\n--answer--\n```html\n\"Can you imagine what it would be like to be a successful developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "5ec5e4efdfa0c0b3d65b0e46195053cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "upon \" </cite> html <block cite=\"https://www freecodecamp org/news/learn-to-code-book/\"> \"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \" </block> html <quotes cite=\"https://www freecodecamp org/news/learn-to-code-book/\"> \"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \" </quotes> --answer-- ```html \"Can you imagine what it would be like to be a successful developerTo have built software systems that people rely upon \"\n```\n--question--\n--text--\nWhich of the following elements is used to mark up the title of a referenced creative work like a book --distractors--\nfigure\narticle\ndiv\n--answer--\ncite\n--question--\n--text--\nWhat is the role of the q element --distractors--\nIt represents a fragment of computer code It represents superscript text It represents a date and/or time --answer--\nIt represents a short inline quotation --question--\n--text--\nWhich of the following is used to display abbreviations and acronyms in HTML --distractors--\n```html\nHTML is the foundation of the web ```\n```html\nHTML is the foundation of the web ```\n```html\nHTML is the foundation of the web ```\n--answer--\n```html\nHTML is the foundation of the web ```\n--question--\n--text--\nWhat is the role of the title attribute inside of the abbreviation element --distractors--\nIt is used to represent subscript text It is used to represent a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation It is used to annotate text with pronunciation or meaning explanations --answer--\nIt is used to help users understand what this acronym means --question--\n--text--\nWhich of the following elements is used to represent contact information on the web page --distractors--\nlocation\nresidence\ncontact\n--answer--\naddress\n--question--\n--text--\nWhat is the role of the datetime attribute in the time element --distractors--\nIt is used to display an alert to show the current date and time It is used to set the time to a 12-hour clock format It is used to set the time to military format --answer--\nIt is used to represent dates and times in a machine-readable format",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "0a543e508d324cbb0bbc6c25d03b7365",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "contact information on the web page --distractors-- location residence contact --answer-- address --question-- --text-- What is the role of the datetime attribute in the time element --distractors-- It is used to display an alert to show the current date and time It is used to set the time to a 12-hour clock format It is used to set the time to military format --answer-- It is used to represent dates and times in a machine-readable format--question--\n--text--\nWhich of the following is used to display a piece of text as a superscript --distractors--\n```html\n22 (2 squared) is 4 ```\n```html\n22 (2 squared) is 4 ```\n```html\n22 (2 squared) is 4 ```\n--answer--\n```html\n22 (2 squared) is 4 ```\n--question--\n--text--\nWhich of the following is NOT a common use case for using the subscript (sub) element --distractors--\nvariable subscripts\nfootnotes\nchemical formulas\n--answer--\ndisplaying dates\n--question--\n--text--\nWhat is the role of the s element --distractors--\nIt is used to style a piece of text with a raised baseline It is used to indicate text for the ruby annotation It is used to represent inline text that has non-textual annotation applied --answer--\nIt is used to represent when text is no longer accurate or relevant --question--\n--text--\nWhich of the following is NOT a common use case for using the superscript element --distractors--\nexponents\nsuperior lettering\nordinal numbers\n--answer--\nchemical formulas\n--question--\n--text--\nWhat is the role of the ruby element --distractors--\nIt represents a list of term-description groupings It represents the term being defined in a description list It represents preformatted text for code examples --answer--\nIt represents small text shown above or below the main text --question--\n--text--\nWhich of the following elements is used as a fallback for browsers lacking support for displaying ruby annotations --distractors--\nrub\npr\nr\n--answer--\nrp\n--quiz--\n--question--\n--text--\nWhat is the purpose of the header element in HTML --distractors--\nIt defines the main content of the document It represents a section with navigation links It defines a sidebar for the document --answer--\nIt marks the header of a document or section",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "aaa6ee2edd4dfd8b9d04e0e0f0f98fbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "below the main text --question-- --text-- Which of the following elements is used as a fallback for browsers lacking support for displaying ruby annotations --distractors-- rub pr r --answer-- rp --quiz-- --question-- --text-- What is the purpose of the header element in HTML --distractors-- It defines the main content of the document It represents a section with navigation links It defines a sidebar for the document --answer-- It marks the header of a document or section--question--\n--text--\nWhich element is used to contain the main content of a web page --distractors--\nnav\narticle\nsection\n--answer--\nmain\n--question--\n--text--\nWhat is the correct use of the nav element --distractors--\nTo define the header of a document To display metadata about a webpage To contain the main content of the page --answer--\nTo represent a section with navigation links --question--\n--text--\nWhich element is used to mark text with stress emphasis --distractors--\nmark\ni\nb\n--answer--\nem\n--question--\n--text--\nWhat is the purpose of the figure element --distractors--\nTo define the main content of the page To group multiple articles together To represent a section with navigation links --answer--\nTo contain illustrations and diagrams --question--\n--text--\nWhich element is used to represent a short inline quotation --distractors--\nblockquote\nspan\ncite\n--answer--\nq\n--question--\n--text--\nWhat is the purpose of the time element --distractors--\nTo define a script execution time To define the main content of the page To highlight important text --answer--\nTo represent a date or time value --question--\n--text--\nWhich element is used to represent an abbreviation or acronym --distractors--\nvar\ncite\ncode\n--answer--\nabbr\n--question--\n--text--\nWhat is the purpose of the blockquote element --distractors--\nTo represent a short inline quotation To define a paragraph with larger text To define the main content of the page --answer--\nTo represent a section quoted from another source --question--\n--text--\nWhich element is used to represent a list of term-description groupings --distractors--\nul\ntable\nol\n--answer--\ndl\n--question--\n--text--\nWhat is the purpose of the cite element --distractors--\nTo represent a short inline quotation To represent a highlighted word To define the main content of the page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "575468a926394619a7f6481d5c419594",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "short inline quotation To define a paragraph with larger text To define the main content of the page --answer-- To represent a section quoted from another source --question-- --text-- Which element is used to represent a list of term-description groupings --distractors-- ul table ol --answer-- dl --question-- --text-- What is the purpose of the cite element --distractors-- To represent a short inline quotation To represent a highlighted word To define the main content of the page--answer--\nTo attribute the source of a referenced work --question--\n--text--\nWhich element is used to represent superscript text --distractors--\nsub\nabbr\nstrong\n--answer--\nsup\n--question--\n--text--\nWhat is the purpose of the address element --distractors--\nTo define the main content of the page To define the address of a hyperlink To represent a section with navigation links --answer--\nTo represent contact information for the author or owner of a webpage --question--\n--text--\nWhich element is used to represent preformatted text --distractors--\ncode\nsamp\nblockquote\n--answer--\npre\n--question--\n--text--\nWhat is the purpose of the strong element --distractors--\nTo mark text with stress emphasis To make text italic To highlight text that is not important --answer--\nTo mark text with strong importance --question--\n--text--\nWhich element is used to represent a fragment of computer code --distractors--\npre\nvar\nblockquote\n--answer--\ncode\n--question--\n--text--\nWhat is the purpose of the abbr element --distractors--\nTo represent a date or time value To add tooltips to text To represent a short inline quotation --answer--\nTo represent an abbreviation or acronym --question--\n--text--\nWhich element is used to represent a long quotation from another source --distractors--\nq\nmark\ncite\n--answer--\nblockquote\n--question--\n--text--\nWhat is the purpose of the dl element --distractors--\nTo represent a list of items To define a list of numbered items To represent a section with navigation links --answer--\nTo represent a list of term-description groupings --question--\n--text--\nWhich element is used to represent subscript text --distractors--\nsup\nsmall\nstrong\n--answer--\nsub",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17741,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-semantic-html\\66ed903cf45ce3ece4053ebe.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "a57ca6609a95ff6bdf2d2e5480ca4942",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-commands\\6724e387ee098d1ef33108ba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e387ee098d1ef33108ba\ntitle: Bash Commands Review\nchallengeType: 24\ndashedName: review-bash-commands\n--description--\nTerminal, Shell, and Command Line Basics\nCommand line: A text interface where users type commands Terminal: The application that provides access to the command line Terminal emulator: Adds extra features to a terminal Shell: Interprets the commands entered into the terminal (e g , Bash) PowerShell / Command Prompt / Microsoft Terminal: Options for accessing the command line on Windows Terminal (macOS): Built-in option on macOS, with third-party alternatives like iTerm or Ghostty Terminal (Linux): Options vary by distribution, with many third-party emulators like kitty Terminology: Though \"terminal,\" \"shell,\" and \"command line\" are often used interchangeably, they have specific meanings Command Line Shortcuts\nUp/Down arrows: Cycle through previous/next commands in history Tab: Autocomplete commands Control+L (Linux/macOS) or typing cls (Windows): Clear the terminal screen Control+C: Interrupt a running command (also used for copying in PowerShell if text is selected) Control+Z (Linux/macOS only): Suspend a task to the background; use fg to resume it : Instantly rerun the last executed command Bash Basics\nBash (Bourne Again Shell): Widely used Unix-like shell Key commands:\npwd: Show the current directory cd: Change directories refers to the parent directory (one level up) refers to the current directory ls: List files and folders -a: Show all files, including hidden files -l: Show detailed information about files less: View file contents one page at a time with navigation options, including scrolling backward and searching more: Display file contents one screen at a time, with limited backward scrolling and basic navigation cat: Show the entire file content at once without scrolling or navigation, useful for smaller files mkdir: Create a new directory rmdir: Remove an empty directory touch: Create a new file mv: Move or rename files Rename: mv oldname txt newname txt\nMove: mv filename txt /path/to/target/\ncp: Copy files -r: Recursively copy directories and their contents rm: Delete files -r: Recursively delete directories and their contents echo: Display a line of text or a variable's value Use >> to append output to a file without overwriting existing content (e g",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-commands\\6724e387ee098d1ef33108ba.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "16d20f70bdd069a377335fee6019eba8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-commands\\6724e387ee098d1ef33108ba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "files mkdir: Create a new directory rmdir: Remove an empty directory touch: Create a new file mv: Move or rename files Rename: mv oldname txt newname txt Move: mv filename txt /path/to/target/ cp: Copy files -r: Recursively copy directories and their contents rm: Delete files -r: Recursively delete directories and their contents echo: Display a line of text or a variable's value Use >> to append output to a file without overwriting existing content (e g, echo \"text\" >> file txt) exit: Exit the terminal session clear: Clear the terminal screen find: Search for files and directories -name: Search for files by name pattern (e g , find -name \"* txt\") Use man followed by a command (e g , man ls) to access detailed manual/help pages Command Options and Flags\nOptions or flags: modify a command's behavior and are usually prefixed with hyphens:\nLong form (two hyphens):\nExample: --help, --version\nValues are attached using an equals sign, e g , --width=50 Short form (one hyphen):\nExample: -a, -l\nValues are passed with a space, e g , -w 50 Multiple short options can be chained together, e g , ls -alh --help: You can always use a command with this flag to understand the available options for any command --assignment--\nReview the Bash Commands topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3722,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-commands\\6724e387ee098d1ef33108ba.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a767a3c741fe791e1b72ded5eda8dda5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f1adcf97e3e4c1bd89ebf5\ntitle: Web Performance Quiz\nchallengeType: 8\ndashedName: quiz-web-performance\n--description--\nTo pass the quiz, you must correctly answer at least 18 of the 20 questions below --quizzes--\n--quiz--\n--question--\n--text--\nWhat is the key difference between real performance and perceived performance in web development --distractors--\nReal performance focuses on the number of HTTP requests made by the browser, while perceived performance is based on CSS rendering speed Real performance is only about load times, while perceived performance relates to visual elements like animations and loading indicators Real performance only includes server-side processing times, while perceived performance is entirely client-side --answer--\nReal performance is how fast content is loaded, while perceived performance is how quickly users believe the page loads --question--\n--text--\nWhich metric best indicates how quickly content appears on a web page --distractors--\nTime to Interactive (TTI)\nPage Load Time (PLT)\nLast Contentful Paint (LCP)\n--answer--\nFirst Contentful Paint (FCP)\n--question--\n--text--\nWhich of the following is NOT a way to reduce page loading times --distractors--\nOptimizing Media Assets Leveraging Browser Caching Minifying and Compress Files --answer--\nUsing only JPEG files --question--\n--text--\nWhat is \"time to usable\" --distractors--\nIt is the interval from when a user requests a page to when they can interact with forms on the page It is the time it takes for all images and animations to become available and usable This is the time it takes for all CSS and JavaScript animations to load on the screen --answer--\nIt is the interval from when a user requests a page to when they can meaningfully interact with it --question--\n--text--\nWhat does First Contentful Paint (FCP) measure --distractors--\nThe overall load time for all JavaScript files on the page The delay before a user can interact with any elements on the page The time taken for all stylesheets to fully load and apply --answer--\nThe time it takes for the first piece of text or image to render --question--\n--text--\nWhich of the following is NOT a commonly used performance measurement tool",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8378,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "cd73f7e0a43f682bc6e7fcf0baf5fb57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "with it --question-- --text-- What does First Contentful Paint (FCP) measure --distractors-- The overall load time for all JavaScript files on the page The delay before a user can interact with any elements on the page The time taken for all stylesheets to fully load and apply --answer-- The time it takes for the first piece of text or image to render --question-- --text-- Which of the following is NOT a commonly used performance measurement tool--distractors--\nChrome DevTools\nLighthouse\nWebPageTest\n--answer--\nWebMeasure\n--question--\n--text--\nWhat are Performance Web APIs used for --distractors--\nIt is used to measure the performance for CSS animations only It is used to automatically speed up the performance for a web page It provides a detailed table of performance metrics for the user --answer--\nIt lets developers track how efficiently a webpage loads and responds directly from code --question--\n--text--\nWhich strategy can effectively enhance perceived performance --distractors--\nUsing large images to improve the overall visual quality Loading CSS styles last to prioritize content rendering Preloading all scripts to ensure they are ready when needed --answer--\nDisplaying a loading skeleton while content is being fetched --question--\n--text--\nWhich of the following refers to the time it takes for a request to travel between the browser and the server --distractors--\nrendering\nINP\nCDN\n--answer--\nlatency\n--question--\n--text--\nHow does optimizing CSS impact page performance --distractors--\nIt prevents the browser from executing unnecessary JavaScript It reduces the overall file size of images It eliminates the need for lazy loading images --answer--\nIt speeds up the parsing of HTML --question--\n--text--\nWhich of the following shows how long the main thread is blocked by heavy JavaScript tasks --distractors--\nSource order\nBounce rate\nWebPageTest\n--answer--\nTotal Blocking Time\n--question--\n--text--\nWhen measuring Interaction to Next Paint (INP), what is being evaluated --distractors--\nThe time it takes for the page to fully load all styles and images after a user interaction The delay between a user's interaction and the browser's ability to register the next user input The interval between JavaScript execution and the browser refreshing the page content --answer--\nThe time between a user's interaction and the browser responding by rendering the next frame",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8378,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "499001366f74035b40aec6dfc0bccd56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--question-- --text-- When measuring Interaction to Next Paint (INP), what is being evaluated --distractors-- The time it takes for the page to fully load all styles and images after a user interaction The delay between a user's interaction and the browser's ability to register the next user input The interval between JavaScript execution and the browser refreshing the page content --answer-- The time between a user's interaction and the browser responding by rendering the next frame--question--\n--text--\nWhich of the following APIs gives you high-precision timestamps (in milliseconds) to measure how long different parts of your site take to load --distractors--\nperformance delay()\nperformance previous()\nperformance next()\n--answer--\nperformance now()\n--question--\n--text--\nWhich of the following APIs gives you a breakdown of every stage of page loading from DNS lookup to DOMContentLoaded --distractors--\nPermit Timing API\nPerformance Text API\nPerform Timing API\n--answer--\nPerformance Timing API\n--question--\n--text--\nWhich of the following listens for performance events such as layout shifts, long tasks, and user interactions --distractors--\n``js\nconst observer = new PermitObserve((list) => {\nlist getEntries() forEach((entry) => {\nconsole log(Long task detected: ${entry duration}ms`);\n});\n});\nobserver observe({ type: \"longtask\", buffered: true });\n```\n``js\nconst observer = new PerformObserver((list) => {\nlist getEntries() forEach((entry) => {\nconsole log(Long task detected: ${entry duration}ms`);\n});\n});\nobserver observe({ type: \"longtask\", buffered: true });\n```\n``js\nconst observer = new PermitObserver((list) => {\nlist getEntries() forEach((entry) => {\nconsole log(Long task detected: ${entry duration}ms`);\n});\n});\nobserver observe({ type: \"longtask\", buffered: true });\n```\n--answer--\n``js\nconst observer = new PerformanceObserver((list) => {\nlist getEntries() forEach((entry) => {\nconsole log(Long task detected: ${entry duration}ms`);\n});\n});\nobserver observe({ type: \"longtask\", buffered: true });\n```\n--question--\n--text--\nHow does lazy loading images enhance page performance --distractors--\nIt ensures all images load immediately for a better user experience It reduces the size of image files to speed up loading It preloads images to prevent any loading delays",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8378,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "d2fc8545643ae923fba3a4b88e14c9d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"longtask\", buffered: true }); ``` --answer-- ``js const observer = new PerformanceObserver((list) => { list getEntries() forEach((entry) => { console log(Long task detected: ${entry duration}ms`); }); }); observer observe({ type: \"longtask\", buffered: true }); ``` --question-- --text-- How does lazy loading images enhance page performance --distractors-- It ensures all images load immediately for a better user experience It reduces the size of image files to speed up loading It preloads images to prevent any loading delays--answer--\nIt delays loading non-essential images until they are in view --question--\n--text--\nWhat is code splitting --distractors--\nIt involves splitting your React code into modules that perform only critical tasks\nIt involves splitting your HTML code into modules that perform only non-critical tasks It involves splitting your CSS code into modules that perform critical and non-critical tasks --answer--\nIt involves splitting your JavaScript code into modules that perform critical and non-critical tasks --question--\n--text--\nWhich of the following is the correct way to lazy load an image --distractors--\nhtml\n<img src=\"placeholder jpg\" lazy=\"loading\">\nhtml\n<img src=\"placeholder jpg\" load=\"lazy\">\nhtml\n<img src=\"placeholder jpg\" lazy=\"load\">\n--answer--\nhtml\n<img src=\"placeholder jpg\" loading=\"lazy\">\n--question--\n--text--\nWhich of the following is NOT a way to improve INP --distractors--\nReducing the main thread work by breaking up long JavaScript tasks Optimizing event handlers Deferring or lazy-loading heavy assets --answer--\nUsing only PNG and JPEG images --question--\n--text--\nWhy is energy efficiency a crucial aspect of web performance --distractors--\nIt enhances the overall visual appeal of the webpage It minimizes the amount of JavaScript used on a webpage It decreases the number of CSS files needed and makes your CSS run faster --answer--\nIt reduces the load on hardware, conserving energy and improving sustainability",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8378,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\quiz-web-performance\\66f1adcf97e3e4c1bd89ebf5.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b4e79fc5e23d6faf7eba40312bf648a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723d35bb07d1bd220d0f28d\ntitle: Asynchronous JavaScript Review\nchallengeType: 24\ndashedName: review-asynchronous-javascript\n--description--\nSynchronous JavaScript is executed sequentially and waits for the previous operation to finish before moving on to the next one Asynchronous JavaScript allows multiple operations to be executed in the background without blocking the main thread Thread is a sequence of instructions that can be executed independently of the main program flow Callback functions are functions that are passed as arguments to other functions and are executed after the completion of the operation or as a result of an event The JavaScript engine and JavaScript runtime\nThe JavaScript engine is a program that executes JavaScript code in a web browser It works like a converter that takes your code, turns it into instructions that the computer can understand and work accordingly V8 is an example of a JavaScript engine developed by Google The JavaScript runtime is the environment in which JavaScript code is executed It includes the JavaScript engine which processes and executes the code, and additional features like a web browser or Node js The Fetch API\nThe Fetch API allows web apps to make network requests, typically to retrieve or send data to the server It provides a fetch() method that you can use to make these requests You can retrieve text, images, audio, JSON, and other types of data using the Fetch API HTTP methods for Fetch API\nThe Fetch API supports various HTTP methods to interact with the server The most common methods are:\nGET: Used to retrieve data from the server By default, the Fetch API uses the GET method to retrieve data js\nfetch('https://api example com/data')\nTo use the fetched data, it must be converted to JSON format using the json() method:\njs\nfetch('https://api example com/data') then(response => response json()) then(data => console log(data))\nIn this code, the response coming from the Fetch API is a promise and the then handler is converting the response to a JSON format POST: Used to send data to the server The POST method is used to create new resources on the server js\nfetch('https://api example com/users', {\nmethod: 'POST',\nheaders: {\n'Content-Type': 'application/json',\n},\nbody: JSON stringify({\nname: 'John Doe',\nemail: 'john@example com'\n})\n})\nIn this example, we're sending a POST request to create a new user",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9033,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "eceda697218d02bb3e3174e825de9a35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "coming from the Fetch API is a promise and the then handler is converting the response to a JSON format POST: Used to send data to the server The POST method is used to create new resources on the server js fetch('https://api example com/users', { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON stringify({ name: 'John Doe', email: 'john@example com' }) }) In this example, we're sending a POST request to create a new userWe have specified the method as POST, set the appropriate headers, and included a body with the data we want to send The body needs to be a string, so we use JSON stringify() to convert our object to a JSON string PUT: Used to update data on the server The PUT method is used to update existing resources on the server js\nfetch('https://api example com/users/45', {\nmethod: 'PUT',\nheaders: {\n'Content-Type': 'application/json',\n},\nbody: JSON stringify({\nname: 'John Smith',\nemail: 'john@example com'\n})\n})\nIn this example, we are updating the ID 45 that is specified at the end of the URL We have used the PUT method on the code and also specified the data as the body which will be used to update the identified data DELETE: Used to delete data on the server The DELETE method is used to delete resources on the server js\nfetch('https://api example com/users/45', {\nmethod: 'DELETE'\n})\nIn this example, we're sending a DELETE request to remove a user with the ID 45 Promise and promise chaining\nPromises are objects that represent the eventual completion or failure of an asynchronous operation and its resulting value The value of the promise is known only when the async operation is completed Here is an example to create a simple promise:\njs\nconst promise = new Promise((resolve, reject) => {\nsetTimeout(() => {\nresolve('Data received successfully');\n}, 2000);\n});\nThe then() method is used in a Promise to specify what should happen when the Promise is fulfilled, while catch() is used to handle any errors that occur Here is an example of using then() and catch() with a Promise:\njs\npromise then(data => {\nconsole log(data);\n}) catch(error => {\nconsole error(error);\n});\nIn the above example, the then() method is used to log the data received from the Promise, while the",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9033,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "1a683ed7c49227e625b2980f51404d7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}, 2000); }); The then() method is used in a Promise to specify what should happen when the Promise is fulfilled, while catch() is used to handle any errors that occur Here is an example of using then() and catch() with a Promise: js promise then(data => { console log(data); }) catch(error => { console error(error); }); In the above example, the then() method is used to log the data received from the Promise, while thecatch() method is used to log any errors that occur Promise chaining: One of the powerful features of Promises is that we can chain multiple asynchronous operations together Each then() can return a new Promise, allowing you to perform a sequence of asynchronous operations one after the other Here is an example of Promise chaining:\njs\nfetch('https://api example com/data') then(response => response json()) then(data => {\nconsole log(data);\nreturn fetch('https://api example com/other-data');\n}) then(response => response json()) then(otherData => {\nconsole log(otherData);\n}) catch(error => {\nconsole error(error);\n});\nIn the above example, we first fetch data from one URL, then fetch data from another URL based on the first response, and finally log the second data received The catch method would handle any errors that occur during the process This means you don't need to add error handling to each step, which can greatly simplify your code Using async/await to handle promises\nAsync/await makes writing & reading asynchronous code easier which is built on top of Promises async: The async keyword is used to define an asynchronous function An async function returns a Promise, which resolves with the value returned by the async function await: The await keyword is used inside an async function to pause the execution of the function until the Promise is resolved It can only be used inside an async function Here is an example of using async/await:\n``js\nasync function delayedGreeting(name) {\nconsole log(\"A Messenger entered the chat \");\nawait new Promise(resolve => setTimeout(resolve, 2000));\nconsole log(Hello, ${name} `);\n}\ndelayedGreeting(\"Alice\");\nconsole log(\"First Printed Message \");\n```\nIn the above example, the delayedGreeting function is an async function that pauses for 2 seconds before printing the greeting message The await keyword is used to pause the function execution until the Promise is resolved One of the biggest advantages of async/await is error handling via try/catch blocks",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9033,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3b1def60f44303e53a9cad6c2206b0f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "delayedGreeting(name) { console log(\"A Messenger entered the chat \"); await new Promise(resolve => setTimeout(resolve, 2000)); console log(Hello, ${name} `); } delayedGreeting(\"Alice\"); console log(\"First Printed Message \"); ``` In the above example, the delayedGreeting function is an async function that pauses for 2 seconds before printing the greeting message The await keyword is used to pause the function execution until the Promise is resolved One of the biggest advantages of async/await is error handling via try/catch blocksHere's an example:\n```js\nasync function fetchData() {\ntry {\nconst response = await fetch('https://api example com/data');\nconst data = await response json();\nconsole log(data);\n} catch (error) {\nconsole error(error);\n}\n}\nfetchData();\n```\nIn the above example, the try block contains the code that might throw an error, and the catch block handles the error if it occurs This makes error handling more straightforward and readable The async attribute\nThe async attribute tells the browser to download the script file asynchronously while continuing to parse the HTML document Once the script is downloaded, the HTML parsing is paused, the script is executed, and then HTML parsing resumes You should use async for independent scripts where the order of execution doesn't matter\nThe defer attribute\nThe defer attribute also downloads the script asynchronously, but it defers the execution of the script until after the HTML document has been fully parsed The defer scripts maintain the order of execution as they appear in the HTML document It's important to note that both async and defer attributes are ignored for inline scripts and only work for external script files When both async and defer attributes are present, the async attribute takes precedence Geolocation API\nThe Geolocation API provides a way for websites to request the user's location The example below demonstrates the API's  getCurrentPosition() method which is used to get the user's current location js\nnavigator geolocation getCurrentPosition(\n(position) => {\nconsole log(\"Latitude: \" + position coords latitude);\nconsole log(\"Longitude: \" + position coords longitude);\n},\n(error) => {\nconsole log(\"Error: \" + error message);\n}\n);\nIn this code, we're calling getCurrentPosition and passing it a function which will be called when the position is successfully obtained The position object contains a variety of information, but here we have selected latitude and longitude only If there is an issue with getting the position, then the error will be logged to the console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9033,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "31cb02de36bf5ab2bf31f49c67641a6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "latitude); console log(\"Longitude: \" + position coords longitude); }, (error) => { console log(\"Error: \" + error message); } ); In this code, we're calling getCurrentPosition and passing it a function which will be called when the position is successfully obtained The position object contains a variety of information, but here we have selected latitude and longitude only If there is an issue with getting the position, then the error will be logged to the consoleIt is important to respect the user's privacy and only request their location when necessary --assignment--\nReview the Asynchronous JavaScript topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9033,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-asynchronous-javascript\\6723d35bb07d1bd220d0f28d.md",
      "source_type": "git_repo"
    },
    "token_count": 119,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "d3d14bd61f640afdd2f2d0c5cf388890",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a887a7e62c75e9ab1ee4a\ntitle: Basic CSS Review\nchallengeType: 24\ndashedName: review-basic-css\n--description--\nCSS Basics\nWhat is CSS : Cascading Style Sheets (CSS) is a markup language used to apply styles to HTML elements CSS is used for colors, background images, layouts and more Basic Anatomy of a CSS Rule: A CSS rule is made up of two main parts: a selector and a declaration block A selector is a pattern used in CSS to identify and target specific HTML elements for styling A declaration block applies a set of styles for a given selector or selectors Here is the general syntax of a CSS rule:\ncss\nselector {\nproperty: value;\n}\nmeta name=\"viewport\" Element: This meta element gives the browser instructions on how to control the page's dimensions and scaling on different devices, particularly on mobile phones and tablets Default Browser Styles: Each HTML element will have default browser styles applied to them This usually includes items like default margins and paddings Inline, Internal, and External CSS\nInline CSS: These styles are written directly within an HTML element using the style attribute Most of the time you will not be using inline CSS due to separation of concerns Here is an example of inline CSS:\n```html\nThis is a red paragraph ```\nInternal CSS: These styles are written within the <style> tags inside the head section of an HTML document This can be useful for creating short code examples, but usually you will not need be using internal CSS External CSS: These styles are written in a separate CSS file and linked to the HTML document using the link element in the head section For most projects, you will use an external CSS file over internal or inline CSS Working With the width and height Properties\nwidth Property: This property specifies the width of an element If you do not specify a width, then the default is set to auto This means the element will take up the full width of its parent container min-width Property: This property specifies the minimum width for an element max-width Property: This property specifies the maximum width for an element height Property: This property specifies the height of an element Similarly, the height is auto by default, which means it will adjust to the content inside min-height Property: This property specifies the minimum height for an element max-height Property: This property specifies the maximum height for an element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "42efd5dae3221fa2ca15eeaddc6af548",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "full width of its parent container min-width Property: This property specifies the minimum width for an element max-width Property: This property specifies the maximum width for an element height Property: This property specifies the height of an element Similarly, the height is auto by default, which means it will adjust to the content inside min-height Property: This property specifies the minimum height for an element max-height Property: This property specifies the maximum height for an elementDifferent Types of CSS Combinators\nDescendant Combinator: This combinator is used to target elements that are descendants of a specified parent element The following example will target all li items inside ul elements ```html\nExample item one\nExample item two\nExample item three\n```\ncss\nul li {\nbackground-color: yellow;\n}\nChild Combinator (>): This combinator is used to select elements that are direct children of a specified parent element The following example will target all p elements that are direct children of the container class ```html\nThis will get styled This will not get styled ```\ncss container > p {\nbackground-color: black;\ncolor: white;\n}\nNext-sibling Combinator (+): This combinator selects an element that immediately follows a specified sibling element The following example will select the paragraph element that immediately follows the h2 element ```html\nI am a sub heading\nThis paragraph element will get a red background ```\ncss\nh2 + p {\nbackground-color: red;\n}\nSubsequent-sibling Combinator (~): This combinator selects all siblings of a specified element that come after it The following example will style only the second paragraph element because it is the only one that is a sibling of the ul element and shares the same parent ```html\nThis will not get styled Example item one\nExample item two\nExample item three\nThis will get styled This will not get styled ```\ncss\nul ~ p {\nbackground-color: green;\n}\nInline, Block, and Inline-Block Level Elements\nInline Level Elements: Inline elements only take up as much width as they need and do not start on a new line These elements flow within the content, allowing text and other inline elements to appear alongside them Common inline elements are span, anchor, and img elements Block Level Elements: Block-level elements start on a new line and take up the full width available to them by default, stretching across the width of their container Some common block-level elements are div, paragraph, and section elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "589b059532e3d439d64c805568f64df4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "much width as they need and do not start on a new line These elements flow within the content, allowing text and other inline elements to appear alongside them Common inline elements are span, anchor, and img elements Block Level Elements: Block-level elements start on a new line and take up the full width available to them by default, stretching across the width of their container Some common block-level elements are div, paragraph, and section elementsInline-Block Level Elements: You can set an element to inline-block by using the display property These elements behave like inline elements but can have a width and height set like block-level elements Margin and Padding\nmargin Property: This property is used to apply space outside the element, between the element's border and the surrounding elements padding Property: This property is used to apply space inside the element, between the content and its border margin Shorthand: You can specify 1–4 values to set the margin sides One value applies to all four sides; two values set top and bottom, then right and left; three values set top, horizontal (right and left), then bottom; four values set top, right, bottom, left padding Shorthand: You can specify 1–4 values to set the padding sides One value applies to all four sides; two values set top and bottom, then right and left; three values set top, horizontal (right and left), then bottom; four values set top, right, bottom, left CSS Specificity\nInline CSS Specificity: Inline CSS has the highest specificity because it is applied directly to the element It overrides any internal or external CSS The specificity value for inline styles is (1, 0, 0, 0) Internal CSS Specificity: Internal CSS is defined within a style element in the head section of the HTML document It has lower specificity than inline styles but can override external styles External CSS Specificity: External CSS is linked via a link element in the head section and is written in separate css files It has the lowest specificity but provides the best maintainability for larger projects Universal Selector (*): a special type of CSS selector that matches any element in the document It is often used to apply a style to all elements on the page, which can be useful for resetting or normalizing styles across different browsers The universal selector has the lowest specificity value of any selector It contributes 0 to all parts of the specificity value (0, 0, 0, 0)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "76dc413e3ff0dff70bb6de36b7f068d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "specificity but provides the best maintainability for larger projects Universal Selector (*): a special type of CSS selector that matches any element in the document It is often used to apply a style to all elements on the page, which can be useful for resetting or normalizing styles across different browsers The universal selector has the lowest specificity value of any selector It contributes 0 to all parts of the specificity value (0, 0, 0, 0)Type Selectors: These selectors target elements based on their tag name Type selectors have a relatively low specificity compared to other selectors The specificity value for a type selector is (0, 0, 0, 1) Class Selectors: These selectors are defined by a period ( ) followed by the class name The specificity value for a class selector is (0, 0, 1, 0) This means that class selectors can override type selectors, but they can be overridden by ID selectors and inline styles ID Selectors: ID selectors are defined by a hash symbol (#) followed by the ID name ID selectors have a very high specificity, higher than type selectors and class selectors, but lower than inline styles The specificity value for an ID selector is (0, 1, 0, 0) important keyword: used to give a style rule the highest priority, allowing it to override any other declarations for a property When used, it forces the browser to apply the specified style, regardless of the specificity of other selectors You should be cautious when using important because it can make your CSS harder to maintain and debug Cascade Algorithm: An algorithm used to decide which CSS rules to apply when there are multiple styles targeting the same element It ensures that the most appropriate styles are used, based on a set of well-defined rules CSS Inheritance: The process by which styles are passed down from parent elements to their children Inheritance allows you to define styles at a higher level in the document tree and have them apply to multiple elements without explicitly specifying them for each element --assignment--\nReview the Basic CSS topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-css\\671a887a7e62c75e9ab1ee4a.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ec77eae36287bee2c6aee1a527d0cfdc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-computer-basics\\671a87e6dcef5b5bd765e5ed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a87e6dcef5b5bd765e5ed\ntitle: Computer Basics Review\nchallengeType: 24\ndashedName: review-computer-basics\n--description--\nUnderstanding Computer, Internet and Developer Tooling Basics\nMotherboard: holds all of the memory, connectors, and hard drives that are needed to run the computer It serves as the main circuit board for the computer Central Processing Unit(CPU): a processor that is responsible for executing instructions and performing calculations Random Access Memory(RAM): a temporary storage location for the computer's CPU Hard Disk Drive(HDD): a permanent storage location that is used to store data even when the computer is turned off Solid State Drive(SSD): non-volatile flash memory and can be used in place of a hard drive Power Supply Unit(PSU): responsible for converting the electricity from the wall outlet into a form that the computer can use Graphics Processing Unit(GPU): responsible for rendering visuals on the computer screen Different Types of Internet Service Providers: An Internet Service Provider (ISP) is a company that provides access to the internet There are different types of ISPs, including dial-up, DSL, cable, fiber-optic, and satellite Safe Ways to Sign Into Your Computer: Examples of safe ways to sign into your computer include using a strong password, enabling two-factor authentication, and using a password manager Integrated Development Environment (IDE): a tool that helps developers write, test and debug code in an efficient manner Code Editor: a tool that developers use to write and debug code Git: a popular version control system that allows developers to track changes in their code and collaborate with others Cloud-based Hosting Services for repositories: A repository is a storage location for project files and version history Popular cloud-based hosting services for repositories include GitHub, GitLab, and Bitbucket Package Managers: tools that help developers simplify the process of adding, updating, and removing libraries and project dependencies Examples include npm, pip, and Maven Testing Libraries and Frameworks: Testing is done in software to ensure that the code works as expected Examples of testing libraries and frameworks include Jest, PHPUnit, and JUnit Working With Files, File Systems and Media Formats\nBest practices for naming files: You will want to name your files in a way that is easy to understand and maintain For example, about-us html is a more descriptive name than page1 html root directory: top-level directory in a file system Directory is another name for a folder",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-computer-basics\\671a87e6dcef5b5bd765e5ed.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1c5d4d71634808924d3bbcbbcf923483",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-computer-basics\\671a87e6dcef5b5bd765e5ed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to ensure that the code works as expected Examples of testing libraries and frameworks include Jest, PHPUnit, and JUnit Working With Files, File Systems and Media Formats Best practices for naming files: You will want to name your files in a way that is easy to understand and maintain For example, about-us html is a more descriptive name than page1 html root directory: top-level directory in a file system Directory is another name for a folderMarkdown: a markup language commonly used for documentation and README files A README file is a file that contains information about a project, such as how to install and use it index html: represents the default page that is displayed when a user visits a website Create, Move, and Delete files and folders using Explorer/Finder: Explorer is the file manager in Windows, and Finder is the file manager in macOS You can use these tools to create, move, and delete files and folders Searching for files and folders: You can use the search functionality in Explorer or Finder to find files and folders on your computer HTML, CSS and JS File Types: html file extension is used for HTML files, css for CSS files, and js for JavaScript files Common Image and Graphic Formats: JPEG and PNG are common image file formats GIF is another common image file format that supports animation SVG is a file format for vector graphics Common Audio and Video Formats: The MP3 format is commonly used for audio files The MP4 format is commonly used for video files The MOV format was developed by Apple and is commonly used for video files Common Font Formats: The TTF format is commonly used for TrueType fonts The WOFF format is commonly used for web fonts The successor to WOFF is WOFF2, which provides better compression ZIP: a file format that is used to compress files and folders Browsing the Web Effectively\nWhat is a Web browser : a software application that allows users to access and view websites on the internet What is a Search Engine: a tool that allows users to search for information on the internet Examples include Google, Bing, and Yahoo Common web browsers: A few examples of common web browsers include Google Chrome, Mozilla Firefox, and Microsoft Edge Common Search Strategies: You can use site: followed by the URL of a website to search for content on that website You can use filetype: followed by a file extension to search for files of that type You can prefix a search term with a minus sign to exclude results containing that term",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-computer-basics\\671a87e6dcef5b5bd765e5ed.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "80163792adebf99c1052c0abec336127",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-computer-basics\\671a87e6dcef5b5bd765e5ed.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "include Google, Bing, and Yahoo Common web browsers: A few examples of common web browsers include Google Chrome, Mozilla Firefox, and Microsoft Edge Common Search Strategies: You can use site: followed by the URL of a website to search for content on that website You can use filetype: followed by a file extension to search for files of that type You can prefix a search term with a minus sign to exclude results containing that termYou can prefix a search term with a plus sign to include results containing that term --assignment--\nReview the Computer Basics topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5069,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-computer-basics\\671a87e6dcef5b5bd765e5ed.md",
      "source_type": "git_repo"
    },
    "token_count": 110,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d336d6b84ffe516a89c8cd40b176aced",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-classes-and-objects\\67f39d848979082814c07d9c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39d848979082814c07d9c\ntitle: Classes and Objects Review\nchallengeType: 24\ndashedName: review-classes-and-objects\n--description--\nPython Classes and Objects\nClass Definition: A class is a blueprint for creating objects It defines the behavior an object will have through its attributes and methods Here is a basic example of a class definition in Python:\n```python\nclass Dog:\ndef init(self, name, age):\nself name = name\nself age = age\ndef bark(self):\nprint(f'{self name upper()} says woof woof ')\n```\nCreating Objects: Objects are instances of a class They are created by calling the class with the necessary arguments ```python\ndog1 = Dog('Jack', 3)\ndog2 = Dog('Thatcher', 5)\ndog1 bark()  # JACK says woof woof dog2 bark()  # THATCHER says woof woof ```\nCalling methods with objects: You can call methods on objects to perform actions or retrieve information python\nobjectName1 methodName()\nobjectName2 methodName()\nDifference Between Class and Object: A class is a reusable template, while an object is a specific instance of that class with actual data Attributes\nInstance Attributes: Defined in __init__() using self, and unique to each object Class Attributes: Defined directly inside the class and shared by all instances ```python\nclass Dog:\nspecies = 'French Bulldog'  # Class attribute\ndef __init__(self, name):\nself name = name  # Instance attribute\nprint(Dog species) # French Bulldog\njack = Dog('Jack')\nprint(jack name)     # Jack\nprint(jack species)  # French Bulldog\n```\nMethods\nMethods: Functions defined inside a class that operate on the object's attributes ```python\nclass Car:\ndef init(self, color, model):\nself color = color\nself model = model\ndef describe(self):\nreturn f'This car is a {self color} {self model}'\nmy_car_1 = Car('red', 'Tesla Model S')\nprint(my_car_1 describe())  # This car is a red Tesla Model S\n```\nAccessing Methods: Call methods on objects using the dot notation Here is an example of calling the describe method on two different car objects:\n```python\nclass Car:\ndef init(self, color, model):\nself",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-classes-and-objects\\67f39d848979082814c07d9c.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "4bf7118a667964e0b74bbafa6dd709c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-classes-and-objects\\67f39d848979082814c07d9c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "```python class Car: def init(self, color, model): self color = color self model = model def describe(self): return f'This car is a {self color} {self model}' my_car_1 = Car('red', 'Tesla Model S') print(my_car_1 describe()) # This car is a red Tesla Model S ``` Accessing Methods: Call methods on objects using the dot notation Here is an example of calling the describe method on two different car objects: ```python class Car: def init(self, color, model): selfcolor = color\nself model = model\ndef describe(self):\nreturn f'This car is a {self color} {self model}'\nmy_car_1 = Car('red', 'Tesla Model S')\nmy_car_2 = Car('green', 'Lamborghini Revuelto')\nprint(my_car_1 describe()) # Calling methods using the dot notation\nprint(my_car_2 describe()) # Calling methods using the dot notation\n```\nDunder (Magic) Methods\nDefinition: Special methods that start and end with a double underscore (e g , __init__, __len__, __str__, __eq__) Python uses them internally for built-in operations ```python\nclass Book:\ndef init(self, title, pages):\nself title = title\nself pages = pages\ndef __len__(self):\nreturn self pages\ndef __str__(self):\nreturn f\"'{self title}' has {self pages} pages\"\ndef __eq__(self, other):\nreturn self pages == other pages\nbook1 = Book('Built Wealth Like a Boss', 420)\nprint(len(book1))        # 420\nprint(str(book1))        # 'Built Wealth Like a Boss' has 420 pages\n```\nCalling dunder methods indirectly: You don't need to call dunder methods directly Instead, Python automatically calls them when certain actions happen These operations include:\narithmetic operations like addition, subtraction, multiplication, division, and others In addition, __add__() is called, __sub__() for subtraction, __mul__() for multiplication, and __truediv__() for division string operations like concatenation, repetition, formatting, and conversion to text __add__() is called for concatenation, __mul__() for repetition, __format__() for formatting, __str__() and __repr__() for text conversion, and so on comparison operations like equality, less-than, greater-than, and others",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-classes-and-objects\\67f39d848979082814c07d9c.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2441605d7c69cac52edc5206848ff8ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-classes-and-objects\\67f39d848979082814c07d9c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "methods directly Instead, Python automatically calls them when certain actions happen These operations include: arithmetic operations like addition, subtraction, multiplication, division, and others In addition, __add__() is called, __sub__() for subtraction, __mul__() for multiplication, and __truediv__() for division string operations like concatenation, repetition, formatting, and conversion to text __add__() is called for concatenation, __mul__() for repetition, __format__() for formatting, __str__() and __repr__() for text conversion, and so on comparison operations like equality, less-than, greater-than, and others__eq__() is called for equality checks, __lt__() for less-than, __gt__() for greater-than, and so on iteration operations like making an object iterable and advancing through items __iter__() is called to return an iterator and  __next__() to fetch the next item Real World Example: Shopping Cart\nCart Class with Dunder Methods: Allows adding, removing, iterating, and checking contents with built-in behavior ```python\nclass Cart:\ndef init(self):\nself items = []\ndef add(self, item):\nself items append(item)\ndef remove(self, item):\nif item in self items:\nself items remove(item)\nelse:\nprint(f'{item} is not in cart')\ndef list_items(self):\nreturn self items\ndef __len__(self):\nreturn len(self items)\ndef __getitem__(self, index):\nreturn self items[index]\ndef __contains__(self, item):\nreturn item in self items\ndef __iter__(self):\nreturn iter(self items)\ncart = Cart()\ncart add('Laptop')\nprint(len(cart))        # 1\nprint('Laptop' in cart) # True\n```\n--assignment--\nReview the Classes and Objects topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5256,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-classes-and-objects\\67f39d848979082814c07d9c.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c6955921f8e9c1c2e4a899583ce0046e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-accessibility\\671a955b74ab5588735800d1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a955b74ab5588735800d1\ntitle: CSS Accessibility Review\nchallengeType: 24\ndashedName: review-css-accessibility\n--description--\nColor Contrast Tools\nWebAIM's Color Contrast Checker: This online tool allows you to input the foreground and background colors of your design and instantly see if they meet the Web Content Accessibility Guidelines (WCAG) standards TPGi Colour Contrast Analyzer: This is a free color contrast checker that allows you to check if your websites and apps meet the Web Content Accessibility Guidelines (WCAG) standards This tool also comes with a Color Blindness Simulator feature which allows you to see what your website or app looks like for people with color vision issues Accessibility Tree\nAccessibility tree is a structure used by assistive technologies, such as screen readers, to interpret and interact with the content on a webpage max() Function\nThe max() function returns the largest of a set of comma-separated values:\ncss\nimg {\nwidth: max(250px, 25vw);\n}\nIn the above example, the width of the image will be 250px if the viewport width is less than 1000 pixels If the viewport width is greater than 1000 pixels, the width of the image will be 25vw This is because 25vw is equal to 25% of the viewport width Best Practices with CSS and Accessibility\ndisplay: none;: Using display: none; means that screen readers and other assistive technologies won't be able to access this content, as it is not included in the accessibility tree Therefore, it is important to use this method only when you want to completely remove content from both visual presentation and accessibility visibility: hidden;: This property and value hides the content visually but keeps it in the document flow, meaning it still occupies space on the page These elements will also no longer be read by screen readers because they will have been removed from the accessibility tree sr-only CSS class: This is a common technique used to visually hide content while keeping it accessible to screen readers css sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\nscroll-behavior: smooth;: This property and value enables a smooth scrolling behavior",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3695,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-accessibility\\671a955b74ab5588735800d1.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8124a03bef0fc4e9644acc4671ad1912",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-accessibility\\671a955b74ab5588735800d1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "elements will also no longer be read by screen readers because they will have been removed from the accessibility tree sr-only CSS class: This is a common technique used to visually hide content while keeping it accessible to screen readers css sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0; } scroll-behavior: smooth;: This property and value enables a smooth scrolling behaviorprefers-reduced-motion feature: This is a media feature that can be used to detect the user's animation preference css\n@media (prefers-reduced-motion: no-preference) {\n* {\nscroll-behavior: smooth;\n}\n}\nIn the above example, smooth scrolling is enabled if the user doesn't have animation preference set on their device Hiding Content with HTML Attributes\naria-hidden attribute: Used to hide an element from people using assistive technology such as screen readers For example, this can be used to hide decorative images that do not provide any meaningful content hidden attribute: This attribute is supported by most modern browsers and hides content both visually and from the accessibility tree It can be easily toggled with JavaScript ```html\nThis paragraph is visible for sighted users, but is hidden from assistive technology This paragraph is hidden from both sighted users and assistive technology ```\nAccessibility Issue of the placeholder Attribute\nUsing placeholder text is not great for accessibility Too often, users confuse the placeholder text with an actual input value - they think there is already a value in the input --assignment--\nReview the CSS Accessibility topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3695,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-accessibility\\671a955b74ab5588735800d1.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "358bf8ca80d7b2be2a8b19683d83822d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e417419c2f211bb41bfc\ntitle: Bash Scripting Review\nchallengeType: 24\ndashedName: review-bash-scripting\n--description--\nBash Scripting Basics\nBash scripting: Writing a sequence of Bash commands in a file, which you can then execute with Bash to run the contents of the file Shebang: The commented line at the beginning of a script (e g , # /bin/bash) that indicates what interpreter should be used for the script bash\n# /bin/bash\nVariable assignment: Instantiate variables using the syntax variable_name=value bash\nservers=(\"prod\" \"dev\")\nVariable creation rules: Create variables with VARIABLE_NAME=VALUE syntax No spaces are allowed around the equal sign (=) Use double quotes if the value contains spaces bash\nNAME=John\nMESSAGE=\"Hello World\"\nCOUNT=5\nTEXT=\"The next number is, \"\nVariable usage: Access variable values by placing $ in front of the variable name bash\necho $NAME\necho \"The message is: $MESSAGE\"\nVariable interpolation: Use $variable_name to access the value of a variable within strings and commands ```bash\nTEXT=\"The next number is, \"\nNUMBER=42\necho $TEXT B:$NUMBER\necho $TEXT I:$NUMBER\necho \"Pulling $server\"\nrsync --archive --verbose $server:/etc/nginx/conf d/server conf configs/$server conf\n```\nVariable scope: Shell scripts run from top to bottom, so variables can only be used below where they are created bash\nNAME=\"Alice\"\necho $NAME\nUser input: Use read to accept input from users and store it in a variable bash\nread USERNAME\necho \"Hello $USERNAME\"\nComments: Add comments to your scripts using # followed by your comment text Single-line comments start with # and continue to the end of the line\nComments are ignored by the shell and don't affect script execution\nbash\n# This is a single-line comment\nNAME=\"John\"  # Comment at end of line\nMulti-line comments: Comment out blocks of code using colon and quotes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "83ada73bc855d7437b861930487c9291",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "from users and store it in a variable bash read USERNAME echo \"Hello $USERNAME\" Comments: Add comments to your scripts using # followed by your comment text Single-line comments start with # and continue to the end of the line Comments are ignored by the shell and don't affect script execution bash # This is a single-line comment NAME=\"John\" # Comment at end of line Multi-line comments: Comment out blocks of code using colon and quotesbash\n: '\nThis is a multi-line comment\nEverything between the quotes is ignored\nUseful for debugging or documentation\n'\nBuilt-in commands and help:\nUse help to see a list of built-in bash commands\nUse help <command> to get information about specific built-in commands\nSome commands (like if) are built-ins and don't have man pages\nBuilt-in commands are executed directly by the shell rather than as external programs\nUse help function to see information about creating functions\nbash\nhelp\nhelp if\nhelp function\nFinding command locations: Use which to locate where executables are installed Shows the full path to executable files\nUseful for finding interpreter locations (like bash)\nHelps verify which version of a command will be executed\nbash\nwhich bash\nwhich python\nwhich ls\nManual pages: Use man to access detailed documentation for commands Provides comprehensive information about command usage\nShows all available options and examples\nUse arrow keys to navigate, 'q' to quit\nNot all commands have manual pages (built-ins use help instead)\nbash\nman echo\nman ls\nman bash\nHelp flags: Many commands support --help for quick help information Alternative to manual pages for quick reference\nShows command syntax and common options\nNot all commands support this flag (some may show error)\nbash\nls --help\nchmod --help\nmv --help\nEcho command options: The echo command supports various options:\n-e option enables interpretation of backslash escapes\n\\n creates a new line\nEmpty lines are only printed when values are enclosed in quotes\nUseful for creating formatted output and program titles\nbash\necho -e \"Line 1\\nLine 2\"\necho \"\"\necho -e \"\\n~~ Program Title ~~\\n\"\necho \"Line 1\\nLine 2\"\nScript arguments: Programs can accept arguments that are accessible using $ variables $* prints all arguments passed to the script\n$@ prints all arguments passed to the script as separate quoted strings\n$<number> accesses specific arguments by position (e g",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "f85e6734aa31da5e1d522731acf8ecf2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "lines are only printed when values are enclosed in quotes Useful for creating formatted output and program titles bash echo -e \"Line 1\\nLine 2\" echo \"\" echo -e \"\\n~~ Program Title ~~\\n\" echo \"Line 1\\nLine 2\" Script arguments: Programs can accept arguments that are accessible using $ variables $* prints all arguments passed to the script $@ prints all arguments passed to the script as separate quoted strings $<number> accesses specific arguments by position (e g, $1, $2, $3)\nbash\necho $*\necho $@\necho $1\necho $2\nDouble Bracket Expressions [[ ]]\nDouble bracket syntax: Use [[ ]] for conditional testing and pattern matching Must have spaces inside the brackets and around operators\nReturns exit status 0 (true) or 1 (false) based on the test result\nbash\n[[ $variable == \"value\" ]]\n[[ $number -gt 10 ]]\n[[ -f filename txt ]]\nString comparison operators: Compare strings using various operators within [[ ]] == (equal): Tests if two strings are identical = (not equal): Tests if two strings are different\n< (lexicographically less): String comparison in alphabetical order\n> (lexicographically greater): String comparison in alphabetical order\nbash\n[[ \"apple\" == \"apple\" ]]\n[[ \"apple\" = \"orange\" ]]\n[[ \"apple\" < \"banana\" ]]\n[[ \"zebra\" > \"apple\" ]]\nNumeric comparison operators: Compare numbers using specific numeric operators -eq (equal): Numeric equality comparison\n-ne (not equal): Numeric inequality comparison\n-lt (less than): Numeric less than comparison\n-le (less than or equal): Numeric less than or equal comparison\n-gt (greater than): Numeric greater than comparison\n-ge (greater than or equal): Numeric greater than or equal comparison\nbash\n[[ $number -eq 5 ]]\n[[ $count -ne 0 ]]\n[[ $age -ge 18 ]]\n[[ $score -lt 100 ]]\nLogical operators: Combine multiple conditions using logical operators && (and): Both conditions must be true\n|| (or): At least one condition must be true (not): Negates the condition (makes true false, false true)\nbash\n[[ $age -ge 18 && $age -le 65 ]]\n[[ $name == \"John\" || $name == \"Jane\" ]]\n[[ -f missing_file",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "5367b9b4f49d0deae90ba32576a32b67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "bash [[ $number -eq 5 ]] [[ $count -ne 0 ]] [[ $age -ge 18 ]] [[ $score -lt 100 ]] Logical operators: Combine multiple conditions using logical operators && (and): Both conditions must be true || (or): At least one condition must be true (not): Negates the condition (makes true false, false true) bash [[ $age -ge 18 && $age -le 65 ]] [[ $name == \"John\" || $name == \"Jane\" ]] [[ -f missing_filetxt ]]\nFile test operators: Test file properties and existence -e file: True if file exists\n-f file: True if file exists and is a regular file\n-d file: True if file exists and is a directory\n-r file: True if file exists and is readable\n-w file: True if file exists and is writable\n-x file: True if file exists and is executable\n-s file: True if file exists and has size greater than zero\nbash\n[[ -e /path/to/file ]]\n[[ -f script sh ]]\n[[ -d /home/user ]]\n[[ -x program ]]\nPattern matching with =~: Use regular expressions for advanced pattern matching =~ operator enables regex pattern matching\nPattern should not be quoted when using regex metacharacters\nSupports full regular expression syntax\nCase-sensitive by default\nbash\n[[ \"hello123\" =~ [0-9]+ ]]\n[[ \"email@domain com\" =~ ^[a-zA-Z0-9 _%+-]+@[a-zA-Z0-9 -]+\\ [a-zA-Z]{2,}$ ]]\n[[ \"filename txt\" =~ \\ txt$ ]]\nVariable existence testing: Check if variables are set or empty Test if variable is empty: [[ $variable ]]\nbash\n[[ $undefined_var ]]\nDouble Parentheses Expressions (( ))\nArithmetic evaluation: Use (( )) for mathematical calculations and numeric comparisons Evaluates arithmetic expressions using C-style syntax\nVariables don't need $ prefix inside double parentheses\nReturns exit status 0 if result is non-zero, 1 if result is zero\nSupports all standard arithmetic operators\nbash\n(( result = 10 + 5 ))\n(( count++ ))\n(( total += value ))\nArithmetic operators: Mathematical operators available in (( ))",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "797dcec334d3b6122296339cd821f975",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "bash [[ $undefined_var ]] Double Parentheses Expressions (( )) Arithmetic evaluation: Use (( )) for mathematical calculations and numeric comparisons Evaluates arithmetic expressions using C-style syntax Variables don't need $ prefix inside double parentheses Returns exit status 0 if result is non-zero, 1 if result is zero Supports all standard arithmetic operators bash (( result = 10 + 5 )) (( count++ )) (( total += value )) Arithmetic operators: Mathematical operators available in (( ))+ (addition): Add two numbers\n- (subtraction): Subtract second number from first\n* (multiplication): Multiply two numbers\n/ (division): Divide first number by second (integer division)\n% (modulus): Remainder after division\n** (exponentiation): Raise first number to power of second\nbash\n(( sum = a + b ))\n(( diff = x - y ))\n(( product = width * height ))\n(( remainder = num % 10 ))\n(( power = base ** exponent ))\nAssignment operators: Modify variables using arithmetic assignment operators = (assignment): Assign value to variable\n+= (add and assign): Add value to variable\n-= (subtract and assign): Subtract value from variable\n*= (multiply and assign): Multiply variable by value\n/= (divide and assign): Divide variable by value\n%= (modulus and assign): Set variable to remainder\nbash\n(( counter = 0 ))\n(( counter += 5 ))\n(( total -= cost ))\n(( area *= 2 ))\n(( value /= 3 ))\nIncrement and decrement operators: Modify variables by one ++variable (pre-increment): Increment before use\nvariable++ (post-increment): Increment after use\n--variable (pre-decrement): Decrement before use\nvariable-- (post-decrement): Decrement after use\nbash\n(( ++counter ))\n(( index++ ))\n(( --remaining ))\n(( attempts-- ))\nComparison operators: Compare numbers using arithmetic comparison == (equal): Numbers are equal = (not equal): Numbers are not equal\n< (less than): First number is less than second\n<= (less than or equal): First number is less than or equal to second\n> (greater than): First number is greater than second\n>= (greater than or equal): First number is greater than or equal to second\nbash\n(( age >= 18 ))\n(( score < 100 ))\n(( count == 0 ))\n(( temperature > freezing ))\nLogical operators: Combine arithmetic conditions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "f1a557640dabfdf6758e62ee06e02714",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Numbers are not equal < (less than): First number is less than second <= (less than or equal): First number is less than or equal to second > (greater than): First number is greater than second >= (greater than or equal): First number is greater than or equal to second bash (( age >= 18 )) (( score < 100 )) (( count == 0 )) (( temperature > freezing )) Logical operators: Combine arithmetic conditions&& (and): Both conditions must be true\n|| (or): At least one condition must be true (not): Negates the condition\nbash\n(( age >= 18 && age <= 65 ))\n(( score >= 90 || extra_credit > 0 ))\n(( (count == 0) ))\nBitwise operators: Perform bit-level operations on integers & (bitwise AND): AND operation on each bit\n| (bitwise OR): OR operation on each bit\n^ (bitwise XOR): XOR operation on each bit\n~ (bitwise NOT): Invert all bits\n<< (left shift): Shift bits to the left\n>> (right shift): Shift bits to the right\nbash\n(( result = a & b ))\n(( flags |= new_flag ))\n(( shifted = value << 2 ))\nConditional (ternary) operator: Use condition true_value : false_value syntax Provides a concise way to assign values based on conditions\nSimilar to the ternary operator in C-style languages\nEvaluates condition and returns one of two values\nbash\n(( result = (score >= 60) 1 : 0 ))\n(( max = (a > b) a : b ))\n(( sign = (num >= 0) 1 : -1 ))\nCommand substitution with arithmetic: Use $(( )) to capture arithmetic results Returns the result of the arithmetic expression as a string\nCan be used in assignments or command arguments\nUseful for calculations that need to be used elsewhere\nbash\nresult=$(( 10 + 5 ))\necho \"The answer is $(( a * b ))\"\narray_index=$(( RANDOM % array_length ))\nControl Flow and Conditionals\nConditional statements: Use if statements to execute code based on conditions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "3915fde4448e21c58023dbd384acd4c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": ": -1 )) Command substitution with arithmetic: Use $(( )) to capture arithmetic results Returns the result of the arithmetic expression as a string Can be used in assignments or command arguments Useful for calculations that need to be used elsewhere bash result=$(( 10 + 5 )) echo \"The answer is $(( a * b ))\" array_index=$(( RANDOM % array_length )) Control Flow and Conditionals Conditional statements: Use if statements to execute code based on conditionsBasic syntax: if [[ CONDITION ]] then STATEMENTS fi\nFull syntax: if [[ CONDITION ]] then STATEMENTS elif [[ CONDITION ]] then STATEMENTS else STATEMENTS fi\nCan use both [[ ]] and (( )) expressions for different types of conditions\nelif (else if): Optional, can be repeated multiple times to test additional conditions in sequence\nelse: Optional, executes when all previous conditions are false\nCan mix double parentheses (( )) and double brackets [[ ]] in same conditional chain\nbash\nif (( NUMBER <= 15 ))\nthen\necho \"B:$NUMBER\"\nelif [[ $NUMBER -le 30 ]]\nthen\necho \"I:$NUMBER\"\nelif (( NUMBER < 46 ))\nthen\necho \"N:$NUMBER\"\nelif [[ $NUMBER -lt 61 ]]\nthen\necho \"G:$NUMBER\"\nelse\necho \"O:$NUMBER\"\nfi\nCommand Execution and Process Control\nCommand separation: Use semicolon (;) to run multiple commands on a single line Commands execute sequentially from left to right\nEach command's exit status can be checked individually\nbash\n[[ 4 -ge 5 ]]; echo $ ls -l; echo \"Done\"\nExit status: Every command has an exit status that indicates success or failure Access exit status of the last command with $ Exit status 0 means success (true/no errors)\nAny non-zero exit status means failure (false/errors occurred)\nCommon error codes: 127 (command not found), 1 (general error)\nbash\necho $ [[ 4 -le 5 ]]; echo $ ls; echo $ bad_command; echo $ Subshells and command substitution: Different uses of parentheses for execution contexts Single parentheses ( ) create a subshell\n$(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "75bebfb5947da6e0357f98e582b9c2c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "exit status that indicates success or failure Access exit status of the last command with $ Exit status 0 means success (true/no errors) Any non-zero exit status means failure (false/errors occurred) Common error codes: 127 (command not found), 1 (general error) bash echo $ [[ 4 -le 5 ]]; echo $ ls; echo $ bad_command; echo $ Subshells and command substitution: Different uses of parentheses for execution contexts Single parentheses ( ) create a subshell $() performs command substitution\nSubshells run in separate environments and don't affect parent shell variables\nbash\n( cd /tmp; echo \"Current dir: $(pwd)\" )\ncurrent_date=$(date)\nfile_count=$(ls | wc -l)\necho \"Today is $current_date\"\necho \"Found $file_count files\"\nSleep command: Pause script execution for a specified number of seconds Useful for creating delays in scripts\nCan be used with decimal values for subsecond delays\nbash\nsleep 3\nsleep 0 5\nsleep 1\nLoops\nWhile loops: Execute code repeatedly while a condition is true Syntax: while [[ CONDITION ]] do STATEMENTS done\nbash\nI=5\nwhile [[ $I -ge 0 ]]\ndo\necho $I\n(( I-- ))\nsleep 1\ndone\nUntil loops: Execute code repeatedly until a condition becomes true Syntax: until [[ CONDITION ]] do STATEMENTS done\nbash\nuntil [[ $QUESTION =~ \\ $ ]]\ndo\necho \"Please enter a question ending with \"\nread QUESTION\ndone\nuntil [[ $QUESTION =~ \\ $ ]]\ndo\nGET_FORTUNE again\ndone\nFor loops: Iterate through arrays or lists using for loops with do and done to define the loop's logical block bash\nfor server in \"${servers[@]}\"\ndo\necho \"Processing $server\"\ndone\nfor (( i = 1; i <= 5; i++ ))\ndo\necho \"Number: $i\"\ndone\nfor (( i = 5; i >= 1; i-- ))\ndo\necho \"Countdown: $i\"\ndone\nfor i in {1 5}\ndo\necho \"Count: $i\"\ndone\nArrays\nArrays: Store multiple values in a single variable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "4100d429d801334d8d3b04b9af2f440e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "through arrays or lists using for loops with do and done to define the loop's logical block bash for server in \"${servers[@]}\" do echo \"Processing $server\" done for (( i = 1; i <= 5; i++ )) do echo \"Number: $i\" done for (( i = 5; i >= 1; i-- )) do echo \"Countdown: $i\" done for i in {1 5} do echo \"Count: $i\" done Arrays Arrays: Store multiple values in a single variableCreate arrays with parentheses: ARRAY=(\"value1\" \"value2\" \"value3\")\nAccess elements by index: ${ARRAY[0]}, ${ARRAY[1]}\nAccess all elements: ${ARRAY[@]} or ${ARRAY[*]}\nArray indexing starts at 0\nbash\nRESPONSES=(\"Yes\" \"No\" \"Maybe\" \"Ask again later\")\necho ${RESPONSES[0]}\necho ${RESPONSES[1]}\necho ${RESPONSES[5]}\necho ${RESPONSES[@]}\necho ${RESPONSES[*]}\nArray inspection with declare: Use declare -p to view array details Shows the array type with -a flag\nDisplays all array elements and their structure\nbash\nARR=(\"a\" \"b\" \"c\")\ndeclare -p ARR # ARR=([0]=\"a\" [1]=\"b\" [2]=\"c\")\nArray expansion: Use \"${array_name[@]}\" syntax to expand an array into individual elements bash\nfor server in \"${servers[@]}\"\nFunctions\nFunctions: Create reusable blocks of code Define with FUNCTION_NAME() { STATEMENTS }\nCall by using the function name\nCan accept arguments accessible as $1, $2, etc bash\nGET_FORTUNE() {\necho \"Ask a question:\"\nread QUESTION\n}\nGET_FORTUNE\nFunction arguments: Functions can accept arguments just like scripts Arguments are passed when calling the function\nAccess arguments inside function using $1, $2, etc Use conditional logic to handle different arguments\nbash\nGET_FORTUNE() {\nif [[ $1 ]]\nthen\necho \"Ask a yes or no question:\"\nelse\necho \"Try again Make sure it ends with a question mark:\"\nfi\nread QUESTION\n}\nGET_FORTUNE\nGET_FORTUNE again\nRandom Numbers and Mathematical Operations\nRandom numbers: Generate random values using the $RANDOM variable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "caf928edaa905bbc6d14a0f5bcbad8b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "can accept arguments just like scripts Arguments are passed when calling the function Access arguments inside function using $1, $2, etc Use conditional logic to handle different arguments bash GET_FORTUNE() { if [[ $1 ]] then echo \"Ask a yes or no question:\" else echo \"Try again Make sure it ends with a question mark:\" fi read QUESTION } GET_FORTUNE GET_FORTUNE again Random Numbers and Mathematical Operations Random numbers: Generate random values using the $RANDOM variable$RANDOM generates numbers between 0 and 32767\nUse modulus operator to limit range: $RANDOM % 75\nAdd 1 to avoid zero: $(( RANDOM % 75 + 1 ))\nMust use $(( )) syntax for calculations with $RANDOM\nbash\nNUMBER=$(( RANDOM % 6 ))\nDICE=$(( RANDOM % 6 + 1 ))\nBINGO=$(( RANDOM % 75 + 1 ))\necho $(( RANDOM % 10 ))\nRandom array access: Use random numbers to access array elements randomly Generate random index within array bounds\nUse random index to access array elements\nUseful for random selections from predefined options\nbash\nRESPONSES=(\"Yes\" \"No\" \"Maybe\" \"Outlook good\" \"Don't count on it\" \"Ask again later\")\nN=$(( RANDOM % 6 ))\necho ${RESPONSES[$N]}\nModulus operator: Use % to get the remainder of division operations Essential for limiting random number ranges\nWorks with $RANDOM to create bounded random values\nRANDOM % n gives numbers from 0 to n-1\nbash\necho $(( 15 % 4 ))\necho $(( RANDOM % 100 ))\necho $(( RANDOM % 10 + 1 ))\nEnvironment and System Information\nEnvironment variables: Predefined variables available in the shell environment $RANDOM: Generates random numbers between 0 and 32767\n$LANG: System language setting\n$HOME: User's home directory path\n$PATH: Directories searched for executable commands\nView all with printenv or declare -p\nbash\necho $RANDOM\necho $HOME\necho $LANG\nprintenv\nVariable inspection: Use declare to view and work with variables declare -p: Print all variables and their values\ndeclare -p VARIABLE: Print specific variable details\nShows variable type (string, array, etc",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "c90a3907a63ef374850d1a5c6c32fc84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Predefined variables available in the shell environment $RANDOM: Generates random numbers between 0 and 32767 $LANG: System language setting $HOME: User's home directory path $PATH: Directories searched for executable commands View all with printenv or declare -p bash echo $RANDOM echo $HOME echo $LANG printenv Variable inspection: Use declare to view and work with variables declare -p: Print all variables and their values declare -p VARIABLE: Print specific variable details Shows variable type (string, array, etc) and attributes\nbash\ndeclare -p\ndeclare -p RANDOM\ndeclare -p MY_ARRAY\nCommand types: Different categories of commands available in bash Built-in commands: Executed directly by the shell (e g , echo, read, if)\nExternal commands: Binary files in system directories (e g , ls, sleep, bash)\nShell keywords: Language constructs (e g , then, do, done)\nUse type <command> to see what type a command is\nbash\ntype echo\ntype ls\ntype if\ntype /script sh\nFile Creation and Management\nFile creation: Use touch to create new empty files Creates a new file if it doesn't exist\nUpdates the timestamp if the file already exists\nCommonly used to create script files before editing\nbash\ntouch script sh\ntouch bingo sh\ntouch filename txt\nCreating and Running Bash Scripts\nScript execution methods: Multiple ways to run bash scripts:\nsh scriptname sh: Run with the sh shell interpreter bash scriptname sh: Run with the bash shell interpreter /scriptname sh: Execute directly (requires executable permissions) bash\nsh questionnaire sh\nbash questionnaire sh /questionnaire sh\nFile Permissions and Script Execution\nPermission denied error: When using /scriptname sh, you may get \"permission denied\" if the file lacks executable permissions Checking permissions: Use ls -l to view file permissions bash\nls -l questionnaire sh\nPermission format: The output shows permissions as -rw-r--r-- where:\nFirst character (-): File type (- for regular file, d for directory)\nNext 9 characters: Permissions for owner, group, and others\nr = read, w = write, x = execute\nAdding executable permissions: Use chmod +x to give executable permissions to everyone bash\nchmod +x questionnaire sh\nScript organization: Best practices for structuring bash scripts Start with shebang (#",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "6591f80db9dfc01919bc36e54db00758",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "view file permissions bash ls -l questionnaire sh Permission format: The output shows permissions as -rw-r--r-- where: First character (-): File type (- for regular file, d for directory) Next 9 characters: Permissions for owner, group, and others r = read, w = write, x = execute Adding executable permissions: Use chmod +x to give executable permissions to everyone bash chmod +x questionnaire sh Script organization: Best practices for structuring bash scripts Start with shebang (#/bin/bash)\nAdd descriptive comments about script purpose\nDefine variables at the top\nGroup related functions together\nMain script logic at the bottom\nbash\n# /bin/bash\nNAME=\"value\"\nARRAY=(\"item1\" \"item2\")\nmy_function() {\necho \"Function code here\"\n}\nmy_function\necho \"Script complete\"\nSequential script execution: Create master scripts that run multiple programs in sequence Useful for automating workflows that involve multiple scripts\nEach script runs to completion before the next one starts\nCan combine different programs into a single execution flow\nArguments can be passed to individual scripts as needed\nCan include different types of programs (interactive, automated, etc )\nbash\n# /bin/bash /setup sh /interactive sh /processing sh /cleanup sh\n--assignment--\nReview the Bash Scripting topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21009,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-bash-scripting\\6724e417419c2f211bb41bfc.md",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "5d3636356c29783b97a113f097427fee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-animations\\671a999cc77b7f9bceb4caeb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a999cc77b7f9bceb4caeb\ntitle: CSS Animations Review\nchallengeType: 24\ndashedName: review-css-animations\n--description--\nCSS Animation Basics\nDefinition: CSS animations allow you to create dynamic, visually engaging effects on web pages without the need for JavaScript or complex programming. They provide a way to smoothly transition elements between different styles over a specified duration.\nThe @keyframes Rule: This rule defines the stages and styles of the animation. It specifies what styles the element should have at various points during the animation.\ncss\n@keyframes slide-in {\n0% {\ntransform: translateX(-100%);\n}\n100% {\ntransform: translateX(0);\n}\n}\nanimation Property: This is the shorthand property used to apply animations.\nanimation-name: This specifies the name for the @keyframes rule to use.\nanimation-duration: This sets how long the animation should take to complete.\nanimation-timing-function: This defines how the animation progresses over time (such as ease, linear, ease-in-out).\nanimation-delay: This specifies a delay before the animation starts.\nanimation-iteration-count: This sets how many times the animation should repeat.\nanimation-direction: This determines whether the animation should play forwards, backwards, or alternate.\nanimation-fill-mode: This specifies how the element should be styled before and after the animation.\nanimation-play-state: This allows you to pause and resume the animation.\nAccessibility and the prefers-reduced-motion Media Query\nThe prefers-reduced-motion Media Query: One of the primary accessibility concerns with animations is that they can cause discomfort or even physical harm to some users. People with vestibular disorders or motion sensitivity may experience dizziness, nausea, or headaches when exposed to certain types of movement on screen. The prefers-reduced-motion media query allows web developers to detect if the user has requested minimal animations or motion effects at the system level.\n```css\n.animated-element {\ntransition: transform 0.3s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n.animated-element {\ntransition: none;\n}\n}\n```\n--assignment--\nReview the CSS Animations topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2359,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-animations\\671a999cc77b7f9bceb4caeb.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3a08410a7e59eb9cdaed69fc36aec1ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-attribute-selectors\\671a95990b86b68961340adc.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a95990b86b68961340adc\ntitle: CSS Attribute Selectors Review\nchallengeType: 24\ndashedName: review-css-attribute-selectors\n--description--\nWorking with Different Attribute Selectors and Links\nDefinition: The attribute selector allows you to target HTML elements based on their attributes like the href or title attributes.\ncss\na[href] {\ncolor: blue;\ntext-decoration: underline;\n}\ntitle Attribute: This attribute provides additional information about an element. Here is how you can target links with the title attribute:\ncss\na[title] {\nfont-weight: bold;\ntext-decoration: none;\n}\nTargeting Elements with the lang and data-lang Attribute\nlang Attribute: This attribute is used in HTML to specify the language of the content within an element. You might want to style elements differently based on the language they are written in, especially on a multilingual website.\ncss\np[lang=\"en\"] {\nfont-style: italic;\n}\ndata-lang Attribute: Custom data attributes like the data-lang attribute are commonly used to store additional information in elements, such as specifying the language used within a specific section of text. Here is how you can style elements based on the data-lang attribute:\ncss\ndiv[data-lang=\"fr\"] {\ncolor: blue;\n}\nWorking with the Attribute Selector, Ordered List Elements and the type Attribute\ntype Attribute: When working with ordered lists in HTML, the type attribute allows you to specify the style of numbering used, such as numerical, alphabetical, or Roman numerals.\n```css\n/Example targeting uppercase alphabetical numbering/\nol[type=\"A\"] {\ncolor: purple;\nfont-weight: bold;\n}\n/Example targeting lowercase Roman numerals/\nol[type=\"i\"] {\ncolor: green;\n}\n```\n--assignment--\nReview the CSS Attribute Selectors topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1904,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-attribute-selectors\\671a95990b86b68961340adc.md",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e2b0d98fe02244fbef771396e1753937",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "id: 67072fc183c7ca6c588feb4d\ntitle: Basic HTML Review\nchallengeType: 24\ndashedName: basic-html-review\n--description--\nHTML Basics\nRole of HTML: HTML represents the content and structure of the web page HTML Elements: Elements are the building blocks for an HTML document They represent headings, paragraphs, links, images and more Most HTML elements consist of an opening tag (<elementName>) and a closing tag (</elementName>) Here is the basic syntax:\nhtml\n<elementName>Content goes here</elementName>\nVoid Elements: Void elements cannot have any content and only have a start tag Examples include img and meta elements html\n<img>\n<meta>\nIt is common to see some codebases that include a forward slash / inside the void element Both of these are acceptable:\nhtml\n<img>\n<img/>\nAttributes: An attribute is a value placed inside the opening tag of an HTML element Attributes provide additional information about the element or specify how the element should behave Here is the basic syntax for an attribute:\nhtml\n<element attribute=\"value\"></element>\nA boolean attribute is an attribute that can either be present or absent in an HTML tag If present, the value is true otherwise it is false Examples of boolean attributes include disabled, readonly, and required Comments: Comments are used in programming to leave notes for yourself and other developers in your code Here is the syntax for a comment in HTML:\n```html\n```\nCommon HTML elements\nHeading Elements: There are six heading elements in HTML The h1 through h6 heading elements are used to signify the importance of content below them The lower the number, the higher the importance, so h2 elements have less importance than h1 elements ```html\nmost important heading element\nsecond most important heading element\nthird most important heading element\nfourth most important heading element\nfifth most important heading element\nleast important heading element\n```\nParagraph Elements: This is used for paragraphs on a web page ```html\nThis is a paragraph element ```\nimg Elements: The img element is used to add images to the web page The src attribute is used to specify the location for that image For image elements, it's good practice to include another attribute called the alt attribute Here's an example of an img element with the src and alt attributes:\nhtml\n<img src=\"https://cdn freecodecamp org/curriculum/cat-photo-app/lasagna",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "6796431d99d498bfdcb4b04b8935136f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "Paragraph Elements: This is used for paragraphs on a web page ```html This is a paragraph element ``` img Elements: The img element is used to add images to the web page The src attribute is used to specify the location for that image For image elements, it's good practice to include another attribute called the alt attribute Here's an example of an img element with the src and alt attributes: html <img src=\"https://cdn freecodecamp org/curriculum/cat-photo-app/lasagnajpg\" alt=\"A slice of lasagna on a plate \">\nbody Element: This element is used to represent the content for the HTML document ```html\nCatPhotoApp\nThis is a paragraph element ```\nsection Elements: This element is used to divide up content into smaller sections ```html\nAbout Me\nHi, I am Jane Doe and I am a web developer ```\ndiv Elements: This element is a generic HTML element that does not hold any semantic meaning It is used as a generic container to hold other HTML elements ```html\nI am a heading\nI am a paragraph\n```\nAnchor (a) Elements: These elements are used to apply links to a web page The href attribute is used to specify where the link should go when the user clicks on it html\n<a href=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\">cute cats</a>\nUnordered (ul) and Ordered (ol) List Elements: To create a bulleted list of items you should use the ul element with one or more li elements nested inside like this:\n```html\ncatnip\nlaser pointers\nlasagna\n```\nTo create an ordered list of items you should use the ol element:\n```html\nflea treatment\nthunder\nother cats\n```\nEmphasis (em) Element: This is used to place emphasis on a piece of text ```html\nCats love lasagna ```\nStrong Importance (strong) Element: This element is used to place strong emphasis on text to indicate a sense of urgency and seriousness ```html\nImportant: Before proceeding, make sure to wear your safety goggles ```\nfigure and figcaption Elements: The figure element is used to group content like images and diagrams The figcaption element is used to represent a caption for that content inside the figure element ```html\nCats hate other cats ```\nmain Element: This element is used to represent the main content for a web page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "a7429ae6f27bac0cac9c8fc365808b3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "emphasis on text to indicate a sense of urgency and seriousness ```html Important: Before proceeding, make sure to wear your safety goggles ``` figure and figcaption Elements: The figure element is used to group content like images and diagrams The figcaption element is used to represent a caption for that content inside the figure element ```html Cats hate other cats ``` main Element: This element is used to represent the main content for a web pagefooter Element: This element is placed at the bottom of the HTML document and usually contains copyright information and other important page links ```html\nNo Copyright - freeCodeCamp org\n```\nIdentifiers and Grouping\nIDs: Unique element identifiers for HTML elements ID names should only be used once per HTML document ```html\nMovie Review Page\n```\nID names cannot have spaces If your ID name contains multiple words then you can use dashes between the words like this:\n```html\n```\nClasses: Classes are used to group elements for styling and behavior ```html\n```\nUnlike IDs, you can reuse the same class name throughout the HTML document The class value can also have spaces like this:\n```html\n```\nSpecial Characters and Linking\nHTML entities: An HTML entity, or character reference, is a set of characters used to represent a reserved character in HTML Examples include the ampersand (&amp;) symbol and the less than symbol (&lt;) ```html\nThis is an <img /> element\n```\nlink Element: This element is used to link to external resources like stylesheets and site icons Here is the basic syntax for using the link element for an external CSS file:\nhtml\n<link rel=\"stylesheet\" href=\" /styles css\" />\nThe rel attribute is used to specify the relationship between the linked resource and the HTML document The href attribute is used to specify the location of the URL for the external resource script Element: This element is used to embed executable code ```html\n```\nWhile you can technically write all of your JavaScript code inside the script tags, it is considered best practice to link to an external JavaScript file instead Here is an example of using the script element to link to an external JavaScript file:\n```html\n```\nThe src attribute is used here to specify the location for that external JavaScript file Boilerplate and Encoding\nHTML boilerplate: This is a boilerplate that includes the basic structure and essential elements every HTML document needs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "af4560f423c060ba20c584b46110dcc1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "all of your JavaScript code inside the script tags, it is considered best practice to link to an external JavaScript file instead Here is an example of using the script element to link to an external JavaScript file: ```html ``` The src attribute is used here to specify the location for that external JavaScript file Boilerplate and Encoding HTML boilerplate: This is a boilerplate that includes the basic structure and essential elements every HTML document needs```html\nfreeCodeCamp\n```\nDOCTYPE: This is used to tell browsers which version of HTML you're using html Element: This represents the top level element or the root of an HTML document To specify the language for the document, you should use the lang attribute head Element: The head section contains important meta data which is behind-the-scenes information needed for browsers and search engines meta Elements: These elements represent your site's metadata These element have details about things like character encoding, and how websites like Twitter should preview your page's link and more title Element: This element is used to set the text that appears in the browser tab or window UTF-8 character encoding: UTF-8, or UCS Transformation Format 8, is a standardized character encoding widely used on the web Character encoding is the method computers use to store characters as data The charset attribute is used inside of a meta element to set the character encoding to UTF-8 SEO and Social Sharing\nSEO: Search Engine Optimization is a practice that optimizes web pages so they become more visible and rank higher on search engines Meta (description) Element: This is used to provide a short description for the web page and impacting SEO html\n<meta\nname=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\nOpen Graph tags: The open graph protocol enables you to control how your website's content appears across various social media platforms, such as Facebook, LinkedIn, and many more By setting these open graph properties, you can entice users to want to click and engage with your content You can set these properties through a collection of meta elements inside your HTML head section og:title Property: This is used to set the title that displays for social media posts html\n<meta content=\"freeCodeCamp org\" property=\"og:title\" />\nog:type Property: The type property is used to represent the type of content being shared on social media Examples of this content include articles, websites, videos, or music",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "8a4b74969f88f44b521aeef4d82b0ca8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "entice users to want to click and engage with your content You can set these properties through a collection of meta elements inside your HTML head section og:title Property: This is used to set the title that displays for social media posts html <meta content=\"freeCodeCamp org\" property=\"og:title\" /> og:type Property: The type property is used to represent the type of content being shared on social media Examples of this content include articles, websites, videos, or musichtml\n<meta property=\"og:type\" content=\"website\" />\nog:image Property: This is used to set the image shown for social media posts html\n<meta\ncontent=\"https://cdn freecodecamp org/platform/universal/fcc_meta_1920X1080-indigo png\"\nproperty=\"og:image\"\n/>\nog:url Property: This is used to set the URL that users will click on for the social media posts html\n<meta property=\"og:url\" content=\"https://www freecodecamp org\" />\nMedia Elements and Optimization\nReplaced elements: A replaced element is an element whose content is determined by an external resource rather than by CSS itself An example would be an iframe element iframe stands for inline frame It's an inline element used to embed other HTML content directly within the HTML page ```html\n```\nYou can include the allowfullscreen attribute which allows the user to display the iframe in full screen mode ```html\n```\nTo embed a video within an iframe you can copy it directly from popular video services like YouTube and Vimeo, or define it yourself with the src attribute pointing to the URL of that video Here's an example of embedding a popular freeCodeCamp course from YouTube:\n```html\nA freeCodeCamp YouTube Video Embedded with the iframe Element\n```\nThere are some other replaced elements, such as video, and embed And some elements behave as replaced elements under specific circumstances Here's an example of an input element with the type attribute set to image:\nhtml\n<input type=\"image\" alt=\"Descriptive text goes here\" src=\"example-img-url\">\nOptimizing media: There are three tools to consider when using media, such as images, on your web pages: the size, the format, and the compression A compression algorithm is used to reduce the size for files or data Image formats: Two of the most common file formats are PNG and JPG, but these are no longer the most ideal formats for serving images",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "dffe26c88a7920dc45a6cdb5be3faf78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "type attribute set to image: html <input type=\"image\" alt=\"Descriptive text goes here\" src=\"example-img-url\"> Optimizing media: There are three tools to consider when using media, such as images, on your web pages: the size, the format, and the compression A compression algorithm is used to reduce the size for files or data Image formats: Two of the most common file formats are PNG and JPG, but these are no longer the most ideal formats for serving imagesUnless you need support for older browsers, you should consider using a more optimized format, like WEBP or AVIF Image licenses: An image under the public domain has no copyright attached to it and is free to be used without any restrictions Images licensed specifically under the Creative Commons 0 license are considered public domain Some images might be released under a permissive license, like a Creative Commons license, or the BSD license that freeCodeCamp uses SVGs: Scalable Vector Graphics track data based on paths and equations to plot points, lines, and curves What this really means is that a vector graphic, like an SVG, can be scaled to any size without impacting the quality Multimedia Integration\naudio and video Elements: The audio and video elements allow you to add sound and video content to your HTML documents The audio element supports popular audio formats like mp3, wav, and ogg The video element supports mp4, ogg, and webm formats html\n<audio src=\"CrystalizeThatInnerChild mp3\"></audio>\nIf you want to see the audio player on the page, then you can add the audio element with the controls attribute:\nhtml\n<audio src=\"CrystalizeThatInnerChild mp3\" controls></audio>\nThe controls attribute enables users to manage audio playback, including adjusting volume, and pausing, or resuming playback The controls attribute is a boolean attribute that can be added to an element to enable built-in playback controls If omitted, no controls will be shown loop Attribute: The loop attribute is a boolean attribute that makes the audio replay continuously ```html\n<audio\nsrc=\"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\"\nloop\ncontrols\n```\nmuted Attribute: When present in the audio element, the muted boolean attribute will start the audio in a muted state ```html\n<audio\nsrc=\"https://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "ab00dee77c41e06a808ac950b4d8ae87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "resuming playback The controls attribute is a boolean attribute that can be added to an element to enable built-in playback controls If omitted, no controls will be shown loop Attribute: The loop attribute is a boolean attribute that makes the audio replay continuously ```html <audio src=\"https://cdn freecodecamp org/curriculum/js-music-player/can't-stay-down mp3\" loop controls ``` muted Attribute: When present in the audio element, the muted boolean attribute will start the audio in a muted state ```html <audio src=\"https://cdn freecodecamporg/curriculum/js-music-player/can't-stay-down mp3\"\nloop\ncontrols\nmuted\n```\nsource Element: When it comes to audio file types, there are differences in which browsers support which type To accommodate this, you can use source elements inside the audio element and the browser will select the first source that it understands Here's an example of using multiple source elements for an audio element:\nhtml\n<audio controls>\n<source src=\"audio ogg\" type=\"audio/ogg\" />\n<source src=\"audio wav\" type=\"audio/wav\" />\n<source src=\"audio mp3\" type=\"audio/mpeg\" />\n</audio>\nAll the attributes we have learned so far are also supported in the video element Here's an example of using a video element with the loop, controls, and muted attributes:\n```html\n```\nposter Attribute: If you wanted to display an image while the video is downloading, you can use the poster attribute This attribute is not available for audio elements and is unique to the video element ```html\n```\nTarget attribute types\ntarget Attribute: This attribute tells the browser where to open the URL for the anchor element There are four important possible values for this attribute: _self, _blank, _parent and _top There is a fifth value, called _unfencedTop, which is currently used for the experimental FencedFrame API You probably won't have a reason to use this one yet _self Value: This is the default value for the target attribute This opens the link in the current browsing context In most cases, this will be the current tab or window html\n<a href=\"https://freecodecamp org\" target=\"_self\">Visit freeCodeCamp</a>\n_blank Value: This opens the link in a new browsing context Typically, this will open in a new tab But some users might configure their browsers to open a new window instead",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "d463c33505d6be72b4acd31fcb342600",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "a reason to use this one yet _self Value: This is the default value for the target attribute This opens the link in the current browsing context In most cases, this will be the current tab or window html <a href=\"https://freecodecamp org\" target=\"_self\">Visit freeCodeCamp</a> _blank Value: This opens the link in a new browsing context Typically, this will open in a new tab But some users might configure their browsers to open a new window insteadhtml\n<a href=\"https://freecodecamp org\" target=\"_blank\">Visit freeCodeCamp</a>\n_parent Value: This opens the link in the parent of the current context For example, if your website has an iframe, a _parent value in that iframe would open in your website's tab/window, not in the embedded frame html\n<a href=\"https://freecodecamp org\" target=\"_parent\">Visit freeCodeCamp</a>\n_top Value: This opens the link in the top-most browsing context - think \"the parent of the parent\" This is similar to _parent, but the link will always open in the full browser tab/window, even for nested embedded frames html\n<a href=\"https://freecodecamp org\" target=\"_top\">Visit freeCodeCamp</a>\nAbsolute vs Relative Paths\nPath definition: A path is a string that specifies the location of a file or directory in a file system In web development, paths let developers link to resources like images, stylesheets, scripts, and other web pages Path Syntax: There are three key syntaxes to know First is the slash, which can be a backslash (\\) or forward slash (/) depending on your operating system The second is the single dot ( ) And finally, we have the double dot ( ) The slash is known as the \"path separator\" It is used to indicate a break in the text between folder or file names A single dot points to the current directory, and two dots point to the parent directory md\npublic/index html /favicon ico /src/index css\nAbsolute Path: An absolute path is a complete link to a resource It starts from the root directory, includes every other directory, and finally the filename and extension The \"root directory\" refers to the top-level directory or folder in a hierarchy An absolute path also includes the protocol - which could be http, https, and file and the domain name if the resource is on the web",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "56105039c566d0632f42da19ed3f3a81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
    "source_type": "git_repo",
    "title": "freeCodeCamp",
    "content": "parent directory md public/index html /favicon ico /src/index css Absolute Path: An absolute path is a complete link to a resource It starts from the root directory, includes every other directory, and finally the filename and extension The \"root directory\" refers to the top-level directory or folder in a hierarchy An absolute path also includes the protocol - which could be http, https, and file and the domain name if the resource is on the webHere's an example of an absolute path that links to the freeCodeCamp logo:\nhtml\n<a href=\"https://design-style-guide freecodecamp org/img/fcc_secondary_small svg\">\nView fCC Logo\n</a>\nRelative Path: A relative path specifies the location of a file relative to the directory of the current file It does not include the protocol or the domain name, making it shorter and more flexible for internal links within the same website Here's an example of linking to the about html page from the contact html page, both of which are in the same folder:\n```html\nRead more on the\nAbout Page\n```\nLink states\n:link: This is the default state This state represents a link which the user has not visited, clicked, or interacted with yet You can think of this state as providing the base styles for all links on your page The other states build on top of it :visited: This applies when a user has already visited the page being linked to By default, this turns the link purple - but you can leverage CSS to provide a different visual indication to the user :hover: This state applies when a user is hovering their cursor over a link This state is helpful for providing extra attention to a link, to ensure a user actually intends to click it :focus: This state applies when we focus on a link :active: This state applies to links that are being activated by the user This typically means clicking on the link with the primary mouse button by left clicking, in most cases --assignment--\nReview the Basic HTML topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 20188,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-basic-html\\67072fc183c7ca6c588feb4d.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "04c919a5fa6998bc8e36951e9d751b91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-colors\\671a90c1cf517678b130419e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a90c1cf517678b130419e\ntitle: CSS Colors Review\nchallengeType: 24\ndashedName: review-css-colors\n--description--\nColor Theory\nColor Theory Definition: This is the study of how colors interact with each other and how they affect our perception It covers color relationships, color harmony, and the psychological impact of color Primary Colors: These colors which are yellow, blue, and red, are the fundamental hues from which all other colors are derived Secondary Colors: These colors result from mixing equal amounts of two primary colors Green, orange, and purple are examples of secondary colors Tertiary Colors: These colors result from combining a primary color with a neighboring secondary color Yellow-Green, Blue-Green, and Blue-Violet are examples of tertiary colors Warm Colors: These colors which include reds, oranges, and yellows, evoke feelings of comfort, warmth, and coziness Cool Colors: These colors which include blues, green, and purples, evoke feelings of calmness, serenity, and professionalism Color Wheel: The color wheel is a circular diagram that shows how colors relate to each other It's an essential tool for designers because it helps them to select color combinations Analogous Color Schemes: These color schemes create cohesive and soothing experiences They have analogous colors, which are adjacent to each other in the color wheel Complementary Color Schemes: These color schemes create high contrast and visual impact Their colors are located on the opposite ends of the color wheel, relative to each other Triadic Color Scheme: This color scheme has vibrant colors They are made from colors that are approximately equidistant from each other If they are connected, they form an equilateral triangle on the color wheel Monochromatic Color Scheme: For this color scheme, all the colors are derived from the same base color by adjusting its lightness, darkness, and saturation This evokes a feeling of unity and harmony while still creating contrast Different Ways to Work with Colors in CSS\nNamed Colors: These colors are predefined color names recognized by browsers Examples include blue, darkred, lightgreen rgb() Function: RGB stands for Red, Green, and Blue — the primary colors of light These three colors are combined in different intensities to create a wide range of colors the rgb() function allows you to define colors using the RGB color model",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-colors\\671a90c1cf517678b130419e.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7f5753c560a6c71dcac93e7733e9eb91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-colors\\671a90c1cf517678b130419e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "feeling of unity and harmony while still creating contrast Different Ways to Work with Colors in CSS Named Colors: These colors are predefined color names recognized by browsers Examples include blue, darkred, lightgreen rgb() Function: RGB stands for Red, Green, and Blue — the primary colors of light These three colors are combined in different intensities to create a wide range of colors the rgb() function allows you to define colors using the RGB color modelcss\np {\ncolor: rgb(255, 0, 0);\n}\nrgba() Function: This function adds a fourth value, alpha, that controls the transparency of the color If not provided, the alpha value defaults to 1 css\ndiv {\nbackground-color: rgba(0, 0, 255, 0 5);\n}\nhsl() Function: HSL stands for Hue, Saturation, and Lightness — three key components that define a color css\np {\ncolor: hsl(120, 100%, 50%);\n}\nhsla() Function: This function adds a fourth value, alpha, that controls the opacity of the color css\ndiv {\nbackground-color: hsla(0, 100%, 50%, 0 5);\n}\nHexadecimal: A hex code (short for hexadecimal code) is a six-character string used to represent colors in the RGB color model The \"hex\" refers to the base-16 numbering system, which uses digits 0 to 9 and letters A to F ```css\nh1 {\ncolor: #FF5733; / A reddish-orange color /\n}\np {\nbackground-color: #4CAF50; / A shade of green /\n}\n```\nLinear and Radial Gradients\nLinear Gradients: These gradients create a gradual blend between colors along a straight line You can control the direction of this line using keywords like to top, to right, to bottom right, or angles like 45deg You can use any valid CSS color and as many color stops as you would like css linear-gradient {\nbackground: linear-gradient(45deg, red, #33FF11, rgba(100, 100, 255, 0 5));\nheight: 40vh;\n}\nRadial Gradients: These gradients create circular or elliptical gradients that radiate from a central point css radial-gradient {\nbackground: radial-gradient(circle, red, blue);\nheight: 40vh;\n}\n--assignment--\nReview the CSS Colors topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4236,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-colors\\671a90c1cf517678b130419e.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a1898c9fd85cddf6d6e29377b66d2b4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-flexbox\\671a940c69cdee833d4cc312.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a940c69cdee833d4cc312\ntitle: CSS Flexbox Review\nchallengeType: 24\ndashedName: review-css-flexbox\n--description--\nIntroduction to CSS Flexbox and Flex Model\nDefinition: CSS flexbox is a one-dimensional layout model that allows you to arrange elements in rows and columns within a container Flex Model: This model defines how flex items are arranged within a flex container Every flex container has two axes: the main axis and the cross axis The flex-direction Property\nDefinition: This property sets the direction of the main axis The default value of flex-direction is row, which places all the flex items on the same row, in the direction of your browser's default language (left to right or right to left) flex-direction: row-reverse;: This reverses the items in the row flex-direction: column;: This will align the flex items vertically instead of horizontally flex-direction: column-reverse;: This reverses the order of the flex items vertically The flex-wrap Property\nDefinition: This property determines how flex items are wrapped within a flex container to fit the available space flex-wrap can take three possible values: nowrap, wrap, and wrap-reverse flex-wrap: nowrap;: This is the default value Flex items won't be wrapped onto a new line, even if their width exceed the container's width flex-wrap: wrap;: This property will wrap the items when they exceed the width of their container flex-wrap: wrap-reverse;: This property will wrap flex items in reverse order flex-flow Property: This property is a shorthand property for flex-direction and flex-wrap css\nflex-flow: column wrap-reverse;\nThe justify-content Property\nDefinition: This property aligns the child elements along the main axis of the flex container justify-content: flex-start;: In this case, the flex items will be aligned to the start of the main axis This could be horizontal or vertical justify-content: flex-end;: In this case, the flex items are aligned to the end of the main axis, horizontally or vertically justify-content: center;: This centers the flex items along the main axis justify-content: space-between;: This will distribute the elements evenly along the main axis justify-content: space-around;: This will distribute flex items evenly within the main axis, adding a space before the first item and after the last item justify-content: space-evenly;: This will distribute the items evenly along the main axis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3141,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-flexbox\\671a940c69cdee833d4cc312.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9b5c989bc7ad11a37d0fe85dcf585d38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-flexbox\\671a940c69cdee833d4cc312.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "this case, the flex items are aligned to the end of the main axis, horizontally or vertically justify-content: center;: This centers the flex items along the main axis justify-content: space-between;: This will distribute the elements evenly along the main axis justify-content: space-around;: This will distribute flex items evenly within the main axis, adding a space before the first item and after the last item justify-content: space-evenly;: This will distribute the items evenly along the main axisThe align-items Property\nDefinition: This property is used to distribute items along the cross axis Remember that the cross axis is perpendicular to the main axis align-items: center;: This is used to center the items along the cross axis align-items: flex-start;: This aligns the items to the start of the cross axis align-items: stretch;: This is used to stretch the flex items along the cross axis --assignment--\nReview the CSS Flexbox topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3141,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-flexbox\\671a940c69cdee833d4cc312.md",
      "source_type": "git_repo"
    },
    "token_count": 193,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "05021b2b00e162e28c2af6dba3bd0c3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-backgrounds-and-borders\\671a88d636cebc5fbd407b78.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a88d636cebc5fbd407b78\ntitle: Lists, Links, CSS Background and Borders Review\nchallengeType: 24\ndashedName: review-css-backgrounds-and-borders\n--description--\nStyling Lists\nline-height Property: This property is used to create space between lines of text The accepted line-height values include the keyword normal, numbers, percentages and length units like the em unit list-style-type Property: This property is used to specify the marker for a list item Acceptable values can include a circle, disc, or decimal list-style-position Property: This property is used to set the position for the list marker The only two acceptable values are inside and outside list-style-image Property: This property is used to use an image for the list item marker A common use case is to use the url function with a value set to a valid image location Spacing list items using margin\nApart from line-height, margins can also be used in CSS to enhance the spacing and readability of list items Margins create space outside each li element, allowing control over the gap between list items margin-bottom is used to create space below each list item For example, margin-bottom: 10px; will create a 10-pixel gap below each list item Styling Links\npseudo-class: This is a keyword added to a selector that allows you to select elements based on a particular state Common states would include the :hover, :visited and :focus states :link pseudo-class: This pseudo-class is used to style links that have not be visited by the user :visited pseudo-class: This pseudo-class is used to style links where a user has already visited :hover pseudo-class: This pseudo-class is used to style an elements where a user is actively hovering over them :focus pseudo-class: This pseudo-class is used to style an element when it receives focus Examples would include input or select elements where the clicks or tabs on the element to focus it :active pseudo-class: This pseudo-class is used to style an element that was activated by the user A common example would be when the user clicks on a button Working with Backgrounds and Borders\nbackground-size Property: This property is used to set the background size for an element Some common values include cover for the background image to cover the entire element and contain for the background image to fit within the element background-repeat Property: This property is used to determine how background images should be repeated along the horizontal and vertical axes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-backgrounds-and-borders\\671a88d636cebc5fbd407b78.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "eb83ce61d85df3c1f9a6cb944d23149a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-backgrounds-and-borders\\671a88d636cebc5fbd407b78.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "A common example would be when the user clicks on a button Working with Backgrounds and Borders background-size Property: This property is used to set the background size for an element Some common values include cover for the background image to cover the entire element and contain for the background image to fit within the element background-repeat Property: This property is used to determine how background images should be repeated along the horizontal and vertical axesThe default value for background-repeat is repeat meaning the image will repeat both horizontally and vertically You can also specify that there should be no repeat by using the no-repeat property background-position Property: This property is used to specify the position of the background image It can be set to a specific length, percentage, or keyword values like top, bottom, left, right, and center background-attachment Property: This property is used to specify whether the background image should scroll with the content or remain fixed in place The main values are scroll (default), where the background image scrolls with the content, and fixed, where the background image stays in the same position on the screen background-image Property: This property is used to set the background image of an element You can set multiple background images at the same time and use either the url, radial-gradient or linear-gradient functions as values background Property: This is the shorthand property for setting all background properties in one declaration Here is an example of setting the background image and setting it to not repeat: background: no-repeat url(\"example-url-goes-here\");\nGood Contrast for Background and Foreground Colors: It is important to ensure that the background and foreground colors have good contrast to make the text readable The Web Content Accessibility Guidelines (WCAG) recommend a minimum contrast ratio of 4 5:1 for normal text and 3:1 for large text Borders\nborder-top Property: This property is used to set the styles for the top border of an element border-top: 3px solid blue; sets a 3-pixel-wide solid blue border on the top side of the element border-right Property: This property is used to set the styles for the right border of an element border-right: 2px solid red; sets a 2-pixel-wide solid red border on the right side of the element border-bottom Property: This property is used to set the styles for the bottom border of an element border-bottom: 1px dashed green; sets a 1-pixel-wide dashed green border on the bottom side of the element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-backgrounds-and-borders\\671a88d636cebc5fbd407b78.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ee04ed61600ae3d657d026e7a79d23df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-backgrounds-and-borders\\671a88d636cebc5fbd407b78.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "border on the top side of the element border-right Property: This property is used to set the styles for the right border of an element border-right: 2px solid red; sets a 2-pixel-wide solid red border on the right side of the element border-bottom Property: This property is used to set the styles for the bottom border of an element border-bottom: 1px dashed green; sets a 1-pixel-wide dashed green border on the bottom side of the elementborder-left Property: This property is used to set the styles for the left border of an element border-left: 4px dotted orange; sets a 4-pixel-wide dotted orange border on the left side of the element border Property: This is the shorthand property for setting the width, style, and color of an element's border border: 1px solid black; sets a 1-pixel-wide solid black border border-radius Property: This property is used to create rounded corners for an element's border border-style Property: This property is used to set the style of an element's border Some accepted values include solid, dashed, dotted, and double Gradients\nlinear-gradient() Function: This CSS function is used to create a transition between multiple colors along a straight line radial-gradient() Function: This CSS function creates an image that radiates from a particular point, like a circle or an ellipse, and gradually transitions between multiple colors --assignment--\nReview the CSS Backgrounds and Borders topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-backgrounds-and-borders\\671a88d636cebc5fbd407b78.md",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4d4ff3271d6028f3ea24c26d40863457",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-layout-and-effects\\671a9311a289ae7fff25d88e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a9311a289ae7fff25d88e\ntitle: CSS Layouts and Effects Review\nchallengeType: 24\ndashedName: review-css-layout-and-effects\n--description--\nCSS Overflow Property\nDefinition: Overflow refers to the way elements handle content that exceeds, or \"overflows\", the size of the containing element Overflow is two-dimensional overflow-x: The x-axis determines horizontal overflow overflow-y: the y-axis determines vertical overflow overflow: Shorthand property for overflow-x and overflow-y If given one value, both overflows will use it If given two values, the overflow-x will use the first, and the overflow-y will use the second CSS Transform Property\nDefinition: This property enables you to apply various transformations to elements, such as rotating, scaling, skewing, or translating (moving) them in 2D or 3D space translate() Function: This function is used to move an element from its current position scale() Function: This function allows you to change the size of an element rotate() Function: This function allows you to rotate an element skew() Function: This function allows you to skew an element Transforms and Accessibility: If you're using transform to hide or reveal content, make sure that the content is still accessible to screen readers and keyboard navigation Hidden content should be truly hidden, such as by using display: none or visibility: hidden, rather than simply being visually moved off-screen The Box Model\nDefinition: In the CSS box model, every element is surrounded by a box This box consists of four components: the content area, padding, border, margin Content Area: The content area is the innermost part of the box It's the space that contains the actual content of an element, like text or images padding: The padding is the area immediately after the content area It's the space between the content area and the border of an element border: The border is the outer edge or outline of an element in the CSS box model It's the visual boundary of the element margin: The margin is the space outside the border of an element It determines the distance between an element and other elements around it Margin Collapse\nDefinition: This behavior occurs when the vertical margins of adjacent elements overlap, resulting in a single margin equal to the larger of the two This behavior applies only to vertical margins (top and bottom), not horizontal margins (left and right)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4697,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-layout-and-effects\\671a9311a289ae7fff25d88e.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "172305a793d5ee9408142bff083e6494",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-layout-and-effects\\671a9311a289ae7fff25d88e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "CSS box model It's the visual boundary of the element margin: The margin is the space outside the border of an element It determines the distance between an element and other elements around it Margin Collapse Definition: This behavior occurs when the vertical margins of adjacent elements overlap, resulting in a single margin equal to the larger of the two This behavior applies only to vertical margins (top and bottom), not horizontal margins (left and right)The content-box and border-box Property Values\nbox-sizing Property: This property is used to determine how the final width and height are calculated for an HTML element content-box Value: In the content-box model, the width and height that you set for an element determine the dimensions of the content area but they don't include the padding, border, or margin border-box Value: With border-box, the width and height of an element include the content area, the padding, and the border, but they don't include the margin CSS Reset\nDefinition: A CSS reset is a stylesheet that removes all or some of the default formatting that web browsers apply to HTML elements Third party options for CSS resets include sanitize css and normalize css CSS Filter Property\nDefinition: This property can be used to create various effects such as blurring, color shifting, and contrast adjustment blur() Function: This function applies a Gaussian blur to the element The amount is defined in pixels and represents the radius of the blur brightness() Function: This function adjusts the brightness of the element A value of 0% will make the element completely black, while values over 100% will increase the brightness contrast() Function: This function adjusts the contrast of the element A value of 0% will make the element completely grey, 100% will make the element appear normally, and values greater than 100% will increase the contrast grayscale() Function: This function converts the element to grayscale The amount is defined as a percentage, where 100% is completely grayscale and 0% leaves the image unchanged sepia() Function: This function applies a sepia tone to the element Like grayscale, it uses a percentage value hue-rotate() Function: This function applies a hue rotation to the element The value is defined in degrees and represents a rotation around the color circle --assignment--\nReview the CSS Layouts and Effects topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4697,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-layout-and-effects\\671a9311a289ae7fff25d88e.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6c67726f6c0273b25c73b821499238de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-grid\\671a99394bedfb9a5bc687c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a99394bedfb9a5bc687c4\ntitle: CSS Grid Review\nchallengeType: 24\ndashedName: review-css-grid\n--description--\nCSS Grid Basics\nDefinition: CSS Grid is a two-dimensional layout system used to create complex layouts in web pages Grids will have rows and columns with gaps between them To define a grid layout, you would set the display property to grid css container {\ndisplay: grid;\n}\nThe fr (Fractional) Unit: This unit represents a fraction of the space within the grid container You can use the fr unit to create flexible grids Creating Gaps Between Tracks: There are three ways to create gaps between tracks in CSS grid You can use the column-gap property to create gaps between columns You can use the row-gap property to create gaps between rows Or you can use the gap shorthand property to create gaps between both rows and columns grid-template-columns: This is used to set lines names and sizing for the grid track columns css container {\ndisplay: grid;\nwidth: 100%;\ngrid-template-columns: 30px 1fr;\n}\ngrid-template-rows: This is used to set lines names and sizing for the grid track rows grid-auto-flow: The determines how auto placed items fit in the grid css container {\ndisplay: grid;\nwidth: 100%;\ngrid-auto-flow: column;\n}\ngrid-auto-columns: This is used to set the size for columns created implicitly css container {\ndisplay: grid;\nwidth: 100%;\ngrid-auto-columns: auto;\n}\nplace-items: This is used to align items for both block and inline directions align-items: This is used to set the alignment for the items in a grid container repeat() Function: This function is used to repeat sections in the track listing Instead of writing grid-template-columns: 1fr 1fr 1fr; you can use the repeat() function instead css container {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\n}\nExplicit Grid: You can specify the number of lines or tracks using the grid-template-columns or grid-template-rows properties Implicit Grid: When items are placed outside of the grid, then rows and columns are automatically created for those outside elements minmax() Function: This function is used to set the minimum and maximum sizes for a track css",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-grid\\671a99394bedfb9a5bc687c4.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f04c524afcfc33dcecb6349a8de84702",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-grid\\671a99394bedfb9a5bc687c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "writing grid-template-columns: 1fr 1fr 1fr; you can use the repeat() function instead css container { display: grid; grid-template-columns: repeat(3, 1fr); } Explicit Grid: You can specify the number of lines or tracks using the grid-template-columns or grid-template-rows properties Implicit Grid: When items are placed outside of the grid, then rows and columns are automatically created for those outside elements minmax() Function: This function is used to set the minimum and maximum sizes for a track csscontainer {\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-auto-rows: minmax(150px, auto);\n}\nLine-based Placement: All grids have lines To specify where the item begins on a line, you can use the grid-column-start and grid-row-start properties To specify where the item ends on the line, you can use the grid-column-end and grid-row-end properties You can also choose to use the grid-column or grid-row shorthand properties instead Here is an example of using the grid-column property to make an element stretch across all columns css element {\ngrid-column: 1 / -1;\n}\ngrid-template-areas: The property is used to provide a name for the items you are going to position on the grid ```html\nHeader\nSidebar\nMain Content\nFooter\n```\n```css container {\ndisplay: grid;\ngrid-template-columns: 200px 1fr;\ngrid-template-rows: auto 1fr auto;\ngrid-template-areas:\n\"header header\"\n\"sidebar main\"\n\"footer footer\";\ngap: 20px;\n} header {\ngrid-area: header;\nbackground-color: #4CAF50;\npadding: 10px;\ncolor: white;\n} sidebar {\ngrid-area: sidebar;\nbackground-color: #f4f4f4;\npadding: 10px;\n} main {\ngrid-area: main;\nbackground-color: #e0e0e0;\npadding: 10px;\n} footer {\ngrid-area: footer;\nbackground-color: #4CAF50;\npadding: 10px;\ncolor: white;\n}\n```\nDebugging CSS\nDevTools (Developer Tools): DevTools allow you to inspect and modify your CSS in real-time The Styles pane shows all the CSS rules applied to the selected element, including inherited styles You can toggle individual properties on and off, edit values, and even add new rules directly in the browser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-grid\\671a99394bedfb9a5bc687c4.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ad76e0134a8f3bce5a56bc913bffb8c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-grid\\671a99394bedfb9a5bc687c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "#f4f4f4; padding: 10px; } main { grid-area: main; background-color: #e0e0e0; padding: 10px; } footer { grid-area: footer; background-color: #4CAF50; padding: 10px; color: white; } ``` Debugging CSS DevTools (Developer Tools): DevTools allow you to inspect and modify your CSS in real-time The Styles pane shows all the CSS rules applied to the selected element, including inherited styles You can toggle individual properties on and off, edit values, and even add new rules directly in the browserThis immediate feedback is incredibly useful for experimenting with different styles without modifying your source code CSS Validators: Validators are used to check your CSS against the official specifications and reports any errors or warnings A popular validator you can use is the W3C CSS Validator Debugging Responsive Designs: The DevTools has an option to allow you to simulate how your site looks on various screen sizes and devices This can help you identify breakpoint issues or styles that don't scale well across different viewport sizes --assignment--\nReview the CSS Grid topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4852,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-grid\\671a99394bedfb9a5bc687c4.md",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "5bbcf457b241e85eb0eb8f8561f66bdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-libraries-and-frameworks\\6724e2026e608219108d385a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e2026e608219108d385a\ntitle: CSS Libraries and Frameworks Review\nchallengeType: 24\ndashedName: review-css-libraries-and-frameworks\n--description--\nCSS Frameworks\nCSS frameworks: CSS frameworks can speed up your workflow, create a uniform visual style across a website, make your design look consistent across multiple browsers, and keep your CSS code more organized Popular CSS frameworks: Some of the popular CSS frameworks are Tailwind CSS, Bootstrap, Materialize, and Foundation Potential disadvantages:\nThe CSS provided by the framework might conflict with your custom CSS Your website might look similar to other websites using the same framework Large frameworks might cause performance issues Two Types of CSS Frameworks\nUtility-first CSS frameworks: These frameworks have small classes with specific purposes, like setting the margin, padding, or background color You can assign these small classes directly to the HTML elements as needed Tailwind CSS is categorized as a utility-first CSS framework Here is an example of using Tailwind CSS to style a button html\n<button class=\"bg-blue-500 text-white font-bold py-2 px-4 rounded-full hover:bg-blue-700\">\nButton\n</button>\nComponent-based CSS frameworks: These frameworks have pre-built components with pre-defined styles that you can add to your website The components are available in the official documentation of the CSS framework, and you can copy and paste them into your project Bootstrap is categorized as a component-based CSS framework Here is an example of using Bootstrap to create a list group Instead of applying small classes to your HTML elements, you will add the entire component, including the HTML structure ```html\nHTML\nCSS\nJavaScript\n```\nCSS Preprocessors\nCSS preprocessor: A CSS preprocessor is a tool that extends standard CSS It compiles the code with extended syntax into a native CSS file It can be helpful for writing cleaner, reusable, less repetitive, and scalable CSS for complex projects Features: Some of the features that can be provided by CSS preprocessors are variables, mixins, nesting, and selector inheritance Popular CSS preprocessors: Some of the popular CSS preprocessors are Sass, Less, and Stylus Potential disadvantages:\nCompiling the CSS rules into standard CSS might cause overhead The compiled code may be difficult to debug Sass\nSass: It is one of the most popular CSS preprocessors Sass stands for \"Syntactically Awesome Style Sheets",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-libraries-and-frameworks\\6724e2026e608219108d385a.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "07a8168772594bc2ab9a44213ef80687",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-libraries-and-frameworks\\6724e2026e608219108d385a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "scalable CSS for complex projects Features: Some of the features that can be provided by CSS preprocessors are variables, mixins, nesting, and selector inheritance Popular CSS preprocessors: Some of the popular CSS preprocessors are Sass, Less, and Stylus Potential disadvantages: Compiling the CSS rules into standard CSS might cause overhead The compiled code may be difficult to debug Sass Sass: It is one of the most popular CSS preprocessors Sass stands for \"Syntactically Awesome Style Sheets\"\nFeatures supported by Sass: Sass supports features like variables, nested CSS rules, modules, mixins, inheritance, and operators for basic mathematical operations\nTwo Syntaxes Supported by Sass\nSCSS syntax: The SCSS (Sassy CSS) expands the basic syntax of CSS It is the most widely used syntax for Sass SCSS files have an scss extension Here is an example of defining and using a variable in SCSS ```scss\n$primary-color: #3498eb;\nheader {\nbackground-color: $primary-color;\n}\n```\nIndented syntax: The indented syntax was Sass's original syntax and is also known as the \"Sass syntax \"\nHere is an example of defining and using a variable in the indented syntax ```sass\n$primary-color: #3498eb\nheader\nbackground-color: $primary-color\n```\nMixins\nMixins: Mixins allow you to group multiple CSS properties and their values under the name and reuse that block of CSS code throughout your stylesheet Here is an example of defining a mixin in SCSS syntax In this case, the mixin is called center-flex It has three CSS properties to center elements using flexbox scss\n@mixin center-flex {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\nHere is an example of using the mixin you defined scss\nsection {\n@include center-flex;\nheight: 500px;\nbackground-color: #3289a8;\n}\n--assignment--\nReview the CSS Libraries and Frameworks topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4257,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-libraries-and-frameworks\\6724e2026e608219108d385a.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7f4ffd8bbf06ee9e088f93a6157234a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-positioning\\671a967424a00e8c6561b182.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a967424a00e8c6561b182\ntitle: CSS Positioning Review\nchallengeType: 24\ndashedName: review-css-positioning\n--description--\nWorking With Floats\nDefinition: Floats are used to remove an element from its normal flow on the page and position it either on the left or right side of its container When this happens, the text will wrap around that floated content css\nfloat: left;\nfloat: right;\nClearing Floats: The clear property is used to determine if an element needs to be moved below the floated content When you have multiple floated elements stacked next to each other, there could be issues with overlap and collapsing in the layouts So a clearfix hack was created to fix this issue css clearfix::after {\ncontent: \"\";\ndisplay: block;\nclear: both;\n}\nStatic, Relative and Absolute Positioning\nStatic Positioning: This is the normal flow for the document Elements are positioned from top to bottom and left to right one after another Relative Positioning: This allows you to use the top, left, right and bottom properties to position the element within the normal document flow You can also use relative positioning to make elements overlap with other elements on the page css relative {\nposition: relative;\ntop: 30px;\nleft: 30px;\n}\nAbsolute Positioning: This allows you to take an element out of the normal document flow, making it behave independently from other elements css positioned {\nposition: absolute;\ntop: 30px;\nleft: 30px;\nbackground-color: coral;\n}\nFixed and Sticky Positioning\nFixed Positioning: When an element is positioned with position: fixed, it is removed from the normal document flow and placed relative to the viewport, meaning it stays in the same position even when the user scrolls This is often used for elements like headers or navigation bars that need to remain visible at all times css navbar {\nposition: fixed;\ntop: 0;\nwidth: 100%;\n}\nSticky Positioning: This type of positioning will act as a relative positioned element as you scroll down the page If you specify a top, left, right or bottom property, then the element will stop acting like a relatively positioned element and start behaving like a fixed position element css",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2917,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-positioning\\671a967424a00e8c6561b182.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9baa2e2d1eda5b2aa7ac899233a45d74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-positioning\\671a967424a00e8c6561b182.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "often used for elements like headers or navigation bars that need to remain visible at all times css navbar { position: fixed; top: 0; width: 100%; } Sticky Positioning: This type of positioning will act as a relative positioned element as you scroll down the page If you specify a top, left, right or bottom property, then the element will stop acting like a relatively positioned element and start behaving like a fixed position element csspositioned {\nposition: sticky;\ntop: 30px;\nleft: 30px;\n}\nWorking With the z-index Property\nDefinition: The z-index property in CSS is used to control the vertical stacking order of positioned elements that overlap on the page ```css container {\nposition: relative;\nwidth: 300px;\nheight: 300px;\nborder: 1px solid black;\n} box1 {\nposition: absolute;\nz-index: 1;\nbackground: lightcoral;\ntop: 20px;\nleft: 20px;\nwidth: 100px;\nheight: 100px;\n}\n```\n--assignment--\nReview the CSS Positioning topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2917,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-positioning\\671a967424a00e8c6561b182.md",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c0dcb17d725bc3a7c1316d378aa9a015",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-relative-and-absolute-units\\671a8f8350c20a7439015c98.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a8f8350c20a7439015c98\ntitle: CSS Relative and Absolute Units Review\nchallengeType: 24\ndashedName: review-css-relative-and-absolute-units\n--description--\nAbsolute Units\npx (Pixels): This absolute unit is a fixed-size unit of measurement in CSS. It is the most common absolute unit and provides precise control over dimensions. 1px is always equal to 1/96th of an inch.\nin (Inch): This absolute unit is equal to 96px.\ncm (Centimeters): This absolute unit is equal to 25.2/64 of an inch.\nmm (Millimeters): This absolute unit is equal to 1/10th of a centimeter.\nq (Quarter-Millimeters): This absolute unit is equal to 1/40th of a centimeter.\npc (Picas): This absolute unit is equal to 1/6th of an inch.\npt (Points): This absolute unit is equal to 1/72th of an inch.\nRelative Units\nPercentages: These relative units allow you to define sizes, dimensions, and other properties as a proportion of their parent element. For example, if you set width: 50%; on an element, it will occupy half the width of its parent container.\nem Unit: These units are relative to the font size of the element. If you are using ems for the font-size property, the size of the text will be relative to the font size of the parent element.\nrem Unit: These units are relative to the font size of the root element, which is the html element.\nvh Unit: vh stands for \"viewport height\" and 1vh is equal to 1% of the viewport's height.\nvw Unit: vw stands for \"viewport width\" and 1vw is equal to 1% of the viewport's width.\ncalc Function\ncalc() Function: With the calc() function, you can perform calculations directly within your stylesheets to determine property values dynamically. This means that you can create flexible and responsive user interfaces by calculating dimensions based on the viewport size or other elements.\n--assignment--\nReview the CSS Relative and Absolute Units topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2040,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-relative-and-absolute-units\\671a8f8350c20a7439015c98.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "31b040ff56c2c5bc7f020c92db362214",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-variables\\671a98fbaabfba994e3d9a7c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a98fbaabfba994e3d9a7c\ntitle: CSS Variables Review\nchallengeType: 24\ndashedName: review-css-variables\n--description--\nCSS Custom Properties (CSS Variables)\nDefinition: CSS custom properties, also known as CSS variables, are entities defined by CSS authors that contain specific values to be reused throughout a document. They are a powerful feature that allows for more efficient, maintainable, and flexible stylesheets. Custom properties are particularly useful in creating themeable designs. You can define a set of properties for different themes:\n```css\n:root {\n--bg-color: white;\n--text-color: black;\n}\n.dark-theme {\n--bg-color: #333;\n--text-color: white;\n}\nbody {\nbackground-color: var(--bg-color);\ncolor: var(--text-color);\n}\n```\nThe @property Rule\nDefinition: The @property rule is a powerful CSS feature that allows developers to define custom properties with greater control over their behavior, including how they animate and their initial values.\ncss\n@property --property-name {\nsyntax: '<type>';\ninherits: true | false;\ninitial-value: <value>;\n}\n--property-name: This is the name of the custom property you're defining. Like all custom properties, it must start with two dashes. --property-name can be things like <color>, <length>, <number>, <percentage>, or more complex types.\nsyntax: This defines the type of the property.\ninherits: This specifies whether the property should inherit its value from its parent element.\ninitial-value: This sets the default value of the property.\nGradient Example Using the @property Rule: This example creates a gradient that smoothly animates when the element is hovered over.\n```html\n```\n```css\n@property --gradient-angle {\nsyntax: \"\";\ninherits: false;\ninitial-value: 0deg;\n}\n.gradient-box {\nwidth: 100px;\nheight: 100px;\nbackground: linear-gradient(var(--gradient-angle), red, blue);\ntransition: --gradient-angle 0.5s;\n}\n.gradient-box:hover {\n--gradient-angle: 90deg;\n}\n```\nFallbacks: When using the custom property, you can provide a fallback value using the var() function, just as you would with standard custom properties:\ncss\n.button {\nbackground-color: var(--main-color, #3498db);\n}\n--assignment--\nReview the CSS Variables topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-variables\\671a98fbaabfba994e3d9a7c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "83340df0cb659dc61c994eb39329e24d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a907bad4538752765f2ff\ntitle: CSS Pseudo-classes Review\nchallengeType: 24\ndashedName: review-css-pseudo-classes\n--description--\nUser Action Pseudo-classes\nPseudo-classes Definition: These are special CSS keywords that allow you to select an element based on its specific state or position User Action Pseudo-classes: These are special keywords that allow you to change the appearance of elements based on user interactions, improving the overall user experience :active Pseudo-class: This pseudo-class lets you select the active state of an element, like clicking on a button :hover Pseudo-class: This pseudo-class defines the hover state of an element :focus Pseudo-class: This pseudo-class applies styles when an element gains focus, typically through keyboard navigation or when a user clicks into a form input :focus-within Pseudo-class: This pseudo-class is used to apply styles to an element when it or any of its descendants have focus Input Pseudo-classes\nInput Pseudo-classes: These pseudo-classes are used to target HTML input elements based on the state they are in before and after user interaction :enabled Pseudo-class: This pseudo-class is used to target form buttons or other elements that are currently enabled :disabled Pseudo-class: This pseudo-class lets you style an interactive element in disabled mode :checked Pseudo-class: This pseudo-class is used to indicate to the user that it is checked :valid Pseudo-class: This pseudo-class targets the input fields that meet the validation criteria :invalid Pseudo-class: This pseudo-class targets the input fields that do not meet the validation criteria :in-range and :out-of-range Pseudo-classes: These pseudo-classes apply styles to elements based on whether their values are within or outside specified range constraints :required Pseudo-class: This pseudo-class targets input elements that have the required attribute It signals to the user that they must fill out the field to submit the form :optional Pseudo-class: This pseudo-class applies styles input elements that are not required and can be left empty :autofill Pseudo-class: This pseudo-class applies styles to input fields that the browser automatically fills with saved data Location Pseudo-classes\nLocation Pseudo-classes: These pseudo-classes are used for styling links and elements that are targeted within the current document :any-link Pseudo-class: This pseudo-class is a combination of the :link and :visited pseudo-classes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "919aa941eaf3a9342b607884773af220",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "must fill out the field to submit the form :optional Pseudo-class: This pseudo-class applies styles input elements that are not required and can be left empty :autofill Pseudo-class: This pseudo-class applies styles to input fields that the browser automatically fills with saved data Location Pseudo-classes Location Pseudo-classes: These pseudo-classes are used for styling links and elements that are targeted within the current document :any-link Pseudo-class: This pseudo-class is a combination of the :link and :visited pseudo-classesSo, it matches any anchor element with an href attribute, regardless of whether it's visited or not :link Pseudo-class: This pseudo-class allows you to target all unvisited links on a webpage You can use it to style links differently before the user clicks on them :local-link Pseudo-class: This pseudo-class targets links that point to the same document It can be useful when you want to differentiate internal links from external ones :visited Pseudo-class: This pseudo-class targets a link the user has visited :target Pseudo-class: This pseudo-class is used to apply styles to an element that is the target of a URL fragment :target-within Pseudo-class: This pseudo-class applies styles to an element when it or one of its descendants is the target of a URL fragment Tree-structural Pseudo-classes\nTree-structural Pseudo-classes: These pseudo-classes allow you to target and style elements based on their position within the document tree :root Pseudo-class: This pseudo-class is usually the root html element It helps you target the highest level in the document so you can apply a common style to the entire document :empty Pseudo-class: Empty elements, that is, elements with no children other than white space, are also included in the document tree That's why there's an :empty pseudo-class to target empty elements :nth-child(n) Pseudo-class: This pseudo-class allows you to select elements based on their position within a parent :nth-last-child(n) Pseudo-class: This pseudo-class enables you to select elements by counting from the end :first-child Pseudo-class: This pseudo-class selects the first element in a parent element or the document :last-child Pseudo-class: This pseudo-class selects the last element in a parent element or the document :only-child Pseudo-class: This pseudo-class selects the only element in a parent element or the document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1b844b5f8018d0d5b34ee9a4217cafa9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "elements :nth-child(n) Pseudo-class: This pseudo-class allows you to select elements based on their position within a parent :nth-last-child(n) Pseudo-class: This pseudo-class enables you to select elements by counting from the end :first-child Pseudo-class: This pseudo-class selects the first element in a parent element or the document :last-child Pseudo-class: This pseudo-class selects the last element in a parent element or the document :only-child Pseudo-class: This pseudo-class selects the only element in a parent element or the document:first-of-type Pseudo-class: This pseudo-class selects the first occurrence of a specific element type within its parent :last-of-type Pseudo-class: This pseudo-class selects the last occurrence of a specific element type within its parent :nth-of-type(n) Pseudo-class: This pseudo-class allows you to select a specific element within its parent based on its position among siblings of the same type :only-of-type Pseudo-class: This pseudo-class selects an element if it's the only one of its type within its parent Functional Pseudo-classes\nFunctional Pseudo-classes: Functional pseudo-classes allow you to select elements based on more complex conditions or relationships Unlike regular pseudo-classes which target elements based on a state (for example, :hover, :focus), functional pseudo-classes accept arguments :is() Pseudo-class: This pseudo-class takes a list of selectors (ex ol, ul) and selects an element that matches one of the selectors in the list ```html\nThis text will change color This text will not change color This text will not change color This text will change color ```\ncss\np:is( example, this-works-too) {\ncolor: red;\n}\n:where() Pseudo-class: This pseudo-class takes a list of selectors (ex ol, ul) and selects an element that matches one of the selectors in the list The difference between :is and :where is that the latter will have a specificity of 0 css\n:where(h1, h2, h3) {\nmargin: 0;\npadding: 0;\n}\n:has() Pseudo-class: This pseudo-class is often dubbed the \"parent\" selector because it allows you to style elements that contain child elements specified in the selector list",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "740752fde8e4be6e4690c9fcced6cd37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Pseudo-class: This pseudo-class takes a list of selectors (ex ol, ul) and selects an element that matches one of the selectors in the list The difference between :is and :where is that the latter will have a specificity of 0 css :where(h1, h2, h3) { margin: 0; padding: 0; } :has() Pseudo-class: This pseudo-class is often dubbed the \"parent\" selector because it allows you to style elements that contain child elements specified in the selector listcss\narticle:has(h2) {\nborder: 2px solid hotpink;\n}\n:not() Pseudo-class: This pseudo-class is used to select elements that do not match the provided selector css\np:not( example) {\ncolor: blue;\n}\nPseudo-elements\n::before Pseudo-element: This pseudo-element uses the content property to insert cosmetic content like icons just before the element ::after Pseudo-element: This pseudo-element uses the content property to insert cosmetic content like icons just after the element ::first-letter Pseudo-element: This pseudo-element targets the first letter of an element's content, allowing you to style it ::marker Pseudo-element: This pseudo-element lets you select the marker (bullet or numbering) of list items for styling --assignment--\nReview the CSS Pseudo-classes topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7342,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-pseudo-classes\\671a907bad4538752765f2ff.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4d9deeb894dc7626255e7d87d2abb25b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-debugging-javascript\\6723cd54fc196dbd053f9dfb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723cd54fc196dbd053f9dfb\ntitle: Debugging JavaScript Review\nchallengeType: 24\ndashedName: review-debugging-javascript\n--description--\nCommon Types of Error Messages\nSyntaxError: These errors happen when you write something incorrectly in your code, like missing a parenthesis, or a bracket Think of it like a grammar mistake in a sentence js\nconst arr = [\"Beau\", \"Quincy\" \"Tom\"]\nReferenceError: There are several types of Reference Errors, triggered in different ways The first type of reference error would be not defined variables Another example of a ReferenceError is trying to access a variable, declared with let or const, before it has been defined js\nconsole log(num);\nconst num = 50;\nTypeError: These errors occur when you try to perform an operation on the wrong type ```js\nconst developerObj = {\nname: \"Jessica\",\ncountry: \"USA\",\nisEmployed: true\n};\ndeveloperObj map()\n```\nRangeError: These errors happen when your code tries to use a value that's outside the range of what JavaScript can handle js\nconst arr = [];\narr length = -1;\nThe throw Statement\nDefinition: The throw statement in JavaScript is used to throw a user defined exception An exception in programming, is when an unexpected event happens and disrupts the normal flow of the program js\nfunction validateNumber(input) {\nif (typeof input == \"number\") {\nthrow new TypeError(\"Expected a number, but received \" + typeof input);\n}\nreturn input * 2;\n}\ntry catch finally\nDefinition: The try block is used to wrap code that might throw an error It acts as a safe space to try something that could fail The catch block captures and handles errors that occur in the try block You can use the error object inside catch to inspect what went wrong The finally block runs after the try and catch blocks, regardless of whether an error occurred It's commonly used for cleanup tasks, such as closing files or releasing resources ```js\nfunction processInput(input) {\nif (typeof input == \"string\") {\nthrow new TypeError(\"Input must be a string \");\n}\nreturn input toUpperCase();\n}\ntry {\nconsole log(\"Starting to process input \");\nconst result = processInput(9);\nconsole log(\"Processed result:\", result);\n} catch (error) {\nconsole error(\"Error occurred:\", error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-debugging-javascript\\6723cd54fc196dbd053f9dfb.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "043c9c273a2be4d75f03c15490625e1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-debugging-javascript\\6723cd54fc196dbd053f9dfb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "The finally block runs after the try and catch blocks, regardless of whether an error occurred It's commonly used for cleanup tasks, such as closing files or releasing resources ```js function processInput(input) { if (typeof input == \"string\") { throw new TypeError(\"Input must be a string \"); } return input toUpperCase(); } try { console log(\"Starting to process input \"); const result = processInput(9); console log(\"Processed result:\", result); } catch (error) { console error(\"Error occurred:\", errormessage);\n}\n```\nDebugging Techniques\ndebugger Statement: This statement lets you pause your code at a specific line to investigate what's going on in the program ```js\nlet firstNumber = 5;\nlet secondNumber = 10;\ndebugger; // Code execution pauses here\nlet sum = firstNumber + secondNumber;\nconsole log(sum);\n```\nBreakpoints: Breakpoints let you pause the execution of your code at a specific line of your choice After the pause, you can inspect variables, evaluate expressions, and examine the call stack Watchers: Watch expressions lets you monitor the values of variables or expressions as the code runs even if they are out of the current scope Profiling: Profiling helps you identify performance bottlenecks by letting you capture screenshots and record CPU usage, function calls, and execution time console dir(): This method is used to display an interactive list of the properties of a specified JavaScript object It outputs a hierarchical listing that can be expanded to see all nested properties js\nconsole dir(document);\nconsole table(): This method displays tabular data as a table in the console It takes one mandatory argument, which must be an array or an object, and one optional argument to specify which properties (columns) to display --assignment--\nReview the Debugging JavaScript topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-debugging-javascript\\6723cd54fc196dbd053f9dfb.md",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6b3ddf4d8529fc69b4cae91f378380f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a9528fc4f1487cf265444\ntitle: CSS Typography Review\nchallengeType: 24\ndashedName: review-css-typography\n--description--\nIntroduction to Typography\nDefinition: Typography is the art of choosing the right fonts and format to make text visually appealing and easy to read \"Type\" refers to how the individual characters are designed and arranged Typeface Definition: A typeface is the overall design and style of a set of characters, numbers, and symbols It's like a blueprint for a family of fonts Font Definition: A font is a specific variation of a typeface with specific characteristics, such as size, weight, style, and width Serif Typeface: This typeface has a classical style with small lines at the end of characters Serif typefaces are commonly used for printed materials, like books Sans Serif Typeface: This typeface has a more modern look, without the small lines at the end of characters Sans Serif typefaces are commonly used in digital design because they are easy to read on screen Some examples include Helvetica, Arial, and Roboto Font Weight: This is the thickness of the characters, including light, regular, bold, and black Font Style: This is the slant and orientation of the characters, like italic and oblique Font Width: This is the horizontal space occupied by characters, like condensed and expanded Baseline: This is the imaginary line on which most characters rest Cap Height: This is the height of uppercase letters, measured from the baseline to the top X-height: This is the average height of lowercase letters, excluding ascenders and descenders Ascenders: These are the parts of lowercase letters that extend above the x-height, such as the tops of the letters 'h', 'b', 'd', and 'f' Descenders: These are the parts of lowercase letters that extend below the baseline, such as the tails of 'y', 'g', 'p', and 'q' Kerning: This is how space is adjusted between specific pairs of characters to improve their readability and aesthetics For example, reducing the space between the letters A and V Tracking: This is how space is adjusted between all characters in a block of text It's essentially the distance between the characters It affects how dense and open the text will be Leading: This is the vertical space between lines of text It's measured from the baseline of one line to the baseline of the next line",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "6acfd09e0e3bce8fef3b027be699e2b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of characters to improve their readability and aesthetics For example, reducing the space between the letters A and V Tracking: This is how space is adjusted between all characters in a block of text It's essentially the distance between the characters It affects how dense and open the text will be Leading: This is the vertical space between lines of text It's measured from the baseline of one line to the baseline of the next lineBest Practices with Typography: You should choose clear and simple fonts to make your designs easy to understand This is particularly important for the main text of your website Users are more likely to engage with your content if the font is easy to read You should use two or three fonts at most to create a visual consistency Using too many fonts can make the text more difficult to read and weaken your brand's identity This can also impact the user experience by increasing the load time of the website You can use font size to create a visual hierarchy for headings, subheadings, paragraphs, and other elements For example, the main heading on a webpage should have a larger font, followed by subheadings with smaller font sizes This will give every element in the hierarchy a specific font size that helps users navigate through the structure visually CSS font-family Property\nDefinition: A font family is a group of fonts that share a common design All the fonts that belong to the same family are based on the same core typeface but they also have variations in their style, weight, and width You can specify multiple font families in order of priority, from highest to lowest, by separating them with commas These alternative fonts will act as fallback options You should always include a generic font family at the end of the font-family list css\nfont-family: Arial, Lato;\nCommon Font Families: Here are some common font families used in CSS: serif, sans-serif, monospace, cursive, fantasy\nWeb Safe Fonts\nDefinition: These fonts are a subset of fonts that are very likely to be installed on a computer or device When the browser has to render a font, it tries to find the font file on the user's system But if the font is not found, it will usually fall back to a default system font Web Safe Fonts:\nSans-serif fonts are commonly used for web development because they don't have small \"feet\" or lines at the end of the characters, so they're easy to read on screen Some examples of web-safe sans-serif fonts are: Arial, Verdana, and Trebuchet MS",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "10e65237ae4981d01aa500663a194f4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to render a font, it tries to find the font file on the user's system But if the font is not found, it will usually fall back to a default system font Web Safe Fonts: Sans-serif fonts are commonly used for web development because they don't have small \"feet\" or lines at the end of the characters, so they're easy to read on screen Some examples of web-safe sans-serif fonts are: Arial, Verdana, and Trebuchet MSIn contrast, serif fonts do have small \"feet\" at the end of the characters, so they're commonly used for traditional print Web safe serif fonts include: Times New Roman and Georgia At-rules and the @font-face At-rule\nDefinition: At-rules are statements that provide instructions to the browser You can use them to define various aspects of the stylesheet, such as media queries, keyframes, font faces, and more @font-face: This allows you to define a custom font by specifying the font file, format, and other important properties, like weight and style For the @font-face at-rule to be valid, you also need to specify the src property This property contains references to the font resources css\n@font-face {\nfont-family: \"MyCustomFont\";\nsrc: url(\"path/to/font woff2\"),\nurl(\"path/to/font woff\"),\nurl(\"path/to/font otf\");\n}\nFont Formats: For each font resource, you can also specify the format This is optional It's a hint for the browser on the font format If the format is omitted, the resource will be downloaded and the format will be detected after it's downloaded If the format is invalid, the resource will not be downloaded Possible font formats include collection, embedded-opentype, opentype, svg, truetype, woff, and woff2 css\n@font-face {\nfont-family: \"MyCustomFont\";\nsrc: url(\"path/to/font woff2\") format(\"woff2\"),\nurl(\"path/to/font otf\") format(\"opentype\"),\nurl(\"path/to/font woff\") format(\"woff\");\n}\nwoff and woff2: woff stands for \"Web Open Font Format \" It's a widely used font format developed by Mozilla in collaboration with Type Supply, LettError, and other organizations The difference between woff and woff2 is the algorithm used to compress the data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "297ac1b25899656ba028e9c217b9c3c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "resource will not be downloaded Possible font formats include collection, embedded-opentype, opentype, svg, truetype, woff, and woff2 css @font-face { font-family: \"MyCustomFont\"; src: url(\"path/to/font woff2\") format(\"woff2\"), url(\"path/to/font otf\") format(\"opentype\"), url(\"path/to/font woff\") format(\"woff\"); } woff and woff2: woff stands for \"Web Open Font Format \" It's a widely used font format developed by Mozilla in collaboration with Type Supply, LettError, and other organizations The difference between woff and woff2 is the algorithm used to compress the dataOpenType: This is a format for scalable computer fonts developed by Microsoft and Adobe that allows users to access additional features in a font It's widely used across major operating systems tech(): This is used to specify the technology of the font resource This is optional css\n@font-face {\nfont-family: \"MyCustomFont\";\nsrc: url(\"path/to/font woff2\") format(\"woff2\"),\nurl(\"path/to/font otf\") format(\"opentype\") tech(color-COLRv1),\nurl(\"path/to/font woff\") format(\"woff\");\n}\nWorking With External Fonts\nDefinition: An external font is a font file that is not included directly within your project files They're usually hosted on a separate server To include these external fonts inside your project, you can use a link element or @import statement inside your CSS Google Fonts: This is a Google service that offers a collection of fonts, many of which are designed specifically for web development Here is an example using the link element:\nhtml\n<link rel=\"preconnect\" href=\"https://fonts googleapis com\">\n<link rel=\"preconnect\" href=\"https://fonts gstatic com\" crossorigin>\n<link href=\"https://fonts googleapis com/css2 family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\">\ncss roboto-thin {\nfont-family: \"Roboto\", sans-serif;\nfont-weight: 100;\nfont-style: normal;\n}\nHere is an example using the @import statement:\ncss\n@import url('https://fonts googleapis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "be1e0258c657b413285bb0795f5e3622",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "@import statement inside your CSS Google Fonts: This is a Google service that offers a collection of fonts, many of which are designed specifically for web development Here is an example using the link element: html <link rel=\"preconnect\" href=\"https://fonts googleapis com\"> <link rel=\"preconnect\" href=\"https://fonts gstatic com\" crossorigin> <link href=\"https://fonts googleapis com/css2 family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\" rel=\"stylesheet\"> css roboto-thin { font-family: \"Roboto\", sans-serif; font-weight: 100; font-style: normal; } Here is an example using the @import statement: css @import url('https://fonts googleapiscom/css2 family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\nFont Squirrel: This is another popular resource that you can use for adding custom external fonts to your projects text-shadow Property\nDefinition: This property is used to apply shadows to text You need to specify the X and Y offset, which represent the horizontal and vertical distance of the shadow from the text, respectively These values are required Positive values of the X offset and Y offset will move the shadow right and down, respectively, while negative values will move the shadow left and up css\np {\ntext-shadow: 3px 2px;\n}\nShadow Color: You can also customize the color of the shadow by specifying this value before or after the offset If the color is not specified, the browser will determine the color automatically, so it's usually best to set it explicitly css\np {\ntext-shadow: 3px 2px #00ffc3;\n}\nBlur Radius: The blur radius is optional but will make the shadow look a lot smoother and more subtle The default value of the radius blur is zero The higher the value, the bigger the blur, which means that the shadow becomes lighter",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "44e3ae4f17d4c8536488795a5fad2a8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "or after the offset If the color is not specified, the browser will determine the color automatically, so it's usually best to set it explicitly css p { text-shadow: 3px 2px #00ffc3; } Blur Radius: The blur radius is optional but will make the shadow look a lot smoother and more subtle The default value of the radius blur is zero The higher the value, the bigger the blur, which means that the shadow becomes lightercss\np {\ntext-shadow: 3px 2px 3px #00ffc3;\n}\nApplying Multiple Text Shadows: The text can have more than one shadow The shadows will be applied in layers, from front to back, with the first shadow at the top css\np {\ntext-shadow:\n3px 2px 3px #00ffc3,\n-3px -2px 3px #0077ff,\n5px 4px 3px #dee7e5;\n}\n--assignment--\nReview the CSS Typography topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css-typography\\671a9528fc4f1487cf265444.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3ab358257014ae28835c10a590e06fde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39dc7129b092b27099d8c\ntitle: Data Structures Review\nchallengeType: 24\ndashedName: review-data-structures\n--description--\nAlgorithms and Big O Notation\nAlgorithms: A set of unambiguous instructions for solving a problem or carrying out a task Algorithms must finish in a finite number of steps and each step must be precise and unambiguous Big O Notation: Describes the worst-case performance, or growth rate, of an algorithm as the input size increases It focuses on how resource usage grows with input size, ignoring constant factors and lower-order terms Common Time Complexities\nO(1) - Constant Time: Algorithm takes the same amount of time regardless of input size python\ndef check_even_or_odd(number):\nif number % 2 == 0:\nreturn 'Even'\nelse:\nreturn 'Odd'\nO(log n) - Logarithmic Time: Time increases slowly as input grows Common in algorithms that repeatedly reduce problem size by a fraction (like Binary Search) O(n) - Linear Time: Running time increases proportionally to input size python\nfor grade in grades:\nprint(grade)\nO(n log n) - Log-Linear Time: Common time complexity of efficient sorting algorithms like Merge Sort and Quick Sort O(n²) - Quadratic Time: Running time increases quadratically Often seen in nested loops python\nfor i in range(n):\nfor j in range(n):\nprint(\"Hello, World \")\nSpace Complexity\nO(1) - Constant Space: Algorithm uses same amount of memory regardless of input size O(n) - Linear Space: Memory usage grows proportionally with input size O(n²) - Quadratic Space: Memory usage grows quadratically with input size Problem-Solving Techniques\nUnderstanding the Problem: Read the problem statement multiple times Identify the input, expected output, and how to transform input to output Pseudocode: High-level description of algorithm logic that is language-independent Uses common written language mixed with programming constructs like IF, ELSE, FOR, WHILE md\nGET original_string\nSET reversed_string = \"\"\nFOR EACH character IN original_string:\nADD character TO THE BEGINNING OF reversed_string\nDISPLAY reversed_string\nEdge Cases: Specific, valid inputs that occur at the boundaries of what an algorithm should handle Always consider and test edge cases Arrays\nStatic Arrays: Have a fixed size determined at initialization Elements stored in adjacent memory locations Size cannot be changed during program execution",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8d4083b28330d127809a04509521ea06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "language mixed with programming constructs like IF, ELSE, FOR, WHILE md GET original_string SET reversed_string = \"\" FOR EACH character IN original_string: ADD character TO THE BEGINNING OF reversed_string DISPLAY reversed_string Edge Cases: Specific, valid inputs that occur at the boundaries of what an algorithm should handle Always consider and test edge cases Arrays Static Arrays: Have a fixed size determined at initialization Elements stored in adjacent memory locations Size cannot be changed during program executionDynamic Arrays: Can grow or shrink automatically during program execution Handle resizing through automatic copying to larger arrays when needed Python Lists (Dynamic Arrays)\n```python\nnumbers = [3, 4, 5, 6]\nAccess elements\nnumbers[0]  # 3\nUpdate elements\nnumbers[2] = 16\nAdd elements\nnumbers append(7)\nnumbers insert(3, 15)  # Insert at specific index\nRemove elements\nnumbers pop(2)  # Remove at specific index\nnumbers pop()   # Remove last element\n```\nTime Complexities for Dynamic Arrays\nAccess: O(1)\nInsert at end: O(1) average, O(n) when resizing needed\nInsert in middle: O(n)\nDelete: O(n) for middle, O(1) for end\nStacks\nStacks: Last-In, First-Out (LIFO) data structure Elements added and removed from the top only Push Operation: Adding an element to the top of the stack Time complexity: O(1) Pop Operation: Removing an element from the top of the stack Time complexity: O(1) ```python\nUsing Python list as stack\nstack = []\nPush operations\nstack append(1)\nstack append(2)\nstack append(3)\nPop operations\ntop_element = stack pop()  # Returns 3\n```\nQueues\nQueues: First-In, First-Out (FIFO) data structure Elements added to the back and removed from the front Enqueue Operation: Adding an element to the back of the queue Time complexity: O(1) Dequeue Operation: Removing an element from the front of the queue Time complexity: O(1) ```python\nfrom collections import deque\nUsing deque for efficient queue operations\nqueue = deque()\nEnqueue operations\nqueue append(1)\nqueue append(2)\nqueue append(3)\nDequeue operations\nfirst_element = queue",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "d88e2a031557a135a3f8164508828d1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "# Returns 3 ``` Queues Queues: First-In, First-Out (FIFO) data structure Elements added to the back and removed from the front Enqueue Operation: Adding an element to the back of the queue Time complexity: O(1) Dequeue Operation: Removing an element from the front of the queue Time complexity: O(1) ```python from collections import deque Using deque for efficient queue operations queue = deque() Enqueue operations queue append(1) queue append(2) queue append(3) Dequeue operations first_element = queuepopleft()  # Returns 1\n```\nLinked Lists\nLinked Lists: Linear data structure where each node contains data and a reference to the next node Nodes are connected like a chain Singly Linked Lists\nStructure: Each node has data and one reference to the next node Traversal: Can only move forward from head to tail Head Node: First node in the list, usually the only directly accessible node Tail Node: Last node in the list, points to None Operations and Time Complexities\nInsert at beginning: O(1)\nInsert at end: O(n) - must traverse to end\nInsert in middle: O(n) - must traverse to position\nDelete from beginning: O(1)\nDelete from end: O(n) - must traverse to find previous node\nDelete from middle: O(n) - must traverse to find node\nDoubly Linked Lists\nStructure: Each node has data and two references: next node and previous node Traversal: Can move in both directions Memory: Requires more memory than singly linked lists due to extra reference Hash Maps and Sets\nMaps and Hash Maps\nMap (Abstract Data Type): Manages collections of key-value pairs Every key must be unique, but values can be repeated Hash Map: Concrete implementation of map ADT using hashing technique Uses hash function to generate hash values for keys, which determine storage location in underlying array Python Dictionaries (Hash Maps)\n```python\nCreating dictionaries\nmy_dictionary = {\n\"A\": 1,\n\"B\": 2,\n\"C\": 3\n}\nAlternative creation\nmy_dictionary = dict(A=1, B=2, C=3)\nAccess and modify\nvalue = my_dictionary[\"A\"]  # 1\nmy_dictionary[\"A\"] = 4      # Update value\ndel my_dictionary[\"A\"]      # Remove key-value pair\nCheck membership\n\"C\" in my_dictionary\nGet keys, values, items\nmy_dictionary",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "ae83a5f5f855cdd19eeb9290d80352fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of map ADT using hashing technique Uses hash function to generate hash values for keys, which determine storage location in underlying array Python Dictionaries (Hash Maps) ```python Creating dictionaries my_dictionary = { \"A\": 1, \"B\": 2, \"C\": 3 } Alternative creation my_dictionary = dict(A=1, B=2, C=3) Access and modify value = my_dictionary[\"A\"] # 1 my_dictionary[\"A\"] = 4 # Update value del my_dictionary[\"A\"] # Remove key-value pair Check membership \"C\" in my_dictionary Get keys, values, items my_dictionarykeys()\nmy_dictionary values()\nmy_dictionary items()\n```\nTime Complexities for Hash Maps\nAverage case: O(1) for insert, get, delete\nWorst case: O(n) when many hash collisions occur\nSets\nSets: Unordered collections of unique elements No duplicates allowed, no specific order maintained Immutable Elements Only: Sets can only contain immutable data types (numbers, strings, tuples) because hash values must remain constant ```python\nCreating sets\nnumbers = {1, 2, 3, 4}\nempty_set = set()  # Must use set(), not {}\nAdd and remove elements\nnumbers add(5)\nnumbers remove(4)      # Raises KeyError if not found\nnumbers discard(4)     # No error if not found\nSet operations\nset_a = {1, 2, 3, 4}\nset_b = {2, 3, 4, 5, 6}\nUnion, intersection, difference, symmetric difference\nset_a union(set_b)                    # or set_a | set_b\nset_a intersection(set_b)             # or set_a & set_b\nset_a difference(set_b)               # or set_a - set_b\nset_a symmetric_difference(set_b)     # or set_a ^ set_b\nSubset and superset checks\nset_a issubset(set_b)\nset_a issuperset(set_b)\nset_a isdisjoint(set_b)\nMembership testing\n5 in numbers\n```\nTime Complexities for Sets\nAverage case: O(1) for add, remove, membership testing\nWorst case: O(n) due to hash collisions\nHash Collisions\nHash Collision: Occurs when two different keys produce the same hash value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "7779e2abc526a12beb34769ec20fea2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "union(set_b) # or set_a | set_b set_a intersection(set_b) # or set_a & set_b set_a difference(set_b) # or set_a - set_b set_a symmetric_difference(set_b) # or set_a ^ set_b Subset and superset checks set_a issubset(set_b) set_a issuperset(set_b) set_a isdisjoint(set_b) Membership testing 5 in numbers ``` Time Complexities for Sets Average case: O(1) for add, remove, membership testing Worst case: O(n) due to hash collisions Hash Collisions Hash Collision: Occurs when two different keys produce the same hash valueCollision Resolution Strategies:\nChaining: Each array index points to a linked list storing all elements with same hash value\nOpen Addressing: Search for next available index using predefined sequence\nWhen to Use Each Data Structure\nLists: When you need ordered, indexed access and don't know size in advance\nStacks: For LIFO operations (undo functionality, expression evaluation, backtracking)\nQueues: For FIFO operations (task scheduling, breadth-first search)\nLinked Lists: When frequent insertion/deletion at beginning, unknown size, no random access needed\nHash Maps: For fast key-value lookups, counting occurrences, caching\nSets: For uniqueness checking, mathematical set operations, removing duplicates\n--assignment--\nReview the Data Structures topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8383,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-data-structures\\67f39dc7129b092b27099d8c.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "c3d2a37c94001ced089121d327316ee9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a892927fdba60db05edfe\ntitle: Design Fundamentals Review\nchallengeType: 24\ndashedName: review-design-fundamentals\n--description--\nDesign Terminology\nLayout: This is how visual elements are arranged on a page or screen to communicate a message These elements may include text, images, and white space Alignment: This is how the elements are placed in relation to one another Using alignment correctly is helpful for making the design look clean and organized Composition: This is the act of arranging elements to create a harmonious design It determines how elements like images, text, and shapes relate to each other and contribute to the design in an artistic way Balance: This is how visual weight is distributed within a composition Designers aim to create an equilibrium through symmetrical or asymmetrical arrangements Scale: This refers to comparing the dimensions or size of one element to that of another Hierarchy: This establishes the order of importance of the elements in a design It's about making sure that the most important information is noticed first Contrast: This is the process of creating clear distinctions between the elements You can do this through variations in color, size, shape, texture, or any other visual characteristic Strong contrast is also helpful for improving readability White Space(negative space): This is the empty space in a design It's the area surrounding the elements UI(User Interface): UI includes the visual and interactive elements that users can see on their screens, like icons, images, text, menus, links, and buttons UX(User Experience): UX is about how users feel when using a product or service An application with a well-design user experience is intuitive, easy to use, efficient, accessible, and enjoyable Design Brief: This is a document that outlines the objectives, goals, and requirements of a project It is a roadmap that guides the design process and ensures that the final product meets the needs of the client Vector Based Design: This involves creating digital art using mathematical formulas to define lines, shapes, and colors Prototyping: This refers to the process of creating an interactive model of a product or user interface UI Design Fundamentals\nGood Contrast for Background and Foreground Colors: It is important to ensure that the background and foreground colors have good contrast to make the text readable The Web Content Accessibility Guidelines (WCAG) recommend a minimum contrast ratio of 4 5:1 for normal text and 3:1 for large text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8026,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8cb4135c2778cb124a04013bf3a1972a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "mathematical formulas to define lines, shapes, and colors Prototyping: This refers to the process of creating an interactive model of a product or user interface UI Design Fundamentals Good Contrast for Background and Foreground Colors: It is important to ensure that the background and foreground colors have good contrast to make the text readable The Web Content Accessibility Guidelines (WCAG) recommend a minimum contrast ratio of 4 5:1 for normal text and 3:1 for large textGood Visual Hierarchy in Design: A strong visual hierarchy can provide a clear path for the eye to follow, ensuring that the information you convey is consumed in the order that you intend Responsive Images: Responsive images are images that scale to fit the size of the screen they are being viewed on This is important because it ensures that your images look good on all devices, from desktops to mobile phones Progressive Enhancement: This is a design approach that ensures all users, regardless of browser or device, can access the essential content and functionality of an application User-centered Design: This is an approach that prioritizes the end user, from their needs to their preferences and limitations The goal of user-centered design is to craft a web page that is intuitive, efficient to use, and pleasing for your users to interact with User Research: This is the systematic study of the people who use your product The goal is to measure user needs, behaviors, and pain points Exit Interviews: This is a survey you can give to users when they cancel their accounts It can help you understand why users are leaving and what you can do to reduce churn User Testing: This refers to the practice of capturing data from users as they interface with your application A/B Testing: This is the process of shipping a new feature to a randomly selected subset of your user base You can then leverage analytics data to determine if the feature is beneficial User Requirements: This refers to the stories or rubric that your application needs to follow User requirements might be defined by user research or industry standards They can even be defined by stakeholder input Progressive Disclosure: This is a design pattern used to only show users relevant content based on their current activity and hide the rest This is done to reduce cognitive load and make the user experience more intuitive Deferred/Lazy Registration: This is a UI design pattern that allows users to browse and interact with your application without having to register Design Best Practices\nDark Mode: This is a special feature on web applications where you can change the default light color scheme to a dark color scheme",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8026,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "6e537a807c13d628bb3a578d40598b0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "show users relevant content based on their current activity and hide the rest This is done to reduce cognitive load and make the user experience more intuitive Deferred/Lazy Registration: This is a UI design pattern that allows users to browse and interact with your application without having to register Design Best Practices Dark Mode: This is a special feature on web applications where you can change the default light color scheme to a dark color schemeYou should use desaturated colors in dark mode Desaturated colors are colors that are less intense and have a lower saturation level Breadcrumbs: This is a navigation aid that shows the user where they are in the site's hierarchy It is best to place breadcrumbs at the top of the page so users can easily find it Also, you want to make sure the breadcrumbs are large enough to be easily read, but not so large that they take up too much space on the page Card Component: Your card component should be simple in design, not visually cluttered or display too much information For media, make sure to choose high-quality images and videos to enhance the user experience Infinite Scroll: This is a design pattern that loads more content as the user scrolls down the page You should consider using a load more button because it gives a user control over when they want to see more content You can also add a back button so users have the ability to go back to the previous page without having to scroll all the way back up Modal Dialog: This is a type of pop-up that will display on top of existing page content Usually the background content will have a dim color overlay in order to help the user better focus on the modal content Also, it is always a good idea to allow the user to click outside of the modal to close it When you use the HTML dialog element, you will get a lot of the functionality and accessibility benefits built in Progress Indication for Form Registration: This is a way to show users how far they are in a process It can be used in forms, registration, and setup processes Your design should be simple, easy to find, and make it possible to go back to previous steps Shopping Cart: Carts are a place for user to see what item they have already selected on an e-commerce platform Your carts should always be visible to the user, use a common icon like a cart, bag or basket, and have a clear call-to-action button for users to proceed to checkout Common Design Tools\nFigma: This cloud-based tool specializes in User Interface and User Experience (UI / UX) design",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8026,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "962e9d9bd90e646241a2dab3a46575c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "possible to go back to previous steps Shopping Cart: Carts are a place for user to see what item they have already selected on an e-commerce platform Your carts should always be visible to the user, use a common icon like a cart, bag or basket, and have a clear call-to-action button for users to proceed to checkout Common Design Tools Figma: This cloud-based tool specializes in User Interface and User Experience (UI / UX) designIt enables design and development teams to collaborate from anywhere, offering built-in features including Vector-based design, automatic layout, a commenting and feedback system and more Sketch: This is a popular design tool used for its intuitive interface and simplicity, making it ideal for developers who want to quickly create prototypes It's also widely used by designers for tasks like creating UIs, icons, and web layouts Adobe XD: This is a vector-based design and prototyping tool for UI/UX design, known for its seamless integration with other Adobe apps like Photoshop, Illustrator, and After Effects Canva: This tool allows you to create a wide range of visual content, including posters, cover photos, presentations, short videos, and more Its user-friendly and simple design makes it ideal for beginners --assignment--\nReview the Design Fundamentals topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8026,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-design-fundamentals\\671a892927fdba60db05edfe.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "0693123bfd120f8ed3f96eba313ef172",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dynamic-programming\\67f39e2119042d2f2ca926ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39e2119042d2f2ca926ff\ntitle: Dynamic Programming Review\nchallengeType: 24\ndashedName: review-dynamic-programming\n--description--\nFirst topic\nDescribe\nSecond topic\nDescribe\n--assignment--\nReview the Dynamic Programming topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dynamic-programming\\67f39e2119042d2f2ca926ff.md",
      "source_type": "git_repo"
    },
    "token_count": 64,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "476fcfb1a23c08349b61bfbbf39bae44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a9a0a140c2b9d6a75629f\ntitle: CSS Review\nchallengeType: 24\ndashedName: review-css\n--description--\nReview the concepts below to prepare for the upcoming exam CSS Basics\nWhat is CSS : Cascading Style Sheets (CSS) is a markup language used to apply styles to HTML elements CSS is used for colors, background images, layouts and more Basic Anatomy of a CSS Rule: A CSS rule is made up of two main parts: a selector and a declaration block A selector is a pattern used in CSS to identify and target specific HTML elements for styling A declaration block applies a set of styles for a given selector, or selectors meta name=\"viewport\" Element: This meta element gives the browser instructions on how to control the page's dimensions and scaling on different devices, particularly on mobile phones and tablets Default Browser Styles: Each HTML element will have default browser styles applied to them This usually includes items like default margins and paddings Inline, Internal, and External CSS\nInline CSS: These styles are written directly within an HTML element using the style attribute Most of the time you will not be using inline CSS due to separation of concerns Internal CSS: These styles are written within the <style> tags inside the head section of an HTML document This can be useful for creating short code examples, but usually, you will not use internal CSS External CSS: These styles are written in a separate CSS file and linked to the HTML document using the link element in the head section For most projects, you will use an external CSS file over internal or inline CSS Working With the width and height Properties\nwidth Property: This property specifies the width of an element If you do not specify a width, then the default is set to auto This means the element will take up the full width of its parent container min-width Property: This property specifies the minimum width for an element max-width Property: This property specifies the maximum width for an element height Property: This property specifies the height of an element Similarly, the height is auto by default, which means it will adjust to the content inside min-height Property: This property specifies the minimum height for an element max-height Property: This property specifies the maximum height for an element Different Types of CSS Combinators\nDescendant Combinator: This combinator is used to target elements that are descendants of a specified parent element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 26
  },
  {
    "id": "a60025d1c2ac2534893064bb6640667c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the maximum width for an element height Property: This property specifies the height of an element Similarly, the height is auto by default, which means it will adjust to the content inside min-height Property: This property specifies the minimum height for an element max-height Property: This property specifies the maximum height for an element Different Types of CSS Combinators Descendant Combinator: This combinator is used to target elements that are descendants of a specified parent elementChild Combinator (>): This combinator is used to select elements that are direct children of a specified parent element Next-sibling Combinator (+): This combinator selects an element that immediately follows a specified sibling element Subsequent-sibling Combinator (~): This combinator selects all siblings of a specified element that come after it Inline, Block, and Inline-Block Level Elements\nInline Level Elements: Inline elements only take up as much width as they need and do not start on a new line These elements flow within the content, allowing text and other inline elements to appear alongside them Common inline elements are span, anchor, and img elements Block Level Elements: Block level elements that take up the full width available to them by default, stretching across the width of their container Some common block-level elements are div, paragraph, and section elements Inline-Block Level Elements: You can set an element to inline-block by using the display property These elements behave like inline elements but can have a width and height set like block-level elements Margin and Padding\nmargin Property: This property is used to apply space outside the element, between the element's border and the surrounding elements margin Shorthand: You can specify 1–4 values to set the margin sides One value applies to all four sides; two values set top and bottom, then right and left; three values set top, horizontal (right and left), then bottom; four values set top, right, bottom, left padding Property: This property is used to apply space inside the element, between the content and its border padding Shorthand: You can specify 1–4 values to set the padding sides One value applies to all four sides; two values set top and bottom, then right and left; three values set top, horizontal (right and left), then bottom; four values set top, right, bottom, left CSS Specificity\nInline CSS Specificity: Inline CSS has the highest specificity because it is applied directly to the element It overrides any internal or external CSS",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 26
  },
  {
    "id": "b8c2b6bd12afd6696b9137849d586cb5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "content and its border padding Shorthand: You can specify 1–4 values to set the padding sides One value applies to all four sides; two values set top and bottom, then right and left; three values set top, horizontal (right and left), then bottom; four values set top, right, bottom, left CSS Specificity Inline CSS Specificity: Inline CSS has the highest specificity because it is applied directly to the element It overrides any internal or external CSSThe specificity value for inline styles is (1, 0, 0, 0) Internal CSS Specificity: Internal CSS is defined within a style element in the head section of the HTML document It has lower specificity than inline styles but can override external styles External CSS Specificity: External CSS is linked via a link element in the head section and is written in separate css files It has the lowest specificity but provides the best maintainability for larger projects Universal Selector (*): a special type of CSS selector that matches any element in the document It is often used to apply a style to all elements on the page, which can be useful for resetting or normalizing styles across different browsers The universal selector has the lowest specificity value of any selector It contributes 0 to all parts of the specificity value (0, 0, 0, 0) Type Selectors: These selectors target elements based on their tag name Type selectors have a relatively low specificity compared to other selectors The specificity value for a type selector is (0, 0, 0, 1) Class Selectors: These selectors are defined by a period ( ) followed by the class name The specificity value for a class selector is (0, 0, 1, 0) This means that class selectors can override type selectors, but they can be overridden by ID selectors and inline styles ID Selectors: ID selectors are defined by a hash symbol (#) followed by the ID name ID selectors have a very high specificity, higher than type selectors and class selectors, but lower than inline styles The specificity value for an ID selector is (0, 1, 0, 0) important keyword: used to give a style rule the highest priority, allowing it to override any other declarations for a property When used, it forces the browser to apply the specified style, regardless of the specificity of other selectors You should be cautious when using important because it can make your CSS harder to maintain and debug",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 26
  },
  {
    "id": "f932b44b1253b637ded6bf8b2a4e3803",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "class selectors, but lower than inline styles The specificity value for an ID selector is (0, 1, 0, 0) important keyword: used to give a style rule the highest priority, allowing it to override any other declarations for a property When used, it forces the browser to apply the specified style, regardless of the specificity of other selectors You should be cautious when using important because it can make your CSS harder to maintain and debugCascade Algorithm: An algorithm used to decide which CSS rules to apply when there are multiple styles targeting the same element It ensures that the most appropriate styles are used, based on a set of well-defined rules CSS Inheritance: The process by which styles are passed down from parent elements to their children Inheritance allows you to define styles at a higher level in the document tree and have them apply to multiple elements without explicitly specifying them for each element Design Terminology\nLayout: This is how visual elements are arranged on a page or screen to communicate a message These elements may include text, images, and white space Alignment: This is how the elements are placed in relation to one another Using alignment correctly is helpful for making the design look clean and organized Composition: This is the act of arranging elements to create a harmonious design It determines how elements like images, text, and shapes relate to each other and contribute to the design in an artistic way Balance: This is how visual weight is distributed within a composition Designers aim to create an equilibrium through symmetrical or asymmetrical arrangements Scale: This refers to comparing the dimensions or size of one element to that of another Hierarchy: This establishes the order of importance of the elements in a design It's about making sure that the most important information is noticed first Contrast: This is the process of creating clear distinctions between the elements You can do this through variations in color, size, shape, texture, or any other visual characteristic Strong contrast is also helpful for improving readability White Space(negative space): This is the empty space in a design It's the area surrounding the elements UI(User Interface): UI includes the visual and interactive elements that users can see on their screens, like icons, images, text, menus, links, and buttons UX(User Experience): UX is about how users feel when using a product or service An application with a well-designed user experience is intuitive, easy to use, efficient, accessible, and enjoyable Design Brief: This is a document that outlines the objectives, goals, and requirements of a project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 26
  },
  {
    "id": "23c302df50c5fbc16b13d94e8726927c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "It's the area surrounding the elements UI(User Interface): UI includes the visual and interactive elements that users can see on their screens, like icons, images, text, menus, links, and buttons UX(User Experience): UX is about how users feel when using a product or service An application with a well-designed user experience is intuitive, easy to use, efficient, accessible, and enjoyable Design Brief: This is a document that outlines the objectives, goals, and requirements of a projectIt is a roadmap that guides the design process and ensures that the final product meets the needs of the client Vector Based Design: This involves creating digital art using mathematical formulas to define lines, shapes, and colors Prototyping: This refers to the process of creating an interactive model of a product or user interface UI Design Fundamentals\nGood Contrast for Background and Foreground Colors: It is important to ensure that the background and foreground colors have good contrast to make the text readable The Web Content Accessibility Guidelines (WCAG) recommend a minimum contrast ratio of 4 5:1 for normal text and 3:1 for large text Good Visual Hierarchy in Design: A strong visual hierarchy can provide a clear path for the eye to follow, ensuring that the information you convey is consumed in the order that you intend Responsive Images: Responsive images are images that scale to fit the size of the screen they are being viewed on This is important because it ensures that your images look good on all devices, from desktops to mobile phones Progressive Enhancement: This is a design approach that ensures all users, regardless of browser or device, can access the essential content and functionality of an application User-centered Design: This is an approach that prioritizes the end user, from their needs to their preferences and limitations The goal of user-centered design is to craft a web page that is intuitive, efficient to use, and pleasing for your users to interact with User Research: This is the systematic study of the people who use your product The goal is to measure user needs, behaviors, and pain points User Testing: This refers to the practice of capturing data from users as they interface with your application A/B Testing: This is the process of shipping a new feature to a randomly selected subset of your user base You can then leverage analytics data to determine if the feature is beneficial User Requirements: This refers to the stories or rubric that your application needs to follow User requirements might be defined by user research, or industry standards They can even be defined by stakeholder input",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 26
  },
  {
    "id": "8581994cdf110f7425a0bb0e9be48394",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "data from users as they interface with your application A/B Testing: This is the process of shipping a new feature to a randomly selected subset of your user base You can then leverage analytics data to determine if the feature is beneficial User Requirements: This refers to the stories or rubric that your application needs to follow User requirements might be defined by user research, or industry standards They can even be defined by stakeholder inputProgressive Disclosure: This is a design pattern used to only show users relevant content based on their current activity and hide the rest This is done to reduce cognitive load and make the user experience more intuitive Deferred/Lazy Registration: This is a UI design pattern that allows users to browse and interact with your application without having to register Design Best Practices\nDark Mode: This is a special feature on web applications where you can change the default light color scheme to a dark color scheme You should use desaturated colors in dark mode Desaturated colors are colors that are less intense and have a lower saturation level Breadcrumbs: This is a navigation aid that shows the user where they are in the site's hierarchy It is best to place breadcrumbs at the top of the page so users can easily find it Also, you want to make sure the breadcrumbs are large enough to be easily read, but not so large that they take up too much space on the page Card Component: Your card component should be simple in design, not visually cluttered or display too much information For media, make sure to choose high-quality images and videos to enhance the user experience Infinite Scroll: This is a design pattern that loads more content as the user scrolls down the page You should consider using a load more button because it gives a user control over when they want to see more content You can also add a back button so users have the ability to go back to the previous page without having to scroll all the way back up Modal Dialog: This is a type of pop-up that will display on top of existing page content Usually the background content will have a dim color overlay in order to help the user better focus on the modal content Also, it is always a good idea to allow the user to click outside of the modal to close it When you use the HTML dialog element, you will get a lot of the functionality and accessibility benefits built in Progress Indication for Form Registration: This is a way to show users how far they are in a process It can be used in forms, registration, and setup processes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 5,
    "total_chunks": 26
  },
  {
    "id": "31a9ef1ce0b1643519aac8546ec51e78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "user better focus on the modal content Also, it is always a good idea to allow the user to click outside of the modal to close it When you use the HTML dialog element, you will get a lot of the functionality and accessibility benefits built in Progress Indication for Form Registration: This is a way to show users how far they are in a process It can be used in forms, registration, and setup processesYour design should be simple, easy to find, and make it possible to go back to previous steps Shopping Cart: Carts are a place for user to see what item they have already selected on an e-commerce platform Your carts should always be visible to the user, use a common icon like a cart, bag or basket, and have a clear call-to-action button for users to proceed to checkout Common Design Tools\nFigma: This cloud-based tool specializes in User Interface and User Experience (UI / UX) design It enables design and development teams to collaborate from anywhere, offering built-in features including Vector-based design, automatic layout, a commenting and feedback system and more Sketch: This is a popular design tool used for its intuitive interface and simplicity, making it ideal for developers who want to quickly create prototypes It's also widely used by designers for tasks like creating UIs, icons, and web layouts Adobe XD: This is a vector-based design and prototyping tool for UI/UX design, known for its seamless integration with other Adobe apps like Photoshop, Illustrator, and After Effects Canva: This tool allows you to create a wide range of visual content, including posters, cover photos, presentations, short videos, and more Its user-friendly and simple design makes it ideal for beginners Absolute Units\npx (Pixels): This absolute unit is a fixed-size unit of measurement in CSS, providing precise control over dimensions This means that 1px is always equal to 1/96th of an inch in (Inch): This absolute unit is equal to 96px cm (Centimeters): This absolute unit is equal to 25 2/64 of an inch mm (Millimeters): This absolute unit is equal to 1/10th of a centimeter q (Quarter-Millimeters): This absolute unit is equal to 1/40th of a centimeter pc (Picas): This absolute unit is equal to 1/6th of an inch pt (Points): This absolute unit is equal to 1/72th of an inch",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 6,
    "total_chunks": 26
  },
  {
    "id": "90faf7725b1350632e3084e24475446a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "equal to 1/96th of an inch in (Inch): This absolute unit is equal to 96px cm (Centimeters): This absolute unit is equal to 25 2/64 of an inch mm (Millimeters): This absolute unit is equal to 1/10th of a centimeter q (Quarter-Millimeters): This absolute unit is equal to 1/40th of a centimeter pc (Picas): This absolute unit is equal to 1/6th of an inch pt (Points): This absolute unit is equal to 1/72th of an inchRelative Units\nPercentages: These relative units allow you to define sizes, dimensions, and other properties as a proportion of their parent element For example, if you set width: 50%; on an element, it will occupy half the width of its parent container em Unit: These units are relative to the font size of the element If you are using ems for the font-size property, the size of the text will be relative to the font size of the parent element rem Unit: These units are relative to the font size of the root element, which is the html element vh Unit: vh stands for \"viewport height\" and 1vh is equal to 1% of the viewport's height vw Unit: vw stands for \"viewport width\" and 1vw is equal to 1% of the viewport's width calc Function\ncalc() Function: With the calc() function, you can perform calculations directly within your stylesheets to determine property values dynamically This means that you can create flexible and responsive user interfaces by calculating dimensions based on the viewport size or other elements User Action Pseudo-classes\nPseudo-classes Definition: These are special CSS keywords that allow you to select an element based on its specific state or position User Action Pseudo-classes: These are special keywords that allow you to change the appearance of elements based on user interactions, improving the overall user experience :active Pseudo-class: This pseudo-class lets you select the active state of an element, like clicking on a button :hover Pseudo-class: This pseudo-class defines the hover state of an element :focus Pseudo-class: This pseudo-class applies styles when an element gains focus, typically through keyboard navigation or when a user clicks into a form input :focus-within Pseudo-class: This pseudo-class is used to apply styles to an element when it or any of its descendants have focus",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 7,
    "total_chunks": 26
  },
  {
    "id": "5c67d7c2c9bfe21e224d7dd501dedf95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "user experience :active Pseudo-class: This pseudo-class lets you select the active state of an element, like clicking on a button :hover Pseudo-class: This pseudo-class defines the hover state of an element :focus Pseudo-class: This pseudo-class applies styles when an element gains focus, typically through keyboard navigation or when a user clicks into a form input :focus-within Pseudo-class: This pseudo-class is used to apply styles to an element when it or any of its descendants have focusInput Pseudo-classes\nInput Pseudo-classes: These pseudo-classes are used to target HTML input elements based on the state they are in before and after user interaction :enabled Pseudo-class: This pseudo-class is used to target form buttons or other elements that are currently enabled :disabled Pseudo-class: This pseudo-class lets you style an interactive element in disabled mode :checked Pseudo-class: This pseudo-class is used to indicate to the user that it is checked :valid Pseudo-class: This pseudo-class targets the input fields that meet the validation criteria :invalid Pseudo-class: This pseudo-class targets the input fields that do not meet the validation criteria :in-range and :out-of-range Pseudo-classes: These pseudo-classes applies styles to elements based on whether their values are within or outside specified range constraints :required Pseudo-class: This pseudo-class targets input elements that have the required attribute It signals to the user that they must fill out the field to submit the form :optional Pseudo-class: This pseudo-class applies styles input elements that are not required and can be left empty :autofill Pseudo-class: This pseudo-class applies styles to input fields that the browser automatically fills with saved data Location Pseudo-classes\nLocation Pseudo-classes: These pseudo-classes are used for styling links and elements that are targeted within the current document :any-link Pseudo-class: This pseudo-class is a combination of the :link and :visited pseudo-classes So, it matches any anchor element with an href attribute, regardless of whether it's visited or not :link Pseudo-class: This pseudo-class allows you to target all unvisited links on a webpage You can use it to style links differently before the user clicks on them :local-link Pseudo-class: This pseudo-class targets links that point to the same document It can be useful when you want to differentiate internal links from external ones :visited Pseudo-class: This pseudo-class targets a link the user has visited",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 8,
    "total_chunks": 26
  },
  {
    "id": "9e83523a8d465c5676a06e43487a81e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "with an href attribute, regardless of whether it's visited or not :link Pseudo-class: This pseudo-class allows you to target all unvisited links on a webpage You can use it to style links differently before the user clicks on them :local-link Pseudo-class: This pseudo-class targets links that point to the same document It can be useful when you want to differentiate internal links from external ones :visited Pseudo-class: This pseudo-class targets a link the user has visited:target Pseudo-class: This pseudo-class is used to apply styles to an element that is the target of a URL fragment\nTree-structural Pseudo-classes\nTree-structural Pseudo-classes: These pseudo-classes allow you to target and style elements based on their position within the document tree :root Pseudo-class: This pseudo-class is usually the root html element It helps you target the highest level in the document so you can apply a common style to the entire document :empty Pseudo-class: Empty elements, that is, elements with no children other than white space, are also included in the document tree That's why there's an :empty pseudo-class to target empty elements :nth-child(n) Pseudo-class: This pseudo-class allows you to select elements based on their position within a parent :nth-last-child(n) Pseudo-class: This pseudo-class enables you to select elements by counting from the end :first-child Pseudo-class: This pseudo-class selects the first element in a parent element or the document :last-child Pseudo-class: This pseudo-class selects the last element in a parent element or the document\n:only-child Pseudo-class: This pseudo-class selects the only element in a parent element or the document\n:first-of-type Pseudo-class: This pseudo-class selects the first occurrence of a specific element type within its parent :last-of-type Pseudo-class: This pseudo-class selects the last occurrence of a specific element type within its parent :nth-of-type(n) Pseudo-class: This pseudo-class allows you to select a specific element within its parent based on its position among siblings of the same type :only-of-type Pseudo-class: This pseudo-class selects an element if it's the only one of its type within its parent Functional Pseudo-classes\nFunctional Pseudo-classes: Functional pseudo-classes allow you to select elements based on more complex conditions or relationships Unlike regular pseudo-classes which target elements based on a state (for example, :hover, :focus), functional pseudo-classes accept arguments",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 9,
    "total_chunks": 26
  },
  {
    "id": "d816e1aa533dad27f4aa2f6620044250",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "This pseudo-class allows you to select a specific element within its parent based on its position among siblings of the same type :only-of-type Pseudo-class: This pseudo-class selects an element if it's the only one of its type within its parent Functional Pseudo-classes Functional Pseudo-classes: Functional pseudo-classes allow you to select elements based on more complex conditions or relationships Unlike regular pseudo-classes which target elements based on a state (for example, :hover, :focus), functional pseudo-classes accept arguments:is() Pseudo-class: This pseudo-class takes a list of selectors (ex ol, ul) and selects an element that matches one of the selectors in the list :where() Pseudo-class: This pseudo-class takes a list of selectors (ex ol, ul) and selects an element that matches one of the selectors in the list The difference between :is and :where is that the latter will have a specificity of 0 :has() Pseudo-class: This pseudo-class is often dubbed the \"parent\" selector because it allows you to style elements who contain child elements specified in the selector list Pseudo-elements\n::before Pseudo-element: This pseudo-element uses the content property to insert cosmetic content like icons just before the element ::after Pseudo-element: This pseudo-element uses the content property to insert cosmetic content like icons just after the element ::first-letter Pseudo-element: This pseudo-element targets the first letter of an element's content, allowing you to style it ::marker Pseudo-element: This pseudo-element lets you select the marker (bullet or numbering) of list items for styling Color Theory\nColor Theory Definition: This is the study of how colors interact with each other and how they affect our perception It covers color relationships, color harmony, and the psychological impact of color Primary Colors: These colors which are yellow, blue, and red, are the fundamental hues from which all other colors are derived Secondary Colors: These colors result from mixing equal amounts of two primary colors Green, orange, and purple are examples of secondary colors Tertiary Colors: These colors result from combining a primary color with a neighboring secondary color Yellow-Green, Blue-Green, and Blue-Violet, are examples of tertiary colors Warm Colors: These colors which include reds, oranges, and yellows, evoke feelings of comfort, warmth, and coziness Cool Colors: These colors which include blues, green, and purples, evoke feelings of calmness, serenity, and professionalism",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 10,
    "total_chunks": 26
  },
  {
    "id": "0b125ed92018bb73baba147b84b7db2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "result from mixing equal amounts of two primary colors Green, orange, and purple are examples of secondary colors Tertiary Colors: These colors result from combining a primary color with a neighboring secondary color Yellow-Green, Blue-Green, and Blue-Violet, are examples of tertiary colors Warm Colors: These colors which include reds, oranges, and yellows, evoke feelings of comfort, warmth, and coziness Cool Colors: These colors which include blues, green, and purples, evoke feelings of calmness, serenity, and professionalismColor Wheel: The color wheel is a circular diagram that shows how colors relate to each other It's an essential tool for designers because it helps them to select color combinations Analogous Color Schemes: These color schemes create cohesive and soothing experiences They have analogous colors, which are adjacent to each other in the color wheel Complementary Color Schemes: These color schemes create high contrast and visual impact Their colors are located on the opposite ends of the color wheel, relative to each other Triadic Color Scheme: This color scheme has vibrant colors They are made from colors that are approximately equidistant from each other If they are connected, they form an equilateral triangle on the color wheel Monochromatic Color Scheme: For this color scheme, all the colors are derived from the same base color by adjusting its lightness, darkness, and saturation This evokes a feeling of unity and harmony while still creating contrast Different Ways to Work with Colors in CSS\nNamed Colors: These colors are predefined color names recognized by browsers Examples include blue, darkred, lightgreen rgb() Function: RGB stands for Red, Green, and Blue — the primary colors of light These three colors are combined in different intensities to create a wide range of colors the rgb() function allows you to define colors using the RGB color model rgba() Function: This function adds a fourth value —alpha— that controls the transparency of the color hsl() Function: HSL stands for Hue, Saturation, and Lightness — three key components that define a color hsla() Function: This function adds a fourth value -alpha- that controls the opacity of the color Hexadecimal: A hex code (short for hexadecimal code) is a six-character string used to represent colors in the RGB color model The \"hex\" refers to the base-16 numbering system, which uses digits 0 to 9 and letters A to F",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 11,
    "total_chunks": 26
  },
  {
    "id": "dfd7006d7efe6a13f87dff492ad01b06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the color hsl() Function: HSL stands for Hue, Saturation, and Lightness — three key components that define a color hsla() Function: This function adds a fourth value -alpha- that controls the opacity of the color Hexadecimal: A hex code (short for hexadecimal code) is a six-character string used to represent colors in the RGB color model The \"hex\" refers to the base-16 numbering system, which uses digits 0 to 9 and letters A to FLinear and Radial Gradients\nLinear Gradients: These gradients create a gradual blend between colors along a straight line You can control the direction of this line and the colors used Radial Gradients: These gradients create circular or elliptical gradients that radiate from a central point Best Practices for Styling Inputs\nStyling Inputs: As with all text elements, you need to ensure the styles you apply to text inputs are accessible This means the font needs to be adequately sized, and the color needs to have sufficient contrast with the background Input elements are also focusable When you are editing your styles, you should take care that you preserve a noticeable indicator when the element has focus, such as a bold border Using appearance: none for Inputs\nappearance: none: Browsers apply default styling to a lot of elements The appearance: none CSS property gives you complete control over the styling, but comes with some caveats When building custom styles for input elements, you will need to make sure focus and error indicators are still present Common Issues Styling datetime-local and color Properties\nCommon Issues: These special types of inputs rely on complex pseudo-elements to create things like the date and color pickers This presents a significant challenge for styling these inputs One challenge is that the default styling is entirely browser-dependent, so the CSS you write to make the picker look the way you intend may be entirely different on another browser CSS Overflow Property\nDefinition: Overflow refers to the way elements handle content that exceeds, or \"overflows\", the size of the containing element Overflow is two-dimensional overflow-x: The x-axis determines horizontal overflow overflow-y: the y-axis determines vertical overflow CSS Transform Property\nDefinition: This property enables you to apply various transformations to elements, such as rotating, scaling, skewing, or translating (moving) them in 2D or 3D space translate() Function: This function is used to move an element from its current position scale() function: This function allows you to change the size of an element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 12,
    "total_chunks": 26
  },
  {
    "id": "0db9b695cb340f939b9e3daa530e2546",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the size of the containing element Overflow is two-dimensional overflow-x: The x-axis determines horizontal overflow overflow-y: the y-axis determines vertical overflow CSS Transform Property Definition: This property enables you to apply various transformations to elements, such as rotating, scaling, skewing, or translating (moving) them in 2D or 3D space translate() Function: This function is used to move an element from its current position scale() function: This function allows you to change the size of an elementTransforms and Accessibility: If you're using transform to hide or reveal content, make sure that the content is still accessible to screen readers and keyboard navigation Hidden content should be truly hidden, such as by using display: none or visibility: hidden, rather than simply being visually moved off-screen The Box Model\nDefinition: In the CSS box model, every element is surrounded by a box This box consists of four components: the content area, padding, border, margin Content Area: The content area is the innermost part of the box It's the space that contains the actual content of an element, like text or images padding: The padding is the area immediately after the content area It's the space between the content area and the border of an element border: The border is the outer edge or outline of an element in the CSS box model It's the visual boundary of the element margin: The margin is the space outside the border of an element It determines the distance between an element and other elements around it Margin Collapse\nDefinition: This behavior occurs when the vertical margins of adjacent elements overlap, resulting in a single margin equal to the larger of the two This behavior applies only to vertical margins (top and bottom), not horizontal margins (left and right) The content-box and border-box Property Values\nbox-sizing Property: This property is used to determine how the final width and height are calculated for an HTML element content-box Value: In the content-box model, the width and height that you set for an element determine the dimensions of the content area but they don't include the padding, border, or margin border-box Value: With border-box, the width and height of an element include the content area, the padding, and the border, but they don't include the margin CSS Reset\nDefinition: A CSS reset is a stylesheet that removes all or some of the default formatting that web browsers apply to HTML elements Third party options for CSS resets include sanitize css and normalize css",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 13,
    "total_chunks": 26
  },
  {
    "id": "7a048bbc01b236be22da1ecfb8c2e065",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the content area but they don't include the padding, border, or margin border-box Value: With border-box, the width and height of an element include the content area, the padding, and the border, but they don't include the margin CSS Reset Definition: A CSS reset is a stylesheet that removes all or some of the default formatting that web browsers apply to HTML elements Third party options for CSS resets include sanitize css and normalize cssCSS Filter Property\nDefinition: This property can be used to create various effects such as blurring, color shifting, and contrast adjustment blur() Function: This function applies a Gaussian blur to the element The amount is defined in pixels and represents the radius of the blur brightness() Function: This function adjusts the brightness of the element A value of 0% will make the element completely black, while values over 100% will increase the brightness grayscale() Function: This function converts the element to grayscale The amount is defined as a percentage, where 100% is completely grayscale and 0% leaves the image unchanged sepia() Function: This function applies a sepia tone to the element Like grayscale, it uses a percentage value hue-rotate() Function: This function applies a hue rotation to the element The value is defined in degrees and represents a rotation around the color circle Introduction to CSS Flexbox and Flex Model\nDefinition: CSS flexbox is a one-dimensional layout model that allows you to arrange elements in rows and columns within a container Flex Model: This model defines how flex items are arranged within a flex container Every flex container has two axes: the main axis and the cross axis The flex-direction Property\nDefinition: This property sets the direction of the main axis The default value of flex-direction is row, which places all the flex items on the same row, in the direction of your browser's default language (left to right or right to left) flex-direction: row-reverse;: This reverses the items in the row flex-direction: column;: This will align the flex items vertically instead of horizontally flex-direction: column-reverse;: This reverses the order of the flex items vertically The flex-wrap Property\nDefinition: This property determines how flex items are wrapped within a flex container to fit the available space flex-wrap can take three possible values: nowrap, wrap, and wrap-reverse flex-wrap: nowrap;: This is the default value Flex items won't be wrapped onto a new line, even if their width exceed the container's width",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 14,
    "total_chunks": 26
  },
  {
    "id": "03bf5f5afa1fe27cd5a54d58120baecd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "This will align the flex items vertically instead of horizontally flex-direction: column-reverse;: This reverses the order of the flex items vertically The flex-wrap Property Definition: This property determines how flex items are wrapped within a flex container to fit the available space flex-wrap can take three possible values: nowrap, wrap, and wrap-reverse flex-wrap: nowrap;: This is the default value Flex items won't be wrapped onto a new line, even if their width exceed the container's widthflex-wrap: wrap;: This property will wrap the items when they exceed the width of their container flex-wrap: wrap-reverse;: This property will wrap flex items in reverse order flex-flow Property: This property is a shorthand property for flex-direction and flex-wrap The justify-content Property\nDefinition: This property aligns the child elements along the main axis of the flex container justify-content: flex-start;: In this case, the flex items will be aligned to the start of the main axis This could be horizontal or vertical justify-content: flex-end;: In this case, the flex items are aligned to the end of the main axis, horizontally or vertically justify-content: center;: This centers the flex items along the main axis justify-content: space-between;: This will distribute the elements evenly along the main axis justify-content: space-around;: This will distribute flex items evenly within the main axis, adding a space before the first item and after the last item justify-content: space-evenly;: This will distributes the items evenly along the main axis The align-items Property\nDefinition: This property is used to distribute items along the cross axis Remember that the cross axis is perpendicular to the main axis align-items: center;: This is used to center the items along the cross axis align-items: flex-start;: This aligns the items to the start of the cross axis align-items: stretch;: This is used to stretch the flex items along the cross axis Introduction to Typography\nDefinition: Typography is the art of choosing the right fonts and format to make text visually appealing and easy to read \"Type\" refers to how the individual characters are designed and arranged Typeface Definition: A typeface is the overall design and style of a set of characters, numbers, and symbols It's like a blueprint for a family of fonts Font Definition: A font is a specific variation of a typeface with specific characteristics, such as size, weight, style, and width",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 15,
    "total_chunks": 26
  },
  {
    "id": "31da979f60b715e4a3e76b54e7721640",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "art of choosing the right fonts and format to make text visually appealing and easy to read \"Type\" refers to how the individual characters are designed and arranged Typeface Definition: A typeface is the overall design and style of a set of characters, numbers, and symbols It's like a blueprint for a family of fonts Font Definition: A font is a specific variation of a typeface with specific characteristics, such as size, weight, style, and widthSerif Typeface: This typeface has a classical style with small lines at the end of characters Serif typefaces are commonly used for printed materials, like books Sans Serif Typeface: This typeface has a more modern look, without the small lines at the end of characters Sans Serif typefaces are commonly used in digital design because they are easy to read on screen Some examples include Helvetica, Arial, and Roboto Font Weight: This is the thickness of the characters, including light, regular, bold, and black Font Style: This is the slant and orientation of the characters, like italic and oblique Font Width: This is the horizontal space occupied by characters, like condensed and expanded Baseline: This is the imaginary line on which most characters rest Cap Height: This is the height of uppercase letters, measured from the baseline to the top X-height: This is the average height of lowercase letters, excluding ascenders and descenders Ascenders: These are the parts of lowercase letters that extend above the x-height, such as the tops of the letters 'h', 'b', 'd', and 'f' Descenders: These are the parts of lowercase letters that extend below the baseline, such as the tails of 'y', 'g', 'p', and 'q' Kerning: This is how space is adjusted between specific pairs of characters to improve their readability and aesthetics For example, reducing the space between the letters A and V Tracking: This is how space is adjusted between all characters in a block of text It's essentially the distance between the characters It affects how dense and open the text will be Leading: This is the vertical space between lines of text It's measured from the baseline of one line to the baseline of the next line Best Practices with Typography: You should choose clear and simple fonts to make your designs easy to understand This is particularly important for the main text of your website Users are more likely to engage with your content if the font is easy to read You should use two or three fonts at most to create a visual consistency",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 16,
    "total_chunks": 26
  },
  {
    "id": "4e440e48ddf0a04d35e52fa905f8d6fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of text It's measured from the baseline of one line to the baseline of the next line Best Practices with Typography: You should choose clear and simple fonts to make your designs easy to understand This is particularly important for the main text of your website Users are more likely to engage with your content if the font is easy to read You should use two or three fonts at most to create a visual consistencyUsing too many fonts can make the text more difficult to read and weaken your brand's identity This can also impact the user experience by increasing the load time of the website You can use font size to create a visual hierarchy for headings, subheadings, paragraphs, and other elements For example, the main heading on a webpage should have a larger font, followed by subheadings with smaller font sizes This will give every element in the hierarchy a specific font size that helps users navigate through the structure visually CSS font-family Property\nDefinition: A font family is a group of fonts that share a common design All the fonts that belong to the same family are based on the same core typeface but they also have variations in their style, weight, and width You can specify multiple font families in order of priority, from highest to lowest, by separating them with commas These alternative fonts will act as fallback options You should always include a generic font family at the end of the font-family list Common Font Families: Here are some common font families used in CSS: serif, sans-serif, monospace, cursive, fantasy\nWeb Safe Fonts\nDefinition: These fonts are a subset of fonts that are very likely to be installed on a computer or device When the browser has to render a font, it tries to find the font file on the user's system But if the font is not found, it will usually fall back to a default system font Web Safe Fonts:\nSans-serif fonts are commonly used for web development because they don't have small \"feet\" or lines at the end of the characters, so they're easy to read on screen Some examples of web-safe sans-serif fonts are: Arial, Verdana, and Trebuchet MS In contrast, serif fonts do have small \"feet\" at the end of the characters, so they're commonly used for traditional print Web safe serif fonts include: Times New Roman and Georgia At-rules and the @font-face At-rule\nDefinition: At-rules are statements that provide instructions to the browser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 17,
    "total_chunks": 26
  },
  {
    "id": "23453ef6566efbd682923caa23b5be7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have small \"feet\" or lines at the end of the characters, so they're easy to read on screen Some examples of web-safe sans-serif fonts are: Arial, Verdana, and Trebuchet MS In contrast, serif fonts do have small \"feet\" at the end of the characters, so they're commonly used for traditional print Web safe serif fonts include: Times New Roman and Georgia At-rules and the @font-face At-rule Definition: At-rules are statements that provide instructions to the browserYou can use them to define various aspects of the stylesheet, such as media queries, keyframes, font faces, and more @font-face: This allows you to define a custom font by specifying the font file, format, and other important properties, like weight and style For the @font-face at-rule to be valid, you also need to specify the src property This property contains references to the font resources Font Formats: For each font resource, you can also specify the format This is optional It's a hint for the browser on the font format If the format is omitted, the resource will be downloaded and the format will be detected after it's downloaded If the format is invalid, the resource will not be downloaded Possible font formats include collection, embedded-opentype, opentype, svg, truetype, woff, and woff2 woff and woff2: woff stands for \"Web Open Font Format \" It's a widely used font format developed by Mozilla in collaboration with Type Supply, LettError, and other organizations The difference between woff and woff2 is the algorithm used to compress the data OpenType: This is a format for scalable computer fonts developed by Microsoft and Adobe that allows users to access additional features in a font It's widely used across major operating systems tech(): This is used to specify the technology of the font resource This is optional Working With External Fonts\nDefinition: An external font is a font file that is not included directly within your project files They're usually hosted on a separate server To include these external fonts inside your project, you can use a link element or @import statement inside your CSS Google Fonts: This is a Google service that offers a collection of fonts, many of which are designed specifically for web development Font Squirrel: This is another popular resource that you can use for adding custom external fonts to your projects text-shadow Property\nDefinition: This property is used to apply shadows to text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 18,
    "total_chunks": 26
  },
  {
    "id": "10ca2ad9d90bcdc96fc5bffe00dfda42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a separate server To include these external fonts inside your project, you can use a link element or @import statement inside your CSS Google Fonts: This is a Google service that offers a collection of fonts, many of which are designed specifically for web development Font Squirrel: This is another popular resource that you can use for adding custom external fonts to your projects text-shadow Property Definition: This property is used to apply shadows to textYou need to specify the X and Y offset, which represent the horizontal and vertical distance of the shadow from the text, respectively These values are required Positive values of the X offset and Y offset will move the shadow right and down, respectively, while negative values will move the shadow left and up Shadow Color: You can also customize the color of the shadow by specifying this value before or after the offset If the color is not specified, the browser will determine the color automatically, so it's usually best to set it explicitly Blur Radius: The blur radius is optional but will make the shadow look a lot smoother and more subtle The default value of the radius blur is zero The higher the value, the bigger the blur, which means that the shadow becomes lighter Applying Multiple Text Shadows: The text can have more than one shadow The shadows will be applied in layers, from front to back, with the first shadow at the top Color Contrast Tools\nWebAIM's Color Contrast Checker: This online tool allows you to input the foreground and background colors of your design and instantly see if they meet the Web Content Accessibility Guidelines (WCAG) standards TPGi Colour Contrast Analyzer: This is a free color contrast checker that allows you to check if your websites and apps meet the Web Content Accessibility Guidelines (WCAG) standards This tool also comes with a Color Blindness Simulator feature which allows you to see what your website or app looks like for people with color vision issues Accessibility Tree\nAccessibility tree is a structure used by assistive technologies, such as screen readers, to interpret and interact with the content on a webpage max() Function\nThe max() function returns the largest of a set of comma-separated values:\ncss\nimg {\nwidth: max(250px, 25vw);\n}\nIn the above example, the width of the image will be 250px if the viewport width is less than 1000 pixels If the viewport width is greater than 1000 pixels, the width of the image will be 25vw This is because 25vw is equal to 25% of the viewport width",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 19,
    "total_chunks": 26
  },
  {
    "id": "1d332cafd954f5e2fbf5b967df125a99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the content on a webpage max() Function The max() function returns the largest of a set of comma-separated values: css img { width: max(250px, 25vw); } In the above example, the width of the image will be 250px if the viewport width is less than 1000 pixels If the viewport width is greater than 1000 pixels, the width of the image will be 25vw This is because 25vw is equal to 25% of the viewport widthBest Practices with CSS and Accessibility\ndisplay: none;: Using display: none; means that screen readers and other assistive technologies won't be able to access this content, as it is not included in the accessibility tree Therefore, it is important to use this method only when you want to completely remove content from both visual presentation and accessibility visibility: hidden;: This property and value hides the content visually but keeps it in the document flow, meaning it still occupies space on the page These elements will also no longer be read by screen readers because they will have been removed from the accessibility tree sr-only CSS class: This is a common technique used to visually hide content while keeping it accessible to screen readers css sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\nscroll-behavior: smooth;: This property and value enables a smooth scrolling behavior prefers-reduced-motion feature: This is a media feature that can be used to detect the user's animation preference css\n@media (prefers-reduced-motion: no-preference) {\n* {\nscroll-behavior: smooth;\n}\n}\nIn the above example, smooth scrolling is enabled if the user doesn't have animation preference set on their device Hiding Content with HTML Attributes\naria-hidden attribute: Used to hide an element from people using assistive technology such as screen readers For example, this can be used to hide decorative images that do not provide any meaningful content hidden attribute: This attribute is supported by most modern browsers and hides content both visually and from the accessibility tree It can be easily toggled with JavaScript ```html\nThis paragraph is visible for sighted users, but is hidden from assistive technology This paragraph is hidden from both sighted users and assistive technology",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 20,
    "total_chunks": 26
  },
  {
    "id": "55118dc7979aff3bde63d8a387da9715",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "using assistive technology such as screen readers For example, this can be used to hide decorative images that do not provide any meaningful content hidden attribute: This attribute is supported by most modern browsers and hides content both visually and from the accessibility tree It can be easily toggled with JavaScript ```html This paragraph is visible for sighted users, but is hidden from assistive technology This paragraph is hidden from both sighted users and assistive technology```\nAccessibility Issue of the placeholder Attribute\nUsing placeholder text is not great for accessibility Too often, users confuse the placeholder text with an actual input value - they think there is already a value in the input Working with Different Attribute Selectors and Links\nDefinition: The attribute selector allows you to target HTML elements based on their attributes like the href or title attributes title Attribute: This attribute provides additional information about an element Targeting Elements with the lang and data-lang Attribute\nlang Attribute: This attribute is used in HTML to specify the language of the content within an element You might want to style elements differently based on the language they are written in, especially on a multilingual website data-lang Attribute: Custom data attributes like the data-lang attribute are commonly used to store additional information in elements, such as specifying the language used within a specific section of text Working with the Attribute Selector, Ordered List Elements and the type Attribute\ntype Attribute: When working with ordered lists in HTML, the type attribute allows you to specify the style of numbering used, such as numerical, alphabetical, or Roman numerals Working With Floats\nDefinition: Floats are used to remove an element from its normal flow on the page and position it either on the left or right side of its container When this happens, text will wrap around that floated content Clearing Floats: The clear property is used to determine if an element needs to be moved below the floated content When you have multiple floated elements stacked next to each other, there could be issues with overlap and collapsing in the layouts So a clearfix hack was created to fix this issue Static, Relative and Absolute Positioning\nStatic Positioning: This is the normal flow for the document Elements are positioned from top to bottom, and left to right one after another Relative Positioning: This allows you to use the top, left, right and bottom properties to position the element within the normal document flow You can also use relative positioning to make elements overlap with other elements on the page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 21,
    "total_chunks": 26
  },
  {
    "id": "a6ce0ecbeebfac5e05247d36d5a14994",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "clearfix hack was created to fix this issue Static, Relative and Absolute Positioning Static Positioning: This is the normal flow for the document Elements are positioned from top to bottom, and left to right one after another Relative Positioning: This allows you to use the top, left, right and bottom properties to position the element within the normal document flow You can also use relative positioning to make elements overlap with other elements on the pageAbsolute Positioning: This allows you to take an element out of the normal document flow, making it behave independently from other elements Fixed and Sticky Positioning\nFixed Positioning: When an element is positioned with position: fixed, it is removed from the normal document flow and placed relative to the viewport, meaning it stays in the same position even when the user scrolls This is often used for elements like headers or navigation bars that need to remain visible at all times Sticky Positioning: This type of positioning will act as an relative positioned element as you scroll down the page If you specify a top, left, right or bottom property, then the element will stop acting like a relatively positioned element and start behaving like a fixed position element Working With the z-index Property\nDefinition: The z-index property in CSS is used to control the vertical stacking order of positioned elements that overlap on the page Responsive Web Design\nDefinition: The core principle of responsive design is adaptability – the ability of a website to adjust its layout and content based on the screen size and capabilities of the device it's being viewed on Fluid grids: These use relative units like percentages instead of fixed units like pixels, allowing content to resize and reflow based on screen size Flexible images: These are set to resize within their containing elements, ensuring they don't overflow their containers on smaller screens Media Queries\nDefinition: This allows developers to apply different styles based on the characteristics of the device, primarily the viewport width all Media Type: This is suitable for all devices This is the default if no media type is specified print Media Types: This is intended for paged material and documents viewed on a screen in print preview mode screen Media Types: This is intended primarily for screens aspect-ratio: This describes the ratio between the width and height of the viewport orientation: This is used to indicate whether the device is in landscape or portrait orientation resolution: This is used to describe the resolution of the output device in dots per inch (dpi) or dots per centimeter (dpcm)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 22,
    "total_chunks": 26
  },
  {
    "id": "db5cc784d534af7e8f8d9c0db1b72ab3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Types: This is intended for paged material and documents viewed on a screen in print preview mode screen Media Types: This is intended primarily for screens aspect-ratio: This describes the ratio between the width and height of the viewport orientation: This is used to indicate whether the device is in landscape or portrait orientation resolution: This is used to describe the resolution of the output device in dots per inch (dpi) or dots per centimeter (dpcm)hover: This is used to test whether the primary input mechanism can hover over elements prefers-color-scheme: This is used to detect if the user has requested a light or dark color theme Media Queries and Logical Operators: The and operator is used to combine multiple media features, while not and only can be used to negate or isolate media queries Common Media Breakpoints\nDefinition: Media breakpoints are specific points in a website's design where the layout and content adjust to accommodate different screen sizes There are some general breakpoints that you can use to target phones, tablets and desktop screens But it is not wise to try to chase down every single possible screen size for different devices Small Devices (smartphones): up to 640px\nMedium Devices (tablets): 641px to 1024px\nLarge Devices (desktops): 1025px and larger\nMobile first approach\nDefinition: The mobile-first approach is a design philosophy and development strategy in responsive web design that prioritizes creating websites for mobile devices before designing for larger screens CSS Custom Properties (CSS Variables)\nDefinition: CSS custom properties, also known as CSS variables, are entities defined by CSS authors that contain specific values to be reused throughout a document They are a powerful feature that allows for more efficient, maintainable, and flexible stylesheets Custom properties are particularly useful in creating themeable designs You can define a set of properties for different themes The @property Rule\nDefinition: The @property rule is a powerful CSS feature that allows developers to define custom properties with greater control over their behavior, including how they animate and their initial values css\n@property --property-name {\nsyntax: '<type>';\ninherits: true | false;\ninitial-value: <value>;\n}\n--property-name: This is the name of the custom property you're defining Like all custom properties, it must start with two dashes --property-name can be things like <color>, <length>, <number>, <percentage>, or more complex types syntax: This defines the type of the property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 23,
    "total_chunks": 26
  },
  {
    "id": "387e4e51a9a1708d515699afb2fe3aea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that allows developers to define custom properties with greater control over their behavior, including how they animate and their initial values css @property --property-name { syntax: '<type>'; inherits: true | false; initial-value: <value>; } --property-name: This is the name of the custom property you're defining Like all custom properties, it must start with two dashes --property-name can be things like <color>, <length>, <number>, <percentage>, or more complex types syntax: This defines the type of the propertyinherits: This specifies whether the property should inherit its value from its parent element initial-value: This sets the default value of the property Fallbacks: When using the custom property, you can provide a fallback value using the var() function, just as you would with standard custom properties CSS Grid Basics\nDefinition: CSS Grid is a two-dimensional layout system used to create complex layouts in web pages Grids will have rows and columns with gaps between them To define a grid layout, you would set the display property to grid The fr (Fractional) Unit: This unit represents a fraction of the space within the grid container You can use the fr unit to create flexible grids Creating Gaps Between Tracks: There are three ways to create gaps between tracks in CSS grid You can use the column-gap property to create gaps between columns You can use the row-gap property to create gaps between rows Or you can use the gap shorthand property to create gaps between both rows and columns repeat() Function: This function is used to repeat sections in the track listing Instead of writing grid-template-columns: 1fr 1fr 1fr; you can use the repeat() function instead Explicit Grid: You can specify the number of lines or tracks using the grid-template-columns or grid-template-rows properties Implicit Grid: When items are placed outside of the grid, then rows and columns are automatically created for those outside elements minmax() Function: This function is used to set the minimum and maximum sizes for a track Line-based Placement: All grids have lines To specify where the item begins on a line, you can use the grid-column-start and grid-row-start properties To specify where the item ends on the line, you can use the grid-column-end and grid-row-end properties You can also choose to use the grid-column or grid-row shorthand properties instead grid-template-areas: This property is used to provide a name for the items you are going to position on the grid",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 24,
    "total_chunks": 26
  },
  {
    "id": "c653fa7eef6db14074f9d090b40cbdbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for a track Line-based Placement: All grids have lines To specify where the item begins on a line, you can use the grid-column-start and grid-row-start properties To specify where the item ends on the line, you can use the grid-column-end and grid-row-end properties You can also choose to use the grid-column or grid-row shorthand properties instead grid-template-areas: This property is used to provide a name for the items you are going to position on the gridCSS Animation Basics\nDefinition: CSS animations allow you to create dynamic, visually engaging effects on web pages without the need for JavaScript or complex programming They provide a way to smoothly transition elements between different styles over a specified duration The @keyframes Rule: This rule defines the stages and styles of the animation It specifies what styles the element should have at various points during the animation animation Property: This is the shorthand property used to apply animations animation-name: This specifies the name for the @keyframes rule to use animation-duration: This sets how long the animation should take to complete animation-timing-function: This defines how the animation progresses over time (such as ease, linear, ease-in-out) animation-delay: This specifies a delay before the animation starts animation-iteration-count: This sets how many times the animation should repeat animation-direction: This determines whether the animation should play forwards, backwards, or alternate animation-fill-mode: This specifies how the element should be styled before and after the animation animation-play-state: This allows you to pause and resume the animation Accessibility and the prefers-reduced-motion Media Query\nThe prefers-reduced-motion Media Query: One of the primary accessibility concerns with animations is that they can cause discomfort or even physical harm to some users People with vestibular disorders or motion sensitivity may experience dizziness, nausea, or headaches when exposed to certain types of movement on screen The prefers-reduced-motion media query allows web developers to detect if the user has requested minimal animations or motion effects at the system level --assignment--\nReview the CSS topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 56595,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-css\\671a9a0a140c2b9d6a75629f.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 25,
    "total_chunks": 26
  },
  {
    "id": "54fba4221d7b1195267d4bdee7a74774",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-error-handling\\67f39bcb48373420f4f12d62.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39bcb48373420f4f12d62\ntitle: Error Handling Review\nchallengeType: 24\ndashedName: review-error-handling\n--description--\nCommon Errors in Python\nSyntaxError: The error Python raises when your code does not follow its syntax rules For example, the code print(\"Hello there\" will lead to a syntax error with the message, SyntaxError: '(' was never closed, because the code is missing a closing parenthesis NameError: Python raises a NameError when you try to access a variable or function you have not defined For instance, if you have the line print(username) in your code without having a username variable defined first, you will get a name error with the message NameError: name 'username' is not defined TypeError: This is the error Python throws when you perform an operation on two or more incompatible data types For example, if you try to add a string to a number, you'll get the error TypeError: can only concatenate str (not \"int\") to str IndexError: You'll get an IndexError if you access an index that does not exist in a list or other sequences like tuple and string For example, in a Hello world string, the index of the last character is 11 If you go ahead and access a character this way, greet = \"hello world\"; print(greet[12]), you'll get an error with the message IndexError: string index out of range AttributeError: Python raises this error when you try to use a method or property that does not exist in an object of that type For example, calling append() on a string like \"hello\" append(\" \") will lead to an error with the message AttributeError: 'str' object has no attribute 'append' Good Debugging Techniques in Python\nUsing the print function: Inserting print() statements around various points in your code while debugging helps you see the values of variables and how your code flows Using Python's Built-in Debugger (pdb): Python provides a pdb module for debugging It's a part of the Python's standard library, so it's always available to use With pdb, you can set a trace with the set_trace() method so you can start stepping through the code and inspect variables in an interactive way Leveraging IDE Debugging Tools: Many integrated development environments (IDEs) and code editors like Pycharm and VS Code offer debugging tools with breakpoints, step execution, variable inspection, and other debugging features",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-error-handling\\67f39bcb48373420f4f12d62.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9c995e8d5b4c6a3f86eab8a4e6f67168",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-error-handling\\67f39bcb48373420f4f12d62.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "provides a pdb module for debugging It's a part of the Python's standard library, so it's always available to use With pdb, you can set a trace with the set_trace() method so you can start stepping through the code and inspect variables in an interactive way Leveraging IDE Debugging Tools: Many integrated development environments (IDEs) and code editors like Pycharm and VS Code offer debugging tools with breakpoints, step execution, variable inspection, and other debugging featuresException Handling\ntry except: This is used to execute a block of code that might raise an exception The try block is  where you anticipate an error might occur, while the except block takes a specified exception and runs if that specified error is raised Here's an example:\npy\ntry:\nprint(22 / 0)\nexcept ZeroDivisionError:\nprint('You can\\'t divide by zero ')\n# You can't divide by zero You can also chain multiple except blocks so you can handle more types of exceptions:\npy\ntry:\nnumber = int(input('Enter a number: '))\nprint(22 / number)\nexcept ZeroDivisionError:\nprint('You cannot divide by zero ')\n# You cannot divide by zero prints when you enter 0\nexcept ValueError:\nprint('Please enter a valid number ')\n# Please enter a valid number prints when you enter a string\nelse and finally: These blocks extend try except If no exception occurs, the else block runs The finally block always runs regardless of errors py\ntry:\nresult = 100 / 4\nexcept ZeroDivisionError:\nprint('You cannot divide by zero ') # This will not run\nelse:\nprint(f'Result is {result}') # Result is 25 0\nfinally:\nprint('Execution complete ') # Execution complete Exception Object: This lets you access the exception itself for better debugging and printing the direct error message To access the exception object, you need to use the as keyword Here's an example:\npy\ntry:\nvalue = int('This will raise an error')\nexcept ValueError as e:\nprint(f'Caught an error: {e}')\n# Caught an error: invalid literal for int() with base 10: 'This will raise an error'\nThe raise Statement: This allows you to manually raise an exception You can use it to throw an exception when a certain condition is met",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-error-handling\\67f39bcb48373420f4f12d62.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4daa0ba9f2c1df3623cd22f23176f432",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-error-handling\\67f39bcb48373420f4f12d62.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "direct error message To access the exception object, you need to use the as keyword Here's an example: py try: value = int('This will raise an error') except ValueError as e: print(f'Caught an error: {e}') # Caught an error: invalid literal for int() with base 10: 'This will raise an error' The raise Statement: This allows you to manually raise an exception You can use it to throw an exception when a certain condition is metHere's an example:\npy\ndef divide(a, b):\nif b == 0:\nraise ZeroDivisionError('You cannot divide by zero')\nreturn a / b\nException Signaling\nThe raise statement is also useful when you create your own custom exceptions, as you can use it to throw an exception with a custom message Here's an example of that:\n```py\nclass InvalidCredentialsError(Exception):\ndef init(self, message=\"Invalid username or password\"):\nself message = message\nsuper() init(self message)\ndef login(username, password):\nstored_username = \"admin\"\nstored_password = \"password123\"\nif username = stored_username or password = stored_password:\nraise InvalidCredentialsError()\nreturn f\"Welcome, {username} \"\n```\nHere's a how you can use the login function from the InvalidCredentialsError exception:\n```py\n# failed login attempt\ntry:\nmessage = login(\"user\", \"wrongpassword\")\nprint(message)\nexcept InvalidCredentialsError as e:\nprint(f\"Login failed: {e}\")\n# successful login attempt\ntry:\nmessage = login(\"admin\", \"password123\")\nprint(message)\nexcept InvalidCredentialsError as e:\n# This block is not executed because the login was successful\nprint(f\"Login failed: {e}\")\nelse:\n# The else block runs if the 'try' block completes without an exception\nprint(message)\n```\nThe raise statement can also be used with the from keyword to chain exceptions, showing the relationship between different errors:\n```py\ndef parse_config(filename):\ntry:\nwith open(filename, 'r') as file:\ndata = file read()\nreturn int(data)\nexcept FileNotFoundError:\nraise ValueError('Configuration file is missing') from None\nexcept ValueError as e:\nraise ValueError('Invalid configuration format') from e\nconfig = parse_config('config txt')\n```\n--assignment--\nReview the Error Handling topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-error-handling\\67f39bcb48373420f4f12d62.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "23f9c11d09a9aeeb6d0854ba7b025537",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39babe1e2ec1fb6eea32a\ntitle: Dictionaries and Sets Review\nchallengeType: 24\ndashedName: review-dictionaries-and-sets\n--description--\nDictionaries\nDictionaries: Dictionaries are built-in data structures that store collections of key-value pairs Keys need to be immutable data types This is the general syntax of a Python dictionary:\npython\ndictionary = {\nkey1: value1,\nkey2: value2\n}\ndict() Constructor: The dict() constructor is an alternative way to build the dictionary You pass a list of tuples as an argument to the dict() constructor These tuples contain the key as the first element and the value as the second element python\npizza = dict([('name', 'Margherita Pizza'), ('price', 8 9), ('calories_per_slice', 250), ('toppings', ['mozzarella', 'basil'])])\nBracket Notation: To access the value of a key-value pair, you can use the syntax known as bracket notation python\ndictionary[key]\nCommon Dictionary Methods\nget() Method: The get() method retrieves the value associated with a key It's similar to the bracket notation, but it lets you set a default value, preventing errors if the key doesn't exist python\ndictionary get(key, default)\nkeys() and values() Methods: The keys() and values() methods return a view object with all the keys and values in the dictionary, respectively A view object is a way to see the content of a dictionary without creating a separate copy of the data ```python\npizza = {\n'name': 'Margherita Pizza',\n'price': 8 9,\n'calories_per_slice': 250\n}\npizza keys()\ndict_keys(['name', 'price', 'calories_per_slice'])\npizza values()\ndict_values(['Margherita Pizza', 8 9, 250])\n```\nitems() Method: The items() method returns a view object with all the key-value pairs in the dictionary, including both the keys and the values ```python\npizza items()\ndict_items([('name', 'Margherita Pizza'), ('price', 8 9), ('calories_per_slice', 250)])\n```\nclear() Method: The clear() method removes all the key-value pairs from the dictionary python\npizza",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "853f5c0ead6230cda210f07b808a088e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "pizza = { 'name': 'Margherita Pizza', 'price': 8 9, 'calories_per_slice': 250 } pizza keys() dict_keys(['name', 'price', 'calories_per_slice']) pizza values() dict_values(['Margherita Pizza', 8 9, 250]) ``` items() Method: The items() method returns a view object with all the key-value pairs in the dictionary, including both the keys and the values ```python pizza items() dict_items([('name', 'Margherita Pizza'), ('price', 8 9), ('calories_per_slice', 250)]) ``` clear() Method: The clear() method removes all the key-value pairs from the dictionary python pizzaclear()\npop() Method: The pop() method removes the key-value pair with the key specified as the first argument and returns its value If the key doesn't exist, it returns the default value specified as the second argument If the key doesn't exist and the default value is not specified, a KeyError is raised python\npizza pop('price', 10)\npizza pop('total_price') # KeyError\npopitem() Method: In Python 3 7 and above, the popitem() method removes the last inserted item python\npizza popitem()\nupdate() Method: The update() method updates the key-value pairs with the key-value pairs of another dictionary If they have keys in common, their values are overwritten New keys will be added to the dictionary as new key-value pairs python\npizza update({ 'price': 15, 'total_time': 25 })\nLooping Over a Dictionary\nIterating Over Values: If you need to iterate over the values in a dictionary, you can write a for loop with values() to get all the values of a dictionary ```python\nproducts = {\n'Laptop': 990,\n'Smartphone': 600,\n'Tablet': 250,\n'Headphones': 70,\n}\nfor price in products values():\nprint(price)\n```\nOutput:\nmd\n990\n600\n250\n70\nIterating Over Keys: If you need to iterate over the keys in the products dictionary above, you can write products keys() or products directly ```python\nfor product in products",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "7f23e1c892242bd8ff760574eec3f46c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the values in a dictionary, you can write a for loop with values() to get all the values of a dictionary ```python products = { 'Laptop': 990, 'Smartphone': 600, 'Tablet': 250, 'Headphones': 70, } for price in products values(): print(price) ``` Output: md 990 600 250 70 Iterating Over Keys: If you need to iterate over the keys in the products dictionary above, you can write products keys() or products directly ```python for product in productskeys():\nprint(product)\nfor product in products:\nprint(product)\n```\nOutput:\nmd\nLaptop\nSmartphone\nTablet\nHeadphones\nIterating Over Key-Value Pairs: If you need to iterate over the keys and their corresponding values simultaneously, you can iterate over products items() You get individual tuples with the keys and their corresponding values python\nfor product in products items():\nprint(product)\nOutput:\nmd\n('Laptop', 990)\n('Smartphone', 600)\n('Tablet', 250)\n('Headphones', 70)\nTo store the key and value in separate loop variables, you need to separate them with a comma The first variable stores the key, and the second stores the value python\nfor product, price in products items():\nprint(product, price)\nOutput:\nmd\nLaptop 990\nSmartphone 600\nTablet 250\nHeadphones 70\nenumerate() Function: If you need to iterate over a dictionary while keeping track of a counter, you can call the enumerate() function The function returns an enumerate object, which assigns an integer to each item, like a counter You can start the counter from any number, but by default, it starts from 0 Assigning the index and item to separate loop variables is the common way to use enumerate() For example, with products items(), you can get the entire key-value pair in addition to the index:\npython\nfor index, product in enumerate(products items()):\nprint(index, product)\nOutput:\nmd\n0 ('Laptop', 990)\n1 ('Smartphone', 600)\n2 ('Tablet', 250)\n3 ('Headphones', 70)\nTo customize the initial value of the count, you can pass a second argument to enumerate() For example, here we are starting the count from 1 python\nfor index, product in enumerate(products",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "b1bcbcf1aef4e1163bdaba83f2e55b9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "way to use enumerate() For example, with products items(), you can get the entire key-value pair in addition to the index: python for index, product in enumerate(products items()): print(index, product) Output: md 0 ('Laptop', 990) 1 ('Smartphone', 600) 2 ('Tablet', 250) 3 ('Headphones', 70) To customize the initial value of the count, you can pass a second argument to enumerate() For example, here we are starting the count from 1 python for index, product in enumerate(productsitems(), 1):\nprint(index, product)\nOutput:\nmd\n1 ('Laptop', 990)\n2 ('Smartphone', 600)\n3 ('Tablet', 250)\n4 ('Headphones', 70)\nSets\nSets: Sets are built-in data structures in Python that do not allow duplicate values Sets are mutable and unordered, which means that their elements are not stored in any specific order, so you cannot use indices or keys to access them Also, sets can only contain values of immutable data types, like numbers, strings, and tuples Defining a Set: To define a set, you need to write its elements within curly brackets and separate them with commas python\nmy_set = {1, 2, 3, 4, 5}\nDefining an Empty Set: If you need to define an empty set, you must use the set() function Only writing empty curly braces will automatically create a dictionary python\nset() # Set\n{}    # Dictionary\nCommon Set Methods\nadd() Method: You can add an element to a set with the add() method, passing the new element as an argument python\nmy_set add(6)\nremove() and discard() Methods: To remove an element from a set, you can either use the remove() method or the discard() method, passing the element you want to remove as an argument The remove() method will raise a KeyError if the element is not found while the discard() method will not python\nmy_set remove(4)\nmy_set discard(4)\nclear() method:  The clear() method removes all the elements from the set python\nmy_set",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "823327b8212d06c085dbafc86d4dd508",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as an argument python my_set add(6) remove() and discard() Methods: To remove an element from a set, you can either use the remove() method or the discard() method, passing the element you want to remove as an argument The remove() method will raise a KeyError if the element is not found while the discard() method will not python my_set remove(4) my_set discard(4) clear() method: The clear() method removes all the elements from the set python my_setclear()\nMathematical Set Operations\nissubset() and issuperset() Methods: The issubset() and the issuperset() methods check if a set is a subset or superset of another set, respectively ```python\nmy_set = {1, 2, 3, 4, 5}\nyour_set = {2, 3, 4, 5}\nprint(your_set issubset(my_set)) # True\nprint(my_set issuperset(your_set)) # True\n```\nisdisjoint() Method: The isdisjoint() method checks if two sets are disjoint, if they don't have elements in common python\nprint(my_set isdisjoint(your_set)) # False\nUnion Operator (|): The union operator | returns a new set with all the elements from both sets python\nmy_set | your_set # {1, 2, 3, 4, 5, 6}\nIntersection Operator (&): The intersection operator & returns a new set with only the elements that the sets have in common python\nmy_set & your_set # {2, 3, 4}\nDifference Operator (-): The difference operator - returns a new set with the elements of the first set that are not in the other sets python\nmy_set - your_set # {1, 5}\nSymmetric Difference Operator (^): The symmetric difference operator ^ returns a new set with the elements that are either on the first or the second set, but not both python\nmy_set ^ your_set # {1, 5, 6}\nin Operator: You can check if an element is in a set or not with the in operator",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "1f69f794b63a594c73bba251d3d42c77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "with the elements of the first set that are not in the other sets python my_set - your_set # {1, 5} Symmetric Difference Operator (^): The symmetric difference operator ^ returns a new set with the elements that are either on the first or the second set, but not both python my_set ^ your_set # {1, 5, 6} in Operator: You can check if an element is in a set or not with the in operatorpython\nprint(5 in my_set)\nPython Standard Library\nPython Standard Library: A library gives you pre-written and reusable code, like functions, classes, and data structures, that you can reuse in your projects Python has an extensive standard library with built-in modules that implement standardized solutions for many problems and tasks Some examples of popular built-in modules are math, random, re (short for \"regular expressions\"), and datetime Import Statement\nImport Statement: To access the elements defined in built-in modules, you use an import statement Import statements are generally written at the top of the file Import statements work the same for functions, classes, constants, variables, and any other elements defined in the module Basic Import Statement: You can use the import keyword followed by the name of the module:\npython\nimport module_name\nThen, if you need to call a method from that module, you would use dot notation, with the name of the module followed by the name of the method python\nmodule_name method_name()\nFor example, you would write the following in your code to import the math module and get the square root of 36:\n```python\nimport math\nmath sqrt(36)\n```\nImporting a Module with a Different Name: If you need to import the module with a different name (also known as an \"alias\"), you can use as followed by the alias at the end of the import statement This is often used for long module names or to avoid naming conflicts python\nimport module_name as module_alias\nFor example, to refer to the math module as m in your code, you can assign an alias like this:\npython\nimport math as m\nThen, you can access the elements of the module using the alias:\npython\nm sqrt(36)\nImporting Specific Elements: If you don't need everything from a module, you can import specific elements using from",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "605156d43e5fe491a4e62a42d056f386",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "This is often used for long module names or to avoid naming conflicts python import module_name as module_alias For example, to refer to the math module as m in your code, you can assign an alias like this: python import math as m Then, you can access the elements of the module using the alias: python m sqrt(36) Importing Specific Elements: If you don't need everything from a module, you can import specific elements using fromIn this case, the import statement starts with from, followed by the module name, then the import keyword, and finally the names of the elements you want to import python\nfrom module_name import name1, name2\nThen, you can use these names without the module prefix in your Python script For example:\n```python\nfrom math import radians, sin, cos\nangle_degrees = 40\nangle_radians = radians(angle_degrees)\nsine_value = sin(angle_radians)\ncos_value = cos(angle_radians)\nprint(sine_value) # 0 6427876096865393\nprint(cos_value)  # 0 766044443118978\n```\nThis is helpful, but it can result in naming conflicts if you already have functions or variables with the same name Keep it in mind when choosing which type of import statement you want to use If you need to assign aliases to these names, you can do so as well, using the as keyword followed by the alias python\nfrom module_name import name1 as alias1, name2 as alias2\nImport Statement with Asterisk (*): The asterisk tells Python that you want to import everything in that module, but you want to import it so that you don't need to use the name of the module as a prefix python\nfrom module_name import *\nFor example, if you this to import the math module, you'll be able to call any function defined in that module without specifying the name of the module as a prefix python\nfrom math import *\nprint(sqrt(36))  # 6 0\nHowever, this is generally discouraged because it can lead to namespace collisions and make it harder to know where names come from if __name__ == '__main__'\n__name__ Variable: __name__ is a special built-in variable in Python When a Python file is executed directly, Python sets the value of this variable to the string \"__main__\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "7eaeaca6400ac822a919bed7ee531b8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in that module without specifying the name of the module as a prefix python from math import * print(sqrt(36)) # 6 0 However, this is generally discouraged because it can lead to namespace collisions and make it harder to know where names come from if __name__ == '__main__' __name__ Variable: __name__ is a special built-in variable in Python When a Python file is executed directly, Python sets the value of this variable to the string \"__main__\"But if the Python file is imported as a module into another Python script, the value of the __name__ variable is set to the name of that module This is why you'll often find this conditional in Python scripts It contains the code that you only want to run only if the Python script is running as the main program python\nif __name__ == '__main__':\n# Code\n--assignment--\nReview the Dictionaries and Sets topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12545,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dictionaries-and-sets\\67f39babe1e2ec1fb6eea32a.md",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "3bbc4484a3fdd1b1f924ab41eae1a6e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-git\\6724e4cfea0c4f2425a9d064.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e4cfea0c4f2425a9d064\ntitle: Git Review\nchallengeType: 24\ndashedName: review-git\n--description--\nDescription placeholder\n--assignment--\nReview the Git topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 195,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-git\\6724e4cfea0c4f2425a9d064.md",
      "source_type": "git_repo"
    },
    "token_count": 54,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a300deaa180b07e5d5f3d1d87e89b605",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-graphs-and-trees\\67f39e06b8a11b2de9ccd361.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39e06b8a11b2de9ccd361\ntitle: Graphs and Trees Review\nchallengeType: 24\ndashedName: review-graph-and-trees\n--description--\nFirst topic\nDescribe\nSecond topic\nDescribe\n--assignment--\nReview the Graphs and Trees topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 261,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-graphs-and-trees\\67f39e06b8a11b2de9ccd361.md",
      "source_type": "git_repo"
    },
    "token_count": 69,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "484a6af982b0a76f0c315c75e456cef2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-form-validation-with-javascript\\6723ce555ff2dfc0cc04b69a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723ce555ff2dfc0cc04b69a\ntitle: Form Validation with JavaScript Review\nchallengeType: 24\ndashedName: review-form-validation-with-javascript\n--description--\nValidating Forms with JavaScript\nConstraint Validation API: Certain HTML elements, such as the textarea and input elements, expose a constraint validation API This API allows you to assert that the user's provided value for that element passes any HTML-level validation you have written, such as minimum length or pattern matching checkValidity() method: This method returns true if the element matches all HTML validation (based on its attributes), and false if it fails ```js\nconst input = document querySelector(\"input\");\ninput addEventListener(\"input\", (e) => {\nif ( e target checkValidity()) {\ne target setCustomValidity(\"You must use a com email \")\n}\n})\n```\nreportValidity() Method: This method tells the browser that the input is invalid ```js\nconst input = document querySelector(\"input\");\ninput addEventListener(\"input\", (e) => {\nif ( e target checkValidity()) {\ne target reportValidity();\n}\n})\n```\nvalidity Property: This property is used to get or set the validity state of form controls (like <input>, <select>, etc ) and provides information about whether the user input meets the constraints defined for that element (e g , required fields, pattern constraints, maximum length, etc ) ```js\nconst input = document querySelector(\"input\");\ninput addEventListener(\"input\", (e) => {\nconsole log(e target validity);\n})\n```\npatternMismatch Property: This will be true if the value doesn't match the specified regular expression pattern preventDefault() Method\nDefinition: Every event that triggers in the DOM has some sort of default behavior The click event on a checkbox toggles the state of that checkbox, by default Pressing the space bar on a focused button activates the button The preventDefault() method on these Event objects stops that behavior from happening js\nbutton addEventListener('click', (event) => {\n// Prevent the default button click behavior\nevent preventDefault();\nalert('Button click prevented ');\n});\nSubmitting Forms\nDefinition: There are three ways a form can be submitted The first is when the user clicks a button in the form which has the type attribute set to submit The second is when the user presses the Enter key on any editable input field in the form",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4201,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-form-validation-with-javascript\\6723ce555ff2dfc0cc04b69a.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3b8175b7eb99f6210a125285eb63bdd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-form-validation-with-javascript\\6723ce555ff2dfc0cc04b69a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "objects stops that behavior from happening js button addEventListener('click', (event) => { // Prevent the default button click behavior event preventDefault(); alert('Button click prevented '); }); Submitting Forms Definition: There are three ways a form can be submitted The first is when the user clicks a button in the form which has the type attribute set to submit The second is when the user presses the Enter key on any editable input field in the formThe third is through a JavaScript call to the requestSubmit() or submit() methods of the form element action Attribute: The action attribute should contain either a URL or a relative path for the current domain This value determines where the form attempts to send data - if you do not set an action attribute, the form will send data to the current page's URL ```html\nSubmit\n```\nmethod Attribute: This attribute accepts a standard HTTP method, such as GET or POST, and uses that method when making the request to the action URL When a method is not set, the form will default to a GET request The data in the form will be URL encoded as name=value pairs and appended to the action URL as query parameters ```html\nSubmit\n```\nenctype Attribute: The form element accepts an enctype attribute, which represents the encoding type to use for the data This attribute only accepts three values: application/x-www-form-urlencoded (which is the default, sending the data as a URL-encoded form body), text/plain (which sends the data in plaintext form, in name=value pairs separated by new lines), or multipart/form-data, which is specifically for handling forms with a file upload --assignment--\nReview the Form Validation with JavaScript topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4201,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-form-validation-with-javascript\\6723ce555ff2dfc0cc04b69a.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ada5df4463d0f25e84912aa416b2741d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723cc7a8e7aa3b9befd4bac\ntitle: DOM Manipulation and Click Events with JavaScript Review\nchallengeType: 24\ndashedName: review-dom-manipulation-and-click-events-with-javascript\n--description--\nWorking with the DOM and Web APIs\nAPI: An API (Application Programming Interface) is a set of rules and protocols that allow software applications to communicate with each other and exchange data efficiently Web API: Web APIs are specifically designed for web applications These types of APIs are often divided into two main categories: browser APIs and third-party APIs Browser APIs: These APIs expose data from the browser As a web developer, you can access and manipulate this data using JavaScript Third-Party APIs: These are not built into the browser by default You have to retrieve their code in some way Usually, they will have detailed documentation explaining how to use their services An example is the Google Maps API, which you can use to display interactive maps on your website DOM: The DOM stands for Document Object Model It's a programming interface that lets you interact with HTML documents With the DOM, you can add, modify, or delete elements on a webpage The root of the DOM tree is the html element It's the top-level container for all the content of an HTML document All other nodes are descendants of this root node Then, below the root node, we find other nodes in the hierarchy A parent node is an element that contains other elements A child node is an element that is contained within another element navigator Interface: This provides information about the browser environment, such as the user agent string, the platform, and the version of the browser A user agent string is a text string that identifies the browser and operating system being used window Interface: This represents the browser window that contains the DOM document It provides methods and properties for interacting with the browser window, such as resizing the window, opening new windows, and navigating to different URLs Working with the querySelector(), querySelectorAll() and getElementById() Methods\ngetElementById() Method: This method is used to get an object that represents the HTML element with the specified id Remember that ids must be unique in every HTML document, so this method will only return one Element object ```html\n```\njs\nconst container = document getElementById(\"container\");\nquerySelector() Method: This method is used to get the first element in the HTML document that matches the CSS selector passed as an argument",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "ca21f4ea911013a9c4c65fa9b2883b35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the querySelector(), querySelectorAll() and getElementById() Methods getElementById() Method: This method is used to get an object that represents the HTML element with the specified id Remember that ids must be unique in every HTML document, so this method will only return one Element object ```html ``` js const container = document getElementById(\"container\"); querySelector() Method: This method is used to get the first element in the HTML document that matches the CSS selector passed as an argument```html\n```\njs\nconst section = document querySelector(\" section\");\nquerySelectorAll() Method: You can use this method to get a list of all the DOM elements that match a specific CSS selector ```html\nSugar\nMilk\nEggs\n```\njs\nconst ingredients = document querySelectorAll('ul ingredients li');\nWorking with the innerText(), innerHTML(), createElement() and textContent() Methods\ninnerHTML Property: This is a property of the Element that is used to set or update parts of the HTML markup ```html\n```\njs\nconst container = document getElementById(\"container\");\ncontainer innerHTML = '<ul><li>Cheese</li><li>Tomato</li></ul>';\ncreateElement Method: This is used to create an HTML element js\nconst img = document createElement(\"img\");\ninnerText: This represents the visible text content of the HTML element and its descendants ```html\nHello, World I'm learning JavaScript\n```\njs\nconst container = document getElementById(\"container\");\nconsole log(container innerText);\ntextContent: This returns the plain text content of an element, including all the text within its descendants ```html\nHello, World I'm learning JavaScript\n```\njs\nconst container = document getElementById(\"container\");\nconsole log(container textContent);\nWorking with the appendChild() and removeChild() Methods\nappendChild() Method: This method is used to add a node to the end of the list of children of a specified parent node ```html\nCake\nPie\n```\n```js\nconst dessertsList = document getElementById(\"desserts\");\nconst listItem = document createElement(\"li\");\nlistItem textContent = \"Cookies\";\ndessertsList appendChild(listItem);\n```\nremoveChild() Method: This method is used to remove a node from the DOM ```html\nExample sub heading\nfirst paragraph\nsecond paragraph\n```\n```js\nconst sectionEl = document getElementById(\"example-section\");\nconst lastParagraph = document querySelector(\"#example-section p:last-of-type\");\nsectionEl",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "4bdf157ea25da9b8f64fd32fd701f53c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is used to add a node to the end of the list of children of a specified parent node ```html Cake Pie ``` ```js const dessertsList = document getElementById(\"desserts\"); const listItem = document createElement(\"li\"); listItem textContent = \"Cookies\"; dessertsList appendChild(listItem); ``` removeChild() Method: This method is used to remove a node from the DOM ```html Example sub heading first paragraph second paragraph ``` ```js const sectionEl = document getElementById(\"example-section\"); const lastParagraph = document querySelector(\"#example-section p:last-of-type\"); sectionElremoveChild(lastParagraph);\n```\nWork with the setAttribute() Method\nDefinition: This method is used to set the attribute for a given element If the attribute already exists, then the value is updated Otherwise, a new attribute is added with a value ```html\nI am a paragraph\n```\njs\nconst para = document getElementById(\"para\");\npara setAttribute(\"class\", \"my-class\");\nEvent Object\nDefinition: The Event object is a payload that triggers when a user interacts with your web page in some way These interactions can be anything from clicking on a button or focusing an input to shaking their mobile device All Event objects will have the type property This property reveals the type of event that triggered the payload, such as keydown or click These values will correspond to the same values you might pass to addEventListener(), where you can capture and utilize the Event object addEventListener() and removeEventListener() Methods\naddEventListener Method: This method is used to listen for events It takes two arguments: the event you want to listen for and a function that will be called when the event occurs Some common examples of events would be click events, input events, and change events ```js\nconst btn = document getElementById(\"btn\");\nbtn addEventListener(\"click\", () => alert(\"You clicked the button\"));\n```\nremoveEventListener() Method: This method is used to remove an event listener that was previously added to an element using the addEventListener() method This is useful when you want to stop listening for a particular event on an element ```js\nconst bodyEl = document querySelector(\"body\");\nconst para = document getElementById(\"para\");\nconst btn = document getElementById(\"btn\");\nlet isBgColorGrey = true;\nfunction toggleBgColor() {\nbodyEl style backgroundColor = isBgColorGrey \"blue\" : \"grey\";\nisBgColorGrey = isBgColorGrey;\n}\nbtn addEventListener(\"click\", toggleBgColor);\npara",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "2d7b5775258cd3eb6238988e9f38c190",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Method: This method is used to remove an event listener that was previously added to an element using the addEventListener() method This is useful when you want to stop listening for a particular event on an element ```js const bodyEl = document querySelector(\"body\"); const para = document getElementById(\"para\"); const btn = document getElementById(\"btn\"); let isBgColorGrey = true; function toggleBgColor() { bodyEl style backgroundColor = isBgColorGrey \"blue\" : \"grey\"; isBgColorGrey = isBgColorGrey; } btn addEventListener(\"click\", toggleBgColor); paraaddEventListener(\"mouseover\", () => {\nbtn removeEventListener(\"click\", toggleBgColor);\n});\n```\nInline Event Handlers: Inline event handlers are special attributes on an HTML element that are used to execute JavaScript code when an event occurs In modern JavaScript, inline event handlers are not considered best practice It is preferred to use the addEventListener method instead html\n<button onclick=\"alert('Hello World ')\">Show alert</button>\nThe Change Event\nDefinition: The change event is a special event which is fired when the user modifies the value of certain input elements Examples would include when a checkbox or a radio button is ticked Or when the user makes a selection from something like a date picker or dropdown menu ```html\nChoose a programming language:\n---Select One---\nJavaScript\nPython\nC++\n```\n```js\nconst selectEl = document querySelector(\" language\");\nconst result = document querySelector(\" result\");\nselectEl addEventListener(\"change\", (e) => {\nresult textContent = You enjoy programming in ${e target value} ;\n});\n```\nEvent Bubbling\nDefinition: Event bubbling, or propagation, refers to how an event \"bubbles up\" to parent objects when triggered stopPropagation() Method: This method prevents further propagation for an event Event Delegation\nDefinition: Event delegation is the process of listening to events that have bubbled up to a parent, rather than handling them directly on the element that triggered them DOMContentLoaded\nDefinition: The DOMContentLoaded event is fired when everything in the HTML document has been loaded and parsed If you have external stylesheets, or images, the DOMContentLoaded event will not wait for those to be loaded It will only wait for the HTML to be loaded Working with style and classList\nElement style Property: This property is a read-only property that represents the inline style of an element You can use this property to get or set the style of an element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "64f9e46d932a9c59b5a4ab60d80ed08b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "fired when everything in the HTML document has been loaded and parsed If you have external stylesheets, or images, the DOMContentLoaded event will not wait for those to be loaded It will only wait for the HTML to be loaded Working with style and classList Element style Property: This property is a read-only property that represents the inline style of an element You can use this property to get or set the style of an elementjs\nconst paraEl = document getElementById(\"para\");\nparaEl style color = \"red\";\nElement classList Property: This property is a read-only property that can be used to add, remove, or toggle classes on an element ```js\n// Example adding a class\nconst paraEl = document getElementById(\"para\");\nparaEl classList add(\"highlight\");\n// Example removing a class\nparaEl classList remove(\"blue-background\");\n// Example toggling a class\nconst menu = document getElementById(\"menu\");\nconst toggleBtn = document getElementById(\"toggle-btn\");\ntoggleBtn addEventListener(\"click\", () => menu classList toggle(\"show\"));\n```\nWorking with the setTimeout() and setInterval() Methods\nsetTimeout() Method: This method lets you delay an action for a specified time js\nsetTimeout(() => {\nconsole log('This runs after 3 seconds');\n}, 3000);\nsetInterval() Method: This method keeps runs a piece of code repeatedly at a set interval Since setInterval() keeps executing the provided function at the specified interval, you might want to stop it For this, you have to use the clearInterval() method ```js\nsetInterval(() => {\nconsole log('This runs every 2 seconds');\n}, 2000);\n// Example using clearInterval\nconst intervalID = setInterval(() => {\nconsole log('This will stop after 5 seconds');\n}, 1000);\nsetTimeout(() => {\nclearInterval(intervalID);\n}, 5000);\n```\nThe requestAnimationFrame() Method\nDefinition: This method allows you to schedule the next step of your animation before the next screen repaint, resulting in a fluid and visually appealing experience The next screen repaint refers to the moment when the browser refreshes the visual display of the web page This happens multiple times per second, typically around 60 times (or 60 frames per second) on most displays js\nfunction animate() {\n// Update the animation // for example, move an element, change a style, and more",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "b34c9caefbdfae3f9fe09d0ed7b78224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "schedule the next step of your animation before the next screen repaint, resulting in a fluid and visually appealing experience The next screen repaint refers to the moment when the browser refreshes the visual display of the web page This happens multiple times per second, typically around 60 times (or 60 frames per second) on most displays js function animate() { // Update the animation // for example, move an element, change a style, and moreupdate();\n// Request the next frame\nrequestAnimationFrame(animate);\n}\nWeb Animations API\nDefinition: The Web Animations API lets you create and control animations directly inside JavaScript ```js\nconst square = document querySelector('#square');\nconst animation = square animate(\n[{ transform: 'translateX(0px)' }, { transform: 'translateX(100px)' }],\n{\nduration: 2000, // makes animation lasts 2 seconds\niterations: Infinity, // loops indefinitely\ndirection: 'alternate', // moves back and forth\neasing: 'ease-in-out', // smooth easing\n}\n);\n```\nThe Canvas API\nDefinition: The Canvas API is a powerful tool that lets you manipulate graphics right inside your JavaScript file To work with the Canvas API, you first need to provide a canvas element in HTML This element acts as a drawing surface you can manipulate with the instance methods and properties of the interfaces in the Canvas API This API has interfaces like HTMLCanvasElement, CanvasRenderingContext2D, CanvasGradient, CanvasPattern, and TextMetrics which contain methods and properties you can use to create graphics in your JavaScript file ```html\n```\n```js\nconst canvas = document getElementById('my-canvas');\n// Access the drawing context of the canvas // \"2d\" allows you to draw in two dimensions\nconst ctx = canvas getContext('2d');\n// Set the background color\nctx fillStyle = 'crimson';\n// Draw a rectangle\nctx fillRect(1, 1, 150, 100);\n```\nOpening and Closing Dialogs and Modals with JavaScript\nModal and Dialog Definitions: Dialogs let you display important information or actions to users With the HTML built-in dialog element, you can easily create these dialogs (both modal and non-modal dialogs) in your web apps A modal dialog is a type of dialog that forces the user to interact with it before they can access the rest of the application or webpage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "9591c455e0e090bca5287f19ad925cd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "ctx fillRect(1, 1, 150, 100); ``` Opening and Closing Dialogs and Modals with JavaScript Modal and Dialog Definitions: Dialogs let you display important information or actions to users With the HTML built-in dialog element, you can easily create these dialogs (both modal and non-modal dialogs) in your web apps A modal dialog is a type of dialog that forces the user to interact with it before they can access the rest of the application or webpageIn contrast, a non-modal dialog allows the user to continue interacting with other parts of the page or application even when the dialog is open It doesn't prevent access to the rest of the content showModal() Method: This method is used to open a modal ```html\nThis is a modal dialog Open Modal Dialog\n```\n```js\nconst dialog = document getElementById('my-modal');\nconst openButton = document getElementById('open-modal');\nopenButton addEventListener('click', () => {\ndialog showModal();\n});\n```\nclose() Method: This method is used to close the modal ```html\nThis is a modal dialog Close Modal\nOpen Modal Dialog\n```\n```js\nconst dialog = document getElementById('my-modal');\nconst openButton = document getElementById('open-modal');\nconst closeButton = document getElementById('close-modal');\nopenButton addEventListener('click', () => {\ndialog show();\n});\ncloseButton addEventListener('click', () => {\ndialog close();\n});\n```\n--assignment--\nReview the DOM Manipulation and Click Events with JavaScript topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14594,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-dom-manipulation-and-click-events-with-javascript\\6723cc7a8e7aa3b9befd4bac.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "01870205e4b5aa608a3c1b55dccd3209",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-accessibility\\671a87a39b88245a579c2271.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a87a39b88245a579c2271\ntitle: HTML Accessibility Review\nchallengeType: 24\ndashedName: review-html-accessibility\n--description--\nIntroduction to Accessibility\nWeb Content Accessibility Guidelines: The Web Content Accessibility Guidelines (WCAG) are a set of guidelines for making web content more accessible to people with disabilities The four principles of WCAG are POUR which stands for Perceivable, Operable, Understandable, and Robust Assistive Technology for Accessibility\nScreen readers: Software programs that read the content of a computer screen out loud They are used by people who are blind or visually impaired to access the web Large text or braille keyboards: Used by people with visual impairments to access the web Screen magnifiers: Software programs that enlarge the content of a computer screen They are used by people with low vision to access the web Alternative pointing devices: Used by people with mobility impairments to access the web This includes devices such as joysticks, trackballs, and touchpads Voice recognition: Used by people with mobility impairments to access the web It allows users to control a computer using their voice Accessibility Auditing Tools\nCommon Accessibility Tools: Google Lighthouse, Wave, IBM Equal Accessibility Checker, and axe DevTools are some of the common accessibility tools used to audit the accessibility of a website Accessibility Best Practices\nProper heading level structure: You should use proper heading levels to create a logical structure for your content This helps people using assistive technologies understand the content of your website Accessibility and Tables: When using tables, you should use the th element to define header cells and the td element to define data cells This helps people using assistive technologies understand the structure of the table With the caption element, you can write the caption (or title) of a table, so users, especially those who use assistive technologies, can quickly understand the table's purpose and content You should place the caption element immediately after the opening tag of the table element This way, screen readers and other assistive technologies can provide more context by announcing the caption before reading the content Importance for inputs to have an associated label: You should use the label element to associate labels with form inputs This helps people using assistive technologies understand the purpose of the input Importance of good alt text: You should use the alt attribute to provide a text alternative for images This helps people using assistive technologies understand the content of the image",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7444,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-accessibility\\671a87a39b88245a579c2271.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "84dc6dde2d873b04e85f5300a5f6e1d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-accessibility\\671a87a39b88245a579c2271.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assistive technologies can provide more context by announcing the caption before reading the content Importance for inputs to have an associated label: You should use the label element to associate labels with form inputs This helps people using assistive technologies understand the purpose of the input Importance of good alt text: You should use the alt attribute to provide a text alternative for images This helps people using assistive technologies understand the content of the imageImportance of good link text: You should use descriptive link text to help users understand the purpose of the link This helps people using assistive technologies understand the purpose of the link Best practices for making audio and video content accessible: You should provide captions and transcripts for audio and video content to make it accessible to people with hearing impairments You should also provide audio descriptions for video content to make it accessible to people with visual impairments tabindex attribute: Used to make elements focusable and define the relative order in which they should be navigated using the keyboard It is important to never use the tabindex attribute with a value greater than 0 Instead, you should either use a value of 0 or -1 ```html\nSorry, there was an error with your submission ```\naccesskey attribute: Used to define a keyboard shortcut for an element This can help users with mobility impairments navigate the website more easily html\n<button accesskey=\"s\">Save</button>\n<button accesskey=\"c\">Cancel</button>\n<a href=\"index html\" accesskey=\"h\">Home</a>\nWAI-ARIA, Roles, and Attributes\nWAI-ARIA: It stands for Web Accessibility Initiative - Accessible Rich Internet Applications It is a set of attributes that can be added to HTML elements to improve accessibility It provides additional information to assistive technologies about the purpose and structure of the content ARIA roles: A set of predefined roles that can be added to HTML elements to define their purpose This helps people using assistive technologies understand the content of the website Examples include role=\"tab\", role=\"menu\", and role=\"alert\" There are six main categories of ARIA roles:\nDocument structure roles: These roles define the overall structure of the web page With these roles, assistive technologies can understand the relationships between different sections and help users navigate the content Widget roles: These roles define the purpose and functionality of interactive elements, like scrollbars Landmark roles: These roles classify and label the primary sections of a web page Screen readers use them to provide convenient navigation to important sections of a page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7444,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-accessibility\\671a87a39b88245a579c2271.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "55b9b9190045adedf097daedc0ead028",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-accessibility\\671a87a39b88245a579c2271.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of ARIA roles: Document structure roles: These roles define the overall structure of the web page With these roles, assistive technologies can understand the relationships between different sections and help users navigate the content Widget roles: These roles define the purpose and functionality of interactive elements, like scrollbars Landmark roles: These roles classify and label the primary sections of a web page Screen readers use them to provide convenient navigation to important sections of a pageLive region roles: These roles define elements with content that will change dynamically This way, screen readers and other assistive technologies can announce changes to users with visual disabilities Window roles: These roles define sub-windows, like pop up modal dialogues These roles include alertdialog and dialog Abstract roles: These roles help organize the document They're only meant to be used internally by the browser, not by developers, so you should know that they exist but you shouldn't use them on your websites or web applications aria-label and aria-labelledby attributes: These attributes are used to give an element a programmatic (or accessible) name, which helps people using assistive technology (such as screen readers) understand the purpose of the element They are often used when the visual label for an element is an image or symbol rather than text aria-label allows you to define the name directly in the attribute while aria-labelledby allows you to reference existing text on the page html\n<button aria-label=\"Search\">\n<i class=\"fas fa-search\"></i>\n</button>\nhtml\n<input type=\"text\" aria-labelledby=\"search-btn\">\n<button type=\"button\" id=\"search-btn\">Search</button>\naria-hidden attribute: Used to hide an element from assistive technologies such as screen readers For example, this can be used to hide decorative images that do not provide any meaningful content html\n<button>\n<i class=\"fa-solid fa-gear\" aria-hidden=\"true\"></i>\n<span class=\"label\">Settings</span>\n</button>\naria-describedby attribute: Used to provide additional information about an element by associating it with another element that contains the information This gives people using screen readers immediate access to the additional information when they navigate to the element Common usage would include associating formatting instructions to a text input or an error message to an input after an invalid form submission ```html\nPassword:\nYour password must be at least 8 characters long ```\n--assignment--\nReview the HTML Accessibility topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7444,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-accessibility\\671a87a39b88245a579c2271.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "37968a2914b7f6cbb13add6d06ea4982",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a883163d5ab5d47145880\ntitle: HTML Review\nchallengeType: 24\ndashedName: review-html\n--description--\nReview the concepts below to prepare for the upcoming prep exam HTML Basics\nRole of HTML: HTML (Hypertext Markup Language) is the foundation of web structure, defining the elements of a webpage HTML Elements: Used to represent content on the page Most of them are made by an opening and a closing tag (e g , <h1></h1>, <p></p>) HTML Structure: HTML consists of a head and body, where metadata, styles, and content are structured Common HTML Elements: Headings (<h1> - <h6>), paragraphs (<p>), and div containers (<div>) div elements: The div element is a generic HTML element that does not hold any semantic meaning It is used as a generic container to hold other HTML elements Void Elements: Do not have a closing tag (e g , <img>) Attributes: Adding metadata and behavior to elements Identifiers and Grouping\nIDs: Unique element identifiers Classes: Grouping elements for styling and behavior Special Characters and Linking\nHTML entities: Using special characters like &amp; and &lt; link element: Linking to external stylesheets script element: Embedding external JavaScript files Boilerplate and Encoding\nHTML boilerplate: Basic structure of a webpage, which includes the DOCTYPE, html, head, and body elements It should be used as the starting point for an HTML document UTF-8 character encoding: Ensuring universal character display SEO and Social Sharing\nMeta tags (description): Providing a short description for the web page and impacting SEO Open Graph tags: Enhancing social media sharing Media Elements and Optimization\nReplaced elements: Embedded content (e g , images, iframes) Optimizing media: Techniques to improve media performance Image formats and licenses: Understanding usage rights and types SVGs: Scalable vector graphics for sharp visuals Multimedia Integration\nHTML audio and video elements: Embedding multimedia Embedding with <iframe>: Integrating external video content Paths and Link Behavior\nTarget attribute types: Controlling link behavior Absolute vs relative paths: Navigating directories Path syntax: Understanding /, /, / for file navigation Link states: Managing different link interactions (hover, active)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "1a0c3222a252d8b483a1da22a1d50070",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "g , images, iframes) Optimizing media: Techniques to improve media performance Image formats and licenses: Understanding usage rights and types SVGs: Scalable vector graphics for sharp visuals Multimedia Integration HTML audio and video elements: Embedding multimedia Embedding with <iframe>: Integrating external video content Paths and Link Behavior Target attribute types: Controlling link behavior Absolute vs relative paths: Navigating directories Path syntax: Understanding /, /, / for file navigation Link states: Managing different link interactions (hover, active)Importance of Semantic HTML\nStructural hierarchy for heading elements: It is important to use the correct heading element to maintain the structural hierarchy of the content The h1 element is the highest level of heading and the h6 element is the lowest level of heading Presentational HTML elements: Elements that define the appearance of content Ex the deprecated center, big, and font elements Semantic HTML elements: These elements provide meaning to the structure of the content Examples include:\n<header>: Represents introductory content <nav>: Contains navigation links <article>: Represents self-contained content <aside>: Used for sidebars or related content <section>: Groups related content within a document <footer>: Defines the footer for a section or document Semantic HTML Elements\nEmphasis (em) element: Marks text that has stress emphasis Idiomatic Text (i) element: Used for highlighting alternative voice or mood, idiomatic terms from another language, technical terms, and thoughts Strong Importance (strong) element: Marks text that has strong importance Bring Attention To (b) element: Used to bring attention to text that is not important for the meaning of the content Description List (dl) element: Used to represent a list of term-description groupings Description Term (dt) element: Used to represent the term being defined Description Details (dd) element: Used to represent the description of the term Block Quotation (blockquote) element: Used to represent a section that is quoted from another source Inline Quotation (q) element: Used to represent a short inline quotation Abbreviation (abbr) element: Used to represent an abbreviation or acronym Contact Address (address) element: Used to represent the contact information (Date) Time (time) element: Used to represent a date and/or time Superscript (sup) element: Used to represent superscript text Subscript (sub) element: Used to represent subscript text Inline Code (code) element: Used to represent a fragment of computer code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "b701fae09577f8e2f3b20562775cbebb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that is quoted from another source Inline Quotation (q) element: Used to represent a short inline quotation Abbreviation (abbr) element: Used to represent an abbreviation or acronym Contact Address (address) element: Used to represent the contact information (Date) Time (time) element: Used to represent a date and/or time Superscript (sup) element: Used to represent superscript text Subscript (sub) element: Used to represent subscript text Inline Code (code) element: Used to represent a fragment of computer codeUnarticulated Annotation (u) element: Used to represent a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation Ruby Annotation (ruby) element: Used to represent the text of a ruby annotation Strikethrough (s) element: Used to represent content that is no longer accurate or relevant HTML Form Elements and Attributes\nForms\nform element: Used to create an HTML form for user input action attribute: Defines where to send form data method attribute: Determines how form data is sent (GET or POST) Common Input Types:\ntext, email, password, radio, checkbox, number, date action attribute: used to specify the URL where the form data should be sent method attribute: used to specify the HTTP method to use when sending the form data The most common methods are GET and POST ```html\n```\ninput element: used to create an input field for user input type attribute: used to specify the type of input field Ex text, email, number, radio, checkbox, etc placeholder attribute: used to show a hint to the user to show them what to enter in the input field value attribute: used to specify the value of the input If the input has a button type, the value attribute can be used to set the button text name attribute: used to assign a name to an input field, which serves as the key when form data is submitted For radio buttons, giving them the same name groups them together, so only one option in the group can be selected at a time size attribute: used to define the number of characters that should be visible as the user types into the input min attribute: can be used with input types such as number to specify the minimum value allowed in the input field max attribute: can be used with input types such as number to specify the maximum value allowed in the input field minlength attribute: used to specify the minimum number of characters required in an input field",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "141f6cd9f406de7d8ca7cd3f569c3c54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "attribute: used to define the number of characters that should be visible as the user types into the input min attribute: can be used with input types such as number to specify the minimum value allowed in the input field max attribute: can be used with input types such as number to specify the maximum value allowed in the input field minlength attribute: used to specify the minimum number of characters required in an input fieldmaxlength attribute: used to specify the maximum number of characters allowed in an input field required attribute: used to specify that an input field must be filled out before submitting the form disabled attribute: used to specify that an input field should be disabled readonly attribute: used to specify that an input field is read-only ```html\n```\nlabel element: used to create a label for an input field for attribute: used to specify which input field the label is for Implicit form association: inputs can be associated with labels by wrapping the input field inside the label element ```html\nFull Name:\n```\nExplicit form association: inputs can be associated with labels by using the for attribute on the label element ```html\nEmail Address:\n```\nbutton element: used to create a clickable button A button can also have a type attribute, which is used to control the behavior of the button when it is activated Ex submit, reset, button html\n<button type=\"button\">Show Form</button>\n<button type=\"submit\">Submit Form</button>\n<button type=\"reset\">Reset Form</button>\nfieldset element: used to group related inputs together legend element: used to add a caption to describe the group of inputs ```html\nWas this your first time at our hotel Yes\nNo\nWhy did you choose to stay at our hotel (Check all that apply)\nLocation\nPrice\n```\nFocused state: this is the state of an input field when it is selected by the user Working with HTML Table Elements and Attributes\nTable element: used to create an HTML table Table Head (thead) element: used to group the header content in an HTML table Table Row (tr) element: used to create a row in an HTML table Table Header (th) element: used to create a header cell in an HTML table Table body (tbody) element: used to group the body content in an HTML table Table Data Cell (td) element: used to create a data cell in an HTML table Table Foot (tfoot) element: used to group the footer content in an HTML table",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "dbfcff58e735a1b326b5f8d7b58f13e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "header content in an HTML table Table Row (tr) element: used to create a row in an HTML table Table Header (th) element: used to create a header cell in an HTML table Table body (tbody) element: used to group the body content in an HTML table Table Data Cell (td) element: used to create a data cell in an HTML table Table Foot (tfoot) element: used to group the footer content in an HTML tablecaption element: used to add a title of an HTML table colspan attribute: used to specify the number of columns a table cell should span ```html\nExam Grades\nLast Name\nFirst Name\nGrade\nDavis\nAlex\n54\nDoe\nSamantha\n92\nRodriguez\nMarcus\n88\nAverage Grade\n78\n```\nHTML Tools\nHTML validator: A tool that checks the syntax of HTML code to ensure it is valid DOM inspector: A tool that allows you to inspect and modify the HTML structure of a web page Devtools: A set of web developer tools built directly into the browser that helps you debug, profile, and analyze web pages Introduction to Accessibility\nWeb Content Accessibility Guidelines: The Web Content Accessibility Guidelines (WCAG) are a set of guidelines for making web content more accessible to people with disabilities The four principles of WCAG are POUR which stands for Perceivable, Operable, Understandable, and Robust Assistive Technology for Accessibility\nScreen readers: Software programs that read the content of a computer screen out loud They are used by people who are blind or visually impaired to access the web Large text or braille keyboards: Used by people with visual impairments to access the web Screen magnifiers: Software programs that enlarge the content of a computer screen They are used by people with low vision to access the web Alternative pointing devices: Used by people with mobility impairments to access the web This includes devices such as joysticks, trackballs, and touchpads Voice recognition: Used by people with mobility impairments to access the web It allows users to control a computer using their voice Accessibility Auditing Tools\nCommon Accessibility Tools: Google Lighthouse, Wave, IBM Equal Accessibility Checker, and axe DevTools are some of the common accessibility tools used to audit the accessibility of a website Accessibility Best Practices\nProper heading level structure: You should use proper heading levels to create a logical structure for your content This helps assistive technologies understand the content of your website",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "48a579d8087ba84a098ba7be32369753",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to access the web It allows users to control a computer using their voice Accessibility Auditing Tools Common Accessibility Tools: Google Lighthouse, Wave, IBM Equal Accessibility Checker, and axe DevTools are some of the common accessibility tools used to audit the accessibility of a website Accessibility Best Practices Proper heading level structure: You should use proper heading levels to create a logical structure for your content This helps assistive technologies understand the content of your websiteAccessibility and Tables: When using tables, you should use the th element to define header cells and the td element to define data cells This helps assistive technologies understand the structure of the table Importance for inputs to have an associated label: You should use the label element to associate labels with form inputs This helps assistive technologies understand the purpose of the input Importance of good alt text: You should use the alt attribute to provide a text alternative for images This helps assistive technologies understand the content of the image Importance of good link text: You should use descriptive link text to help users understand the purpose of the link This helps assistive technologies understand the purpose of the link Best practices for making audio and video content accessible: You should provide captions and transcripts for audio and video content to make it accessible to people with hearing impairments You should also provide audio descriptions for video content to make it accessible to people with visual impairments tabindex attribute: Used to make elements focusable and define the relative order in which they should be navigated using the keyboard It is important to never use the tabindex attribute with a value greater than 0 Instead, you should either use a value of 0 or -1 accesskey attribute: Used to define a keyboard shortcut for an element This can help users with mobility impairments navigate the website more easily WAI-ARIA, Roles, and Attributes\nWAI-ARIA: It stands for Web Accessibility Initiative - Accessible Rich Internet Applications It is a set of attributes that can be added to HTML elements to improve accessibility It provides additional information to assistive technologies about the purpose and structure of the content ARIA roles: A set of predefined roles that can be added to HTML elements to define their purpose This helps assistive technologies understand the content of the website Examples include role=\"tab\", role=\"menu\", and role=\"alert\" aria-label and aria-labelledby attributes: These attributes are used to give an element a programmatic (or accessible) name, which helps assistive technology (such as screen readers) understand the purpose of the element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "fcab4baf559a47ccd7a7181c53cff8b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to assistive technologies about the purpose and structure of the content ARIA roles: A set of predefined roles that can be added to HTML elements to define their purpose This helps assistive technologies understand the content of the website Examples include role=\"tab\", role=\"menu\", and role=\"alert\" aria-label and aria-labelledby attributes: These attributes are used to give an element a programmatic (or accessible) name, which helps assistive technology (such as screen readers) understand the purpose of the elementThey are often used when the visual label for an element is an image or symbol rather than text aria-label allows you to define the name directly in the attribute while aria-labelledby allows you to reference existing text on the page aria-hidden attribute: Used to hide an element from assistive technologies such as screen readers For example, this can be used to hide decorative images that do not provide any meaningful content aria-describedby attribute: Used to provide additional information about an element by associating it with another element that contains the information This helps assistive technologies understand the purpose of the element --assignment--\nReview the HTML topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15911,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html\\671a883163d5ab5d47145880.md",
      "source_type": "git_repo"
    },
    "token_count": 220,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "23539170cd96cced4443b4efb5033e76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-tables-and-forms\\671a872c17382a582e455c4c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a872c17382a582e455c4c\ntitle: HTML Tables and Forms Review\nchallengeType: 24\ndashedName: review-html-tables-and-forms\n--description--\nHTML Form Elements and Attributes\nform element: used to create an HTML form for user input action attribute: used to specify the URL where the form data should be sent method attribute: used to specify the HTTP method to use when sending the form data The most common methods are GET and POST ```html\n```\ninput element: used to create an input field for user input type attribute: used to specify the type of input field Ex text, email, number, radio, checkbox, etc placeholder attribute: used to show a hint to the user to show them what to enter in the input field value attribute: used to specify the value of the input If the input has a button type, the value attribute can be used to set the button text name attribute: used to assign a name to an input field, which serves as the key when form data is submitted For radio buttons, giving them the same name groups them together, so only one option in the group can be selected at a time size attribute: used to define the number of characters that should be visible as the user types into the input min attribute: can be used with input types such as number to specify the minimum value allowed in the input field max attribute: can be used with input types such as number to specify the maximum value allowed in the input field minlength attribute: used to specify the minimum number of characters required in an input field maxlength attribute: used to specify the maximum number of characters allowed in an input field required attribute: used to specify that an input field must be filled out before submitting the form disabled attribute: used to specify that an input field should be disabled readonly attribute: used to specify that an input field is read-only ```html\n```\nlabel element: used to create a label for an input field for attribute: used to specify which input field the label is for Implicit form association: inputs can be associated with labels by wrapping the input field inside the label element ```html\nFull Name:\n```\nExplicit form association: inputs can be associated with labels by using the for attribute on the label element ```html\nEmail Address:\n```\nbutton element: used to create a clickable button",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-tables-and-forms\\671a872c17382a582e455c4c.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "acbf8649bdf3654fc0a0d3d63d040e1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-tables-and-forms\\671a872c17382a582e455c4c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "``` label element: used to create a label for an input field for attribute: used to specify which input field the label is for Implicit form association: inputs can be associated with labels by wrapping the input field inside the label element ```html Full Name: ``` Explicit form association: inputs can be associated with labels by using the for attribute on the label element ```html Email Address: ``` button element: used to create a clickable buttonA button can also have a type attribute, which is used to control the behavior of the button when it is activated Ex submit, reset, button html\n<button type=\"button\">Show Form</button>\n<button type=\"submit\">Submit Form</button>\n<button type=\"reset\">Reset Form</button>\nfieldset element: used to group related inputs together legend element: used to add a caption to describe the group of inputs ```html\nWas this your first time at our hotel Yes\nNo\nWhy did you choose to stay at our hotel (Check all that apply)\nLocation\nPrice\n```\nFocused state: this is the state of an input field when it is selected by the user Working with HTML Table Elements and Attributes\nTable element: used to create an HTML table Table Head (thead) element: used to group the header content in an HTML table Table Row (tr) element: used to create a row in an HTML table Table Header (th) element: used to create a header cell in an HTML table Table body (tbody) element: used to group the body content in an HTML table Table Data Cell (td) element: used to create a data cell in an HTML table Table Foot (tfoot) element: used to group the footer content in an HTML table caption element: used to add a title of an HTML table colspan attribute: used to specify the number of columns a table cell should span ```html\nExam Grades\nLast Name\nFirst Name\nGrade\nDavis\nAlex\n54\nDoe\nSamantha\n92\nRodriguez\nMarcus\n88\nAverage Grade\n78\n```\nWorking with HTML Tools\nHTML validator: a tool that checks the syntax of HTML code to ensure it is valid DOM inspector: a tool that allows you to inspect and modify the HTML structure of a web page Devtools: a set of web developer tools built directly into the browser that helps you debug, profile, and analyze web pages --assignment--\nReview the HTML Tables and Forms topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6104,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-html-tables-and-forms\\671a872c17382a582e455c4c.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "923873d49e55eb3408f3d5281f2b257d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723c66f623701a3cdf72130\ntitle: JavaScript Arrays Review\nchallengeType: 24\ndashedName: review-javascript-arrays\n--description--\nJavaScript Array Basics\nDefinition: A JavaScript array is an ordered collection of values, each identified by a numeric index The values in a JavaScript array can be of different data types, including numbers, strings, booleans, objects, and even other arrays Arrays are contiguous in memory, which means that all elements are stored in a single, continuous block of memory locations, allowing for efficient indexing and fast access to elements by their index js\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\nAccessing Elements From Arrays: To access elements from an array, you will need to reference the array followed by its index number inside square brackets JavaScript arrays are zero based indexed which means the first element is at index 0, the second element is at index 1, etc If you try to access an index that doesn't exist for the array, then JavaScript will return undefined ```js\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers[0] // \"Jessica\"\ndevelopers[1] // \"Naomi\"\ndevelopers[10] // undefined\n```\nlength Property: This property is used to return the number of items in an array js\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers length // 3\nUpdating Elements in an Array: To update an element in an array, you use the assignment operator (=) to assign a new value to the element at a specific index ```js\nconst fruits = ['apple', 'banana', 'cherry'];\nfruits[1] = 'blueberry';\nconsole log(fruits); // ['apple', 'blueberry', 'cherry']\n```\nTwo Dimensional Arrays\nDefinition: A two-dimensional array is essentially an array of arrays It's used to represent data that has a natural grid-like structure, such as a chessboard, a spreadsheet, or pixels in an image To access an element in a two-dimensional array, you need two indices: one for the row and one for the column",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7999,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "195365b7bdd149970134386c319105d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a specific index ```js const fruits = ['apple', 'banana', 'cherry']; fruits[1] = 'blueberry'; console log(fruits); // ['apple', 'blueberry', 'cherry'] ``` Two Dimensional Arrays Definition: A two-dimensional array is essentially an array of arrays It's used to represent data that has a natural grid-like structure, such as a chessboard, a spreadsheet, or pixels in an image To access an element in a two-dimensional array, you need two indices: one for the row and one for the column```js\nconst chessboard = [\n['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],\n['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']\n];\nconsole log(chessboard[0][3]); // \"Q\"\n```\nArray Destructuring\nDefinition: Array destructuring is a feature in JavaScript that allows you to extract values from arrays and assign them to variables in a more concise and readable way It provides a convenient syntax for unpacking array elements into distinct variables ```js\nconst fruits = [\"apple\", \"banana\", \"orange\"];\nconst [first, second, third] = fruits;\nconsole log(first); // \"apple\"\nconsole log(second); // \"banana\"\nconsole log(third); // \"orange\"\n```\nRest Syntax: This allows you to capture the remaining elements of an array that haven't been destructured into a new array ```js\nconst fruits = [\"apple\", \"banana\", \"orange\", \"mango\", \"kiwi\"];\nconst [first, second, rest] = fruits;\nconsole log(first); // \"apple\"\nconsole log(second); // \"banana\"\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7999,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "306a2d7740b3def5b9d6debe9e994273",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "array elements into distinct variables ```js const fruits = [\"apple\", \"banana\", \"orange\"]; const [first, second, third] = fruits; console log(first); // \"apple\" console log(second); // \"banana\" console log(third); // \"orange\" ``` Rest Syntax: This allows you to capture the remaining elements of an array that haven't been destructured into a new array ```js const fruits = [\"apple\", \"banana\", \"orange\", \"mango\", \"kiwi\"]; const [first, second, rest] = fruits; console log(first); // \"apple\" console log(second); // \"banana\" consolelog(rest); // [\"orange\", \"mango\", \"kiwi\"]\n```\nCommon Array Methods\npush() Method: This method is used to add elements to the end of the array and will return the new length ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts push(\"ice cream\");\nconsole log(desserts); // [\"cake\", \"cookies\", \"pie\", \"ice cream\"];\n```\npop() Method: This method is used to remove the last element from an array and will return that removed element If the array is empty, then the return value will be undefined ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts pop();\nconsole log(desserts); // [\"cake\", \"cookies\"];\n```\nshift() Method: This method is used to remove the first element from an array and return that removed element If the array is empty, then the return value will be undefined ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts shift();\nconsole log(desserts); // [\"cookies\", \"pie\"];\n```\nunshift() Method: This method is used to add elements to the beginning of the array and will return the new length ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts unshift(\"ice cream\");\nconsole log(desserts); // [\"ice cream\", \"cake\", \"cookies\", \"pie\"];\n```\nindexOf() Method: This method is useful for finding the first index of a specific element within an array If the element cannot be found, then it will return -1 ```js\nconst fruits = [\"apple\", \"banana\", \"orange\", \"banana\"];\nconst index = fruits indexOf(\"banana\");\nconsole log(index); // 1\nconsole log(fruits",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7999,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c3f979c31f15de798df5b1dfa9a0a09c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the array and will return the new length ```js const desserts = [\"cake\", \"cookies\", \"pie\"]; desserts unshift(\"ice cream\"); console log(desserts); // [\"ice cream\", \"cake\", \"cookies\", \"pie\"]; ``` indexOf() Method: This method is useful for finding the first index of a specific element within an array If the element cannot be found, then it will return -1 ```js const fruits = [\"apple\", \"banana\", \"orange\", \"banana\"]; const index = fruits indexOf(\"banana\"); console log(index); // 1 console log(fruitsindexOf(\"not found\")); // -1\n```\nsplice() Method: This method is used to add or remove elements from any position in an array The return value for the splice() method will be an array of the items removed from the array If nothing is removed, then an empty array will be returned This method will mutate the original array, modifying it in place rather than creating a new array The first argument specifies the index at which to begin modifying the array The second argument is the number of elements you wish to remove The following arguments are the elements you wish to add ```js\nconst colors = [\"red\", \"green\", \"blue\"];\ncolors splice(1, 0, \"yellow\", \"purple\");\nconsole log(colors); // [\"red\", \"yellow\", \"purple\", \"green\", \"blue\"]\n```\nincludes() Method: This method is used to check if an array contains a specific value This method returns true if the array contains the specified element, and false otherwise ```js\nconst programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"];\nconsole log(programmingLanguages includes(\"Python\")); // true\nconsole log(programmingLanguages includes(\"Perl\")); // false\n```\nconcat() Method: This method creates a new array by merging two or more arrays ```js\nconst programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"];\nconst newList = programmingLanguages concat(\"Perl\");\nconsole log(newList); // [\"JavaScript\", \"Python\", \"C++\", \"Perl\"]\n```\nslice() Method: This method returns a shallow copy of a portion of the array, starting from a specified index or the entire array A shallow copy will copy the reference to the array instead of duplicating it ```js\nconst programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"];\nconst newList = programmingLanguages slice(1);\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7999,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "1fe8a2b3863b221f43203c8bcaed16ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "by merging two or more arrays ```js const programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"]; const newList = programmingLanguages concat(\"Perl\"); console log(newList); // [\"JavaScript\", \"Python\", \"C++\", \"Perl\"] ``` slice() Method: This method returns a shallow copy of a portion of the array, starting from a specified index or the entire array A shallow copy will copy the reference to the array instead of duplicating it ```js const programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"]; const newList = programmingLanguages slice(1); consolelog(newList); // [\"Python\", \"C++\"]\n```\nSpread Syntax: The spread syntax is used to create shallow copies of an array ```js\nconst originalArray = [1, 2, 3];\nconst shallowCopiedArray = [ originalArray];\nshallowCopiedArray push(4);\nconsole log(originalArray); // [1, 2, 3]\nconsole log(shallowCopiedArray); // [1, 2, 3, 4]\n```\nsplit() Method: This method divides a string into an array of substrings and specifies where each split should happen based on a given separator If no separator is provided, the method returns an array containing the original string as a single element ```js\nconst str = \"hello\";\nconst charArray = str split(\"\");\nconsole log(charArray); // [\"h\", \"e\", \"l\", \"l\", \"o\"]\n```\nreverse() Method: This method reverses an array in place js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\nconsole log(desserts reverse()); // [\"pie\", \"cookies\", \"cake\"]\njoin() Method: This method concatenates all the elements of an array into a single string, with each element separated by a specified separator If no separator is provided, or an empty string (\"\") is used, the elements will be joined without any separator ```js\nconst reversedArray = [\"o\", \"l\", \"l\", \"e\", \"h\"];\nconst reversedString = reversedArray join(\"\");\nconsole log(reversedString); // \"olleh\"\n```\n--assignment--\nReview the JavaScript Arrays topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7999,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-arrays\\6723c66f623701a3cdf72130.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "fd82c3dfb4e04ed3c8d59d48713c6a93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-audio-and-video\\6723cf27c6e9a0c3f3041385.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723cf27c6e9a0c3f3041385\ntitle: JavaScript Audio and Video Review\nchallengeType: 24\ndashedName: review-javascript-audio-and-video\n--description--\nAudio Constructor and Common Methods\nDefinition: The Audio constructor, like other constructors, is a special function called with the new keyword It returns an HTMLAudioElement, which you can then use to play audio for the user or append to the DOM for the user to control themselves When you call the constructor, you can optionally pass a URL as the (only) argument This URL should point to the source of the audio file you want to play Or, if you need to change the source dynamically, you can assign the URL to the src property of the returned audio element play() Method: This method is used with the audio or video elements to begin playback for the media ```js\nconst audio = document getElementById('audio');\n// Starts playing the audio\naudio play();\n```\npause() Method: This method is used with the audio or video elements to pause playback for the media It maintains the current position, so if play() is called, it starts from that position js\nfunction pauseAudio() {\nconst audio = document getElementById('myAudio');\naudio pause();  // Pauses the audio playback\n}\naddTextTrack() Method: This method allows you to specify a text track to associate with the media element - which is especially helpful for adding subtitles to a video fastSeek() Method: This method allows you to move the playback position to a specific time within the media The Audio() constructor has properties just as it has methods Those properties include:\ncurrentTime: for getting the current playback time of an audio\nloop: for making the audio play continuously by automatically restarting when it reaches the end\nmuted: for silencing the audio output of a media element regardless of volume setting\nDifferent Audio and Video Formats\nMIME type: A MIME type, standing for Multipurpose Internet Mail Extensions, is a standardized way to programmatically indicate a file type The MIME type can tell an application, such as your browser, how to handle a specific file In the case of audio and video, the MIME type indicates it is a multimedia format that can be embedded in the web page source Element: This is used to specify a file type and source - and can include multiple different types by using multiple source elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5763,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-audio-and-video\\6723cf27c6e9a0c3f3041385.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "58ee3fbc9bc666949f23596abcc8eb5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-audio-and-video\\6723cf27c6e9a0c3f3041385.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Extensions, is a standardized way to programmatically indicate a file type The MIME type can tell an application, such as your browser, how to handle a specific file In the case of audio and video, the MIME type indicates it is a multimedia format that can be embedded in the web page source Element: This is used to specify a file type and source - and can include multiple different types by using multiple source elementsWhen you do this, the browser will determine the best format to use for the user's current environment MP3: This is a type of digital file format used to store music, audio, or sound It's a compressed version of a sound recording that makes the file size smaller, so it's easier to store and share MP3 has the widest browser support and the MIME type of audio/mp3 MP4: An MP4 is a type of digital file format used to store video and audio It serves as a container that holds both the video (images) and the sound (music or speech) in one file An MP4, can have the MIME type audio/mp4 OR video/mp4, depending on whether it's a video file or audio-only Other formats are WMV which is associated with the Windows Media Player app, OGG, MKV, AVI, and more codecs\nDefinition: A codec, short for \"encoder/decoder\", is an algorithm or software that can convert audio and video between analogue and digital formats Codecs can be specified as part of the MIME type The basic syntax to define a codec is to add a semi-colon after the media type, then codecs= and the codec HTMLMediaElement API\nDefinition: The HTMLMediaElement API is used to control the behavior of audio and video elements on your page It extends the base HTMLElement interface, so you have access to the base properties, methods as well as these helpful events like waiting, ended, canplay, canplaythrough, and more Examples of the methods include play(), fastSeek(), pause(), and canPlayType() for checking if a browser is likely to be able to play an audio file Media Capture and Streams API\nDefinition: The Media Capture and Streams API, or the MediaStream API, is used to capture audio and video from your device In order to use the API, you need to create the MediaStream object You could do this with the constructor, but it would not be tied to the user's hardware",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5763,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-audio-and-video\\6723cf27c6e9a0c3f3041385.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b36635c6181b6a2784211124c3d1776b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-audio-and-video\\6723cf27c6e9a0c3f3041385.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "play(), fastSeek(), pause(), and canPlayType() for checking if a browser is likely to be able to play an audio file Media Capture and Streams API Definition: The Media Capture and Streams API, or the MediaStream API, is used to capture audio and video from your device In order to use the API, you need to create the MediaStream object You could do this with the constructor, but it would not be tied to the user's hardwareInstead, the mediaDevices property of the global navigator object has a getUserMedia() method for you to use js\nwindow navigator mediaDevices getUserMedia({\naudio: true,\nvideo: {\nwidth: {\nmin: 1280,\nideal: 1920,\nmax: 3840\n},\nheight: {\nmin: 720,\nideal: 1080,\nmax: 2160\n}\n}\n});\nScreen Capture API\nDefinition: The Screen Capture API is used to record a user's screen This API is exposed by calling the getDisplayMedia() method of the mediaDevices object and consuming the returned media stream MediaStream Recording API\nDefinition: The MediaStream Recording API works in tandem with the MediaStreams APIs, allowing you to record a MediaStream (or even an HTMLMediaElement directly) Media Source Extensions API\ntopic: The Media Source Extensions API is what allows you to directly pass a user's webcam feed to a video element with the srcObject property Web Audio API\nDefinition: The Web Audio API which powers everything audible on the web This API includes important objects like an AudioBuffer (representing a Buffer specifically containing audio data) or the AudioContext, used to represent an audio-processing graph --assignment--\nReview the JavaScript Audio and Video topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5763,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-audio-and-video\\6723cf27c6e9a0c3f3041385.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6959b06ca4e74c66b7610b2462390f1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-classes\\6723d13d756751caf871d59c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723d13d756751caf871d59c\ntitle: JavaScript Classes Review\nchallengeType: 24\ndashedName: review-javascript-classes\n--description--\nBasics of Working with Classes\nDefinition: Classes in JavaScript are used to define blueprints for creating objects, and encapsulating data Classes include a constructor which is a special method that gets called automatically when a new object is created from the class It is used to initialize the properties of the object The this keyword is used here to refer to the current instance of the class Below the constructor, you can have what are called methods Methods are functions defined inside a class that perform actions or operations on the class's data or state They are used to define behaviors that instances of the class can perform ```js\nclass Dog {\nconstructor(name) {\nthis name = name;\n}\nbark() {\nconsole log(${this name} says woof );\n}\n}\n```\nTo create a new instance of the class, you will use the new keyword followed by the class name:\njs\nconst dog = new Dog(\"Gino\");\nYou can also create classes as class expressions This is where the class is anonymous and assigned to a variable ```js\nconst Dog = class {\nconstructor(name) {\nthis name = name;\n}\nbark() {\nconsole log(${this name} says woof );\n}\n};\n```\nClass Inheritance\nDefinition: In programming, inheritance allows you to define classes that inherit properties and methods from parent classes This promotes code reuse and establishes a hierarchical relationship between classes A parent class is a class that acts like a blueprint for other classes It defines properties and methods that are inherited by other classes A child class is a class that inherits the properties and methods of another class Child classes can also extend the functionality of their parent classes by adding new properties and methods In JavaScript, we use the extends keyword to implement inheritance This keyword indicates that a class is the child class of another class ```js\nclass Vehicle {\nconstructor(brand, year) {\nthis brand = brand;\nthis year = year;\n}\n}\nclass Car extends Vehicle {\nhonk() {\nconsole log(\"Honk Honk \");\n}\n}\n```\nThe super keyword is used to access the parent class's methods, constructors, and fields ```js\nclass Vehicle {\nconstructor(brand, year) {\nthis brand = brand;\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4358,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-classes\\6723d13d756751caf871d59c.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1994f8d6f3163061c28b17ed7162649a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-classes\\6723d13d756751caf871d59c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the extends keyword to implement inheritance This keyword indicates that a class is the child class of another class ```js class Vehicle { constructor(brand, year) { this brand = brand; this year = year; } } class Car extends Vehicle { honk() { console log(\"Honk Honk \"); } } ``` The super keyword is used to access the parent class's methods, constructors, and fields ```js class Vehicle { constructor(brand, year) { this brand = brand; thisyear = year;\n}\n}\nclass Car extends Vehicle {\nconstructor(brand, year, numDoors) {\nsuper(brand, year);\nthis numDoors = numDoors;\n}\n}\n```\nWorking with Static Methods and Static Properties\nStatic methods: These methods are often used for utility functions that don't need access to the specific state of an object They are defined within classes to encapsulate related functionality Static methods are also helpful for implementing \"factory\" methods A factory method is a method that you define in addition to the constructor to create objects based on specific criteria ```js\nclass Movie {\nconstructor(title, rating) {\nthis title = title;\nthis rating = rating;\n}\nstatic compareMovies(movieA, movieB) {\nif (movieA rating > movieB rating) {\nconsole log(${movieA title} has a higher rating );\n} else if (movieA rating < movieB rating) {\nconsole log(${movieB title} has a higher rating );\n} else {\nconsole log(\"These movies have the same rating \");\n}\n}\n}\nlet movieA = new Movie(\"Movie A\", 80);\nlet movieB = new Movie(\"Movie B\", 45);\nMovie compareMovies(movieA, movieB);\n```\nStatic Properties: These properties are used to define values or attributes that are associated with a class itself, rather than with instances of the class Static properties are shared across all instances of the class and can be accessed without creating an instance of the class ```js\nclass Car {\n// Static property\nstatic numberOfWheels = 4;\nconstructor(make, model) {\nthis make = make;\nthis model = model;\n}\n// Instance method\ngetCarInfo() {\nreturn ${this make} ${this model};\n}\n// Static method\nstatic getNumberOfWheels() {\nreturn Car numberOfWheels;\n}\n}\n// Accessing static property directly from the class\nconsole log(Car numberOfWheels);\n```\n--assignment--\nReview the JavaScript Classes topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4358,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-classes\\6723d13d756751caf871d59c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b49a00f967a845317e521626369e5c6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-comparisons-and-conditionals\\6723c554025f449f4f39c3f5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723c554025f449f4f39c3f5\ntitle: JavaScript Comparisons and Conditionals Review\nchallengeType: 24\ndashedName: review-javascript-comparisons-and-conditionals\n--description--\nComparisons and the null and undefined Data Types\nComparisons and undefined: A variable is undefined when it has been declared but hasn't been assigned a value It's the default value of uninitialized variables and function parameters that weren't provided an argument undefined converts to NaN in numeric contexts, which makes all numeric comparisons with undefined return false js\nconsole log(undefined > 0);  // false\nconsole log(undefined < 0);  // false\nconsole log(undefined == 0); // false\nComparisons and null: The null type represents the intentional absence of a value When using the equality operator, null and undefined are considered equal However, when using the strict equality operator (===), which checks both value and type without performing type coercion, null and undefined are not equal:\njs\nconsole log(null == undefined); // true\nconsole log(null === undefined); // false\nswitch Statements\nDefinition: A switch statement evaluates an expression and matches its value against a series of case clauses When a match is found, the code block associated with that case is executed A break statement should be placed at the end of each case, to terminate its execution and continue with the next The default case is an optional case and only executes if none of the other cases match The default case is placed at the end of a switch statement ```js\nconst dayOfWeek = 3;\nswitch (dayOfWeek) {\ncase 1:\nconsole log(\"It's Monday Time to start the week strong \");\nbreak;\ncase 2:\nconsole log(\"It's Tuesday Keep the momentum going \");\nbreak;\ncase 3:\nconsole log(\"It's Wednesday We're halfway there \");\nbreak;\ncase 4:\nconsole log(\"It's Thursday Almost the weekend \");\nbreak;\ncase 5:\nconsole log(\"It's Friday The weekend is near \");\nbreak;\ncase 6:\nconsole log(\"It's Saturday Enjoy your weekend \");\nbreak;\ncase 7:\nconsole log(\"It's Sunday Rest and recharge \");\nbreak;\ndefault:\nconsole log(\"Invalid day Please enter a number between 1 and 7 \");\n}\n```\n--assignment--\nReview the JavaScript Comparisons and Conditionals topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2420,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-comparisons-and-conditionals\\6723c554025f449f4f39c3f5.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a7422cb46e4e8dd5770a631180f82354",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-functional-programming\\6723d2c154dd19d0025f7cd9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723d2c154dd19d0025f7cd9\ntitle: JavaScript Functional Programming Review\nchallengeType: 24\ndashedName: review-javascript-functional-programming\n--description--\nPure vs Impure Functions\nA pure function is one that always produces the same output for the same input and doesn't have any side effects. Its output depends only on its input, and it doesn't modify any external state.\nImpure functions have side effects, which are changes to the state of the program that are observable outside the function.\nFunctional programming\nFunctional Programming is an approach to software development that emphasizes the use of functions to solve problems, focusing on what needs to be done rather than how to do it.\nFunctional programming encourages the use of techniques that help avoid side effects, such as using immutable data structures and higher-order functions.\nWhen used correctly, functional programming principles lead to cleaner and more maintainable code\nCurrying\nCurrying is a functional programming technique that transforms a function with multiple arguments into a sequence of functions, each taking a single argument.\nHere is an example of a regular function vs a curried function:\n```js\n// Regular function\nfunction average(a, b, c) {\nreturn (a + b + c) / 3;\n}\n// Curried function\nfunction curriedAverage(a) {\nreturn function(b) {\nreturn function(c) {\nreturn (a + b + c) / 3;\n};\n};\n}\n// Usage of curried function\nconst avg = curriedAverage(2)(3)(4);\n```\nCurrying can be particularly powerful when working with functions that take many arguments.\nCurrying makes your code more flexible and easier to reuse.\nYou can use arrow functions to create curried functions more concisely:\njs\nconst curriedAverage = a => b => c => (a + b + c) / 3;\nWhile currying can lead to more flexible and reusable code, it can also make code harder to read if overused.\n--assignment--\nReview the JavaScript Functional Programming topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2027,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-functional-programming\\6723d2c154dd19d0025f7cd9.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5983e9a6eb36d11af0ccd1424f70c0d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-dates\\6723ced0ba0b42c2a0ac14d2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723ced0ba0b42c2a0ac14d2\ntitle: JavaScript Dates Review\nchallengeType: 24\ndashedName: review-javascript-dates\n--description--\nThe date() Object and Common Methods\nDefinition: The date() object is used to create, manipulate, and format dates and times in JavaScript In the following example, the new keyword is used to create a new instance of the Date object, and the Date object is then assigned to the variable now If you were to log the value of now to the console, you would see the current date and time based on the system clock of the computer running the code js\nconst now = new Date();\nDate now() Method: This method is used to get the current date and time Date now() returns the number of milliseconds since January 1, 1970, 00:00:00 UTC This is known as the Unix epoch time Unix epoch time is a common way to represent dates and times in computer systems because it is an integer that can be easily stored and manipulated UTC stands for Universal Time Coordinated, which is the primary time standard by which the world regulates clocks and time getDate() Method: This method is used to get a day of the month based on the current date getDate() will return an integer value between 1 and 31, depending on the day of the month If the date is invalid, it will return NaN (Not a Number) js\nconst now = new Date();\nconst date = now getDate();\nconsole log(date); // 15\ngetMonth() Method: This method is used to get the month The month is zero-based, so January is 0, February is 1, and so on In this example, the output is 2, which corresponds to March If the month is invalid, it will return NaN js\nconst now = new Date();\nconst month = now getMonth();\nconsole log(month); // 2\ngetFullYear() Method: This method is used to get the full year If the year is invalid, it will return NaN js\nconst now = new Date();\nconst year = now getFullYear();\nconsole log(year); // 2024\nDifferent Ways to Format Dates\ntoISOString() Method: This method is used to format the date in an extended ISO (ISO 8601) format ISO 8601 is an international standard for representing dates and times The format is YYYY-MM-DDTHH:mm:ss sssZ",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3290,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-dates\\6723ced0ba0b42c2a0ac14d2.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7429a446178e3e60b41c56ee521d21c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-dates\\6723ced0ba0b42c2a0ac14d2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "log(month); // 2 getFullYear() Method: This method is used to get the full year If the year is invalid, it will return NaN js const now = new Date(); const year = now getFullYear(); console log(year); // 2024 Different Ways to Format Dates toISOString() Method: This method is used to format the date in an extended ISO (ISO 8601) format ISO 8601 is an international standard for representing dates and times The format is YYYY-MM-DDTHH:mm:ss sssZjs\nconst date = new Date();\nconsole log(date toISOString());\ntoLocaleDateString() Method: This method is used to format the date based on the user's locale js\nconst date = new Date();\nconsole log(date toLocaleDateString());  // 11/23/2024\nThe toLocaleDateString() method accepts two optional parameters: locales and options The locales parameter is a string representing the locale to use For example, you can pass in \"en-US\" for English (United States) or \"fr-FR\" for French (France) If you don't pass in a locales parameter, the default locale is used The second optional parameter is the options parameter This parameter is an object that allows you to specify the format of the date string js\nconst date = new Date();\nconst options = {\nweekday: \"long\",\nyear: \"numeric\",\nmonth: \"long\",\nday: \"numeric\",\n};\nconsole log(date toLocaleDateString(\"en-GB\", options)); // Saturday, November 23, 2024\n--assignment--\nReview the JavaScript Dates topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3290,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-dates\\6723ced0ba0b42c2a0ac14d2.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "10177e80f7f1f7271d8a272a6e9ebdf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-functions\\6723c5b8601a40a100bb59c9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723c5b8601a40a100bb59c9\ntitle: JavaScript Functions Review\nchallengeType: 24\ndashedName: review-javascript-functions\n--description--\nJavaScript Functions\nFunctions are reusable blocks of code that perform a specific task Functions can be defined using the function keyword followed by a name, a list of parameters, and a block of code that performs the task ```js\nfunction addNumbers(x, y, z) {\nreturn x + y + z;\n}\nconsole log(addNumbers(5, 3, 8)); // Output: 16\n```\nArguments are values passed to a function when it is called A function call is the process of executing a function in a program by specifying the function's name followed by parentheses, optionally including arguments inside the parentheses When a function finishes its execution, it will always return a value By default, the return value of a function is undefined The return keyword is used to specify the value to be returned from the function and ends the function execution Default parameters allow functions to have predefined values that will be used if an argument is not provided when the function is called This makes functions more flexible and prevents errors in cases where certain arguments might be omitted ```js\nconst calculateTotal = (amount, taxRate = 0 05) => {\nreturn amount + (amount * taxRate);\n};\nconsole log(calculateTotal(100)); // Output: 105\n```\nFunction Expressions are functions that you assign to variables By doing this, you can use the function in any part of your code where the variable is accessible ```js\nconst multiplyNumbers = function(firstNumber, secondNumber) {\nreturn firstNumber * secondNumber;\n};\nconsole log(multiplyNumbers(4, 5)); // Output: 20\n```\nArrow Functions\nArrow functions are a more concise way to write functions in JavaScript ``js\nconst calculateArea = (length, width) => {\nconst area = length * width;\nreturnThe area of the rectangle is ${area} square units `;\n};\nconsole log(calculateArea(5, 10)); // Output: \"The area of the rectangle is 50 square units \"\n```\nWhen defining an arrow function, you do not need the function keyword If you are using a single parameter, you can omit the parentheses around the parameter list ```js\nconst cube = x => {\nreturn x * x * x;\n};\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3277,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-functions\\6723c5b8601a40a100bb59c9.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "aa7a817f9102ec0b07c2f2aa2176bd23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-functions\\6723c5b8601a40a100bb59c9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const area = length * width; returnThe area of the rectangle is ${area} square units `; }; console log(calculateArea(5, 10)); // Output: \"The area of the rectangle is 50 square units \" ``` When defining an arrow function, you do not need the function keyword If you are using a single parameter, you can omit the parentheses around the parameter list ```js const cube = x => { return x * x * x; }; consolelog(cube(3)); // Output: 27\n```\nIf the function body consists of a single expression, you can omit the curly braces and the return keyword ```js\nconst square = number => number * number;\nconsole log(square(5)); // Output: 25\n```\nScope in Programming\nGlobal scope: This is the outermost scope in JavaScript Variables declared in the global scope are accessible from anywhere in the code and are called global variables Local scope: This refers to variables declared within a function These variables are only accessible within the function where they are declared and are called local variables Block scope: A block is a set of statements enclosed in curly braces {} such as in if statements, or loops Block scoping with let and const provides even finer control over variable accessibility, helping to prevent errors and make your code more predictable --assignment--\nReview the JavaScript Functions topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3277,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-functions\\6723c5b8601a40a100bb59c9.md",
      "source_type": "git_repo"
    },
    "token_count": 274,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b47cbc8cfb339a563966eef4660352c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723ca166fe90eb0a3146848\ntitle: JavaScript Fundamentals Review\nchallengeType: 24\ndashedName: review-javascript-fundamentals\n--description--\nString Constructor and toString() Method\nDefinition: A string object is used to represent a sequence of characters String objects are created using the String constructor function, which wraps the primitive value in an object ```js\nconst greetingObject = new String(\"Hello, world \");\nconsole log(typeof greetingObject); // \"object\"\n```\ntoString() Method: This method converts a value to its string representation It is a method you can use for numbers, booleans, arrays, and objects ```js\nconst num = 10;\nconsole log(num toString()); // \"10\"\nconst arr = [1, 2, 3];\nconsole log(arr toString()); // \"1,2,3\"\n```\nThis method accepts an optional radix which is a number from 2 to 36 This radix represents the base, such as base 2 for binary or base 8 for octal If the radix is not specified, it defaults to base 10, which is decimal js\nconst num = 10;\nconsole log(num toString(2)); // \"1010\"(binary)\nNumber Constructor\nDefinition: The Number constructor is used to create a number object The number object contains a few helpful properties and methods like the isNaN and toFixed method Most of the time, you will be using the Number constructor to convert other data types to the number data type ```js\nconst myNum = new Number(\"34\");\nconsole log(typeof myNum); // \"object\"\nconst num = Number('100');\nconsole log(num); // 100\nconsole log(typeof num); // number\n```\nBest Practices for Naming Variables and Functions\ncamelCasing: By convention, JavaScript developers will use camel casing for naming variables and functions Camel casing is where the first word is all lowercase and the following words start with a capital letter Ex isLoading Naming Booleans: For boolean variables, it's a common practice to use prefixes such as \"is\", \"has\", or \"can\" js\nlet isLoading = true;\nlet hasPermission = false;\nlet canEdit = true;\nNaming Functions: For functions, the name should clearly indicate what the function does For functions that return a boolean (often called predicates), you can use the same \"is\", \"has\", or \"can\" prefixes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2261f087ba5af6e9141522eee1b2b670",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "all lowercase and the following words start with a capital letter Ex isLoading Naming Booleans: For boolean variables, it's a common practice to use prefixes such as \"is\", \"has\", or \"can\" js let isLoading = true; let hasPermission = false; let canEdit = true; Naming Functions: For functions, the name should clearly indicate what the function does For functions that return a boolean (often called predicates), you can use the same \"is\", \"has\", or \"can\" prefixesWhen you have functions that retrieve data, it is common to start with the word \"get\" When you have functions that set data, it is common start with the word \"set\" For event handler functions, you might prefix with \"handle\" or suffix with \"Handler\" ```js\nfunction getUserData() { / / }\nfunction isValidEmail(email) { / / }\nfunction getProductDetails(productId) { / / }\nfunction setUserPreferences(preferences) { / / }\nfunction handleClick() { / / }\n```\nNaming Variables Inside Loops: When naming iterator variables in loops, it's common to use single letters like i, j, or k js\nfor (let i = 0; i < array length; i++) { /* */ }\nWorking with Sparse Arrays\nDefinition: It is possible to have arrays with empty slots Empty slots are defined as slots with nothing in them This is different than array slots with the value of undefined These types of arrays are known as sparse arrays js\nconst sparseArray = [1, , , 4];\nconsole log(sparseArray length); // 4\nLinters and Formatters\nLinters: A linter is a static code analysis tool that flags programming errors, bugs, stylistic errors, and suspicious constructs An example of a common linter would be ESLint Formatters: Formatters are tools that automatically format your code to adhere to a specific style guide An example of a common formatter would be Prettier Memory Management\nDefinition: Memory management is the process of controlling the memory, allocating it when needed and freeing it up when it's no longer needed JavaScript uses automatic memory management This means that JavaScript (more specifically, the JavaScript engine in your web browser) takes care of memory allocation and deallocation for you You don't have to explicitly free up memory in your code This automatic process is often called \"garbage collection",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "34e9ab3f8e967683e615bdd899df1740",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "common formatter would be Prettier Memory Management Definition: Memory management is the process of controlling the memory, allocating it when needed and freeing it up when it's no longer needed JavaScript uses automatic memory management This means that JavaScript (more specifically, the JavaScript engine in your web browser) takes care of memory allocation and deallocation for you You don't have to explicitly free up memory in your code This automatic process is often called \"garbage collection\"\nClosures\nDefinition: A closure is a function that has access to variables in its outer (enclosing) lexical scope, even after the outer function has returned ```js\nfunction outerFunction(x) {\nlet y = 10;\nfunction innerFunction() {\nconsole log(x + y);\n}\nreturn innerFunction;\n}\nlet closure = outerFunction(5);\nclosure(); // 15\n```\nvar Keyword and Hoisting\nDefinition: var was the original way to declare variables before 2015 But there were some issues that came with var in terms of scope, redeclaration and more So that is why modern JavaScript programming uses let and const instead Redeclaring Variables with var: If you try to redeclare a variable using let, then you would get a SyntaxError But with var, you are allowed to redeclare a variable ```js\n// Uncaught SyntaxError: Identifier 'num' has already been declared\nlet num = 19;\nlet num = 18;\nvar myNum = 5;\nvar myNum = 10; // This is allowed and doesn't throw an error\nconsole log(myNum) // 10\n```\nvar and Scope: Variables declared with var inside a block (like an if statement or a for loop) are still accessible outside that block js\nif (true) {\nvar num = 5;\n}\nconsole log(num); // 5\nHoisting: This is JavaScript's default behavior of moving declarations to the top of their respective scopes during the compilation phase before the code is executed When you declare a variable using the var keyword, JavaScript hoists the declaration to the top of its scope js\nconsole log(num); // undefined\nvar num = 5;\nconsole log(num); // 5\nWhen you declare a function using the function declaration syntax, both the function name and the function body are hoisted This means you can call a function before you've declared it in your code ```js\nsayHello(); // \"Hello, World \"\nfunction sayHello() {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "a93a19895530a947cf2acb635c257c0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "When you declare a variable using the var keyword, JavaScript hoists the declaration to the top of its scope js console log(num); // undefined var num = 5; console log(num); // 5 When you declare a function using the function declaration syntax, both the function name and the function body are hoisted This means you can call a function before you've declared it in your code ```js sayHello(); // \"Hello, World \" function sayHello() { consolelog(\"Hello, World \");\n}\n```\nVariable declarations made with let or const are hoisted, but they are not initialized, and you can't access them before the actual declaration in your code This behavior is often referred to as the \"temporal dead zone\" js\nconsole log(num); // Throws a ReferenceError\nlet num = 10;\nWorking with Imports, Exports and Modules\nModule: This is a self-contained unit of code that encapsulates related functions, classes, or variables To create a module, you write your JavaScript code in a separate file Exports: Any variables, functions, or classes you want to make available to other parts of your application need to be explicitly exported using the export keyword There are two types of export: named export and default export Imports: To use the exported items in another part of your application, you need to import them using the import keyword The types can be named import, default import, and namespace import ```js\n// Within a file called math js, we export the following functions:\n// Named export\nexport function add(num1, num2) {\nreturn num1 + num2;\n}\n// Default export\nexport default function subtract(num1, num2) {\nreturn num1 - num2;\n}\n// Within another file, we can import the functions from math js // Named import - This line imports the add function // The name of the function must exactly match the one exported from math js import { add } from ' /math js';\n// Default import - This line imports the subtract function // The name of the function can be anything import subtractFunc from ' /math js';\n// Namespace import - This line imports everything from the file import * as Math from ' /math js';\nconsole log(add(5, 3)); // 8\nconsole log(subtractFunc(5, 3)); // 2\nconsole log(Math add(5, 3)); // 8\nconsole log(Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "ce99c3fdfbe838b0dde04df6d0942793",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the one exported from math js import { add } from ' /math js'; // Default import - This line imports the subtract function // The name of the function can be anything import subtractFunc from ' /math js'; // Namespace import - This line imports everything from the file import * as Math from ' /math js'; console log(add(5, 3)); // 8 console log(subtractFunc(5, 3)); // 2 console log(Math add(5, 3)); // 8 console log(Mathsubtract(5, 3)); // 2\n```\n--assignment--\nReview the JavaScript Fundamentals topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8013,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-fundamentals\\6723ca166fe90eb0a3146848.md",
      "source_type": "git_repo"
    },
    "token_count": 131,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "4ef8e3a7858da58efb3bc63bf84626c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723ca6c6db3deb21cb1bf19\ntitle: JavaScript Higher Order Functions Review\nchallengeType: 24\ndashedName: review-javascript-higher-order-functions\n--description--\nCallback Functions and the forEach Method\nDefinition: In JavaScript, a callback function is a function that is passed as an argument to another function and is executed after the main function has finished its execution forEach() Method: This method is used to iterate over each element in an array and perform an operation on each element The callback function in forEach can take up to three arguments: the current element, the index of the current element, and the array that forEach was called upon ```js\nconst numbers = [1, 2, 3, 4, 5];\n// Result: 2 4 6 8 10\nnumbers forEach((number) => {\nconsole log(number * 2);\n});\n```\nHigher Order Functions\nDefinition: A higher order function takes one or more functions for the arguments and returns a function or value for the result ```js\nfunction operateOnArray(arr, operation) {\nconst result = [];\nfor (let i = 0; i < arr length; i++) {\nresult push(operation(arr[i]));\n}\nreturn result;\n}\nfunction double(x) {\nreturn x * 2;\n}\nconst numbers = [1, 2, 3, 4, 5];\nconst doubledNumbers = operateOnArray(numbers, double);\nconsole log(doubledNumbers); // [2, 4, 6, 8, 10]\n```\nmap() Method: This method is used to create a new array by applying a given function to each element of the original array The callback function can accept up to three arguments: the current element, the index of the current element, and the array that map was called upon ```js\nconst numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers map((num) => num * 2);\nconsole log(numbers); // [1, 2, 3, 4, 5]\nconsole log(doubled); // [2, 4, 6, 8, 10]\n```\nfilter() Method: This method is used to create a new array with elements that pass a specified test, making it useful for selectively extracting items based on criteria",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "79770662d40b7b6eabb2797a62175d9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "index of the current element, and the array that map was called upon ```js const numbers = [1, 2, 3, 4, 5]; const doubled = numbers map((num) => num * 2); console log(numbers); // [1, 2, 3, 4, 5] console log(doubled); // [2, 4, 6, 8, 10] ``` filter() Method: This method is used to create a new array with elements that pass a specified test, making it useful for selectively extracting items based on criteriaJust like the map method, the callback function for the filter method accepts the same three arguments: the current element being processed, the index, and the array ```js\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst evenNumbers = numbers filter((num) => num % 2 === 0);\nconsole log(evenNumbers); // [2, 4, 6, 8, 10]\n```\nreduce() Method: This method is used to process an array and condense it into a single value This single value can be a number, a string, an object, or even another array The reduce() method works by applying a function to each element in the array, in order, passing the result of each calculation on to the next This function is often called the reducer function The reducer function takes two main parameters: an accumulator and the current value The accumulator is where you store the running result of your operations, and the current value is the array element being processed ```js\nconst numbers = [1, 2, 3, 4, 5];\nconst sum = numbers reduce(\n(accumulator, currentValue) => accumulator + currentValue,\n0\n);\nconsole log(sum); // 15\n```\nMethod Chaining\nDefinition: Method chaining is a programming technique that allows you to call multiple methods on the same object in a single line of code This technique can make your code more readable and concise, especially when performing a series of operations on the same object ```js\nconst result = \"  Hello, World \" trim() toLowerCase() replace(\"world\", \"JavaScript\");\nconsole log(result); // \"hello, JavaScript",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "74f9e3f79dfe232fa489c13224bce615",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "currentValue) => accumulator + currentValue, 0 ); console log(sum); // 15 ``` Method Chaining Definition: Method chaining is a programming technique that allows you to call multiple methods on the same object in a single line of code This technique can make your code more readable and concise, especially when performing a series of operations on the same object ```js const result = \" Hello, World \" trim() toLowerCase() replace(\"world\", \"JavaScript\"); console log(result); // \"hello, JavaScript\"\n```\nWorking with the sort Method\nDefinition: The sort method is used to sort the elements of an array and return a reference to the sorted array No copy is made in this case because the elements are sorted in place ```js\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits sort();\nconsole log(fruits); // [\"Apple\", \"Banana\", \"Mango\", \"Orange\"]\n```\nIf you need to sort numbers, then you will need to pass in a compare function The sort method converts the elements to strings and then compares their sequences of UTF-16 code units values UTF-16 code units are the numeric values that represent the characters in the string Examples of UTF-16 code units are the numbers 65, 66, and 67 which represent the characters \"A\", \"B\", and \"C\" respectively So the number 200 appears before the number 3 in an array, because the string \"200\" comes before the string \"3\" when comparing their UTF-16 code units ```js\nconst numbers = [414, 200, 5, 10, 3];\nnumbers sort((a, b) => a - b);\nconsole log(numbers); // [3, 5, 10, 200, 414]\n```\nThe parameters a and b are the two elements being compared The compare function should return a negative value if a should come before b, a positive value if a should come after b, and zero if a and b are equal Working with the every and some Methods\nevery() Method: This method tests whether all elements in an array pass a test implemented by a provided function The every() method returns true if the provided function returns true for all elements in the array If any element fails the test, the method immediately returns false and stops checking the remaining elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "e9a57769ee0df5b0a810a45bb5a5cd6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "positive value if a should come after b, and zero if a and b are equal Working with the every and some Methods every() Method: This method tests whether all elements in an array pass a test implemented by a provided function The every() method returns true if the provided function returns true for all elements in the array If any element fails the test, the method immediately returns false and stops checking the remaining elements```js\nconst numbers = [2, 4, 6, 8, 10];\nconst hasAllEvenNumbers = numbers every((num) => num % 2 === 0);\nconsole log(hasAllEvenNumbers); // true\n```\nsome() Method: This method checks if at least one element passes the test The some() method returns true as soon as it finds an element that passes the test If no elements pass the test, it returns false ```js\nconst numbers = [1, 3, 5, 7, 8, 9];\nconst hasSomeEvenNumbers = numbers some((num) => num % 2 === 0);\nconsole log(hasSomeEvenNumbers); // true\n```\n--assignment--\nReview the JavaScript Higher Order Functions topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5841,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-higher-order-functions\\6723ca6c6db3deb21cb1bf19.md",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "bd6ee7abe1c72f4bd8943fc228d64521",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-loops\\6723c837cd3276aa73e6da25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723c837cd3276aa73e6da25\ntitle: JavaScript Loops Review\nchallengeType: 24\ndashedName: review-javascript-loops\n--description--\nWorking with Loops\nfor Loop: This type of loop is used to repeat a block of code a certain number of times This loop is broken up into three parts: the initialization statement, the condition, and the increment/decrement statement The initialization statement is executed before the loop starts It is typically used to initialize a counter variable The condition is evaluated before each iteration of the loop An iteration is a single pass through the loop If the condition is true, the code block inside the loop is executed If the condition is false, the loop stops and you move on to the next block of code The increment/decrement statement is executed after each iteration of the loop It is typically used to increment or decrement the counter variable js\nfor (let i = 0; i < 5; i++) {\nconsole log(i);\n}\nfor of Loop: This type of loop is used when you need to loop over values from an iterable Examples of iterables are arrays and strings ```js\nconst numbers = [1, 2, 3, 4, 5];\nfor (const num of numbers) {\nconsole log(num);\n}\n```\nfor in Loop: This type of loop is best used when you need to loop over the properties of an object This loop will iterate over all enumerable properties of an object, including inherited properties and non-numeric properties ```js\nconst fruit = {\nname: 'apple',\ncolor: 'red',\nprice: 0 99\n};\nfor (const prop in fruit) {\nconsole log(fruit[prop]);\n}\n```\nwhile Loop: This type of loop will run a block of code as long as the condition is true ```js\nlet i = 5;\nwhile (i > 0) {\nconsole log(i);\ni--;\n}\n```\ndo while Loop: This type of loop will execute the block of code at least once before checking the condition ```js\nlet userInput;\ndo {\nuserInput = prompt(\"Please enter a number between 1 and 10\");\n} while (Number(userInput) < 1 || Number(userInput) > 10);\nalert(\"You entered a valid number",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2679,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-loops\\6723c837cd3276aa73e6da25.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "050df432c1fd951f636b95f8889e14e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-loops\\6723c837cd3276aa73e6da25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "run a block of code as long as the condition is true ```js let i = 5; while (i > 0) { console log(i); i--; } ``` do while Loop: This type of loop will execute the block of code at least once before checking the condition ```js let userInput; do { userInput = prompt(\"Please enter a number between 1 and 10\"); } while (Number(userInput) < 1 || Number(userInput) > 10); alert(\"You entered a valid number\");\n```\nbreak and continue Statements\nDefinition: A break statement is used to exit a loop early, while a continue statement is used to skip the current iteration of a loop and move to the next one ```js\n// Example of break statement\nfor (let i = 0; i < 10; i++) {\nif (i === 5) {\nbreak;\n}\nconsole log(i);\n}\n// Output: 0, 1, 2, 3, and 4\n// Example of continue statement\nfor (let i = 0; i < 10; i++) {\nif (i === 5) {\ncontinue;\n}\nconsole log(i);\n}\n// Output: 0, 1, 2, 3, 4, 6, 7, 8, and 9\n```\n--assignment--\nReview the JavaScript Loops topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2679,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-loops\\6723c837cd3276aa73e6da25.md",
      "source_type": "git_repo"
    },
    "token_count": 288,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e6cd5561559eb200a6b781be0973394a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-maps-and-sets\\6723d027b02e4cc6ee5944da.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723d027b02e4cc6ee5944da\ntitle: JavaScript Maps and Sets Review\nchallengeType: 24\ndashedName: review-javascript-maps-and-sets\n--description--\nSets in JavaScript\nA Set is a built-in option for managing data collection Sets ensure that each value in it appears only once, making it useful for eliminating duplicates from an array or handling collections of distinct values You can create a Set using the Set() constructor:\njs\nconst set = new Set([1, 2, 3, 4, 5]);\nconsole log(set); // Set { 1, 2, 3, 4, 5 }\nSets can be manipulated using these methods:\nadd(): Adds a new element to the Set delete(): Removes an element from the Set has(): Checks if an element exists in the Set clear(): Removes all elements from the Set keys() and values(): Both returns a SetIterator that contains the values of the Set They are the same because keys() is an alias for values() forEach(): for iterating over the values of the Set Weaksets in JavaScript\nWeakSet is a collection of objects that allows you to store weakly held objects Sets vs WeakSets\nUnlike Sets, a WeakSet does not support primitives like numbers or strings A WeakSet only stores objects, and the references to those objects are \"weak,\" meaning that if the object is not being used anywhere else in your code, it is removed automatically to free up memory Maps in JavaScript\nA Map is a built-in object that holds key-value pairs just like an object Maps differ from the standard JavaScript objects with their ability to allow keys of any type, including objects, and functions A Map provides better performance over the standard object when it comes to frequent addition and removals of key-value pairs You can create a Map using the Map() constructor:\njs\nconst map = new Map([\n['flower', 'rose'],\n['fruit', 'apple'],\n['vegetable', 'carrot']\n]);\nconsole log(map); // Map(3) { 'flower' => 'rose', 'fruit' => 'apple', 'vegetable' => 'carrot' }\nMaps can be manipulated using these methods:\nset(): Adds a new key-value pair to the Map get(): Retrieves the value of a key from the Map delete(): Removes a key-value pair from the Map has(): Checks if a key exists in the Map",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2917,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-maps-and-sets\\6723d027b02e4cc6ee5944da.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9ce482bbad6189e063438bfa7fe7d5ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-maps-and-sets\\6723d027b02e4cc6ee5944da.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Map using the Map() constructor: js const map = new Map([ ['flower', 'rose'], ['fruit', 'apple'], ['vegetable', 'carrot'] ]); console log(map); // Map(3) { 'flower' => 'rose', 'fruit' => 'apple', 'vegetable' => 'carrot' } Maps can be manipulated using these methods: set(): Adds a new key-value pair to the Map get(): Retrieves the value of a key from the Map delete(): Removes a key-value pair from the Map has(): Checks if a key exists in the Mapclear(): Removes all key-value pairs from the Map Note that both Maps and Sets have the size property that returns the number of unique elements in them WeakMaps in JavaScript\nA WeakMap is a collection of key-value pairs just like Map, but with weak references to the keys The keys must be an object and the values can be anything you like Maps vs WeakMaps\nWeakMaps are similar to WeakSets in that they only store objects and the references to those objects are \"weak\" --assignment--\nReview the JavaScript Maps, Sets, and JSON topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2917,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-maps-and-sets\\6723d027b02e4cc6ee5944da.md",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5db5c83654fbecaa70b624ad53bf7c74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-objects\\6723c77d1a44b8a7599277dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723c77d1a44b8a7599277dd\ntitle: JavaScript Objects Review\nchallengeType: 24\ndashedName: review-javascript-objects\n--description--\nObject Basics\nDefinition: An object is a data structure that is made up of properties A property consists of a key and a value To access data from an object you can use either dot notation or bracket notation ```js\nconst person = {\nname: \"Alice\",\nage: 30,\ncity: \"New York\"\n};\nconsole log(person name);  // Alice\nconsole log(person[\"name\"]); // Alice\n```\nTo set a property of an existing object you can use either dot notation or bracket notation together with the assignment operator ```js\nconst person = {\nname: \"Alice\",\nage: 30\n};\nperson job = \"Engineer\"\nperson[\"hobby\"] = \"Knitting\"\nconsole log(person);  // {name: 'Alice', age: 30, job: 'Engineer', hobby: 'Knitting'}\n```\nRemoving Properties From an Object\ndelete Operator: This operator is used to remove a property from an object ```js\nconst person = {\nname: \"Alice\",\nage: 30,\njob: \"Engineer\"\n};\ndelete person job;\nconsole log(person job); // undefined\n```\nChecking if an Object has a Property\nhasOwnProperty() Method: This method returns a boolean indicating whether the object has the specified property as its own property ```js\nconst person = {\nname: \"Alice\",\nage: 30\n};\nconsole log(person hasOwnProperty(\"name\")); // true\nconsole log(person hasOwnProperty(\"job\")); // false\n```\nin Operator: This operator will return true if the property exists in the object ```js\nconst person = {\nname: \"Bob\",\nage: 25\n};\nconsole log(\"name\" in person);  // true\n```\nAccessing Properties From Nested Objects\nAccessing Data: Accessing properties from nested objects involves using the dot notation or bracket notation, much like accessing properties from simple objects However, you'll need to chain these accessors to drill down into the nested structure ```js\nconst person = {\nname: \"Alice\",\nage: 30,\ncontact: {\nemail: \"alice@example com\",\nphone: {\nhome: \"123-456-7890\",\nwork: \"098-765-4321\"\n}\n}\n};\nconsole log(person",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5613,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-objects\\6723c77d1a44b8a7599277dd.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d1275486199cff36fe2bcca0bba06334",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-objects\\6723c77d1a44b8a7599277dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "age: 25 }; console log(\"name\" in person); // true ``` Accessing Properties From Nested Objects Accessing Data: Accessing properties from nested objects involves using the dot notation or bracket notation, much like accessing properties from simple objects However, you'll need to chain these accessors to drill down into the nested structure ```js const person = { name: \"Alice\", age: 30, contact: { email: \"alice@example com\", phone: { home: \"123-456-7890\", work: \"098-765-4321\" } } }; console log(personcontact phone work); // \"098-765-4321\"\n```\nPrimitive and Non Primitive Data Types\nPrimitive Data Types: These data types include numbers, strings, booleans, null, undefined, and symbols These types are called \"primitive\" because they represent single values and are not objects Primitive values are immutable, which means once they are created, their value cannot be changed Non Primitive Data Types: In JavaScript, these are objects, which include regular objects, arrays, and functions Unlike primitives, non-primitive types can hold multiple values as properties or elements Object Methods\nDefinition: Object methods are functions that are associated with an object They are defined as properties of an object and can access and manipulate the object's data The this keyword inside the method refers to the object itself, enabling access to its properties ```js\nconst person = {\nname: \"Bob\",\nage: 30,\nsayHello: function() {\nreturn \"Hello, my name is \" + this name;\n}\n};\nconsole log(person sayHello()); // \"Hello, my name is Bob\"\n```\nObject Constructor\nDefinition: In JavaScript, a constructor is a special type of function used to create and initialize objects It is invoked with the new keyword and can initialize properties and methods on the newly created object The Object() constructor creates a new empty object js\nnew Object()\nWorking with the Optional Chaining Operator ( )\nDefinition: This operator lets you safely access object properties or call methods without worrying whether they exist ```js\nconst user = {\nname: \"John\",\nprofile: {\nemail: \"john@example com\",\naddress: {\nstreet: \"123 Main St\",\ncity: \"Somewhere\"\n}\n}\n};\nconsole log(user profile address street); // \"123 Main St\"\nconsole log(user profile phone",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5613,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-objects\\6723c77d1a44b8a7599277dd.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c75b62fdd3bb3717fe7235858ccda241",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-objects\\6723c77d1a44b8a7599277dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the newly created object The Object() constructor creates a new empty object js new Object() Working with the Optional Chaining Operator ( ) Definition: This operator lets you safely access object properties or call methods without worrying whether they exist ```js const user = { name: \"John\", profile: { email: \"john@example com\", address: { street: \"123 Main St\", city: \"Somewhere\" } } }; console log(user profile address street); // \"123 Main St\" console log(user profile phonenumber);   // undefined\n```\nObject Destructuring\nDefinition: Object destructuring allows you to extract values from objects and assign them to variables in a more concise and readable way ```js\nconst person = { name: \"Alice\", age: 30, city: \"New York\" };\nconst { name, age } = person;\nconsole log(name); // Alice\nconsole log(age);  // 30\n```\nWorking with JSON\nDefinition: JSON stands for JavaScript Object Notation It is a lightweight, text-based data format that is commonly used to exchange data between a server and a web application js\n{\n\"name\": \"Alice\",\n\"age\": 30,\n\"isStudent\": false,\n\"list of courses\": [\"Mathematics\", \"Physics\", \"Computer Science\"]\n}\nJSON stringify(): This method is used to convert a JavaScript object into a JSON string This is useful when you want to store or transmit data in a format that can be easily shared or transferred between systems ```js\nconst user = {\nname: \"John\",\nage: 30,\nisAdmin: true\n};\nconst jsonString = JSON stringify(user);\nconsole log(jsonString); // '{\"name\":\"John\",\"age\":30,\"isAdmin\":true}'\n```\nJSON parse(): This method converts a JSON string back into a JavaScript object This is useful when you retrieve JSON data from a web server or localStorage and you need to manipulate the data in your application ```js\nconst jsonString = '{\"name\":\"John\",\"age\":30,\"isAdmin\":true}';\nconst userObject = JSON parse(jsonString);\n// result: { name: 'John', age: 30, isAdmin: true }\nconsole log(userObject);\n```\n--assignment--\nReview the JavaScript Objects topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5613,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-objects\\6723c77d1a44b8a7599277dd.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c0956727ee27b04a868c29a83ba763bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723c463e51a2d9b747d7529\ntitle: JavaScript Math Review\nchallengeType: 24\ndashedName: review-javascript-math\n--description--\nWorking with the Number Data Type\nDefinition: JavaScript's Number type includes integers, floating-point numbers, Infinity and NaN Floating-point numbers are numbers with a decimal point Positive Infinity is a number greater than any other number while -Infinity is a number smaller than any other number NaN (Not a Number) represents an invalid numeric value like the string \"Jessica\" Common Arithmetic Operations\nAddition Operator: This operator (+) is used to calculate the sum of two or more numbers Subtraction Operator: This operator (-) is used to calculate the difference between two numbers Multiplication Operator: This operator (*) is used to calculate the product of two or more numbers Division Operator: This operator (/) is used to calculate the quotient between two numbers\nDivision By Zero: If you try to divide by zero, JavaScript will return Infinity Remainder Operator: This operator(%) returns the remainder of a division Exponentiation Operator: This operator (**) raises one number to the power of another Calculations with Numbers and Strings\nExplanation: When you use the + operator with a number and a string, JavaScript will coerce the number into a string and concatenate the two values When you use the -, * or / operators with a string and number, JavaScript will coerce the string into a number and the result will be a number For null and undefined, JavaScript treats null as 0 and undefined as NaN in mathematical operations ```js\nconst result = 5 + '10';\nconsole log(result); // 510\nconsole log(typeof result); // string\nconst subtractionResult = '10' - 5;\nconsole log(subtractionResult); // 5\nconsole log(typeof subtractionResult); // number\nconst multiplicationResult = '10' * 2;\nconsole log(multiplicationResult); // 20\nconsole log(typeof multiplicationResult); // number\nconst divisionResult = '20' / 2;\nconsole log(divisionResult); // 10\nconsole log(typeof divisionResult); // number\nconst result1 = null + 5;\nconsole log(result1); // 5\nconsole log(typeof result1); // number\nconst result2 = undefined + 5;\nconsole log(result2); // NaN\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "12a92160e6c860bdff803abbf724393d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "console log(typeof result); // string const subtractionResult = '10' - 5; console log(subtractionResult); // 5 console log(typeof subtractionResult); // number const multiplicationResult = '10' * 2; console log(multiplicationResult); // 20 console log(typeof multiplicationResult); // number const divisionResult = '20' / 2; console log(divisionResult); // 10 console log(typeof divisionResult); // number const result1 = null + 5; console log(result1); // 5 console log(typeof result1); // number const result2 = undefined + 5; console log(result2); // NaN consolelog(typeof result2); // number\n```\nOperator Precedence\nDefinition: Operator precedence determines the order in which operations are evaluated in an expression Operators with higher precedence are evaluated before those with lower precedence Values inside the parenthesis will be evaluated first and multiplication/division will have higher precedence than addition/subtraction If the operators have the same precedence, then JavaScript will use associativity ```js\nconst result = (2 + 3) * 4;\nconsole log(result); // 20\nconst result2 = 10 - 2 + 3;\nconsole log(result2); // 11\nconst result3 = 2 ** 3 ** 2;\nconsole log(result3); // 512\n```\nDefinition: Associativity informs us the direction in which an expression is evaluated when multiple operators of the same type exist It defines whether the expression should be evaluated from left-to-right (left-associative) or right-to-left (right-associative) For example, the exponent operator is also right to left associative:\n```js\nconst result4 = 5 ** 4 ** 1; // 625\nconsole log(result4);\n```\nIncrement and Decrement Operators\nIncrement Operator: This operator is used to increase the value by one The prefix notation ++num increases the value of the variable first, then returns a new value The postfix notation num++ returns the current value of the variable first, then increases it ```js\nlet x = 5;\nconsole log(++x); // 6\nconsole log(x); // 6\nlet y = 5;\nconsole log(y++); // 5\nconsole log(y); // 6\n```\nDecrement Operator: This operator is used to decrease the value by one",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "a12ab9c6697b114d8143c22f2d581a98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "used to increase the value by one The prefix notation ++num increases the value of the variable first, then returns a new value The postfix notation num++ returns the current value of the variable first, then increases it ```js let x = 5; console log(++x); // 6 console log(x); // 6 let y = 5; console log(y++); // 5 console log(y); // 6 ``` Decrement Operator: This operator is used to decrease the value by oneThe prefix notation and postfix notation work the same way as earlier with the increment operator ```js\nlet num = 5;\nconsole log(--num); // 4\nconsole log(num--); // 4\nconsole log(num); // 3\n```\nCompound Assignment Operators\nAddition Assignment (+=) Operator: This operator performs addition on the values and assigns the result to the variable Subtraction Assignment (-=) Operator: This operator performs subtraction on the values and assigns the result to the variable Multiplication Assignment (*=) Operator: This operator performs multiplication on the values and assigns the result to the variable Division Assignment (/=) Operator: This operator performs division on the values and assigns the result to the variable Remainder Assignment (%=) Operator: This operator divides a variable by the specified number and assigns the remainder to the variable Exponentiation Assignment (**=) Operator: This operator raises a variable to the power of the specified number and reassigns the result to the variable Booleans and Equality\nBoolean Definition: A boolean is a data type that can only have two values: true or false Equality (==) Operator: This operator uses type coercion before checking if the values are equal js\nconsole log(5 == '5'); // true\nStrict Equality (===) Operator: This operator does not perform type coercion and checks if both the types and values are equal js\nconsole log(5 === '5'); // false\nInequality ( =) Operator: This operator uses type coercion before checking if the values are not equal Strict  Inequality ( ==) Operator: This operator does not perform type coercion and checks if both the types and values are not equal Comparison Operators\nGreater Than (>) Operator: This operator checks if the value on the left is greater than the one on the right Greater Than (>=) or Equal Operator: This operator checks if the value on the left is greater than or equal to the one on the right",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "9ffc56be4ab4a62f6622501d4867257f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "values are not equal Strict Inequality ( ==) Operator: This operator does not perform type coercion and checks if both the types and values are not equal Comparison Operators Greater Than (>) Operator: This operator checks if the value on the left is greater than the one on the right Greater Than (>=) or Equal Operator: This operator checks if the value on the left is greater than or equal to the one on the rightLess Than (<) Operator: This operator checks if the value on the left is less than the one on the right Less Than (<=) or Equal Operator: This operator checks if the value on the left is less than or equal to the one on the right Unary Operators\nUnary Plus Operator: This operator converts its operand into a number If the operand is already a number, it remains unchanged ```js\nconst str = '42';\nconst num = +str;\nconsole log(num); // 42\nconsole log(typeof num); // number\n```\nUnary Negation (-) Operator: This operator negates the operand js\nconst num = 4;\nconsole log(-num); // -4\nLogical NOT ( ) Operator: This operator flips the boolean value of its operand So, if the operand is true, it becomes false, and if it's false, it becomes true Bitwise Operators\nBitwise AND (&) Operator: This operator returns a 1 in each bit position for which the corresponding bits of both operands are 1 Bitwise AND Assignment (&=) Operator: This operator performs a bitwise AND operation with the specified number and reassigns the result to the variable Bitwise OR (|) Operator: This operator returns a 1 in each bit position for which the corresponding bits of either or both operands are 1 Bitwise OR Assignment (|=) Operator: This operator performs a bitwise OR operation with the specified number and reassigns the result to the variable Bitwise XOR (^) Operator: This operator returns a 1 in each bit position for which the corresponding bits of either, but not both, operands are 1 Bitwise NOT (~) Operator: This operator inverts the binary representation of a number Left Shift (<<) Operator: This operator shifts all bits to the left by a specified number of positions Right Shift (>>) Operator: This operator shifts all bits to the right",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "1f7c92b3f371b92b98de219cb24d2731",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and reassigns the result to the variable Bitwise XOR (^) Operator: This operator returns a 1 in each bit position for which the corresponding bits of either, but not both, operands are 1 Bitwise NOT (~) Operator: This operator inverts the binary representation of a number Left Shift (<<) Operator: This operator shifts all bits to the left by a specified number of positions Right Shift (>>) Operator: This operator shifts all bits to the rightConditional Statements, Truthy Values, Falsy Values and the Ternary Operator\nif/else if/else: An if statement takes a condition and runs a block of code if that condition is truthy If the condition is false, then it moves to the else if block If none of those conditions are true, then it will execute the else clause Truthy values are any values that result in true when evaluated in a Boolean context like an if statement Falsy values are values that evaluate to false in a Boolean context ```js\nconst score = 87;\nif (score >= 90) {\nconsole log('You got an A');\n} else if (score >= 80) {\nconsole log('You got a B'); // You got an B\n} else if (score >= 70) {\nconsole log('You got a C');\n} else {\nconsole log('You failed You need to study more ');\n}\n```\nTernary Operator: This operator is often used as a shorter way to write if else statements ```js\nconst temperature = 30;\nconst weather = temperature > 25 'sunny' : 'cool';\nconsole log(It's a ${weather} day ); // It's a sunny day ```\nBinary Logical Operators\nLogical AND (&&) Operator: This operator checks if both operands are true If both are true, then it will return the second value If either operand is falsy, then it will return the falsy value If both operands are falsy, it will return the first falsy value ```js\nconst result = true && 'hello';\nconsole log(result); // hello\n```\nLogical OR (||) Operator: This operator checks if at least one of the operands is truthy Nullish Coalescing ( ) Operator: This operator will return a value only if the first one is null or undefined ```js\nconst userSettings = {\ntheme: null,\nvolume: 0,\nnotifications: false,\n};\nlet theme = userSettings theme 'light';\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "f9104b3398b70649428259e1ed1f12de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "are falsy, it will return the first falsy value ```js const result = true && 'hello'; console log(result); // hello ``` Logical OR (||) Operator: This operator checks if at least one of the operands is truthy Nullish Coalescing ( ) Operator: This operator will return a value only if the first one is null or undefined ```js const userSettings = { theme: null, volume: 0, notifications: false, }; let theme = userSettings theme 'light'; consolelog(theme); // light\n```\nThe Math Object\nThe Math random() Method: This method generates a random floating-point number between 0 (inclusive) and 1 (exclusive) This means the possible output can be 0, but it will never actually reach 1 The Math max() Method: This method takes a set of numbers and returns the maximum value The Math min() Method: This method takes a set of numbers and returns the minimum value The Math ceil() Method: This method rounds a value up to the nearest whole integer The Math floor() Method: This method rounds a value down to the nearest whole integer The Math round() Method: This method rounds a value to the nearest whole integer js\nconsole log(Math round(2 3)); // 2\nconsole log(Math round(4 5)); // 5\nconsole log(Math round(4 8)); // 5\nThe Math trunc() Method: This method removes the decimal part of a number, returning only the integer portion, without rounding The Math sqrt() Method: This method will return the square root of a number The Math cbrt() Method: This method will return the cube root of a number The Math abs() Method: This method will return the absolute value of a number The Math pow() Method: This method takes two numbers and raises the first to the power of the second Common Number Methods\nisNaN(): NaN stands for \"Not-a-Number\" It's a special value that represents an unrepresentable or undefined numerical result The isNaN() function property is used to determine whether a value is NaN or not Number isNaN() provides a more reliable way to check for NaN values, especially in cases where type coercion might lead to unexpected results with the global isNaN() function ```js\nconsole log(isNaN(NaN));       // true\nconsole log(isNaN(undefined)); // true\nconsole log(isNaN({}));        // true\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "a2d845bf57e0205b4960d737a56022cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Number Methods isNaN(): NaN stands for \"Not-a-Number\" It's a special value that represents an unrepresentable or undefined numerical result The isNaN() function property is used to determine whether a value is NaN or not Number isNaN() provides a more reliable way to check for NaN values, especially in cases where type coercion might lead to unexpected results with the global isNaN() function ```js console log(isNaN(NaN)); // true console log(isNaN(undefined)); // true console log(isNaN({})); // true consolelog(isNaN(true));      // false\nconsole log(isNaN(null));      // false\nconsole log(isNaN(37));        // false\nconsole log(Number isNaN(NaN));        // true\nconsole log(Number isNaN(Number NaN)); // true\nconsole log(Number isNaN(0 / 0));      // true\nconsole log(Number isNaN(\"NaN\"));      // false\nconsole log(Number isNaN(undefined));  // false\n```\nThe parseFloat() Method: This method parses a string argument and returns a floating-point number It's designed to extract a number from the beginning of a string, even if the string contains non-numeric characters later on The parseInt() Method: This method parses a string argument and returns an integer parseInt() stops parsing at the first non-digit it encounters For floating-point numbers, it returns only the integer part If it can't find a valid integer at the start of the string, it returns NaN The toFixed() Method: This method is called on a number and takes one optional argument, which is the number of digits to appear after the decimal point It returns a string representation of the number with the specified number of decimal places --assignment--\nReview the JavaScript Math topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12857,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-math\\6723c463e51a2d9b747d7529.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c4b4f60b7c9705ac640f01415de6f1e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e2dbf723fe1c8883cc69\ntitle: Front End Libraries Review\nchallengeType: 24\ndashedName: review-front-end-libraries\n--description--\nJavaScript Libraries and Frameworks\nJavaScript libraries and frameworks offer quick solutions to common problems and speed up development by providing pre-built code Libraries are generally more focused on providing solutions to specific tasks, such as manipulating the DOM, handling events, or managing AJAX requests A couple of examples of JavaScript libraries are jQuery and React Frameworks, on the other hand, provide a more defined structure for building applications They often come with a set of rules and conventions that developers need to follow Examples of frameworks include Angular and Next js, a meta framework for React Single-page applications (SPAs) are web applications that load a single HTML page and dynamically update that page as the user interacts with the application without reloading the entire page SPAs use JavaScript to manage the application's state and render content This is often done using frameworks which provide great tools for building complex user interfaces Some issues surrounding SPAs include:\nScreen readers struggle with dynamically updated content The URL does not change when the user navigates within the application, which can make it difficult to bookmark, backtrack or share specific pages Initial load time can be slow if the application is large as all the assets need to be loaded upfront React\nReact is a popular JavaScript library for building user interfaces and web applications A core concept of React is the creation of reusable UI components that can update and render independently as data changes React allows developers to describe how the UI should look like based on the application state React then updates and renders the right components when the data or the state changes React Components\nComponents are the building blocks of React applications that allow developers to break down complex user interfaces into smaller, manageable pieces The UI is described using JSX, an extension of JavaScript syntax, that allows developers to write HTML-like code within JavaScript Components are basically JS functions or classes that return a piece of UI Here is an example of a simple React component that renders a greeting message:\njsx\nfunction Greeting() {\nconst name = 'Anna';\nreturn <h1>Welcome, {name} </h1>;\n}\nTo use the component, you can simply call:\njsx\n<Greeting />\nImporting and Exporting React components\nReact components can be exported from one file and imported into another file Let's say you have a component named City in a file named City js",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 36
  },
  {
    "id": "afa47c699e735a62e96c9b1659a8b9e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that return a piece of UI Here is an example of a simple React component that renders a greeting message: jsx function Greeting() { const name = 'Anna'; return <h1>Welcome, {name} </h1>; } To use the component, you can simply call: jsx <Greeting /> Importing and Exporting React components React components can be exported from one file and imported into another file Let's say you have a component named City in a file named City jsYou can export the component using the export keyword:\n```jsx\n// City js\nfunction City() {\nreturn New York;\n}\nexport default City;\n```\nTo import the City component into another file, you can use the import keyword:\n```jsx\n// App js\nimport City from ' /City';\nfunction App() {\nreturn (\nMy favorite city is:\n);\n}\n```\nThe default keyword is used as it is the default export from the City js file You can also choose to export the component on the same line as the component definition like this:\njsx\nexport default function City() {\nreturn <p>New York</p>;\n}\nSetting up a React project using Vite\nProject setup tools and CLIs provide a quick & easy way to start new projects, allowing developers to focus on writing code rather than dealing with configuration Vite, a popular project setup tool and can be used with React To create a new project with Vite, you can use the following command in your terminal:\nbash\nnpm create vite@latest my-react-app -- --template react\nThis command creates a new React project named my-react-app using Vite's React template In the project directory, you will see a package json file with the project dependencies and commands listed in it To run the project, navigate to the project directory and run the following commands:\nbash\ncd my-react-app # path to the project directory\nnpm install # installs the dependencies listed in the package json file\nOnce the dependencies are installed, you should notice a new folder in your project called node_modules The node_modules folder is where all the packages and libraries required by your project are stored To run your project, use the following command:\nbash\nnpm run dev\nAfter that, open your browser and navigate to http://localhost:5173 to see your React application running To actually see the code for the starter template, you can go into your project inside the src folder and you should see the App jsx file",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 36
  },
  {
    "id": "d22e8e18a886c2e744c78ea00bf1a4d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "folder in your project called node_modules The node_modules folder is where all the packages and libraries required by your project are stored To run your project, use the following command: bash npm run dev After that, open your browser and navigate to http://localhost:5173 to see your React application running To actually see the code for the starter template, you can go into your project inside the src folder and you should see the App jsx filePassing props in React components\nIn React, props (short for properties) are a way to pass data from a parent component to a child component This mechanism is needed to create reusable and dynamic UI elements Props can be any JavaScript value To pass props from a parent to a child component, you add the props as attributes when you use the child component in the parent's JSX Here's a simple example:\n```jsx\n// Parent component\nfunction Parent() {\nconst name = 'Anna';\nreturn ;\n}\n// Child component\nfunction Child(props) {\nreturn Hello, {props name} ;\n}\n```\nYou can pass multiple props using the spread operator ( ), after converting them to an object Here's an example:\njsx\n// Parent component\nfunction Parent() {\nconst person = {\nname: 'Anna',\nage: 25,\ncity: 'New York'\n};\nreturn <Child { person} />;\n}\nIn this code, the spread operator { person} converts the person object into individual props that are passed to the Child component Conditional rendering in React\nConditional rendering in React allows you to create dynamic user interfaces It is used to show different content based on certain conditions or states within your application There are several ways to conditionally render content in React One common approach is to use the ternary operator Here's an example:\njsx\nfunction Greeting({ isLoggedIn }) {\nreturn (\n<div>\n{isLoggedIn <h1>Welcome back </h1> : <h1>Please log in</h1>}\n</div>\n);\n}\nAnother way to conditionally render content is to use the logical AND (&&) operator This is useful when you want to render content only if a certain condition is met Here's an example:\njsx\nfunction Greeting({ user }) {\nreturn (\n<div>\n{user && <h1>Welcome, {user name} </h1>}\n</div>\n);\n}\nIn the code above, the h1 element is only rendered if the user object is truthy",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 36
  },
  {
    "id": "2317f5c13ba0c5c8658a1c72533edf4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "back </h1> : <h1>Please log in</h1>} </div> ); } Another way to conditionally render content is to use the logical AND (&&) operator This is useful when you want to render content only if a certain condition is met Here's an example: jsx function Greeting({ user }) { return ( <div> {user && <h1>Welcome, {user name} </h1>} </div> ); } In the code above, the h1 element is only rendered if the user object is truthyYou can also use a direct if statement this way:\njs\nfunction Greeting({ isLoggedIn }) {\nif (isLoggedIn) {\nreturn <h1>Welcome back </h1>;\n}\nreturn <h1>Please sign in</h1>;\n}\nRendering lists in React\nRendering lists in React is a common task when building user interfaces Lists can be rendered using the JS array map() method to iterate over an array of items and return a new array of JSX elements For example, if you have an array of names that you want to render as a list, you can do the following:\njsx\nfunction NameList({ names }) {\nreturn (\n<ul>\n{names map((name, index) => (\n<li key={`${name}-${index}`}>{name}</li>\n))}\n</ul>\n);\n}\nAlways remember to provide a unique key for each list item to help React manage the updating and rendering roles With these techniques, you can create flexible, efficient, and dynamic lists in your React applications Inline styles in React\nInline styles in React allow you to apply CSS styles directly to JSX elements using JavaScript objects To apply inline styles in React, you can use the style attribute on JSX elements The style attribute takes an object where the keys are CSS properties in camelCase and the values are the corresponding values Here's an example:\n```js\nfunction Greeting() {\nreturn (\nHello, world );\n}\nexport default Greeting;\n```\nYou can also extract the styles into a separate object and reference it in the style attribute this way:\n```jsx\nfunction Greeting() {\nconst styles = {\ncolor: 'blue',\nfontSize: '24px',\nbackgroundColor: 'lightgray'\n};\nreturn Hello, world ;\n}\nexport default Greeting;\n```\nInline styles support dynamic styling by allowing you to conditionally apply styles based on props or state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 3,
    "total_chunks": 36
  },
  {
    "id": "5684cc5d86a9d6fe752eb8f860b9106d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an example: ```js function Greeting() { return ( Hello, world ); } export default Greeting; ``` You can also extract the styles into a separate object and reference it in the style attribute this way: ```jsx function Greeting() { const styles = { color: 'blue', fontSize: '24px', backgroundColor: 'lightgray' }; return Hello, world ; } export default Greeting; ``` Inline styles support dynamic styling by allowing you to conditionally apply styles based on props or stateHere is an example of how you can conditionally apply styles based on a prop:\n```jsx\nfunction Greeting({ isImportant }) {\nconst styles = {\ncolor: isImportant 'red' : 'black',\nfontSize: isImportant '24px' : '16px'\n};\nreturn Hello, world ;\n}\nexport default Greeting;\n```\nIn the code above, the color and fontSize styles are conditionally set based on the isImportant prop Working with Events in React\nSynthetic Event System: This is React's way of handling events It serves as a wrapper around the native events like the click, keydown, and submit events Event handlers in React use the camel casing naming convention (Ex onClick, onSubmit, etc)\nHere is an example of using the onClick attribute for a button element in React:\n```jsx\nfunction handleClick() {\nconsole log(\"Button clicked \");\n}\nClick Me;\n```\nIn React, event handler functions usually start with the prefix handle to indicate they are responsible for handling events, like handleClick or handleSubmit When a user action triggers an event, React passes a Synthetic Event object to your handler This object behaves much like the native Event object in vanilla JavaScript, providing properties like type, target, and currentTarget To prevent default behaviors like browser refresh during an onSubmit event, for example, you can call the preventDefault() method:\n```jsx\nfunction handleSubmit(event) {\nevent preventDefault();\nconsole log(\"Form submitted \");\n}\nSubmit\n;\n```\nYou can also wrap a handler function in an arrow function like this:\n```jsx\nfunction handleDelete(id) {\nconsole log(\"Deleting item:\", id);\n}\nhandleDelete(1)}>Delete Item;\n```\nWorking with State and the useState Hook\nDefinition for state: In React, state is an object that contains data for a component When the state updates the component will re-render React treats state as immutable, meaning you should not modify it directly",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 36
  },
  {
    "id": "82e81fdd0ebcf42e8b0b51a619b4293d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "preventDefault(); console log(\"Form submitted \"); } Submit ; ``` You can also wrap a handler function in an arrow function like this: ```jsx function handleDelete(id) { console log(\"Deleting item:\", id); } handleDelete(1)}>Delete Item; ``` Working with State and the useState Hook Definition for state: In React, state is an object that contains data for a component When the state updates the component will re-render React treats state as immutable, meaning you should not modify it directlyuseState() Hook: The useState hook is a function that lets you declare state variables in functional components Here is a basic syntax:\njs\nconst [stateVariable, setStateFunction] = useState(initialValue);\nIn the state variable you have the following:\nstateVariable holds the current state value\nsetStateFunction (the setter function) updates the state variable\ninitialValue sets the initial state\nHere is a complete example for a Counter component:\n```jsx\nimport { useState } from \"react\";\nfunction Counter() {\nconst [count, setCount] = useState(0);\nreturn (\n{count}\n<button onClick={() => setCount(count - 1)}>Decrement</button>\n<button onClick={() => setCount(count + 1)}>Increment</button>\n</div>\n);\n}\nexport default Counter;\n```\nRendering and React Components\nDefinition: In React, rendering is the process by which components appear in the user interface (UI), usually the browser The rendering process consists of three stages: trigger, render, and commit The trigger stage occurs when React detects that something has changed and the user interface (UI) might need to be updated This change is often due to an update in state or props Once the trigger happens, React enters the render stage Here, React re-evaluates your components and figures out what to display To do this, React uses a lightweight copy of the \"real\" DOM called the virtual DOM With the virtual DOM, React can quickly check what needs to change in the component The commit stage is where React takes the prepared changes from the virtual DOM and applies them to the real DOM In other words, this is the stage where you see the final result on the screen Updating Objects and Arrays in State\nUpdating Objects in State: If you need to update an object in state, then you should make a new object or copy an existing object first, then set the state for that new object Any object put into state should be considered as read-only",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 5,
    "total_chunks": 36
  },
  {
    "id": "f55a1b4225ee477f6757566869be824d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the virtual DOM and applies them to the real DOM In other words, this is the stage where you see the final result on the screen Updating Objects and Arrays in State Updating Objects in State: If you need to update an object in state, then you should make a new object or copy an existing object first, then set the state for that new object Any object put into state should be considered as read-onlyHere is an example of setting a user's name, age and city The handleChange function is used to handle updates to the user's information:\n```jsx\nimport { useState } from \"react\";\nfunction Profile() {\nconst [user, setUser] = useState({ name: \"John Doe\", age: 31, city: \"LA\" });\nconst handleChange = (e) => {\nconst { name, value } = e target;\nsetUser((prevUser) => ({ prevUser, [name]: value}));\n};\nreturn (\nUser Profile\nName: {user name}\nAge: {user age}\nCity: {user city}\n<h2>Update User Age </h2>\n<input type=\"number\" name=\"age\" value={user age} onChange={handleChange} />\n<h2>Update User Name </h2>\n<input type=\"text\" name=\"name\" value={user name} onChange={handleChange} />\n<h2>Update User City </h2>\n<input type=\"text\" name=\"city\" value={user city} onChange={handleChange} />\n</div>\n);\n}\nexport default Profile;\n```\nUpdating Arrays in State: When updating arrays in state, it is important not to directly modify the array using methods like push() or pop() Instead you should create a new array when updating state:\n``jsx\nconst addItem = () => {\nconst newItem = {\nid: items length + 1,\nname:Item ${items length + 1}`,\n};\n// Creates a new array\nsetItems((prevItems) => [ prevItems, newItem]);\n};\n```\nIf you want to remove items from an array, you should use the filter() method, which returns a new array after filtering out whatever you want to remove:\njsx\nconst removeItem = (id) => {\nsetItems((prevItems) => prevItems filter((item) => item id == id));\n};\nReferencing Values Using Refs\nref Attribute: You can access a DOM node in React by using the ref attribute Here is an example to showcase a ref to focus an input element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 36
  },
  {
    "id": "7bc10af168c2efbc2dc1c5aacbdad80a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "you want to remove items from an array, you should use the filter() method, which returns a new array after filtering out whatever you want to remove: jsx const removeItem = (id) => { setItems((prevItems) => prevItems filter((item) => item id == id)); }; Referencing Values Using Refs ref Attribute: You can access a DOM node in React by using the ref attribute Here is an example to showcase a ref to focus an input elementThe current property is used to access the current value of that ref:\n```jsx\nimport { useRef } from \"react\";\nconst Focus = () => {\nconst inputRef = useRef(null);\nconst handleFocus = () => {\nif (inputRef current) {\ninputRef current focus();\n}\n};\nreturn (\nFocus Input\n);\n};\nexport default Focus;\n```\nWorking with the useEffect Hook\nuseEffect() Hook: In React, an effect is anything that happens outside the component rendering process That is, anything React does not handle directly as part of rendering the UI Common examples include fetching data, updating the browser tab's title, reading from or writing to the browser's local storage, getting the user's location, and much more These operations interact with the outside world and are known as side effects React provides the useEffect hook to let you handle those side effects useEffect lets you run a function after the component renders or updates ```js\nimport { useEffect } from \"react\";\nuseEffect(() => {\n// Your side effect logic (usually a function) goes here\n}, [dependencies]);\n```\nThe effect function runs after the component renders, while the optional dependencies argument controls when the effect runs Note that dependencies can be an array of \"reactive values\" (state, props, functions, variables, and so on), an empty array, or omitted entirely Here's how all of those options control how useEffect works:\nIf dependencies is an array that includes one or more reactive values, the effect will run whenever they change If dependencies is an empty array, useEffect runs only once when the component first renders If you omit dependencies, the effect runs every time the component renders or updates How to Create Custom Hooks\nCustom Hooks: A custom hook allows you to extract reusable logic from components, such as data fetching, state management, toggling, and side effects like tracking online status In React, all built-in hooks start with the word use, so your custom hook should follow the same convention",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 7,
    "total_chunks": 36
  },
  {
    "id": "8b3ec61750a4272abba5efb61f937f4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "empty array, useEffect runs only once when the component first renders If you omit dependencies, the effect runs every time the component renders or updates How to Create Custom Hooks Custom Hooks: A custom hook allows you to extract reusable logic from components, such as data fetching, state management, toggling, and side effects like tracking online status In React, all built-in hooks start with the word use, so your custom hook should follow the same conventionHere is an example of creating a useDebounce hook:\n```jsx\nfunction useDebounce(value, delay) {\nconst [debouncedValue, setDebouncedValue] = useState(value);\nuseEffect(() => {\nconst handler = setTimeout(() => {\nsetDebouncedValue(value);\n}, delay);\nreturn () => {\nclearTimeout(handler);\n};\n}, [value, delay]);\nreturn debouncedValue;\n}\nexport { useDebounce };\n```\nWorking with Forms in React\nControlled Inputs: This is when you store the input field value in state and update it through onChange events This gives you complete control over the form data and allows instant validation and conditional rendering ```jsx\nimport { useState } from \"react\";\nfunction App() {\nconst [name, setName] = useState(\"\");\nconst handleChange = (e) => {\nsetName(e target value);\n};\nconst handleSubmit = (e) => {\ne preventDefault();\nconsole log(name);\n};\nreturn (\n<>\nYour name\nSubmit\n</>\n);\n}\nexport default App;\n```\nUncontrolled Inputs: Instead of handling the inputs through the useState hook, uncontrolled inputs in HTML maintain their own internal state with the help of the DOM Since the DOM controls the input values, you need to pull in the values of the input fields with a ref ```jsx\nimport { useRef } from \"react\";\nfunction App() {\nconst nameRef = useRef();\nconst handleSubmit = (e) => {\ne preventDefault();\nconsole log(nameRef current value);\n};\nreturn (\nYour{\" \"}\nSubmit\n);\n}\nexport default App;\n```\nWorking with the useActionState Hook\nServer Actions: These are functions that run on the server to allow form handling right on the server without the need for API endpoints Here is an example from a Next js application:\n```js\n\"use server\";\nasync function submitForm(formData) {\nconst name = formData get(\"name\");\nreturn { message: Hello, ${name} };\n}\n```\nThe \"use server\" directive marks the function as a server action",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 8,
    "total_chunks": 36
  },
  {
    "id": "ff92b5b173e4cf79c79567a8771aa6e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Submit ); } export default App; ``` Working with the useActionState Hook Server Actions: These are functions that run on the server to allow form handling right on the server without the need for API endpoints Here is an example from a Next js application: ```js \"use server\"; async function submitForm(formData) { const name = formData get(\"name\"); return { message: Hello, ${name} }; } ``` The \"use server\" directive marks the function as a server actionuseActionState Hook: This hook updates state based on the outcome of a form submission Here's the basic syntax of the useActionState hook:\njs\nconst [state, action, isPending] = useActionState(actionFunction, initialState, permalink);\nstate is the current state the action returns action is the function that triggers the server action isPending is a boolean that indicates whether the action is currently running or not actionFunction parameter is the server action itself initialState is the parameter that represents the starting point for the state before the action runs permalink is an optional string that contains the unique page URL the form modifies Data Fetching in React\nOptions For Fetching Data: There are many different ways to fetch data in React You can use the native Fetch API, or third party tools like Axios or SWR Commonly Used State Variables When Fetching Data: Regardless of which way you choose to fetch your data in React, there are some pieces of state you will need to keep track of The first is the data itself The second will track whether the data is still being fetched The third is a state variable that will capture any errors that might occur during the data fetching process js\nconst [data, setData] = useState(null);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\nSince data fetching is a side effect, it's best to use the Fetch API inside of a useEffect hook ```js\nuseEffect(() => {\nconst fetchData = async () => {\ntry {\nconst res = await fetch(\"https://jsonplaceholder typicode com/posts\");\nif ( res ok) {\nthrow new Error(\"Network response was not ok\");\n}\nconst data = await res json();\nsetData(data);\n} catch (err) {\nsetError(err);\n} finally {\nsetLoading(false);\n}\n};\nfetchData();\n}, []);\n```\nThen you can render a loading message if the data fetching is not complete, an error message if there was an error fetching the data, or the results",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 9,
    "total_chunks": 36
  },
  {
    "id": "3b770d8302b2fbfeb25679f425d23dc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "async () => { try { const res = await fetch(\"https://jsonplaceholder typicode com/posts\"); if ( res ok) { throw new Error(\"Network response was not ok\"); } const data = await res json(); setData(data); } catch (err) { setError(err); } finally { setLoading(false); } }; fetchData(); }, []); ``` Then you can render a loading message if the data fetching is not complete, an error message if there was an error fetching the data, or the results```jsx\nif (loading) {\nreturn Loading ;\n}\nif (error) {\nreturn {error message};\n}\nreturn (\n{data map((post) => (\n{post title}\n))}\n);\n```\nIf you want to use Axios, you need to install and import it:\nbash\nnpm i axios\njs\nimport axios from \"axios\";\nThen you can fetch the data using axios get:\n```js\nconst [data, setData] = useState(null);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\nuseEffect(() => {\nconst fetchData = async () => {\ntry {\nconst res = await axios get(\n\"https://jsonplaceholder typicode com/users\"\n);\nsetData(res data);\n} catch (err) {\nsetError(err);\n} finally {\nsetLoading(false);\n}\n};\nfetchData();\n}, []);\n```\nTo fetch data using the useSWR hook, you need to first install and import it bash\nnpm i swr\njs\nimport useSWR from \"swr\";\nHere is how you can use the hook to fetch data:\n```jsx\nimport useSWR from \"swr\";\nconst fetcher = (url) => fetch(url) then((res) => res json());\nconst FetchTodos = () => {\nconst { data, error } = useSWR(\n\"https://jsonplaceholder typicode com/todos\",\nfetcher\n);\nif ( data) {\nreturn Loading ;\n}\nif (error) {\nreturn Error: {error message};\n}\nreturn (\n<>\nTodos\n{data map((todo) => (\n{todo title}\n))}\n</>\n);\n};\nexport default FetchTodos;\n```\nWorking with the useOptimistic Hook\nuseOptimistic Hook: This hook is used to keep UIs responsive while waiting for an async action to complete in the background",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 10,
    "total_chunks": 36
  },
  {
    "id": "6693a5d2dd03cfd069a35eb1243494df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= () => { const { data, error } = useSWR( \"https://jsonplaceholder typicode com/todos\", fetcher ); if ( data) { return Loading ; } if (error) { return Error: {error message}; } return ( <> Todos {data map((todo) => ( {todo title} ))} </> ); }; export default FetchTodos; ``` Working with the useOptimistic Hook useOptimistic Hook: This hook is used to keep UIs responsive while waiting for an async action to complete in the backgroundIt helps manage \"optimistic updates\" in the UI, a strategy in which you provide immediate updates to the UI based on the expected outcome of an action, like waiting for a server response Here is the basic syntax:\njs\nconst [optimisticState, addOptimistic] = useOptimistic(actualState, updateFunction);\noptimisticState is the temporary state that updates right away for a better user experience addOptimistic is the function that applies the optimistic update before the actual state changes actualState is the real state value that comes from the result of an action, like fetching data from a server updateFunction is the function that determines how the optimistic state should update when called Here is an example of using the useOptimistic hook in a TaskList component:\n```js\n\"use client\";\nimport { useOptimistic } from \"react\";\nexport default function TaskList({ tasks, addTask }) {\nconst [optimisticTasks, addOptimisticTask] = useOptimistic(\ntasks,\n(state, newTask) => [ state, { text: newTask, pending: true }]\n);\nasync function handleSubmit(e) {\ne preventDefault();\nconst formData = new FormData(e target);\naddOptimisticTask(formData get(\"task\"));\naddTask(formData);\ne target reset();\n}\nreturn <>{/ UI /}</>;\n}\n```\nstartTransition: This is used to render part of the UI and mark a state update as a non-urgent transition This allows the UI to be responsive during expensive updates Here is the basic syntax:\njs\nstartTransition(action)\nThe action performs a state update or triggers some transition-related logic This ensures that urgent UI updates (like typing or clicking) are not blocked Working with the useMemo Hook\nMemoization: This is an optimization technique in which the result of expensive function calls are cached (remembered) based on specific arguments",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 11,
    "total_chunks": 36
  },
  {
    "id": "2766decd3e4b29063e31dba144efd9b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and mark a state update as a non-urgent transition This allows the UI to be responsive during expensive updates Here is the basic syntax: js startTransition(action) The action performs a state update or triggers some transition-related logic This ensures that urgent UI updates (like typing or clicking) are not blocked Working with the useMemo Hook Memoization: This is an optimization technique in which the result of expensive function calls are cached (remembered) based on specific argumentsWhen the same arguments are provided again, the cached result is returned instead of re-computing the function useMemo Hook: This hook is used to memoize computed values Here is an example of memoizing the result of sorting a large array The expensiveSortFunction will only run when largeArray changes:\njs\nconst memoizedSortedArray = useMemo(\n() => expensiveSortFunction(largeArray),\n[largeArray]\n);\nWorking with the useCallback Hook\nuseCallback Hook: This is used to memoize function references js\nconst handleClick = useCallback(() => {\n// code goes here\n}, [dependency]);\nReact memo: This is used to memoize a component to prevent it from unnecessary re-renders when its prop has not changed js\nconst MemoizedComponent = React memo(({ prop }) => {\nreturn (\n<>\n{/* Presentation */}\n</>\n)\n});\nDependency Management Tools\nDependency Definition: In software, a dependency is where one component or module in an application relies on another to function properly Dependencies are common in software applications because they allow developers to use pre-built functions or tools created by others The two core dependencies needed for a React project will be the react and react-dom packages:\njson\n\"dependencies\": {\n\"react\": \"^18 3 1\",\n\"react-dom\": \"^18 3 1\"\n}\nPackage Manager Definition: To manage software dependencies in a project, you will need to use a package manager A package manager is a tool used for installation, updates and removal of dependencies Many popular programming languages like JavaScript, Python, Ruby and Java, all use package managers Popular package managers for JavaScript include npm, Yarn and pnpm package json File: This is a key configuration file in projects that contains metadata about your project, including its name, version, and dependencies It also defines scripts, licensing information, and other settings that help manage the project and its dependencies package-lock json File: This file will lock down the exact versions of all packages that your project is using When you update a package, then the new versions will be updated in the lock file as well",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 12,
    "total_chunks": 36
  },
  {
    "id": "dc822f5f837acc680abf643d8b4ed343",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "json File: This is a key configuration file in projects that contains metadata about your project, including its name, version, and dependencies It also defines scripts, licensing information, and other settings that help manage the project and its dependencies package-lock json File: This file will lock down the exact versions of all packages that your project is using When you update a package, then the new versions will be updated in the lock file as wellnode_modules Folder: This folder contains the actual code for the dependencies listed in your package json file, including both your project's direct dependencies and any dependencies of those dependencies Dev Dependencies: These are packages that are only used for development and not in production An example of this would be a testing library like Jest You would install Jest as a dev dependency because it is needed for testing your application locally but not needed to have the application run in production json\n\"devDependencies\": {\n\"@eslint/js\": \"^9 17 0\",\n\"@types/react\": \"^18 3 18\",\n\"@types/react-dom\": \"^18 3 5\",\n\"@vitejs/plugin-react\": \"^4 3 4\",\n\"eslint\": \"^9 17 0\",\n\"eslint-plugin-react\": \"^7 37 2\",\n\"eslint-plugin-react-hooks\": \"^5 0 0\",\n\"eslint-plugin-react-refresh\": \"^0 4 16\",\n\"globals\": \"^15 14 0\",\n\"vite\": \"^6 0 5\"\n}\nReact Router\nIntroduction: React Router is a third party library that allows you to add routing to your React applications To begin, you will need to install React Router in an existing React project like this:\nbash\nnpm i react-router\nThen inside of the main jsx or index jsx file, you will need to setup the route structure like this:\n```jsx\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router\";\nimport App from \" /App jsx\";\nimport \" /index css\";\ncreateRoot(document getElementById(\"root\")) render(\n} />\n);\n```\nThe path and element are used to couple the URL and UI components together In this case, we are setting up a route for the homepage that points to the App component Multiple Views and Route Setup: It is common in larger applications to have multiple views and routes setup like this:\n```jsx\n} />\n} />\n} />\n} />\n} />\n} />\n```\nThe index prop in these examples is meant to represent the default route for a given path segment",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 521,
    "chunk_index": 13,
    "total_chunks": 36
  },
  {
    "id": "6e22a8dd691e0efb37969c97d8ec1c01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the URL and UI components together In this case, we are setting up a route for the homepage that points to the App component Multiple Views and Route Setup: It is common in larger applications to have multiple views and routes setup like this: ```jsx } /> } /> } /> } /> } /> } /> ``` The index prop in these examples is meant to represent the default route for a given path segmentSo the Home component will be shown at the root / path while the ProductsHome component will be shown at the /products path Nesting Routes: You can nest routes inside other routes which results in the path of the child route being appended to the parent route's path jsx\n<Route path=\"products\">\n<Route path=\"trending\" element={<Trending />} />\n</Route>\nIn the example above, the path for the trending products will be products/trending Dynamic Segments: A dynamic segment is where any part of the URL path is dynamic jsx\n<Route path=\":category\" element={<Category />} />\nIn this example we have a dynamic segment called category When a user navigates to a URL like products/brass-instruments, then the view will change to the Category component and you can dynamically fetch the appropriate data based on the segment useParams Hook: This hook is used to access the dynamic parameters from a URL path ```js\nimport { useParams } from \"react-router\";\nexport default function Category() {\nlet params = useParams();\n{/ Accessing the category param: params category /}\n{/ rest of code goes here /}\n}\n```\nReact Frameworks\nIntroduction: React frameworks provide features like routing, image optimizations, data fetching, authentication and more This means that you might not need to set up separate frontend and backend applications for certain use cases Examples of React Frameworks include Next js and Remix Next js Routing: This routing system includes support for dynamic routes, parallel routes, route handlers, redirects, internalization and more Here is an example of creating a custom request handler:\n```js\nexport async function GET() {\nconst res = await fetch(\"https://example-api com\");\nconst data = await res json();\nreturn Response json({ data });\n}\n```\nNext js Image Optimization: The Image component extends the native HTML img element and allows for faster page loads and size optimizations This means that images will only load when they enter the viewport and the Image component will automatically serve correctly sized images for each device",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 14,
    "total_chunks": 36
  },
  {
    "id": "6ee203818de11a49284711e6d6cd7f39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a custom request handler: ```js export async function GET() { const res = await fetch(\"https://example-api com\"); const data = await res json(); return Response json({ data }); } ``` Next js Image Optimization: The Image component extends the native HTML img element and allows for faster page loads and size optimizations This means that images will only load when they enter the viewport and the Image component will automatically serve correctly sized images for each device```jsx\nimport Image from \"next/image\";\nexport default function Page() {\nreturn (\n);\n}\n```\nProp Drilling\nDefinition: Prop drilling is the process of passing props from a parent component to deeply nested child components, even when some of the child components don't need the props State Management\nContext API: Context refers to when a parent component makes information available to child components without needing to pass it explicitly through props createContext is used to create a context object which represent the context that other components will read The Provider is used to supply context values to the child components ```js\nimport { useState, createContext } from \"react\";\nconst CounterContext = createContext();\nconst CounterProvider = ({ children }) => {\nconst [count, setCount] = useState(0);\nreturn (\n{children}\n);\n};\nexport { CounterContext, CounterProvider };\n```\nRedux: Redux handles state management by providing a central store and strict control over state updates It uses a predictable pattern with actions, reducers, and middleware Actions are payloads of information that send data from your application to the Redux store, often triggered by user interactions Reducers are functions that specify how the state should change in response to those actions, ensuring the state is updated in an immutable way Middleware, on the other hand, acts as a bridge between the action dispatching and the reducer, allowing you to extend Redux's functionality (e g , logging, handling async operations) without modifying the core flow Zustand: This state management solution is ideal for small to medium-scale applications It works by using a useStore hook to access state directly in components and pages This lets you modify and access data without needing actions, reducers, or a provider Debugging React Components Using the React DevTools\nReact Developer Tools: This is a browser extension you can use in Chrome, Firefox and Edge to inspect React components and identify performance issues For Safari, you will need to install the react-devtools npm package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 15,
    "total_chunks": 36
  },
  {
    "id": "ef3136baf9f0bc8236ecaabe8b87afce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for small to medium-scale applications It works by using a useStore hook to access state directly in components and pages This lets you modify and access data without needing actions, reducers, or a provider Debugging React Components Using the React DevTools React Developer Tools: This is a browser extension you can use in Chrome, Firefox and Edge to inspect React components and identify performance issues For Safari, you will need to install the react-devtools npm packageAfter installing React DevTools and opening a React app in the browser, open the browser developer tools to access the two extra tabs provided for debugging React – Components and Profiler Components Tab: This tab displays each component for you in a tree view format Here are some things you can do in this tab:\nview the app's component hierarchy\ncheck and modify props, states, and context values in real time\ncheck the source code for each selected component\nlog the component data to the console\ninspect the DOM elements for the component\nProfiler Tab: This tab helps you analyze component performance You can record component performance so you can identify unnecessary re-renders, view commit durations, and subsequently optimize slow components React Server Components\nDefinition: React Server Components are React components that render exclusively on the server, sending only the final HTML to the client This means those components can directly access server-side resources and dramatically reduce the amount of JavaScript sent to the browser Differences Between Real and Perceived Performance\nPerceived Performance: This is how users perceive the performance of a website It's how they evaluate it in terms of responsiveness and reliability This is a subjective measurement, so it's hard to quantify it, but it's very important, since the user experience determines the success or failure of a website Real Performance: This is the objective and measurable performance of the website It's measured using metrics like page load time, server response time, and rendering time These measurements are influenced by multiple factors related to the network and to the code itself Techniques for Improving Perceived Performance\nLazy Loading: This technique reduces the initial load time as much as possible by loading non-essential resources in the background Minimize Font Delays: If your website has custom fonts, you should also try to minimize font loading delays, since this may result in flickering or in showing the fallback font while the custom font is being loaded A suggestion for this is using a fallback font that is similar to the custom font, so in case this happens, the change will be more subtle",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 16,
    "total_chunks": 36
  },
  {
    "id": "0feac8232c1c3f0e43ef39010d729d7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "time as much as possible by loading non-essential resources in the background Minimize Font Delays: If your website has custom fonts, you should also try to minimize font loading delays, since this may result in flickering or in showing the fallback font while the custom font is being loaded A suggestion for this is using a fallback font that is similar to the custom font, so in case this happens, the change will be more subtleUse of Loading Indicators: Showing a loading indicator for a long-running process as soon as the user clicks on an element can help the user feel connected and engaged with the process, making the wait time feel shorter Core Performance Concepts\nSource order: This refers to the way HTML elements are structured in the document This determines what loads first and can significantly impact performance and accessibility Some best practices for source order include:\nPlacing critical content such as headings, navigation or main text higher in the HTML structure Deferring non-essential scripts such as ones for analytics, or third-party widgets, so they don't block rendering Using progressive enhancement, to ensure the core experience works even before styles and scripts load Progressive enhancement is a way of building websites and applications based on the idea that you should make your page work with HTML first Here is an example of good source order, using the best practices we just went through:\n```html\nWelcome to FastSite Critical information loads first ```\nCritical Rendering Path: This is the sequence of steps the browser follows to convert code into pixels on the screen Latency: This is the time it takes for a request to travel between the browser and the server So in other words, high latency equals slow pages Some ways of reducing latency include:\nUsing CDNs, or Content Delivery Networks, to serve files from closer locations Enabling compression using things such as Gzip to reduce file sizes Optimizing images and using lazy loading html\n<img src=\"placeholder jpg\" data-src=\"real-image jpg\" loading=\"lazy\">\nImproving INP\nDefinition: INP (Interaction to Next Paint) assesses a page's overall responsiveness by measuring the time from when a user interacts, like a click or key press, to the next time the browser updates the display A lower INP indicates a more responsive page Here are some ways to improve INP:\nReduce main thread work by breaking up long JavaScript tasks Use requestIdleCallback() for non-critical scripts This will queue a function to be called during a browser's idle periods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 17,
    "total_chunks": 36
  },
  {
    "id": "2d7f66c271be5bfdf481c5fa1307dfaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(Interaction to Next Paint) assesses a page's overall responsiveness by measuring the time from when a user interacts, like a click or key press, to the next time the browser updates the display A lower INP indicates a more responsive page Here are some ways to improve INP: Reduce main thread work by breaking up long JavaScript tasks Use requestIdleCallback() for non-critical scripts This will queue a function to be called during a browser's idle periodsDefer or lazy-load heavy assets which were covered earlier Optimize event handlers If these handlers run too frequently or perform heavy operations, they can slow down the page and increase INP The solution for this is debouncing Debouncing ensures that the function only runs after the user stops typing for a short delay - so for example 300ms This prevents unnecessary calculations and improves performance How Rendering Works in the Browser\nHow Rendering works: First the browser parses the HTML and builds the DOM Next, the browser processes the CSS, constructing the CSS Object Model, or CSSOM This is another tree structure that dictates how elements should be styled Finally, the browser paints the pixels to the screen, rendering each element based on the calculated styles and layout In complex pages, this might involve multiple layers that are composited together to form the final visual output How Performance Impacts Sustainability\nBackground Information: The internet accounts for around 2% of global carbon emissions—that's the same as the airline industry Every byte transferred requires electricity, from data centers to user devices Larger files and inefficient scripts mean more power consumption A high-performance website isn't just faster, it also reduces unnecessary processing and energy use Ways to Reduce Page Loading Times\nOptimize Media Assets: Large images and videos are common culprits for slow load times By optimizing these assets, you can significantly speed up your site This includes things like compressing images, using modern formats like WebP and using lazy loading for assets Leverage Browser Caching: Caching allows browsers to store parts of your website locally, reducing load times for returning visitors Minify and Compress Files: Reducing the size of your files can lead to quicker downloads This includes reducing the size of transmitted files and minifying CSS and JavaScript files Improving \"time to usable\"\nDefinition: \"time to usable\" is the interval from when a user requests a page to when they can meaningfully interact with it To improve \"time to usable\" you can lazy load your asset or minimize render-blocking resources",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 18,
    "total_chunks": 36
  },
  {
    "id": "72e749d4642dbeb3705e6864286eb32f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "reducing load times for returning visitors Minify and Compress Files: Reducing the size of your files can lead to quicker downloads This includes reducing the size of transmitted files and minifying CSS and JavaScript files Improving \"time to usable\" Definition: \"time to usable\" is the interval from when a user requests a page to when they can meaningfully interact with it To improve \"time to usable\" you can lazy load your asset or minimize render-blocking resourcesKey Metrics for Measuring Performance\nFirst Contentful Paint or FCP: It measures how quickly the first piece of content—text or image—appears on the screen A good FCP is regarded as a time below 1 8 seconds, and a poor FCP is above 3 seconds You can check your FCP using Chrome DevTools and checking the performance tab Total Blocking Time: This shows how long the main thread is blocked by heavy JavaScript tasks If Total Blocking Time (TBT) is high, users experience sluggish interactions To improve TBT, break up long tasks and defer non-essential scripts Bounce Rate: This is the percentage of visitors who leave without interacting If your site has high bounce rates it might be because your page is too slow Unique Users: This metric tracks how many individual visitors come to your site To view the Bounce Rate and Unique Users, you can use Google Analytics It will allow you to monitor these metrics and improve engagement Common Performance Measurement Tools\nChrome DevTools: Chrome DevTools is a built-in tool inside Google Chrome that lets you analyze and debug performance in real-time DevTools will show loading times, CPU usage, and render delays It's especially useful for measuring First Contentful Paint, or FCP, is how fast a user sees the first visible content If your website feels slow, DevTools will help you spot the bottlenecks Lighthouse: This is an automated tool that checks performance, SEO, and accessibility WebPageTest: This tool lets you test how your site loads from different locations and devices This tool gives you a detailed breakdown of your site's Speed Index, Total Blocking Time, and other key performance metrics If you want to know how real users experience your site globally, WebPageTest is the tool for that PageSpeed Insights: This tool analyzes your website and suggests quick improvements for both mobile and desktop It will tell you what's slowing your site down and give specific recommendations like optimizing images, removing render-blocking scripts, and reducing server response times",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 19,
    "total_chunks": 36
  },
  {
    "id": "5cf04211eac4e64653782aa8c213c331",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "gives you a detailed breakdown of your site's Speed Index, Total Blocking Time, and other key performance metrics If you want to know how real users experience your site globally, WebPageTest is the tool for that PageSpeed Insights: This tool analyzes your website and suggests quick improvements for both mobile and desktop It will tell you what's slowing your site down and give specific recommendations like optimizing images, removing render-blocking scripts, and reducing server response timesPageSpeed Insights is a fast and easy way to check how Google sees your site's performance Real User Monitoring: RUM tools track actual user behavior, showing how real visitors experience your site Popular RUM tools include Google Analytics, which tracks page load times and bounce rates, and New Relic or Datadog, which monitor real-time performance issues If you want data from actual users, RUM tools are essential Working with Performance Web APIs\nDefinition: Performance Web APIs let developers track how efficiently a webpage loads and responds directly in the code These APIs allow you to measure page load times, track rendering and interaction delays and analyze JavaScript execution time performance now(): This API gives you high-precision timestamps (in milliseconds) to measure how long different parts of your site take to load ```js\nconst start = performance now();\n// Run some code here\nconst end = performance now();\nconsole log(Execution time: ${end - start}ms);\n```\nPerformance Timing API: This API gives you a breakdown of every stage of page loading, from DNS lookup to DOMContentLoaded ```js\nconst timing = performance timing;\nconst pageLoadTime = timing loadEventEnd - timing navigationStart;\nconsole log(Page load time: ${pageLoadTime}ms);\n```\nPerformanceObserver: This API listens for performance events such as layout shifts, long tasks, and user interactions ``js\nconst observer = new PerformanceObserver((list) => {\nlist getEntries() forEach((entry) => {\nconsole log(Long task detected: ${entry duration}ms`);\n});\n});\nobserver observe({ type: \"longtask\", buffered: true });\n```\nTechniques for Improving CSS Performance\nCSS Animations: Animating certain CSS properties, such as dimensions, position, and layout, triggers a process called \"reflow\", during which the browser recalculates the position and geometry of certain elements on the page This requires a repaint, which is computationally expensive",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 20,
    "total_chunks": 36
  },
  {
    "id": "b210a091a58c4a66f7fd22553b481056",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "user interactions ``js const observer = new PerformanceObserver((list) => { list getEntries() forEach((entry) => { console log(Long task detected: ${entry duration}ms`); }); }); observer observe({ type: \"longtask\", buffered: true }); ``` Techniques for Improving CSS Performance CSS Animations: Animating certain CSS properties, such as dimensions, position, and layout, triggers a process called \"reflow\", during which the browser recalculates the position and geometry of certain elements on the page This requires a repaint, which is computationally expensiveTherefore, it's recommended to reduce the number of CSS animations as much as possible or at least give the user an option to toggle them on or off Techniques for Improving JavaScript Performance\nCode Splitting: Splitting your JavaScript code into modules that perform critical and non-critical tasks is also helpful This way, you'll be able to preload the critical ones as soon as possible and defer the non-critical ones to render the page as fast as possible DOM Manipulation: Remember that DOM Manipulation refers to the process of dynamically changing the content of a page with JavaScript by interacting with the Document Object Model (DOM) Manipulating the DOM is computationally expensive By reducing the amount of DOM manipulation in your JavaScript code will improve performance CSS Frameworks\nCSS frameworks: CSS frameworks can speed up your workflow, create a uniform visual style across a website, make your design look consistent across multiple browsers, and keep your CSS code more organized Popular CSS frameworks: Some of the popular CSS frameworks are Tailwind CSS, Bootstrap, Materialize, and Foundation Potential disadvantages:\nThe CSS provided by the framework might conflict with your custom CSS Your website might look similar to other websites using the same framework Large frameworks might cause performance issues Two Types of CSS Frameworks\nUtility-first CSS frameworks: These frameworks have small classes with specific purposes, like setting the margin, padding, or background color You can assign these small classes directly to the HTML elements as needed Tailwind CSS is categorized as a utility-first CSS framework Here is an example of using Tailwind CSS to style a button html\n<button class=\"bg-blue-500 text-white font-bold py-2 px-4 rounded-full hover:bg-blue-700\">\nButton\n</button>\nComponent-based CSS frameworks: These frameworks have pre-built components with pre-defined styles that you can add to your website The components are available in the official documentation of the CSS framework, and you can copy and paste them into your project",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 21,
    "total_chunks": 36
  },
  {
    "id": "86811f7b5c4e15b505976b284e1ffd92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "HTML elements as needed Tailwind CSS is categorized as a utility-first CSS framework Here is an example of using Tailwind CSS to style a button html <button class=\"bg-blue-500 text-white font-bold py-2 px-4 rounded-full hover:bg-blue-700\"> Button </button> Component-based CSS frameworks: These frameworks have pre-built components with pre-defined styles that you can add to your website The components are available in the official documentation of the CSS framework, and you can copy and paste them into your projectBootstrap is categorized as a component-based CSS framework Here is an example of using Bootstrap to create a list group Instead of applying small classes to your HTML elements, you will add the entire component, including the HTML structure ```html\nHTML\nCSS\nJavaScript\n```\nCSS Preprocessors\nCSS preprocessor: A CSS preprocessor is a tool that extends standard CSS It compiles the code with extended syntax into a native CSS file It can be helpful for writing cleaner, reusable, less repetitive, and scalable CSS for complex projects Features: Some of the features that can be provided by CSS preprocessors are variables, mixins, nesting, and selector inheritance Popular CSS preprocessors: Some of the popular CSS preprocessors are Sass, Less, and Stylus Potential disadvantages:\nCompiling the CSS rules into standard CSS might cause overhead The compiled code may be difficult to debug Sass\nSass: It is one of the most popular CSS preprocessors Sass stands for \"Syntactically Awesome Style Sheets \"\nFeatures supported by Sass: Sass supports features like variables, nested CSS rules, modules, mixins, inheritance, and operators for basic mathematical operations\nTwo Syntaxes Supported by Sass\nSCSS syntax: The SCSS (Sassy CSS) expands the basic syntax of CSS It is the most widely used syntax for Sass SCSS files have an scss extension Here is an example of defining and using a variable in SCSS ```scss\n$primary-color: #3498eb;\nheader {\nbackground-color: $primary-color;\n}\n```\nIndented syntax: The indented syntax was Sass's original syntax and is also known as the \"Sass syntax \"\nHere is an example of defining and using a variable in the indented syntax",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 22,
    "total_chunks": 36
  },
  {
    "id": "4f842b7443a7df9f6d9c54f6e0e6bbdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(Sassy CSS) expands the basic syntax of CSS It is the most widely used syntax for Sass SCSS files have an scss extension Here is an example of defining and using a variable in SCSS ```scss $primary-color: #3498eb; header { background-color: $primary-color; } ``` Indented syntax: The indented syntax was Sass's original syntax and is also known as the \"Sass syntax \" Here is an example of defining and using a variable in the indented syntax```sass\n$primary-color: #3498eb\nheader\nbackground-color: $primary-color\n```\nMixins\nMixins: Mixins allow you to group multiple CSS properties and their values under the name and reuse that block of CSS code throughout your stylesheet Here is an example of defining a mixin in SCSS syntax In this case, the mixin is called center-flex It has three CSS properties to center elements using flexbox scss\n@mixin center-flex {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\nHere is an example of using the mixin you defined scss\nsection {\n@include center-flex;\nheight: 500px;\nbackground-color: #3289a8;\n}\nManual and Automated Testing\nManual Testing: In manual testing, a tester will manually go through each part of the application and test out different features to make sure it works correctly If any bugs are uncovered in the testing process, the tester will report those bugs back to the software team so they can be fixed Automated Testing: In automated testing, you can automate your tests by writing a separate program that checks whether your application behaves as expected Unit Testing\nUnit Testing: In unit testing, you test each function to ensure that everything is working as expected Unit tests can also serve as a form of documentation for your application because they are meant to represent the expected behavior for your code Single Responsibility Principle: The single responsibility principle recommends keeping each function small and responsible for one thing Common JavaScript Testing Frameworks: Some common testing frameworks include Jest, Mocha, and Vitest Jest is a popular testing framework for unit tests Here is an example of unit tests using Jest First, you can create a function that is responsible for returning a newly formatted string:\njavascript\nexport function getFormattedWord(str) {\nif ( str) return '';\nreturn str charAt(0) toUpperCase() + str slice(1);\n}\nIn a separate getFormattedWord test",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 23,
    "total_chunks": 36
  },
  {
    "id": "0058cb287b61898e4381d2564c23542e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "function small and responsible for one thing Common JavaScript Testing Frameworks: Some common testing frameworks include Jest, Mocha, and Vitest Jest is a popular testing framework for unit tests Here is an example of unit tests using Jest First, you can create a function that is responsible for returning a newly formatted string: javascript export function getFormattedWord(str) { if ( str) return ''; return str charAt(0) toUpperCase() + str slice(1); } In a separate getFormattedWord testjs file, you can write some tests to verify that the function is working as expected The getFormattedWord test js file will look like this:\n```javascript\nimport { getFormattedWord } from \" /getFormattedWord js\";\nimport { test, expect } from \"jest\";\ntest('capitalizes the first letter of a word', () => {\nexpect(getFormattedWord('hello')) toBe('Hello');\n});\n```\nexpect Function: The expect function is used to test a value Matcher: Matcher is a function that checks whether the value behaves as expected In the above example, the matcher is toBe() Jest has a variety of matchers To use Jest, you first need to install the jest package by using npm i jest You will also need to add a script to your package json file like this:\njs\n\"scripts\": {\n\"test\": \"jest\"\n},\nThen, you can run the command npm run test to run your tests Software Development Lifecycle\nDifferent Stages of Software Development Lifecycle:\nPlanning Stage: The development team collects requirements for the proposed work from the stakeholders Design Stage: The software team breaks down the requirements and decides on the best approaches for solutions Implementation Stage: The software team breaks down the requirements into manageable tasks and implements them Testing Stage: This involves manual and automated testing for the new work Sometimes, the team tests out the application throughout the entire development stage to catch and fix any issues that come up Deployment Stage: The team deploys the new changes to a build or testing environment Maintenance Stage: This involves fixing any issues that arise from customers in the production application Different Models of the Software Development Lifecycle:\nWaterfall Model: The Waterfall model is where each phase of the lifecycle needs to be completed before the next phase can begin Agile Model: The Agile model focuses on iterative development by breaking down work into sprints BDD and TDD\nTDD: Test-driven development is a methodology that emphasizes writing tests first",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 24,
    "total_chunks": 36
  },
  {
    "id": "2a6739b6e81f189ac395fde2378c06c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "or testing environment Maintenance Stage: This involves fixing any issues that arise from customers in the production application Different Models of the Software Development Lifecycle: Waterfall Model: The Waterfall model is where each phase of the lifecycle needs to be completed before the next phase can begin Agile Model: The Agile model focuses on iterative development by breaking down work into sprints BDD and TDD TDD: Test-driven development is a methodology that emphasizes writing tests firstWriting tests before building out features provides real-time feedback to developers during the development process BDD: Behavior-driven development is the approach of aligning a series of tests with business goals The test scenarios in BDD should be written in a language that can be understood by both technical and non-technical individuals An example of such syntax is Gherkin BDD Testing Frameworks: Examples of BDD testing frameworks include Cucumber, JBehave, and SpecFlow Assertions in Unit Testing\nAssertion: Assertions are used to test that the code is behaving as expected Assertion Libraries: Chai is a commonly used assertion library Other common JavaScript assertion libraries are should js and expect js Here is an example of an assertion using Chai that checks that the return value from the addThreeAndFour function is equal to the number 7:\njs\nassert equal(addThreeAndFour(), 7);\nBest Practices: Regardless of which assertion library you use, you should write clear assert and failure messages that will help you understand which tests are failing and why Mocking, Faking, and Stubbing\nMocking: Mocking is the process of replacing real data with false data that simulates the behavior of real components For example, you could mock the API response in testing instead of making continuous API calls to fetch the data Stubbing: Stubs are objects that return pre-defined responses or dummy data for an expected behavior in an application For example, you can stub the behavior for a database connection in your tests without having to rely on an actual database connection Faking: Fakes are simplified versions of real components without the complexity or side effects For example, you can fake a database by storing the data in memory instead of interacting with the real database This will allow you to mimic database operations in memory, which will be much faster than dealing with the real database Functional Testing\nFunctional Testing: Functional testing checks if the features and functions of the application work as expected The goal of functional testing is to test the system as a whole against multiple scenarios",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 25,
    "total_chunks": 36
  },
  {
    "id": "02fdc590e7e7dd8a301ea80f01741f38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "effects For example, you can fake a database by storing the data in memory instead of interacting with the real database This will allow you to mimic database operations in memory, which will be much faster than dealing with the real database Functional Testing Functional Testing: Functional testing checks if the features and functions of the application work as expected The goal of functional testing is to test the system as a whole against multiple scenariosNon-Functional Testing: Non-functional testing focuses on things like performance and reliability Smoke testing: Smoke testing is a preliminary check on the system for basic or critical issues before beginning more extensive testing End-to-End Testing\nEnd-to-End Testing: End-to-end testing, or E2E, tests real-world scenarios from the user's perspective End-to-end tests help ensure that your application behaves correctly and is predictable for users However, it is time-consuming to set up, design, and maintain End-to-End Testing Frameworks: Playwright is a popular end-to-end testing framework developed by Microsoft Other examples of end-to-end testing tools include Cypress, Selenium, and Puppeteer Here is an example of E2E tests from the freeCodeCamp codebase using Playwright The beforeEach hook will run before each of the tests The tests check that the donor has a supporter link in the menu bar, as well as a special stylized border around their avatar:\n```js\ntest beforeEach(async ({ page }) => {\nexecSync(\"node /tools/scripts/seed/seed-demo-user --set-true isDonating\");\nawait page goto(\"/donate\");\n}); test(\"The menu should have a supporters link\", async ({ page }) => {\nconst menuButton = page getByTestId(\"header-menu-button\");\nconst menu = page getByTestId(\"header-menu\");\nawait expect(menuButton) toBeVisible();\nawait menuButton click();\nawait expect(menu) toBeVisible();\nawait expect(page getByRole(\"link\", { name: \"Supporters\" })) toBeVisible();\n});\ntest(\"The Avatar should have a special border for donors\", async ({ page }) => {\nconst container = page locator(\" avatar-container\");\nawait expect(container) toHaveClass(\"avatar-container gold-border\");\n});\n```\nUsability Testing\nUsability Testing: Usability testing is when you have real users interacting with the application to discover if there are any design, user experience, or functionality issues in the app Usability testing focuses on the intuitiveness of the application by users",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 26,
    "total_chunks": 36
  },
  {
    "id": "6e784ff0dd3e5759fe99f5ce0f6146fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "getByRole(\"link\", { name: \"Supporters\" })) toBeVisible(); }); test(\"The Avatar should have a special border for donors\", async ({ page }) => { const container = page locator(\" avatar-container\"); await expect(container) toHaveClass(\"avatar-container gold-border\"); }); ``` Usability Testing Usability Testing: Usability testing is when you have real users interacting with the application to discover if there are any design, user experience, or functionality issues in the app Usability testing focuses on the intuitiveness of the application by usersFour Common Types of Usability Testing:\nExplorative: Explorative usability testing involves users interacting with the different features of the application to better understand how they work Comparative: Comparative testing is where you compare your application's user experience with similar applications in the marketplace Assessment: Assessment testing is where you study how intuitive the application is to use Validation: Validation testing is where you identify any major issues that will prevent the user from using the application effectively Usability Testing Tools: Examples of tools for usability testing include Loop11, Maze, Userbrain, UserTesting, and UXTweak Compatibility Testing\nCompatibility Testing: The goal of compatibility testing is to ensure that your application works in different computing environments Different Types of Compatibility Testing:\nBackwards Compatibility: Backwards compatibility refers to when the software is compatible with earlier versions Forwards Compatibility: Forwards compatibility refers to when the software and systems will work with future versions Hardware Compatibility: Hardware compatibility is the software's ability to work properly in different hardware configurations Operating Systems Compatibility: Operating systems compatibility is the software's ability to work on different operating systems, such as macOS, Windows, and Linux distributions like Ubuntu and Fedora Network Compatibility: Network compatibility means the software can work in different network conditions, such as different network speeds, protocols, security settings, etc Browser Compatibility: Browser compatibility means the web application can work consistently across different browsers, such as Google Chrome, Safari, Firefox, etc Mobile Compatibility: It is important to ensure that your software applications work on a variety of Android and iOS devices, including phones and tablets Performance Testing\nPerformance Testing: In performance testing, you test an application's speed, responsiveness, scalability, and stability under different workloads The goal is to resolve any type of performance bottleneck Different Types of Performance Testing:\nLoad Testing: Load testing determines how a system behaves during normal and peak load times",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 27,
    "total_chunks": 36
  },
  {
    "id": "3ec8111d03f230afcf77c2d2ced3a98e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Safari, Firefox, etc Mobile Compatibility: It is important to ensure that your software applications work on a variety of Android and iOS devices, including phones and tablets Performance Testing Performance Testing: In performance testing, you test an application's speed, responsiveness, scalability, and stability under different workloads The goal is to resolve any type of performance bottleneck Different Types of Performance Testing: Load Testing: Load testing determines how a system behaves during normal and peak load timesStress Testing: Stress testing is where you test your application in extreme loads and see how well your system responds to the higher load Soak Testing (Endurance Testing): Soak testing or endurance testing is a type of load testing where you test the system with a higher load for an extended period of time Spike Testing: Spike testing is where you dramatically increase and decrease the loads and analyze the system's reactions to the changes Breakpoint Testing (Capacity Testing): Breakpoint testing or capacity testing is where you slowly increment the load over time to the point where the system starts to fail or degrade Security Testing\nSecurity Testing: Security testing helps identify vulnerabilities and weaknesses Security Principles:\nConfidentiality: This protects against the release of sensitive information to other recipients that aren't the intended recipient Integrity: This involves preventing malicious users from modifying user information Authentication: This involves verifying the user's identity to ensure that they are allowed to use that system Authorization: This is the process of determining what actions authenticated users are allowed to perform or which parts of the system they are permitted to access Availability: This ensures that information and services are available to authorized users when they need it Non-Repudiation: This ensures that both the sender and recipient have proof of delivery and verification of the sender's identity It protects against the sender denying having sent the information Common Security Threats:\nCross-Site Scripting (XSS): XSS attacks happen when an attacker injects malicious scripts into a web page and then executes them in the context of the victim's browser SQL Injection: SQL injection allows malicious users to inject malicious code into a database Denial-of-Service (DoS) Attack: DoS attack is when malicious users flood a website with a high number of requests or traffic, causing the server to slow down and possibly crash, making the site unavailable to users Categories of Security Testing Tools:\nStatic Application Security Testing: These tools evaluate the source code for an application to identify security vulnerabilities Dynamic Application Security Testing: These tools interface with the application's frontend to uncover potential security weaknesses",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 28,
    "total_chunks": 36
  },
  {
    "id": "62454b6a1aa1d498832ac83c11fa5b92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "into a database Denial-of-Service (DoS) Attack: DoS attack is when malicious users flood a website with a high number of requests or traffic, causing the server to slow down and possibly crash, making the site unavailable to users Categories of Security Testing Tools: Static Application Security Testing: These tools evaluate the source code for an application to identify security vulnerabilities Dynamic Application Security Testing: These tools interface with the application's frontend to uncover potential security weaknessesDAST tools do not have access to the source code Penetration Testing (pentest): Penetration testing is a type of security testing that involves creating simulated cyberattacks on the application to identify any vulnerabilities in the system A/B Testing\nA/B Testing: A/B testing involves comparing two versions of a page or application and studying which version performs better It is also known as bucket or split testing A/B testing allows you to make more data-driven decisions and continually improve the user experience Tools for A/B Testing: Examples of tools to use for A/B testing include GrowthBook and LaunchDarkly Alpha and Beta Testing\nOnce the initial development and software testing are complete, it is important to have the application tested by testers and real users This is where alpha and beta testing come in Alpha Testing: Alpha testing is done by a select group of testers who go through the application to ensure there are no bugs before it is released into the marketplace Alpha testing is part of acceptance testing and utilizes both white and black box testing techniques Beta Testing: Beta testing is where the application is made available to real users Users can interact with the application and provide feedback Beta testing is also a form of user acceptance testing Acceptance Testing: Acceptance testing ensures that the software application meets the business requirements and the needs of users before its release Black Box Testing: Black box testing only focuses on the expected behavior of the application White Box Testing: White box testing involves the tester knowing the internal components and performing tests on them Regression Testing\nRegression: Regression refers to situations where new changes unintentionally break existing functionality Regression Testing: Regression testing helps catch regression issues In regression testing, you re-run functional tests against parts of your application to ensure that everything still works as expected Tools for Regression Testing: Tools that you can use to perform regression testing include Puppeteer, Playwright, Selenium, and Cypress Techniques for Regression Testing:\nUnit Regression Testing: This is where you have a list of items that need to be tested each time major changes or fixes are implemented into the app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 29,
    "total_chunks": 36
  },
  {
    "id": "822a364368989b949fa8aafe4f112ead",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "testing helps catch regression issues In regression testing, you re-run functional tests against parts of your application to ensure that everything still works as expected Tools for Regression Testing: Tools that you can use to perform regression testing include Puppeteer, Playwright, Selenium, and Cypress Techniques for Regression Testing: Unit Regression Testing: This is where you have a list of items that need to be tested each time major changes or fixes are implemented into the appPartial Regression Testing: This involves targeted approaches to ensure that new changes have not broken specific aspects of the application Complete Regression Testing: This runs tests against all the functionalities in the codebase This is the most time-consuming and detailed option Retesting: Retesting is used to check for known issues and ensure that they have been resolved In contrast, regression testing searches for unknown issues that might have occurred through recent changes in the codebase What is TypeScript\nJavaScript: JavaScript is a dynamically-typed language This means that variables can receive any values at run time The challenge of a dynamically-typed language is that the lack of type safety can introduce errors For example, even if your JavaScript function expects an array, you can still call it with a number:\n```javascript\nconst getRandomValue = (array) => {\nreturn array[Math floor(Math random() * array length)];\n}\nconsole log(getRandomValue(10));\n```\nThe console output for the example above will be undefined TypeScript: TypeScript extends the JavaScript language to include static typing, which helps catch errors caused by type mismatches before you run your code For example, you can define a type for the array parameter as follows:\ntypescript\nconst getRandomValue = (array: string[]) => {\nreturn array[Math floor(Math random() * array length)];\n}\nThis type definition tells TypeScript that the array parameter must be an array of strings Then, when you call getRandomValue and pass it a number, you get an error called a compiler error Compiler: You first need to compile TypeScript code into regular JavaScript When you run the compiler, TypeScript will evaluate your code and throw an error for any issues where the types don't match Data Types in TypeScript\nPrimitive Data Types in TypeScript: For the primitive data types string, null, undefined, number, boolean, and bigint, TypeScript offers corresponding type keywords",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 30,
    "total_chunks": 36
  },
  {
    "id": "8aa0667336d501362382186b225adf87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "when you call getRandomValue and pass it a number, you get an error called a compiler error Compiler: You first need to compile TypeScript code into regular JavaScript When you run the compiler, TypeScript will evaluate your code and throw an error for any issues where the types don't match Data Types in TypeScript Primitive Data Types in TypeScript: For the primitive data types string, null, undefined, number, boolean, and bigint, TypeScript offers corresponding type keywordstypescript\nlet str: string = \"Naomi\";\nlet num: number = 42;\nlet bool: boolean = true;\nlet nope: null = null;\nlet nada: undefined = undefined;\nArray: You can define an array of specific type with two different syntaxes typescript\nconst arrOne: string[] = [\"Naomi\"];\nconst arrTwo: Array<string> = [\"Camperchan\"];\nObjects: You can define the exact structure of an object typescript\nconst obj: { a: string, b: number } = { a: \"Naomi\", b: 42 };\nIf you want an object with any keys, but where all values must be strings, there are two ways to define it:\ntypescript\nconst objOne: Record<string, string> = {};\nconst objTwo: { [key: string]: string } = {};\nOther Helpful Types in TypeScript:\nany: any indicates that a value can have any type It tells the compiler to stop caring about the type of that variable unknown: unknown tells TypeScript that you do care about the type of the value, but you don’t actually know what it is unknown is generally preferred over any void: This is a special type that you’ll typically only use when defining functions Functions that don’t have a return value use a return type of void never: It represents a type that will never exist type Keyword: This keyword is like const, but instead of declaring a variable, you can declare a type It is useful for declaring custom types such as union types or types that include only specific values:\ntypescript\ntype stringOrNumber = string | number;\ntype bot = \"camperchan\" | \"camperbot\" | \"naomi\";\ninterface: Interfaces are like classes for types They can implement or extend other interfaces, are specifically object types, and are generally preferred unless you need a specific feature offered by a type declaration",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 31,
    "total_chunks": 36
  },
  {
    "id": "12cda8ad1ec2d7686a7dd2cc2a6c49b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "instead of declaring a variable, you can declare a type It is useful for declaring custom types such as union types or types that include only specific values: typescript type stringOrNumber = string | number; type bot = \"camperchan\" | \"camperbot\" | \"naomi\"; interface: Interfaces are like classes for types They can implement or extend other interfaces, are specifically object types, and are generally preferred unless you need a specific feature offered by a type declarationtypescript\ninterface wowie {\nzowie: boolean;\nmethod: () => void;\n}\nDefining Return Type: You can also define the return type of the function The example below defines the return value as a string If you try to return anything else, TypeScript will give a compiler error typescript\nconst getRandomValue = (array: string[]): string => {\nreturn array[Math floor(Math random() * array length)];\n}\nGenerics\nDefining Generic Type: You can define a generic type and refer to it in your function It can be thought of as a special parameter you provide to a function to control the behavior of the function's type definition Here is an example of defining a generic type for a function:\ntypescript\nconst getRandomValue = <T>(array: T[]): T => {\nreturn array[Math floor(Math random() * array length)];\n}\nconst val = getRandomValue([1, 2, 4])\nThe <T> syntax tells TypeScript that you are defining a generic type T for the function T is a common name for generic types, but you can use any name Then, you tell TypeScript that the array parameter is an array of values matching the generic type, and that the returned value is a single element of that same type Specifying Type Argument in Function Call: You can pass a type argument to a function call using angle brackets between the function name and its parameters Here is an example of passing a type argument to a function call:\ntypescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email value);\nThis tells TypeScript that the element you expect to find will be an input element Type Narrowing\nNarrowing by Truthiness: In the example below, you get a compiler error trying to access the value property of email because email might be null typescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 32,
    "total_chunks": 36
  },
  {
    "id": "276d530a22607273548637a46d3e2e86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name and its parameters Here is an example of passing a type argument to a function call: typescript const email = document querySelector<HTMLInputElement>(\"#email\"); console log(email value); This tells TypeScript that the element you expect to find will be an input element Type Narrowing Narrowing by Truthiness: In the example below, you get a compiler error trying to access the value property of email because email might be null typescript const email = document querySelector<HTMLInputElement>(\"#email\"); console log(emailvalue);\nYou can use a conditional statement to confirm email is truthy before accessing the property:\ntypescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nif (email) {\nconsole log(email value);\n}\nTruthiness checks can also work in the reverse direction:\ntypescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nif ( email) {\nthrow new ReferenceError(\"Could not find email element \")\n}\nconsole log(email value);\nThrowing an error ends the logical execution of this code, which means when you reach the console log() call, TypeScript knows email cannot be null Optional Chaining: Optional chaining is also a form of type narrowing, under the same premise that the property access can't happen if the email value is null typescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email value);\ntypeof Operator: You can use a conditional to check the type of the variable using the typeof operator typescript\nconst myVal = Math random() > 0 5 222 : \"222\";\nif (typeof myVal === \"number\") {\nconsole log(myVal / 10);\n}\ninstanceof Keyword: If the object comes from a class, you can use the instanceof keyword to narrow the type ```typescript\nconst email = document querySelector(\"#email\");\nif (email instanceof HTMLInputElement) {\nconsole log(email value);\n}\n```\nCasting: When TypeScript cannot automatically determine the type of a value, such as the result from request json() method in the example below, you'll get a compiler error One way to resolve this is by casting the type, but doing so weakens TypeScript's ability to catch potential errors ```typescript\ninterface User {\nname: string;\nage: number;\n}\nconst printAge = (user: User) =>\nconsole log(${user name} is ${user age} years old )\nconst request = await fetch(\"url\")\nconst myUser = await request",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 33,
    "total_chunks": 36
  },
  {
    "id": "1843f5d7b06cc290f603e7d837640dd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the type of a value, such as the result from request json() method in the example below, you'll get a compiler error One way to resolve this is by casting the type, but doing so weakens TypeScript's ability to catch potential errors ```typescript interface User { name: string; age: number; } const printAge = (user: User) => console log(${user name} is ${user age} years old ) const request = await fetch(\"url\") const myUser = await requestjson() as User;\nprintAge(myUser);\n```\nType Guard: Instead of casting the type, you can write a type guard:\n```typescript\ninterface User {\nname: string;\nage: number;\n}\nconst isValidUser = (user: unknown): user is User => {\nreturn user &&\ntypeof user === \"object\" &&\n\"name\" in user &&\n\"age\" in user;\n}\n```\nThe user is User syntax indicates that your function returns a boolean value, which when true means the user value satisfies the User interface tsconfig File\ntsconfig json: TypeScript's compiler settings live in a tsconfig json file in the root directory of your project json\n{\n\"compilerOptions\": {\n\"rootDir\": \" /src\",\n\"outDir\": \" /prod\",\n\"lib\": [\"ES2023\"],\n\"target\": \"ES2023\",\n\"module\": \"ES2022\",\n\"moduleResolution\": \"Node\",\n\"esModuleInterop\": true,\n\"skipLibCheck\": true,\n\"strict\": true\n},\n\"exclude\": [\"test/\"]\n}\nHere are descriptions of the compiler options used in the example above:\ncompilerOptions: The compilerOptions property is where you control how the TypeScript compiler behaves rootDir and outDir: The rootDir and outDir tell TypeScript which directory holds your source files, and which directory should contain the transpiled JavaScript code lib: The lib property determines which type definitions the compiler uses, and allows you to include support for specific ES releases, the DOM, and more module and moduleResolution: The module and moduleResolution work in tandem to manage how your package uses modules - either CommonJS or ECMAScript esModuleInterop: The esModuleInterop allows for smoother interoperability between CommonJS and ES modules by automatically creating namespace objects for imports skipLibCheck: The skipLibCheck option skips validating d",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 34,
    "total_chunks": 36
  },
  {
    "id": "69f038955a9dd436d777f7339c4b1224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "transpiled JavaScript code lib: The lib property determines which type definitions the compiler uses, and allows you to include support for specific ES releases, the DOM, and more module and moduleResolution: The module and moduleResolution work in tandem to manage how your package uses modules - either CommonJS or ECMAScript esModuleInterop: The esModuleInterop allows for smoother interoperability between CommonJS and ES modules by automatically creating namespace objects for imports skipLibCheck: The skipLibCheck option skips validating dts files that aren't referenced by imports in your code strict: The strict flag enables several checks, such as ensuring proper handling of nullable types and warning when TypeScript falls back to any exclude: The top-level exclude property tells the compiler to ignore these TypeScript files during compilation --assignment--\nReview the Front End Libraries topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 75492,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-front-end-libraries\\6724e2dbf723fe1c8883cc69.md",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 35,
    "total_chunks": 36
  },
  {
    "id": "a6d16f4b58d6235ef126999c75724fd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-strings\\6723c1946e4cd7909a836bb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723c1946e4cd7909a836bb4\ntitle: JavaScript Strings Review\nchallengeType: 24\ndashedName: review-javascript-strings\n--description--\nString Basics\nDefinition: A string is a sequence of characters wrapped in either single quotes, double quotes or backticks Strings are primitive data types and they are immutable Immutability means that once a string is created, is cannot be changed Accessing Characters from a String: To access a character from a string you can use bracket notation and pass in the index number An index is the position of a character within a string, and it is zero-based js\nconst developer = \"Jessica\";\ndeveloper[0] // J\n\\n (Newline Character): You can create a newline in a string by using the \\n newline character js\nconst poem = \"Roses are red,\\nViolets are blue,\\nJavaScript is fun,\\nAnd so are you \";\nconsole log(poem);\nEscaping Strings: You can escape characters in a string by placing backlashes (\\) in front of the quotes js\nconst statement = \"She said, \\\"Hello \\\"\";\nconsole log(statement); // She said, \"Hello \"\nTemplate Literals (Template Strings) and String Interpolation\nDefinition: Template literals are defined with backticks (`) They allow for easier string manipulation, including embedding variables directly inside a string, a feature known as string interpolation js\nconst name = \"Jessica\";\nconst greeting = `Hello, ${name} `; // \"Hello, Jessica \"\nASCII, the charCodeAt() Method and the fromCharCode() Method\nASCII: ASCII, short for American Standard Code for Information Interchange, is a character encoding standard used in computers to represent text It assigns a numeric value to each character, which is universally recognized by machines The charCodeAt() Method: This method is called on a string and returns the ASCII code of the character at a specified index js\nconst letter = \"A\";\nconsole log(letter charCodeAt(0));  // 65\nThe fromCharCode() Method: This method converts an ASCII code into its corresponding character js\nconst char = String fromCharCode(65);\nconsole log(char);  // A\nOther Common String Methods\nThe indexOf Method: This method is used to search for a substring within a string If the substring is found, indexOf returns the index (or position) of the first occurrence of that substring",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-strings\\6723c1946e4cd7909a836bb4.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8ee2b8a471662d053ff4ee4d619f9772",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-strings\\6723c1946e4cd7909a836bb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the character at a specified index js const letter = \"A\"; console log(letter charCodeAt(0)); // 65 The fromCharCode() Method: This method converts an ASCII code into its corresponding character js const char = String fromCharCode(65); console log(char); // A Other Common String Methods The indexOf Method: This method is used to search for a substring within a string If the substring is found, indexOf returns the index (or position) of the first occurrence of that substringIf the substring is not found, indexOf returns -1, which indicates that the search was unsuccessful js\nconst text = \"The quick brown fox jumps over the lazy dog \";\nconsole log(text indexOf(\"fox\")); // 16\nconsole log(text indexOf(\"cat\")); // -1\nThe includes() Method: This method is used to check if a string contains a specific substring If the substring is found within the string, the method returns true Otherwise, it returns false js\nconst text = \"The quick brown fox jumps over the lazy dog \";\nconsole log(text includes(\"fox\")); // true\nconsole log(text includes(\"cat\")); // false\nThe slice() Method: This method extracts a portion of a string and returns a new string, without modifying the original string It takes two parameters: the starting index and the optional ending index js\nconst text = \"freeCodeCamp\";\nconsole log(text slice(0, 4));  // \"free\"\nconsole log(text slice(4, 8));  // \"Code\"\nconsole log(text slice(8, 12)); // \"Camp\"\nThe toUpperCase() Method: This method converts all the characters to uppercase letters and returns a new string with all uppercase characters js\nconst text = \"Hello, world \";\nconsole log(text toUpperCase()); // \"HELLO, WORLD \"\nThe toLowerCase() Method: This method converts all characters in a string to lowercase js\nconst text = \"HELLO, WORLD \"\nconsole log(text toLowerCase()); // \"hello, world \"\nThe replace() Method: This method allows you to find a specified value (like a word or character) in a string and replace it with another value The method returns a new string with the replacement and leaves the original unchanged because JavaScript strings are immutable js\nconst text = \"I like cats\";\nconsole log(text replace(\"cats\", \"dogs\")); // \"I like dogs\"\nThe repeat() Method: This method is used to repeat a string a specified number of times",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-strings\\6723c1946e4cd7909a836bb4.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0d8d5b43c860edb486137cf4eec3231e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-strings\\6723c1946e4cd7909a836bb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "The replace() Method: This method allows you to find a specified value (like a word or character) in a string and replace it with another value The method returns a new string with the replacement and leaves the original unchanged because JavaScript strings are immutable js const text = \"I like cats\"; console log(text replace(\"cats\", \"dogs\")); // \"I like dogs\" The repeat() Method: This method is used to repeat a string a specified number of timesjs\nconst text = \"Hello\";\nconsole log(text repeat(3)); // \"HelloHelloHello\"\nThe trim() Method: This method is used to remove whitespaces from both the beginning and the end of a string js\nconst text = \"  Hello, world \";\nconsole log(text trim()); // \"Hello, world \"\nThe trimStart() Method: This method removes whitespaces from the beginning (or \"start\") of the string js\nconst text = \"  Hello, world \";\nconsole log(text trimStart()); // \"Hello, world \"\nThe trimEnd() Method: This method removes whitespaces from the end of the string js\nconst text = \" Hello, world \";\nconsole log(text trimEnd()); // \"  Hello, world \"\nThe prompt() Method: This method of the window is used to get information from a user through the form of a dialog box This method takes two arguments The first argument is the message which will appear inside the dialog box, typically prompting the user to enter information The second one is a default value which is optional and will fill the input field initially js\nconst answer = window prompt(\"What's your favorite animal \"); // This will change depending on what the user answers\n--assignment--\nReview the JavaScript Strings topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5604,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-strings\\6723c1946e4cd7909a836bb4.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f36d3a9c562841dc5c33f23162daab17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-js-a11y\\683766860f71d4a96e429f3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 683766860f71d4a96e429f3a\ntitle: JavaScript and Accessibility Review\nchallengeType: 24\ndashedName: review-js-a11y\n--description--\nCommon ARIA Accessibility Attributes\naria-expanded attribute: Used to convey the state of a toggle (or disclosure) feature to screen reader users html\n<button aria-expanded=\"true\">Menu</button>\naria-haspopup attribute: This state is used to indicate that an interactive element will trigger a pop-up element when activated You can only use the aria-haspopup attribute when the pop-up has one of the following roles: menu, listbox, tree, grid, or dialog The value of aria-haspopup must be either one of these roles or true, which is the same as menu ```html\n<button\nid=\"menubutton\"\naria-haspopup=\"menu\"\naria-controls=\"filemenu\"\naria-expanded=\"false\"\nFile\nOpen\nNew\nSave\nDelete\n```\naria-checked attribute: This attribute is used to indicate whether an element is in the checked state It is most commonly used when creating custom checkboxes, radio buttons, switches, and listboxes ```html\nCheckbox\n```\naria-disabled attribute: This state is used to indicate that an element is disabled only to people using assistive technologies, such as screen readers ```html\nEdit\n```\naria-selected attribute: This state is used to indicate that an element is selected You can use this state on custom controls like a tabbed interface, a listbox, or a grid ```html\nTab 1\nTab 2\nTab 3\n```\naria-controls attribute: Used to associate an element with another element that it controls This helps people using assistive technologies understand the relationship between the elements ```html\nTab 1\nTab 2\nTab 3\n```\nhidden attribute: Hides inactive panels from both visual and assistive technology users Working with Live Regions and Dynamic Content\naria-live attribute: Makes part of a webpage a live region, meaning any updates inside that area will be announced by a screen reader so users don't miss important changes polite value: Most live regions use this value This value means that the update is not urgent, so the screen reader can wait until it finishes any current announcement or the user completes their current action before announcing the update Here is an example of a live region that is dynamically updated by JavaScript:\n```html\n```\njs\nconst statusEl = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-js-a11y\\683766860f71d4a96e429f3a.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b48d45dd1f933b8736d28292ef040a21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-js-a11y\\683766860f71d4a96e429f3a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that area will be announced by a screen reader so users don't miss important changes polite value: Most live regions use this value This value means that the update is not urgent, so the screen reader can wait until it finishes any current announcement or the user completes their current action before announcing the update Here is an example of a live region that is dynamically updated by JavaScript: ```html ``` js const statusEl = documentgetElementById(\"status\");\nstatusEl textContent = \"Your file has been successfully uploaded \";\ncontenteditable attribute: Turns the element into a live editor, allowing users to update its content as if it were a text field When there is no visible label or heading for a contenteditable region, add an accessible name using the aria-label attribute to help screen reader users understand the purpose of the editable area ```html\nEditable content goes here\n```\nfocus and blur Events\nblur event: Fires when an element loses focus js\nelement addEventListener(\"blur\", () => {\n// Handle when user leaves the element\n});\nfocus event: Fires when an element receives focus js\nelement addEventListener(\"focus\", () => {\n// Handle when user enters the element\n});\n--assignment--\nReview the JavaScript and Accessibility topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-js-a11y\\683766860f71d4a96e429f3a.md",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "44241b663c6d15946072b057e9c4a26a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723cdfa4ae237bf6b7e32eb\ntitle: JavaScript Regular Expressions Review\nchallengeType: 24\ndashedName: review-javascript-regular-expressions\n--description--\nRegular Expressions and Common Methods\nDefinition: Regular Expressions, or Regex, are used to create a \"pattern\", which you can then use to check against a string, extract text, and more js\nconst regex = /freeCodeCamp/;\ntest() Method: This method accepts a string, which is the string to test for matches against the regular expression This method will return a boolean if the string matches the regex js\nconst regex = /freeCodeCamp/;\nconst test = regex test(\"e\");\nconsole log(test); // false\nmatch() Method: This method accepts a regular expression, although you can also pass a string which will be constructed into a regular expression The match method returns the match array for the string js\nconst regex = /freeCodeCamp/;\nconst match = \"freeCodeCamp\" match(regex);\nconsole log(match); // [\"freeCodeCamp\"]\nreplace() Method: This method accepts two arguments: the regular expression to match (or a string), and the string to replace the match with (or a function to run against each match) js\nconst regex = /Jessica/;\nconst str = \"Jessica is rly kewl\";\nconst replaced = str replace(regex, \"freeCodeCamp\");\nconsole log(replaced); // \"freeCodeCamp is rly kewl\"\nreplaceAll Method: This method is used to replace all occurrences of a specified pattern with a new string This method will throw an error if you give it a regular expression without the global modifier js\nconst text = \"I hate JavaScript I hate programming \";\nconst newText = text replaceAll(\"hate\", \"love\");\nconsole log(newText);  // \"I love JavaScript I love programming \"\nmatchAll Method: This method is used to retrieve all matches of a given regular expression in a string, including capturing groups, and returns them as an iterator An iterator is an object that allows you to go through (or \"iterate over\") a collection of items ```js\nconst str = \"JavaScript, Python, JavaScript, Swift, JavaScript\";\nconst regex = /JavaScript/g;\nconst iterator = str matchAll(regex);\nfor (let match of iterator) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "85c3de85dae4ecab28f54ba8879d24be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "love JavaScript I love programming \" matchAll Method: This method is used to retrieve all matches of a given regular expression in a string, including capturing groups, and returns them as an iterator An iterator is an object that allows you to go through (or \"iterate over\") a collection of items ```js const str = \"JavaScript, Python, JavaScript, Swift, JavaScript\"; const regex = /JavaScript/g; const iterator = str matchAll(regex); for (let match of iterator) { consolelog(match[0]); // \"JavaScript\" for each match\n}\n```\nRegular Expression Modifiers\nDefinition: Modifiers, often referred to as \"flags\", modify the behavior of a regular expression i Flag: This flag makes a regex ignore case js\nconst regex = /freeCodeCamp/i;\nconsole log(regex test(\"freecodecamp\")); // true\nconsole log(regex test(\"FREECODECAMP\")); // true\ng Flag: This flag, or global modifier, allows your regular expression to match a pattern more than once js\nconst regex = /freeCodeCamp/gi;\nconsole log(regex test(\"freeCodeCamp\")); // true\nconsole log(regex test(\"freeCodeCamp is great\")); // false\nAnchor Definition: The ^ anchor, at the beginning of the regular expression, says \"match the start of the string\" The $ anchor, at the end of the regular expression, says \"match the end of the string\" js\nconst start = /^freeCodeCamp/i;\nconst end = /freeCodeCamp$/i;\nconsole log(start test(\"freecodecamp\")); // true\nconsole log(end test(\"freecodecamp\")); // true\nm Flag: Anchors look for the beginning and end of the entire string But you can make a regex handle multiple lines with the m flag, or the multi-line modifier flag, or the multi-line modifier ``js\nconst start = /^freecodecamp/im;\nconst end = /freecodecamp$/im;\nconst str =I love\nfreecodecamp\nit's my favorite\n`;\nconsole log(start test(str)); // true\nconsole log(end test(str)); // true\n```\nd Flag: This flag expands the information you get in a match object js\nconst regex = /freecodecamp/di;\nconst string = \"we love freecodecamp isn't freecodecamp great \";\nconsole log(string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "43aac5e8a55b4a6b747a5cd697d29078",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "regex handle multiple lines with the m flag, or the multi-line modifier flag, or the multi-line modifier ``js const start = /^freecodecamp/im; const end = /freecodecamp$/im; const str =I love freecodecamp it's my favorite `; console log(start test(str)); // true console log(end test(str)); // true ``` d Flag: This flag expands the information you get in a match object js const regex = /freecodecamp/di; const string = \"we love freecodecamp isn't freecodecamp great \"; console log(stringmatch(regex));\nu Flag: This expands the functionality of a regular expression to allow it to match special unicode characters The u flag gives you access to special classes like the Extended_Pictographic to match most emoji There is also a v flag, which further expands the functionality of the unicode matching y Flag: The sticky modifier behaves very similarly to the global modifier, but with a few exceptions The biggest one is that a global regular expression will start from lastIndex and search the entire remainder of the string for another match, but a sticky regular expression will return null and reset the lastIndex to 0 if there is not immediately a match at the previous lastIndex s Flag: The single-line modifier allows a wildcard character, represented by a in regex, to match linebreaks - effectively treating the string as a single line of text Character Classes\nWildcard : Character classes are a special syntax you can use to match sets or subsets of characters The first character class you should learn is the wild card class The wild card is represented by a period, or dot, and matches ANY single character EXCEPT line breaks To allow the wildcard class to match line breaks, remember that you would need to use the s flag js\nconst regex = /a /;\n\\d: This will match all digits (0-9) in a string js\nconst regex = /\\d/;\n\\w: This is used to match any word character (a-z0-9_) in a string A word character is defined as any letter, from a to z, or a number from 0 to 9, or the underscore character js\nconst regex = /\\w/;\n\\s: The white-space class \\s, represented by a backslash followed by an s This character class will match any white space, including new lines, spaces, tabs, and special unicode space characters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d182af7f276596542f7392822a4a0c3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const regex = /\\d/; \\w: This is used to match any word character (a-z0-9_) in a string A word character is defined as any letter, from a to z, or a number from 0 to 9, or the underscore character js const regex = /\\w/; \\s: The white-space class \\s, represented by a backslash followed by an s This character class will match any white space, including new lines, spaces, tabs, and special unicode space charactersNegating Special Character Classes: To negate one of these character classes, instead of using a lowercase letter after the backslash, you can use the uppercase equivalent The following example does not match a numerical character Instead, it matches any single character that is NOT a numerical character js\nconst regex = /\\D/;\nCustom Character Classes: You can create custom character classes by placing the character you wish match inside a set of square brackets js\nconst regex = /[abcdf]/;\nLookahead and Lookbehind Assertions\nDefinition: Lookahead and lookbehind assertions allow you to match specific patterns based on the presence or lack of surrounding patterns Positive Lookahead Assertion: This assertion will match a pattern when the pattern is followed by another pattern To construct a positive lookahead, you need to start with the pattern you want to match Then, use parentheses to wrap the pattern you want to use as your condition After the opening parenthesis, use = to define that pattern as a positive lookahead js\nconst regex = /free( =code)/i;\nNegative Lookahead Assertion: This is a type of condition used in regular expressions to check that a certain pattern does not occur ahead in the string js\nconst regex = /free( code)/i;\nPositive Lookbehind Assertion: This assertion will match a pattern only if it is preceded by another specific pattern, without including the preceding pattern in the match js\nconst regex = /( <=free)code/i;\nNegative Lookbehind Assertion: This assertion ensures that a pattern is not preceded by another specific pattern It matches only if the specified pattern is not immediately preceded by the given sequence, without including the preceding sequence in the match js\nconst regex = /( < free)code/i;\nRegex Quantifiers\nDefinition: Quantifiers in regular expressions specify how many times a pattern (or part of a pattern) should appear They help control the number of occurrences of characters or groups in a match The following example is used to match the previous character exactly four times",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "11497a2c0f0b60c97f31adc39bc445f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "matches only if the specified pattern is not immediately preceded by the given sequence, without including the preceding sequence in the match js const regex = /( < free)code/i; Regex Quantifiers Definition: Quantifiers in regular expressions specify how many times a pattern (or part of a pattern) should appear They help control the number of occurrences of characters or groups in a match The following example is used to match the previous character exactly four timesjs\nconst regex = /^\\d{4}$/;\n* : Matches 0 or more occurrences of the preceding element +: Matches 1 or more occurrences of the preceding element : Matches 0 or 1 occurrence of the preceding element {n}: Matches exactly n occurrences of the preceding element {n,}: Matches n or more occurrences of the preceding element {n,m}: Matches between n and m occurrences of the preceding element Capturing Groups and Backreferences\nCapturing Groups: A capturing group allows you to \"capture\" a portion of the matched string to use however you might need Capturing groups are defined by parentheses containing the pattern to capture, with no leading characters like a lookahead js\nconst regex = /free(code)camp/i;\nNon-Capturing Groups: A non-capturing group is similar to a capturing group but does not store the matched portion of the string for later use Non-capturing groups are defined by ( : ) js\nconst regex = /free( :code)camp/i;\nBackreferences: A backreference in regular expressions refers to a way to reuse a part of the pattern that was matched earlier in the same expression It allows you to refer to a captured group (a part of the pattern in parentheses) by its number For example, $1 refers to the first captured group js\nconst regex = /free(co+de)camp/i;\nconsole log(\"freecoooooooodecamp\" replace(regex, \"paid$1world\"));\nYou can use backreferences within the regex itself to match the same text captured by a previous group with a backslash and the capture group number For example:\njs\nconst regex = /(hello) \\1/i;\nconsole log(regex test(\"hello hello\"));  // true\nconsole log(regex test(\"hello world\"));  // false\n--assignment--\nReview the JavaScript Regular Expressions topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-regular-expressions\\6723cdfa4ae237bf6b7e32eb.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "297d910ba2396c2ef04fceb95872583f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723be264695fb7e619fe1fa\ntitle: JavaScript Variables and Data Types Review\nchallengeType: 24\ndashedName: review-javascript-variables-and-data-types\n--description--\nWorking with HTML, CSS, and JavaScript\nWhile HTML and CSS provide website structure, JavaScript brings interactivity to websites by enabling complex functionality, such as handling user input, animating elements, and even building full web applications Data Types in JavaScript\nData types help the program understand the kind of data it's working with, whether it's a number, text, or something else Number: A number represents both integers and floating-point values Examples of integers include 7, 19, and 90 Floating point: A floating point number is a number with a decimal point Examples include 3 14, 0 5, and 0 0001 String: A string is a sequence of characters, or text, enclosed in quotes \"I like coding\" and 'JavaScript is fun' are examples of strings Boolean: A boolean represents one of two possible values: true or false You can use a boolean to represent a condition, such as isLoggedIn = true Undefined and Null: An undefined value is a variable that has been declared but not assigned a value A null value is an empty value, or a variable that has intentionally been assigned a value of null Object: An object is a collection of key-value pairs The key is the property name, and the value is the property value Here, the pet object has three properties or keys: name, age, and type The values are Fluffy, 3, and dog, respectively js\nlet pet = {\nname: \"Fluffy\",\nage: 3,\ntype: \"dog\"\n};\nSymbol: The Symbol data type is a unique and immutable value that may be used as an identifier for object properties In this example below, two symbols are created with the same description, but they are not equal js\nconst crypticKey1= Symbol(\"saltNpepper\");\nconst crypticKey2= Symbol(\"saltNpepper\");\nconsole log(crypticKey1 === crypticKey2); // false\nBigInt: When the number is too large for the Number data type, you can use the BigInt data type to represent integers of arbitrary length By adding an n to the end of the number, you can create a BigInt",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7522,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "39098571642d5cfcd8308a69e874eaca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as an identifier for object properties In this example below, two symbols are created with the same description, but they are not equal js const crypticKey1= Symbol(\"saltNpepper\"); const crypticKey2= Symbol(\"saltNpepper\"); console log(crypticKey1 === crypticKey2); // false BigInt: When the number is too large for the Number data type, you can use the BigInt data type to represent integers of arbitrary length By adding an n to the end of the number, you can create a BigIntjs\nconst veryBigNumber = 1234567890123456789012345678901234567890n;\nVariables in JavaScript\nVariables can be declared using the let keyword js\nlet cityName;\nTo assign a value to a variable, you can use the assignment operator = js\ncityName = \"New York\";\nVariables declared using let can be reassigned a new value js\ncityName = \"Los Angeles\";\nconsole log(cityName); // Los Angeles\nApart from let, you can also use const to declare a variable However, a const variable cannot be reassigned a new value js\nconst cityName = \"New York\";\ncityName = \"Los Angeles\"; // TypeError: Assignment to constant variable Variables declared using const find uses in declaring constants, that are not allowed to change throughout the code, such as PI or MAX_SIZE Variable Naming Conventions\nVariable names should be descriptive and meaningful Variable names should be camelCase like cityName, isLoggedIn, and veryBigNumber Variable names should not start with a number They must begin with a letter, _, or $ Variable names should not contain spaces or special characters, except for _ and $ Variable names should not be reserved keywords Variable names are case-sensitive age and Age are different variables Strings and String immutability in JavaScript\nStrings are sequences of characters enclosed in quotes They can be created using single quotes and double quotes js\nlet correctWay = 'This is a string';\nlet alsoCorrect = \"This is also a string\";\nStrings are immutable in JavaScript This means that once a string is created, you cannot change the characters in the string However, you can still reassign strings to a new value js\nlet firstName = \"John\";\nfirstName = \"Jane\"; // Reassigning the string to a new value\nString Concatenation in JavaScript\nConcatenation is the process of joining multiple strings or combining strings with variables that hold text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7522,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "92b8c6094172306194d3366712d1bc6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "string'; let alsoCorrect = \"This is also a string\"; Strings are immutable in JavaScript This means that once a string is created, you cannot change the characters in the string However, you can still reassign strings to a new value js let firstName = \"John\"; firstName = \"Jane\"; // Reassigning the string to a new value String Concatenation in JavaScript Concatenation is the process of joining multiple strings or combining strings with variables that hold textThe + operator is one of the simplest and most frequently used methods to concatenate strings js\nlet studentName = \"Asad\";\nlet studentAge = 25;\nlet studentInfo = studentName + \" is \" + studentAge + \" years old \";\nconsole log(studentInfo); // Asad is 25 years old If you need to add or append to an existing string, then you can use the  += operator This is helpful when you want to build upon a string by adding more text to it over time js\nlet message = \"Welcome to programming, \";\nmessage += \"Asad \";\nconsole log(message); // Welcome to programming, Asad Another way you can concatenate strings is to use the concat() method This method joins two or more strings together js\nlet firstName = \"John\";\nlet lastName = \"Doe\";\nlet fullName = firstName concat(\" \", lastName);\nconsole log(fullName); // John Doe\nLogging Messages with console log()\nThe console log() method is used to log messages to the console It's a helpful tool for debugging and testing your code js\nconsole log(\"Hello, World \");\n// Output: Hello, World Semicolons in JavaScript\nSemicolons are primarily used to mark the end of a statement This helps the JavaScript engine understand the separation of individual instructions, which is crucial for correct execution js\nlet message = \"Hello, World \"; // first statement ends here\nlet number = 42; // second statement starts here\nSemicolons help prevent ambiguities in code execution and ensure that statements are correctly terminated Comments in JavaScript\nAny line of code that is commented out is ignored by the JavaScript engine Comments are used to explain code, make notes, or temporarily disable code Single-line comments are created using // js\n// This is a single-line comment and will be ignored by the JavaScript engine\nMulti-line comments are created using /* to start the comment and */ to end the comment js\n/*\nThis is a multi-line comment It can span multiple lines",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7522,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "e748e190959c9ab0f6fa3d895af08c2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "JavaScript Any line of code that is commented out is ignored by the JavaScript engine Comments are used to explain code, make notes, or temporarily disable code Single-line comments are created using // js // This is a single-line comment and will be ignored by the JavaScript engine Multi-line comments are created using /* to start the comment and */ to end the comment js /* This is a multi-line comment It can span multiple lines*/\nJavaScript as a Dynamically Typed Language\nJavaScript is a dynamically typed language, which means that you don't have to specify the data type of a variable when you declare it The JavaScript engine automatically determines the data type based on the value assigned to the variable js\nlet error = 404; // JavaScript treats error as a number\nerror = \"Not Found\"; // JavaScript now treats error as a string\nOther languages, like Java, that are not dynamically typed would result in an error:\njs\nint error = 404; // value must always be an integer\nerror = \"Not Found\"; // This would cause an error in Java\nUsing the typeof Operator\nThe typeof operator is used to check the data type of a variable It returns a string indicating the type of the variable ```js\nlet age = 25;\nconsole log(typeof age); // \"number\"\nlet isLoggedIn = true;\nconsole log(typeof isLoggedIn); // \"boolean\"\n```\nHowever, there's a well-known quirk in JavaScript when it comes to null The typeof operator returns \"object\" for null values js\nlet user = null;\nconsole log(typeof user); // \"object\"\n--assignment--\nReview the JavaScript Variables and Data Types topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7522,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript-variables-and-data-types\\6723be264695fb7e619fe1fa.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "9b6d1ab247ace81c8f85c2681448d870",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-object-oriented-programming\\67f39dac6c3fac29c3d54918.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39dac6c3fac29c3d54918\ntitle: Object Oriented Programming Review\nchallengeType: 24\ndashedName: review-object-oriented-programming\n--description--\nFirst topic\nDescribe\nSecond topic\nDescribe\n--assignment--\nReview the Object Oriented Programming topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 295,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-object-oriented-programming\\67f39dac6c3fac29c3d54918.md",
      "source_type": "git_repo"
    },
    "token_count": 68,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e384002a7ad7d96a40c2729390a397df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python\\67f39e391c9b373069def02c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39e391c9b373069def02c\ntitle: Python Review\nchallengeType: 24\ndashedName: review-python\n--description--\nReview the concepts below to prepare for the upcoming exam.\nFirst topic\nDescribe\nSecond topic\nDescribe\n--assignment--\nReview the Python topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 293,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python\\67f39e391c9b373069def02c.md",
      "source_type": "git_repo"
    },
    "token_count": 69,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cb49b67a75dd0e93b15c3338fb35f9a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723d0ac516099c902394e8b\ntitle: Local Storage and CRUD Review\nchallengeType: 24\ndashedName: review-local-storage-and-crud\n--description--\nPersistent Storage\nDefinition: Persistent storage refers to a way of saving data in a way that it stays available even after the power is turned off or the device is restarted Create, Read, Update, Delete (CRUD)\nCreate: This refers to the process of creating new data For example, in a web app, this could be when a user adds a new post to a blog Read: This is the operation where data is retrieved from a database For instance, when you visit a blog post or view your profile on a website, you're performing a read operation to fetch and display data stored in the database Update: This involves modifying existing data in the database An example would be editing a blog post or updating your profile information Delete: This is the operation that removes data from a database For instance, when you delete a blog post or account, you're performing a delete operation HTTP Methods\nDefinition: HTTP stands for Hypertext Transfer Protocol and it is the foundation for data communication on the web There are HTTP methods which define the actions that can be performed on resources over the web The common methods are GET, POST, PUT, PATCH, DELETE GET Method: This is used to fetch data from a server POST Method: This is used to submit data to a server which creates a new resource PUT Method: This is used to update a resource by replacing it entirely PATCH Method: This is used to partially update a resource DELETE Method: This is used to remove records from a database localStorage and sessionStorage Properties\nWeb Storage API: This API provides a mechanism for browsers to store key-value pairs right within the browser, allowing developers to store information that can be used across different page reloads and sessions The two main components for the Web Storage API are the localStorage and sessionStorage properties localStorage Property: localStorage is the part of the Web Storage API that allows data to persist even after the browser window is closed or the page is refreshed This data remains available until it is explicitly removed by the application or the user localStorage setItem() Method: This method is used to store a key-value pair in localStorage js\nlocalStorage setItem('username', 'Jessica');\nlocalStorage getItem() Method: This method is used to retrieve the value of a given key from localStorage ```js\nlocalStorage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "a2f30d9ba7b41170f2a26e797de4d9d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the part of the Web Storage API that allows data to persist even after the browser window is closed or the page is refreshed This data remains available until it is explicitly removed by the application or the user localStorage setItem() Method: This method is used to store a key-value pair in localStorage js localStorage setItem('username', 'Jessica'); localStorage getItem() Method: This method is used to retrieve the value of a given key from localStorage ```js localStoragesetItem('username', 'codingRules');\nlet username = localStorage getItem('username');\nconsole log(username); // codingRules\n```\nlocalStorage removeItem() Method: This method is used to remove a specific item from localStorage using its key js\nlocalStorage removeItem('username');\nlocalStorage clear() Method: This method is used to clear all of the stored data in localStorage js\nlocalStorage clear();\nsessionStorage Property: Stores data that lasts only for the current session and is cleared when the browser tab or window is closed sessionStorage setItem() Method: This method is used to store a key-value pair in sessionStorage js\nsessionStorage setItem('cart', '3 items');\nsessionStorage getItem() Method: This method is used to retrieve the value of a given key from sessionStorage ```js\nsessionStorage setItem('cart', '3 items');\nlet cart = sessionStorage getItem('cart');\nconsole log(cart); // '3 items'\n```\nsessionStorage removeItem() Method: This method is used to remove a specific item from sessionStorage using its key js\nsessionStorage removeItem('cart');\nsessionStorage clear() Method: This method is used to clear all data stored in sessionStorage js\nsessionStorage clear();\nWorking with Cookies\nDefinition: Cookies, also known as web cookies or browser cookies, are small pieces of data that a server sends to a user's web browser These cookies are stored on the user's device and sent back to the server with subsequent requests Cookies are essential in helping web applications maintain state and remember user information, which is especially important since HTTP is a stateless protocol Session Cookies: These cookies only last for the duration of the user's session on the website Once the user closes the browser or tab, the session cookie is deleted These cookies are typically used for tasks like keeping a user logged in during their visit Secure Cookies: These cookies are only sent over HTTPS, ensuring that they cannot be intercepted by an attacker in transit",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "32df73d978b11bcf3ed88aef761d2e17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "information, which is especially important since HTTP is a stateless protocol Session Cookies: These cookies only last for the duration of the user's session on the website Once the user closes the browser or tab, the session cookie is deleted These cookies are typically used for tasks like keeping a user logged in during their visit Secure Cookies: These cookies are only sent over HTTPS, ensuring that they cannot be intercepted by an attacker in transitHttpOnly Cookies: These cookies cannot be accessed or modified by JavaScript running in the browser, making them more secure against cross-site scripting (XSS) attacks Set-Cookie Header: When you visit a website, the server can send a Set-Cookie header in the HTTP response This header tells your browser to save a cookie with specific information For example, it might store a unique ID that helps the site recognize you the next time you visit You can manually set a cookie in JavaScript using document cookie:\njs\ndocument cookie = \"organization=freeCodeCamp; expires=Fri, 31 Dec 2021 23:59:59 GMT; path=/\";\nTo delete a cookie, you can set its expiration date to a time in the past js\ndocument cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\nCache API\nDefinition: Caching is the process of storing copies of files in a temporary storage location, so that they can be accessed more quickly The Cache API is used to store network requests and responses, making web applications work more efficiently and even function offline It is part of the broader Service Worker API and is crucial for creating Progressive Web Apps (PWAs) that can work under unreliable or slow network conditions The Cache API is a storage mechanism that stores Request and Response objects When a request is made to a server, the application can store the response and later retrieve it from the cache instead of making a new network request This reduces load times, saves bandwidth, and improves the overall user experience Cache Storage: This is used to store key-value pairs of HTTP requests and their corresponding responses This enables efficient retrieval of previously requested resources, reducing the need to fetch them from the network on subsequent visits and improving performance Cache-Control: Developers can define how long a cached resource should be kept, and if it should be revalidated or served directly from cache Offline Support: By using the Cache API, you can create offline-first web applications",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "6d41feb6730c54a05f6cc3c40d984aa9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "experience Cache Storage: This is used to store key-value pairs of HTTP requests and their corresponding responses This enables efficient retrieval of previously requested resources, reducing the need to fetch them from the network on subsequent visits and improving performance Cache-Control: Developers can define how long a cached resource should be kept, and if it should be revalidated or served directly from cache Offline Support: By using the Cache API, you can create offline-first web applicationsFor example, a PWA can serve cached assets when the user is disconnected from the network Negative Patterns and Client Side Storage\nExcessive Tracking: This refers to the practice of collecting and storing an overabundance of user data in client-side storage (such as cookies, local storage, or session storage) without clear, informed consent or a legitimate need This often involves tracking user behavior, preferences, and interactions across multiple sites or sessions, which can infringe on user privacy Browser Fingerprinting: A technique used to track and identify individual users based on unique characteristics of their device and browser, rather than relying on cookies or other traditional tracking methods Unlike cookies, which are stored locally on a user's device, fingerprinting involves collecting a range of information that can be used to create a distinctive \"fingerprint\" of a user's browser session Setting Passwords in LocalStorage: This might seem like a more obvious negative pattern, but setting any sensitive data like passwords in local storage posses a security risk Local Storage is not encrypted and can be accessed easily So you should never store any type of sensitive data in there IndexedDB\nDefinition: IndexedDB is used for storing structured data in the browser This is built into modern web browsers, allowing web apps to store and fetch JavaScript objects efficiently Cache/Service Workers\nDefinition: A Service Worker is a script that runs in the background which is separate from your web page It can intercept network requests, access the cache, and make the web app work offline This is a key component of Progressive Web Apps --assignment--\nReview the Local Storage and CRUD topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8715,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-local-storage-and-crud\\6723d0ac516099c902394e8b.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "474c4becf83a8efbfc7f5146ca913048",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67487e141bb6a7140a352e12\ntitle: React Basics Review\nchallengeType: 24\ndashedName: review-react-basics\n--description--\nJavaScript Libraries and Frameworks\nJavaScript libraries and frameworks offer quick solutions to common problems and speed up development by providing pre-built code Libraries are generally more focused on providing solutions to specific tasks, such as manipulating the DOM, handling events, or managing AJAX requests A couple of examples of JavaScript libraries are jQuery and React Frameworks, on the other hand, provide a more defined structure for building applications They often come with a set of rules and conventions that developers need to follow Examples of frameworks include Angular and Next js, a meta framework for React Single page applications (SPAs) are web applications that load a single HTML page and dynamically update that page as the user interacts with the application without reloading the entire page SPAs use JavaScript to manage the application's state and render content This is often done using frameworks which provide great tools for building complex user interfaces Some issues surrounding SPAs include:\nScreen readers struggle with dynamically updated content The URL does not change when the user navigates within the application, which can make it difficult to bookmark, backtrack or share specific pages Initial load time can be slow if the application is large as all the assets need to be loaded upfront React\nReact is a popular JavaScript library for building user interfaces and web applications A core concept of React is the creation of reusable UI components that can update and render independently as data changes React allows developers to describe how the UI should look like based on the application state React then updates and renders the right components when the data or the state changes React Components\nComponents are the building blocks of React applications that allow developers to break down complex user interfaces into smaller, manageable pieces The UI is described using JSX, an extension of JavaScript's syntax, that allows developers to write HTML-like code within JavaScript Components are basically JS functions or classes that return a piece of UI Here is an example of a simple React component that renders a greeting message:\njsx\nfunction Greeting() {\nconst name = 'Anna';\nreturn <h1>Welcome, {name} </h1>;\n}\nTo use the component, you can simply call:\njsx\n<Greeting />\nImporting and Exporting React components\nReact components can be exported from one file and imported into another file Let's say you have a component named City in a file named City js",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "28bebd58193c35f0f765ff3ea1cfcd97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that return a piece of UI Here is an example of a simple React component that renders a greeting message: jsx function Greeting() { const name = 'Anna'; return <h1>Welcome, {name} </h1>; } To use the component, you can simply call: jsx <Greeting /> Importing and Exporting React components React components can be exported from one file and imported into another file Let's say you have a component named City in a file named City jsYou can export the component using the export keyword:\n```jsx\n// City js\nfunction City() {\nreturn New York;\n}\nexport default City;\n```\nTo import the City component into another file, you can use the import keyword:\n```jsx\n// App js\nimport City from ' /City';\nfunction App() {\nreturn (\nMy favorite city is:\n);\n}\n```\nThe default keyword is used as it is the default export from the City js file You can also choose to export the component on the same line as the component definition like this:\njsx\nexport default function City() {\nreturn <p>New York</p>;\n}\nSetting up a React project using Vite\nProject setup tools and CLIs provide a quick & easy way to start new projects, allowing developers to focus on writing code rather than dealing with configuration Vite, a popular project setup tool and can be used with React To create a new project with Vite, you can use the following command in your terminal:\nbash\nnpm create vite@latest my-react-app -- --template react\nThis command creates a new React project named my-react-app using Vite's React template In the project directory, you will see a package json file with the project dependencies and commands listed in it To run the project, navigate to the project directory and run the following commands:\nbash\ncd my-react-app # path to the project directory\nnpm install # installs the dependencies listed in the package json file\nOnce the dependencies are installed, you should notice a new folder in your project called node_modules The node_modules folder is where all the packages and libraries required by your project are stored To run your project, use the following command:\nbash\nnpm run dev\nAfter that, open your browser and navigate to http://localhost:5173 to see your React application running To actually see the code for the starter template, you can go into your project inside the src folder and you should see the App jsx file",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f25cec3f0b251ba2df85c4730b3752c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "folder in your project called node_modules The node_modules folder is where all the packages and libraries required by your project are stored To run your project, use the following command: bash npm run dev After that, open your browser and navigate to http://localhost:5173 to see your React application running To actually see the code for the starter template, you can go into your project inside the src folder and you should see the App jsx filePassing props in React components\nIn React, props (short for properties) are a way to pass data from a parent component to a child component This mechanism is needed to create reusable and dynamic UI elements Props can be any JavaScript value To pass props from a parent to a child component, you add the props as attributes when you use the child component in the parent's JSX Here's a simple example:\n```jsx\n// Parent component\nfunction Parent() {\nconst name = 'Anna';\nreturn ;\n}\n// Child component\nfunction Child(props) {\nreturn Hello, {props name} ;\n}\n```\nYou can pass multiple props using the spread operator ( ), after converting them to an object Here's an example:\njsx\n// Parent component\nfunction Parent() {\nconst person = {\nname: 'Anna',\nage: 25,\ncity: 'New York'\n};\nreturn <Child { person} />;\n}\nIn this code, the spread operator { person} converts the person object into individual props that are passed to the Child component Conditional rendering in React\nConditional rendering in React allows you to create dynamic user interfaces It is used to show different content based on certain conditions or states within your application There are several ways to conditionally render content in React One common approach is to use the ternary operator Here's an example:\njsx\nfunction Greeting({ isLoggedIn }) {\nreturn (\n<div>\n{isLoggedIn <h1>Welcome back </h1> : <h1>Please log in</h1>}\n</div>\n);\n}\nAnother way to conditionally render content is to use the logical AND (&&) operator This is useful when you want to render content only if a certain condition is met Here's an example:\njsx\nfunction Greeting({ user }) {\nreturn (\n<div>\n{user && <h1>Welcome, {user name} </h1>}\n</div>\n);\n}\nIn the code above, the h1 element is only rendered if the user object is truthy",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "943b30ff4761755733770b1c921bab02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "back </h1> : <h1>Please log in</h1>} </div> ); } Another way to conditionally render content is to use the logical AND (&&) operator This is useful when you want to render content only if a certain condition is met Here's an example: jsx function Greeting({ user }) { return ( <div> {user && <h1>Welcome, {user name} </h1>} </div> ); } In the code above, the h1 element is only rendered if the user object is truthyYou can also use a direct if statement this way:\njsx\nfunction Greeting({ isLoggedIn }) {\nif (isLoggedIn) {\nreturn <h1>Welcome back </h1>;\n}\nreturn <h1>Please sign in</h1>;\n}\nRendering lists in React\nRendering lists in React is a common task when building user interfaces Lists can be rendered using the JS array map() method to iterate over an array of items and return a new array of JSX elements For example, if you have an array of names that you want to render as a list, you can do the following:\njsx\nfunction NameList({ names }) {\nreturn (\n<ul>\n{names map((name, index) => (\n<li key={`${name}-${index}`}>{name}</li>\n))}\n</ul>\n);\n}\nAlways remember to provide a unique key for each list item to help React manage the updating and rendering roles With these techniques, you can create flexible, efficient, and dynamic lists in your React applications Inline styles in React\nInline styles in React allow you to apply CSS styles directly to JSX elements using JavaScript objects To apply inline styles in React, you can use the style attribute on JSX elements The style attribute takes an object where the keys are CSS properties in camelCase and the values are the corresponding values Here's an example:\n```jsx\nfunction Greeting() {\nreturn (\nHello, world );\n}\nexport default Greeting;\n```\nYou can also extract the styles into a separate object and reference it in the style attribute this way:\n```jsx\nfunction Greeting() {\nconst styles = {\ncolor: 'blue',\nfontSize: '24px',\nbackgroundColor: 'lightgray'\n};\nreturn Hello, world ;\n}\nexport default Greeting;\n```\nInline styles support dynamic styling by allowing you to conditionally apply styles based on props or state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "f1f025cb1d4c738cb500d72dffbaa3b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an example: ```jsx function Greeting() { return ( Hello, world ); } export default Greeting; ``` You can also extract the styles into a separate object and reference it in the style attribute this way: ```jsx function Greeting() { const styles = { color: 'blue', fontSize: '24px', backgroundColor: 'lightgray' }; return Hello, world ; } export default Greeting; ``` Inline styles support dynamic styling by allowing you to conditionally apply styles based on props or stateHere is an example of how you can conditionally apply styles based on a prop:\n```jsx\nfunction Greeting({ isImportant }) {\nconst styles = {\ncolor: isImportant 'red' : 'black',\nfontSize: isImportant '24px' : '16px'\n};\nreturn Hello, world ;\n}\nexport default Greeting;\n```\nIn the code above, the color and fontSize styles are conditionally set based on the isImportant prop --assignment--\nReview the React Basics topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9220,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-basics\\67487e141bb6a7140a352e12.md",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "439d7b20bafbcb57b203d3480b03bbef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39b91583dec1e1eddbb9e\ntitle: Loops and Sequences Review\nchallengeType: 24\ndashedName: review-loops-and-sequences\n--description--\nPython Lists\nIntroduction: In Python, the list data type is an ordered sequence of elements that can be composed of strings, numbers or even other lists Lists are mutable and zero based indexed python\ncities = ['Los Angeles', 'London', 'Tokyo']\nAccessing Elements in a List: To access an element from the cities list, you can reference its index number in the sequence:\npython\ncities = ['Los Angeles', 'London', 'Tokyo']\ncities[0] # Los Angeles\nAccessing Elements Using Negative Indexing: To access the last element of any list, you can use -1 as the index number:\npython\ncities = ['Los Angeles', 'London', 'Tokyo']\ncities[-1] # Tokyo\nNegative indexing is used to access elements starting from the end of the list instead of the beginning at index 0 Creating Lists Using the list() constructor: Lists can also be created using the list() constructor The list() constructor is used to convert an iterable into a list:\n```python\ndeveloper = 'Jessica'\nprint(list(developer))\nResult: ['J', 'e', 's', 's', 'i', 'c', 'a']\n```\nFinding the Length of a List: You can use the len() function to get the length of a list:\npython\nnumbers = [1, 2, 3, 4, 5]\nlen(numbers) # 5\nList Mutability: Lists are mutable, meaning you can update any element in the list as long as you pass in a valid index number",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 0,
    "total_chunks": 16
  },
  {
    "id": "7611be6bede8f37e05ee0a081c401125",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "used to convert an iterable into a list: ```python developer = 'Jessica' print(list(developer)) Result: ['J', 'e', 's', 's', 'i', 'c', 'a'] ``` Finding the Length of a List: You can use the len() function to get the length of a list: python numbers = [1, 2, 3, 4, 5] len(numbers) # 5 List Mutability: Lists are mutable, meaning you can update any element in the list as long as you pass in a valid index numberTo update lists at a particular index, you can assign a new value to that index:\npython\nprogramming_languages = ['Python', 'Java', 'C++', 'Rust']\nprogramming_languages[0] = 'JavaScript'\nprint(programming_languages) # ['JavaScript', 'Java', 'C++', 'Rust']\nIndex Out of Range Error: If you pass in an index (either positive or negative) that is out of bounds for the list, then you will receive an IndexError:\n```python\nprogramming_languages = ['Python', 'Java', 'C++', 'Rust']\nprogramming_languages[10] = 'JavaScript'\n\"\"\"\nTraceback (most recent call last):\nFile \"\", line 1, in\nIndexError: list assignment index out of range\n\"\"\"\n```\nRemoving Elements from a List: Elements can be removed from a list using the del keyword:\npython\ndeveloper = ['Jane Doe', 23, 'Python Developer']\ndel developer[1]\nprint(developer) # ['Jane Doe', 'Python Developer']\nChecking if an Element Exists in a List: The in keyword can be used to check if an element exists in a list:\n```py\nprogramming_languages = ['Python', 'Java', 'C++', 'Rust']\n'Rust' in programming_languages # True\n'JavaScript' in programming_languages # False\n```\nNesting Lists: Lists can be nested inside other lists:\npython\ndeveloper = ['Alice', 25, ['Python', 'Rust', 'C++']]\nTo access the nested list, you will need to access it using index 2 since lists are zero-based indexed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 1,
    "total_chunks": 16
  },
  {
    "id": "0b83a1d740584f7631df351f19e769e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "if an Element Exists in a List: The in keyword can be used to check if an element exists in a list: ```py programming_languages = ['Python', 'Java', 'C++', 'Rust'] 'Rust' in programming_languages # True 'JavaScript' in programming_languages # False ``` Nesting Lists: Lists can be nested inside other lists: python developer = ['Alice', 25, ['Python', 'Rust', 'C++']] To access the nested list, you will need to access it using index 2 since lists are zero-based indexedpython\ndeveloper = ['Alice', 25, ['Python', 'Rust', 'C++']]\ndeveloper[2] # ['Python', 'Rust', 'C++']\nTo further access the second language from that nested list, you will need to access it using index 1:\npython\ndeveloper = ['Alice', 25, ['Python', 'Rust', 'C++']]\ndeveloper[2][1] # Rust\nUnpacking Values from a List: Unpacking values from a list is a technique used to assign values from a list to new variables Here is an example to unpack the developer list into new variables called name, age and job like this:\npy\ndeveloper = ['Alice', 34, 'Rust Developer']\nname, age, job = developer\nCollecting Remaining Items From a List: To collect any remaining elements from a list, you can use the asterisk (*) operator like this:\npy\ndeveloper = ['Alice', 34, 'Rust Developer']\nname, *rest = developer\nIf the number of variables on the left side of the assignment operator doesn't match the total number of items in the list, then you will receive a ValueError Slicing Lists: Slicing is the concept of accessing a portion of a list by using the slice operator : To slice a list that starts at index 1 and ends at index 3, you can use the following syntax:\npython\ndesserts = ['Cake', 'Cookies', 'Ice Cream', 'Pie']\ndesserts[1:3] # ['Cookies', 'Ice Cream']\nStep Intervals: It is also possible to specify a step interval which determines how much to increment between the indices",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 2,
    "total_chunks": 16
  },
  {
    "id": "2a06b1ce0804b443b5eda6fdd96c73fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "will receive a ValueError Slicing Lists: Slicing is the concept of accessing a portion of a list by using the slice operator : To slice a list that starts at index 1 and ends at index 3, you can use the following syntax: python desserts = ['Cake', 'Cookies', 'Ice Cream', 'Pie'] desserts[1:3] # ['Cookies', 'Ice Cream'] Step Intervals: It is also possible to specify a step interval which determines how much to increment between the indicesHere is an example if you want to extract a list of just even numbers using slicing:\npython\nnumbers = [1, 2, 3, 4, 5, 6]\nnumbers[1::2] # [2, 4, 6]\nList Methods\nappend(): Used to add an item to the end of the list Here is an example of using the append() method to add the number 6 to this numbers list:\npy\nnumbers = [1, 2, 3, 4, 5]\nnumbers append(6)\nprint(numbers) # [1, 2, 3, 4, 5, 6]\nAppending lists: The append() method can also be used to add one list at the end of another:\n```py\nnumbers = [1, 2, 3, 4, 5]\neven_numbers = [6, 8, 10]\nnumbers append(even_numbers)\nprint(numbers) # [1, 2, 3, 4, 5, [6, 8, 10]]\n```\nextend(): Used to add multiple items to the end of a list Here is an example of adding the numbers 6, 8, and 10 to the end of the numbers list:\n```py\nnumbers = [1, 2, 3, 4, 5]\neven_numbers = [6, 8, 10]\nnumbers extend(even_numbers)\nprint(numbers) # [1, 2, 3, 4, 5, 6, 8, 10]\n```\ninsert(): Used to insert an item at a specific index in the list Here is an example of using the insert() method:\n```py\nnumbers = [1, 2, 3, 4, 5]\nnumbers insert(2, 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 16
  },
  {
    "id": "e3e950e15ab3342daf983f7cee8e7d42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an example of adding the numbers 6, 8, and 10 to the end of the numbers list: ```py numbers = [1, 2, 3, 4, 5] even_numbers = [6, 8, 10] numbers extend(even_numbers) print(numbers) # [1, 2, 3, 4, 5, 6, 8, 10] ``` insert(): Used to insert an item at a specific index in the list Here is an example of using the insert() method: ```py numbers = [1, 2, 3, 4, 5] numbers insert(2, 25)\nprint(numbers) # [1, 2, 2 5, 3, 4, 5]\n```\nremove(): Used to remove an item from the list The remove() method will only remove the first occurrence of an item in the list:\n```py\nnumbers = [1, 2, 3, 4, 5, 5, 5]\nnumbers remove(5)\nprint(numbers) # [1, 2, 3, 4, 5, 5]\n```\npop(): Used to remove a specific item from the list and return it:\npy\nnumbers = [1, 2, 3, 4, 5]\nnumbers pop(1) # The number 2 is returned\nIf you don't specify an element for the pop method, then the last element is removed py\nnumbers = [1, 2, 3, 4, 5]\nnumbers pop() # The number 5 is returned\nclear(): Used to remove all items from the list:\n```py\nnumbers = [1, 2, 3, 4, 5]\nnumbers clear()\nprint(numbers) # []\n```\nsort(): The sort() method is used to sort the elements in place Here is an example of sorting a random list of numbers in place:\n```py\nnumbers = [19, 2, 35, 1, 67, 41]\nnumbers sort()\nprint(numbers) # [1, 2, 19, 35, 41, 67]\n```\nsorted(): Used to sort the elements in a list and return a new sorted list instead of modifying the original list",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 16
  },
  {
    "id": "b98734b69a1ea618072220784dee898f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2, 3, 4, 5] numbers clear() print(numbers) # [] ``` sort(): The sort() method is used to sort the elements in place Here is an example of sorting a random list of numbers in place: ```py numbers = [19, 2, 35, 1, 67, 41] numbers sort() print(numbers) # [1, 2, 19, 35, 41, 67] ``` sorted(): Used to sort the elements in a list and return a new sorted list instead of modifying the original listreverse(): Used to reverse the order of the elements in a list:\n```py\nnumbers = [6, 5, 4, 3, 2, 1]\nnumbers reverse()\nprint(numbers) # [1, 2, 3, 4, 5, 6]\n```\nindex(): Used to find the first index where an element can be found in a list:\npython\nprogramming_languages = ['Rust', 'Java', 'Python', 'C++']\nprogramming_languages index('Java') # 1\nIf the element cannot be found using the index() method, then the result will be a ValueError Tuples in Python\nDefinition: A tuple is a Python data type used to create an ordered sequence of values Tuples can contain a mixed set of data types:\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\nTuples are immutable, meaning the elements in the tuple cannot be changed once created",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 5,
    "total_chunks": 16
  },
  {
    "id": "d3cbd4e3a1534b8de456eb01debc61d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "programming_languages = ['Rust', 'Java', 'Python', 'C++'] programming_languages index('Java') # 1 If the element cannot be found using the index() method, then the result will be a ValueError Tuples in Python Definition: A tuple is a Python data type used to create an ordered sequence of values Tuples can contain a mixed set of data types: py developer = ('Alice', 34, 'Rust Developer') Tuples are immutable, meaning the elements in the tuple cannot be changed once createdIf you try to update one of the items in the tuple, you will get a TypeError:\n```py\nprogramming_languages = ('Python', 'Java', 'C++', 'Rust')\nprogramming_languages[0] = 'JavaScript'\n\"\"\"\nTraceback (most recent call last):\nFile \"\", line 1, in\nTypeError: \"tuple\" object does not support item assignment\n\"\"\"\n```\nAccessing Elements from a Tuple: To access an element from a tuple, use bracket notation and the index number:\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\ndeveloper[1] # 34\nNegative indexing can be used to access elements starting from the end of the tuple:\npy\nnumbers = (1, 2, 3, 4, 5)\nnumbers[-2] # 4\nIf you try to pass in an index number that exceeds or equals the length of the tuple, then you will receive an IndexError:\n```py\nnumbers = (1, 2, 3, 4, 5)\nnumbers[7]\n\"\"\"\nTraceback (most recent call last):\nFile \"\", line 1, in\nIndexError: tuple index out of range\n\"\"\"\n```\nA tuple can also be created using the tuple() constructor Within the constructor, you can pass in different iterables like strings, lists and even other tuples",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 6,
    "total_chunks": 16
  },
  {
    "id": "9606da276e5e1eda9ba665e2a28b5f84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "try to pass in an index number that exceeds or equals the length of the tuple, then you will receive an IndexError: ```py numbers = (1, 2, 3, 4, 5) numbers[7] \"\"\" Traceback (most recent call last): File \"\", line 1, in IndexError: tuple index out of range \"\"\" ``` A tuple can also be created using the tuple() constructor Within the constructor, you can pass in different iterables like strings, lists and even other tuples```python\ndeveloper = 'Jessica'\nprint(tuple(developer))\nResult: ('J', 'e', 's', 's', 'i', 'c', 'a')\n```\nVerifying Items in a Tuple: To check if an item is in a tuple, you can use the in keyword like this:\n```py\nprogramming_languages = ('Python', 'Java', 'C++', 'Rust')\n'Rust' in programming_languages # True\n'JavaScript' in programming_languages # False\n```\nUnpacking Tuples: Items can be unpacked from a tuple like this:\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\nname, age, job = developer\nIf you need to collect any remaining elements from a tuple, you can use the asterisk (*) operator like this:\npy\ndeveloper = ('Alice', 34, 'Rust Developer')\nname, *rest = developer\nSlicing Tuples: Slicing can be used to extract a portion of a tuple For example, the items pie and cookies can be sliced into a separate tuple:\npy\ndesserts = ('cake', 'pie', 'cookies', 'ice cream')\ndesserts[1:3] # ('pie', 'cookies')\nRemoving Items from Tuples: Removing an item from a tuple will raise a TypeError as tuples are immutable:\n```py\ndeveloper = ('Jane Doe', 23, 'Python Developer')\ndel developer[1]\n\"\"\"\nTraceback (most recent call last):\nFile \"\", line 1, in\nTypeError: \"tuple\" object doesn't support item deletion\n\"\"\"\n```\nWhen to use a Tuple vs a List : If you need a dynamic collection of elements where you can add, remove and update elements, then you should use a list If you know that you are working with a fixed and immutable collection of data, then you should use a tuple",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 7,
    "total_chunks": 16
  },
  {
    "id": "a2b6aed089c5a763fa0890199468ee9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Python Developer') del developer[1] \"\"\" Traceback (most recent call last): File \"\", line 1, in TypeError: \"tuple\" object doesn't support item deletion \"\"\" ``` When to use a Tuple vs a List : If you need a dynamic collection of elements where you can add, remove and update elements, then you should use a list If you know that you are working with a fixed and immutable collection of data, then you should use a tupleCommon Tuple Methods\ncount(): Used to determine how many times an item appears in a tuple For example, you can check how many times the language 'Rust' appears in the tuple:\npy\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust')\nprogramming_languages count('Rust') # 2\nIf the specified item in the count() function is not present at all in the tuple, then the return value will be 0:\npy\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust')\nprogramming_languages count('JavaScript') # 0\nIf no arguments are passed to the count() function, then Python will return a TypeError index(): Used to find the index where a particular item is present in the tuple Here is an example of using the index() method to find the index for the language 'Java':\npy\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust')\nprogramming_languages index('Java') # 1\nIf the specified item cannot be found, then Python will return a ValueError You can pass an optional start index to the index() method to specify where to start searching for the item in the tuple:\npy\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python')\nprogramming_languages index('Python', 3) # 5\nYou can also pass in an optional end index to the index() method to specify where to stop searching for the item in the tuple:\npy\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python', 'JavaScript', 'Python')\nprogramming_languages index('Python', 2, 5) # 2\nsorted(): Used to sort the elements in any iterable and return a new sorted list",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 8,
    "total_chunks": 16
  },
  {
    "id": "e322314cf089c3a98729b2fdea966c2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the item in the tuple: py programming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python') programming_languages index('Python', 3) # 5 You can also pass in an optional end index to the index() method to specify where to stop searching for the item in the tuple: py programming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python', 'JavaScript', 'Python') programming_languages index('Python', 2, 5) # 2 sorted(): Used to sort the elements in any iterable and return a new sorted listHere is an example of creating a new list of numbers using the sorted() function:\npy\nnumbers = (13, 2, 78, 3, 45, 67, 18, 7)\nsorted(numbers) # [2, 3, 7, 13, 18, 45, 67, 78]\nModifying Sorting Behavior: You can customize the sorting behavior for an iterable using the optional reverse and key arguments Here is an example of using the key argument to sort items in a tuple by length:\n```py\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python')\nsorted(programming_languages, key=len)\nResult\n['C++', 'Rust', 'Java', 'Rust', 'Python', 'Python']\n```\nYou can create a new list of values in reverse order, using the reverse argument like this:\n```py\nprogramming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python')\nprint(sorted(programming_languages, reverse=True))\nResult\n['Rust', 'Rust', 'Python', 'Python', 'Java', 'C++']\n```\nLoops in Python\nDefinition: Loops are used to repeat a block of code for a set number of times for loop: Used to iterate over a sequence (like a list, tuple or string) and execute a block of code for each item in that sequence",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 9,
    "total_chunks": 16
  },
  {
    "id": "3d1f4cb2beec7b951f9ec8e254b22a56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "list of values in reverse order, using the reverse argument like this: ```py programming_languages = ('Rust', 'Java', 'Python', 'C++', 'Rust', 'Python') print(sorted(programming_languages, reverse=True)) Result ['Rust', 'Rust', 'Python', 'Python', 'Java', 'C++'] ``` Loops in Python Definition: Loops are used to repeat a block of code for a set number of times for loop: Used to iterate over a sequence (like a list, tuple or string) and execute a block of code for each item in that sequenceHere is an example of using a for loop to iterate through a list and print each language to the console:\n```py\nprogramming_languages = ['Rust', 'Java', 'Python', 'C++']\nfor language in programming_languages:\nprint(language)\n\"\"\"\nResult\nRust\nJava\nPython\nC++\n\"\"\"\n```\nHere is an example of using a for loop to loop through the string code and print out each character:\n```py\nfor char in 'code':\nprint(char)\n\"\"\"\nResult\nc\no\nd\ne\n\"\"\"\n```\nfor loops can be nested Here is an example of using a nested for loop:\n```py\ncategories = ['Fruit', 'Vegetable']\nfoods = ['Apple', 'Carrot', 'Banana']\nfor category in categories:\nfor food in foods:\nprint(category, food)\n\"\"\"\nResult\nFruit Apple\nFruit Carrot\nFruit Banana\nVegetable Apple\nVegetable Carrot\nVegetable Banana\n\"\"\"\n```\nwhile loop: Repeats a block of code until the condition is False Here is an example of using a while loop for a guessing game:\n```py\nsecret_number = 3\nguess = 0\nwhile guess = secret_number:\nguess = int(input('Guess the number (1-5): '))\nif guess = secret_number:\nprint('Wrong Try again ')\nprint('You got it ')\n\"\"\"\nResult\nGuess the number (1-5): 2\nWrong Try again Guess the number (1-5): 1\nWrong Try again Guess the number (1-5): 3\nYou got it \"\"\"\n```\nbreak and continue statements: Used in loops to modify the execution of a loop The break statement is used to exit the loop immediately when a certain condition is met",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 10,
    "total_chunks": 16
  },
  {
    "id": "67563560deae930d87bd963e0a7c2b04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= int(input('Guess the number (1-5): ')) if guess = secret_number: print('Wrong Try again ') print('You got it ') \"\"\" Result Guess the number (1-5): 2 Wrong Try again Guess the number (1-5): 1 Wrong Try again Guess the number (1-5): 3 You got it \"\"\" ``` break and continue statements: Used in loops to modify the execution of a loop The break statement is used to exit the loop immediately when a certain condition is metHere is an example of using the break statement for a list of developer_names:\n```py\ndeveloper_names = ['Jess', 'Naomi', 'Tom']\nfor developer in developer_names:\nif developer == 'Naomi':\nbreak\nprint(developer)\n```\nThe continue statement is used to skip that current iteration and move onto the next iteration of the loop Here is an example to use the continue statement instead of a break statement:\n```py\ndeveloper_names = ['Jess', 'Naomi', 'Tom']\nfor developer in developer_names:\nif developer == 'Naomi':\ncontinue\nprint(developer)\n```\nBoth for and while loops can be combined with an else clause, which is executed only when the loop was not terminated by a break:\n```python\nwords = ['sky', 'apple', 'rhythm', 'fly', 'orange']\nfor word in words:\nfor letter in word:\nif letter lower() in 'aeiou':\nprint(f\"'{word}' contains the vowel '{letter}'\")\nbreak\nelse:\nprint(f\"'{word}' has no vowels\")\n```\nRanges and Their Use in Loops\nThe range() function: Used to generate a sequence of integers py\nrange(start, stop, step)\nThe required stop argument is an integer(non-inclusive) that represents the end point for the sequence of numbers being generated Here is an example of using the range() function:\npy\nfor num in range(3):\nprint(num)\nIf a start argument is not specified, then the default will be 0 By default the sequence of integers will increment by 1 You can use the optional step argument to change the default increment value Here is an example of generating a sequence of even integers from 2 up to but not including 11 (i e",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 11,
    "total_chunks": 16
  },
  {
    "id": "b69399280d74052c9f3689051b51d60b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of numbers being generated Here is an example of using the range() function: py for num in range(3): print(num) If a start argument is not specified, then the default will be 0 By default the sequence of integers will increment by 1 You can use the optional step argument to change the default increment value Here is an example of generating a sequence of even integers from 2 up to but not including 11 (i e, includes 10)\npy\nfor num in range(2, 11, 2):\nprint(num)\nIf you don't provide any arguments to the range() function, then you will get a TypeError The range() function only accepts integers for arguments and not floats Using floats will also result in a TypeError:\npy\nERROR Traceback (most recent call last):\nFile \"<main py>\", line 1, in <module>\nTypeError: 'float' object cannot be interpreted as an integer\nYou can use a negative integer for the step argument to generate a sequence of integers in decrementing order:\npy\nfor num in range(40, 0, -10):\nprint(num)\nThe range() function can also be used to create a list of integers by using it with the list constructor The list constructor is used to convert an iterable into a list Here is an example of generating a list of even integers between 2 and 10 inclusive:\npy\nnumbers = list(range(2, 11, 2))\nprint(numbers) # [2, 4, 6, 8, 10]\nenumerate() and zip() functions in Python\nenumerate(): used to iterate over a sequence and keep track of the index for each item in that sequence The enumerate() function takes an iterable as an argument and returns an enumerate object that consist of the index and value of each item in the iterable ```python\nlanguages = ['Spanish', 'English', 'Russian', 'Chinese']\nfor index, language in enumerate(languages):\nprint(f'Index {index} and language {language}')\nResult\nIndex 0 and language Spanish\nIndex 1 and language English\nIndex 2 and language Russian\nIndex 3 and language Chinese\n```\nThe enumerate() function can also be used outside of a for loop:\n```python\nlanguages = ['Spanish', 'English', 'Russian', 'Chinese']\nprint(list(enumerate(languages)))\n```\nThe enumerate() function also accepts an optional start argument that specifies the starting value for the count",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 12,
    "total_chunks": 16
  },
  {
    "id": "413525f56953c13de489a77cdd5a4dd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "languages = ['Spanish', 'English', 'Russian', 'Chinese'] for index, language in enumerate(languages): print(f'Index {index} and language {language}') Result Index 0 and language Spanish Index 1 and language English Index 2 and language Russian Index 3 and language Chinese ``` The enumerate() function can also be used outside of a for loop: ```python languages = ['Spanish', 'English', 'Russian', 'Chinese'] print(list(enumerate(languages))) ``` The enumerate() function also accepts an optional start argument that specifies the starting value for the countIf this argument is omitted, then the count will begin at 0 zip() : Used to iterate over multiple iterables in parallel Here's an example using the zip() function to iterate over developers and ids:\n```python\ndevelopers = ['Naomi', 'Dario', 'Jessica', 'Tom']\nids = [1, 2, 3, 4]\nfor name, id in zip(developers, ids):\nprint(f'Name: {name}')\nprint(f'ID: {id}')\n\"\"\"\nResult\nName: Naomi\nID: 1\nName: Dario\nID: 2\nName: Jessica\nID: 3\nName: Tom\nID: 4\n\"\"\"\n```\nList comprehensions in Python\nDefinition: List comprehension allows you to create a new list in a single line by combining the loop and the condition directly within square brackets This makes the code shorter and often easier to read py\neven_numbers = [num for num in range(21) if num % 2 == 0]\nprint(even_numbers)\nIterable methods\nfilter(): Used to filter elements from an iterable based on a condition It returns an iterator that contains only the elements that satisfy the condition Here is an example of creating a new list of just words longer than four characters:\n```py\nwords = ['tree', 'sky', 'mountain', 'river', 'cloud', 'sun']\ndef is_long_word(word):\nreturn len(word) > 4\nlong_words = list(filter(is_long_word, words))\nprint(long_words) # ['mountain', 'river', 'cloud']\n```\nmap(): Used to apply a function to each item in an iterable and return a new iterable with the results",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 13,
    "total_chunks": 16
  },
  {
    "id": "322a90a86f9bca82eb6093d004e147a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a condition It returns an iterator that contains only the elements that satisfy the condition Here is an example of creating a new list of just words longer than four characters: ```py words = ['tree', 'sky', 'mountain', 'river', 'cloud', 'sun'] def is_long_word(word): return len(word) > 4 long_words = list(filter(is_long_word, words)) print(long_words) # ['mountain', 'river', 'cloud'] ``` map(): Used to apply a function to each item in an iterable and return a new iterable with the resultsHere is an example of using the map() function to convert a list of celsius temperatures to fahrenheit:\n```py\ncelsius = [0, 10, 20, 30, 40]\ndef to_fahrenheit(temp):\nreturn (temp * 9/5) + 32\nfahrenheit = list(map(to_fahrenheit, celsius))\nprint(fahrenheit) # [32 0, 50 0, 68 0, 86 0, 104 0]\n```\nsum(): Used to get the sum from an iterable like a list or tuple Here is an example of using the sum() function:\npy\nnumbers = [5, 10, 15, 20]\ntotal = sum(numbers)\nprint(total) # Result: 50\nYou can also pass in an optional start argument which sets the initial value for the summation Here is an updated example using the start argument as a positional argument:\npy\nnumbers = [5, 10, 15, 20]\ntotal = sum(numbers, 10) # positional argument\nprint(total) # 60\nYou can also choose to use the start argument as a keyword argument like this instead:\npy\nnumbers = [5, 10, 15, 20]\ntotal = sum(numbers, start=10) # keyword argument\nprint(total) # 60\nLambda functions\nDefinition: A lambda function in Python is a concise way to create a function without a name (an anonymous function) Lambda functions are often used as an argument to another function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 14,
    "total_chunks": 16
  },
  {
    "id": "0e0ce87a4b9064106fb489313986b486",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "total = sum(numbers, 10) # positional argument print(total) # 60 You can also choose to use the start argument as a keyword argument like this instead: py numbers = [5, 10, 15, 20] total = sum(numbers, start=10) # keyword argument print(total) # 60 Lambda functions Definition: A lambda function in Python is a concise way to create a function without a name (an anonymous function) Lambda functions are often used as an argument to another functionHere is an example of a lambda function:\n```py\nnumbers = [1, 2, 3, 4, 5]\neven_numbers = list(filter(lambda x: x % 2 == 0, numbers))\nprint(even_numbers)  # [2, 4]\n```\nBest practices for using lambda functions include not assigning them to a variable, keeping them simple and readable, and using them for short, one-off functions --assignment--\nReview the Loops and Sequences topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 21058,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-loops-and-sequences\\67f39b91583dec1e1eddbb9e.md",
      "source_type": "git_repo"
    },
    "token_count": 207,
    "chunk_index": 15,
    "total_chunks": 16
  },
  {
    "id": "eddc57944832d8f722746168eb2c8242",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39b40deaec81a3e40e0c5\ntitle: Python Basics Review\nchallengeType: 24\ndashedName: review-python-basics\n--description--\nWhat is Python Introduction: Python is a general-purpose programming language known for its simplicity and ease of use Python is used in many fields like data science and machine learning, web development, scripting and automation, embedded systems and IoT, and much more Common Use Cases: Python is used in data science, machine learning, web development, cybersecurity, automation and microcomputers like the Raspberry Pi and MicroPython-compatible boards Python in Your Local Environment\nInstallation: The best way to install Python on Windows, Mac, and Linux is to download the installer from the official Python website (https://www python org/) Variables\nDeclaring Variables: To declare a variable, you start with the variable name followed by the assignment operator (=) and then the data type This can be a number, string, boolean, etc Here are some examples:\npy\nname = 'John Doe'\nage = 25\nNaming Conventions for Variables: Here are the naming conventions you should use for variables:\nVariable names can only start with a letter or an underscore (_), not a number Variable names can only contain alphanumeric characters (a-z, A-Z, 0-9) and underscores (_) Variable names are case-sensitive — age, Age, and AGE are all considered unique Variable names cannot be one of Python’s reserved keywords such as if, class, or def Variables names with multiple words are separated by underscores Ex snake_case Comments\nSingle Line Comments: These types of comments should be used for short notes you wish to leave in your code ```py\nThis is a single line comment\n```\nMulti-line Strings: These types of strings can be used to leave larger notes or to comment out sections of code\n```py\n\"\"\"\nThis is is a multi-line string Here is some code commented out name = 'John Doe'\nage = 25\n\"\"\"\n```\nprint() Function: To print data to the console, you can use the print() function like this:\npy\nprint('Hello world ') # Hello world Common Data Types in Python\nIntroduction: Python is a dynamically-typed language like JavaScript, meaning you don't need to explicitly declare types for variables The language knows what the type of a variable is based on what you assign to the variable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 16
  },
  {
    "id": "221b395d08f4382356ec6314e84b29a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "code commented out name = 'John Doe' age = 25 \"\"\" ``` print() Function: To print data to the console, you can use the print() function like this: py print('Hello world ') # Hello world Common Data Types in Python Introduction: Python is a dynamically-typed language like JavaScript, meaning you don't need to explicitly declare types for variables The language knows what the type of a variable is based on what you assign to the variableInteger: A whole number without decimals:\npy\nmy_integer_var = 10\nprint('Integer:', my_integer_var) # Integer: 10\nFloat: A number with decimals:\npy\nmy_float_var = 4 50\nprint('Float:', my_float_var) # Float 4 50\nComplex: A number with a real and imaginary part:\npy\nmy_complex_var = 3 + 4j\nprint('Complex:', my_complex_var) # Complex: (3+4j)\nString: A sequence of characters wrapped in quotes:\npy\nmy_string_var = 'hello'\nprint('String:', my_string_var) # String: hello\nBoolean: A value representing either True or False:\npy\nmy_boolean_var = True\nprint('Boolean:', my_boolean_var) # Boolean: True\nSet: An unordered collection of unique elements:\npy\nmy_set_var = {7, 5, 8}\nprint('Set:', my_set_var) # Set: {7, 5, 8}\nDictionary: A collection of key-value pairs, enclosed in curly braces:\npy\nmy_dictionary_var = {\"name\": \"Alice\", \"age\": 25}\nprint('Dictionary:', my_dictionary_var) # Dictionary: {'name': 'Alice', 'age': 25}\nTuple: An immutable ordered collection, enclosed in parentheses:\npy\nmy_tuple_var = (7, 5, 8)\nprint('Tuple:', my_tuple_var) # Tuple: (7, 5, 8)\nRange: A sequence of numbers, often used in loops:\npy\nmy_range_var = range(5)\nprint(my_range_var) # range(0, 5)\nList: An ordered collection of elements that supports different data types:\npy\nmy_list = [22, 'Hello world', 3 14, True]\nprint(my_list) # [22, 'Hello world', 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 16
  },
  {
    "id": "c7615dd483634add4c9c3c15406bdaba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{\"name\": \"Alice\", \"age\": 25} print('Dictionary:', my_dictionary_var) # Dictionary: {'name': 'Alice', 'age': 25} Tuple: An immutable ordered collection, enclosed in parentheses: py my_tuple_var = (7, 5, 8) print('Tuple:', my_tuple_var) # Tuple: (7, 5, 8) Range: A sequence of numbers, often used in loops: py my_range_var = range(5) print(my_range_var) # range(0, 5) List: An ordered collection of elements that supports different data types: py my_list = [22, 'Hello world', 3 14, True] print(my_list) # [22, 'Hello world', 314, True]\nNone: A special value that represents the absence of a value:\npy\nmy_none_var = None\nprint('None:', my_none_var) # None: None\nImmutable and Mutable Types\nImmutable Types: These types cannot change once declared, although you can point their variables at something new, which is called reassignment They include integer, float, complex, boolean, string, tuple, range, and None Mutable Types: These types can change once declared You can add, remove, or update their items They include collection types such as list, set, and dictionary type() Function: To see the type for a variable, you can use the type() function like this:\n```py\ngreeting = 'Hello there '\nage = 21\nprint(type(greeting)) #\nprint(type(age)) #\n```\nisinstance() Function: This is used to check if a variable matches a specific data type:\npy\nprint(isinstance('Hello world', str)) # True\nprint(isinstance('John Doe', int)) # False\nWorking with Strings\nDefinition: As you recall from JavaScript, strings are immutable which means you can not change them after they have been created In Python, you can use either single or double quotes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 2,
    "total_chunks": 16
  },
  {
    "id": "9aee8d7847d18ade5f4c6b4f1fc57c55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "like this: ```py greeting = 'Hello there ' age = 21 print(type(greeting)) # print(type(age)) # ``` isinstance() Function: This is used to check if a variable matches a specific data type: py print(isinstance('Hello world', str)) # True print(isinstance('John Doe', int)) # False Working with Strings Definition: As you recall from JavaScript, strings are immutable which means you can not change them after they have been created In Python, you can use either single or double quotesIt is recommended to chose a rule and stick with it:\npy\ndeveloper = 'Jessica'\ncity = 'Los Angeles'\nAccessing Characters from Strings: You can access characters from strings by using bracket notation like this:\n```py\nmy_str = \"Hello world\"\nprint(my_str[0])  # H\nprint(my_str[6])  # w\nprint(my_str[-1])  # d\nprint(my_str[-2]) # l\n```\nEscaping Strings: You can use a backslash (\\) if your string contains quotes like this:\npy\nmsg = 'It\\'s a sunny day'\nquote = \"She said, \\\"Hello \\\"\"\nString Concatenation: To concatenate strings, you can use the + operator like this:\npy\ndeveloper = 'Jessica'\nprint('My name is ' + developer + ' ') # My name is Jessica\nAnother way to concatenate strings is by using the += operator This is used to perform concatenation and assignment in the same step like this:\n```py\ngreeting = 'My name is '\ndeveloper = 'Jessica '\ngreeting += developer\nprint(greeting) # My name is Jessica ```\nf-strings: This is short for formatted string literals It allows you to handle interpolation and also do some concatenation with a compact and readable syntax:\npy\ndeveloper = 'Jessica'\ngreeting = f'My name is {developer} '\nprint(greeting) # My name is Jessica String Slicing: This is when you can extract portions of a string Here is the basic syntax:\npy\nstr[start:stop:step]\nThe start position represents the index where the extraction should be begin The stop position is where the slice should end This position is non inclusive The step position represents the interval to increment for the slicing Here are some examples:\n```py\nmessage = 'Python is fun '\nprint(message[0:6])  # Python\nprint(message[7:])  # is fun",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 16
  },
  {
    "id": "40c44865b7b3bebd6ff89389d0f4a699",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is Jessica String Slicing: This is when you can extract portions of a string Here is the basic syntax: py str[start:stop:step] The start position represents the index where the extraction should be begin The stop position is where the slice should end This position is non inclusive The step position represents the interval to increment for the slicing Here are some examples: ```py message = 'Python is fun ' print(message[0:6]) # Python print(message[7:]) # is funprint(message[::2])  # Pto sfn\n```\nGetting the Length of a String: The len() function is used to return the number of the characters in the string:\n```py\ndeveloper = 'Jessica'\nprint(len(developer)) # 7\n```\nWorking with the in operator\nin Operator: This returns a boolean that specifies whether the character or characters exist in the string or not:\n```py\nmy_str = 'Hello world'\nprint('Hello' in my_str)  # True\nprint('hey' in my_str)    # False\nprint('hi' in my_str)    # False\nprint('e' in my_str)  # True\nprint('f' in my_str)  # False\n```\nCommon String Methods\nstr upper(): This returns a new string with all characters converted to uppercase:\n```py\ndeveloper = 'Jessica'\nprint(developer upper()) # JESSICA\n```\nstr lower(): This returns a new string with all characters converted to lowercase:\n```py\ndeveloper = 'Jessica'\nprint(developer lower()) # jessica\n```\nstr strip(): This returns a copy of the string with specified leading and trailing characters removed (if no argument is passed to the method, it removes leading and trailing whitespace) ```py\ngreeting = '  hello world  '\ntrimmed_my_str = greeting strip()\nprint(trimmed_my_str)  # 'hello world'\n```\nreplace(): This returns a new string with all occurrences of the old string replaced by a new one ```py\ngreeting = 'hello world'\nreplaced_my_str = greeting replace('hello', 'hi')\nprint(replaced_my_str)  # 'hi world'\n```\nstr split(): This is used to split a string into a list using a specified separator A separator is a string specifying where the split should happen ```py\ndashed_name = 'example-dashed-name'\nsplit_words = dashed_name",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 16
  },
  {
    "id": "9e6167f40dddcdd6577e94b26448f50a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "trimmed_my_str = greeting strip() print(trimmed_my_str) # 'hello world' ``` replace(): This returns a new string with all occurrences of the old string replaced by a new one ```py greeting = 'hello world' replaced_my_str = greeting replace('hello', 'hi') print(replaced_my_str) # 'hi world' ``` str split(): This is used to split a string into a list using a specified separator A separator is a string specifying where the split should happen ```py dashed_name = 'example-dashed-name' split_words = dashed_namesplit('-')\nprint(split_words)  # ['example', 'dashed', 'name']\n```\nstr join(): This is used to join elements of an iterable into a string with a separator An iterable is a collection of elements that can be looped over like a list, string or a tuple ```py\nexample_list = ['example', 'dashed', 'name']\njoined_str = ' ' join(example_list)\nprint(joined_str)  # example dashed name\n```\nstr startswith(prefix): This returns a boolean indicating if a string starts with the specified prefix:\n```py\ndeveloper = 'Naomi'\nresult = developer startswith('N')\nprint(result)  # True\n```\nstr endswith(suffix): This returns a boolean indicating if a string ends with the specified suffix:\n```py\ndeveloper = 'Naomi'\nresult = developer endswith('N')\nprint(result)  # False\n```\nstr find(): This returns the index for the first occurrence of a substring If one is not found, then -1 is returned:\n```py\ndeveloper = 'Naomi'\nresult = developer find('N')\nprint(result)  # 0\ncity = 'Los Angeles'\nprint(city find('New')) # -1\n```\nstr count(substring): This counts how many times a substring appears in a string:\npy\ncity = 'Los Angeles'\nprint(city count('e')) # 2\nstr capitalize(): This returns a new string with the first character capitalized and the other characters lowercased:\npy\ndessert = 'chocolate cake'\nprint(dessert capitalize()) # Chocolate cake\nstr isupper(): This returns True if all letters in the string are uppercase and False if otherwise:\npy\ndessert = 'chocolate cake'\nprint(dessert isupper()) # False\nstr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 5,
    "total_chunks": 16
  },
  {
    "id": "35a234e069aebb18121b51831378eac5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "str count(substring): This counts how many times a substring appears in a string: py city = 'Los Angeles' print(city count('e')) # 2 str capitalize(): This returns a new string with the first character capitalized and the other characters lowercased: py dessert = 'chocolate cake' print(dessert capitalize()) # Chocolate cake str isupper(): This returns True if all letters in the string are uppercase and False if otherwise: py dessert = 'chocolate cake' print(dessert isupper()) # False strislower(): This returns True if all letters in the string are lowercase and False if otherwise:\npy\ndessert = 'chocolate cake'\nprint(dessert islower()) # True\nstr title(): This returns a new string with the first letter of each word capitalized:\npy\ncity = 'los angeles'\nprint(city title()) # Los Angeles\nstr maketrans(): This method is used to create a table of 1 to 1 character mappings for translation It is often used with the translate() method which applies that table to a string and return the translated result ```py\ntrans_table = str maketrans('abc', '123')\nprint(trans_table) # {97: 49, 98: 50, 99: 51}\nresult = 'abcabc' translate(trans_table)\nprint(result)  # 123123\n```\nCommon Operations used with Integers and Floats\nBasic Math Operations: In Python, you can do basic math operations with integers and floats including addition, subtraction, multiplication and division:\n```py\nint_1 = 56\nint_2 = 12\nfloat_1 = 5 4\nfloat_2 = 12 0\nAddition\nprint('Integer Addition:', int_1 + int_2) # Integer Addition: 68\nprint('Float Addition:', float_1 + float_2) # Float Addition: 17 4\nSubtraction\nprint('Int Subtraction:', int_1 - int_2) # Int Subtraction: 44\nprint('Float Subtraction:',  float_2 - float_1) # Float Subtraction: 6 6\nMultiplication\nprint('Int Multiplication:', int_1 * int_2) # Int Multiplication: 672\nprint('Float Multiplication:', float_2 * float_1) # Float Multiplication: 64",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 6,
    "total_chunks": 16
  },
  {
    "id": "d1918e4e43118e7da32a29972125be5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and division: ```py int_1 = 56 int_2 = 12 float_1 = 5 4 float_2 = 12 0 Addition print('Integer Addition:', int_1 + int_2) # Integer Addition: 68 print('Float Addition:', float_1 + float_2) # Float Addition: 17 4 Subtraction print('Int Subtraction:', int_1 - int_2) # Int Subtraction: 44 print('Float Subtraction:', float_2 - float_1) # Float Subtraction: 6 6 Multiplication print('Int Multiplication:', int_1 * int_2) # Int Multiplication: 672 print('Float Multiplication:', float_2 * float_1) # Float Multiplication: 6480000000000001\nDivision\nprint('Int Division:', int_1 / int_2) # Int Division: 4 666666666666667\nprint('Float Division:', float_2 / float_1) # Float Division: 2 222222222222222\n```\nWhen you add a float and an integer, the result will be converted to a float like this:\n```py\nint_1 = 56\nfloat_1 = 5 4\nprint(int_1 + float_1) # 61 4\n```\nModulus Operator (%): This returns the remainder when a number is divided by another number:\n```py\nint_1 = 56\nint_2 = 12\nprint(int_1 % int_2) # 8\n```\nFloor Division (//): This operator is used to divide two numbers and round down the result to the nearest whole number:\n```py\nint_1 = 56\nint_2 = 12\nprint(int_1 // int_2) # 4\n```\nExponentiation Operator (**): This operator is used to raise a number to the power of another:\n```py\nint_1 = 4\nint_2 = 2\nprint(int_1 ** int_2) # 16\n```\nfloat() Function: You can use this function to convert an integer to float ```py\nnum = 4\nprint(float(num)) # 4 0\n```\nint() Function: You can use this function to convert an float to an integer ```py\nnum = 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 7,
    "total_chunks": 16
  },
  {
    "id": "48eb011918b3db58a9bc1e3d8eaa9528",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "12 print(int_1 // int_2) # 4 ``` Exponentiation Operator (**): This operator is used to raise a number to the power of another: ```py int_1 = 4 int_2 = 2 print(int_1 ** int_2) # 16 ``` float() Function: You can use this function to convert an integer to float ```py num = 4 print(float(num)) # 4 0 ``` int() Function: You can use this function to convert an float to an integer ```py num = 40\nprint(int(num)) # 4\n```\nround() Function: This is used to round a number to the nearest whole integer:\n```py\nnum_1 = 3 4\nnum_2 = 7 7\nprint(round(num_1)) # 3\nprint(round(num_2)) # 8\n```\nabs() Function: This is used to return the absolute value of a number:\n```py\nnum = -13\nprint(abs(num)) # 13\n```\nbin() Function: This is used to convert an integer to its binary representation as a string:\n```py\nnum = 56\nprint(bin(num))  # 0b111000\n```\noct() Function: This is used to convert an integer to its octal representation as a string:\n```py\nnum = 56\nprint(oct(num))  # 0o70\n```\nhex() Function: This is used to convert an integer to its hexadecimal representation as a string:\n```py\nnum = 56\nprint(hex(num))  # 0x38\n```\npow() Function: This is used to raise a number to the power of another:\npy\nresult = pow(2, 3)\nprint(result)  # 8\nAugmented Assignments\nDefinition: Augmented assignment combines a binary operation with an assignment in one step It takes a variable, applies an operation to it with another value, and stores the result back into the same variable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 8,
    "total_chunks": 16
  },
  {
    "id": "412d80788436169c097d349095786dd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "convert an integer to its hexadecimal representation as a string: ```py num = 56 print(hex(num)) # 0x38 ``` pow() Function: This is used to raise a number to the power of another: py result = pow(2, 3) print(result) # 8 Augmented Assignments Definition: Augmented assignment combines a binary operation with an assignment in one step It takes a variable, applies an operation to it with another value, and stores the result back into the same variable```py\nAddition assignment\nmy_var = 10\nmy_var += 5\nprint(my_var) # 15\nSubtraction assignment\ncount = 14\ncount -= 3\nprint(count) # 11\nMultiplication assignment\nproduct = 65\nproduct *= 7\nprint(product) # 455\nDivision assignment\nprice = 100\nprice /= 4\nprint(price) # 25 0\nFloor Division assignment\ntotal_pages = 23\ntotal_pages //= 5\nprint(total_pages) # 4\nModulus assignment\nbits = 35\nbits %= 2\nprint(bits) # 1\nExponentiation assignment\npower = 2\npower **= 3\nprint(power) # 8\n```\nThere are other augmented assignment operators too, like those for bitwise operators They include &=, ^=, >>=, and <<= Working with Functions\nDefinition: Functions are reusable pieces of code that take inputs (arguments) and returns an output",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 9,
    "total_chunks": 16
  },
  {
    "id": "4f052ad39acb4db7b142264239101aff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "print(price) # 25 0 Floor Division assignment total_pages = 23 total_pages //= 5 print(total_pages) # 4 Modulus assignment bits = 35 bits %= 2 print(bits) # 1 Exponentiation assignment power = 2 power **= 3 print(power) # 8 ``` There are other augmented assignment operators too, like those for bitwise operators They include &=, ^=, >>=, and <<= Working with Functions Definition: Functions are reusable pieces of code that take inputs (arguments) and returns an outputTo call a function, you need to reference the function name followed by a set of parenthesis:\n```py\nDefining a function\ndef get_sum(num_1, num_2):\nreturn num_1 + num_2\nresult = get_sum(3, 4) # function call\nprint(result) # 7\n```\nIf a function does not explicitly return a value, then the default return value is None:\n```py\ndef greet():\nprint('hello')\nresult = greet() # hello\nprint(result) # None\n```\nYou can also supply default values to parameters like this:\n```py\ndef get_sum(num_1, num_2=2):\nreturn num_1 + num_2\nresult = get_sum(3)\nprint(result) # 5\n```\nIf you call the function without the correct number of arguments, you will get a TypeError:\n```py\ndef calculate_sum(a, b):\nprint(a + b)\ncalculate_sum()\nTypeError: calculate_sum() missing 2 required positional arguments: 'a' and 'b'\n```\nCommon Built-in Functions\ninput() Function: This is used to prompt the user for some input:\npy\nname = input('What is your name ') # User types 'Kolade' and presses Enter\nprint('Hello', name) # Hello Kolade\nint() Function: This is used to convert a number, boolean, or a numeric string into an integer:\npy\nprint(int(3 14)) # 3\nprint(int('42')) # 42\nprint(int(True)) # 1\nprint(int(False)) # 0\nDecorators\nDefinition: Decorators are a special kind of function in Python They are like wrappers for other functions, so they take another function as an argument ```py\ndef say_hello():\nname = input('What is your name",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 10,
    "total_chunks": 16
  },
  {
    "id": "7dc703f9bf17285880dc4fd1ce0122d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "types 'Kolade' and presses Enter print('Hello', name) # Hello Kolade int() Function: This is used to convert a number, boolean, or a numeric string into an integer: py print(int(3 14)) # 3 print(int('42')) # 42 print(int(True)) # 1 print(int(False)) # 0 Decorators Definition: Decorators are a special kind of function in Python They are like wrappers for other functions, so they take another function as an argument ```py def say_hello(): name = input('What is your name')\nreturn 'Hello ' + name\ndef uppercase_decorator(func):\ndef wrapper():\noriginal_func = func()\nmodified_func = original_func upper()\nreturn modified_func\nreturn wrapper\nsay_hello_res = uppercase_decorator(say_hello)\nprint(say_hello_res())\n```\nScope in Python\nLocal Scope: This is when a variable declared inside a function or class can only be accessed within that function or class py\ndef my_func():\nnum = 10\nprint(num)\nEnclosing Scope: This is when a function that's nested inside another function can access the variables of the function it's nested within ```py\ndef outer_func():\nmsg = 'Hello there '\ndef inner_func():\nprint(msg)\ninner_func()\nprint(outer_func()) # Hello there ```\nGlobal Scope: This refers to variables that are declared outside any functions or classes which can be accessed from anywhere in the program ```py\ntax = 0 70\ndef get_total(subtotal):\ntotal = subtotal + (subtotal * tax)\nreturn total\nprint(get_total(100))  # 170 0\n```\nBuilt-in Scope: Reserved names in Python for predefined functions, modules, keywords, and objects py\nprint(str(45)) # '45'\nprint(type(3 14)) # <class 'float'>\nprint(isinstance(3, str)) # False\nComparison Operators\nEqual (==): Checks if two values are equal:\npy\nprint(3 == 4) # False\nNot equal ( =): Checks if two values are not equal:\npy\nprint(3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 11,
    "total_chunks": 16
  },
  {
    "id": "bad5093e0a24e876cbbaf79fbdd433d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "```py tax = 0 70 def get_total(subtotal): total = subtotal + (subtotal * tax) return total print(get_total(100)) # 170 0 ``` Built-in Scope: Reserved names in Python for predefined functions, modules, keywords, and objects py print(str(45)) # '45' print(type(3 14)) # <class 'float'> print(isinstance(3, str)) # False Comparison Operators Equal (==): Checks if two values are equal: py print(3 == 4) # False Not equal ( =): Checks if two values are not equal: py print(3= 4) # True\nStrictly greater than (>): Checks if one value is greater than another:\npy\nprint(3 > 4) # False\nStrictly less than (<): Checks if one value is less than another:\npy\nprint(3 < 4) # True\nGreater than or equal(>=): Checks if one value is greater than or equal to another:\npy\nprint(3 >= 4) # False\nLess than or equal(<=): Checks if one value is less than or equal to another:\npy\nprint(3 <= 4) # True\nWorking with if, elif and else Statements\nif Statements: These are conditions used to determine if something is true or not If the condition evaluates to True, then that block of code will run ```py\nage = 18\nif age >= 18:\nprint('You are an adult') # You are an adult\n```\nelif Statement: These are conditions that come after an if statement If the elif condition evaluates to True, then that block of code will run ```py\nage = 16\nif age >= 18:\nprint('You are an adult')\nelif age >= 13:\nprint('You are a teenager')  # You are a teenager\n```\nelse Clause: This will run if no other conditions evaluate to True",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 12,
    "total_chunks": 16
  },
  {
    "id": "066b2453250e1a5089a34bda32efcdc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "age >= 18: print('You are an adult') # You are an adult ``` elif Statement: These are conditions that come after an if statement If the elif condition evaluates to True, then that block of code will run ```py age = 16 if age >= 18: print('You are an adult') elif age >= 13: print('You are a teenager') # You are a teenager ``` else Clause: This will run if no other conditions evaluate to True```py\nage = 12\nif age >= 18:\nprint('You are an adult')\nelif age >= 13:\nprint('You are a teenager')\nelse:\nprint('You are a child')  # You are a child\n```\nYou can also use nested if statements like this:\n```py\nis_citizen = True\nage = 25\nif is_citizen:\nif age >= 18:\nprint('You are eligible to vote') # You are eligible to vote\nelse:\nprint('You are not eligible to vote')\n```\nTruthy and Falsy Values\nDefinition: In Python, every value has an inherent boolean value, or a built-in sense of whether it should be treated as True or False in a logical context Many values are considered truthy, that is, they evaluate to True in a logical context Others are falsy, meaning they evaluate to False Here are some examples of falsy values:\nmd\nNone\nFalse\nInteger 0\nFloat 0 0\nEmpty strings ''\nOther values like non-zero numbers, and non-empty strings are truthy Working with the bool() Function\nDefinition: If you want to check whether a value is truthy or falsy, you can use the built-in bool() function It explicitly converts a value to its boolean equivalent and returns True for truthy values and False for falsy values Here are a few examples:\n```py\nprint(bool(False)) # False\nprint(bool(0))  # False\nprint(bool('')) # False\nprint(bool(True)) # True\nprint(bool(1)) # True\nprint(bool('Hello')) # True\n```\nBoolean Operators and Short-circuiting\nDefinition: These are special operators that allow you to combine multiple expressions to create more complex decision-making logic in your code There are three Boolean operators in Python: and, or, and not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 13,
    "total_chunks": 16
  },
  {
    "id": "bc5256c7761118e45bd302c902760dec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to its boolean equivalent and returns True for truthy values and False for falsy values Here are a few examples: ```py print(bool(False)) # False print(bool(0)) # False print(bool('')) # False print(bool(True)) # True print(bool(1)) # True print(bool('Hello')) # True ``` Boolean Operators and Short-circuiting Definition: These are special operators that allow you to combine multiple expressions to create more complex decision-making logic in your code There are three Boolean operators in Python: and, or, and notand Operator: This operator takes two operands and returns the first operand if it is falsy, otherwise, it returns the second operand Both operands must be truthy for an expression to result in a truthy value ```py\nis_citizen = True\nage = 25\nprint(is_citizen and age) # 25\n```\nYou can also use the and operator in conditionals like this:\n```py\nis_citizen = True\nage = 25\nif is_citizen and age >= 18:\nprint('You are eligible to vote') # You are eligible to vote\nelse:\nprint('You are not eligible to vote')\n```\nor Operator: This operator returns the first operand if it is truthy, otherwise, it returns the second operand An or expression results in a truthy value if at least one operand is truthy Here is an example:\n```py\nage = 19\nis_employed = False\nprint(age or is_employed) # 19\n```\nJust like with the and operator, you can use the or operator in conditionals like this:\n```py\nage = 19\nis_student = True\nif age < 18 or is_student:\nprint('You are eligible for a student discount') # You are eligible for a student discount\nelse:\nprint('You are not eligible for a student discount')\n```\nShort-circuiting: The and and or operators are known as a short-circuit operators Short-circuiting means Python checks values from left to right and stops as soon as it determines the final result not Operator: This operator takes a single operand and inverts its boolean value It converts truthy values to False and falsy values to True Unlike the previous operators we looked at, not always returns True or False",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 14,
    "total_chunks": 16
  },
  {
    "id": "627f1ba8e50622f812b03d027e222276",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "are not eligible for a student discount') ``` Short-circuiting: The and and or operators are known as a short-circuit operators Short-circuiting means Python checks values from left to right and stops as soon as it determines the final result not Operator: This operator takes a single operand and inverts its boolean value It converts truthy values to False and falsy values to True Unlike the previous operators we looked at, not always returns True or FalseHere are some examples:\npy\nprint(not '') # True, because empty string is falsy\nprint(not 'Hello') # False, because non-empty string is truthy\nprint(not 0) # True, because 0 is falsy\nprint(not 1) # False, because 1 is truthy\nprint(not False) # True, because False is falsy\nprint(not True) # False, because True is truthy\nHere is an example of the not operator in a conditional:\n```py\nis_admin = False\nif not is_admin:\nprint('Access denied for non-administrators ') # Access denied for non-administrators else:\nprint('Welcome, Administrator ')\n```\n--assignment--\nReview the Python Basics topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22687,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-python-basics\\67f39b40deaec81a3e40e0c5.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 15,
    "total_chunks": 16
  },
  {
    "id": "d4abd49539f88918ac1bcc662bf0bb91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-recursion\\6723d1f0568292cd394d6fb6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723d1f0568292cd394d6fb6\ntitle: Recursion Review\nchallengeType: 24\ndashedName: review-recursion\n--description--\nRecursion is a programming concept that allows you to call a function repeatedly until a base-case is reached.\nHere is an example of a recursive function that calculates the factorial of a number:\njs\nfunction findFactorial(n) {\nif (n === 0) {\nreturn 1;\n}\nreturn n * findFactorial(n - 1);\n}\nIn the above example, the findFactorial function is called recursively until n reaches 0. When n is 0, the base case is reached and the function returns 1. The function then returns the product of n and the result of the recursive call to findFactorial(n - 1).\nRecursion allows you to handle something with an unknown depth, such as deeply nested objects/arrays, or a file tree.\nA call stack is used to keep track of the function calls in a recursive function. Each time a function is called, it is added to the call stack. When the base case is reached, the function calls are removed from the stack.\nYou should carefully define the base case as calling it indefinitely can cause your code to crash. This is because the recursion keeps piling more and more function calls till the system runs out of memory.\nRecursions find their uses in solving mathematical problems like factorial and Fibonacci, traversing trees and graphs, generating permutations and combinations and much more.\n--assignment--\nReview the Recursion topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1511,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-recursion\\6723d1f0568292cd394d6fb6.md",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4a9da569425a0afbae6dfcf1eb8e8521",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c9e932c6c4234532d46394\ntitle: React Forms, Data Fetching and Routing Review\nchallengeType: 24\ndashedName: review-react-forms-data-fetching-and-routing\n--description--\nWorking with Forms in React\nControlled Inputs: This is when you store the input field value in state and update it through onChange events This gives you complete control over the form data and allows instant validation and conditional rendering ```jsx\nimport { useState } from \"react\";\nfunction App() {\nconst [name, setName] = useState(\"\");\nconst handleChange = (e) => {\nsetName(e target value);\n};\nconst handleSubmit = (e) => {\ne preventDefault();\nconsole log(name);\n};\nreturn (\n<>\nYour name\nSubmit\n</>\n);\n}\nexport default App;\n```\nUncontrolled Inputs: Instead of handling the inputs through the useState hook, uncontrolled inputs in HTML maintain their own internal state with the help of the DOM Since the DOM controls the input values, you need to pull in the values of the input fields with a ref ```jsx\nimport { useRef } from \"react\";\nfunction App() {\nconst nameRef = useRef();\nconst handleSubmit = (e) => {\ne preventDefault();\nconsole log(nameRef current value);\n};\nreturn (\nYour{\" \"}\nSubmit\n);\n}\nexport default App;\n```\nWorking with the useActionState Hook\nServer Actions: These are functions that run on the server to allow form handling right on the server without the need for API endpoints Here is an example from a Next js application:\n```js\n\"use server\";\nasync function submitForm(formData) {\nconst name = formData get(\"name\");\nreturn { message: Hello, ${name} };\n}\n```\nThe \"user server\" directive marks the function as a server action useActionState Hook: This hook updates state based on the outcome of a form submission Here's the basic syntax of the useActionState hook:\njs\nconst [state, action, isPending] = useActionState(actionFunction, initialState, permalink);\nstate is the current state the action returns action is the function that triggers the server action isPending is a boolean that indicates whether the action is currently running or not actionFunction parameter is the server action itself initialState is the parameter that represents the starting point for the state before the action runs permalink is an optional string that contains the unique page URL the form modifies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "5a4ad132a9d529490454a62fe6e53362",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const [state, action, isPending] = useActionState(actionFunction, initialState, permalink); state is the current state the action returns action is the function that triggers the server action isPending is a boolean that indicates whether the action is currently running or not actionFunction parameter is the server action itself initialState is the parameter that represents the starting point for the state before the action runs permalink is an optional string that contains the unique page URL the form modifiesData Fetching in React\nOptions For Fetching Data: There are many different ways to fetch data in React You can use the native Fetch API, or third party tools like Axios or SWR Commonly Used State Variables When Fetching Data: Regardless of which way you choose to fetch your data in React, there are some pieces of state you will need to keep track of The first is the data itself The second will track whether the data is still being fetched The third is a state variable that will capture any errors that might occur during the data fetching process js\nconst [data, setData] = useState(null);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\nSince data fetching is a side effect, it's best to use the Fetch API inside of a useEffect hook ```js\nuseEffect(() => {\nconst fetchData = async () => {\ntry {\nconst res = await fetch(\"https://jsonplaceholder typicode com/posts\");\nif ( res ok) {\nthrow new Error(\"Network response was not ok\");\n}\nconst data = await res json();\nsetData(data);\n} catch (err) {\nsetError(err);\n} finally {\nsetLoading(false);\n}\n};\nfetchData();\n}, []);\n```\nThen you can render a loading message if the data fetching is not complete, an error message if there was an error fetching the data, or the results ```jsx\nif (loading) {\nreturn Loading ;\n}\nif (error) {\nreturn {error message};\n}\nreturn (\n{data map((post) => (\n{post title}\n))}\n);\n```\nIf you want to use Axios, you need to install and import it:\nbash\nnpm i axios\njs\nimport axios from \"axios\";\nThen you can fetch the data using axios get:\n```jsx\nconst [data, setData] = useState(null);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\nuseEffect(() => {\nconst fetchData = async () => {\ntry {\nconst res = await axios",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "1b049d420f00e2de7f1c777b8d917a5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} return ( {data map((post) => ( {post title} ))} ); ``` If you want to use Axios, you need to install and import it: bash npm i axios js import axios from \"axios\"; Then you can fetch the data using axios get: ```jsx const [data, setData] = useState(null); const [loading, setLoading] = useState(true); const [error, setError] = useState(null); useEffect(() => { const fetchData = async () => { try { const res = await axiosget(\n\"https://jsonplaceholder typicode com/users\"\n);\nsetData(res data);\n} catch (err) {\nsetError(err);\n} finally {\nsetLoading(false);\n}\n};\nfetchData();\n}, []);\n```\nTo fetch data using the useSWR hook, you need to first install and import it bash\nnpm i swr\njs\nimport useSWR from \"swr\";\nHere is how you can use the hook to fetch data:\n```jsx\nimport useSWR from \"swr\";\nconst fetcher = (url) => fetch(url) then((res) => res json());\nconst FetchTodos = () => {\nconst { data, error } = useSWR(\n\"https://jsonplaceholder typicode com/todos\",\nfetcher\n);\nif ( data) {\nreturn Loading ;\n}\nif (error) {\nreturn Error: {error message};\n}\nreturn (\n<>\nTodos\n{data map((todo) => (\n{todo title}\n))}\n</>\n);\n};\nexport default FetchTodos;\n```\nWorking with the useOptimistic Hook\nuseOptimistic Hook: This hook is used to keep UIs responsive while waiting for an async action to complete in the background It helps manage \"optimistic updates\" in the UI, a strategy in which you provide immediate updates to the UI based on the expected outcome of an action, like waiting for a server response Here is the basic syntax:\njs\nconst [optimisticState, addOptimistic] = useOptimistic(actualState, updateFunction);\noptimisticState is the temporary state that updates right away for a better user experience addOptimistic is the function that applies the optimistic update before the actual state changes actualState is the real state value that comes from the result of an action, like fetching data from a server updateFunction is the function that determines how the optimistic state should update when called",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "e0d072ed2ad481ec63d239f15d5ba2e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "server response Here is the basic syntax: js const [optimisticState, addOptimistic] = useOptimistic(actualState, updateFunction); optimisticState is the temporary state that updates right away for a better user experience addOptimistic is the function that applies the optimistic update before the actual state changes actualState is the real state value that comes from the result of an action, like fetching data from a server updateFunction is the function that determines how the optimistic state should update when calledHere is an example of using the useOptimistic hook in a TaskList component:\n```jsx\n\"use client\";\nimport { useOptimistic } from \"react\";\nexport default function TaskList({ tasks, addTask }) {\nconst [optimisticTasks, addOptimisticTask] = useOptimistic(\ntasks,\n(state, newTask) => [ state, { text: newTask, pending: true }]\n);\nasync function handleSubmit(e) {\ne preventDefault();\nconst formData = new FormData(e target);\naddOptimisticTask(formData get(\"task\"));\naddTask(formData);\ne target reset();\n}\nreturn <>{/ UI /}</>;\n}\n```\nstartTransition: This is used to render part of the UI and mark a state update as a non-urgent transition This allows the UI to be responsive during expensive updates Here is the basic syntax:\njs\nstartTransition(action);\nThe action performs a state update or triggers some transition-related logic This ensures that urgent UI updates (like typing or clicking) are not blocked Working with the useMemo Hook\nMemoization: This is an optimization technique in which the result of expensive function calls are cached (remembered) based on specific arguments When the same arguments are provided again, the cached result is returned instead of re-computing the function useMemo Hook: This hook is used to memoize computed values Here is an example of memoizing the result of sorting a large array The expensiveSortFunction will only run when largeArray changes:\njs\nconst memoizedSortedArray = useMemo(\n() => expensiveSortFunction(largeArray),\n[largeArray]\n);\nWorking with the useCallback Hook\nuseCallback Hook: This is used to memoize function references js\nconst handleClick = useCallback(() => {\n// code goes here\n}, [dependency]);\nReact memo: This is used to memoize a component to prevent it from unnecessary re-renders when its prop has not changed jsx\nconst MemoizedComponent = React",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "6c491041f6cc66146f18ec637136e653",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of sorting a large array The expensiveSortFunction will only run when largeArray changes: js const memoizedSortedArray = useMemo( () => expensiveSortFunction(largeArray), [largeArray] ); Working with the useCallback Hook useCallback Hook: This is used to memoize function references js const handleClick = useCallback(() => { // code goes here }, [dependency]); React memo: This is used to memoize a component to prevent it from unnecessary re-renders when its prop has not changed jsx const MemoizedComponent = Reactmemo(({ prop }) => {\nreturn (\n<>\n{/* Presentation */}\n</>\n)\n});\nDependency Management Tools\nDependency Definition: In software, a dependency is where one component or module in an application relies on another to function properly Dependencies are common in software applications because they allow developers to use pre-built functions or tools created by others The two core dependencies needed for a React project will be the react and react-dom packages:\njson\n\"dependencies\": {\n\"react\": \"^18 3 1\",\n\"react-dom\": \"^18 3 1\"\n}\nPackage Manager Definition: To manage software dependencies in a project, you will need to use a package manager A package manager is a tool used for installation, updates and removal of dependencies Many popular programming languages like JavaScript, Python, Ruby and Java, all use package managers Popular package managers for JavaScript include npm, Yarn and pnpm package json File: This is a key configuration file in projects that contains metadata about your project, including its name, version, and dependencies It also defines scripts, licensing information, and other settings that help manage the project and its dependencies package-lock json File: This file will lock down the exact versions of all packages that your project is using When you update a package, then the new versions will be updated in the lock file as well node_modules Folder: This folder contains the actual code for the dependencies listed in your package json file, including both your project's direct dependencies and any dependencies of those dependencies Dev Dependencies: These are packages that are only used for development and not in production An example of this would be a testing library like Jest You would install Jest as a dev dependency because it is needed for testing your application locally but not needed to have the application run in production json\n\"devDependencies\": {\n\"@eslint/js\": \"^9 17 0\",\n\"@types/react\": \"^18 3 18\",\n\"@types/react-dom\": \"^18 3 5\",\n\"@vitejs/plugin-react\": \"^4 3 4\",\n\"eslint\": \"^9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "aba35d9059676d4c7ea766f6c4cb238b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "those dependencies Dev Dependencies: These are packages that are only used for development and not in production An example of this would be a testing library like Jest You would install Jest as a dev dependency because it is needed for testing your application locally but not needed to have the application run in production json \"devDependencies\": { \"@eslint/js\": \"^9 17 0\", \"@types/react\": \"^18 3 18\", \"@types/react-dom\": \"^18 3 5\", \"@vitejs/plugin-react\": \"^4 3 4\", \"eslint\": \"^917 0\",\n\"eslint-plugin-react\": \"^7 37 2\",\n\"eslint-plugin-react-hooks\": \"^5 0 0\",\n\"eslint-plugin-react-refresh\": \"^0 4 16\",\n\"globals\": \"^15 14 0\",\n\"vite\": \"^6 0 5\"\n}\nReact Router\nIntroduction: React Router is a third party library that allows you to add routing to your React applications To begin, you will need to install React Router in an existing React project like this:\nbash\nnpm i react-router\nThen inside of the main jsx or index jsx file, you will need to setup the route structure like this:\n```jsx\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router\";\nimport App from \" /App jsx\";\nimport \" /index css\";\ncreateRoot(document getElementById(\"root\")) render(\n} />\n);\n```\nThe path and element are used to couple the URL and UI components together In this case, we are setting up a route for the homepage that points to the App component Multiple Views and Route Setup: It is common in larger applications to have multiple views and routes setup like this:\n```jsx\n} />\n} />\n} />\n} />\n} />\n} />\n```\nThe index prop in these examples is meant to represent the default route for a given path segment So the Home component will be shown at the root / path while the ProductsHome component will be shown at the /products path Nesting Routes: You can nest routes inside other routes which results in the path of the child route being appended to the parent route's path jsx\n<Route path=\"products\">\n<Route path=\"trending\" element={<Trending />} />\n</Route>\nIn the example above, the path for the trending products will be products/trending Dynamic Segments: A dynamic segment is where any part of the URL path is dynamic",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "cd7e772876877eae864975ed756d8c27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "root / path while the ProductsHome component will be shown at the /products path Nesting Routes: You can nest routes inside other routes which results in the path of the child route being appended to the parent route's path jsx <Route path=\"products\"> <Route path=\"trending\" element={<Trending />} /> </Route> In the example above, the path for the trending products will be products/trending Dynamic Segments: A dynamic segment is where any part of the URL path is dynamicjsx\n<Route path=\":category\" element={<Category />} />\nIn this example we have a dynamic segment called category When a user navigates to a URL like products/brass-instruments, then the view will change to the Category component and you can dynamically fetch the appropriate data based on the segment useParams Hook: This hook is used to access the dynamic parameters from a URL path ```jsx\nimport { useParams } from \"react-router\";\nexport default function Category() {\nlet params = useParams();\n{/ Accessing the category param: params category /}\n{/ rest of code goes here /}\n}\n```\nReact Frameworks\nIntroduction: React frameworks provide features like routing, image optimizations, data fetching, authentication and more This means that you might not need to set up separate frontend and backend applications for certain use cases Examples of React Frameworks include Next js and Remix Next js Routing: This routing system includes support for dynamic routes, parallel routes, route handlers, redirects, internalization and more Here is an example of creating a custom request handler:\n```js\nexport async function GET() {\nconst res = await fetch(\"https://example-api com\");\nconst data = await res json();\nreturn Response json({ data });\n}\n```\nNext js Image Optimization: The Image component extends the native HTML img element and allows for faster page loads and size optimizations This means that images will only load when they enter the viewport and the Image component will automatically serve correctly sized images for each device ```jsx\nimport Image from \"next/image\";\nexport default function Page() {\nreturn (\n);\n}\n```\nProp Drilling\nDefinition: Prop drilling is the process of passing props from a parent component to deeply nested child components, even when some of the child components don't need the props State Management\nContext API: Context refers to when a parent component makes information available to child components without needing to pass it explicitly through props createContext is used to create a context object which represent the context that other components will read",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "650cd8c439574091b3c5f67340d2da8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "); } ``` Prop Drilling Definition: Prop drilling is the process of passing props from a parent component to deeply nested child components, even when some of the child components don't need the props State Management Context API: Context refers to when a parent component makes information available to child components without needing to pass it explicitly through props createContext is used to create a context object which represent the context that other components will readThe Provider is used to supply context values to the child components ```jsx\nimport { useState, createContext } from \"react\";\nconst CounterContext = createContext();\nconst CounterProvider = ({ children }) => {\nconst [count, setCount] = useState(0);\nreturn (\n{children}\n);\n};\nexport { CounterContext, CounterProvider };\n```\nRedux: Redux handles state management by providing a central store and strict control over state updates It uses a predictable pattern with actions, reducers, and middleware Actions are payloads of information that send data from your application to the Redux store, often triggered by user interactions Reducers are functions that specify how the state should change in response to those actions, ensuring the state is updated in an immutable way Middleware, on the other hand, acts as a bridge between the action dispatching and the reducer, allowing you to extend Redux's functionality (e g , logging, handling async operations) without modifying the core flow Zustand: This state management solution is ideal for small to medium-scale applications It works by using a useStore hook to access access state directly in components and pages This lets you modify and access data without needing actions, reducers, or a provider Debugging React Components Using the React DevTools\nReact Developer Tools: This is a browser extension you can use in Chrome, Firefox and Edge to inspect React components and identify performance issues For Safari, you will need to install the react-devtools npm package After installing React DevTools and opening a React app in the browser, open the browser developer tools to access the two extra tabs provided for debugging React – Components and Profiler Components Tab: This tab displays each component for you in a tree view format Here are some things you can do in this tab:\nview the app's component hierarchy\ncheck and modify props, states, and context values in real time\ncheck the source code for each selected component\nlog the component data to the console\ninspect the DOM elements for the component\nProfiler Tab: This tab helps you analyze component performance",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "26ed6674ba1e5b078e2db5e318b1fd81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "React – Components and Profiler Components Tab: This tab displays each component for you in a tree view format Here are some things you can do in this tab: view the app's component hierarchy check and modify props, states, and context values in real time check the source code for each selected component log the component data to the console inspect the DOM elements for the component Profiler Tab: This tab helps you analyze component performanceYou can record component performance so you can identify unnecessary re-renders, view commit durations, and subsequently optimize slow components React Server Components\nDefinition: React Server Components are React components that render exclusively on the server, sending only the final HTML to the client This means those components can directly access server-side resources and dramatically reduce the amount of JavaScript sent to the browser --assignment--\nReview React routing, state management, forms and data fetching",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-forms-data-fetching-and-routing\\67c9e932c6c4234532d46394.md",
      "source_type": "git_repo"
    },
    "token_count": 170,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "e31343c98b12b2f8f26bb2db9595fd14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-databases\\6724e5e321bce627736ea145.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e5e321bce627736ea145\ntitle: Relational Databases Review\nchallengeType: 24\ndashedName: review-relational-databases\n--description--\nDescription placeholder\n--assignment--\nReview the Relational Databases topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 246,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-databases\\6724e5e321bce627736ea145.md",
      "source_type": "git_repo"
    },
    "token_count": 59,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5e5b7a504bde9c26df91c4a38a7eed5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-responsive-web-design\\671a98927af7829722697dc2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a98927af7829722697dc2\ntitle: Responsive Web Design Review\nchallengeType: 24\ndashedName: review-responsive-web-design\n--description--\nResponsive Web Design\nDefinition: The core principle of responsive design is adaptability – the ability of a website to adjust its layout and content based on the screen size and capabilities of the device it's being viewed on Fluid grids: These use relative units like percentages instead of fixed units like pixels, allowing content to resize and reflow based on screen size Flexible images: These are set to resize within their containing elements, ensuring they don't overflow their containers on smaller screens Media Queries\nDefinition: This allows developers to apply different styles based on the characteristics of the device, primarily the viewport width css\n@media screen and (min-width: 768px) {\n/* Styles for screens at least 768px wide */\n}\nall Media Type: This is suitable for all devices This is the default if no media type is specified print Media Types: This is intended for paged material and documents viewed on a screen in print preview mode screen Media Types: This is intended primarily for screens aspect-ratio: This describes the ratio between the width and height of the viewport css\n@media screen and (aspect-ratio: 16/9) {\n/* Styles for screens with a 16:9 aspect ratio */\n}\norientation: This is used to indicate whether the device is in landscape or portrait orientation css\n@media screen and (orientation: landscape) {\n/* Styles for landscape orientation */\n}\nresolution: This is used to describe the resolution of the output device in dots per inch (dpi) or dots per centimeter (dpcm) css\n@media screen and (min-resolution: 300dpi) {\n/* Styles for high-resolution screens */\n}\nhover: This is used to test whether the primary input mechanism can hover over elements css\n@media (hover: hover) {\n/* Styles for devices that support hover */\n}\nprefers-color-scheme: This is used to detect if the user has requested a light or dark color theme Media Queries and Logical Operators: The and operator is used to combine multiple media features, while not and only can be used to negate or isolate media queries",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-responsive-web-design\\671a98927af7829722697dc2.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c64d7a7a9f78e181e8f2db4318e28ad1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-responsive-web-design\\671a98927af7829722697dc2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "*/ } hover: This is used to test whether the primary input mechanism can hover over elements css @media (hover: hover) { /* Styles for devices that support hover */ } prefers-color-scheme: This is used to detect if the user has requested a light or dark color theme Media Queries and Logical Operators: The and operator is used to combine multiple media features, while not and only can be used to negate or isolate media queriescss\n@media screen and (min-width: 768px) and (orientation: landscape) {\n/* Styles for landscape screens at least 768px wide */\n}\nCommon Media Breakpoints\nDefinition: Media breakpoints are specific points in a website's design where the layout and content adjust to accommodate different screen sizes There are some general breakpoints that you can use to target phones, tablets and desktop screens But it is not wise to try to chase down every single possible screen size for different devices css\n/* Styles for screens wider than 768px */\n@media screen and (min-width: 768px) {\nbody {\nfont-size: 1 125rem;\n}\n}\nSmall Devices (smartphones): up to 640px\nMedium Devices (tablets): 641px to 1024px\nLarge Devices (desktops): 1025px and larger\nMobile first approach\nDefinition: The mobile-first approach is a design philosophy and development strategy in responsive web design that prioritizes creating websites for mobile devices before designing for larger screens ```css\n/ Base styles for mobile / container {\nwidth: 100%;\npadding: 10px;\n}\n/ Styles for larger screens /\n@media screen and (min-width: 768px) { container {\nwidth: 750px;\nmargin: 0 auto;\npadding: 20px;\n}\n}\n@media screen and (min-width: 1024px) { container {\nwidth: 960px;\n}\n}\n```\n--assignment--\nReview the Responsive Web Design topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-responsive-web-design\\671a98927af7829722697dc2.md",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "586e1f23add7cd32a459285fc51b6bc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67c2bbd476f6e540b4c0b0d4\ntitle: React State and Hooks Review\nchallengeType: 24\ndashedName: review-react-state-and-hooks\n--description--\nWorking with Events in React\nSynthetic Event System: This is React's way of handling events It serves as a wrapper around the native events like the click, keydown, and submit events Event handlers in React use the camel casing naming convention (Ex onClick, onSubmit, etc)\nHere is an example of using the onClick attribute for a button element in React:\n```jsx\nfunction handleClick() {\nconsole log(\"Button clicked \");\n}\nClick Me;\n```\nIn React, event handler functions usually start with the prefix handle to indicate they are responsible for handling events, like handleClick or handleSubmit When a user action triggers an event, React passes a Synthetic Event object to your handler This object behaves much like the native Event object in vanilla JavaScript, providing properties like type, target, and currentTarget To prevent default behaviors like browser refresh during an onSubmit event, for example, you can call the preventDefault() method:\n```jsx\nfunction handleSubmit(event) {\nevent preventDefault();\nconsole log(\"Form submitted \");\n}\nSubmit\n;\n```\nYou can also wrap a handler function in an arrow function like this:\n```jsx\nfunction handleDelete(id) {\nconsole log(\"Deleting item:\", id);\n}\nhandleDelete(1)}>Delete Item;\n```\nWorking with State and the useState Hook\nDefinition for state: In React, state is a object that contains data for a component When the state updates the component will re-render React treats state as immutable, meaning you should not modify it directly useState() Hook: The useState hook is a function that lets you declare state variables in functional components",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8437,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "b7032a7a62b1df7b9e8bab34c47e4478",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an arrow function like this: ```jsx function handleDelete(id) { console log(\"Deleting item:\", id); } handleDelete(1)}>Delete Item; ``` Working with State and the useState Hook Definition for state: In React, state is a object that contains data for a component When the state updates the component will re-render React treats state as immutable, meaning you should not modify it directly useState() Hook: The useState hook is a function that lets you declare state variables in functional componentsHere is an basic syntax:\njs\nconst [stateVariable, setStateFunction] = useState(initialValue);\nIn the state variable you have the following:\nstateVariable holds the current state value\nsetStateFunction (the setter function) updates the state variable\ninitialValue sets the initial state\nHere is a complete example for a Counter component:\n```jsx\nimport { useState } from \"react\";\nfunction Counter() {\nconst [count, setCount] = useState(0);\nreturn (\n{count}\n<button onClick={() => setCount(count - 1)}>Decrement</button>\n<button onClick={() => setCount(count + 1)}>Increment</button>\n</div>\n);\n}\nexport default Counter;\n```\nRendering and React Components\nDefinition: In React, rendering is the process by which components appear in the user interface (UI), usually the browser The rendering process consists of three stages: trigger, render, and commit The trigger stage occurs when React detects that something has changed and the user interface (UI) might need to be updated This change is often due to an update in state or props Once the trigger happens, React enters the render stage Here, React re-evaluates your components and figures out what to display To do this, React uses a lightweight copy of the \"real\" DOM called the virtual DOM With the virtual DOM, React can quickly check what needs to change in the component The commit stage is where React takes the prepared changes from the virtual DOM and applies them to the real DOM In other words, this is the stage where you see the final result on the screen Updating Objects and Arrays in State\nUpdating Objects in State: If you need to update an object in state, then you should make a new object or copy an existing object first, then set the state for that new object Any object put into state should be considered as read-only Here is an example of setting a user's name, age and city",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8437,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "664d55092ae725a9ef36b42a6b9026ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "words, this is the stage where you see the final result on the screen Updating Objects and Arrays in State Updating Objects in State: If you need to update an object in state, then you should make a new object or copy an existing object first, then set the state for that new object Any object put into state should be considered as read-only Here is an example of setting a user's name, age and cityThe handleChange function is used to handle updates to the user's information:\n```jsx\nimport { useState } from \"react\";\nfunction Profile() {\nconst [user, setUser] = useState({ name: \"John Doe\", age: 31, city: \"LA\" });\nconst handleChange = (e) => {\nconst { name, value } = e target;\nsetUser((prevUser) => ({ prevUser, [name]: value}));\n};\nreturn (\nUser Profile\nName: {user name}\nAge: {user age}\nCity: {user city}\n<h2>Update User Age </h2>\n<input type=\"number\" name=\"age\" value={user age} onChange={handleChange} />\n<h2>Update User Name </h2>\n<input type=\"text\" name=\"name\" value={user name} onChange={handleChange} />\n<h2>Update User City </h2>\n<input type=\"text\" name=\"city\" value={user city} onChange={handleChange} />\n</div>\n);\n}\nexport default Profile;\n```\nUpdating Arrays in State: When updating arrays in state, it is important not to directly modify the array using methods like push() or pop() Instead you should create a new array when updating state:\n``js\nconst addItem = () => {\nconst newItem = {\nid: items length + 1,\nname:Item ${items length + 1}`,\n};\n// Creates a new array\nsetItems((prevItems) => [ prevItems, newItem]);\n};\n```\nIf you want to remove items from an array, you should use the filter() method, which returns a new array after filtering out whatever you want to remove:\njs\nconst removeItem = (id) => {\nsetItems((prevItems) => prevItems filter((item) => item id == id));\n};\nReferencing Values Using Refs\nref Attribute: You can access a DOM node in React by using the ref attribute Here is an example to showcase a ref to focus an input element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8437,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "e5ad33b2fbb55af28c038f62e76362f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "you want to remove items from an array, you should use the filter() method, which returns a new array after filtering out whatever you want to remove: js const removeItem = (id) => { setItems((prevItems) => prevItems filter((item) => item id == id)); }; Referencing Values Using Refs ref Attribute: You can access a DOM node in React by using the ref attribute Here is an example to showcase a ref to focus an input elementThe current property is used to access the current value of that ref:\n```jsx\nimport { useRef } from \"react\";\nconst Focus = () => {\nconst inputRef = useRef(null);\nconst handleFocus = () => {\nif (inputRef current) {\ninputRef current focus();\n}\n};\nreturn (\nFocus Input\n);\n};\nexport default Focus;\n```\nWorking with the useEffect Hook\nuseEffect() Hook: In React, an effect is anything that happens outside the component rendering process That is, anything React does not handle directly as part of rendering the UI Common examples include fetching data, updating the browser tab's title, reading from or writing to the browser's local storage, getting the user's location, and much more These operations interact with the outside world and are known as side effects React provides the useEffect hook to let you handle those side effects useEffect lets you run a function after the component renders or updates ```js\nimport { useEffect } from \"react\";\nuseEffect(() => {\n// Your side effect logic (usually a function) goes here\n}, [dependencies]);\n```\nThe effect function runs after the component renders, while the optional dependencies argument controls when the effect runs Note that dependencies can be an array of \"reactive values\" (state, props, functions, variables, and so on), an empty array, or omitted entirely Here's how all of those options control how useEffect works:\nIf dependencies is an array that includes one or more reactive values, the effect will run whenever they change If dependencies is an empty array, useEffect runs only once when the component first renders If you omit dependencies, the effect runs every time the component renders or updates How to Create Custom Hooks\nCustom Hooks: A custom hook allows you to extract reusable logic from components, such as data fetching, state management, toggling, and side effects like tracking online status In React, all built-in hooks start with the word use, so your custom hook should follow the same convention",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8437,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "0f79c24b419ce15607cc703e76f23e8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "empty array, useEffect runs only once when the component first renders If you omit dependencies, the effect runs every time the component renders or updates How to Create Custom Hooks Custom Hooks: A custom hook allows you to extract reusable logic from components, such as data fetching, state management, toggling, and side effects like tracking online status In React, all built-in hooks start with the word use, so your custom hook should follow the same conventionHere is an example of creating a useDebounce hook:\n```js\nfunction useDebounce(value, delay) {\nconst [debouncedValue, setDebouncedValue] = useState(value);\nuseEffect(() => {\nconst handler = setTimeout(() => {\nsetDebouncedValue(value);\n}, delay);\nreturn () => {\nclearTimeout(handler);\n};\n}, [value, delay]);\nreturn debouncedValue;\n}\nexport { useDebounce };\n```\n--assignment--\nReview the React state and hooks topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8437,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-react-state-and-hooks\\67c2bbd476f6e540b4c0b0d4.md",
      "source_type": "git_repo"
    },
    "token_count": 190,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "588f680f9435c1a4c616a03e277e39ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e3d6e1cb0c1fec3a8e4f\ntitle: Relational Database Review\nchallengeType: 24\ndashedName: review-relational-database\n--description--\nIntroduction to Relational Databases\nRelational Databases: Organize data into related tables made of rows and columns Each row represents a record, and each column represents an attribute of the data Advantages of Relational Databases: Scalable, widely applicable across domains (e g , healthcare, business, gaming), and structured to maintain reliable data Common Use Cases: Web development, inventory systems, e-commerce, healthcare, and enterprise applications Key Concepts\nSchema: A relational database requires a schema that defines its structure—tables, columns, data types, constraints, and relationships Primary Keys: Unique identifiers for each row in a table They are essential for data integrity and are used to relate records between tables via foreign keys Foreign Keys: References to primary keys in another table, used to link related data across tables Relationships: By connecting tables through primary and foreign keys, you can structure normalized data and perform meaningful queries Entity Relationship Diagrams (ERDs): Visualize how entities (tables) relate to each other in a database schema Data Integrity: Enforced using keys and data types Ensures consistency and accuracy of stored data SQL Basics\nQueries: Requests to retrieve specific data from the database sql\nSELECT * FROM dogs WHERE age < 3;\nWHERE clause: Filter results based on conditions Use comparison operators like <, =, >, etc Select with ORDER BY: Retrieve and sort results based on a column sql\nSELECT columns FROM table_name ORDER BY column_name;\nTable Operations\nCREATE TABLE Statement: This statement is used to create a new table in a database sql\nCREATE TABLE first_table();\nALTER TABLE ADD COLUMN Statement: This statement is used to add a column to an existing table sql\nALTER TABLE table_name ADD COLUMN column_name DATATYPE;\nALTER TABLE DROP COLUMN Statement: This statement is used to drop a column from an existing table sql\nALTER TABLE table_name DROP COLUMN column_name;\nALTER TABLE RENAME COLUMN Statement: This statement is used to rename a column in a table sql\nALTER TABLE table_name RENAME COLUMN column_name TO new_name;\nDROP TABLE Statement: This statement is used to drop an entire table from the database sql\nDROP TABLE table_name;\nALTER DATABASE RENAME Statement: This statement is used to rename a database",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "4c3added4173dbc04d07aba76f3aaa82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Statement: This statement is used to drop a column from an existing table sql ALTER TABLE table_name DROP COLUMN column_name; ALTER TABLE RENAME COLUMN Statement: This statement is used to rename a column in a table sql ALTER TABLE table_name RENAME COLUMN column_name TO new_name; DROP TABLE Statement: This statement is used to drop an entire table from the database sql DROP TABLE table_name; ALTER DATABASE RENAME Statement: This statement is used to rename a databasesql\nALTER DATABASE database_name RENAME TO new_database_name;\nDROP DATABASE Statement: This statement is used to drop an entire database sql\nDROP DATABASE database_name;\nConstraints & Data Integrity\nALTER TABLE ADD COLUMN with Constraint: This statement is used to add a column with a constraint to an existing table sql\nALTER TABLE table_name ADD COLUMN column_name DATATYPE CONSTRAINT;\nNOT NULL Constraint: This constraint ensures that a column cannot have NULL values sql\ncolumn_name VARCHAR(50) NOT NULL\nALTER TABLE ADD PRIMARY KEY Statement: This statement is used to add a primary key constraint to a table sql\nALTER TABLE table_name ADD PRIMARY KEY(column_name);\nALTER TABLE DROP CONSTRAINT Statement: This statement is used to drop a constraint from a table sql\nALTER TABLE table_name DROP CONSTRAINT constraint_name;\nALTER TABLE ADD COLUMN with Foreign Key: This statement is used to add a foreign key column that references another table sql\nALTER TABLE table_name ADD COLUMN column_name DATATYPE REFERENCES referenced_table_name(referenced_column_name);\nALTER TABLE ADD UNIQUE Statement: This statement is used to add a UNIQUE constraint to a column sql\nALTER TABLE table_name ADD UNIQUE(column_name);\nALTER TABLE ALTER COLUMN SET NOT NULL Statement: This statement is used to set a NOT NULL constraint on an existing column sql\nALTER TABLE table_name ALTER COLUMN column_name SET NOT NULL;\nINSERT Statement with NULL Values: This statement demonstrates how to insert NULL values into a table sql\nINSERT INTO table_name(column_a) VALUES(NULL);\n-- or\nINSERT INTO table_name(column_b) VALUES('value'); -- if column_a allows nulls\nComposite Primary Key: This constraint defines a primary key that consists of multiple columns sql\nCREATE TABLE course_enrollments (\nstudent_id INT,\ncourse_id INT,\nPRIMARY KEY (student_id, course_id)\n);\nData Manipulation (CRUD)\nINSERT Statement: This statement is used to insert a single row into a table",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "615ae8157b38f78634c7eea771252863",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Statement with NULL Values: This statement demonstrates how to insert NULL values into a table sql INSERT INTO table_name(column_a) VALUES(NULL); -- or INSERT INTO table_name(column_b) VALUES('value'); -- if column_a allows nulls Composite Primary Key: This constraint defines a primary key that consists of multiple columns sql CREATE TABLE course_enrollments ( student_id INT, course_id INT, PRIMARY KEY (student_id, course_id) ); Data Manipulation (CRUD) INSERT Statement: This statement is used to insert a single row into a tablesql\nINSERT INTO table_name(column_1, column_2) VALUES(value1, value2);\nINSERT Statement with Omitted Columns: This statement shows how to insert values without explicitly listing the column names, relying on the default column order in the table sql\nINSERT INTO dogs VALUES ('Gino', 3);\nINSERT Statement with Multiple Rows: This statement is used to insert multiple rows into a table in a single operation sql\nINSERT INTO dogs (name, age) VALUES\n('Gino', 3),\n('Nora', 2);\nUPDATE Statement: This statement is used to update existing data in a table based on a condition sql\nUPDATE table_name SET column_name=new_value WHERE condition;\nDELETE Statement: This statement is used to delete rows from a table based on a condition sql\nDELETE FROM table_name WHERE condition;\nData Types\nNUMERIC Data Type: This data type is used to store precise decimal numbers with a specified precision and scale sql\nprice NUMERIC(10, 2)\nTEXT Data Type: This data type is used to store variable-length character strings with no specific length limit sql\ncolumn_name TEXT\nINTEGER Data Type: This data type is used to store whole numbers without decimal places sql\nunits_sold INTEGER\nSMALLINT and BIGINT Data Types: These are variants of INTEGER with smaller and larger ranges respectively SERIAL Data Type: This data type is used to create auto-incrementing integer columns in PostgreSQL sql\nid SERIAL\nAUTO_INCREMENT Attribute: This attribute is used in MySQL to create auto-incrementing integer columns sql\nid INT AUTO_INCREMENT\nVARCHAR Data Type: This data type is used to store variable-length character strings with a specified maximum length sql\nname VARCHAR(50)\nDATE Data Type: This data type is used to store date values (year, month, day)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "6bc29d79e5a37511b76cc2f51a2c3e45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "smaller and larger ranges respectively SERIAL Data Type: This data type is used to create auto-incrementing integer columns in PostgreSQL sql id SERIAL AUTO_INCREMENT Attribute: This attribute is used in MySQL to create auto-incrementing integer columns sql id INT AUTO_INCREMENT VARCHAR Data Type: This data type is used to store variable-length character strings with a specified maximum length sql name VARCHAR(50) DATE Data Type: This data type is used to store date values (year, month, day)sql\nevent_date DATE\nTIME Data Type: This data type is used to store time values (hour, minute, second) sql\nstart_time TIME\nTIMESTAMP Data Type: This data type is used to store date and time values, optionally with time zone information sql\nevent_timestamp TIMESTAMP\nevent_timestamp TIMESTAMP WITH TIME ZONE\nBOOLEAN Data Type: This data type is used to store true/false values sql\nis_active BOOLEAN\nDatabase Relationships\nTypes of Relationships: These are the different ways tables can be related to each other in a relational database One-to-one\nOne-to-many\nMany-to-one\nMany-to-many\nSelf-referencing (recursive)\nOne-to-One Relationship: This relationship type means that each record in one table corresponds to exactly one record in another table md\nOne employee is assigned exactly one vehicle Tables: employees, vehicles\nOne-to-Many Relationship: This relationship type means that one record in a table can be associated with multiple records in another table md\nOne customer can have many orders Tables: customers → orders\nMany-to-Many Relationship via Junction Table: This relationship type is implemented using a junction table that contains foreign keys from both related tables sql\nCREATE TABLE books_authors (\nauthor_id INT REFERENCES authors(id),\nbook_id INT REFERENCES books(id)\n);\nSelf-Referencing Relationships: This relationship type occurs when a table references itself, creating a hierarchical structure md\nAn employee table where each employee may report to another employee Advanced SQL (Joins)\nINNER JOIN Statement: This join returns only the rows that have matching values in both tables sql\nSELECT *\nFROM products\nINNER JOIN sales ON products product_id = sales product_id;\nFULL OUTER JOIN Statement: This join returns all rows from both tables, including unmatched rows from either table sql\nSELECT *\nFROM products\nFULL OUTER JOIN sales ON products product_id = sales product_id;\nLEFT OUTER JOIN Statement: This join returns all rows from the left table and matching rows from the right table",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "890834671c64915b7945d85246181819",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the rows that have matching values in both tables sql SELECT * FROM products INNER JOIN sales ON products product_id = sales product_id; FULL OUTER JOIN Statement: This join returns all rows from both tables, including unmatched rows from either table sql SELECT * FROM products FULL OUTER JOIN sales ON products product_id = sales product_id; LEFT OUTER JOIN Statement: This join returns all rows from the left table and matching rows from the right tablesql\nSELECT *\nFROM products\nLEFT JOIN sales ON products product_id = sales product_id;\nRIGHT OUTER JOIN Statement: This join returns all rows from the right table and matching rows from the left table sql\nSELECT *\nFROM products\nRIGHT JOIN sales ON products product_id = sales product_id;\nSELF JOIN Statement: This join is used to join a table with itself to compare rows within the same table sql\nSELECT A column_name, B column_name\nFROM table_name A\nJOIN table_name B ON A related_column = B related_column;\nCROSS JOIN Statement: This join returns the Cartesian product of two tables, combining every row from the first table with every row from the second table sql\nSELECT *\nFROM table1\nCROSS JOIN table2;\nPostgreSQL Specific Commands\npsql Login Command: This command is used to log in to PostgreSQL with specific username and database bash\npsql --username=freecodecamp --dbname=postgres\n\\l Command: This command lists all databases in the PostgreSQL instance sql\n\\l\nCREATE DATABASE and \\c Commands: These commands are used to create a new database and connect to it sql\nCREATE DATABASE database_name;\n\\c database_name\n\\d Command: This command lists all tables in the current database sql\n\\d\n\\d table_name Command: This command displays the schema/structure of a specific table sql\n\\d table_name\n\\q Command: This command exits the PostgreSQL client bash\n\\q\nRelational vs Non-Relational\nNon-Relational (NoSQL) Databases: Store unstructured or semi-structured data Do not require a rigid schema and are more flexible for evolving data models Choosing Between Relational and Non-Relational: Depends on the nature of your data and application requirements Relational vs Non-Relational: Choose relational for structured data and consistency; NoSQL for flexibility and fast-changing data Popular RDBMS Systems\nMySQL: Open-source, reliable, widely used in web development, supported by a large community PostgreSQL: Open-source, advanced, extensible",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c4379e0c7423b97f8419b131d732bbd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Relational vs Non-Relational Non-Relational (NoSQL) Databases: Store unstructured or semi-structured data Do not require a rigid schema and are more flexible for evolving data models Choosing Between Relational and Non-Relational: Depends on the nature of your data and application requirements Relational vs Non-Relational: Choose relational for structured data and consistency; NoSQL for flexibility and fast-changing data Popular RDBMS Systems MySQL: Open-source, reliable, widely used in web development, supported by a large community PostgreSQL: Open-source, advanced, extensibleSupports custom data types and server-side programming SQLite: Lightweight, file-based, serverless Ideal for small applications Microsoft SQL Server: Proprietary, enterprise-grade database Oracle Database: Commercial RDBMS known for large-scale performance and scalability Best Practices\nNaming Convention: Use snake_case (e g , delivery_orders) for table and column names --assignment--\nReview the Relational Database topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11686,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-relational-database\\6724e3d6e1cb0c1fec3a8e4f.md",
      "source_type": "git_repo"
    },
    "token_count": 195,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "cc9ba402d199b176b9c6da7079f2924e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-searching-and-sorting-algorithms\\67f39de5ff88202c94798189.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67f39de5ff88202c94798189\ntitle: Searching and Sorting Algorithms Review\nchallengeType: 24\ndashedName: review-searching-and-sorting-algorithms\n--description--\nSearching Algorithms\nSearching algorithms let you search for a target within a certain list of items In computer science, there are two searching algorithms you should know about They are linear search and binary search algorithms It is important to understand the differences between the two algorithms and when to use each one Linear Search\nLinear search iterates through a list of items, checking each item from the beginning until the target item is found If the target item is found, the index where it is located in the list is returned If the target is not found, it returns -1, which means invalid index in most programming languages Because linear search checks each item until it finds the target, it is not efficient for a large list of items The time complexity of linear search is  O(n) because the time it takes to search through the list grows linearly with the size of the list The space complexity of linear search is O(1) because it doesn't require any additional space to search through the list Binary Search\nBinary search works by dividing a list of items in half, and checking if the target value is in the middle of the list The condition for binary search to work is that the items in the list must be in ascending order Binary search is a more efficient algorithm for searching through a large list of items because it divides the list of items in half and ignores any half where the target is not found If the target item is found in the middle of the list, the index of the target item is returned If the item is not found, the algorithm checks if the target item is in the left or right half of the list It continues to divide the remaining parts of the list into halves until the target item is found If the target item is finally not found in the list, it returns -1\nThe time complexity of binary search is O(log n) because the time it takes to search through the list grows logarithmically with the size of the list The space complexity of binary search is O(1) because it doesn't require any additional space to search through the list How Linear Search Differs from Binary Search\nBinary search is more suitable for a large list of items compared to linear search",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-searching-and-sorting-algorithms\\67f39de5ff88202c94798189.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b92a25dcb7f27d345cf1ec0e4bd9458d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-searching-and-sorting-algorithms\\67f39de5ff88202c94798189.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "found in the list, it returns -1 The time complexity of binary search is O(log n) because the time it takes to search through the list grows logarithmically with the size of the list The space complexity of binary search is O(1) because it doesn't require any additional space to search through the list How Linear Search Differs from Binary Search Binary search is more suitable for a large list of items compared to linear searchThe time complexity of linear search is  O(n) because the time it takes to search through the list grows linearly with the size of the list The time complexity of binary search is O(log n) because the time it takes to search through the list grows logarithmically with the size of the list Sorting Algorithms and Divide-and-Conquer\nIn computer science, divide-and-conquer is a technique used to break down a problem into smaller sub-problems so they are easier to solve Recursion is the technique often employed in divide-and-conquer, and divide-and-conquer is a powerful strategy used to implement many efficient sorting algorithms like merge sort Merge Sort\nMerge sort is a sorting algorithm that follows the divide-and-conquer approach It works by recursively dividing a list into smaller sub-lists until each sub-list contains only one element It then repeatedly merges the sub-lists back together in a sorted order The time complexity for merge sort is O(n log n) because the list is continuously divided in half (log n) and then merged together (O(n)) The space complexity of merge sort is O(n) because it is not an in-place sorting algorithm --assignment--\nReview the Searching and Sorting Algorithms topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-searching-and-sorting-algorithms\\67f39de5ff88202c94798189.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "12789c181ec40e42ceb49d669997a3b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-styling-forms\\671a915858de057ad84c5dbd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a915858de057ad84c5dbd\ntitle: Styling Forms Review\nchallengeType: 24\ndashedName: review-styling-forms\n--description--\nBest Practices for Styling Inputs\nStyling Inputs: As with all text elements, you need to ensure the styles you apply to text inputs are accessible. This means the font needs to be adequately sized, and the color needs to have sufficient contrast with the background. Input elements are also focusable. When you are editing your styles, you should take care that you preserve a noticeable indicator when the element has focus, such as a bold border.\nUsing appearance: none for Inputs\nappearance: none: Browsers apply default styling to a lot of elements. The appearance: none CSS property gives you complete control over the styling, but comes with some caveats. When building custom styles for input elements, you will need to make sure focus and error indicators are still present.\nCommons Issues Styling datetime-local and color Properties\nCommon Issues: These special types of inputs rely on complex pseudo-elements to create things like date and color pickers. This presents a significant challenge for styling these inputs. One challenge is that the default styling is entirely browser-dependent, so the CSS you write to make the picker look the way you intend may be entirely different on another browser.\n--assignment--\nReview the Styling Forms topics and concepts.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-styling-forms\\671a915858de057ad84c5dbd.md",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7e1a9dbec436a4818450520f359991da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-semantic-html\\671a83934b61f64cefe87a61.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 671a83934b61f64cefe87a61\ntitle: Semantic HTML Review\nchallengeType: 24\ndashedName: review-semantic-html\n--description--\nImportance of Semantic HTML\nStructural hierarchy for heading elements: It is important to use the correct heading element to maintain the structural hierarchy of the content The h1 element is the highest level of heading and the h6 element is the lowest level of heading Presentational HTML elements: Elements that define the appearance of content Ex the deprecated center, big and font elements Semantic HTML elements: Elements that hold meaning and structure Ex header, nav, figure Semantic HTML Elements\nHeader element: used to define the header of a document or section Main element: used to contain the main content of the web page Section element: used to divide up content into smaller sections Navigation Section (nav) element: represents a section with navigation links Figure element: used to contain illustrations and diagrams Emphasis (em) element: marks text that has stress emphasis ```html\nNever give up on your dreams ```\nIdiomatic Text (i) element: used for highlighting alternative voice or mood, idiomatic terms from another language, technical terms, and thoughts ```html\nThere is a certain je ne sais quoi in the air ```\nThe lang attribute inside the open i tag is used to specify the language of the content In this case, the language would be French The i element does not indicate if the text is important or not, it only shows that it's somehow different from the surrounding text Strong Importance (strong) element: marks text that has strong importance ```html\nWarning: This product may cause allergic reactions ```\nBring Attention To (b) element: used to bring attention to text that is not important for the meaning of the content It's commonly used to highlight keywords in summaries or product names in reviews ```html\nWe tested several products, including the SuperSound 3000 for audio quality, the QuickCharge Pro for fast charging, and the Ecoclean Vacuum for cleaning The first two performed well, but the Ecoclean Vacuum did not meet expectations ```\nDescription List (dl) element: used to represent a list of term-description groupings Description Term (dt) element: used to represent the term being defined Description Details (dd) element: used to represent the description of the term",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6653,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-semantic-html\\671a83934b61f64cefe87a61.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0170b3c7cb0270f2583382b7e8869d4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-semantic-html\\671a83934b61f64cefe87a61.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "names in reviews ```html We tested several products, including the SuperSound 3000 for audio quality, the QuickCharge Pro for fast charging, and the Ecoclean Vacuum for cleaning The first two performed well, but the Ecoclean Vacuum did not meet expectations ``` Description List (dl) element: used to represent a list of term-description groupings Description Term (dt) element: used to represent the term being defined Description Details (dd) element: used to represent the description of the term```html\nHTML\nHyperText Markup Language\nCSS\nCascading Style Sheets\n```\nBlock Quotation (blockquote) element: used to represent a section that is quoted from another source This element has a cite attribute The value of the cite attribute is the URL of the source ```html\n\"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \"\n```\nCitation (cite) element: used to attribute the source of the referenced work visually Marks up the title of the reference ```html\n\"Can you imagine what it would be like to be a successful developer To have built software systems that people rely upon \"\n-Quincy Larson, How to learn to Code and Get a Developer Job [Full Book] ```\nInline Quotation (q) element: used to represent a short inline quotation ```html\nAs Quincy Larson said,\nMomentum is everything ```\nAbbreviation (abbr) element: used to represent an abbreviation or acronym To help users understand what the abbreviation or acronym is, you can show its full form, a human readable description, with the title attribute ```html\nHTML is the foundation of the web ```\nContact Address (address) element: used to represent the contact information (Date) Time (time) element: used to represent a date and/or time The datetime attribute is used to translate dates and times into a machine-readable format ```html\nThe reservations are for the 20:00\n```\nISO 8601 Date (datetime) attribute: used to represent dates and times in a machine-readable format The standard format is YYYY-MM-DDThh:mm:ss, with the capital T being a separator between the date and time Superscript (sup) element: used to represent superscript text Common use cases for the sup element would include exponents, superior lettering and ordinal numbers ```html\n22 (2 squared) is 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6653,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-semantic-html\\671a83934b61f64cefe87a61.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "033163df237f460d0d4cc176bef52c89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-semantic-html\\671a83934b61f64cefe87a61.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dates and times into a machine-readable format ```html The reservations are for the 20:00 ``` ISO 8601 Date (datetime) attribute: used to represent dates and times in a machine-readable format The standard format is YYYY-MM-DDThh:mm:ss, with the capital T being a separator between the date and time Superscript (sup) element: used to represent superscript text Common use cases for the sup element would include exponents, superior lettering and ordinal numbers ```html 22 (2 squared) is 4```\nSubscript (sub) element: used to represent subscript text Common use cases for the subscript element include chemical formulas, footnotes, and variable subscripts ```html\nCO2\n```\nInline Code (code) element: used to represent a fragment of computer code Preformatted Text (pre) element: represents preformatted text\n```html\nbody {\ncolor: red;\n}\n```\nUnarticulated Annotation (u) element: used to represent a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation ```html\nYou can use the unarticulated annotation element to highlight\ninccccort spling issses ```\nRuby Annotation (ruby) element: used for annotating text with pronunciation or meaning explanations An example usage is for East Asian typography Ruby fallback parenthesis (rp) element: used as a fallback for browsers lacking support for displaying ruby annotations Ruby text (rt) element: used to indicate text for the ruby annotation Usually used for pronunciation, or translation details in East Asian typography html\n<ruby>\n明日 <rp>(</rp><rt>Ashita</rt><rp>)</rp>\n</ruby>\nStrikethrough (s) element: used to represent content that is no longer accurate or relevant ```html\nTomorrow's hike will be meeting at noon Due to unforeseen weather conditions, the hike has been canceled ```\n--assignment--\nReview the Semantic HTML topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6653,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-semantic-html\\671a83934b61f64cefe87a61.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2b2f4ba2a0586ae9325107fdeceb7416",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e296dceca21b82426229\ntitle: Typescript Review\nchallengeType: 24\ndashedName: review-typescript\n--description--\nWhat is TypeScript\nJavaScript: JavaScript is a dynamically-typed language This means that variables can receive any values at run time The challenge of a dynamically-typed language is that the lack of type safety can introduce errors For example, even if your JavaScript function expects an array, you can still call it with a number:\n```javascript\nconst getRandomValue = (array) => {\nreturn array[Math floor(Math random() * array length)];\n}\nconsole log(getRandomValue(10));\n```\nThe console output for the example above will be undefined TypeScript: TypeScript extends the JavaScript language to include static typing, which helps catch errors caused by type mismatches before you run your code For example, you can define a type for the array parameter as follows:\ntypescript\nconst getRandomValue = (array: string[]) => {\nreturn array[Math floor(Math random() * array length)];\n}\nThis type definition tells TypeScript that the array parameter must be an array of strings Then, when you call getRandomValue and pass it a number, you get an error called a compiler error Compiler: You first need to compile TypeScript code into regular JavaScript When you run the compiler, TypeScript will evaluate your code and throw an error for any issues where the types don't match Data Types in TypeScript\nPrimitive Data Types in TypeScript: For the primitive data types string, null, undefined, number, boolean, and bigint, TypeScript offers corresponding type keywords typescript\nlet str: string = \"Naomi\";\nlet num: number = 42;\nlet bool: boolean = true;\nlet nope: null = null;\nlet nada: undefined = undefined;\nArray: You can define an array of specific type with two different syntaxes typescript\nconst arrOne: string[] = [\"Naomi\"];\nconst arrTwo: Array<string> = [\"Camperchan\"];\nObjects: You can define the exact structure of an object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9767,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "cdbe4e35b7db2c4455a54f010e904c5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the primitive data types string, null, undefined, number, boolean, and bigint, TypeScript offers corresponding type keywords typescript let str: string = \"Naomi\"; let num: number = 42; let bool: boolean = true; let nope: null = null; let nada: undefined = undefined; Array: You can define an array of specific type with two different syntaxes typescript const arrOne: string[] = [\"Naomi\"]; const arrTwo: Array<string> = [\"Camperchan\"]; Objects: You can define the exact structure of an objecttypescript\nconst obj: { a: string, b: number } = { a: \"Naomi\", b: 42 };\nIf you want an object with any keys, but where all values must be strings, there are two ways to define it:\ntypescript\nconst objOne: Record<string, string> = {};\nconst objTwo: { [key: string]: string } = {};\nOther Helpful Types in TypeScript:\nany: any indicates that a value can have any type It tells the compiler to stop caring about the type of that variable unknown: unknown tells TypeScript that you do care about the type of the value, but you don’t actually know what it is unknown is generally preferred over any void: This is a special type that you’ll typically only use when defining functions Functions that don’t have a return value use a return type of void never: It represents a type that will never exist type Keyword: This keyword is like const, but instead of declaring a variable, you can declare a type It is useful for declaring custom types such as union types or types that include only specific values:\ntypescript\ntype stringOrNumber = string | number;\ntype bot = \"camperchan\" | \"camperbot\" | \"naomi\";\ninterface: Interfaces are like classes for types They can implement or extend other interfaces, are specifically object types, and are generally preferred unless you need a specific feature offered by a type declaration typescript\ninterface wowie {\nzowie: boolean;\nmethod: () => void;\n}\nDefining Return Type: You can also define the return type of the function The example below defines the return value as a string If you try to return anything else, TypeScript will give a compiler error typescript\nconst getRandomValue = (array: string[]): string => {\nreturn array[Math floor(Math random() * array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9767,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "270e6bb6688de45f4a0fea0a7c7471b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "are generally preferred unless you need a specific feature offered by a type declaration typescript interface wowie { zowie: boolean; method: () => void; } Defining Return Type: You can also define the return type of the function The example below defines the return value as a string If you try to return anything else, TypeScript will give a compiler error typescript const getRandomValue = (array: string[]): string => { return array[Math floor(Math random() * arraylength)];\n}\nGenerics\nDefining Generic Type: You can define a generic type and refer to it in your function It can be thought of as a special parameter you provide to a function to control the behavior of the function's type definition Here is an example of defining a generic type for a function:\ntypescript\nconst getRandomValue = <T>(array: T[]): T => {\nreturn array[Math floor(Math random() * array length)];\n}\nconst val = getRandomValue([1, 2, 4])\nThe <T> syntax tells TypeScript that you are defining a generic type T for the function T is a common name for generic types, but you can use any name Then, you tell TypeScript that the array parameter is an array of values matching the generic type, and that the returned value is a single element of that same type Specifying Type Argument in Function Call: You can pass a type argument to a function call using angle brackets between the function name and its parameters Here is an example of passing a type argument to a function call:\ntypescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email value);\nThis tells TypeScript that the element you expect to find will be an input element Type Narrowing\nNarrowing by Truthiness: In the example below, you get a compiler error trying to access the value property of email because email might be null typescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email value);\nYou can use a conditional statement to confirm email is truthy before accessing the property:\ntypescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nif (email) {\nconsole log(email value);\n}\nTruthiness checks can also work in the reverse direction:\ntypescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nif ( email) {\nthrow new ReferenceError(\"Could not find email element \")\n}\nconsole log(email",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9767,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "bbd68c1dcf851efa7e3179b109631d65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value property of email because email might be null typescript const email = document querySelector<HTMLInputElement>(\"#email\"); console log(email value); You can use a conditional statement to confirm email is truthy before accessing the property: typescript const email = document querySelector<HTMLInputElement>(\"#email\"); if (email) { console log(email value); } Truthiness checks can also work in the reverse direction: typescript const email = document querySelector<HTMLInputElement>(\"#email\"); if ( email) { throw new ReferenceError(\"Could not find email element \") } console log(emailvalue);\nThrowing an error ends the logical execution of this code, which means when you reach the console log() call, TypeScript knows email cannot be null Optional Chaining: Optional chaining is also a form of type narrowing, under the same premise that the property access can't happen if the email value is null typescript\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email value);\ntypeof Operator: You can use a conditional to check the type of the variable using the typeof operator typescript\nconst myVal = Math random() > 0 5 222 : \"222\";\nif (typeof myVal === \"number\") {\nconsole log(myVal / 10);\n}\ninstanceof Keyword: If the object comes from a class, you can use the instanceof keyword to narrow the type ```typescript\nconst email = document querySelector(\"#email\");\nif (email instanceof HTMLInputElement) {\nconsole log(email value);\n}\n```\nCasting: When TypeScript cannot automatically determine the type of a value, such as the result from request json() method in the example below, you'll get a compiler error One way to resolve this is by casting the type, but doing so weakens TypeScript's ability to catch potential errors ```typescript\ninterface User {\nname: string;\nage: number;\n}\nconst printAge = (user: User) =>\nconsole log(${user name} is ${user age} years old )\nconst request = await fetch(\"url\")\nconst myUser = await request json() as User;\nprintAge(myUser);\n```\nType Guard: Instead of casting the type, you can write a type guard:\n```typescript\ninterface User {\nname: string;\nage: number;\n}\nconst isValidUser = (user: unknown): user is User => {\nreturn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9767,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "b9ab5be1fb2fe0b14ec2015d38b7a184",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to catch potential errors ```typescript interface User { name: string; age: number; } const printAge = (user: User) => console log(${user name} is ${user age} years old ) const request = await fetch(\"url\") const myUser = await request json() as User; printAge(myUser); ``` Type Guard: Instead of casting the type, you can write a type guard: ```typescript interface User { name: string; age: number; } const isValidUser = (user: unknown): user is User => { returnuser &&\ntypeof user === \"object\" &&\n\"name\" in user &&\n\"age\" in user;\n}\n```\nThe user is User syntax indicates that your function returns a boolean value, which when true means the user value satisfies the User interface tsconfig File\ntsconfig json: TypeScript's compiler settings live in a tsconfig json file in the root directory of your project json\n{\n\"compilerOptions\": {\n\"rootDir\": \" /src\",\n\"outDir\": \" /prod\",\n\"lib\": [\"ES2023\"],\n\"target\": \"ES2023\",\n\"module\": \"ES2022\",\n\"moduleResolution\": \"Node\",\n\"esModuleInterop\": true,\n\"skipLibCheck\": true,\n\"strict\": true\n},\n\"exclude\": [\"test/\"]\n}\nHere are descriptions of the compiler options used in the example above:\ncompilerOptions: The compilerOptions property is where you control how the TypeScript compiler behaves rootDir and outDir: The rootDir and outDir tell TypeScript which directory holds your source files, and which directory should contain the transpiled JavaScript code lib: The lib property determines which type definitions the compiler uses, and allows you to include support for specific ES releases, the DOM, and more module and moduleResolution: The module and moduleResolution work in tandem to manage how your package uses modules - either CommonJS or ECMAScript esModuleInterop: The esModuleInterop allows for smoother interoperability between CommonJS and ES modules by automatically creating namespace objects for imports skipLibCheck: The skipLibCheck option skips validating d ts files that aren't referenced by imports in your code strict: The strict flag enables several checks, such as ensuring proper handling of nullable types and warning when TypeScript falls back to any",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9767,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "5001ad0e957d2bbfffd64de90e345a67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and moduleResolution work in tandem to manage how your package uses modules - either CommonJS or ECMAScript esModuleInterop: The esModuleInterop allows for smoother interoperability between CommonJS and ES modules by automatically creating namespace objects for imports skipLibCheck: The skipLibCheck option skips validating d ts files that aren't referenced by imports in your code strict: The strict flag enables several checks, such as ensuring proper handling of nullable types and warning when TypeScript falls back to anyexclude: The top-level exclude property tells the compiler to ignore these TypeScript files during compilation --assignment--\nReview the Typescript topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9767,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-typescript\\6724e296dceca21b82426229.md",
      "source_type": "git_repo"
    },
    "token_count": 124,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3dd0772262f68ed9c44bebeae481b1be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6723d3cfdd0717d3f1bf27e3\ntitle: JavaScript Review\nchallengeType: 24\ndashedName: review-javascript\n--description--\nReview the concepts below to prepare for the upcoming prep exam Working with HTML, CSS, and JavaScript\nWhile HTML and CSS provide website structure, JavaScript brings interactivity to websites by enabling complex functionality, such as handling user input, animating elements, and even building full web applications Data Types in JavaScript\nData types help the program understand the kind of data it's working with, whether it's a number, text, or something else Number: A number represents both integers and floating-point values Examples of integers include 7, 19, and 90 Floating point: A floating point number is a number with a decimal point Examples include 3 14, 0 5, and 0 0001 String: A string is a sequence of characters, or text, enclosed in quotes \"I like coding\" and 'JavaScript is fun' are examples of strings Boolean: A boolean represents one of two possible values: true or false You can use a boolean to represent a condition, such as isLoggedIn = true Undefined and Null: An undefined value is a variable that has been declared but not assigned a value A null value is an empty value or a variable that has intentionally been assigned a value of null Object: An object is a collection of key-value pairs The key is the property name, and the value is the property value Here, the pet object has three properties or keys: name, age, and type The values are Fluffy, 3, and dog, respectively js\nlet pet = {\nname: 'Fluffy',\nage: 3,\ntype: 'dog'\n};\nSymbol: The Symbol data type is a unique and immutable value that may be used as an identifier for object properties In the example below, two symbols are created with the same description, but they are not equal js\nconst crypticKey1= Symbol('saltNpepper');\nconst crypticKey2= Symbol('saltNpepper');\nconsole log(crypticKey1 === crypticKey2); // false\nBigInt: When the number is too large for the Number data type, you can use the BigInt data type to represent integers of arbitrary length By adding an n to the end of the number, you can create a BigInt",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 65
  },
  {
    "id": "d0f8453be0b6788a5c90a77fd748ee79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as an identifier for object properties In the example below, two symbols are created with the same description, but they are not equal js const crypticKey1= Symbol('saltNpepper'); const crypticKey2= Symbol('saltNpepper'); console log(crypticKey1 === crypticKey2); // false BigInt: When the number is too large for the Number data type, you can use the BigInt data type to represent integers of arbitrary length By adding an n to the end of the number, you can create a BigIntjs\nconst veryBigNumber = 1234567890123456789012345678901234567890n;\nVariables in JavaScript\nVariables can be declared using the let keyword js\nlet cityName;\nTo assign a value to a variable, you can use the assignment operator = js\ncityName = 'New York';\nVariables declared using let can be reassigned a new value js\ncityName = 'Los Angeles';\nconsole log(cityName); // Los Angeles\nApart from let, you can also use const to declare a variable However, a const variable cannot be reassigned a new value js\nconst cityName = 'New York';\ncityName = 'Los Angeles'; // TypeError: Assignment to constant variable Variables declared using const find uses in declaring constants, that are not allowed to change throughout the code, such as PI or MAX_SIZE Variable Naming Conventions\nVariable names should be descriptive and meaningful Variable names should be camelCase like cityName, isLoggedIn, and veryBigNumber Variable names should not start with a number They must begin with a letter, _, or $ Variable names should not contain spaces or special characters, except for _ and $ Variable names should not be reserved keywords Variable names are case-sensitive age and Age are different variables Strings and String immutability in JavaScript\nStrings are sequences of characters enclosed in quotes They can be created using single quotes and double quotes js\nlet correctWay = 'This is a string';\nlet alsoCorrect = \"This is also a string\";\nStrings are immutable in JavaScript This means that once a string is created, you cannot change the characters in the string However, you can still reassign strings to a new value js\nlet firstName = 'John';\nfirstName = 'Jane'; // Reassigning the string to a new value\nString Concatenation in JavaScript\nConcatenation is the process of joining multiple strings or combining strings with variables that hold text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 65
  },
  {
    "id": "174df7039b1de8a41edc8d4c608a7017",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "string'; let alsoCorrect = \"This is also a string\"; Strings are immutable in JavaScript This means that once a string is created, you cannot change the characters in the string However, you can still reassign strings to a new value js let firstName = 'John'; firstName = 'Jane'; // Reassigning the string to a new value String Concatenation in JavaScript Concatenation is the process of joining multiple strings or combining strings with variables that hold textThe + operator is one of the simplest and most frequently used methods to concatenate strings js\nlet studentName = 'Asad';\nlet studentAge = 25;\nlet studentInfo = studentName + ' is ' + studentAge + ' years old ';\nconsole log(studentInfo); // Asad is 25 years old If you need to add or append to an existing string, then you can use the  += operator This is helpful when you want to build upon a string by adding more text to it over time js\nlet message = 'Welcome to programming, ';\nmessage += 'Asad ';\nconsole log(message); // Welcome to programming, Asad Another way you can concatenate strings is to use the concat() method This method joins two or more strings together js\nlet firstName = 'John';\nlet lastName = 'Doe';\nlet fullName = firstName concat(' ', lastName);\nconsole log(fullName); // John Doe\nLogging Messages with console log()\nThe console log() method is used to log messages to the console It's a helpful tool for debugging and testing your code js\nconsole log('Hello, World ');\n// Output: Hello, World Semicolons in JavaScript\nSemicolons are primarily used to mark the end of a statement This helps the JavaScript engine understand the separation of individual instructions, which is crucial for correct execution js\nlet message = 'Hello, World '; // first statement ends here\nlet number = 42; // second statement starts here\nSemicolons help prevent ambiguities in code execution and ensure that statements are correctly terminated Comments in JavaScript\nAny line of code that is commented out is ignored by the JavaScript engine Comments are used to explain code, make notes, or temporarily disable code Single-line comments are created using // js\n// This is a single-line comment and will be ignored by the JavaScript engine\nMulti-line comments are created using /* to start the comment and */ to end the comment js\n/*\nThis is a multi-line comment It can span multiple lines",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 65
  },
  {
    "id": "7e37aedbdf55da28768d9aa91ed33278",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "JavaScript Any line of code that is commented out is ignored by the JavaScript engine Comments are used to explain code, make notes, or temporarily disable code Single-line comments are created using // js // This is a single-line comment and will be ignored by the JavaScript engine Multi-line comments are created using /* to start the comment and */ to end the comment js /* This is a multi-line comment It can span multiple lines*/\nJavaScript as a Dynamically Typed Language\nJavaScript is a dynamically typed language, which means that you don't have to specify the data type of a variable when you declare it The JavaScript engine automatically determines the data type based on the value assigned to the variable js\nlet error = 404; // JavaScript treats error as a number\nerror = \"Not Found\"; // JavaScript now treats error as a string\nOther languages, like Java, that are not dynamically typed would result in an error:\njs\nint error = 404; // value must always be an integer\nerror = \"Not Found\"; // This would cause an error in Java\nUsing the typeof Operator\nThe typeof operator is used to check the data type of a variable It returns a string indicating the type of the variable ```js\nlet age = 25;\nconsole log(typeof age); // number\nlet isLoggedIn = true;\nconsole log(typeof isLoggedIn); // boolean\n```\nHowever, there's a well-known quirk in JavaScript when it comes to null The typeof operator returns object for null values js\nlet user = null;\nconsole log(typeof user); // object\nString Basics\nDefinition: A string is a sequence of characters wrapped in either single quotes, double quotes or backticks Strings are primitive data types and they are immutable Immutability means that once a string is created, it cannot be changed Accessing Characters from a String: To access a character from a string you can use bracket notation and pass in the index number An index is the position of a character within a string, and it is zero-based js\nconst developer = \"Jessica\";\ndeveloper[0] // J\n\\n (Newline Character): You can create a newline in a string by using the \\n newline character js\nconst poem = \"Roses are red,\\nViolets are blue,\\nJavaScript is fun,\\nAnd so are you \";\nconsole log(poem);\nEscaping Strings: You can escape characters in a string by placing backlashes (\\) in front of the quotes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 3,
    "total_chunks": 65
  },
  {
    "id": "11627835971ad95027340b44df780aad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "number An index is the position of a character within a string, and it is zero-based js const developer = \"Jessica\"; developer[0] // J \\n (Newline Character): You can create a newline in a string by using the \\n newline character js const poem = \"Roses are red,\\nViolets are blue,\\nJavaScript is fun,\\nAnd so are you \"; console log(poem); Escaping Strings: You can escape characters in a string by placing backlashes (\\) in front of the quotesjs\nconst statement = \"She said, \\\"Hello \\\"\";\nconsole log(statement); // She said, \"Hello \"\nTemplate Literals (Template Strings) and String Interpolation\nDefinition: Template literals are defined with backticks (`) They allow for easier string manipulation, including embedding variables directly inside a string, a feature known as string interpolation js\nconst name = \"Jessica\";\nconst greeting = `Hello, ${name} `; // \"Hello, Jessica \"\nASCII, the charCodeAt() Method and the fromCharCode() Method\nASCII: ASCII, short for American Standard Code for Information Interchange, is a character encoding standard used in computers to represent text It assigns a numeric value to each character, which is universally recognized by machines The charCodeAt() Method: This method is called on a string and returns the ASCII code of the character at a specified index js\nconst letter = \"A\";\nconsole log(letter charCodeAt(0));  // 65\nThe fromCharCode() Method: This method converts an ASCII code into its corresponding character js\nconst char = String fromCharCode(65);\nconsole log(char);  // A\nOther Common String Methods\nThe indexOf Method: This method is used to search for a substring within a string If the substring is found, indexOf returns the index (or position) of the first occurrence of that substring If the substring is not found, indexOf returns -1, which indicates that the search was unsuccessful js\nconst text = \"The quick brown fox jumps over the lazy dog \";\nconsole log(text indexOf(\"fox\")); // 16\nconsole log(text indexOf(\"cat\")); // -1\nThe includes() Method: This method is used to check if a string contains a specific substring If the substring is found within the string, the method returns true Otherwise, it returns false js\nconst text = \"The quick brown fox jumps over the lazy dog \";\nconsole log(text includes(\"fox\")); // true\nconsole log(text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 65
  },
  {
    "id": "ada0f11f67aa7537fc895664c7cc5ece",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const text = \"The quick brown fox jumps over the lazy dog \"; console log(text indexOf(\"fox\")); // 16 console log(text indexOf(\"cat\")); // -1 The includes() Method: This method is used to check if a string contains a specific substring If the substring is found within the string, the method returns true Otherwise, it returns false js const text = \"The quick brown fox jumps over the lazy dog \"; console log(text includes(\"fox\")); // true console log(textincludes(\"cat\")); // false\nThe slice() Method: This method extracts a portion of a string and returns a new string, without modifying the original string It takes two parameters: the starting index and the optional ending index js\nconst text = \"freeCodeCamp\";\nconsole log(text slice(0, 4));  // \"free\"\nconsole log(text slice(4, 8));  // \"Code\"\nconsole log(text slice(8, 12)); // \"Camp\"\nThe toUpperCase() Method: This method converts all the characters to uppercase letters and returns a new string with all uppercase characters js\nconst text = \"Hello, world \";\nconsole log(text toUpperCase()); // \"HELLO, WORLD \"\nThe toLowerCase() Method: This method converts all characters in a string to lowercase js\nconst text = \"HELLO, WORLD \"\nconsole log(text toLowerCase()); // \"hello, world \"\nThe replace() Method: This method allows you to find a specified value (like a word or character) in a string and replace it with another value The method returns a new string with the replacement and leaves the original unchanged because JavaScript strings are immutable js\nconst text = \"I like cats\";\nconsole log(text replace(\"cats\", \"dogs\")); // \"I like dogs\"\nThe repeat() Method: This method is used to repeat a string a specified number of times js\nconst text = \"Hello\";\nconsole log(text repeat(3)); // \"HelloHelloHello\"\nThe trim() Method: This method is used to remove whitespaces from both the beginning and the end of a string js\nconst text = \"  Hello, world \";\nconsole log(text trim()); // \"Hello, world \"\nThe trimStart() Method: This method removes whitespaces from the beginning (or \"start\") of the string js\nconst text = \"  Hello, world \";\nconsole log(text trimStart()); // \"Hello, world \"\nThe trimEnd() Method: This method removes whitespaces from the end of the string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 5,
    "total_chunks": 65
  },
  {
    "id": "39cbc534b9cedea31c10f07188bea57b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Method: This method is used to remove whitespaces from both the beginning and the end of a string js const text = \" Hello, world \"; console log(text trim()); // \"Hello, world \" The trimStart() Method: This method removes whitespaces from the beginning (or \"start\") of the string js const text = \" Hello, world \"; console log(text trimStart()); // \"Hello, world \" The trimEnd() Method: This method removes whitespaces from the end of the stringjs\nconst text = \" Hello, world \";\nconsole log(text trimEnd()); // \"  Hello, world \"\nThe prompt() Method: This method of the window is used to get information from a user through the form of a dialog box This method takes two arguments The first argument is the message which will appear inside the dialog box, typically prompting the user to enter information The second one is a default value which is optional and will fill the input field initially js\nconst answer = window prompt(\"What's your favorite animal \"); // This will change depending on what the user answers\nWorking with the Number Data Type\nDefinition: JavaScript's Number type includes integers, floating-point numbers, Infinity and NaN Floating-point numbers are numbers with a decimal point Positive Infinity is a number greater than any other number while -Infinity is a number smaller than any other number NaN (Not a Number) represents an invalid numeric value like the string \"Jessica\" Common Arithmetic Operations\nAddition Operator: This operator (+) is used to calculate the sum of two or more numbers Subtraction Operator: This operator (-) is used to calculate the difference between two numbers Multiplication Operator: This operator (*) is used to calculate the product of two or more numbers Division Operator: This operator (/) is used to calculate the quotient between two numbers\nDivision By Zero: If you try to divide by zero, JavaScript will return Infinity Remainder Operator: This operator(%) returns the remainder of a division Exponentiation Operator: This operator (**) raises one number to the power of another Calculations with Numbers and Strings\nExplanation: When you use the + operator with a number and a string, JavaScript will coerce the number into a string and concatenate the two values When you use the -, * or / operators with a string and number, JavaScript will coerce the string into a number and the result will be a number For null and undefined, JavaScript treats null as 0 and undefined as NaN in mathematical operations",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 6,
    "total_chunks": 65
  },
  {
    "id": "427a88cbe158d112eb476f35b28f2840",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Calculations with Numbers and Strings Explanation: When you use the + operator with a number and a string, JavaScript will coerce the number into a string and concatenate the two values When you use the -, * or / operators with a string and number, JavaScript will coerce the string into a number and the result will be a number For null and undefined, JavaScript treats null as 0 and undefined as NaN in mathematical operations```js\nconst result = 5 + '10';\nconsole log(result); // 510\nconsole log(typeof result); // string\nconst subtractionResult = '10' - 5;\nconsole log(subtractionResult); // 5\nconsole log(typeof subtractionResult); // number\nconst multiplicationResult = '10' * 2;\nconsole log(multiplicationResult); // 20\nconsole log(typeof multiplicationResult); // number\nconst divisionResult = '20' / 2;\nconsole log(divisionResult); // 10\nconsole log(typeof divisionResult); // number\nconst result1 = null + 5;\nconsole log(result1); // 5\nconsole log(typeof result1); // number\nconst result2 = undefined + 5;\nconsole log(result2); // NaN\nconsole log(typeof result2); // number\n```\nOperator Precedence\nDefinition: Operator precedence determines the order in which operations are evaluated in an expression Operators with higher precedence are evaluated before those with lower precedence Values inside the parenthesis will be evaluated first and multiplication/division will have higher precedence than addition/subtraction If the operators have the same precedence, then JavaScript will use associativity Associativity is what tells JavaScript whether to evaluate operators from left to right or right to left For example, the exponent operator is also right to left associative:\n```js\nconst result = (2 + 3) * 4;\nconsole log(result); // 20\nconst result2 = 10 - 2 + 3;\nconsole log(result2); // 11\nconst result3 = 2 ** 3 ** 2;\nconsole log(result3); // 512\n```\nIncrement and Decrement Operators\nIncrement Operator: This operator is used to increase the value by one The prefix notation ++num increases the value of the variable first, then returns a new value The postfix notation num++ returns the current value of the variable first, then increases it ```js\nlet x = 5;\nconsole log(++x); // 6\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 65
  },
  {
    "id": "6fc61b81f4a5b5d68c15644fa32cee1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "+ 3; console log(result2); // 11 const result3 = 2 ** 3 ** 2; console log(result3); // 512 ``` Increment and Decrement Operators Increment Operator: This operator is used to increase the value by one The prefix notation ++num increases the value of the variable first, then returns a new value The postfix notation num++ returns the current value of the variable first, then increases it ```js let x = 5; console log(++x); // 6 consolelog(x); // 6\nlet y = 5;\nconsole log(y++); // 5\nconsole log(y); // 6\n```\nDecrement Operator: This operator is used to decrease the value by one The prefix and postfix notation works the same way as earlier with the increment operator ```js\nlet num = 5;\nconsole log(--num); // 4\nconsole log(num--); // 4\nconsole log(num); // 3\n```\nCompound Assignment Operators\nAddition Assignment (+=) Operator: This operator performs addition on the values and assigns the result to the variable Subtraction Assignment (-=) Operator: This operator performs subtraction on the values and assigns the result to the variable Multiplication Assignment (*=) Operator: This operator performs multiplication on the values and assigns the result to the variable Division Assignment (/=) Operator: This operator performs division on the values and assigns the result to the variable Remainder Assignment (%=) Operator: This operator divides a variable by the specified number and assigns the remainder to the variable Exponentiation Assignment (**=) Operator: This operator raises a variable to the power of the specified number and reassigns the result to the variable Booleans and Equality\nBoolean Definition: A boolean is a data type that can only have two values: true or false Equality (==) Operator: This operator uses type coercion before checking if the values are equal js\nconsole log(5 == '5'); // true\nStrict Equality (===) Operator: This operator does not perform type coercion and checks if both the types and values are equal js\nconsole log(5 === '5'); // false\nInequality ( =) Operator: This operator uses type coercion before checking if the values are not equal Strict Inequality ( ==) Operator: This operator does not perform type coercion and checks if both the types and values are not equal",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 8,
    "total_chunks": 65
  },
  {
    "id": "5c91d0b252cf155159ad2f3304e408b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "equal js console log(5 == '5'); // true Strict Equality (===) Operator: This operator does not perform type coercion and checks if both the types and values are equal js console log(5 === '5'); // false Inequality ( =) Operator: This operator uses type coercion before checking if the values are not equal Strict Inequality ( ==) Operator: This operator does not perform type coercion and checks if both the types and values are not equalComparison Operators\nGreater Than (>) Operator: This operator checks if the value on the left is greater than the one on the right Greater Than (>=) or Equal Operator: This operator checks if the value on the left is greater than or equal to the one on the right Less Than (<) Operator: This operator checks if the value on the left is less than the one on the right Less Than (<=) or Equal Operator: This operator checks if the value on the left is less than or equal to the one on the right Unary Operators\nUnary Plus Operator: This operator converts its operand into a number If the operand is already a number, it remains unchanged ```js\nconst str = '42';\nconst num = +str;\nconsole log(num); // 42\nconsole log(typeof num); // number\n```\nUnary Negation (-) Operator: This operator negates the operand js\nconst num = 4;\nconsole log(-num); // -4\nLogical NOT ( ) Operator: This operator flips the boolean value of its operand So, if the operand is true, it becomes false, and if it's false, it becomes true Bitwise Operators\nBitwise AND (&) Operator: This operator returns a 1 in each bit position for which the corresponding bits of both operands are 1 Bitwise AND Assignment (&=) Operator: This operator performs a bitwise AND operation with the specified number and reassigns the result to the variable Bitwise OR (|) Operator: This operator returns a 1 in each bit position for which the corresponding bits of either or both operands are 1 Bitwise OR Assignment (|=) Operator: This operator performs a bitwise OR operation with the specified number and reassigns the result to the variable Bitwise XOR (^) Operator: This operator returns a 1 in each bit position for which the corresponding bits of either, but not both, operands are 1 Bitwise NOT (~) Operator: This operator inverts the binary representation of a number",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 9,
    "total_chunks": 65
  },
  {
    "id": "8cae18786ec1b1746b729587e2f57b05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "bit position for which the corresponding bits of either or both operands are 1 Bitwise OR Assignment (|=) Operator: This operator performs a bitwise OR operation with the specified number and reassigns the result to the variable Bitwise XOR (^) Operator: This operator returns a 1 in each bit position for which the corresponding bits of either, but not both, operands are 1 Bitwise NOT (~) Operator: This operator inverts the binary representation of a numberLeft Shift (<<) Operator: This operator shifts all bits to the left by a specified number of positions Right Shift (>>) Operator: This operator shifts all bits to the right Conditional Statements, Truthy Values, Falsy Values and the Ternary Operator\nif/else if/else: An if statement takes a condition and runs a block of code if that condition is truthy If the condition is false, then it moves to the else if block If none of those conditions are true, then it will execute the else clause Truthy values are any values that result in true when evaluated in a Boolean context like an if statement Falsy values are values that evaluate to false in a Boolean context ```js\nconst score = 87;\nif (score >= 90) {\nconsole log('You got an A');\n} else if (score >= 80) {\nconsole log('You got a B'); // You got an B\n} else if (score >= 70) {\nconsole log('You got a C');\n} else {\nconsole log('You failed You need to study more ');\n}\n```\nTernary Operator: This operator is often used as a shorter way to write if else statements ```js\nconst temperature = 30;\nconst weather = temperature > 25 'sunny' : 'cool';\nconsole log(It's a ${weather} day ); // It's a sunny day ```\nBinary Logical Operators\nLogical AND (&&) Operator: This operator checks if both operands are truthy If the first value is truthy, then it will return the second value If the first value is falsy, then it will return the first value ```js\nconst result = true && 'hello';\nconsole log(result); // hello\n```\nLogical OR (||) Operator: This operator checks if at least one of the operands is truthy If the first value is truthy, then it is returned If the first value is falsy, then the second value is returned Nullish Coalescing (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 10,
    "total_chunks": 65
  },
  {
    "id": "cb2bd47bfbb03d2611fdeb675a60afba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value is truthy, then it will return the second value If the first value is falsy, then it will return the first value ```js const result = true && 'hello'; console log(result); // hello ``` Logical OR (||) Operator: This operator checks if at least one of the operands is truthy If the first value is truthy, then it is returned If the first value is falsy, then the second value is returned Nullish Coalescing () Operator: This operator will return a value only if the first one is null or undefined ```js\nconst userSettings = {\ntheme: null,\nvolume: 0,\nnotifications: false,\n};\nlet theme = userSettings theme 'light';\nconsole log(theme); // light\n```\nThe Math Object\nThe Math random() Method: This method generates a random floating-point number between 0 (inclusive) and 1 (exclusive) This means the possible output can be 0, but it will never actually reach 1 The Math max() Method: This method takes a set of numbers and returns the maximum value The Math min() Method: This method takes a set of numbers and returns the minimum value The Math ceil() Method: This method rounds a value up to the nearest whole integer The Math floor() Method: This method rounds a value down to the nearest whole integer The Math round() Method: This method rounds a value to the nearest whole integer js\nconsole log(Math round(2 3)); // 2\nconsole log(Math round(4 5)); // 5\nconsole log(Math round(4 8)); // 5\nThe Math trunc() Method: This method removes the decimal part of a number, returning only the integer portion, without rounding The Math sqrt() Method: This method will return the square root of a number The Math cbrt() Method: This method will return the cube root of a number The Math abs() Method: This method will return the absolute value of a number The Math pow() Method: This method takes two numbers and raises the first to the power of the second Common Number Methods\nisNaN(): NaN stands for \"Not-a-Number\" It's a special value that represents an unrepresentable or undefined numerical result The isNaN() function property is used to determine whether a value is NaN or not Number isNaN() provides a more reliable way to check for NaN values, especially in cases where type coercion might lead to unexpected results with the global isNaN() function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 11,
    "total_chunks": 65
  },
  {
    "id": "fa5ceffa08dc376865f4562a8ae31f7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "takes two numbers and raises the first to the power of the second Common Number Methods isNaN(): NaN stands for \"Not-a-Number\" It's a special value that represents an unrepresentable or undefined numerical result The isNaN() function property is used to determine whether a value is NaN or not Number isNaN() provides a more reliable way to check for NaN values, especially in cases where type coercion might lead to unexpected results with the global isNaN() function```js\nconsole log(isNaN(NaN));       // true\nconsole log(isNaN(undefined)); // true\nconsole log(isNaN({}));        // true\nconsole log(isNaN(true));      // false\nconsole log(isNaN(null));      // false\nconsole log(isNaN(37));        // false\nconsole log(Number isNaN(NaN));        // true\nconsole log(Number isNaN(Number NaN)); // true\nconsole log(Number isNaN(0 / 0));      // true\nconsole log(Number isNaN(\"NaN\"));      // false\nconsole log(Number isNaN(undefined));  // false\n```\nThe parseFloat() Method: This method parses a string argument and returns a floating-point number It's designed to extract a number from the beginning of a string, even if the string contains non-numeric characters later on The parseInt() Method: This method parses a string argument and returns an integer parseInt() stops parsing at the first non-digit it encounters For floating-point numbers, it returns only the integer part If it can't find a valid integer at the start of the string, it returns NaN The toFixed() Method: This method is called on a number and takes one optional argument, which is the number of digits to appear after the decimal point It returns a string representation of the number with the specified number of decimal places Comparisons and the null and undefined Data Types\nComparisons and undefined: A variable is undefined when it has been declared but hasn't been assigned a value It's the default value of uninitialized variables and function parameters that weren't provided an argument undefined converts to NaN in numeric contexts, which makes all numeric comparisons with undefined return false js\nconsole log(undefined > 0);  // false\nconsole log(undefined < 0);  // false\nconsole log(undefined == 0); // false\nComparisons and null: The null type represents the intentional absence of a value When using the equality operator, null and undefined are considered equal",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 12,
    "total_chunks": 65
  },
  {
    "id": "528d6436138d2880e1726ea59d54cf7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a value It's the default value of uninitialized variables and function parameters that weren't provided an argument undefined converts to NaN in numeric contexts, which makes all numeric comparisons with undefined return false js console log(undefined > 0); // false console log(undefined < 0); // false console log(undefined == 0); // false Comparisons and null: The null type represents the intentional absence of a value When using the equality operator, null and undefined are considered equalHowever, when using the strict equality operator (===), which checks both value and type without performing type coercion, null and undefined are not equal:\njs\nconsole log(null == undefined); // true\nconsole log(null === undefined); // false\nswitch Statements\nDefinition: A switch statement evaluates an expression and matches its value against a series of case clauses When a match is found, the code block associated with that case is executed ```js\nconst dayOfWeek = 3;\nswitch (dayOfWeek) {\ncase 1:\nconsole log(\"It's Monday Time to start the week strong \");\nbreak;\ncase 2:\nconsole log(\"It's Tuesday Keep the momentum going \");\nbreak;\ncase 3:\nconsole log(\"It's Wednesday We're halfway there \");\nbreak;\ncase 4:\nconsole log(\"It's Thursday Almost the weekend \");\nbreak;\ncase 5:\nconsole log(\"It's Friday The weekend is near \");\nbreak;\ncase 6:\nconsole log(\"It's Saturday Enjoy your weekend \");\nbreak;\ncase 7:\nconsole log(\"It's Sunday Rest and recharge \");\nbreak;\ndefault:\nconsole log(\"Invalid day Please enter a number between 1 and 7 \");\n}\n```\nJavaScript Functions\nFunctions are reusable blocks of code that perform a specific task Functions can be defined using the function keyword followed by a name, a list of parameters, and a block of code that performs the task Arguments are values passed to a function when it is called When a function finishes its execution, it will always return a value By default, the return value of a function is undefined The return keyword is used to specify the value to be returned from the function and ends the function execution Arrow Functions\nArrow functions are a more concise way to write functions in JavaScript Arrow functions are defined using the => syntax between the parameters and the function body When defining an arrow function, you do not need the function keyword If you are using a single parameter, you can omit the parentheses around the parameter list",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 13,
    "total_chunks": 65
  },
  {
    "id": "463bfc4e99b7c39f46f153bb433a1b2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return keyword is used to specify the value to be returned from the function and ends the function execution Arrow Functions Arrow functions are a more concise way to write functions in JavaScript Arrow functions are defined using the => syntax between the parameters and the function body When defining an arrow function, you do not need the function keyword If you are using a single parameter, you can omit the parentheses around the parameter listIf the function body consists of a single expression, you can omit the curly braces and the return keyword Scope in Programming\nGlobal scope: This is the outermost scope in JavaScript Variables declared in the global scope are accessible from anywhere in the code and are called global variables Local scope: This refers to variables declared within a function These variables are only accessible within the function where they are declared and are called local variables Block scope: A block is a set of statements enclosed in curly braces {} such as in if statements, or loops Block scoping with let and const provides even finer control over variable accessibility, helping to prevent errors and make your code more predictable JavaScript Array Basics\nDefinition: A JavaScript array is an ordered collection of values, each identified by a numeric index The values in a JavaScript array can be of different data types, including numbers, strings, booleans, objects, and even other arrays Arrays are contiguous in memory, which means that all elements are stored in a single, continuous block of memory locations, allowing for efficient indexing and fast access to elements by their index js\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\nAccessing Elements From Arrays: To access elements from an array, you will need to reference the array followed by its index number inside square brackets JavaScript arrays are zero based indexed which means the first element is at index 0, the second element is at index 1, etc If you try to access an index that doesn't exist for the array, then JavaScript will return undefined ```js\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers[0] // \"Jessica\"\ndevelopers[1] // \"Naomi\"\ndevelopers[10] // undefined\n```\nlength Property: This property is used to return the number of items in an array js\nconst developers = [\"Jessica\", \"Naomi\", \"Tom\"];\ndevelopers length // 3\nUpdating Elements in an Array: To update an element in an array, you use the assignment operator (=) to assign a new value to the element at a specific index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 14,
    "total_chunks": 65
  },
  {
    "id": "6797de3683c48676b1e8bc922fefcece",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "will return undefined ```js const developers = [\"Jessica\", \"Naomi\", \"Tom\"]; developers[0] // \"Jessica\" developers[1] // \"Naomi\" developers[10] // undefined ``` length Property: This property is used to return the number of items in an array js const developers = [\"Jessica\", \"Naomi\", \"Tom\"]; developers length // 3 Updating Elements in an Array: To update an element in an array, you use the assignment operator (=) to assign a new value to the element at a specific index```js\nconst fruits = ['apple', 'banana', 'cherry'];\nfruits[1] = 'blueberry';\nconsole log(fruits); // ['apple', 'blueberry', 'cherry']\n```\nTwo Dimensional Arrays\nDefinition: A two-dimensional array is essentially an array of arrays It's used to represent data that has a natural grid-like structure, such as a chessboard, a spreadsheet, or pixels in an image To access an element in a two-dimensional array, you need two indices: one for the row and one for the column ```js\nconst chessboard = [\n['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],\n['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']\n];\nconsole log(chessboard[0][3]); // \"Q\"\n```\nArray Destructuring\nDefinition: Array destructuring is a feature in JavaScript that allows you to extract values from arrays and assign them to variables in a more concise and readable way It provides a convenient syntax for unpacking array elements into distinct variables ```js\nconst fruits = [\"apple\", \"banana\", \"orange\"];\nconst [first, second, third] = fruits;\nconsole log(first); // \"apple\"\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 15,
    "total_chunks": 65
  },
  {
    "id": "e4914cbf748757c50abf6ac68e6ac3fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'p', 'p'], ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'] ]; console log(chessboard[0][3]); // \"Q\" ``` Array Destructuring Definition: Array destructuring is a feature in JavaScript that allows you to extract values from arrays and assign them to variables in a more concise and readable way It provides a convenient syntax for unpacking array elements into distinct variables ```js const fruits = [\"apple\", \"banana\", \"orange\"]; const [first, second, third] = fruits; console log(first); // \"apple\" consolelog(second); // \"banana\"\nconsole log(third); // \"orange\"\n```\nRest Syntax: This allows you to capture the remaining elements of an array that haven't been destructured into a new array ```js\nconst fruits = [\"apple\", \"banana\", \"orange\", \"mango\", \"kiwi\"];\nconst [first, second, rest] = fruits;\nconsole log(first); // \"apple\"\nconsole log(second); // \"banana\"\nconsole log(rest); // [\"orange\", \"mango\", \"kiwi\"]\n```\nCommon Array Methods\npush() Method: This method is used to add elements to the end of the array and will return the new length ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts push(\"ice cream\");\nconsole log(desserts); // [\"cake\", \"cookies\", \"pie\", \"ice cream\"];\n```\npop() Method: This method is used to remove the last element from an array and will return that removed element If the array is empty, then the return value will be undefined ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts pop();\nconsole log(desserts); // [\"cake\", \"cookies\"];\n```\nshift() Method: This method is used to remove the first element from an array and return that removed element If the array is empty, then the return value will be undefined ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts shift();\nconsole log(desserts); // [\"cookies\", \"pie\"];\n```\nunshift() Method: This method is used to add elements to the beginning of the array and will return the new length ```js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\ndesserts unshift(\"ice cream\");\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 16,
    "total_chunks": 65
  },
  {
    "id": "d9eef27517139459ee96160a6f0e88d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "This method is used to remove the first element from an array and return that removed element If the array is empty, then the return value will be undefined ```js const desserts = [\"cake\", \"cookies\", \"pie\"]; desserts shift(); console log(desserts); // [\"cookies\", \"pie\"]; ``` unshift() Method: This method is used to add elements to the beginning of the array and will return the new length ```js const desserts = [\"cake\", \"cookies\", \"pie\"]; desserts unshift(\"ice cream\"); consolelog(desserts); // [\"ice cream\", \"cake\", \"cookies\", \"pie\"];\n```\nindexOf() Method: This method is useful for finding the first index of a specific element within an array If the element cannot be found, then it will return -1 ```js\nconst fruits = [\"apple\", \"banana\", \"orange\", \"banana\"];\nconst index = fruits indexOf(\"banana\");\nconsole log(index); // 1\nconsole log(fruits indexOf(\"not found\")); // -1\n```\nsplice() Method: This method is used to add or remove elements from any position in an array The return value for the splice() method will be an array of the items removed from the array If nothing was removed, then an empty array will be returned This method will mutate the original array, modifying it in place rather than creating a new array The first argument specifies the index at which to begin modifying the array The second argument are the number of elements you wish to remove The following arguments are the elements you wish to add ```js\nconst colors = [\"red\", \"green\", \"blue\"];\ncolors splice(1, 0, \"yellow\", \"purple\");\nconsole log(colors); // [\"red\", \"yellow\", \"purple\", \"green\", \"blue\"]\n```\nincludes() Method: This method is used to check if an array contains a specific value This method returns true if the array contains the specified element, and false otherwise ```js\nconst programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"];\nconsole log(programmingLanguages includes(\"Python\")); // true\nconsole log(programmingLanguages includes(\"Perl\")); // false\n```\nconcat() Method: This method creates a new array by merging two or more arrays ```js\nconst programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"];\nconst newList = programmingLanguages concat(\"Perl\");\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 17,
    "total_chunks": 65
  },
  {
    "id": "0d06dc9066873c32c88756a223395763",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"blue\"] ``` includes() Method: This method is used to check if an array contains a specific value This method returns true if the array contains the specified element, and false otherwise ```js const programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"]; console log(programmingLanguages includes(\"Python\")); // true console log(programmingLanguages includes(\"Perl\")); // false ``` concat() Method: This method creates a new array by merging two or more arrays ```js const programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"]; const newList = programmingLanguages concat(\"Perl\"); consolelog(newList); // [\"JavaScript\", \"Python\", \"C++\", \"Perl\"]\n```\nslice() Method: This method returns a shallow copy of a portion of the array, starting from a specified index or the entire array A shallow copy will copy the reference to the array instead of duplicating it ```js\nconst programmingLanguages = [\"JavaScript\", \"Python\", \"C++\"];\nconst newList = programmingLanguages slice(1);\nconsole log(newList); // [\"Python\", \"C++\"]\n```\nSpread Syntax: The spread syntax is used to create shallow copies of an array ```js\nconst originalArray = [1, 2, 3];\nconst shallowCopiedArray = [ originalArray];\nshallowCopiedArray push(4);\nconsole log(originalArray); // [1, 2, 3]\nconsole log(shallowCopiedArray); // [1, 2, 3, 4]\n```\nsplit() Method: This method divides a string into an array of substrings and specifies where each split should happen based on a given separator If no separator is provided, the method returns an array containing the original string as a single element ```js\nconst str = \"hello\";\nconst charArray = str split(\"\");\nconsole log(charArray); // [\"h\", \"e\", \"l\", \"l\", \"o\"]\n```\nreverse() Method: This method reverses an array in place js\nconst desserts = [\"cake\", \"cookies\", \"pie\"];\nconsole log(desserts reverse()); // [\"pie\", \"cookies\", \"cake\"]\njoin() Method: This method concatenates all the elements of an array into a single string, with each element separated by a specified separator If no separator is provided, or an empty string (\"\") is used, the elements will be joined without any separator",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 18,
    "total_chunks": 65
  },
  {
    "id": "e9e9ddaabb0df935f67e0051870551a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "split(\"\"); console log(charArray); // [\"h\", \"e\", \"l\", \"l\", \"o\"] ``` reverse() Method: This method reverses an array in place js const desserts = [\"cake\", \"cookies\", \"pie\"]; console log(desserts reverse()); // [\"pie\", \"cookies\", \"cake\"] join() Method: This method concatenates all the elements of an array into a single string, with each element separated by a specified separator If no separator is provided, or an empty string (\"\") is used, the elements will be joined without any separator```js\nconst reversedArray = [\"o\", \"l\", \"l\", \"e\", \"h\"];\nconst reversedString = reversedArray join(\"\");\nconsole log(reversedString); // \"olleh\"\n```\nObject Basics\nDefinition: An object is a data structure that is made up of properties A property consists of a key and a value To access data from an object you can use either dot notation or bracket notation ```js\nconst person = {\nname: \"Alice\",\nage: 30,\ncity: \"New York\"\n};\nconsole log(person name);  // Alice\nconsole log(person[\"name\"]); // Alice\n```\nTo set a property of an existing object you can use either dot notation or bracket notation together with the assignment operator ```js\nconst person = {\nname: \"Alice\",\nage: 30\n};\nperson job = \"Engineer\"\nperson[\"hobby\"] = \"Knitting\"\nconsole log(person);  // {name: 'Alice', age: 30, job: 'Engineer', hobby: 'Knitting'}\n```\nRemoving Properties From an Object\ndelete Operator: This operator is used to remove a property from an object ```js\nconst person = {\nname: \"Alice\",\nage: 30,\njob: \"Engineer\"\n};\ndelete person job;\nconsole log(person job); // undefined\n```\nChecking if an Object has a Property\nhasOwnProperty() Method: This method returns a boolean indicating whether the object has the specified property as its own property ```js\nconst person = {\nname: \"Alice\",\nage: 30\n};\nconsole log(person hasOwnProperty(\"name\")); // true\nconsole log(person hasOwnProperty(\"job\")); // false\n```\nin Operator: This operator will return true if the property exists in the object ```js\nconst person = {\nname: \"Bob\",\nage: 25\n};\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 19,
    "total_chunks": 65
  },
  {
    "id": "b697698fa1cc9e6ae0f446100e25944c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "job); // undefined ``` Checking if an Object has a Property hasOwnProperty() Method: This method returns a boolean indicating whether the object has the specified property as its own property ```js const person = { name: \"Alice\", age: 30 }; console log(person hasOwnProperty(\"name\")); // true console log(person hasOwnProperty(\"job\")); // false ``` in Operator: This operator will return true if the property exists in the object ```js const person = { name: \"Bob\", age: 25 }; consolelog(\"name\" in person);  // true\n```\nAccessing Properties From Nested Objects\nAccessing Data: Accessing properties from nested objects involves using the dot notation or bracket notation, much like accessing properties from simple objects However, you'll need to chain these accessors to drill down into the nested structure ```js\nconst person = {\nname: \"Alice\",\nage: 30,\ncontact: {\nemail: \"alice@example com\",\nphone: {\nhome: \"123-456-7890\",\nwork: \"098-765-4321\"\n}\n}\n};\nconsole log(person contact phone work); // \"098-765-4321\"\n```\nPrimitive and Non Primitive Data Types\nPrimitive Data Types: These data types include numbers, strings, booleans, null, undefined, and symbols These types are called \"primitive\" because they represent single values and are not objects Primitive values are immutable, which means once they are created, their value cannot be changed Non Primitive Data Types: In JavaScript, these are objects, which include regular objects, arrays, and functions Unlike primitives, non-primitive types can hold multiple values as properties or elements Object Methods\nDefinition: Object methods are functions that are associated with an object They are defined as properties of an object and can access and manipulate the object's data The this keyword inside the method refers to the object itself, enabling access to its properties ```js\nconst person = {\nname: \"Bob\",\nage: 30,\nsayHello: function() {\nreturn \"Hello, my name is \" + this name;\n}\n};\nconsole log(person sayHello()); // \"Hello, my name is Bob\"\n```\nObject Constructor\nDefinition: In JavaScript, a constructor is a special type of function used to create and initialize objects It is invoked with the new keyword and can initialize properties and methods on the newly created object The Object() constructor creates a new empty object js\nnew Object()\nWorking with the Optional Chaining Operator (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 20,
    "total_chunks": 65
  },
  {
    "id": "1b5d21f1281cbed2ed525e3db74dcfde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return \"Hello, my name is \" + this name; } }; console log(person sayHello()); // \"Hello, my name is Bob\" ``` Object Constructor Definition: In JavaScript, a constructor is a special type of function used to create and initialize objects It is invoked with the new keyword and can initialize properties and methods on the newly created object The Object() constructor creates a new empty object js new Object() Working with the Optional Chaining Operator ()\nDefinition: This operator lets you safely access object properties or call methods without worrying whether they exist ```js\nconst user = {\nname: \"John\",\nprofile: {\nemail: \"john@example com\",\naddress: {\nstreet: \"123 Main St\",\ncity: \"Somewhere\"\n}\n}\n};\nconsole log(user profile address street); // \"123 Main St\"\nconsole log(user profile phone number);   // undefined\n```\nObject Destructuring\nDefinition: Object destructuring allows you to extract values from objects and assign them to variables in a more concise and readable way ```js\nconst person = { name: \"Alice\", age: 30, city: \"New York\" };\nconst { name, age } = person;\nconsole log(name); // Alice\nconsole log(age);  // 30\n```\nWorking with JSON\nDefinition: JSON stands for JavaScript Object Notation It is a lightweight, text-based data format that is commonly used to exchange data between a server and a web application js\n{\n\"name\": \"Alice\",\n\"age\": 30,\n\"isStudent\": false,\n\"list of courses\": [\"Mathematics\", \"Physics\", \"Computer Science\"]\n}\nJSON stringify(): This method is used to convert a JavaScript object into a JSON string This is useful when you want to store or transmit data in a format that can be easily shared or transferred between systems ```js\nconst user = {\nname: \"John\",\nage: 30,\nisAdmin: true\n};\nconst jsonString = JSON stringify(user);\nconsole log(jsonString); // '{\"name\":\"John\",\"age\":30,\"isAdmin\":true}'\n```\nJSON parse(): This method converts a JSON string back into a JavaScript object This is useful when you retrieve JSON data from a web server or localStorage and you need to manipulate the data in your application ```js\nconst jsonString = '{\"name\":\"John\",\"age\":30,\"isAdmin\":true}';\nconst userObject = JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 21,
    "total_chunks": 65
  },
  {
    "id": "95c2f4e02f401a3d2e0a607876e89ea3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "can be easily shared or transferred between systems ```js const user = { name: \"John\", age: 30, isAdmin: true }; const jsonString = JSON stringify(user); console log(jsonString); // '{\"name\":\"John\",\"age\":30,\"isAdmin\":true}' ``` JSON parse(): This method converts a JSON string back into a JavaScript object This is useful when you retrieve JSON data from a web server or localStorage and you need to manipulate the data in your application ```js const jsonString = '{\"name\":\"John\",\"age\":30,\"isAdmin\":true}'; const userObject = JSONparse(jsonString);\n// result: { name: 'John', age: 30, isAdmin: true }\nconsole log(userObject);\n```\nWorking with Loops\nfor Loop: This type of loop is used to repeat a block of code a certain number of times This loop is broken up into three parts: the initialization statement, the condition, and the increment/decrement statement The initialization statement is executed before the loop starts It is typically used to initialize a counter variable The condition is evaluated before each iteration of the loop An iteration is a single pass through the loop If the condition is true, the code block inside the loop is executed If the condition is false, the loop stops and you move on to the next block of code The increment/decrement statement is executed after each iteration of the loop It is typically used to increment or decrement the counter variable js\nfor (let i = 0; i < 5; i++) {\nconsole log(i);\n}\nfor of Loop: This type of loop is used when you need to loop over values from an iterable Examples of iterables are arrays and strings ```js\nconst numbers = [1, 2, 3, 4, 5];\nfor (const num of numbers) {\nconsole log(num);\n}\n```\nfor in Loop: This type of loop is best used when you need to loop over the properties of an object This loop will iterate over all enumerable properties of an object, including inherited properties and non-numeric properties ```js\nconst fruit = {\nname: 'apple',\ncolor: 'red',\nprice: 0 99\n};\nfor (const prop in fruit) {\nconsole log(fruit[prop]);\n}\n```\nwhile Loop: This type of loop will run a block of code as long as the condition is true ```js\nlet i = 5;\nwhile (i > 0) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 22,
    "total_chunks": 65
  },
  {
    "id": "fa64f4cca4ab6a555e3edbf098bb262d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "over the properties of an object This loop will iterate over all enumerable properties of an object, including inherited properties and non-numeric properties ```js const fruit = { name: 'apple', color: 'red', price: 0 99 }; for (const prop in fruit) { console log(fruit[prop]); } ``` while Loop: This type of loop will run a block of code as long as the condition is true ```js let i = 5; while (i > 0) { consolelog(i);\ni--;\n}\n```\ndo while Loop: This type of loop will execute the block of code at least once before checking the condition ```js\nlet userInput;\ndo {\nuserInput = prompt(\"Please enter a number between 1 and 10\");\n} while (Number(userInput) < 1 || Number(userInput) > 10);\nalert(\"You entered a valid number \");\n```\nbreak and continue Statements\nDefinition: A break statement is used to exit a loop early, while a continue statement is used to skip the current iteration of a loop and move to the next one ```js\n// Example of break statement\nfor (let i = 0; i < 10; i++) {\nif (i === 5) {\nbreak;\n}\nconsole log(i);\n}\n// Output: 0, 1, 2, 3, and 4\n// Example of continue statement\nfor (let i = 0; i < 10; i++) {\nif (i === 5) {\ncontinue;\n}\nconsole log(i);\n}\n// Output: 0, 1, 2, 3, 4, 6, 7, 8, and 9\n```\nString Constructor and toString() Method\nDefinition: A string object is used to represent a sequence of characters String objects are created using the String constructor function, which wraps the primitive value in an object ```js\nconst greetingObject = new String(\"Hello, world \");\nconsole log(typeof greetingObject); // \"object\"\n```\ntoString() Method: This method converts a value to its string representation It is a method you can use for numbers, booleans, arrays, and objects ```js\nconst num = 10;\nconsole log(num toString()); // \"10\"\nconst arr = [1, 2, 3];\nconsole log(arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 23,
    "total_chunks": 65
  },
  {
    "id": "3824ef0d563ee8d345cc3e0ed47099c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "sequence of characters String objects are created using the String constructor function, which wraps the primitive value in an object ```js const greetingObject = new String(\"Hello, world \"); console log(typeof greetingObject); // \"object\" ``` toString() Method: This method converts a value to its string representation It is a method you can use for numbers, booleans, arrays, and objects ```js const num = 10; console log(num toString()); // \"10\" const arr = [1, 2, 3]; console log(arrtoString()); // \"1,2,3\"\n```\nThis method accepts an optional radix which is a number from 2 to 36 This radix represents the base, such as base 2 for binary or base 8 for octal If the radix is not specified, it defaults to base 10, which is decimal js\nconst num = 10;\nconsole log(num toString(2)); // \"1010\"(binary)\nNumber Constructor\nDefinition: The Number constructor is used to create a number object The number object contains a few helpful properties and methods like the isNaN and toFixed method Most of the time, you will be using the Number constructor to convert other data types to the number data type ```js\nconst myNum = new Number(\"34\");\nconsole log(typeof myNum); // \"object\"\nconst num = Number('100');\nconsole log(num); // 100\nconsole log(typeof num); // number\n```\nBest Practices for Naming Variables and Functions\ncamelCasing: By convention, JavaScript developers will use camel casing for naming variables and functions Camel casing is where the first word is all lowercase and the following words start with a capital letter Ex isLoading Naming Booleans: For boolean variables, it's a common practice to use prefixes such as \"is\", \"has\", or \"can\" js\nlet isLoading = true;\nlet hasPermission = false;\nlet canEdit = true;\nNaming Functions: For functions, the name should clearly indicate what the function does For functions that return a boolean (often called predicates), you can use the same \"is\", \"has\", or \"can\" prefixes When you have functions that retrieve data, it is common to start with the word \"get\" When you have functions that set data, it is common to start with the word \"set\" For event handler functions, you might prefix with \"handle\" or suffix with \"Handler\" ```js\nfunction getUserData() { /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 24,
    "total_chunks": 65
  },
  {
    "id": "d36e9c930c79437c797bd26c88602281",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should clearly indicate what the function does For functions that return a boolean (often called predicates), you can use the same \"is\", \"has\", or \"can\" prefixes When you have functions that retrieve data, it is common to start with the word \"get\" When you have functions that set data, it is common to start with the word \"set\" For event handler functions, you might prefix with \"handle\" or suffix with \"Handler\" ```js function getUserData() { // }\nfunction isValidEmail(email) { / / }\nfunction getProductDetails(productId) { / / }\nfunction setUserPreferences(preferences) { / / }\nfunction handleClick() { / / }\n```\nNaming Variables Inside Loops: When naming iterator variables in loops, it's common to use single letters like i, j, or k js\nfor (let i = 0; i < array length; i++) { /* */ }\nWorking with Sparse Arrays\nDefinition: It is possible to have arrays with empty slots Empty slots are defined as slots with nothing in them This is different than array slots with the value of undefined These types of arrays are known as sparse arrays js\nconst sparseArray = [1, , , 4];\nconsole log(sparseArray length); // 4\nLinters and Formatters\nLinters: A linter is a static code analysis tool that flags programming errors, bugs, stylistic errors, and suspicious constructs An example of a common linter would be ESLint Formatters: Formatters are tools that automatically format your code to adhere to a specific style guide An example of a common formatter is Prettier Memory Management\nDefinition: Memory management is the process of controlling the memory, allocating it when needed and freeing it up when it's no longer needed JavaScript uses automatic memory management This means that JavaScript (more specifically, the JavaScript engine in your web browser) takes care of memory allocation and deallocation for you You don't have to explicitly free up memory in your code This automatic process is often called \"garbage collection \"\nClosures\nDefinition: A closure is a function that has access to variables in its outer (enclosing) lexical scope, even after the outer function has returned ```js\nfunction outerFunction(x) {\nlet y = 10;\nfunction innerFunction() {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 25,
    "total_chunks": 65
  },
  {
    "id": "d8f7d35b63491f5138148c2fbddd7cfe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "JavaScript (more specifically, the JavaScript engine in your web browser) takes care of memory allocation and deallocation for you You don't have to explicitly free up memory in your code This automatic process is often called \"garbage collection \" Closures Definition: A closure is a function that has access to variables in its outer (enclosing) lexical scope, even after the outer function has returned ```js function outerFunction(x) { let y = 10; function innerFunction() { consolelog(x + y);\n}\nreturn innerFunction;\n}\nlet closure = outerFunction(5);\nclosure(); // 15\n```\nvar Keyword and Hoisting\nDefinition: var was the original way to declare variables before 2015 But there were some issues that came with var in terms of scope, redeclaration and more So that is why modern JavaScript programming uses let and const instead Redeclaring Variables with var: If you try to redeclare a variable using let, then you would get a SyntaxError But with var, you are allowed to redeclare a variable ```js\n// Uncaught SyntaxError: Identifier 'num' has already been declared\nlet num = 19;\nlet num = 18;\nvar myNum = 5;\nvar myNum = 10; // This is allowed and doesn't throw an error\nconsole log(myNum) // 10\n```\nvar and Scope: Variables declared with var inside a block (like an if statement or a for loop) are still accessible outside that block js\nif (true) {\nvar num = 5;\n}\nconsole log(num); // 5\nHoisting: This is JavaScript's default behavior of moving declarations to the top of their respective scopes during the compilation phase before the code is executed When you declare a variable using the var keyword, JavaScript hoists the declaration to the top of its scope js\nconsole log(num); // undefined\nvar num = 5;\nconsole log(num); // 5\nWhen you declare a function using the function declaration syntax, both the function name and the function body are hoisted This means you can call a function before you've declared it in your code ```js\nsayHello(); // \"Hello, World \"\nfunction sayHello() {\nconsole log(\"Hello, World \");\n}\n```\nVariable declarations made with let or const are hoisted, but they are not initialized, and you can't access them before the actual declaration in your code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 26,
    "total_chunks": 65
  },
  {
    "id": "d3c77e460ba7d874223e55dcaeeeb119",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5 When you declare a function using the function declaration syntax, both the function name and the function body are hoisted This means you can call a function before you've declared it in your code ```js sayHello(); // \"Hello, World \" function sayHello() { console log(\"Hello, World \"); } ``` Variable declarations made with let or const are hoisted, but they are not initialized, and you can't access them before the actual declaration in your codeThis behavior is often referred to as the \"temporal dead zone\" js\nconsole log(num); // Throws a ReferenceError\nlet num = 10;\nWorking with Imports, Exports and Modules\nModule: This is a self-contained unit of code that encapsulates related functions, classes, or variables To create a module, you write your JavaScript code in a separate file Exports: Any variables, functions, or classes you want to make available to other parts of your application need to be explicitly exported using the export keyword There are two types of export: named export and default export Imports: To use the exported items in another part of your application, you need to import them using the import keyword The types can be named import, default import, and namespace import ```js\n// Within a file called math js, we export the following functions:\n// Named export\nexport function add(num1, num2) {\nreturn num1 + num2;\n}\n// Default export\nexport default function subtract(num1, num2) {\nreturn num1 - num2;\n}\n// Within another file, we can import the functions from math js // Named import - This line imports the add function // The name of the function must exactly match the one exported from math js import { add } from ' /math js';\n// Default import - This line imports the subtract function // The name of the function can be anything import subtractFunc from ' /math js';\n// Namespace import - This line imports everything from the file import * as Math from ' /math js';\nconsole log(add(5, 3)); // 8\nconsole log(subtractFunc(5, 3)); // 2\nconsole log(Math add(5, 3)); // 8\nconsole log(Math subtract(5, 3)); // 2\n```\nCallback Functions and the forEach Method\nDefinition: In JavaScript, a callback function is a function that is passed as an argument to another function and is executed after the main function has finished its execution",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 27,
    "total_chunks": 65
  },
  {
    "id": "62466a94a2be273b8abf23715cc35ec6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Namespace import - This line imports everything from the file import * as Math from ' /math js'; console log(add(5, 3)); // 8 console log(subtractFunc(5, 3)); // 2 console log(Math add(5, 3)); // 8 console log(Math subtract(5, 3)); // 2 ``` Callback Functions and the forEach Method Definition: In JavaScript, a callback function is a function that is passed as an argument to another function and is executed after the main function has finished its executionforEach() Method: This method is used to iterate over each element in an array and perform an operation on each element The callback function in forEach can take up to three arguments: the current element, the index of the current element, and the array that forEach was called upon ```js\nconst numbers = [1, 2, 3, 4, 5];\n// Result: 2 4 6 8 10\nnumbers forEach((number) => {\nconsole log(number * 2);\n});\n```\nHigher Order Functions\nDefinition: A higher-order function takes one or more functions for the arguments and returns a function or value for the result ```js\nfunction operateOnArray(arr, operation) {\nconst result = [];\nfor (let i = 0; i < arr length; i++) {\nresult push(operation(arr[i]));\n}\nreturn result;\n}\nfunction double(x) {\nreturn x * 2;\n}\nconst numbers = [1, 2, 3, 4, 5];\nconst doubledNumbers = operateOnArray(numbers, double);\nconsole log(doubledNumbers); // [2, 4, 6, 8, 10]\n```\nmap() Method: This method is used to create a new array by applying a given function to each element of the original array The callback function can accept up to three arguments: the current element, the index of the current element, and the array that map was called upon ```js\nconst numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers map((num) => num * 2);\nconsole log(numbers); // [1, 2, 3, 4, 5]\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 28,
    "total_chunks": 65
  },
  {
    "id": "0f5612e50e1c0fa677540c2525b22f2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "map() Method: This method is used to create a new array by applying a given function to each element of the original array The callback function can accept up to three arguments: the current element, the index of the current element, and the array that map was called upon ```js const numbers = [1, 2, 3, 4, 5]; const doubled = numbers map((num) => num * 2); console log(numbers); // [1, 2, 3, 4, 5] consolelog(doubled); // [2, 4, 6, 8, 10]\n```\nfilter() Method: This method is used to create a new array with elements that pass a specified test, making it useful for selectively extracting items based on criteria Just like the map method, the callback function for the filter method accepts the same three arguments: the current element being processed, the index, and the array ```js\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst evenNumbers = numbers filter((num) => num % 2 === 0);\nconsole log(evenNumbers); // [2, 4, 6, 8, 10]\n```\nreduce() Method: This method is used to process an array and condense it into a single value This single value can be a number, a string, an object, or even another array The reduce() method works by applying a function to each element in the array, in order, passing the result of each calculation on to the next This function is often called the reducer function The reducer function takes two main parameters: an accumulator and the current value The accumulator is where you store the running result of your operations, and the current value is the array element being processed ```js\nconst numbers = [1, 2, 3, 4, 5];\nconst sum = numbers reduce(\n(accumulator, currentValue) => accumulator + currentValue,\n0\n);\nconsole log(sum); // 15\n```\nMethod Chaining\nDefinition: Method chaining is a programming technique that allows you to call multiple methods on the same object in a single line of code This technique can make your code more readable and concise, especially when performing a series of operations on the same object ```js\nconst result = \"  Hello, World \" trim()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 29,
    "total_chunks": 65
  },
  {
    "id": "fb0c37f45852df0eddce436a400c47a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "4, 5]; const sum = numbers reduce( (accumulator, currentValue) => accumulator + currentValue, 0 ); console log(sum); // 15 ``` Method Chaining Definition: Method chaining is a programming technique that allows you to call multiple methods on the same object in a single line of code This technique can make your code more readable and concise, especially when performing a series of operations on the same object ```js const result = \" Hello, World \" trim()toLowerCase() replace(\"world\", \"JavaScript\");\nconsole log(result); // \"hello, JavaScript \"\n```\nWorking with the sort Method\nDefinition: The sort method is used to sort the elements of an array and return a reference to the sorted array No copy is made in this case because the elements are sorted in place ```js\nconst fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits sort();\nconsole log(fruits); // [\"Apple\", \"Banana\", \"Mango\", \"Orange\"]\n```\nIf you need to sort numbers, then you will need to pass in a compare function The sort method converts the elements to strings and then compares their sequences of UTF-16 code units values UTF-16 code units are the numeric values that represent the characters in the string Examples of UTF-16 code units are the numbers 65, 66, and 67 which represent the characters \"A\", \"B\", and \"C\" respectively So the number 200 appears before the number 3 in an array, because the string \"200\" comes before the string \"3\" when comparing their UTF-16 code units ```js\nconst numbers = [414, 200, 5, 10, 3];\nnumbers sort((a, b) => a - b);\nconsole log(numbers); // [3, 5, 10, 200, 414]\n```\nThe parameters a and b are the two elements being compared The compare function should return a negative value if a should come before b, a positive value if a should come after b, and zero if a and b are equal Working with the every and some Methods\nevery() Method: This method tests whether all elements in an array pass a test implemented by a provided function The every() method returns true if the provided function returns true for all elements in the array If any element fails the test, the method immediately returns false and stops checking the remaining elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 30,
    "total_chunks": 65
  },
  {
    "id": "41af474c2ffea7ff86670b36bc7d7390",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "positive value if a should come after b, and zero if a and b are equal Working with the every and some Methods every() Method: This method tests whether all elements in an array pass a test implemented by a provided function The every() method returns true if the provided function returns true for all elements in the array If any element fails the test, the method immediately returns false and stops checking the remaining elements```js\nconst numbers = [2, 4, 6, 8, 10];\nconst hasAllEvenNumbers = numbers every((num) => num % 2 === 0);\nconsole log(hasAllEvenNumbers); // true\n```\nsome() Method: This method checks if at least one element passes the test The some() method returns true as soon as it finds an element that passes the test If no elements pass the test, it returns false ```js\nconst numbers = [1, 3, 5, 7, 8, 9];\nconst hasSomeEvenNumbers = numbers some((num) => num % 2 === 0);\nconsole log(hasSomeEvenNumbers); // true\n```\nWorking with the DOM and Web APIs\nAPI: An API (Application Programming Interface) is a set of rules and protocols that allow software applications to communicate with each other and exchange data efficiently Web API: Web APIs are specifically designed for web applications These types of APIs are often divided into two main categories: browser APIs and third-party APIs Browser APIs: These APIs expose data from the browser As a web developer, you can access and manipulate this data using JavaScript Third-Party APIs: These are not built into the browser by default You have to retrieve their code in some way Usually, they will have detailed documentation explaining how to use their services An example is the Google Maps API, which you can use to display interactive maps on your website DOM: The DOM stands for Document Object Model It's a programming interface that lets you interact with HTML documents With the DOM, you can add, modify, or delete elements on a webpage The root of the DOM tree is the html element It's the top-level container for all the content of an HTML document All other nodes are descendants of this root node Then, below the root node, we find other nodes in the hierarchy A parent node is an element that contains other elements A child node is an element that is contained within another element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 31,
    "total_chunks": 65
  },
  {
    "id": "5607d801dc9d77fe38cb9adb0836ed82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "DOM, you can add, modify, or delete elements on a webpage The root of the DOM tree is the html element It's the top-level container for all the content of an HTML document All other nodes are descendants of this root node Then, below the root node, we find other nodes in the hierarchy A parent node is an element that contains other elements A child node is an element that is contained within another elementnavigator Interface: This provides information about the browser environment, such as the user agent string, the platform, and the version of the browser A user agent string is a text string that identifies the browser and operating system being used window Interface: This represents the browser window that contains the DOM document It provides methods and properties for interacting with the browser window, such as resizing the window, opening new windows, and navigating to different URLs Working with the querySelector(), querySelectorAll() and getElementById() Methods\ngetElementById() Method: This method is used to get an object that represents the HTML element with the specified id Remember that IDs must be unique in every HTML document, so this method will only return one Element object ```html\n```\njs\nconst container = document getElementById(\"container\");\nquerySelector() Method: This method is used to get the first element in the HTML document that matches the CSS selector passed as an argument ```html\n```\njs\nconst section = document querySelector(\" section\");\nquerySelectorAll() Method: You can use this method to get a list of all the DOM elements that match a specific CSS selector ```html\nSugar\nMilk\nEggs\n```\njs\nconst ingredients = document querySelectorAll('ul ingredients li');\nWorking with the innerText(), innerHTML(), createElement() and textContent() Methods\ninnerHTML Property: This is a property of the Element that is used to set or update parts of the HTML markup ```html\n```\njs\nconst container = document getElementById(\"container\");\ncontainer innerHTML = '<ul><li>Cheese</li><li>Tomato</li></ul>';\ncreateElement Method: This is used to create an HTML element js\nconst img = document createElement(\"img\");\ninnerText: This represents the visible text content of the HTML element and its descendants ```html\nHello, World I'm learning JavaScript\n```\njs\nconst container = document getElementById(\"container\");\nconsole log(container innerText);\ntextContent: This returns the plain text content of an element, including all the text within its descendants",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 32,
    "total_chunks": 65
  },
  {
    "id": "dfe94be5bf74263b39709fa1f32a15da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "markup ```html ``` js const container = document getElementById(\"container\"); container innerHTML = '<ul><li>Cheese</li><li>Tomato</li></ul>'; createElement Method: This is used to create an HTML element js const img = document createElement(\"img\"); innerText: This represents the visible text content of the HTML element and its descendants ```html Hello, World I'm learning JavaScript ``` js const container = document getElementById(\"container\"); console log(container innerText); textContent: This returns the plain text content of an element, including all the text within its descendants```html\nHello, World I'm learning JavaScript\n```\njs\nconst container = document getElementById(\"container\");\nconsole log(container textContent);\nWorking with the appendChild() and removeChild() Methods\nappendChild() Method: This method is used to add a node to the end of the list of children of a specified parent node ```html\nCake\nPie\n```\n```js\nconst dessertsList = document getElementById(\"desserts\");\nconst listItem = document createElement(\"li\");\nlistItem textContent = \"Cookies\";\ndessertsList appendChild(listItem);\n```\nremoveChild() Method: This method is used to remove a node from the DOM ```html\nExample sub heading\nfirst paragraph\nsecond paragraph\n```\n```js\nconst sectionEl = document getElementById(\"example-section\");\nconst lastParagraph = document querySelector(\"#example-section p:last-of-type\");\nsectionEl removeChild(lastParagraph);\n```\nWork with the setAttribute Method\nDefinition: This method is used to set the attribute for a given element If the attribute already exists, then the value is updated Otherwise, a new attribute is added with a value ```html\nI am a paragraph\n```\njs\nconst para = document getElementById(\"para\");\npara setAttribute(\"class\", \"my-class\");\nEvent Object\nDefinition: The Event object is a payload that triggers when a user interacts with your web page in some way These interactions can be anything from clicking on a button or focusing an input to shaking their mobile device All Event objects will have the type property This property reveals the type of event that triggered the payload, such as keydown or click These values will correspond to the same values you might pass to addEventListener(), where you can capture and utilize the Event object addEventListener() and removeEventListener() Methods\naddEventListener Method: This method is used to listen for events",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 33,
    "total_chunks": 65
  },
  {
    "id": "7ace7f0e2f57c329438e16e6bfec8f3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be anything from clicking on a button or focusing an input to shaking their mobile device All Event objects will have the type property This property reveals the type of event that triggered the payload, such as keydown or click These values will correspond to the same values you might pass to addEventListener(), where you can capture and utilize the Event object addEventListener() and removeEventListener() Methods addEventListener Method: This method is used to listen for eventsIt takes two arguments: the event you want to listen for and a function that will be called when the event occurs Some common examples of events would be click events, input events, and change events ```js\nconst btn = document getElementById(\"btn\");\nbtn addEventListener(\"click\", () => alert(\"You clicked the button\"));\n```\nremoveEventListener Method: This method is used to remove an event listener that was previously added to an element using the addEventListener method This is useful when you want to stop listening for a particular event on an element ```js\nconst bodyEl = document querySelector(\"body\");\nconst para = document getElementById(\"para\");\nconst btn = document getElementById(\"btn\");\nlet isBgColorGrey = true;\nfunction toggleBgColor() {\nbodyEl style backgroundColor = isBgColorGrey \"blue\" : \"grey\";\nisBgColorGrey = isBgColorGrey;\n}\nbtn addEventListener(\"click\", toggleBgColor);\npara addEventListener(\"mouseover\", () => {\nbtn removeEventListener(\"click\", toggleBgColor);\n});\n```\nInline Event Handlers: Inline event handlers are special attributes on an HTML element that are used to execute JavaScript code when an event occurs In modern JavaScript, inline event handlers are not considered best practice It is preferred to use the addEventListener method instead html\n<button onclick=\"alert('Hello World ')\">Show alert</button>\nDOMContentLoaded\nDefinition: The DOMContentLoaded event is fired when everything in the HTML document has been loaded and parsed If you have external stylesheets or images, the DOMContentLoaded event will not wait for those to be loaded It will only wait for the HTML to be loaded Working with style and classList\nElement style Property: This property is a read-only property that represents the inline style of an element You can use this property to get or set the style of an element js\nconst paraEl = document getElementById(\"para\");\nparaEl style color = \"red\";\nElement classList Property: This property is a read-only property that can be used to add, remove, or toggle classes on an element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 34,
    "total_chunks": 65
  },
  {
    "id": "b6c9a6f302e5e7242114263d94e94682",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "wait for the HTML to be loaded Working with style and classList Element style Property: This property is a read-only property that represents the inline style of an element You can use this property to get or set the style of an element js const paraEl = document getElementById(\"para\"); paraEl style color = \"red\"; Element classList Property: This property is a read-only property that can be used to add, remove, or toggle classes on an element```js\n// Example adding a class\nconst paraEl = document getElementById(\"para\");\nparaEl classList add(\"highlight\");\n// Example removing a class\nparaEl classList remove(\"blue-background\");\n// Example toggling a class\nconst menu = document getElementById(\"menu\");\nconst toggleBtn = document getElementById(\"toggle-btn\");\ntoggleBtn addEventListener(\"click\", () => menu classList toggle(\"show\"));\n```\nWorking with the setTimeout and setInterval Methods\nsetTimeout() Method: This method lets you delay an action for a specified time js\nsetTimeout(() => {\nconsole log('This runs after 3 seconds');\n}, 3000);\nsetInterval() Method: This method keeps running a piece of code repeatedly at a set interval Since setInterval() keeps executing the provided function at the specified interval, you might want to stop it For this, you have to use the clearInterval() method ```js\nsetInterval(() => {\nconsole log('This runs every 2 seconds');\n}, 2000);\n// Example using clearInterval\nconst intervalID = setInterval(() => {\nconsole log('This will stop after 5 seconds');\n}, 1000);\nsetTimeout(() => {\nclearInterval(intervalID);\n}, 5000);\n```\nThe requestAnimationFrame() Method\nDefinition: This method allows you to schedule the next step of your animation before the next screen repaint, resulting in a fluid and visually appealing experience The next screen repaint refers to the moment when the browser refreshes the visual display of the web page This happens multiple times per second, typically around 60 times (or 60 frames per second) on most displays js\nfunction animate() {\n// Update the animation // for example, move an element, change a style, and more update();\n// Request the next frame\nrequestAnimationFrame(animate);\n}\nWeb Animations API\nDefinition: The Web Animations API lets you create and control animations directly inside JavaScript ```js\nconst square = document querySelector('#square');\nconst animation = square",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 35,
    "total_chunks": 65
  },
  {
    "id": "765b78ff8c647b80f03d97fcf94584fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the web page This happens multiple times per second, typically around 60 times (or 60 frames per second) on most displays js function animate() { // Update the animation // for example, move an element, change a style, and more update(); // Request the next frame requestAnimationFrame(animate); } Web Animations API Definition: The Web Animations API lets you create and control animations directly inside JavaScript ```js const square = document querySelector('#square'); const animation = squareanimate(\n[{ transform: 'translateX(0px)' }, { transform: 'translateX(100px)' }],\n{\nduration: 2000, // makes animation lasts 2 seconds\niterations: Infinity, // loops indefinitely\ndirection: 'alternate', // moves back and forth\neasing: 'ease-in-out', // smooth easing\n}\n);\n```\nThe Canvas API\nDefinition: The Canvas API is a powerful tool that lets you manipulate graphics right inside your JavaScript file To work with the Canvas API, you first need to provide a canvas element in HTML This element acts as a drawing surface you can manipulate with the instance methods and properties of the interfaces in the Canvas API This API has interfaces like HTMLCanvasElement, CanvasRenderingContext2D, CanvasGradient, CanvasPattern, and TextMetrics which contain methods and properties you can use to create graphics in your JavaScript file ```html\n```\n```js\nconst canvas = document getElementById('my-canvas');\n// Access the drawing context of the canvas // \"2d\" allows you to draw in two dimensions\nconst ctx = canvas getContext('2d');\n// Set the background color\nctx fillStyle = 'crimson';\n// Draw a rectangle\nctx fillRect(1, 1, 150, 100);\n```\nOpening and Closing Dialogs and Modals with JavaScript\nModal and Dialog Definitions: Dialogs let you display important information or actions to users With the HTML built-in dialog element, you can easily create these dialogs (both modal and non-modal dialogs) in your web apps A modal dialog is a type of dialog that forces the user to interact with it before they can access the rest of the application or webpage In contrast, a non-modal dialog allows the user to continue interacting with other parts of the page or application even when the dialog is open It doesn't prevent access to the rest of the content showModal() Method: This method is used to open a modal ```html\nThis is a modal dialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 36,
    "total_chunks": 65
  },
  {
    "id": "208ad8f5dcbafc3639f10b1c3c7ac9cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "dialog is a type of dialog that forces the user to interact with it before they can access the rest of the application or webpage In contrast, a non-modal dialog allows the user to continue interacting with other parts of the page or application even when the dialog is open It doesn't prevent access to the rest of the content showModal() Method: This method is used to open a modal ```html This is a modal dialogOpen Modal Dialog\n```\n```js\nconst dialog = document getElementById('my-modal');\nconst openButton = document getElementById('open-modal');\nopenButton addEventListener('click', () => {\ndialog showModal();\n});\n```\nclose() Method: This method is used to close the modal ```html\nThis is a modal dialog Close Modal\nOpen Modal Dialog\n```\n```js\nconst dialog = document getElementById('my-modal');\nconst openButton = document getElementById('open-modal');\nconst closeButton = document getElementById('close-modal');\nopenButton addEventListener('click', () => {\ndialog show();\n});\ncloseButton addEventListener('click', () => {\ndialog close();\n});\n```\nThe Change Event\nDefinition: The change event is a special event which is fired when the user modifies the value of certain input elements Examples would include when a checkbox or a radio button is ticked Or when the user makes a selection from something like a date picker or dropdown menu ```html\nChoose a programming language:\n---Select One---\nJavaScript\nPython\nC++\n```\n```js\nconst selectEl = document querySelector(\" language\");\nconst result = document querySelector(\" result\");\nselectEl addEventListener(\"change\", (e) => {\nresult textContent = You enjoy programming in ${e target value} ;\n});\n```\nEvent Bubbling\nDefinition: Event bubbling, or propagation, refers to how an event \"bubbles up\" to parent objects when triggered Event Delegation\nDefinition: Event delegation is the process of listening to events that have bubbled up to a parent, rather than handling them directly on the element that triggered them JavaScript and Accessibility\nCommon ARIA Accessibility Attributes\naria-expanded attribute: Used to convey the state of a toggle (or disclosure) feature to screen reader users aria-haspopup attribute: This state is used to indicate that an interactive element will trigger a pop-up element when activated You can only use the aria-haspopup attribute when the pop-up has one of the following roles: menu, listbox, tree, grid, or dialog",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 37,
    "total_chunks": 65
  },
  {
    "id": "d8b717feb1981ee28375e077592dc492",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "rather than handling them directly on the element that triggered them JavaScript and Accessibility Common ARIA Accessibility Attributes aria-expanded attribute: Used to convey the state of a toggle (or disclosure) feature to screen reader users aria-haspopup attribute: This state is used to indicate that an interactive element will trigger a pop-up element when activated You can only use the aria-haspopup attribute when the pop-up has one of the following roles: menu, listbox, tree, grid, or dialogThe value of aria-haspopup must be either one of these roles or true, which is the same as menu aria-checked attribute: This attribute is used to indicate whether an element is in the checked state It is most commonly used when creating custom checkboxes, radio buttons, switches, and listboxes aria-disabled attribute: This state is used to indicate that an element is disabled only to people using assistive technologies, such as screen readers aria-selected attribute: This state is used to indicate that an element is selected You can use this state on custom controls like a tabbed interface, a listbox, or a grid aria-controls attribute: Used to associate an element with another element that it controls This helps people using assistive technologies understand the relationship between the elements hidden attribute: Hides inactive panels from both visual and assistive technology users Working with Live Regions and Dynamic Content\naria-live attribute: Makes part of a webpage a live region, meaning any updates inside that area will be announced by a screen reader so users don't miss important changes polite value: Most live regions use this value This value means that the update is not urgent, so the screen reader can wait until it finishes any current announcement or the user completes their current action before announcing the update Here is an example of a live region that is dynamically updated by JavaScript:\n```html\n```\njs\nconst statusEl = document getElementById(\"status\");\nstatusEl textContent = \"Your file has been successfully uploaded \";\ncontenteditable attribute: Turns the element into a live editor, allowing users to update its content as if it were a text field When there is no visible label or heading for a contenteditable region, add an accessible name using the aria-label attribute to help screen reader users understand the purpose of the editable area ```html\nEditable content goes here\n```\nfocus and blur Events\nblur event: Fires when an element loses focus js\nelement addEventListener(\"blur\", () => {\n// Handle when user leaves the element\n});\nfocus event: Fires when an element receives focus js\nelement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 38,
    "total_chunks": 65
  },
  {
    "id": "135bcb11385aaf56ac8034e51fced6c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "text field When there is no visible label or heading for a contenteditable region, add an accessible name using the aria-label attribute to help screen reader users understand the purpose of the editable area ```html Editable content goes here ``` focus and blur Events blur event: Fires when an element loses focus js element addEventListener(\"blur\", () => { // Handle when user leaves the element }); focus event: Fires when an element receives focus js elementaddEventListener(\"focus\", () => {\n// Handle when user enters the element\n});\nCommon Types of Error Messages\nSyntaxError: These errors happen when you write something incorrectly in your code, like missing a parenthesis, or a bracket Think of it like a grammar mistake in a sentence js\nconst arr = [\"Beau\", \"Quincy\" \"Tom\"]\nReferenceError: There are several types of Reference Errors, triggered in different ways The first type of reference error would be not defined variables Another example of a ReferenceError is trying to access a variable, declared with let or const, before it has been defined js\nconsole log(num);\nconst num = 50;\nTypeError: These errors occur when you try to perform an operation on the wrong type ```js\nconst developerObj = {\nname: \"Jessica\",\ncountry: \"USA\",\nisEmployed: true\n};\ndeveloperObj map()\n```\nRangeError: These errors happen when your code tries to use a value that's outside the range of what JavaScript can handle js\nconst arr = [];\narr length = -1;\nThe throw Statement\nDefinition: The throw statement in JavaScript is used to throw a user-defined exception An exception in programming, is when an unexpected event happens and disrupts the normal flow of the program js\nfunction validateNumber(input) {\nif (typeof input == \"number\") {\nthrow new TypeError(\"Expected a number, but received \" + typeof input);\n}\nreturn input * 2;\n}\ntry catch finally\nDefinition: The try block is used to wrap code that might throw an error It acts as a safe space to try something that could fail The catch block captures and handles errors that occur in the try block You can use the error object inside catch to inspect what went wrong The finally block runs after the try and catch blocks, regardless of whether an error occurred It's commonly used for cleanup tasks, such as closing files or releasing resources ```js\nfunction processInput(input) {\nif (typeof input == \"string\") {\nthrow new TypeError(\"Input must be a string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 39,
    "total_chunks": 65
  },
  {
    "id": "33a6c28b4dc6f732ba7b733f3864be0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "something that could fail The catch block captures and handles errors that occur in the try block You can use the error object inside catch to inspect what went wrong The finally block runs after the try and catch blocks, regardless of whether an error occurred It's commonly used for cleanup tasks, such as closing files or releasing resources ```js function processInput(input) { if (typeof input == \"string\") { throw new TypeError(\"Input must be a string\");\n}\nreturn input toUpperCase();\n}\ntry {\nconsole log(\"Starting to process input \");\nconst result = processInput(9);\nconsole log(\"Processed result:\", result);\n} catch (error) {\nconsole error(\"Error occurred:\", error message);\n}\n```\nDebugging Techniques\ndebugger Statement: This statement lets you pause your code at a specific line to investigate what's going on in the program ```js\nlet firstNumber = 5;\nlet secondNumber = 10;\ndebugger; // Code execution pauses here\nlet sum = firstNumber + secondNumber;\nconsole log(sum);\n```\nBreakpoints: Breakpoints let you pause the execution of your code at a specific line of your choice After the pause, you can inspect variables, evaluate expressions, and examine the call stack Watchers: Watch expressions lets you monitor the values of variables or expressions as the code runs even if they are out of the current scope Profiling: Profiling helps you identify performance bottlenecks by letting you capture screenshots and record CPU usage, function calls, and execution time console dir(): This method is used to display an interactive list of the properties of a specified JavaScript object It outputs a hierarchical listing that can be expanded to see all nested properties js\nconsole dir(document);\nconsole table(): This method displays tabular data as a table in the console It takes one mandatory argument, which must be an array or an object, and one optional argument to specify which properties (columns) to display Regular Expressions and Common Methods\nDefinition: Regular Expressions, or Regex, are used to create a \"pattern\", which you can then use to check against a string, extract text, and more js\nconst regex = /freeCodeCamp/;\ntest() Method: This method accepts a string, which is the string to test for matches against the regular expression This method will return a boolean if the string matches the regex js\nconst regex = /freeCodeCamp/;\nconst test = regex test(\"e\");\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 40,
    "total_chunks": 65
  },
  {
    "id": "267956a5aabf6157e93b5b152424e907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Expressions and Common Methods Definition: Regular Expressions, or Regex, are used to create a \"pattern\", which you can then use to check against a string, extract text, and more js const regex = /freeCodeCamp/; test() Method: This method accepts a string, which is the string to test for matches against the regular expression This method will return a boolean if the string matches the regex js const regex = /freeCodeCamp/; const test = regex test(\"e\"); consolelog(test); // false\nmatch() Method: This method accepts a regular expression, although you can also pass a string which will be constructed into a regular expression The match method returns the match array for the string js\nconst regex = /freeCodeCamp/;\nconst match = \"freeCodeCamp\" match(regex);\nconsole log(match); // [\"freeCodeCamp\"]\nreplace() Method: This method accepts two arguments: the regular expression to match (or a string), and the string to replace the match with (or a function to run against each match) js\nconst regex = /Jessica/;\nconst str = \"Jessica is rly kewl\";\nconst replaced = str replace(regex, \"freeCodeCamp\");\nconsole log(replaced); // \"freeCodeCamp is rly kewl\"\nreplaceAll Method: This method is used to replace all occurrences of a specified pattern with a new string This method will throw an error if you give it a regular expression without the global modifier js\nconst text = \"I hate JavaScript I hate programming \";\nconst newText = text replaceAll(\"hate\", \"love\");\nconsole log(newText);  // \"I love JavaScript I love programming \"\nmatchAll Method: This method is used to retrieve all matches of a given regular expression in a string, including capturing groups, and returns them as an iterator An iterator is an object that allows you to go through (or \"iterate over\") a collection of items ```js\nconst str = \"JavaScript, Python, JavaScript, Swift, JavaScript\";\nconst regex = /JavaScript/g;\nconst iterator = str matchAll(regex);\nfor (let match of iterator) {\nconsole log(match[0]); // \"JavaScript\" for each match\n}\n```\nRegular Expression Modifiers\nDefinition: Modifiers, often referred to as \"flags\", modify the behavior of a regular expression i Flag: This flag makes a regex ignore case js\nconst regex = /freeCodeCamp/i;\nconsole log(regex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 41,
    "total_chunks": 65
  },
  {
    "id": "cbe87e171849ab5110e97b3aa2f9fc24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to go through (or \"iterate over\") a collection of items ```js const str = \"JavaScript, Python, JavaScript, Swift, JavaScript\"; const regex = /JavaScript/g; const iterator = str matchAll(regex); for (let match of iterator) { console log(match[0]); // \"JavaScript\" for each match } ``` Regular Expression Modifiers Definition: Modifiers, often referred to as \"flags\", modify the behavior of a regular expression i Flag: This flag makes a regex ignore case js const regex = /freeCodeCamp/i; console log(regextest(\"freecodecamp\")); // true\nconsole log(regex test(\"FREECODECAMP\")); // true\ng Flag: This flag, or global modifier, allows your regular expression to match a pattern more than once js\nconst regex = /freeCodeCamp/gi;\nconsole log(regex test(\"freeCodeCamp\")); // true\nconsole log(regex test(\"freeCodeCamp is great\")); // false\nAnchor Definition: The ^ anchor, at the beginning of the regular expression, says \"match the start of the string\" The $ anchor, at the end of the regular expression, says \"match the end of the string\" js\nconst start = /^freeCodeCamp/i;\nconst end = /freeCodeCamp$/i;\nconsole log(start test(\"freecodecamp\")); // true\nconsole log(end test(\"freecodecamp\")); // true\nm Flag: Anchors look for the beginning and end of the entire string But you can make a regex handle multiple lines with the m flag, or the multi-line modifier flag, or the multi-line modifier ``js\nconst start = /^freecodecamp/im;\nconst end = /freecodecamp$/im;\nconst str =I love\nfreecodecamp\nit's my favorite\n`;\nconsole log(start test(str)); // true\nconsole log(end test(str)); // true\n```\nd Flag: This flag expands the information you get in a match object js\nconst regex = /freecodecamp/di;\nconst string = \"we love freecodecamp isn't freecodecamp great \";\nconsole log(string match(regex));\nu Flag: This expands the functionality of a regular expression to allow it to match special unicode characters The u flag gives you access to special classes like the Extended_Pictographic to match most emoji There is also a v flag, which further expands the functionality of the unicode matching",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 42,
    "total_chunks": 65
  },
  {
    "id": "4c20a9701c1c1cfc4c83a0a7d02f7c0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "expands the information you get in a match object js const regex = /freecodecamp/di; const string = \"we love freecodecamp isn't freecodecamp great \"; console log(string match(regex)); u Flag: This expands the functionality of a regular expression to allow it to match special unicode characters The u flag gives you access to special classes like the Extended_Pictographic to match most emoji There is also a v flag, which further expands the functionality of the unicode matchingy Flag: The sticky modifier behaves very similarly to the global modifier, but with a few exceptions The biggest one is that a global regular expression will start from lastIndex and search the entire remainder of the string for another match, but a sticky regular expression will return null and reset the lastIndex to 0 if there is not immediately a match at the previous lastIndex s Flag: The single-line modifier allows a wildcard character, represented by a in regex, to match linebreaks - effectively treating the string as a single line of text Character Classes\nWildcard : Character classes are a special syntax you can use to match sets or subsets of characters The first character class you should learn is the wild card class The wild card is represented by a period, or dot, and matches ANY single character EXCEPT line breaks To allow the wildcard class to match line breaks, remember that you would need to use the s flag js\nconst regex = /a /;\n\\d: This will match all digits (0-9) in a string js\nconst regex = /\\d/;\n\\w: This is used to match any word character (a-z0-9_) in a string A word character is defined as any letter, from a to z, or a number from 0 to 9, or the underscore character js\nconst regex = /\\w/;\n\\s: The white-space class \\s, represented by a backslash followed by an s This character class will match any white space, including new lines, spaces, tabs, and special unicode space characters Negating Special Character Classes: To negate one of these character classes, instead of using a lowercase letter after the backslash, you can use the uppercase equivalent The following example does not match a numerical character Instead, it matches any single character that is NOT a numerical character js\nconst regex = /\\D/;\nCustom Character Classes: You can create custom character classes by placing the character you wish match inside a set of square brackets",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 43,
    "total_chunks": 65
  },
  {
    "id": "0f876c9080f3481b48321ccca5fa535f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "space characters Negating Special Character Classes: To negate one of these character classes, instead of using a lowercase letter after the backslash, you can use the uppercase equivalent The following example does not match a numerical character Instead, it matches any single character that is NOT a numerical character js const regex = /\\D/; Custom Character Classes: You can create custom character classes by placing the character you wish match inside a set of square bracketsjs\nconst regex = /[abcdf]/;\nLookahead and Lookbehind Assertions\nDefinition: Lookahead and lookbehind assertions allow you to match specific patterns based on the presence or lack of surrounding patterns Positive Lookahead Assertion: This assertion will match a pattern when the pattern is followed by another pattern To construct a positive lookahead, you need to start with the pattern you want to match Then, use parentheses to wrap the pattern you want to use as your condition After the opening parenthesis, use = to define that pattern as a positive lookahead js\nconst regex = /free( =code)/i;\nNegative Lookahead Assertion: This is a type of condition used in regular expressions to check that a certain pattern does not occur ahead in the string js\nconst regex = /free( code)/i;\nPositive Lookbehind Assertion: This assertion will match a pattern only if it is preceded by another specific pattern, without including the preceding pattern in the match js\nconst regex = /( <=free)code/i;\nNegative Lookbehind Assertion: This assertion ensures that a pattern is not preceded by another specific pattern It matches only if the specified pattern is not immediately preceded by the given sequence, without including the preceding sequence in the match js\nconst regex = /( < free)code/i;\nRegex Quantifiers\nDefinition: Quantifiers in regular expressions specify how many times a pattern (or part of a pattern) should appear They help control the number of occurrences of characters or groups in a match The following example is used to match the previous character exactly four times js\nconst regex = /^\\d{4}$/;\n* : Matches 0 or more occurrences of the preceding element +: Matches 1 or more occurrences of the preceding element : Matches 0 or 1 occurrence of the preceding element {n}: Matches exactly n occurrences of the preceding element {n,}: Matches n or more occurrences of the preceding element {n,m}: Matches between n and m occurrences of the preceding element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 44,
    "total_chunks": 65
  },
  {
    "id": "0a8e471c08eecd7ff392dac8ab65c5d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is used to match the previous character exactly four times js const regex = /^\\d{4}$/; * : Matches 0 or more occurrences of the preceding element +: Matches 1 or more occurrences of the preceding element : Matches 0 or 1 occurrence of the preceding element {n}: Matches exactly n occurrences of the preceding element {n,}: Matches n or more occurrences of the preceding element {n,m}: Matches between n and m occurrences of the preceding elementCapturing Groups and Backreferences\nCapturing Groups: A capturing group allows you to \"capture\" a portion of the matched string to use however you might need Capturing groups are defined by parentheses containing the pattern to capture, with no leading characters like a lookahead js\nconst regex = /free(code)camp/i;\nBackreferences: A backreference in regular expressions refers to a way to reuse a part of the pattern that was matched earlier in the same expression It allows you to refer to a captured group (a part of the pattern in parentheses) by its number For example, $1 refers to the first captured group js\nconst regex = /free(co+de)camp/i;\nconsole log(\"freecoooooooodecamp\" replace(regex, \"paid$1world\"));\nValidating Forms with JavaScript\nConstraint Validation API: Certain HTML elements, such as the textarea and input elements, expose a constraint validation API This API allows you to assert that the user's provided value for that element passes any HTML-level validation you have written, such as minimum length or pattern matching checkValidity() method: This method returns true if the element matches all HTML validation (based on its attributes), and false if it fails ```js\nconst input = document querySelector(\"input\");\ninput addEventListener(\"input\", (e) => {\nif ( e target checkValidity()) {\ne target setCustomValidity(\"You must use a com email \")\n}\n})\n```\nreportValidity() Method: This method tells the browser that the input is invalid ```js\nconst input = document querySelector(\"input\");\ninput addEventListener(\"input\", (e) => {\nif ( e target checkValidity()) {\ne target reportValidity();\n}\n})\n```\nvalidity Property: This property is used to get or set the validity state of form controls (like <input>, <select>, etc ) and provides information about whether the user input meets the constraints defined for that element (e g , required fields, pattern constraints, maximum length, etc ) ```js\nconst input = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 45,
    "total_chunks": 65
  },
  {
    "id": "48b5b12b9a9d8472bd7c1973bee6c318",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "invalid ```js const input = document querySelector(\"input\"); input addEventListener(\"input\", (e) => { if ( e target checkValidity()) { e target reportValidity(); } }) ``` validity Property: This property is used to get or set the validity state of form controls (like <input>, <select>, etc ) and provides information about whether the user input meets the constraints defined for that element (e g , required fields, pattern constraints, maximum length, etc ) ```js const input = documentquerySelector(\"input\");\ninput addEventListener(\"input\", (e) => {\nconsole log(e target validity);\n})\n```\npatternMismatch Property: This will be true if the value doesn't match the specified regular expression pattern preventDefault() Method\nDefinition: Every event that triggers in the DOM has some sort of default behavior The click event on a checkbox toggles the state of that checkbox, by default Pressing the space bar on a focused button activates the button The preventDefault() method on these Event objects stops that behavior from happening js\nbutton addEventListener('click', (event) => {\n// Prevent the default button click behavior\nevent preventDefault();\nalert('Button click prevented ');\n});\nSubmitting Forms\nDefinition: There are three ways a form can be submitted The first is when the user clicks a button in the form which has the type attribute set to submit The second is when the user presses the Enter key on any editable input field in the form The third is through a JavaScript call to the requestSubmit() or submit() methods of the form element action Attribute: The action attribute should contain either a URL or a relative path for the current domain This value determines where the form attempts to send data - if you do not set an action attribute, the form will send data to the current page's URL ```html\nSubmit\n```\nmethod Attribute: This attribute accepts a standard HTTP method, such as GET or POST, and uses that method when making the request to the action URL When a method is not set, the form will default to a GET request The data in the form will be URL encoded as name=value pairs and appended to the action URL as query parameters ```html\nSubmit\n```\nenctype Attribute: The form element accepts an enctype attribute, which represents the encoding type to use for the data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 46,
    "total_chunks": 65
  },
  {
    "id": "a2ef924d929f254d9966ac90dd731aa5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "HTTP method, such as GET or POST, and uses that method when making the request to the action URL When a method is not set, the form will default to a GET request The data in the form will be URL encoded as name=value pairs and appended to the action URL as query parameters ```html Submit ``` enctype Attribute: The form element accepts an enctype attribute, which represents the encoding type to use for the dataThis attribute only accepts three values: application/x-www-form-urlencoded (which is the default, sending the data as a URL-encoded form body), text/plain (which sends the data in plaintext form, in name=value pairs separated by new lines), or multipart/form-data, which is specifically for handling forms with a file upload The date() Object and Common Methods\nDefinition: The date() object is used to create, manipulate, and format dates and times in JavaScript In the following example, the new keyword is used to create a new instance of the Date object, and the Date object is then assigned to the variable now If you were to log the value of now to the console, you would see the current date and time based on the system clock of the computer running the code js\nconst now = new Date();\nDate now() Method: This method is used to get the current date and time Date now() returns the number of milliseconds since January 1, 1970, 00:00:00 UTC This is known as the Unix epoch time Unix epoch time is a common way to represent dates and times in computer systems because it is an integer that can be easily stored and manipulated UTC stands for Universal Time Coordinated, which is the primary time standard by which the world regulates clocks and time getDate() Method: This method is used to get a day of the month based on the current date getDate() will return an integer value between 1 and 31, depending on the day of the month If the date is invalid, it will return NaN (Not a Number) js\nconst now = new Date();\nconst date = now getDate();\nconsole log(date); // 15\ngetMonth() Method: This method is used to get the month The month is zero-based, so January is 0, February is 1, and so on In this example, the output is 2, which corresponds to March If the month is invalid, it will return NaN js\nconst now = new Date();\nconst month = now getMonth();\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 47,
    "total_chunks": 65
  },
  {
    "id": "f16f86a40e61b1c98b74c8164ae4b436",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return NaN (Not a Number) js const now = new Date(); const date = now getDate(); console log(date); // 15 getMonth() Method: This method is used to get the month The month is zero-based, so January is 0, February is 1, and so on In this example, the output is 2, which corresponds to March If the month is invalid, it will return NaN js const now = new Date(); const month = now getMonth(); consolelog(month); // 2\ngetFullYear() Method: This method is used to get the full year If the year is invalid, it will return NaN js\nconst now = new Date();\nconst year = now getFullYear();\nconsole log(year); // 2024\nDifferent Ways to Format Dates\ntoISOString() Method: This method is used to format the date in an extended ISO (ISO 8601) format ISO 8601 is an international standard for representing dates and times The format is YYYY-MM-DDTHH:mm:ss sssZ js\nconst date = new Date();\nconsole log(date toISOString());\ntoLocaleDateString() Method: This method is used to format the date based on the user's locale js\nconst date = new Date();\nconsole log(date toLocaleDateString());  // 11/23/2024\nThe toLocaleDateString() method accepts two optional parameters: locales and options The locales parameter is a string representing the locale to use For example, you can pass in \"en-US\" for English (United States) or \"fr-FR\" for French (France) If you don't pass in a locales parameter, the default locale is used The second optional parameter is the options parameter This parameter is an object that allows you to specify the format of the date string js\nconst date = new Date();\nconst options = {\nweekday: \"long\",\nyear: \"numeric\",\nmonth: \"long\",\nday: \"numeric\",\n};\nconsole log(date toLocaleDateString(\"en-GB\", options)); // Saturday, November 23, 2024\nAudio Constructor and Common Methods\nDefinition: The Audio constructor, like other constructors, is a special function called with the new keyword It returns an HTMLAudioElement, which you can then use to play audio for the user, or append to the DOM for the user to control themselves When you call the constructor, you can optionally pass a URL as the (only) argument This URL should point to the source of the audio file you want to play",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 48,
    "total_chunks": 65
  },
  {
    "id": "55deb7cc09b21177f7998803e9a865fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Constructor and Common Methods Definition: The Audio constructor, like other constructors, is a special function called with the new keyword It returns an HTMLAudioElement, which you can then use to play audio for the user, or append to the DOM for the user to control themselves When you call the constructor, you can optionally pass a URL as the (only) argument This URL should point to the source of the audio file you want to playOr, if you need to change the source dynamically, you can assign the URL to the src property of the returned audio element play() Method: This method is used with the audio or video elements to begin playback for the media ```js\nconst audio = document getElementById('audio');\n// Starts playing the audio\naudio play();\n```\npause() Method: This method is used with the audio or video elements to pause playback for the media js\nfunction pauseAudio() {\nconst audio = document getElementById('myAudio');\naudio pause();  // Pauses the audio playback\n}\naddTextTrack() Method: This method allows you to specify a text track to associate with the media element - which is especially helpful for adding subtitles to a video fastSeek() Method: This method allows you to move the playback position to a specific time within the media Different Audio and Video Formats\nMIME type: A MIME type, standing for Multipurpose Internet Mail Extensions, is a standardized way to programmatically indicate a file type The MIME type can tell an application, such as your browser, how to handle a specific file In the case of audio and video, the MIME type indicates it is a multimedia format that can be embedded in the web page source Element: This is used to specify a file type and source - and can include multiple different types by using multiple source elements When you do this, the browser will determine the best format to use for the user's current environment MP3: This is a type of digital file format used to store music, audio, or sound It's a compressed version of a sound recording that makes the file size smaller, so it's easier to store and share An MP3 file has the MIME type audio/mp3\nMP4: An MP4 is a type of digital file format used to store video and audio It serves as a container that holds both the video (images) and the sound (music or speech) in one file",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 49,
    "total_chunks": 65
  },
  {
    "id": "380dcead2306c81c0ebe08d3f247aebc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of digital file format used to store music, audio, or sound It's a compressed version of a sound recording that makes the file size smaller, so it's easier to store and share An MP3 file has the MIME type audio/mp3 MP4: An MP4 is a type of digital file format used to store video and audio It serves as a container that holds both the video (images) and the sound (music or speech) in one fileAn MP4, can have the MIME type audio/mp4 OR video/mp4, depending on whether it's a video file or audio-only codecs\nDefinition: A codec, short for \"encoder/decoder\", is an algorithm or software that can convert audio and video between analogue and digital formats Codecs can be specified as part of the MIME type The basic syntax to define a codec is to add a semi-colon after the media type, then codecs= and the codec HTMLMediaElement API\nDefinition: The HTMLMediaElement API is used to control the behavior of audio and video elements on your page It extends the base HTMLElement interface, so you have access to the base properties as well as these helpful methods Examples of these methods include play(), fastSeek(), and pause() Media Capture and Streams API\nDefinition: The Media Capture and Streams API, or the MediaStream API, is used to capture audio and video from your device In order to use the API, you need to create the MediaStream object You could do this with the constructor, but it would not be tied to the user's hardware Instead, the mediaDevices property of the global navigator object has a getUserMedia() method for you to use js\nwindow navigator mediaDevices getUserMedia({\naudio: true,\nvideo: {\nwidth: {\nmin: 1280,\nideal: 1920,\nmax: 3840\n},\nheight: {\nmin: 720,\nideal: 1080,\nmax: 2160\n}\n}\n});\nScreen Capture API\nDefinition: The Screen Capture API is used to record a user's screen This API is exposed by calling the getDisplayMedia() method of the mediaDevices object and consuming the returned media stream MediaStream Recording API\nDefinition: The MediaStream Recording API works in tandem with the MediaStreams APIs, allowing you to record a MediaStream (or even an HTMLMediaElement directly)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 50,
    "total_chunks": 65
  },
  {
    "id": "472587206d76fd169211b12f2b2e6d58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "ideal: 1920, max: 3840 }, height: { min: 720, ideal: 1080, max: 2160 } } }); Screen Capture API Definition: The Screen Capture API is used to record a user's screen This API is exposed by calling the getDisplayMedia() method of the mediaDevices object and consuming the returned media stream MediaStream Recording API Definition: The MediaStream Recording API works in tandem with the MediaStreams APIs, allowing you to record a MediaStream (or even an HTMLMediaElement directly)Media Source Extensions API\ntopic: The Media Source Extensions API is what allows you to directly pass a user's webcam feed to a video element with the srcObject property Web Audio API\nDefinition: The Web Audio API which powers everything audible on the web This API includes important objects like an AudioBuffer (representing a Buffer specifically containing audio data) or the AudioContext Sets in JavaScript\nA Set is a built-in option for managing data collection Sets ensure that each value in it appears only once, making it useful for eliminating duplicates from an array or handling collections of distinct values You can create a Set using the Set() constructor:\njs\nconst set = new Set([1, 2, 3, 4, 5]);\nconsole log(set); // Set { 1, 2, 3, 4, 5 }\nSets can be manipulated using these methods:\nadd(): Adds a new element to the Set delete(): Removes an element from the Set has(): Checks if an element exists in the Set clear(): Removes all elements from the Set Weaksets in JavaScript\nWeakSet is a collection of objects that allows you to store weakly held objects Sets vs WeakSets\nUnlike Sets, a WeakSet does not support primitives like numbers or strings A WeakSet only stores objects, and the references to those objects are \"weak,\" meaning that if the object is not being used anywhere else in your code, it is removed automatically to free up memory Maps in JavaScript\nA Map is a built-in object that holds key-value pairs just like an object Maps differ from the standard JavaScript objects with their ability to allow keys of any type, including objects, and functions A Map provides better performance over the standard object when it comes to frequent addition and removals of key-value pairs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 51,
    "total_chunks": 65
  },
  {
    "id": "34a7477f032ee4fe41845467d689aa62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the object is not being used anywhere else in your code, it is removed automatically to free up memory Maps in JavaScript A Map is a built-in object that holds key-value pairs just like an object Maps differ from the standard JavaScript objects with their ability to allow keys of any type, including objects, and functions A Map provides better performance over the standard object when it comes to frequent addition and removals of key-value pairsYou can create a Map using the Map() constructor:\njs\nconst map = new Map([\n['flower', 'rose'],\n['fruit', 'apple'],\n['vegetable', 'carrot']\n]);\nconsole log(map); // Map(3) { 'flower' => 'rose', 'fruit' => 'apple', 'vegetable' => 'carrot' }\nMaps can be manipulated using these methods:\nset(): Adds a new key-value pair to the Map get(): Retrieves the value of a key from the Map delete(): Removes a key-value pair from the Map has(): Checks if a key exists in the Map clear(): Removes all key-value pairs from the Map WeakMaps in JavaScript\nA WeakMap is a collection of key-value pairs just like Map, but with weak references to the keys The keys must be an object and the values can be anything you like Maps vs WeakMaps\nWeakMaps are similar to WeakSets in that they only store objects and the references to those objects are \"weak \"\nPersistent Storage\nDefinition: Persistent storage refers to a way of saving data in a way that it stays available even after the power is turned off or the device is restarted Create, Read, Update, Delete (CRUD)\nCreate: This refers to the process of creating new data For example, in a web app, this could be when a user adds a new post to a blog Read: This is the operation where data is retrieved from a database For instance, when you visit a blog post or view your profile on a website, you're performing a read operation to fetch and display data stored in the database Update: This involves modifying existing data in the database An example would be editing a blog post or updating your profile information Delete: This is the operation that removes data from a database For instance, when you delete a blog post or account, you're performing a delete operation HTTP Methods\nDefinition: HTTP stands for Hypertext Transfer Protocol and it is the foundation for data communication on the web There are HTTP methods which define the actions that can be performed on resources over the web",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 52,
    "total_chunks": 65
  },
  {
    "id": "6d0b0e30ced201407615417bb586ea95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "An example would be editing a blog post or updating your profile information Delete: This is the operation that removes data from a database For instance, when you delete a blog post or account, you're performing a delete operation HTTP Methods Definition: HTTP stands for Hypertext Transfer Protocol and it is the foundation for data communication on the web There are HTTP methods which define the actions that can be performed on resources over the webThe common methods are GET, POST, PUT, PATCH, DELETE GET Method: This is used to fetch data from a server POST Method: This is used to submit data to a server which creates a new resource PUT Method: This is used to update a resource by replacing it entirely PATCH Method: This is used to partially update a resource DELETE Method: This is used to remove records from a database localStorage and sessionStorage Properties\nWeb Storage API: This API provides a mechanism for browsers to store key-value pairs right within the browser, allowing developers to store information that can be used across different page reloads and sessions The two main components for the Web Storage API are the localStorage and sessionStorage properties localStorage Property: localStorage is the part of the Web Storage API that allows data to persist even after the browser window is closed or the page is refreshed This data remains available until it is explicitly removed by the application or the user localStorage setItem() Method: This method is used to store a key-value pair in localStorage js\nlocalStorage setItem('username', 'Jessica');\nlocalStorage getItem() Method: This method is used to retrieve the value of a given key from localStorage ```js\nlocalStorage setItem('username', 'codingRules');\nlet username = localStorage getItem('username');\nconsole log(username); // codingRules\n```\nlocalStorage removeItem() Method: This method is used to remove a specific item from localStorage using its key js\nlocalStorage removeItem('username');\nlocalStorage clear() Method: This method is used to clear all of the stored data in localStorage js\nlocalStorage clear();\nsessionStorage Property: Stores data that lasts only for the current session and is cleared when the browser tab or window is closed sessionStorage setItem() Method: This method is used to store a key-value pair in sessionStorage js\nsessionStorage setItem('cart', '3 items');\nsessionStorage getItem() Method: This method is used to retrieve the value of a given key from sessionStorage ```js\nsessionStorage setItem('cart', '3 items');\nlet cart = sessionStorage getItem('cart');\nconsole log(cart); // '3 items'\n```\nsessionStorage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 53,
    "total_chunks": 65
  },
  {
    "id": "f8bbf9d49b14e6286c860ae7c716db46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "clear(); sessionStorage Property: Stores data that lasts only for the current session and is cleared when the browser tab or window is closed sessionStorage setItem() Method: This method is used to store a key-value pair in sessionStorage js sessionStorage setItem('cart', '3 items'); sessionStorage getItem() Method: This method is used to retrieve the value of a given key from sessionStorage ```js sessionStorage setItem('cart', '3 items'); let cart = sessionStorage getItem('cart'); console log(cart); // '3 items' ``` sessionStorageremoveItem() Method: This method is used to remove a specific item from sessionStorage using its key js\nsessionStorage removeItem('cart');\nsessionStorage clear() Method: This method is used to clear all data stored in sessionStorage js\nsessionStorage clear();\nWorking with Cookies\nDefinition: Cookies, also known as web cookies or browser cookies, are small pieces of data that a server sends to a user's web browser These cookies are stored on the user's device and sent back to the server with subsequent requests Cookies are essential in helping web applications maintain state and remember user information, which is especially important since HTTP is a stateless protocol Session Cookies: These cookies only last for the duration of the user's session on the website Once the user closes the browser or tab, the session cookie is deleted These cookies are typically used for tasks like keeping a user logged in during their visit Secure Cookies: These cookies are only sent over HTTPS, ensuring that they cannot be intercepted by an attacker in transit HttpOnly Cookies: These cookies cannot be accessed or modified by JavaScript running in the browser, making them more secure against cross-site scripting (XSS) attacks Set-Cookie Header: When you visit a website, the server can send a Set-Cookie header in the HTTP response This header tells your browser to save a cookie with specific information For example, it might store a unique ID that helps the site recognize you the next time you visit You can manually set a cookie in JavaScript using document cookie:\njs\ndocument cookie = \"organization=freeCodeCamp; expires=Fri, 31 Dec 2021 23:59:59 GMT; path=/\";\nTo delete a cookie, you can set its expiration date to a time in the past js\ndocument",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 54,
    "total_chunks": 65
  },
  {
    "id": "887b506e9e1fb730acbdd5bc5c8fdfda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in the HTTP response This header tells your browser to save a cookie with specific information For example, it might store a unique ID that helps the site recognize you the next time you visit You can manually set a cookie in JavaScript using document cookie: js document cookie = \"organization=freeCodeCamp; expires=Fri, 31 Dec 2021 23:59:59 GMT; path=/\"; To delete a cookie, you can set its expiration date to a time in the past js documentcookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\nCache API\nDefinition: Caching is the process of storing copies of files in a temporary storage location, so that they can be accessed more quickly The Cache API is used to store network requests and responses, making web applications work more efficiently and even function offline It is part of the broader Service Worker API and is crucial for creating Progressive Web Apps (PWAs) that can work under unreliable or slow network conditions The Cache API is a storage mechanism that stores Request and Response objects When a request is made to a server, the application can store the response and later retrieve it from the cache instead of making a new network request This reduces load times, saves bandwidth, and improves the overall user experience Cache Storage: This is used to store key-value pairs of HTTP requests and their corresponding responses This enables efficient retrieval of previously requested resources, reducing the need to fetch them from the network on subsequent visits and improving performance Cache-Control: Developers can define how long a cached resource should be kept, and if it should be revalidated or served directly from cache Offline Support: By using the Cache API, you can create offline-first web applications For example, a PWA can serve cached assets when the user is disconnected from the network Negative Patterns and Client Side Storage\nExcessive Tracking: This refers to the practice of collecting and storing an overabundance of user data in client-side storage (such as cookies, local storage, or session storage) without clear, informed consent or a legitimate need This often involves tracking user behavior, preferences, and interactions across multiple sites or sessions, which can infringe on user privacy Browser Fingerprinting: A technique used to track and identify individual users based on unique characteristics of their device and browser, rather than relying on cookies or other traditional tracking methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 55,
    "total_chunks": 65
  },
  {
    "id": "02a31d48ebf50765aa1a0d900b241d6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and storing an overabundance of user data in client-side storage (such as cookies, local storage, or session storage) without clear, informed consent or a legitimate need This often involves tracking user behavior, preferences, and interactions across multiple sites or sessions, which can infringe on user privacy Browser Fingerprinting: A technique used to track and identify individual users based on unique characteristics of their device and browser, rather than relying on cookies or other traditional tracking methodsUnlike cookies, which are stored locally on a user's device, fingerprinting involves collecting a range of information that can be used to create a distinctive \"fingerprint\" of a user's browser session Setting Passwords in LocalStorage: This might seem like a more obvious negative pattern, but setting any sensitive data like passwords in local storage posses a security risk Local Storage is not encrypted and can be accessed easily So you should never store any type of sensitive data in there IndexedDB\nDefinition: IndexedDB is used for storing structured data in the browser This is built into modern web browsers, allowing web apps to store and fetch JavaScript objects efficiently Cache/Service Workers\nDefinition: A Service Worker is a script that runs in the background which is separate from your web page It can intercept network requests, access the cache, and make the web app work offline This is a key component of Progressive Web Apps Basics of Working with Classes\nDefinition: Classes in JavaScript are used to define blueprints for creating objects, and encapsulating data Classes include a constructor which is a special method that gets called automatically when a new object is created from the class It is used to initialize the properties of the object The this keyword is used here to refer to the current instance of the class Below the constructor, you can have what are called methods Methods are functions defined inside a class that perform actions or operations on the class's data or state They are used to define behaviors that instances of the class can perform ```js\nclass Dog {\nconstructor(name) {\nthis name = name;\n}\nbark() {\nconsole log(${this name} says woof );\n}\n}\n```\nTo create a new instance of the class, you will use the new keyword followed by the class name:\njs\nconst dog = new Dog(\"Gino\");\nYou can also create classes as class expressions This is where the class is anonymous and assigned to a variable ```js\nconst Dog = class {\nconstructor(name) {\nthis name = name;\n}\nbark() {\nconsole log(${this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 56,
    "total_chunks": 65
  },
  {
    "id": "4469b836f53ee1ff3b0b24af45acd20d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= name; } bark() { console log(${this name} says woof ); } } ``` To create a new instance of the class, you will use the new keyword followed by the class name: js const dog = new Dog(\"Gino\"); You can also create classes as class expressions This is where the class is anonymous and assigned to a variable ```js const Dog = class { constructor(name) { this name = name; } bark() { console log(${thisname} says woof );\n}\n};\n```\nClass Inheritance\nDefinition: In programming, inheritance allows you to define classes that inherit properties and methods from parent classes This promotes code reuse and establishes a hierarchical relationship between classes A parent class is a class that acts like a blueprint for other classes It defines properties and methods that are inherited by other classes A child class is a class that inherits the properties and methods of another class Child classes can also extend the functionality of their parent classes by adding new properties and methods In JavaScript, we use the extends keyword to implement inheritance This keyword indicates that a class is the child class of another class ```js\nclass Vehicle {\nconstructor(brand, year) {\nthis brand = brand;\nthis year = year;\n}\n}\nclass Car extends Vehicle {\nhonk() {\nconsole log(\"Honk Honk \");\n}\n}\n```\nThe super keyword is used to access the parent class's methods, constructors, and fields ```js\nclass Vehicle {\nconstructor(brand, year) {\nthis brand = brand;\nthis year = year;\n}\n}\nclass Car extends Vehicle {\nconstructor(brand, year, numDoors) {\nsuper(brand, year);\nthis numDoors = numDoors;\n}\n}\n```\nWorking with Static Methods and Static Properties\nStatic methods: These methods are often used for utility functions that don't need access to the specific state of an object They are defined within classes to encapsulate related functionality Static methods are also helpful for implementing \"factory\" methods A factory method is a method that you define in addition to the constructor to create objects based on specific criteria ```js\nclass Movie {\nconstructor(title, rating) {\nthis title = title;\nthis rating = rating;\n}\nstatic compareMovies(movieA, movieB) {\nif (movieA rating > movieB rating) {\nconsole log(${movieA title} has a higher rating );\n} else if (movieA rating < movieB rating) {\nconsole log(${movieB title} has a higher rating",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 57,
    "total_chunks": 65
  },
  {
    "id": "db00f0c23449b8a4dfae684240ef3442",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for implementing \"factory\" methods A factory method is a method that you define in addition to the constructor to create objects based on specific criteria ```js class Movie { constructor(title, rating) { this title = title; this rating = rating; } static compareMovies(movieA, movieB) { if (movieA rating > movieB rating) { console log(${movieA title} has a higher rating ); } else if (movieA rating < movieB rating) { console log(${movieB title} has a higher rating);\n} else {\nconsole log(\"These movies have the same rating \");\n}\n}\n}\nlet movieA = new Movie(\"Movie A\", 80);\nlet movieB = new Movie(\"Movie B\", 45);\nMovie compareMovies(movieA, movieB);\n```\nStatic Properties: These properties are used to define values or attributes that are associated with a class itself, rather than with instances of the class Static properties are shared across all instances of the class and can be accessed without creating an instance of the class ```js\nclass Car {\n// Static property\nstatic numberOfWheels = 4;\nconstructor(make, model) {\nthis make = make;\nthis model = model;\n}\n// Instance method\ngetCarInfo() {\nreturn ${this make} ${this model};\n}\n// Static method\nstatic getNumberOfWheels() {\nreturn Car numberOfWheels;\n}\n}\n// Accessing static property directly from the class\nconsole log(Car numberOfWheels);\n```\nRecursion is programming concept that allows you to call a function repeatedly until a base-case is reached Here is an example of a recursive function that calculates the factorial of a number:\njs\nfunction findFactorial(n) {\nif (n === 0) {\nreturn 1;\n}\nreturn n * findFactorial(n - 1);\n}\nIn the above example, the findFactorial function is called recursively until n reaches 0 When n is 0, the base case is reached and the function returns 1 The function then returns the product of n and the result of the recursive call to findFactorial(n - 1) Recursion allows you to handle something with an unknown depth, such as deeply nested objects/arrays, or a file tree A call stack is used to keep track of the function calls in a recursive function Each time a function is called, it is added to the call stack When the base case is reached, the function calls are removed from the stack",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 58,
    "total_chunks": 65
  },
  {
    "id": "c5dd780616783ea9955816d6d8fd44a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "product of n and the result of the recursive call to findFactorial(n - 1) Recursion allows you to handle something with an unknown depth, such as deeply nested objects/arrays, or a file tree A call stack is used to keep track of the function calls in a recursive function Each time a function is called, it is added to the call stack When the base case is reached, the function calls are removed from the stackYou should carefully define the base case as calling it indefinitely can cause your code to crash This is because the recursion keeps piling more and more function calls till the system runs out of memory Recursions find their uses in solving mathematical problems like factorial and Fibonacci, traversing trees and graphs, generating permutations and combinations and much more Pure vs Impure Functions\nA pure function is one that always produces the same output for the same input and doesn't have any side effects Its output depends only on its input, and it doesn't modify any external state Impure functions have side effects, which are changes to the state of the program that are observable outside the function Functional programming\nFunctional Programming is an approach to software development that emphasizes the use of functions to solve problems, focusing on what needs to be done rather than how to do it Functional programming encourages the use of techniques that help avoid side effects, such as using immutable data structures and higher-order functions When used correctly, functional programming principles lead to cleaner and more maintainable code\nCurrying\nCurrying is a functional programming technique that transforms a function with multiple arguments into a sequence of functions, each taking a single argument Here is an example of a regular function vs a curried function:\n```js\n// Regular function\nfunction average(a, b, c) {\nreturn (a + b + c) / 3;\n}\n// Curried function\nfunction curriedAverage(a) {\nreturn function(b) {\nreturn function(c) {\nreturn (a + b + c) / 3;\n};\n};\n}\n// Usage of curried function\nconst avg = curriedAverage(2)(3)(4);\n```\nCurrying can be particularly powerful when working with functions that take many arguments Currying makes your code more flexible and easier to reuse",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 59,
    "total_chunks": 65
  },
  {
    "id": "4be6c6d9443d39f273bf97e0b9ab12d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "curried function: ```js // Regular function function average(a, b, c) { return (a + b + c) / 3; } // Curried function function curriedAverage(a) { return function(b) { return function(c) { return (a + b + c) / 3; }; }; } // Usage of curried function const avg = curriedAverage(2)(3)(4); ``` Currying can be particularly powerful when working with functions that take many arguments Currying makes your code more flexible and easier to reuseYou can use arrow functions to create curried functions more concisely:\njs\nconst curriedAverage = a => b => c => (a + b + c) / 3;\nWhile currying can lead to more flexible and reusable code, it can also make code harder to read if overused Synchronous JavaScript is executed sequentially and waits for the previous operation to finish before moving on to the next one Asynchronous JavaScript allows multiple operations to be executed in the background without blocking the main thread Thread is a sequence of instructions that can be executed independently of the main program flow Callback functions are functions that are passed as arguments to other functions and are executed after the completion of the operation or as a result of an event The JavaScript engine and JavaScript runtime\nThe JavaScript engine is a program that executes JavaScript code in a web browser It works like a converter that takes your code, turns it into instructions that the computer can understand and work accordingly V8 is an example of a JavaScript engine developed by Google The JavaScript runtime is the environment in which JavaScript code is executed It includes the JavaScript engine which processes and executes the code, and additional features like a web browser or Node js The Fetch API\nThe Fetch API allows web apps to make network requests, typically to retrieve or send data to the server It provides a fetch() method that you can use to make these requests You can retrieve text, images, audio, JSON, and other types of data using the Fetch API HTTP methods for Fetch API\nThe Fetch API supports various HTTP methods to interact with the server The most common methods are:\nGET: Used to retrieve data from the server By default, the Fetch API uses the GET method to retrieve data js\nfetch('https://api example com/data')\nTo use the fetched data, it must be converted to JSON format using the json() method:\njs\nfetch('https://api example com/data') then(response => response json()) then(data => console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 60,
    "total_chunks": 65
  },
  {
    "id": "50616b04cc1182b066368fb6bc47a894",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the Fetch API HTTP methods for Fetch API The Fetch API supports various HTTP methods to interact with the server The most common methods are: GET: Used to retrieve data from the server By default, the Fetch API uses the GET method to retrieve data js fetch('https://api example com/data') To use the fetched data, it must be converted to JSON format using the json() method: js fetch('https://api example com/data') then(response => response json()) then(data => consolelog(data))\nIn this code, the response coming from the Fetch API is a promise and the then handler is converting the response to a JSON format POST: Used to send data to the server The POST method is used to create new resources on the server js\nfetch('https://api example com/users', {\nmethod: 'POST',\nheaders: {\n'Content-Type': 'application/json',\n},\nbody: JSON stringify({\nname: 'John Doe',\nemail: 'john@example com'\n})\n})\nIn this example, we're sending a POST request to create a new user We have specified the method as POST, set the appropriate headers, and included a body with the data we want to send The body needs to be a string, so we use JSON stringify() to convert our object to a JSON string PUT: Used to update data on the server The PUT method is used to update existing resources on the server js\nfetch('https://api example com/users/45', {\nmethod: 'PUT',\nheaders: {\n'Content-Type': 'application/json',\n},\nbody: JSON stringify({\nname: 'John Smith',\nemail: 'john@example com'\n})\n})\nIn this example, we are updating the ID 45 that is specified at the end of the URL We have used the PUT method on the code and also specified the data as the body which will be used to update the identified data DELETE: Used to delete data on the server The DELETE method is used to delete resources on the server js\nfetch('https://api example com/users/45', {\nmethod: 'DELETE'\n})\nIn this example, we're sending a DELETE request to remove a user with the ID 45 Promise and promise chaining\nPromises are objects that represent the eventual completion or failure of an asynchronous operation and its resulting value The value of the promise is known only when the async operation is completed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 61,
    "total_chunks": 65
  },
  {
    "id": "4b828ab12da002af97c89e17eec4217d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "delete data on the server The DELETE method is used to delete resources on the server js fetch('https://api example com/users/45', { method: 'DELETE' }) In this example, we're sending a DELETE request to remove a user with the ID 45 Promise and promise chaining Promises are objects that represent the eventual completion or failure of an asynchronous operation and its resulting value The value of the promise is known only when the async operation is completedHere is an example to create a simple promise:\njs\nconst promise = new Promise((resolve, reject) => {\nsetTimeout(() => {\nresolve('Data received successfully');\n}, 2000);\n});\nThe then() method is used in a Promise to specify what should happen when the Promise is fulfilled, while catch() is used to handle any errors that occur Here is an example of using then() and catch() with a Promise:\njs\npromise then(data => {\nconsole log(data);\n}) catch(error => {\nconsole error(error);\n});\nIn the above example, the then() method is used to log the data received from the Promise, while the catch() method is used to log any errors that occur Promise chaining: One of the powerful features of Promises is that we can chain multiple asynchronous operations together Each then() can return a new Promise, allowing you to perform a sequence of asynchronous operations one after the other Here is an example of Promise chaining:\njs\nfetch('https://api example com/data') then(response => response json()) then(data => {\nconsole log(data);\nreturn fetch('https://api example com/other-data');\n}) then(response => response json()) then(otherData => {\nconsole log(otherData);\n}) catch(error => {\nconsole error(error);\n});\nIn the above example, we first fetch data from one URL, then fetch data from another URL based on the first response, and finally log the second data received The catch method would handle any errors that occur during the process This means you don't need to add error handling to each individual step, which can greatly simplify your code Using async/await to handle promises\nAsync/await makes writing & reading asynchronous code easier which is built on top of Promises async: The async keyword is used to define an asynchronous function An async function returns a Promise, which resolves with the value returned by the async function await: The await keyword is used inside an async function to pause the execution of the function until the Promise is resolved It can only be used inside an async function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 62,
    "total_chunks": 65
  },
  {
    "id": "2058684f443ba20a5f768abfa71e2018",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to handle promises Async/await makes writing & reading asynchronous code easier which is built on top of Promises async: The async keyword is used to define an asynchronous function An async function returns a Promise, which resolves with the value returned by the async function await: The await keyword is used inside an async function to pause the execution of the function until the Promise is resolved It can only be used inside an async functionHere is an example of using async/await:\n``js\nasync function delayedGreeting(name) {\nconsole log(\"A Messenger entered the chat \");\nawait new Promise(resolve => setTimeout(resolve, 2000));\nconsole log(Hello, ${name} `);\n}\ndelayedGreeting(\"Alice\");\nconsole log(\"First Printed Message \");\n```\nIn the above example, the delayedGreeting function is an async function that pauses for 2 seconds before printing the greeting message The await keyword is used to pause the function execution until the Promise is resolved One of the biggest advantages of async/await is error handling via try/catch blocks Here's an example:\n```js\nasync function fetchData() {\ntry {\nconst response = await fetch('https://api example com/data');\nconst data = await response json();\nconsole log(data);\n} catch (error) {\nconsole error(error);\n}\n}\nfetchData();\n```\nIn the above example, the try block contains the code that might throw an error, and the catch block handles the error if it occurs This makes error handling more straightforward and readable The async attribute\nThe async attribute tells the browser to download the script file asynchronously while continuing to parse the HTML document Once the script is downloaded, the HTML parsing is paused, the script is executed, and then HTML parsing resumes You should use async for independent scripts where the order of execution doesn't matter\nThe defer attribute\nThe defer attribute also downloads the script asynchronously, but it defers the execution of the script until after the HTML document has been fully parsed The defer scripts maintain the order of execution as they appear in the HTML document It's important to note that both async and defer attributes are ignored for inline scripts and only work for external script files When both async and defer attributes are present, the async attribute takes precedence Geolocation API\nThe Geolocation API provides a way for websites to request the user's location The example below demonstrates the API's  getCurrentPosition() method which is used to get the user's current location js\nnavigator geolocation getCurrentPosition(\n(position) => {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 63,
    "total_chunks": 65
  },
  {
    "id": "6d1f60649d1fad2c717443f87e291509",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "document It's important to note that both async and defer attributes are ignored for inline scripts and only work for external script files When both async and defer attributes are present, the async attribute takes precedence Geolocation API The Geolocation API provides a way for websites to request the user's location The example below demonstrates the API's getCurrentPosition() method which is used to get the user's current location js navigator geolocation getCurrentPosition( (position) => { consolelog(\"Latitude: \" + position coords latitude);\nconsole log(\"Longitude: \" + position coords longitude);\n},\n(error) => {\nconsole log(\"Error: \" + error message);\n}\n);\nIn this code, we're calling getCurrentPosition and passing it a function which will be called when the position is successfully obtained The position object contains a variety of information, but here we have selected latitude and longitude only If there is an issue with getting the position, then the error will be logged to the console It is important to respect the user's privacy and only request their location when necessary --assignment--\nReview the JavaScript topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-javascript\\6723d3cfdd0717d3f1bf27e3.md",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 64,
    "total_chunks": 65
  },
  {
    "id": "a649eb6cba534a70c947c8513581b5f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e24864b0771a4c4c9dc9\ntitle: Testing Review\nchallengeType: 24\ndashedName: review-testing\n--description--\nManual and Automated Testing\nManual Testing: In manual testing, a tester will manually go through each part of the application and test out different features to make sure it works correctly If any bugs are uncovered in the testing process, the tester will report those bugs back to the software team so they can be fixed Automated Testing: In automated testing, you can automate your tests by writing a separate program that checks whether your application behaves as expected Unit Testing\nUnit Testing: In unit testing, you test each function to ensure that everything is working as expected Unit tests can also serve as a form of documentation for your application because they are meant to represent the expected behavior for your code Single Responsibility Principle: The single responsibility principle recommends keeping each function small and responsible for one thing Common JavaScript Testing Frameworks: Some common testing frameworks include Jest, Mocha, and Vitest Jest is a popular testing framework for unit tests Here is an example of unit tests using Jest First, you can create a function that is responsible for returning a newly formatted string:\njavascript\nexport function getFormattedWord(str) {\nif ( str) return '';\nreturn str charAt(0) toUpperCase() + str slice(1);\n}\nIn a separate getFormattedWord test js file, you can write some tests to verify that the function is working as expected The getFormattedWord test js file will look like this:\n```javascript\nimport { getFormattedWord } from \" /getFormattedWord js\";\nimport { test, expect } from \"jest\";\ntest('capitalizes the first letter of a word', () => {\nexpect(getFormattedWord('hello')) toBe('Hello');\n});\n```\nexpect Function: The expect function is used to test a value Matcher: Matcher is a function that checks whether the value behaves as expected In the above example, the matcher is toBe() Jest has a variety of matchers To use Jest, you first need to install the jest package by using npm i jest You will also need to add a script to your package json file like this:\njs\n\"scripts\": {\n\"test\": \"jest\"\n},\nThen, you can run the command npm run test to run your tests",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "55b44fdcdb72181244ef16885942c798",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Matcher is a function that checks whether the value behaves as expected In the above example, the matcher is toBe() Jest has a variety of matchers To use Jest, you first need to install the jest package by using npm i jest You will also need to add a script to your package json file like this: js \"scripts\": { \"test\": \"jest\" }, Then, you can run the command npm run test to run your testsSoftware Development Lifecycle\nDifferent Stages of Software Development Lifecycle:\nPlanning Stage: The development team collects requirements for the proposed work from the stakeholders Design Stage: The software team breaks down the requirements and decides on the best approaches for solutions Implementation Stage: The software team breaks down the requirements into manageable tasks and implements them Testing Stage: This involves manual and automated testing for the new work Sometimes, the team tests out the application throughout the entire development stage to catch and fix any issues that come up Deployment Stage: The team deploys the new changes to a build or testing environment Maintenance Stage: This involves fixing any issues that arise from customers in the production application Different Models of the Software Development Lifecycle:\nWaterfall Model: The Waterfall model is where each phase of the lifecycle needs to be completed before the next phase can begin Agile Model: The Agile model focuses on iterative development by breaking down work into sprints BDD and TDD\nTDD: Test-driven development is a methodology that emphasizes writing tests first Writing tests before building out features provides real-time feedback to developers during the development process BDD: Behavior-driven development is the approach of aligning a series of tests with business goals The test scenarios in BDD should be written in a language that can be understood by both technical and non-technical individuals An example of such syntax is Gherkin BDD Testing Frameworks: Examples of BDD testing frameworks include Cucumber, JBehave, and SpecFlow Assertions in Unit Testing\nAssertion: Assertions are used to test that the code is behaving as expected Assertion Libraries: Chai is a commonly used assertion library Other common JavaScript assertion libraries are should js and expect js Here is an example of an assertion using Chai that checks that the return value from the addThreeAndFour function is equal to the number 7:\njs\nassert equal(addThreeAndFour(), 7);\nBest Practices: Regardless of which assertion library you use, you should write clear assert and failure messages that will help you understand which tests are failing and why",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "58a6d227840695cb16e79bf998a7e120",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Libraries: Chai is a commonly used assertion library Other common JavaScript assertion libraries are should js and expect js Here is an example of an assertion using Chai that checks that the return value from the addThreeAndFour function is equal to the number 7: js assert equal(addThreeAndFour(), 7); Best Practices: Regardless of which assertion library you use, you should write clear assert and failure messages that will help you understand which tests are failing and whyMocking, Faking, and Stubbing\nMocking: Mocking is the process of replacing real data with false data that simulates the behavior of real components For example, you could mock the API response in testing instead of making continuous API calls to fetch the data Stubbing: Stubs are objects that return pre-defined responses or dummy data for an expected behavior in an application For example, you can stub the behavior for a database connection in your tests without having to rely on an actual database connection Faking: Fakes are simplified versions of real components without the complexity or side effects For example, you can fake a database by storing the data in memory instead of interacting with the real database This will allow you to mimic database operations in memory, which will be much faster than dealing with the real database Functional Testing\nFunctional Testing: Functional testing checks if the features and functions of the application work as expected The goal of functional testing is to test the system as a whole against multiple scenarios Non-Functional Testing: Non-functional testing focuses on things like performance and reliability Smoke testing: Smoke testing is a preliminary check on the system for basic or critical issues before beginning more extensive testing End-to-End Testing\nEnd-to-End Testing: End-to-end testing, or E2E, tests real-world scenarios from the user's perspective End-to-end tests help ensure that your application behaves correctly and is predictable for users However, it is time-consuming to set up, design, and maintain End-to-End Testing Frameworks: Playwright is a popular end-to-end testing framework developed by Microsoft Other examples of end-to-end testing tools include Cypress, Selenium, and Puppeteer Here is an example of E2E tests from the freeCodeCamp codebase using Playwright The beforeEach hook will run before each of the tests The tests check that the donor has a supporter link in the menu bar, as well as a special stylized border around their avatar:\n```js\ntest beforeEach(async ({ page }) => {\nexecSync(\"node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "0add852de192fa1cca48d3e983cd392c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is a popular end-to-end testing framework developed by Microsoft Other examples of end-to-end testing tools include Cypress, Selenium, and Puppeteer Here is an example of E2E tests from the freeCodeCamp codebase using Playwright The beforeEach hook will run before each of the tests The tests check that the donor has a supporter link in the menu bar, as well as a special stylized border around their avatar: ```js test beforeEach(async ({ page }) => { execSync(\"node/tools/scripts/seed/seed-demo-user --set-true isDonating\");\nawait page goto(\"/donate\");\n}); test(\"The menu should have a supporters link\", async ({ page }) => {\nconst menuButton = page getByTestId(\"header-menu-button\");\nconst menu = page getByTestId(\"header-menu\");\nawait expect(menuButton) toBeVisible();\nawait menuButton click();\nawait expect(menu) toBeVisible();\nawait expect(page getByRole(\"link\", { name: \"Supporters\" })) toBeVisible();\n});\ntest(\"The Avatar should have a special border for donors\", async ({ page }) => {\nconst container = page locator(\" avatar-container\");\nawait expect(container) toHaveClass(\"avatar-container gold-border\");\n});\n```\nUsability Testing\nUsability Testing: Usability testing is when you have real users interacting with the application to discover if there are any design, user experience, or functionality issues in the app Usability testing focuses on the intuitiveness of the application by users Four Common Types of Usability Testing:\nExplorative: Explorative usability testing involves users interacting with the different features of the application to better understand how they work Comparative: Comparative testing is where you compare your application's user experience with similar applications in the marketplace Assessment: Assessment testing is where you study how intuitive the application is to use Validation: Validation testing is where you identify any major issues that will prevent the user from using the application effectively Usability Testing Tools: Examples of tools for usability testing include Loop11, Maze, Userbrain, UserTesting, and UXTweak Compatibility Testing\nCompatibility Testing: The goal of compatibility testing is to ensure that your application works in different computing environments Different Types of Compatibility Testing:\nBackwards Compatibility: Backwards compatibility refers to when the software is compatible with earlier versions Forwards Compatibility: Forwards compatibility refers to when the software and systems will work with future versions Hardware Compatibility: Hardware compatibility is the software's ability to work properly in different hardware configurations",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a73b07523b1647282577468ec3071d5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Loop11, Maze, Userbrain, UserTesting, and UXTweak Compatibility Testing Compatibility Testing: The goal of compatibility testing is to ensure that your application works in different computing environments Different Types of Compatibility Testing: Backwards Compatibility: Backwards compatibility refers to when the software is compatible with earlier versions Forwards Compatibility: Forwards compatibility refers to when the software and systems will work with future versions Hardware Compatibility: Hardware compatibility is the software's ability to work properly in different hardware configurationsOperating Systems Compatibility: Operating systems compatibility is the software's ability to work on different operating systems, such as macOS, Windows, and Linux distributions like Ubuntu and Fedora Network Compatibility: Network compatibility means the software can work in different network conditions, such as different network speeds, protocols, security settings, etc Browser Compatibility: Browser compatibility means the web application can work consistently across different browsers, such as Google Chrome, Safari, Firefox, etc Mobile Compatibility: It is important to ensure that your software applications work on a variety of Android and iOS devices, including phones and tablets Performance Testing\nPerformance Testing: In performance testing, you test an application's speed, responsiveness, scalability, and stability under different workloads The goal is to resolve any type of performance bottleneck Different Types of Performance Testing:\nLoad Testing: Load testing determines how a system behaves during normal and peak load times Stress Testing: Stress testing is where you test your application in extreme loads and see how well your system responds to the higher load Soak Testing (Endurance Testing): Soak testing or endurance testing is a type of load testing where you test the system with a higher load for an extended period of time Spike Testing: Spike testing is where you dramatically increase and decrease the loads and analyze the system's reactions to the changes Breakpoint Testing (Capacity Testing): Breakpoint testing or capacity testing is where you slowly increment the load over time to the point where the system starts to fail or degrade Security Testing\nSecurity Testing: Security testing helps identify vulnerabilities and weaknesses Security Principles:\nConfidentiality: This protects against the release of sensitive information to other recipients that aren't the intended recipient Integrity: This involves preventing malicious users from modifying user information Authentication: This involves verifying the user's identity to ensure that they are allowed to use that system Authorization: This is the process of determining what actions authenticated users are allowed to perform or which parts of the system they are permitted to access Availability: This ensures that information and services are available to authorized users when they need it",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "386a4074e726961db0f28c0ee32155b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "other recipients that aren't the intended recipient Integrity: This involves preventing malicious users from modifying user information Authentication: This involves verifying the user's identity to ensure that they are allowed to use that system Authorization: This is the process of determining what actions authenticated users are allowed to perform or which parts of the system they are permitted to access Availability: This ensures that information and services are available to authorized users when they need itNon-Repudiation: This ensures that both the sender and recipient have proof of delivery and verification of the sender's identity It protects against the sender denying having sent the information Common Security Threats:\nCross-Site Scripting (XSS): XSS attacks happen when an attacker injects malicious scripts into a web page and then executes them in the context of the victim's browser SQL Injection: SQL injection allows malicious users to inject malicious code into a database Denial-of-Service (DoS) Attack: DoS attack is when malicious users flood a website with a high number of requests or traffic, causing the server to slow down and possibly crash, making the site unavailable to users Categories of Security Testing Tools:\nStatic Application Security Testing: These tools evaluate the source code for an application to identify security vulnerabilities Dynamic Application Security Testing: These tools interface with the application's frontend to uncover potential security weaknesses DAST tools do not have access to the source code Penetration Testing (pentest): Penetration testing is a type of security testing that involves creating simulated cyberattacks on the application to identify any vulnerabilities in the system A/B Testing\nA/B Testing: A/B testing involves comparing two versions of a page or application and studying which version performs better It is also known as bucket or split testing A/B testing allows you to make more data-driven decisions and continually improve the user experience Tools for A/B Testing: Examples of tools to use for A/B testing include GrowthBook and LaunchDarkly Alpha and Beta Testing\nOnce the initial development and software testing are complete, it is important to have the application tested by testers and real users This is where alpha and beta testing come in Alpha Testing: Alpha testing is done by a select group of testers who go through the application to ensure there are no bugs before it is released into the marketplace Alpha testing is part of acceptance testing and utilizes both white and black box testing techniques Beta Testing: Beta testing is where the application is made available to real users Users can interact with the application and provide feedback Beta testing is also a form of user acceptance testing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "50d83004bdcdf47f5cf14c8da732fbe4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "testing is done by a select group of testers who go through the application to ensure there are no bugs before it is released into the marketplace Alpha testing is part of acceptance testing and utilizes both white and black box testing techniques Beta Testing: Beta testing is where the application is made available to real users Users can interact with the application and provide feedback Beta testing is also a form of user acceptance testingAcceptance Testing: Acceptance testing ensures that the software application meets the business requirements and the needs of users before its release Black Box Testing: Black box testing only focuses on the expected behavior of the application White Box Testing: White box testing involves the tester knowing the internal components and performing tests on them Regression Testing\nRegression: Regression refers to situations where new changes unintentionally break existing functionality Regression Testing: Regression testing helps catch regression issues In regression testing, you re-run functional tests against parts of your application to ensure that everything still works as expected Tools for Regression Testing: Tools that you can use to perform regression testing include Puppeteer, Playwright, Selenium, and Cypress Techniques for Regression Testing:\nUnit Regression Testing: This is where you have a list of items that need to be tested each time major changes or fixes are implemented into the app Partial Regression Testing: This involves targeted approaches to ensure that new changes have not broken specific aspects of the application Complete Regression Testing: This runs tests against all the functionalities in the codebase This is the most time-consuming and detailed option Retesting: Retesting is used to check for known issues and ensure that they have been resolved In contrast, regression testing searches for unknown issues that might have occurred through recent changes in the codebase --assignment--\nReview the Testing topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15960,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-testing\\6724e24864b0771a4c4c9dc9.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "8d3019c56746dc3223e0ed1920e6f7b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\613297a923965e0703b64796.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 613297a923965e0703b64796\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nYou may be familiar with the meta element already; it is used to specify information about the page, such as the title, description, keywords, and author.\nGive your page a meta element with an appropriate charset value.\nThe charset attribute specifies the character encoding of the page, and, nowadays, UTF-8 is the only encoding supported by most browsers.\n--hints--\nYou should create a meta element within the head element.\njs\nassert.exists(document.querySelector('head > meta'));\nYou should give the meta tag a charset of UTF-8.\njs\nassert.equal(document.querySelector('head > meta')?.getAttribute('charset')?.toLowerCase(), 'utf-8');\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```\ncss\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1112,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\613297a923965e0703b64796.md",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "66918c9dfb11cc305ee596f25be2a440",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61329b210dac0b08047fd6ab.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 61329b210dac0b08047fd6ab\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nContinuing with the meta elements, a viewport definition tells the browser how to render the page. Including one betters visual accessibility on mobile, and improves SEO (search engine optimization).\nAdd a viewport definition with a content attribute detailing the width and initial-scale of the page.\n--hints--\nYou should create another meta element in the head.\njs\nassert.equal(document.querySelectorAll('head > meta')?.length, 2);\nYou should give the meta a name attribute of viewport.\njs\nassert.equal(document.querySelectorAll('head > meta[name=\"viewport\"]')?.length, 1);\nYou should give the meta a content attribute of width=device-width, initial-scale=1.\njs\nassert.equal(document.querySelectorAll('head > meta[content=\"width=device-width, initial-scale=1.0\"]')?.length || document.querySelectorAll('head > meta[content=\"width=device-width, initial-scale=1\"]')?.length, 1);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```\ncss\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1401,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61329b210dac0b08047fd6ab.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9c78cc0d4a07ea6b0014ce225c2497cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61329d52e5010e08d9b9d66b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 61329d52e5010e08d9b9d66b\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nAnother important meta element for accessibility and SEO is the description definition. The value of the content attribute is used by search engines to provide a description of your page.\nAdd a meta element with the name attribute set to description, and give it a useful content attribute.\n--hints--\nYou should add a new meta element to the head.\njs\nassert.equal(document.querySelectorAll('meta').length, 3);\nYou should give the meta a name attribute of description.\njs\nassert.exists(document.querySelector('meta[name=\"description\"]'));\nYou should give the meta a content attribute.\njs\nassert.notEmpty(document.querySelector('meta[name=\"description\"]')?.content);\nThe content attribute value should not be more than 165 characters. This is Google's maximum description length.\njs\nassert.isAtMost(document.querySelector('meta[name=\"description\"]')?.content?.length, 165);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```\ncss\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1482,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61329d52e5010e08d9b9d66b.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3efb356d739c6da9abb28d308caf4452",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6133acc353338c0bba9cb553.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6133acc353338c0bba9cb553\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nLastly in the head, the title element is useful for screen readers to understand the content of a page. Furthermore, it is an important part of SEO.\nGive your page a title that is descriptive and concise.\n--hints--\nYou should add a title element to the head.\njs\nassert.exists(document.querySelector('head > title'));\nYou should not make the title longer than 60 characters.\njs\nassert.isAtMost(document.querySelector('head > title')?.textContent?.length, 60);\nTry being more descriptive with your title element. Hint: At least 15 characters\njs\nassert.isAtLeast(document.querySelector('head > title')?.textContent?.length, 15);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```\ncss\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1304,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6133acc353338c0bba9cb553.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "48ca19347fb3418887c4ff28216cbfd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6133d11ef548f51f876149e3.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6133d11ef548f51f876149e3\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nNavigation is a core part of accessibility, and screen readers rely on you to provide the structure of your page. This is accomplished with semantic HTML elements.\nAdd a header and a main element to your page.\nThe header element will be used to introduce the page, as well as provide a navigation menu.\nThe main element will contain the core content of your page.\n--hints--\nYou should add a header element to the body.\njs\nassert.exists(document.querySelector('body > header'));\nYou should add a main element to the body.\njs\nassert.exists(document.querySelector('body > main'));\nThe header element should come before the main element.\njs\nassert.exists(document.querySelector('header + main'));\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\n--fcc-editable-region--\n--fcc-editable-region--\n```\ncss\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1417,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6133d11ef548f51f876149e3.md",
      "source_type": "git_repo"
    },
    "token_count": 240,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7c0862a8261300b756e4bc75ee3cc25f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\613e2546d0594208229ada50.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 613e2546d0594208229ada50\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nWithin the header, provide context about the page by nesting one img, h1, and nav element.\nThe img should point to https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg, have an id of logo, and have an alt text of freeCodeCamp.\nThe h1 should contain the text HTML/CSS Quiz.\n--hints--\nYou should add an img element to the header element.\njs\nassert.exists(document.querySelector('header > img'));\nYou should add an h1 element to the header element.\njs\nassert.exists(document.querySelector('header > h1'));\nYou should add a nav element to the header element.\njs\nassert.exists(document.querySelector('header > nav'));\nYou should place the img, h1, and nav elements in that order.\njs\nassert.exists(document.querySelector('img + h1 + nav'));\nYou should give the img element a src attribute of https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg.\njs\nassert.equal(document.querySelector('img')?.src, 'https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg');\nYou should give the img element an id attribute of logo.\njs\nassert.equal(document.querySelector('img')?.id, 'logo');\nYou should give the img element an alt attribute of freeCodeCamp.\njs\nassert.equal(document.querySelector('img')?.alt, 'freeCodeCamp');\nYou should give the h1 element the text HTML/CSS Quiz.\njs\nassert.include(document.querySelector('h1')?.innerText?.toLowerCase(), 'html/css quiz');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\n--fcc-editable-region--\n--fcc-editable-region--\n```\ncss\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2234,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\613e2546d0594208229ada50.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a4ec687bc926ed308c9e8ba24b33353d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6140827cff96e906bd38fc2b.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6140827cff96e906bd38fc2b\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nAs described in the freeCodeCamp Style Guide, the logo should retain an aspect ratio of 35 / 4, and have padding around the text.\nFirst, change the background-color to #0a0a23 so you can see the logo. Then, use the aspect-ratio property to set the desired aspect ratio to 35 / 4. Finally, add a padding of 0.4rem all around.\n--hints--\nYou should give #logo a background-color of #0a0a23.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('#logo')?.backgroundColor, 'rgb(10, 10, 35)');\nYou should use the aspect-ratio property.\njs\nassert.notEmpty(new __helpers.CSSHelp(document).getStyle('#logo')?.aspectRatio);\nYou should not use the height property.\njs\nassert.isEmpty(new __helpers.CSSHelp(document).getStyle('#logo')?.height);\nYou should not change the width property.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('#logo')?.width, 'max(10rem, 18vw)');\nYou should give the img an aspect-ratio of 35 / 4.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('#logo')?.aspectRatio, '35 / 4');\nYou should give the img a padding of 0.4rem.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('#logo')?.padding, '0.4rem');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\n--fcc-editable-region--\nlogo {\nwidth: max(10rem, 18vw);\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2262,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6140827cff96e906bd38fc2b.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "70174e7b35d171c512d1e816d5568200",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\613e275749ebd008e74bb62e.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 613e275749ebd008e74bb62e\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nCurrently, the img is assuming its default size, which is too large. CSS has a max function which returns the largest of a set of comma-separated values. For example:\ncss\nimg {\nwidth: max(250px, 25vw);\n}\nIn the above example, the width of the image will be 250px if the viewport width is less than 1000 pixels. If the viewport width is greater than 1000 pixels, the width of the image will be 25vw. This is because 25vw is equal to 25% of the viewport width.\nScale the image using its id as a selector, and setting the width to be the maximum of 10rem or 18vw.\n--hints--\nYou should use the #logo selector to target the img element.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('#logo'));\nYou should give the img a width of max(10rem, 18vw).\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('#logo')?.width, 'max(10rem, 18vw)');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\613e275749ebd008e74bb62e.md",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "281fd96c52d1b891e2fbb8a2a60afb45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6140883f74224508174794c0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6140883f74224508174794c0\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nMake the header take up the full width of its parent container, set its height to 50px, and set the background-color to #1b1b32. Then, set the display to use Flexbox.\n--hints--\nYou should use the header element selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('header'));\nYou should give the header a width of 100%.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('header')?.width, '100%');\nYou should give the header a height of 50px.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('header')?.height, '50px');\nYou should give the header a background-color of #1b1b32.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('header')?.backgroundColor, 'rgb(27, 27, 50)');\nYou should give the header a display of flex.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('header')?.display, 'flex');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0.4rem;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1916,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6140883f74224508174794c0.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6d4c968c5987ad254e31d272638a75c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61408e4ae3e35d08feb260eb.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 61408e4ae3e35d08feb260eb\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nChange the h1 font color to #f1be32, and set the font size to min(5vw, 1.2em).\n--hints--\nYou should use the h1 element selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('h1'));\nYou should give the h1 a color of #f1be32.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('h1')?.color, 'rgb(241, 190, 50)');\nYou should give the h1 a font-size of min(5vw, 1.2em).\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('h1')?.fontSize, 'min(5vw, 1.2em)');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0.4rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61408e4ae3e35d08feb260eb.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "099fa732c7cc3d7f78b2f246b57b221b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61408f155e798909b6908712.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 61408f155e798909b6908712\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nTo enable navigation on the page, add an unordered list with the following three list items:\nINFO\nHTML\nCSS\nThe list items text should be wrapped in anchor tags.\n--hints--\nYou should nest one ul element inside the nav.\njs\nassert.equal(document.querySelectorAll('nav > ul')?.length, 1);\nYou should nest three li elements inside the ul element.\njs\nassert.equal(document.querySelectorAll('nav > ul > li')?.length, 3);\nYou should nest one a element inside each li element.\njs\nassert.equal(document.querySelectorAll('nav > ul > li > a')?.length, 3);\nYou should give the first a element the text INFO.\njs\nassert.equal(document.querySelectorAll('nav > ul > li > a')?.[0]?.textContent, 'INFO');\nYou should give the second a element the text HTML.\njs\nassert.equal(document.querySelectorAll('nav > ul > li > a')?.[1]?.textContent, 'HTML');\nYou should give the third a element the text CSS.\njs\nassert.equal(document.querySelectorAll('nav > ul > li > a')?.[2]?.textContent, 'CSS');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0.4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1.2em);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2198,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61408f155e798909b6908712.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bacc1c976d1746064c55bb5855ae7e6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614090d5a22b6f0a5a6b464c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614090d5a22b6f0a5a6b464c\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nThe child combinator selector > is used between selectors to target only elements that match the second selector and are a direct child of the first selector.\nThis can be helpful when you have deeply nested elements and want to control the scope of your styling.\nUse the > selector to target the unordered list elements within the nav elements, and use Flexbox to evenly space the children.\n--hints--\nYou should use the nav > ul selector.\njs\nassert.exists(new __helpers.CSSHelp(document).getStyle('nav > ul'));\nYou should give the nav > ul elements a display of flex.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('nav > ul')?.display, 'flex');\nYou should give the nav > ul elements a justify-content of space-evenly.\njs\nassert.equal(new __helpers.CSSHelp(document).getStyle('nav > ul')?.justifyContent, 'space-evenly');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0.4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1.2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2274,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614090d5a22b6f0a5a6b464c.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c32f8109a997f4681534e084b658b8f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6141fed65b61320743da5894.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6141fed65b61320743da5894\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nTo increase the page accessibility, the role attribute can be used to indicate the purpose behind an element on the page to assistive technologies. The role attribute is a part of the Web Accessibility Initiative (WAI), and accepts preset values.\nGive each of the section elements the region role.\n--hints--\nYou should give the first section element the region role.\njs\nassert.equal(document.querySelectorAll('section')?.[0]?.getAttribute('role'), 'region');\nYou should give the second section element the region role.\njs\nassert.equal(document.querySelectorAll('section')?.[1]?.getAttribute('role'), 'region');\nYou should give the third section element the region role.\njs\nassert.equal(document.querySelectorAll('section')?.[2]?.getAttribute('role'), 'region');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0.4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1.2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2390,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6141fed65b61320743da5894.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "66bb1d3a894ac78c7fe15c38b28228fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6141fabd6f75610664e908fd.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6141fabd6f75610664e908fd\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nAs this is a quiz, you will need a form for users to submit answers You can semantically separate the content within the form using section elements Within the main element, create a form containing three section elements Then, make the form submit to https://freecodecamp org/practice-project/accessibility-quiz using the correct method --hints--\nYou should nest a form element within your main element js\nassert exists(document querySelector('main > form'));\nYou should nest three section elements within your form element js\nassert equal(document querySelectorAll('main > form > section') length, 3);\nYou should give the form element an action attribute js\nassert notEmpty(document querySelector('main > form') action);\nYou should give the action attribute a value of https://freecodecamp org/practice-project/accessibility-quiz js\nassert equal(document querySelector('main > form') action, 'https://freecodecamp org/practice-project/accessibility-quiz');\nYou should give the form element a method attribute js\nassert notEmpty(document querySelector('main > form') method);\nYou should give the form element a method attribute with a value of post js\nassert equal(document querySelector('main > form') method toLowerCase(), 'post');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2724,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6141fabd6f75610664e908fd.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "731896327e80505704ce7cd2f22d353c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61435e3c0679a306c20f1acc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 61435e3c0679a306c20f1acc\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nTo be able to navigate within the page, give each anchor element an href corresponding to the id of the h2 elements.\n--hints--\nYou should give the first a element an href of #student-info.\njs\nassert.equal(document.querySelectorAll('a')?.[0]?.getAttribute('href'), '#student-info');\nYou should give the second a element an href of #html-questions.\njs\nassert.equal(document.querySelectorAll('a')?.[1]?.getAttribute('href'), '#html-questions');\nYou should give the third a element an href of #css-questions.\njs\nassert.equal(document.querySelectorAll('a')?.[2]?.getAttribute('href'), '#css-questions');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\n--fcc-editable-region--\nINFO\nHTML\nCSS\n--fcc-editable-region--\nStudent Info\nHTML\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0.4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1.2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2618,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61435e3c0679a306c20f1acc.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6c4a03c68e0c5dbd09d77d07755a4f56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614206033d366c090ca7dd42.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614206033d366c090ca7dd42\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nTypeface plays an important role in the accessibility of a page Some fonts are easier to read than others, and this is especially true on low-resolution screens Change the font for both the h1 and h2 elements to Verdana, and use another web-safe font in the sans-serif family as a fallback Also, add a border-bottom of 4px solid #dfdfe2 to h2 elements to make the sections distinct --hints--\nYou should use a multiple element selector to target the h1 and h2 elements js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nassert exists(gs('h1, h2') || gs('h2, h1'));\nYou should set the first value of the font-family property to Verdana js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst style = gs('h1, h2') || gs('h2, h1');\nassert include(style fontFamily, 'Verdana');\nYou should set the second value of the font-family property to another sans-serif, web safe font Hint: I would choose Tahoma js\n// Acceptable fonts: Arial, sans-serif, Helvetica, Tahoma, Trebuchet MS const gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst style = gs('h1, h2') || gs('h2, h1');\nassert match(style fontFamily, /(Tahoma)|(Arial)|(sans-serif)|(Helvetica)|(Trebuchet MS)/);\nYou should use an h2 element selector to target the h2 elements js\nassert exists(new __helpers CSSHelp(document) getStyle('h2'));\nYou should give h2 a border-bottom property of 4px solid #dfdfe2 js\nassert equal(new __helpers CSSHelp(document) getStyle('h2')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614206033d366c090ca7dd42.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8cee5e5e6ded2f083a2a299700f5fb36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614206033d366c090ca7dd42.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "sans-serif, web safe font Hint: I would choose Tahoma js // Acceptable fonts: Arial, sans-serif, Helvetica, Tahoma, Trebuchet MS const gs = (s) => new __helpers CSSHelp(document) getStyle(s); const style = gs('h1, h2') || gs('h2, h1'); assert match(style fontFamily, /(Tahoma)|(Arial)|(sans-serif)|(Helvetica)|(Trebuchet MS)/); You should use an h2 element selector to target the h2 elements js assert exists(new __helpers CSSHelp(document) getStyle('h2')); You should give h2 a border-bottom property of 4px solid #dfdfe2 js assert equal(new __helpers CSSHelp(document) getStyle('h2')borderBottom, '4px solid rgb(223, 223, 226)');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nHTML\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3485,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614206033d366c090ca7dd42.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "28d7bdd1f81e6a874634bbfe9627c8d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614202874ca576084fca625f.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614202874ca576084fca625f\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nEvery region role requires a label, which helps screen reader users understand the purpose of the region One method for adding a label is to add a heading element inside the region and then reference it with the aria-labelledby attribute Add the following aria-labelledby attributes to the section elements:\nstudent-info\nhtml-questions\ncss-questions\nThen, within each section element, nest one h2 element with an id matching the corresponding aria-labelledby attribute Give each h2 suitable text content --hints--\nYou should give the first section element an aria-labelledby attribute of student-info js\nassert equal(document querySelectorAll('section') [0] getAttribute('aria-labelledby'), 'student-info');\nYou should give the second section element an aria-labelledby attribute of html-questions js\nassert equal(document querySelectorAll('section') [1] getAttribute('aria-labelledby'), 'html-questions');\nYou should give the third section element an aria-labelledby attribute of css-questions js\nassert equal(document querySelectorAll('section') [2] getAttribute('aria-labelledby'), 'css-questions');\nYou should nest one h2 element within the first section element js\nassert equal(document querySelectorAll('section') [0] querySelectorAll('h2') length, 1);\nYou should nest one h2 element within the second section element js\nassert equal(document querySelectorAll('section') [1] querySelectorAll('h2') length, 1);\nYou should nest one h2 element within the third section element js\nassert equal(document querySelectorAll('section') [2] querySelectorAll('h2') length, 1);\nYou should give the first h2 element an id attribute of student-info js\nassert equal(document querySelectorAll('h2') [0] id, 'student-info');\nYou should give the second h2 element an id attribute of html-questions js\nassert equal(document querySelectorAll('h2') [1] id, 'html-questions');\nYou should give the third h2 element an id attribute of css-questions js\nassert equal(document querySelectorAll('h2') [2] id, 'css-questions');\nYou should give the first h2 element suitable text content Hint: I would have chosen Student Info\njs\nassert isAtLeast(document querySelectorAll('h2') [0] textContent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4396,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614202874ca576084fca625f.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c43c41c005718ce985502be765920136",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614202874ca576084fca625f.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "first h2 element an id attribute of student-info js assert equal(document querySelectorAll('h2') [0] id, 'student-info'); You should give the second h2 element an id attribute of html-questions js assert equal(document querySelectorAll('h2') [1] id, 'html-questions'); You should give the third h2 element an id attribute of css-questions js assert equal(document querySelectorAll('h2') [2] id, 'css-questions'); You should give the first h2 element suitable text content Hint: I would have chosen Student Info js assert isAtLeast(document querySelectorAll('h2') [0] textContentlength, 1);\nYou should give the second h2 element suitable text content Hint: I would have chosen HTML\njs\nassert isAtLeast(document querySelectorAll('h2') [1] textContent length, 1);\nYou should give the third h2 element suitable text content Hint: I would have chosen CSS\njs\nassert isAtLeast(document querySelectorAll('h2') [2] textContent length, 1);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4396,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614202874ca576084fca625f.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "04867651e7aed19a0a6dd85a08608540",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6724e18296fa40173cc2437c\ntitle: Web Performance Review\nchallengeType: 24\ndashedName: review-web-performance\n--description--\nDifferences Between Real and Perceived Performance\nPerceived Performance: This is how users perceive the performance of a website It's how they evaluate it in terms of responsiveness and reliability This is a subjective measurement, so it's hard to quantify it, but it's very important, since the user experience determines the success or failure of a website Real Performance: This is the objective and measurable performance of the website It's measured using metrics like page load time, server response time, and rendering time These measurements are influenced by multiple factors related to the network and to the code itself Techniques for Improving Perceived Performance\nLazy Loading: This technique reduces the initial load time as much as possible by loading non-essential resources in the background Minimize Font Delays: If your website has custom fonts, you should also try to minimize font loading delays, since this may result in flickering or in showing the fallback font while the custom font is being loaded A suggestion for this is using a fallback font that is similar to the custom font, so in case this happens, the change will be more subtle Use of Loading Indicators: Showing a loading indicator for a long-running process as soon as the user clicks on an element can help the user feel connected and engaged with the process, making the wait time feel shorter Core Performance Concepts\nSource order: This refers to the way HTML elements are structured in the document This determines what loads first and can significantly impact performance and accessibility Some best practices for source order include:\nPlacing critical content such as headings, navigation or main text higher in the HTML structure Deferring non-essential scripts such as ones for analytics, or third-party widgets, so they don't block rendering Using progressive enhancement, to ensure the core experience works even before styles and scripts load Progressive enhancement is a way of building websites and applications based on the idea that you should make your page work with HTML first Here is an example of good source order, using the best practices we just went through:\n```html\nWelcome to FastSite Critical information loads first ```\nCritical Rendering Path: This is the sequence of steps the browser follows to convert code into pixels on the screen Latency: This is the time it takes for a request to travel between the browser and the server So in other words, high latency equals slow pages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10935,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "b947c8d92c47ee128de77ef8da78689c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "work with HTML first Here is an example of good source order, using the best practices we just went through: ```html Welcome to FastSite Critical information loads first ``` Critical Rendering Path: This is the sequence of steps the browser follows to convert code into pixels on the screen Latency: This is the time it takes for a request to travel between the browser and the server So in other words, high latency equals slow pagesSome ways of reducing latency include:\nUsing CDNs, or Content Delivery Networks, to serve files from closer locations Enabling compression using things such as Gzip to reduce file sizes Optimizing images and using lazy loading html\n<img src=\"placeholder jpg\" data-src=\"real-image jpg\" loading=\"lazy\">\nImproving INP\nDefinition: INP (Interaction to Next Paint) assesses a page's overall responsiveness by measuring the time from when a user interacts, like a click or key press, to the next time the browser updates the display A lower INP indicates a more responsive page Here are some ways to improve INP:\nReduce main thread work by breaking up long JavaScript tasks Use requestIdleCallback() for non-critical scripts This will queue a function to be called during a browser's idle periods Defer or lazy-load heavy assets which were covered earlier Optimize event handlers If these handlers run too frequently or perform heavy operations, they can slow down the page and increase INP The solution for this is debouncing Debouncing ensures that the function only runs after the user stops typing for a short delay - so for example 300ms This prevents unnecessary calculations and improves performance How Rendering Works in the Browser\nHow Rendering works: First the browser parses the HTML and builds the DOM Next, the browser processes the CSS, constructing the CSS Object Model, or CSSOM This is another tree structure that dictates how elements should be styled Finally, the browser paints the pixels to the screen, rendering each element based on the calculated styles and layout In complex pages, this might involve multiple layers that are composited together to form the final visual output How Performance Impacts Sustainability\nBackground Information: The internet accounts for around 2% of global carbon emissions—that's the same as the airline industry Every byte transferred requires electricity, from data centers to user devices Larger files and inefficient scripts mean more power consumption A high-performance website isn't just faster, it also reduces unnecessary processing and energy use",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10935,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "187ef2172e6fbae9e4dadbd3b11ce14c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and layout In complex pages, this might involve multiple layers that are composited together to form the final visual output How Performance Impacts Sustainability Background Information: The internet accounts for around 2% of global carbon emissions—that's the same as the airline industry Every byte transferred requires electricity, from data centers to user devices Larger files and inefficient scripts mean more power consumption A high-performance website isn't just faster, it also reduces unnecessary processing and energy useWays to Reduce Page Loading Times\nOptimize Media Assets: Large images and videos are common culprits for slow load times By optimizing these assets, you can significantly speed up your site This includes things like compressing images, using modern formats like WebP and using lazy loading for assets Leverage Browser Caching: Caching allows browsers to store parts of your website locally, reducing load times for returning visitors Minify and Compress Files: Reducing the size of your files can lead to quicker downloads This includes reducing the size of transmitted files and minifying CSS and JavaScript files Improving \"time to usable\"\nDefinition: \"time to usable\" is the interval from when a user requests a page to when they can meaningfully interact with it To improve \"time to usable\" you can lazy load your asset or minimize render-blocking resources Key Metrics for Measuring Performance\nFirst Contentful Paint or FCP: It measures how quickly the first piece of content—text or image—appears on the screen A good FCP is regarded as a time below 1 8 seconds, and a poor FCP is above 3 seconds You can check your FCP using Chrome DevTools and checking the performance tab Total Blocking Time: This shows how long the main thread is blocked by heavy JavaScript tasks If Total Blocking Time (TBT) is high, users experience sluggish interactions To improve TBT, break up long tasks and defer non-essential scripts Bounce Rate: This is the percentage of visitors who leave without interacting If your site has high bounce rates it might be because your page is too slow Unique Users: This metric tracks how many individual visitors come to your site To view the Bounce Rate and Unique Users, you can use Google Analytics It will allow you to monitor these metrics and improve engagement Common Performance Measurement Tools\nChrome DevTools: Chrome DevTools is a built-in tool inside Google Chrome that lets you analyze and debug performance in real-time DevTools will show loading times, CPU usage, and render delays",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10935,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "02606480217c1569fdb4fbfadad1de71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "your page is too slow Unique Users: This metric tracks how many individual visitors come to your site To view the Bounce Rate and Unique Users, you can use Google Analytics It will allow you to monitor these metrics and improve engagement Common Performance Measurement Tools Chrome DevTools: Chrome DevTools is a built-in tool inside Google Chrome that lets you analyze and debug performance in real-time DevTools will show loading times, CPU usage, and render delaysIt's especially useful for measuring First Contentful Paint, or FCP, is how fast a user sees the first visible content If your website feels slow, DevTools will help you spot the bottlenecks Lighthouse: This is an automated tool that checks performance, SEO, and accessibility WebPageTest: This tool lets you test how your site loads from different locations and devices This tool gives you a detailed breakdown of your site's Speed Index, Total Blocking Time, and other key performance metrics If you want to know how real users experience your site globally, WebPageTest is the tool for that PageSpeed Insights: This tool analyzes your website and suggests quick improvements for both mobile and desktop It will tell you what's slowing your site down and give specific recommendations like optimizing images, removing render-blocking scripts, and reducing server response times PageSpeed Insights is a fast and easy way to check how Google sees your site's performance Real User Monitoring: RUM tools track actual user behavior, showing how real visitors experience your site Popular RUM tools include Google Analytics, which tracks page load times and bounce rates, and New Relic or Datadog, which monitor real-time performance issues If you want data from actual users, RUM tools are essential Working with Performance Web APIs\nDefinition: Performance Web APIs let developers track how efficiently a webpage loads and responds directly in the code These APIs allow you to measure page load times, track rendering and interaction delays and analyze JavaScript execution time performance now(): This API gives you high-precision timestamps (in milliseconds) to measure how long different parts of your site take to load ```js\nconst start = performance now();\n// Run some code here\nconst end = performance now();\nconsole log(Execution time: ${end - start}ms);\n```\nPerformance Timing API: This API gives you a breakdown of every stage of page loading, from DNS lookup to DOMContentLoaded ```js\nconst timing = performance timing;\nconst pageLoadTime = timing loadEventEnd - timing navigationStart;\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10935,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "93407df5513173053f233b6fda44a305",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "gives you high-precision timestamps (in milliseconds) to measure how long different parts of your site take to load ```js const start = performance now(); // Run some code here const end = performance now(); console log(Execution time: ${end - start}ms); ``` Performance Timing API: This API gives you a breakdown of every stage of page loading, from DNS lookup to DOMContentLoaded ```js const timing = performance timing; const pageLoadTime = timing loadEventEnd - timing navigationStart; consolelog(Page load time: ${pageLoadTime}ms);\n```\nPerformanceObserver: This API listens for performance events such as layout shifts, long tasks, and user interactions ``js\nconst observer = new PerformanceObserver((list) => {\nlist getEntries() forEach((entry) => {\nconsole log(Long task detected: ${entry duration}ms`);\n});\n});\nobserver observe({ type: \"longtask\", buffered: true });\n```\nTechniques for Improving CSS Performance\nCSS Animations: Animating certain CSS properties, such as dimensions, position, and layout, triggers a process called \"reflow\", during which the browser recalculates the position and geometry of certain elements on the page This requires a repaint, which is computationally expensive Therefore, it's recommended to reduce the number of CSS animations as much as possible or at least give the user an option to toggle them on or off Techniques for Improving JavaScript Performance\nCode Splitting: Splitting your JavaScript code into modules that perform critical and non-critical tasks is also helpful This way, you'll be able to preload the critical ones as soon as possible and defer the non-critical ones to render the page as fast as possible DOM Manipulation: Remember that DOM Manipulation refers to the process of dynamically changing the content of a page with JavaScript by interacting with the Document Object Model (DOM) Manipulating the DOM is computationally expensive By reducing the amount of DOM manipulation in your JavaScript code will improve performance --assignment--\nReview the Web Performance topics and concepts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10935,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\review-web-performance\\6724e18296fa40173cc2437c.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "bf343688acae14dd1a19c18e640b3fc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143920c8eafb00b735746ce.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6143920c8eafb00b735746ce\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nEven though you added a placeholder to the first input element in the previous lesson, this is actually not a best-practice for accessibility; too often, users confuse the placeholder text with an actual input value - they think there is already a value in the input.\nRemove the placeholder text from the first input element, relying on the label being the best-practice.\n--hints--\nYou should remove the placeholder attribute from the first input element.\njs\nassert.isEmpty(document.querySelectorAll('input')?.[0]?.placeholder);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\n--fcc-editable-region--\nName:\n--fcc-editable-region--\nEmail:\nDate of Birth:\nHTML\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0.4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1.2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3136,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143920c8eafb00b735746ce.md",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "98f39c2202be3ec70565321645fb69f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143610161323a081b249c19.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6143610161323a081b249c19\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nFilling out the content of the quiz, below #student-info, add three div elements with a class of info Then, within each div nest one label element, and one input element --hints--\nYou should nest three div elements below the h2#student-info element js\nassert equal(document querySelectorAll('h2#student-info ~ div') length, 3);\nYou should give the first div a class of info js\nassert equal(document querySelectorAll('h2#student-info ~ div') [0] className, 'info');\nYou should give the second div a class of info js\nassert equal(document querySelectorAll('h2#student-info ~ div') [1] className, 'info');\nYou should give the third div a class of info js\nassert equal(document querySelectorAll('h2#student-info ~ div') [2] className, 'info');\nYou should nest one label element within the first div js\nassert equal(document querySelectorAll('h2#student-info ~ div') [0] querySelectorAll('label') length, 1);\nYou should nest one input element within the first div, after the label js\nassert equal(document querySelectorAll('h2#student-info ~ div') [0] querySelectorAll('input') length, 1);\nassert exists(document querySelectorAll('h2#student-info ~ div') [0] querySelector('label + input'));\nYou should nest one label element within the second div js\nassert equal(document querySelectorAll('h2#student-info ~ div') [1] querySelectorAll('label') length, 1);\nYou should nest one input element within the second div, after the label js\nassert equal(document querySelectorAll('h2#student-info ~ div') [1] querySelectorAll('input') length, 1);\nassert exists(document querySelectorAll('h2#student-info ~ div') [1] querySelector('label + input'));\nYou should nest one label element within the third div js\nassert equal(document querySelectorAll('h2#student-info ~ div') [2] querySelectorAll('label') length, 1);\nYou should nest one input element within the third div, after the label js\nassert equal(document querySelectorAll('h2#student-info ~ div') [2]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4328,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143610161323a081b249c19.md",
      "source_type": "git_repo"
    },
    "token_count": 516,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1a8410bb5924d8604d8cb6514b1d4b9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143610161323a081b249c19.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "[1] querySelectorAll('label') length, 1); You should nest one input element within the second div, after the label js assert equal(document querySelectorAll('h2#student-info ~ div') [1] querySelectorAll('input') length, 1); assert exists(document querySelectorAll('h2#student-info ~ div') [1] querySelector('label + input')); You should nest one label element within the third div js assert equal(document querySelectorAll('h2#student-info ~ div') [2] querySelectorAll('label') length, 1); You should nest one input element within the third div, after the label js assert equal(document querySelectorAll('h2#student-info ~ div') [2]querySelectorAll('input') length, 1);\nassert exists(document querySelectorAll('h2#student-info ~ div') [2] querySelector('label + input'));\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n--fcc-editable-region--\nStudent Info\n--fcc-editable-region--\nHTML\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4328,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143610161323a081b249c19.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8afc93f3f194158223a9452a96ce8bbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143908b6aafb00a659ca189.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6143908b6aafb00a659ca189\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nKeeping in mind best-practices for form inputs, give each input an appropriate type and name attribute Then, give the first input a placeholder attribute --hints--\nYou should give the first input a type of text js\nassert equal(document querySelectorAll('input') [0] type, 'text');\nYou should give the second input a type of email js\nassert equal(document querySelectorAll('input') [1] type, 'email');\nYou should give the third input a type of date js\nassert equal(document querySelectorAll('input') [2] type, 'date');\nYou should give the first input an appropriate name attribute js\nassert isAtLeast(document querySelectorAll('input') [0] name length, 1);\nYou should give the second input an appropriate name attribute js\nassert isAtLeast(document querySelectorAll('input') [1] name length, 1);\nYou should give the third input an appropriate name attribute js\nassert isAtLeast(document querySelectorAll('input') [2] name length, 1);\nYou should give the first input a placeholder attribute js\nassert notEmpty(document querySelectorAll('input') [0] placeholder);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n--fcc-editable-region--\nStudent Info\nName:\nEmail:\nDate of Birth:\n--fcc-editable-region--\nHTML\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143908b6aafb00a659ca189.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bb6d9a2d6db3db0ff4d72a74d63ac853",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143908b6aafb00a659ca189.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "a placeholder attribute js assert notEmpty(document querySelectorAll('input') [0] placeholder); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS --fcc-editable-region-- Student Info Name: Email: Date of Birth: --fcc-editable-region-- HTML CSS ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143908b6aafb00a659ca189.md",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4639ff0286734e4b036543d13afeddbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143639d5eddc7094161648c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6143639d5eddc7094161648c\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nIt is important to link each input to the corresponding label element This provides assistive technology users with a visual reference to the input This is done by giving the label a for attribute, which contains the id of the input This section will take a student's name, email address, and date of birth Give the label elements appropriate for attributes, as well as text content Then, link the input elements to the corresponding label elements --hints--\nYou should give the first label element an appropriate for attribute js\nassert isAtLeast(document querySelectorAll('label') [0] htmlFor length, 1);\nYou should give the second label element an appropriate for attribute js\nassert isAtLeast(document querySelectorAll('label') [1] htmlFor length, 1);\nYou should give the third label element an appropriate for attribute js\nassert isAtLeast(document querySelectorAll('label') [2] htmlFor length, 1);\nYou should give the first label element an appropriate text content js\nassert isAtLeast(document querySelectorAll('label') [0] textContent length, 1);\nYou should give the second label element an appropriate text content js\nassert isAtLeast(document querySelectorAll('label') [1] textContent length, 1);\nYou should give the third label element an appropriate text content js\nassert isAtLeast(document querySelectorAll('label') [2] textContent length, 1);\nYou should give the first input element an id attribute matching the for attribute of the first label js\nassert equal(document querySelectorAll('input') [0] id, document querySelectorAll('label') [0] htmlFor);\nYou should give the second input element an id attribute matching the for attribute of the second label js\nassert equal(document querySelectorAll('input') [1] id, document querySelectorAll('label') [1] htmlFor);\nYou should give the third input element an id attribute matching the for attribute of the third label js\nassert equal(document querySelectorAll('input') [2] id, document querySelectorAll('label') [2] htmlFor);\nYou should not use the same id attribute for more than one input element js\nconst id = (n) => document querySelectorAll('input') [n] id;\nassert notEqual(id(0), id(1));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143639d5eddc7094161648c.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0b6739151365503b8678e75157917be4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143639d5eddc7094161648c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id attribute matching the for attribute of the second label js assert equal(document querySelectorAll('input') [1] id, document querySelectorAll('label') [1] htmlFor); You should give the third input element an id attribute matching the for attribute of the third label js assert equal(document querySelectorAll('input') [2] id, document querySelectorAll('label') [2] htmlFor); You should not use the same id attribute for more than one input element js const id = (n) => document querySelectorAll('input') [n] id; assert notEqual(id(0), id(1)); assertnotEqual(id(0), id(2));\nassert notEqual(id(1), id(2));\nYou should not use the same for attribute for more than one label element js\nconst htmlFor = (n) => document querySelectorAll('label') [n] htmlFor;\nassert notEqual(htmlFor(0), htmlFor(1));\nassert notEqual(htmlFor(0), htmlFor(2));\nassert notEqual(htmlFor(1), htmlFor(2));\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n--fcc-editable-region--\nStudent Info\n--fcc-editable-region--\nHTML\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143639d5eddc7094161648c.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "44ebff8147897f103ec259e43900a792",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614394fb41985e0d2012a93e.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614394fb41985e0d2012a93e\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nThe question numbers are not descriptive enough This is especially true for visually impaired users One way to get around such an issue, without having to add visible text to the element, is to add text only a screen reader can read Nest a span element with a class of sr-only before the number in each of the h3 elements --hints--\nYou should add a span element within the first h3 element js\nassert exists(document querySelector('h3 > span'));\nYou should give the first span element a class of sr-only js\nassert equal(document querySelector('span') className, 'sr-only');\nYou should add a span element within the second h3 element js\nassert exists(document querySelectorAll('h3 > span')[1]);\nYou should give the second span element a class of sr-only js\nassert equal(document querySelectorAll('span')[1] className, 'sr-only');\nYou should add the span element before the number 1 within the first h3 element js\nassert equal(document querySelector('span') nextSibling textContent, '1');\nYou should add the span element before the number 2 within the second h3 element js\nassert equal(document querySelectorAll('span')[1] nextSibling textContent, '2');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\n--fcc-editable-region--\n1\n2\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614394fb41985e0d2012a93e.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d49e271b67c3ceb9328782d55ed2f4e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614394fb41985e0d2012a93e.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "js assert equal(document querySelectorAll('span')[1] nextSibling textContent, '2'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML --fcc-editable-region-- 1 2 --fcc-editable-region-- CSS ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614394fb41985e0d2012a93e.md",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e9f7112245b964604395b173590e57c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143956ed76ed60e012faa51.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6143956ed76ed60e012faa51\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nWithin the first span element, add the text Question In the second span element, add the text Question --hints--\nYou should give the first span element text of Question js\nassert equal(document querySelector('h3 > span') textContent, 'Question');\nYou should give the second span element text of Question js\nassert equal(document querySelectorAll('h3 > span') [1] textContent, 'Question');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\n--fcc-editable-region--\n1\n2\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143956ed76ed60e012faa51.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cce946e607c50a3c5684ce6a9f1739ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143956ed76ed60e012faa51.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "color: #f1be32; font-size: min(5vw, 1 2em); } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; } ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 04rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3869,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143956ed76ed60e012faa51.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c9e73e308fc26bfe92ed281282505121",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143931a113bb80c45546287.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6143931a113bb80c45546287\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nWithin the second section element, add two div elements with a class of question-block Then, within each div question-block element, add one h3 element with text of incrementing numbers, starting at 1, and one fieldset element with a class of question --hints--\nYou should nest two div elements within the second section element js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div') length, 2);\nYou should give the first new div element a class of question-block js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div') [0] className, 'question-block');\nYou should give the second new div element a class of question-block js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div') [1] className, 'question-block');\nYou should nest one h3 element within each div question-block element js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div question-block > h3') length, 2);\nYou should give the first h3 element text of 1 js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div question-block > h3') [0] textContent, '1');\nYou should give the second h3 element text of 2 js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div question-block > h3') [1] textContent, '2');\nYou should nest one fieldset element within each div question-block element js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div question-block > fieldset') length, 2);\nYou should place the first fieldset element after the first h3 element js\nassert exists(document querySelector('section:nth-of-type(2) > div question-block > h3 + fieldset'));\nYou should place the second fieldset element after the second h3 element js\nassert exists(document querySelector('section:nth-of-type(2) > div question-block:nth-of-type(2) > h3 + fieldset'));\nYou should give the first fieldset element a class of question js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div question-block > fieldset') [0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143931a113bb80c45546287.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "07c40e2af10581ef215e4264c1880a55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143931a113bb80c45546287.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "equal(document querySelectorAll('section:nth-of-type(2) > div question-block > fieldset') length, 2); You should place the first fieldset element after the first h3 element js assert exists(document querySelector('section:nth-of-type(2) > div question-block > h3 + fieldset')); You should place the second fieldset element after the second h3 element js assert exists(document querySelector('section:nth-of-type(2) > div question-block:nth-of-type(2) > h3 + fieldset')); You should give the first fieldset element a class of question js assert equal(document querySelectorAll('section:nth-of-type(2) > div question-block > fieldset') [0]className, 'question');\nYou should give the second fieldset element a class of question js\nassert equal(document querySelectorAll('section:nth-of-type(2) > div question-block > fieldset') [1] className, 'question');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\n--fcc-editable-region--\nHTML\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143931a113bb80c45546287.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "98570b739405939479d90e7142de8291",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143cb26f7edff2dc28f7da5.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6143cb26f7edff2dc28f7da5\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nEach fieldset will contain a true/false question Within each fieldset, nest one legend element, and one ul element with two options --hints--\nYou should nest one legend element within the first fieldset element js\nassert equal(document querySelectorAll(' question-block:nth-of-type(1) > fieldset > legend') length, 1);\nYou should nest one ul element within the first fieldset element js\nassert equal(document querySelectorAll(' question-block:nth-of-type(1) > fieldset > ul') length, 1);\nYou should nest two li elements within the first ul element js\nassert equal(document querySelectorAll('fieldset > ul') [0] querySelectorAll('li') length, 2);\nYou should nest one legend element within the second fieldset element js\nassert equal(document querySelectorAll(' question-block:nth-of-type(2) > fieldset > legend') length, 1);\nYou should nest one ul element within the second fieldset element js\nassert equal(document querySelectorAll(' question-block:nth-of-type(2) > fieldset > ul') length, 1);\nYou should nest two li elements within the second ul element js\nassert equal(document querySelectorAll('fieldset > ul') [1] querySelectorAll('li') length, 2);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\n--fcc-editable-region--\nHTML\n1\n2\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4305,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143cb26f7edff2dc28f7da5.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bd53b5f29511cad4222b13eb5a0f4b16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143cb26f7edff2dc28f7da5.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "querySelectorAll('fieldset > ul') [1] querySelectorAll('li') length, 2); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: --fcc-editable-region-- HTML 1 2 --fcc-editable-region-- CSS ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4305,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6143cb26f7edff2dc28f7da5.md",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ff970be9b54ef238fa2534df59cfae3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144e818fd5ea704fe56081d.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6144e818fd5ea704fe56081d\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nGive each fieldset an adequate name attribute Then, give both unordered lists a class of answers-list Finally, use the legend to caption the content of the fieldset by placing a true/false question as the text content --hints--\nYou should give the first fieldset an adequate name attribute Hint: I would use html-question-one\njs\nassert notEmpty(document querySelectorAll('fieldset') [0] name);\nYou should give the second fieldset an adequate name attribute Hint: I would use html-question-two\njs\nassert notEmpty(document querySelectorAll('fieldset') [1] name);\nYou should give the first ul element a class of answers-list js\nassert equal(document querySelectorAll('fieldset > ul') [0] className, 'answers-list');\nYou should give the second ul element a class of answers-list js\nassert equal(document querySelectorAll('fieldset > ul') [1] className, 'answers-list');\nYou should give the first legend element text content js\nassert notEmpty(document querySelectorAll('legend') [0] textContent);\nYou should give the second legend element text content js\nassert notEmpty(document querySelectorAll('legend') [1] textContent);\nYou should not use the same text content for both legend elements js\nassert notEqual(document querySelectorAll('legend') [0] textContent, document querySelectorAll('legend') [1] textContent);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\n--fcc-editable-region--\nHTML\nQuestion1\nQuestion2\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144e818fd5ea704fe56081d.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0ea5a80a413f552cb4d4b22b77904f5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144e818fd5ea704fe56081d.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "querySelectorAll('legend') [0] textContent, document querySelectorAll('legend') [1] textContent); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: --fcc-editable-region-- HTML Question1 Question2 --fcc-editable-region-- CSS ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4784,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144e818fd5ea704fe56081d.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fe3bb4ff7a11ce7534854ce4a367572d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614396f7ae83f20ea6f9f4b3.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614396f7ae83f20ea6f9f4b3\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nThe sr-only text is still visible There is a common pattern to visually hide text for only screen readers to read This pattern is to set the following CSS properties:\ncss\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\nUse the above to define the sr-only CSS rule --hints--\nYou should use the sr-only selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' sr-only'));\nYou should give the sr-only a position of absolute js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') position, 'absolute');\nYou should give the sr-only a width of 1px js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') width, '1px');\nYou should give the sr-only a height of 1px js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') height, '1px');\nYou should give the sr-only a padding of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') padding, '0px');\nYou should give the sr-only a margin of -1px js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') margin, '-1px');\nYou should give the sr-only an overflow of hidden js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') overflow, 'hidden');\nYou should give the sr-only a clip of rect(0, 0, 0, 0) js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') clip, 'rect(0px, 0px, 0px, 0px)');\nYou should give the sr-only a white-space of nowrap js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only') whiteSpace, 'nowrap');\nYou should give the sr-only a border of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle(' sr-only')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5364,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614396f7ae83f20ea6f9f4b3.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "09f4bdba37256a150704521ab8c5216d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614396f7ae83f20ea6f9f4b3.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "You should give the sr-only an overflow of hidden js assert equal(new __helpers CSSHelp(document) getStyle(' sr-only') overflow, 'hidden'); You should give the sr-only a clip of rect(0, 0, 0, 0) js assert equal(new __helpers CSSHelp(document) getStyle(' sr-only') clip, 'rect(0px, 0px, 0px, 0px)'); You should give the sr-only a white-space of nowrap js assert equal(new __helpers CSSHelp(document) getStyle(' sr-only') whiteSpace, 'nowrap'); You should give the sr-only a border of 0 js assert equal(new __helpers CSSHelp(document) getStyle(' sr-only')borderWidth, '0px');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nQuestion2\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5364,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614396f7ae83f20ea6f9f4b3.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7471cdec964a6118437dd54c0cd8fb96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614396f7ae83f20ea6f9f4b3.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "0 js assert equal(new __helpers CSSHelp(document) getStyle(' sr-only')borderWidth, '0px'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 Question2 CSS ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5364,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614396f7ae83f20ea6f9f4b3.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2ee987e03db067929296e8511eacac31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e6eeaa66c605eb087fe9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145e6eeaa66c605eb087fe9\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nAdd an id to all of your radio inputs so you can link your labels to them Give the first one an id of q1-a1 Give the rest of them ids of q1-a2, q2-a1, and q2-a2, respectively --hints--\nYou should give the first input element an id of q1-a1 js\nassert equal(document querySelectorAll('ul answers-list > li > label > input') [0] id, \"q1-a1\");\nYou should give the second input element an id of q1-a2 js\nassert equal(document querySelectorAll('ul answers-list > li > label > input') [1] id, \"q1-a2\");\nYou should give the third input element an id of q2-a1 js\nassert equal(document querySelectorAll('ul answers-list > li > label > input') [2] id, \"q2-a1\");\nYou should give the fourth input element an id of q2-a2 js\nassert equal(document querySelectorAll('ul answers-list > li > label > input') [3] id, \"q2-a2\");\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\n--fcc-editable-region--\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5073,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e6eeaa66c605eb087fe9.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ebf2ed853ea293cf6288b3d0fbf47443",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e6eeaa66c605eb087fe9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "its parent fieldset element --fcc-editable-region-- Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id --fcc-editable-region-- CSS ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5073,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e6eeaa66c605eb087fe9.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5c58c0a5a0e030c2b59d22866f2f6b6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144f8dc6849e405dd8bb829.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6144f8dc6849e405dd8bb829\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nTo provide the functionality of the true/false questions, we need a set of inputs which do not allow both to be selected at the same time Within each list element, nest one label element, and within each label element, nest one input element with the appropriate type --hints--\nYou should nest one label element within the first li element js\nassert exists(document querySelectorAll('ul answers-list > li') [0] querySelector('label'));\nYou should nest one label element within the second li element js\nassert exists(document querySelectorAll('ul answers-list > li') [1] querySelector('label'));\nYou should nest one label element within the third li element js\nassert exists(document querySelectorAll('ul answers-list > li') [2] querySelector('label'));\nYou should nest one label element within the fourth li element js\nassert exists(document querySelectorAll('ul answers-list > li') [3] querySelector('label'));\nYou should nest one input element within the first label element js\nassert exists(document querySelectorAll('ul answers-list > li') [0] querySelector('label') querySelector('input'));\nYou should nest one input element within the second label element js\nassert exists(document querySelectorAll('ul answers-list > li') [1] querySelector('label') querySelector('input'));\nYou should nest one input element within the third label element js\nassert exists(document querySelectorAll('ul answers-list > li') [2] querySelector('label') querySelector('input'));\nYou should nest one input element within the fourth label element js\nassert exists(document querySelectorAll('ul answers-list > li') [3] querySelector('label') querySelector('input'));\nYou should give the first input a type of radio js\nassert equal(document querySelectorAll('ul answers-list > li > label > input') [0] type, 'radio');\nYou should give the second input a type of radio js\nassert equal(document querySelectorAll('ul answers-list > li > label > input') [1] type, 'radio');\nYou should give the third input a type of radio js\nassert equal(document querySelectorAll('ul answers-list > li > label > input') [2] type, 'radio');\nYou should give the fourth input a type of radio js\nassert equal(document querySelectorAll('ul",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144f8dc6849e405dd8bb829.md",
      "source_type": "git_repo"
    },
    "token_count": 518,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "760c0574ae73b11f530d77c0386b6920",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144f8dc6849e405dd8bb829.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "js assert equal(document querySelectorAll('ul answers-list > li > label > input') [0] type, 'radio'); You should give the second input a type of radio js assert equal(document querySelectorAll('ul answers-list > li > label > input') [1] type, 'radio'); You should give the third input a type of radio js assert equal(document querySelectorAll('ul answers-list > li > label > input') [2] type, 'radio'); You should give the fourth input a type of radio js assert equal(document querySelectorAll('ulanswers-list > li > label > input') [3] type, 'radio');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\n--fcc-editable-region--\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6190,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6144f8dc6849e405dd8bb829.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "14c1727770d3b2ad46272ccbf0be3f43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ed1f22caab087630aaad.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145ed1f22caab087630aaad\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nTo prevent unnecessary repetition, target the before pseudo-element of the h3 element, and give it a content property of \"Question #\" --hints--\nYou should use the h3::before selector js\nassert exists(new __helpers CSSHelp(document) getStyle('h3::before'));\nYou should give the h3::before pseudo-element a content property of \"Question #\" js\nassert include(new __helpers CSSHelp(document) getStyle('h3::before') content, 'Question #');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n--fcc-editable-region--\n--fcc-editable-region--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4938,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ed1f22caab087630aaad.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0c7e628a6c9097a6e8089f38a34e8e0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ed1f22caab087630aaad.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; } --fcc-editable-region-- --fcc-editable-region--sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4938,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ed1f22caab087630aaad.md",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "dbfcb691d72b355d9c1c0879406557f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145eb5f08a38a0786c7a80c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145eb5f08a38a0786c7a80c\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nIf you click on the radio inputs, you might notice both inputs within the same true/false fieldset can be selected at the same time Group the relevant inputs together such that only one input from a pair can be selected at a time --hints--\nYou should give the first input a name attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label > input') [0] name);\nYou should give the second input a name attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label > input') [1] name);\nYou should give the third input a name attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label > input') [2] name);\nYou should give the fourth input a name attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label > input') [3] name);\nYou should give the second input a name attribute matching the name attribute of the first input js\nconst i = (n) => document querySelectorAll('ul answers-list > li > label > input') [n] name;\nassert equal(i(1), i(0));\nYou should give the fourth input a name attribute matching the name attribute of the third input js\nconst i = (n) => document querySelectorAll('ul answers-list > li > label > input') [n] name;\nassert equal(i(3), i(2));\nYou should give different name attributes to the first input and the third input js\nconst i = (n) => document querySelectorAll('ul answers-list > li > label > input') [n] name;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6014,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145eb5f08a38a0786c7a80c.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b9406ff48f1eddaca23a0d97257b96e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145eb5f08a38a0786c7a80c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "> input') [n] name; assert equal(i(1), i(0)); You should give the fourth input a name attribute matching the name attribute of the third input js const i = (n) => document querySelectorAll('ul answers-list > li > label > input') [n] name; assert equal(i(3), i(2)); You should give different name attributes to the first input and the third input js const i = (n) => document querySelectorAll('ul answers-list > li > label > input') [n] name; assertnotEqual(i(0), i(2));\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\n--fcc-editable-region--\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6014,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145eb5f08a38a0786c7a80c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "efac946418623e2a7b1455d821cc62af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f02240ff8f09f7ec913c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f02240ff8f09f7ec913c\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nWithin the div question-block elements, nest one label element, and add a CSS related question to the label text --hints--\nYou should nest one label element within the first div question-block element js\nassert exists(document querySelectorAll(' formrow > question-block') [0] querySelector('label'));\nYou should nest one label element within the second div question-block element js\nassert exists(document querySelectorAll(' formrow > question-block') [1] querySelector('label'));\nYou should give the first label element text content js\nassert isAtLeast(document querySelectorAll(' formrow > question-block') [0] querySelector('label') textContent length, 1);\nYou should give the second label element text content js\nassert isAtLeast(document querySelectorAll(' formrow > question-block') [1] querySelector('label') textContent length, 1);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\n--fcc-editable-region--\nCSS\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5695,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f02240ff8f09f7ec913c.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a77b9fdbe16359ee15aab5355bb59914",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f02240ff8f09f7ec913c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False --fcc-editable-region-- CSS --fcc-editable-region-- ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5695,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f02240ff8f09f7ec913c.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4af956ae4096ce5c9a696cac87539719",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145e8b5080a5f06bb0223d0\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nGive the label elements text such that the input comes before the text Then, give the input elements a value matching the text The text should either be True or False --hints--\nYou should give the first label element text content js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [0] textContent trim());\nYou should give the second label element text content js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [1] textContent trim());\nYou should give the third label element text content js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [2] textContent trim());\nYou should give the fourth label element text content js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [3] textContent trim());\nYou should place the first label text content after the input element js\nassert match(document querySelectorAll('ul answers-list > li > label') [0] innerHTML, />[\\s\\S]+[a-zA-Z]/);\nYou should place the second label text content after the input element js\nassert match(document querySelectorAll('ul answers-list > li > label') [1] innerHTML, />[\\s\\S]+[a-zA-Z]/);\nYou should place the third label text content after the input element js\nassert match(document querySelectorAll('ul answers-list > li > label') [2] innerHTML, />[\\s\\S]+[a-zA-Z]/);\nYou should place the fourth label text content after the input element js\nassert match(document querySelectorAll('ul answers-list > li > label') [3] innerHTML, />[\\s\\S]+[a-zA-Z]/);\nYou should give the first label the text True or False js\nassert include(['True', 'False'], document querySelectorAll('ul answers-list > li > label') [0] textContent trim());\nYou should give the second label the text True js\nconst l = (n) => document querySelectorAll('ul answers-list > li > label') [n] textContent trim();\nif (l(0) === 'False') {\nassert equal(l(1), 'True');\n}\nYou should give the second label the text False js\nconst l = (n) => document querySelectorAll('ul",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
      "source_type": "git_repo"
    },
    "token_count": 522,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "9affa88151ed18eaf248db6e4069fd56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "You should give the first label the text True or False js assert include(['True', 'False'], document querySelectorAll('ul answers-list > li > label') [0] textContent trim()); You should give the second label the text True js const l = (n) => document querySelectorAll('ul answers-list > li > label') [n] textContent trim(); if (l(0) === 'False') { assert equal(l(1), 'True'); } You should give the second label the text False js const l = (n) => document querySelectorAll('ulanswers-list > li > label') [n] textContent trim();\nif (l(0) === 'True') {\nassert equal(l(1), 'False');\n}\nYou should give the third label the text True or False js\nassert include(['True', 'False'], document querySelectorAll('ul answers-list > li > label') [2] textContent trim());\nYou should give the fourth label the text True js\nconst l = (n) => document querySelectorAll('ul answers-list > li > label') [n] textContent trim();\nif (l(2) === 'False') {\nassert equal(l(3), 'True');\n}\nYou should give the fourth label the text False js\nconst l = (n) => document querySelectorAll('ul answers-list > li > label') [n] textContent trim();\nif (l(2) === 'True') {\nassert equal(l(3), 'False');\n}\nYou should give the first input a value matching the label text content js\nassert equal(document querySelectorAll('ul answers-list > li > label') [0] textContent trim() toLowerCase(), document querySelectorAll('ul answers-list > li > label > input') [0] value toLowerCase());\nYou should give the second input a value matching the label text content js\nassert equal(document querySelectorAll('ul answers-list > li > label') [1] textContent trim() toLowerCase(), document querySelectorAll('ul answers-list > li > label > input') [1] value toLowerCase());\nYou should give the third input a value matching the label text content js\nassert equal(document querySelectorAll('ul answers-list > li > label') [2] textContent trim() toLowerCase(), document querySelectorAll('ul answers-list > li > label > input') [2] value toLowerCase());\nYou should give the fourth input a value matching the label text content js\nassert equal(document querySelectorAll('ul",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
      "source_type": "git_repo"
    },
    "token_count": 524,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "511469099e79711067508c5a3728f3b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "answers-list > li > label') [1] textContent trim() toLowerCase(), document querySelectorAll('ul answers-list > li > label > input') [1] value toLowerCase()); You should give the third input a value matching the label text content js assert equal(document querySelectorAll('ul answers-list > li > label') [2] textContent trim() toLowerCase(), document querySelectorAll('ul answers-list > li > label > input') [2] value toLowerCase()); You should give the fourth input a value matching the label text content js assert equal(document querySelectorAll('ulanswers-list > li > label') [3] textContent trim() toLowerCase(), document querySelectorAll('ul answers-list > li > label > input') [3] value toLowerCase());\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\n--fcc-editable-region--\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "4d4059a23e36bd7c04f000ab850a124c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8404,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145e8b5080a5f06bb0223d0.md",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "90215405cdead23cc66b6e7043921c55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f14f019a4b0adb94b051.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f14f019a4b0adb94b051\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nWithin the first div answer element, nest one required select element with three option elements Give the first option element a value of \"\", and the text Select an option Give the second option element a value of yes, and the text Yes Give the third option element a value of no, and the text No --hints--\nYou should nest one select element within the first div answer element js\nassert exists(document querySelector('div answer > select'));\nYou should nest three option elements within the select element js\nassert equal(document querySelectorAll('div answer > select > option') length, 3);\nYou should give the first option element a value of \"\" js\nassert equal(document querySelector('div answer > select > option:nth-child(1)') value, '');\nYou should give the first option element a text content of Select an option js\nassert equal(document querySelector('div answer > select > option:nth-child(1)') textContent, 'Select an option');\nYou should give the second option element a value of yes js\nassert equal(document querySelector('div answer > select > option:nth-child(2)') value, 'yes');\nYou should give the second option element a text content of Yes js\nassert equal(document querySelector('div answer > select > option:nth-child(2)') textContent, 'Yes');\nYou should give the third option element a value of no js\nassert equal(document querySelector('div answer > select > option:nth-child(3)') value, 'no');\nYou should give the third option element a text content of No js\nassert equal(document querySelector('div answer > select > option:nth-child(3)') textContent, 'No');\nYou should give the select an attribute of required js\nassert isTrue(document querySelector('div answer > select') required);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6812,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f14f019a4b0adb94b051.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ac435f3e802195af22265ad1a60da8d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f14f019a4b0adb94b051.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "assert isTrue(document querySelector('div answer > select') required); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative values--fcc-editable-region--\n--fcc-editable-region--\nDo you have any questions:\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6812,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f14f019a4b0adb94b051.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "dd9925fb8011b7c16c17ed799bdc255f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ee65e2e1530938cb594d.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145ee65e2e1530938cb594d\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nThe final section of this quiz will contain a dropdown, and a text box Begin by nesting a div with a class of formrow, and nest four div elements inside of it, alternating their class attributes with question-block and answer --hints--\nYou should add one div element within the final section js\nassert exists(document querySelector('section:nth-of-type(3) > div'));\nYou should give the first div a class of formrow js\nassert equal(document querySelector('section:nth-of-type(3) > div') className, 'formrow');\nYou should place div formrow after the h2 element js\nassert exists(document querySelector('section:nth-of-type(3) > h2 + div formrow'));\nYou should nest four div elements inside div formrow js\nassert equal(document querySelectorAll('section:nth-of-type(3) > div formrow > div') length, 4);\nYou should give the first nested div a class of question-block js\nassert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(1)') className, 'question-block');\nYou should give the second nested div a class of answer js\nassert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(2)') className, 'answer');\nYou should give the third nested div a class of question-block js\nassert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(3)') className, 'question-block');\nYou should give the fourth nested div a class of answer js\nassert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(4)')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ee65e2e1530938cb594d.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "95e6f9a2367c0bc3b1f3e2a7a3efa567",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ee65e2e1530938cb594d.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "question-block js assert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(1)') className, 'question-block'); You should give the second nested div a class of answer js assert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(2)') className, 'answer'); You should give the third nested div a class of question-block js assert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(3)') className, 'question-block'); You should give the fourth nested div a class of answer js assert equal(document querySelector('section:nth-of-type(3) > div formrow > div:nth-of-type(4)')className, 'answer');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\n--fcc-editable-region--\nCSS\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ee65e2e1530938cb594d.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "38e8572f633ade4bf555b8c387d41d38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ee65e2e1530938cb594d.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; } h3::before { content: \"Question #\"; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6191,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145ee65e2e1530938cb594d.md",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0b83bd11a30fb57a7cef379cfbd68ddb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f3a5cd9be60b9459cdd6.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f3a5cd9be60b9459cdd6\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nLink the first label element to the select element, and give the select element a name attribute --hints--\nYou should give the label element a for attribute js\nassert notEmpty(document querySelector(' question-block > label') htmlFor);\nYou should give the select element an id attribute js\nassert notEmpty(document querySelector(' answer > select') id);\nYou should give the select element an id matching the for attribute of the label element js\nassert equal(document querySelector(' answer > select') id, document querySelector(' question-block > label') htmlFor);\nYou should give the select element a name attribute js\nassert notEmpty(document querySelector(' answer > select') name);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\n--fcc-editable-region--\nCan the CSS margin property accept negative values Select an option\nYes\nNo\n--fcc-editable-region--\nDo you have any questions:\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f3a5cd9be60b9459cdd6.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6be076340f6c0a9f3ce5049826587f99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f3a5cd9be60b9459cdd6.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "the same value as the input's id True False CSS --fcc-editable-region-- Can the CSS margin property accept negative values Select an option Yes No --fcc-editable-region-- Do you have any questions: ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f3a5cd9be60b9459cdd6.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2500bf6670c3446a06853d413cb824e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f47393fbe70c4d885f9c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f47393fbe70c4d885f9c\ntitle: Step 39\nchallengeType: 0\ndashedName: step-39\n--description--\nNest one textarea element within the second div answer element, and set the number of rows and columns it has --hints--\nYou should nest one textarea element within the second div answer element js\nassert exists(document querySelectorAll('div answer') [1] querySelector('textarea'));\nYou should give the textarea a rows attribute with a number js\nconst rows = document querySelectorAll('div answer') [1] querySelector('textarea') getAttribute('rows');\nassert notEmpty(rows);\nassert isNotNaN(Number(rows));\nYou should give the textarea a cols attribute with a number js\nconst cols = document querySelectorAll('div answer') [1] querySelector('textarea') getAttribute('cols');\nassert notEmpty(cols);\nassert isNotNaN(Number(cols));\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5967,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f47393fbe70c4d885f9c.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d18902b65efe61d4533965694784c899",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f47393fbe70c4d885f9c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "the same value as the input's id True False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: --fcc-editable-region-- --fcc-editable-region-- ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5967,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f47393fbe70c4d885f9c.md",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "66213d716413e6b88bdca45eacee2226",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f829ac6a920ebf5797d7.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f829ac6a920ebf5797d7\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nTwo final semantic HTML elements for this project are the footer and address elements The footer element is a container for a collection of content that is related to the page, and the address element is a container for contact information for the author of the page After the main element, add one footer element, and nest one address element within it --hints--\nYou should add one footer element after the main element js\nassert exists(document querySelector('main + footer'));\nYou should nest one address element within the footer element js\nassert exists(document querySelector('footer > address'));\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5978,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f829ac6a920ebf5797d7.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4b332d9a1acd6916af954e976a61de50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f829ac6a920ebf5797d7.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; } h3::before { content: \"Question #\"; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5978,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f829ac6a920ebf5797d7.md",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6f1aceae8de3ac29e93d99cb272775e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f59029474c0d3dc1c8b8.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f59029474c0d3dc1c8b8\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nAs with the other input and label elements, link the textarea to its corresponding label element, and give it a name attribute --hints--\nYou should give the textarea element an id attribute js\nassert notEmpty(document querySelectorAll(' answer') [1] querySelector('textarea') id);\nYou cannot include spaces in the id for the textarea element js\nassert match(document querySelectorAll(' answer') [1] querySelector('textarea') id, /^\\S+$/);\nYou must choose a different id for the textarea element because another element is using that id js\nconst textareaId = document querySelectorAll(' answer') [1] querySelector('textarea') id;\nassert equal(document querySelectorAll(`[id='${textareaId replaceAll(/(['\\\\])/g, \"\\\\$1\")}']`) length, 1);\nYou should give the label element a for attribute matching the id of the textarea element js\nassert equal(document querySelectorAll(' formrow > question-block') [1] querySelector('label') htmlFor, document querySelectorAll(' answer') [1] querySelector('textarea') id);\nYou should give the textarea element a name attribute js\nassert notEmpty(document querySelectorAll(' answer') [1] querySelector('textarea') name);\nYou should use at least one non-space character in the name attribute for the textarea js\nassert match(document querySelectorAll(' answer') [1] querySelector('textarea') name, /\\S/);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6682,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f59029474c0d3dc1c8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bfe322bc19ab5f6cc8d7e0911a1438cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f59029474c0d3dc1c8b8.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "match(document querySelectorAll(' answer') [1] querySelector('textarea') name, /\\S/); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\n--fcc-editable-region--\nDo you have any questions:\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6682,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f59029474c0d3dc1c8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "95af9fc50a8f7db9ac0d7b644988363b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f685797bd30df9784e8c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f685797bd30df9784e8c\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nDo not forget to give your form a submit button with the text Send --hints--\nYou should add either a button or input element js\nassert exists(document querySelector('button') || document querySelector('main > input') || document querySelector('form > input'));\nYou should place the submit button within the form element js\nassert exists(document querySelector('form > button') || document querySelector('form > input'));\nYou should place the submit button after the last section element js\nassert exists(document querySelector('section:last-of-type + button') || document querySelector('section:last-of-type + input'));\nYou should give the submit button a type of submit js\nassert exists(document querySelector('button[type=\"submit\"]') || document querySelector('form > input[type=\"submit\"]'));\nThe submit button should display the text Send js\nassert equal(document querySelector('button[type=\"submit\"]') textContent document querySelector('input[type=\"submit\"]') value, 'Send');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\n--fcc-editable-region--\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6339,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f685797bd30df9784e8c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "29994b80d3c0727b7170b3eadc3f1648",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f685797bd30df9784e8c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "with the same value as the input's id True False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: --fcc-editable-region-- ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6339,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f685797bd30df9784e8c.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "85fa4ec28a31aeeb61945d859e882dc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f8f8bcd4370f6509078e.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145f8f8bcd4370f6509078e\ntitle: Step 43\nchallengeType: 0\ndashedName: step-43\n--description--\nWithin the address element, add the following:\nhtml\nfreeCodeCamp<br />\nSan Francisco<br />\nCalifornia<br />\nUSA\nThe br tags will allow each part of the address to be on its own line and are useful for presenting address elements properly --hints--\nYou should add the above text including the <br /> tags to the address element js\nassert equal(document querySelector('address') innerText, 'freeCodeCamp\\nSan Francisco\\nCalifornia\\nUSA');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5856,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f8f8bcd4370f6509078e.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e45c3adcff741d16894f656a9e368633",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f8f8bcd4370f6509078e.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; } h3::before { content: \"Question #\"; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5856,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145f8f8bcd4370f6509078e.md",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1a685247b5884a0505d6662855ff7f2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fb5018cb5b100cb2a88c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145fb5018cb5b100cb2a88c\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nThe address element does not have to contain a physical geographical location It can be used to provide a link to the subject Wrap a link around the text freeCodeCamp, and set its location to https://freecodecamp org --hints--\nYou should add an a element js\nassert exists(document querySelector('address > a'));\nYou should give the a element an href attribute of https://freecodecamp org js\nassert equal(document querySelector('address > a') getAttribute('href'), 'https://freecodecamp org');\nYou should wrap the a element around the existing text freeCodeCamp js\nassert equal(document querySelector('address > a') innerHTML, 'freeCodeCamp');\nassert equal(document querySelector('address') innerHTML match(/freeCodeCamp/g) length, 1);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\n--fcc-editable-region--\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fb5018cb5b100cb2a88c.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b79c6aa0877700f9843c76caa1c664fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fb5018cb5b100cb2a88c.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id True False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send --fcc-editable-region-- freeCodeCamp San Francisco California USA --fcc-editable-region-- ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fb5018cb5b100cb2a88c.md",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b573b6c7183801571e87e909714e4d6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fc3707fc3310c277f5c8.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6145fc3707fc3310c277f5c8\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nBack to styling the page Select the list elements within the navigation bar, and give them the following styles:\ncss\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n--hints--\nYou should use either the nav li or nav > ul > li selector js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nassert exists(gs('nav li') || gs('nav > ul > li'));\nYou should give the li elements a color of #dfdfe2 js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst color = gs('nav li') color gs('nav > ul > li') color;\nassert equal(color, 'rgb(223, 223, 226)');\nYou should give the li elements a margin of 0 0 2rem js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst margin = gs('nav li') margin gs('nav > ul > li') margin;\nassert equal(margin, '0px 0 2rem');\nYou should give the li elements a padding of 0 2rem js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst padding = gs('nav li') padding gs('nav > ul > li') padding;\nassert equal(padding, '0 2rem');\nYou should give the li elements a display of block js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst display = gs('nav li') display gs('nav > ul > li') display;\nassert equal(display, 'block');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fc3707fc3310c277f5c8.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1177da51dea7dac55e2e50d4ce216c1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fc3707fc3310c277f5c8.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "ul > li') display; assert equal(display, 'block'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6868,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6145fc3707fc3310c277f5c8.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "69b9439ce396e948d2a9446a03ab01fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614878f7a412310647873015.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614878f7a412310647873015\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nTidy up the header, by using Flexbox to put space between the children, and vertically center them --hints--\nYou should give the header a justify-content of space-between js\nassert equal(new __helpers CSSHelp(document) getStyle('header') justifyContent, 'space-between');\nYou should give the header an align-items of center js\nassert equal(new __helpers CSSHelp(document) getStyle('header') alignItems, 'center');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\n--fcc-editable-region--\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\n--fcc-editable-region--\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614878f7a412310647873015.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5da38c0b309f9a902a4cc640b61f2570",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614878f7a412310647873015.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "color: #1b1b32; font-family: Helvetica; margin: 0; } --fcc-editable-region-- header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } --fcc-editable-region-- logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 02rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614878f7a412310647873015.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "325395de884c806aeb7dcce1699ff5cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6147a14ef5668b5881ef2297.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6147a14ef5668b5881ef2297\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nTo make the navigation buttons look more like typical buttons, remove the underline from the anchor tags Then, create a new selector targeting the navigation list elements so that when the cursor hovers over them, the background color and text color are switched, and the cursor becomes a pointer --hints--\nYou should use the existing li > a selector to set the text-decoration to none js\nassert equal(new __helpers CSSHelp(document) getStyle('li > a') textDecoration, 'none');\nYou should use either the nav > ul > li:hover or nav li:hover selector to style the elements on hover js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nassert exists(gs('nav > ul > li:hover') || gs('nav li:hover'));\nYou should give hovered li elements a background-color of #dfdfe2 js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst bgColor = gs('nav > ul > li:hover') backgroundColor gs('nav li:hover') backgroundColor;\nassert equal(bgColor, 'rgb(223, 223, 226)');\nYou should give hovered li elements a color of #1b1b32 js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst color = gs('nav > ul > li:hover') color gs('nav li:hover') color;\nassert equal(color, 'rgb(27, 27, 50)');\nYou should give hovered li elements a cursor of pointer js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst cursor = gs('nav > ul > li:hover') cursor gs('nav li:hover') cursor;\nassert equal(cursor, 'pointer');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7185,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6147a14ef5668b5881ef2297.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8c2ba19897d1a77d8f84aed88632c79f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6147a14ef5668b5881ef2297.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "cursor gs('nav li:hover') cursor; assert equal(cursor, 'pointer'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\n--fcc-editable-region--\nli > a {\ncolor: inherit;\n}\n--fcc-editable-region--\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7185,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6147a14ef5668b5881ef2297.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9bcfc3a138f39aeb38f0c8a9ddde90a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487b77d4a37707073a64e5.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 61487b77d4a37707073a64e5\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nWhen the screen width is small, the h1 does not wrap its text content how it should Align the text for the h1 element in the center Then, give the main padding such that the Student Info section header can be fully seen --hints--\nYou should give the h1 a text-align of center js\nassert equal(new __helpers CSSHelp(document) getStyle('h1') textAlign, 'center');\nYou should add a main selector to target the main element js\nassert exists(new __helpers CSSHelp(document) getStyle('main'));\nYou should give the main a padding-top of at least 25px js\nassert isAtLeast(Number(new __helpers CSSHelp(document) getStyle('main') paddingTop replace(/\\D+/, '')), 25);\nYou should only change the padding-top value js\nassert isEmpty(new __helpers CSSHelp(document) getStyle('main') paddingBottom);\nassert isEmpty(new __helpers CSSHelp(document) getStyle('main') paddingLeft);\nassert isEmpty(new __helpers CSSHelp(document) getStyle('main') paddingRight);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6835,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487b77d4a37707073a64e5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4698d29fa50d5db0edc6445ba2e860e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487b77d4a37707073a64e5.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "with the same value as the input's id True False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 04rem;\n}\n--fcc-editable-region--\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\n--fcc-editable-region--\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6835,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487b77d4a37707073a64e5.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5fb49199a7a3d3d359e21420b2c80ba6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614796cb8086be482d60e0ac.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614796cb8086be482d60e0ac\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nOn the topic of visual accessibility, contrast between elements is a key factor For example, the contrast between the text and the background of a heading should be at least 4 5:1 Change the font color of all the anchor elements within the list elements to something with a contrast ratio of at least 7:1 --hints--\nYour selector should target links inside list items js\nconst anchors = document querySelectorAll('li > a');\nanchors forEach(a => assert exists(getComputedStyle(a)));\nYou should give the a elements inside list items a color property ```js\nconst helper = new __helpers CSSHelp(document);\nconst usedSelector = code match(/^\\s ( a)\\s* {/m)[1];\nassert notEmpty(helper getStyle(usedSelector replaceAll(/\\s+/g, ' ') trim()) color);\n```\nYou should only change the color of a elements inside list elements js\nconst footerAnchor = document querySelector('footer a');\nconst listAnchors = document querySelectorAll('li a');\nlistAnchors forEach(listAnchor => assert isFalse(getComputedStyle(footerAnchor) color === getComputedStyle(listAnchor) color));\nYou should give the color property a contrast with the background of at least 7:1 Hint: I would use #dfdfe2\n```js\nfunction luminance(r, g, b) {\nconst a = [r, g, b] map((v) => {\nv /= 255;\nreturn v <= 0 03928 v / 12 92 : Math pow( (v + 0 055) / 1 055, 2 4 );\n});\nreturn a[0] * 0 2126 + a[1] * 0 7152 + a[2] * 0 0722;\n}\nfunction contrast(rgb1, rgb2) {\nconst lum1 = luminance(rgb1[0], rgb1[1], rgb1[2]);\nconst lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]);\nconst brightest = Math max(lum1, lum2);\nconst darkest = Math min(lum1, lum2);\nreturn (brightest + 0 05)\n/ (darkest + 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7652,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614796cb8086be482d60e0ac.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "effc8998b4a9c07b263a502890cc2019",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614796cb8086be482d60e0ac.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "return v <= 0 03928 v / 12 92 : Math pow( (v + 0 055) / 1 055, 2 4 ); }); return a[0] * 0 2126 + a[1] * 0 7152 + a[2] * 0 0722; } function contrast(rgb1, rgb2) { const lum1 = luminance(rgb1[0], rgb1[1], rgb1[2]); const lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]); const brightest = Math max(lum1, lum2); const darkest = Math min(lum1, lum2); return (brightest + 0 05) / (darkest + 005);\n}\nconst backgroundColor = [27, 27, 50];\nfor (let elem of document querySelectorAll('li > a')) {\nconst a = getComputedStyle(elem) color;\nconst rgbA = a match(/(\\d+),\\s(\\d+),\\s(\\d+)/);\nconst aColor = [rgbA[1], rgbA[2], rgbA[3]];\nassert isAtLeast(contrast(backgroundColor, aColor), 7);\n}\n```\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7652,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614796cb8086be482d60e0ac.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "759afad1653b92cc9076abab16187eda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614796cb8086be482d60e0ac.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 04rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7652,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614796cb8086be482d60e0ac.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9e6c9a088c910ce6164f59e7561f174a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487da611a65307e78d2c20.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 61487da611a65307e78d2c20\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nOn small screens, the unordered list in the navigation bar overflows the right side of the screen Fix this by using Flexbox to wrap the ul content Then, set the following CSS properties to correctly align the text:\ncss\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n--hints--\nYou should give the ul a flex-wrap of wrap js\nassert equal(new __helpers CSSHelp(document) getStyle('nav > ul') flexWrap, 'wrap');\nYou should give the ul an align-items of center js\nassert equal(new __helpers CSSHelp(document) getStyle('nav > ul') alignItems, 'center');\nYou should give the ul a padding-inline-start of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('nav > ul') paddingInlineStart, '0px');\nYou should give the ul a margin-block of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('nav > ul') marginBlock, '0px');\nYou should give the ul a height of 100% js\nassert equal(new __helpers CSSHelp(document) getStyle('nav > ul') height, '100%');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487da611a65307e78d2c20.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "44ec3e8237eaf86104848f440c166c9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487da611a65307e78d2c20.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "__helpers CSSHelp(document) getStyle('nav > ul') height, '100%'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\n--fcc-editable-region--\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\n--fcc-editable-region--\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487da611a65307e78d2c20.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0edce4453712702a3755f2f17aa49637",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487da611a65307e78d2c20.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "--fcc-editable-region-- nav > ul { display: flex; justify-content: space-evenly; } --fcc-editable-region-- nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 0 2rem; display: block; } nav > ul > li:hover { background-color: #dfdfe2; color: #1b1b32; cursor: pointer; } li > a { color: inherit; text-decoration: none; } main { padding-top: 50px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; } h3::before { content: \"Question #\"; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6953,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487da611a65307e78d2c20.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2ff32a1fb3582f3a00ae7ef08af1ffd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614880dc16070e093e29bc56.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614880dc16070e093e29bc56\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nReplace the top margin of the h2 elements with 60px of top padding --hints--\nYou should give the h2 a margin-top of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('h2') marginTop, '0px');\nYou should give the h2 a padding-top of 60px js\nassert equal(new __helpers CSSHelp(document) getStyle('h2') paddingTop, '60px');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614880dc16070e093e29bc56.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "da90015933d80bab518f8d786eed5cda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614880dc16070e093e29bc56.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "#1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); text-align: center; } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; flex-wrap: wrap; align-items: center; padding-inline-start: 0; margin-block: 0; height: 100%; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 02rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\n--fcc-editable-region--\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614880dc16070e093e29bc56.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5cd21662592f3c8280e34f2188a77ffd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487f703571b60899055cf9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 61487f703571b60899055cf9\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nSet the width of the section elements to 80% of their parent container Then, use margins to center the section elements, adding 10px to the bottom margin Also, ensure the section elements cannot be larger than 600px in width --hints--\nYou should use a section selector js\nassert exists(new __helpers CSSHelp(document) getStyle('section'));\nYou should give the section a width of 80% js\nassert equal(new __helpers CSSHelp(document) getStyle('section') width, '80%');\nYou should give the section a margin-top of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('section') marginTop, '0px');\nYou should give the section a margin-right of auto js\nassert equal(new __helpers CSSHelp(document) getStyle('section') marginRight, 'auto');\nYou should give the section a margin-bottom of 10px js\nassert equal(new __helpers CSSHelp(document) getStyle('section') marginBottom, '10px');\nYou should give the section a margin-left of auto js\nassert equal(new __helpers CSSHelp(document) getStyle('section') marginLeft, 'auto');\nYou should give the section a max-width of 600px js\nassert equal(new __helpers CSSHelp(document) getStyle('section') maxWidth, '600px');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487f703571b60899055cf9.md",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "854f4d13441e231c6c286d1a9a44c1e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487f703571b60899055cf9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "assert equal(new __helpers CSSHelp(document) getStyle('section') maxWidth, '600px'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n}\nh3::before {\ncontent: \"Question #\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487f703571b60899055cf9.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2a1ef5d19ca853044bedfbcf14e20dc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487f703571b60899055cf9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "align-items: center; padding-inline-start: 0; margin-block: 0; height: 100%; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 0 2rem; display: block; } nav > ul > li:hover { background-color: #dfdfe2; color: #1b1b32; cursor: pointer; } li > a { color: inherit; text-decoration: none; } main { padding-top: 50px; } --fcc-editable-region-- --fcc-editable-region-- h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; } h3::before { content: \"Question #\"; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61487f703571b60899055cf9.md",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "045fdf940f4f6819acf003202a71a7b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614883b6fa720e09fb167de9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614883b6fa720e09fb167de9\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nAdd padding to the top and left of the info elements, and set the other values to 0 --hints--\nYou should use the info selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' info'));\nYou should give info a padding-top of at least 1px js\nassert isAtLeast(Number(new __helpers CSSHelp(document) getStyle(' info') paddingTop replace(/\\D+/, '')), 1);\nYou should give info a padding-right of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle(' info') paddingRight, '0px');\nYou should give info a padding-bottom of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle(' info') paddingBottom, '0px');\nYou should give info a padding-left of at least 1px js\nassert isAtLeast(Number(new __helpers CSSHelp(document) getStyle(' info') paddingLeft replace(/\\D+/, '')), 1);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614883b6fa720e09fb167de9.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1b1d0888df1e3a398cb4f9fdcd92f294",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614883b6fa720e09fb167de9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "with the same value as the input's id True False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 04rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6970,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614883b6fa720e09fb167de9.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "92e0ae0605b0deb5a3eb60036e48c7d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61488ecfd05e290b5712e6da.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 61488ecfd05e290b5712e6da\ntitle: Step 55\nchallengeType: 0\ndashedName: step-55\n--description--\nTo make the first section look more inline, target only the input elements within info elements, and set their width to 50%, and left-align their text --hints--\nYou should use either the info input or info > input selector js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nassert exists(gs(' info input') || gs(' info > input'));\nYou should give the input elements a width of 50% js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s) width;\nconst width = gs(' info input') gs(' info > input');\nassert equal(width, '50%');\nYou should give the input elements a text-align of left js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s) textAlign;\nconst textAlign = gs(' info input') gs(' info > input');\nassert equal(textAlign, 'left');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7047,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61488ecfd05e290b5712e6da.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "60102eb47c48f515f4d4a1d8f032cbe2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61488ecfd05e290b5712e6da.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7047,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61488ecfd05e290b5712e6da.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b927dd35eb56bed1a5941eb590967eeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61488ecfd05e290b5712e6da.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "cursor: pointer; } li > a { color: inherit; text-decoration: none; } main { padding-top: 50px; } section { width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } --fcc-editable-region-- --fcc-editable-region-- h3::before { content: \"Question #\"; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7047,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\61488ecfd05e290b5712e6da.md",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9d276cd54e773e02878a6ebc529d3616",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148d99cdc7acd0c519862cb.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148d99cdc7acd0c519862cb\ntitle: Step 56\nchallengeType: 0\ndashedName: step-56\n--description--\nTarget all label elements within info elements, and set their width to 10%, and make it so they do not take up less than 55px --hints--\nYou should use either the info label or info > label selector js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nassert exists(gs(' info label') || gs(' info > label'));\nYou should give the label elements a width of 10% js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s) width;\nconst width = gs(' info label') || gs(' info > label');\nassert equal(width, '10%');\nYou should give the label elements a min-width of 55px js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s) minWidth;\nconst minWidth = gs(' info label') || gs(' info > label');\nassert equal(minWidth, '55px');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148d99cdc7acd0c519862cb.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3ff32517fa65196c3d7bb070e5ec9a95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148d99cdc7acd0c519862cb.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "with the same value as the input's id True False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 04rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n}\n--fcc-editable-region-- info input {\nwidth: 50%;\ntext-align: left;\n}\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148d99cdc7acd0c519862cb.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7a8b3e1413e958365960c2965097f77d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148d99cdc7acd0c519862cb.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "inherit; text-decoration: none; } main { padding-top: 50px; } section { width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } --fcc-editable-region-- info input { width: 50%; text-align: left; } --fcc-editable-region-- h3::before { content: \"Question #\"; }sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148d99cdc7acd0c519862cb.md",
      "source_type": "git_repo"
    },
    "token_count": 234,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ff765f91c2b676c2df24c8e41ed74a56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dc095264000dce348bf5.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148dc095264000dce348bf5\ntitle: Step 58\nchallengeType: 0\ndashedName: step-58\n--description--\nTo neaten the question-block elements, set the following CSS properties:\ncss\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n--hints--\nYou should use the question-block selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' question-block'));\nYou should give the question-block element a display of block js\nassert equal(new __helpers CSSHelp(document) getStyle(' question-block') display, 'block');\nYou should give the question-block element a width of 100% js\nassert equal(new __helpers CSSHelp(document) getStyle(' question-block') width, '100%');\nYou should give the question-block element a margin-top of 20px js\nassert equal(new __helpers CSSHelp(document) getStyle(' question-block') marginTop, '20px');\nYou should give the question-block element a padding-top of 5px js\nassert equal(new __helpers CSSHelp(document) getStyle(' question-block') paddingTop, '5px');\nYou should give the question-block element a text-align of left js\nassert equal(new __helpers CSSHelp(document) getStyle(' question-block') textAlign, 'left');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7582,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dc095264000dce348bf5.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c55e4c6cf9c507f8b692e1dc739b6488",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dc095264000dce348bf5.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "equal(new __helpers CSSHelp(document) getStyle(' question-block') textAlign, 'left'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7582,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dc095264000dce348bf5.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "481e6f35ecc16917f28f93ca914573f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dc095264000dce348bf5.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "#1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); text-align: center; } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; flex-wrap: wrap; align-items: center; padding-inline-start: 0; margin-block: 0; height: 100%; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 02rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7582,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dc095264000dce348bf5.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c414fe8c54e6cd4b9166830323b7d3db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dcaaf2e8750e6cb4501a.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148dcaaf2e8750e6cb4501a\ntitle: Step 59\nchallengeType: 0\ndashedName: step-59\n--description--\nMake the h3 elements appear as a higher priority, with the following CSS properties:\ncss\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n--hints--\nYou should use the h3 element selector js\nassert exists(new __helpers CSSHelp(document) getStyle('h3'));\nYou should give the h3 element a margin-top of 5px js\nassert equal(new __helpers CSSHelp(document) getStyle('h3') marginTop, '5px');\nYou should give the h3 element a padding-left of 15px js\nassert equal(new __helpers CSSHelp(document) getStyle('h3') paddingLeft, '15px');\nYou should give the h3 element a font-size of 1 375ren js\nassert equal(new __helpers CSSHelp(document) getStyle('h3') fontSize, '1 375rem');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dcaaf2e8750e6cb4501a.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "99a634794f9ded192beee1393bcf3cf2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dcaaf2e8750e6cb4501a.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dcaaf2e8750e6cb4501a.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "88b5d4def90e4fd5ebb0e597e46c7d0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dcaaf2e8750e6cb4501a.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "{ width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; }question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dcaaf2e8750e6cb4501a.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "c564e974c2fd53be1e1e403af31c74e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148da157cc0bd0d06df5c0a.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148da157cc0bd0d06df5c0a\ntitle: Step 57\nchallengeType: 0\ndashedName: step-57\n--description--\nTo align the input boxes with each other, create a new ruleset that targets all input and label elements within an info element and set the display property\nto inline-block Also, align the label element's text to the right --hints--\nYou should use either a info > label, info > input or info label, info input selector js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nassert exists(gs(' info > label, info > input') || gs(' info label, info input') || gs(' info > input, info > label') || gs(' info input, info label'));\nYou should give the input and label elements a display of inline-block js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s) display;\nconst display = gs(' info > label, info > input') gs(' info label, info input') gs(' info > input, info > label') gs(' info input, info label');\nassert equal(display, 'inline-block');\nYou should give the label element a text-align of right js\nconst v = (el) => getComputedStyle(el) getPropertyValue('text-align');\ndocument querySelectorAll(' info label') forEach(el => {\nassert equal(v(el), 'right');\n});\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7488,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148da157cc0bd0d06df5c0a.md",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "25ee405f7c31a2b564fba951ce857e8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148da157cc0bd0d06df5c0a.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "forEach(el => { assert equal(v(el), 'right'); }); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7488,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148da157cc0bd0d06df5c0a.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ee1b0947fb9b04738eaf3f6f2f2a71dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148da157cc0bd0d06df5c0a.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "} nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 0 2rem; display: block; } nav > ul > li:hover { background-color: #dfdfe2; color: #1b1b32; cursor: pointer; } li > a { color: inherit; text-decoration: none; } main { padding-top: 50px; } section { width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; }info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n}\n--fcc-editable-region-- info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\n}\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7488,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148da157cc0bd0d06df5c0a.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "35bac962aff9a6b0b0302563c7d8f50d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 614884c1f5d6f30ab3d78cde\ntitle: Step 54\nchallengeType: 0\ndashedName: step-54\n--description--\nGive the formrow elements top margin, and left and right padding The other padding values should be 0 Then, increase the font size for all input elements --hints--\nYou should use a formrow selector to target the formrow elements js\nassert exists(new __helpers CSSHelp(document) getStyle(' formrow'));\nYou should give the formrow a margin-top of at least 1px js\nconst val = new __helpers CSSHelp(document) getStyle(' formrow') marginTop;\nlet valInPx = 0;\nif (/^\\d+rem$/ test(val)) {\nvalInPx = remToPx(Number(val replace('rem', '')));\n} else if (/^\\d+em$/ test(val)) {\nvalInPx = emToPx(Number(val replace('em', '')));\n} else {\nvalInPx = Number(val replace('px', ''));\n}\nfunction emToPx(em) {\nreturn em * parseFloat(getComputedStyle(document querySelector(' formrow')) fontSize);\n}\nfunction remToPx(rem) {\nreturn rem * parseFloat(getComputedStyle(document documentElement) fontSize);\n}\nassert isAtLeast(valInPx, 1);\nYou should give the formrow a padding-top of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle(' formrow') paddingTop, '0px');\nYou should give the formrow a padding-right of at least 1px js\nconst val = new __helpers CSSHelp(document) getStyle(' formrow') paddingRight;\nlet valInPx = 0;\nif (/^\\d+rem$/ test(val)) {\nvalInPx = remToPx(Number(val replace('rem', '')));\n} else if (/^\\d+em$/ test(val)) {\nvalInPx = emToPx(Number(val replace('em', '')));\n} else {\nvalInPx = Number(val replace('px', ''));\n}\nfunction emToPx(em) {\nreturn em * parseFloat(getComputedStyle(document querySelector(' formrow')) fontSize);\n}\nfunction remToPx(rem) {\nreturn rem * parseFloat(getComputedStyle(document documentElement) fontSize);\n}\nassert isAtLeast(valInPx, 1);\nYou should give the formrow a padding-bottom of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle('",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9489,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "2916424a976153289afe899533105ce1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "CSSHelp(document) getStyle(' formrow') paddingRight; let valInPx = 0; if (/^\\d+rem$/ test(val)) { valInPx = remToPx(Number(val replace('rem', ''))); } else if (/^\\d+em$/ test(val)) { valInPx = emToPx(Number(val replace('em', ''))); } else { valInPx = Number(val replace('px', '')); } function emToPx(em) { return em * parseFloat(getComputedStyle(document querySelector(' formrow')) fontSize); } function remToPx(rem) { return rem * parseFloat(getComputedStyle(document documentElement) fontSize); } assert isAtLeast(valInPx, 1); You should give the formrow a padding-bottom of 0 js assert equal(new __helpers CSSHelp(document) getStyle('formrow') paddingBottom, '0px');\nYou should give the formrow a padding-left of at least 1px js\nconst val = new __helpers CSSHelp(document) getStyle(' formrow') paddingLeft;\nlet valInPx = 0;\nif (/^\\d+rem$/ test(val)) {\nvalInPx = remToPx(Number(val replace('rem', '')));\n} else if (/^\\d+em$/ test(val)) {\nvalInPx = emToPx(Number(val replace('em', '')));\n} else {\nvalInPx = Number(val replace('px', ''));\n}\nfunction emToPx(em) {\nreturn em * parseFloat(getComputedStyle(document querySelector(' formrow')) fontSize);\n}\nfunction remToPx(rem) {\nreturn rem * parseFloat(getComputedStyle(document documentElement) fontSize);\n}\nassert isAtLeast(valInPx, 1);\nYou should use an input selector to target the input elements js\nassert exists(new __helpers CSSHelp(document) getStyle('input'));\nYou should give the input a font-size greater than 13px js\nconst val = new __helpers CSSHelp(document) getStyle('input') fontSize;\nlet valInPx = 0;\nif (/^\\d+rem$/ test(val)) {\nvalInPx = remToPx(Number(val replace('rem', '')));\n} else if (/^\\d+em$/ test(val)) {\nvalInPx = emToPx(Number(val replace('em', '')));\n} else {\nvalInPx = Number(val replace('px', ''));\n}\nfunction emToPx(em) {\nreturn em * parseFloat(getComputedStyle(document querySelector('",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9489,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "eab5249862ad751e8f2e226be0fabcd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "should use an input selector to target the input elements js assert exists(new __helpers CSSHelp(document) getStyle('input')); You should give the input a font-size greater than 13px js const val = new __helpers CSSHelp(document) getStyle('input') fontSize; let valInPx = 0; if (/^\\d+rem$/ test(val)) { valInPx = remToPx(Number(val replace('rem', ''))); } else if (/^\\d+em$/ test(val)) { valInPx = emToPx(Number(val replace('em', ''))); } else { valInPx = Number(val replace('px', '')); } function emToPx(em) { return em * parseFloat(getComputedStyle(document querySelector('formrow')) fontSize);\n}\nfunction remToPx(rem) {\nreturn rem * parseFloat(getComputedStyle(document documentElement) fontSize);\n}\nassert isAtLeast(valInPx, 13);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9489,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "41047123c641e166f3936e8d899d62e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\nh3::before {\ncontent: \"Question #\";\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9489,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614884c1f5d6f30ab3d78cde.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "9ec613cd07f71debc93e0409a11d46af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dd31d210990f0fb140f8.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148dd31d210990f0fb140f8\ntitle: Step 60\nchallengeType: 0\ndashedName: step-60\n--description--\nIt is useful to see the default border around the fieldset elements, during development However, it might not be the style you want Remove the border and bottom padding on the question elements --hints--\nYou should use the question selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' question'));\nYou should give the question a border of none js\nassert equal(new __helpers CSSHelp(document) getStyle(' question') borderStyle, 'none');\nYou should give the question a padding-bottom of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle(' question') paddingBottom, '0px');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7227,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dd31d210990f0fb140f8.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6d9bcfd91b18c019fe3199e49aa47c9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dd31d210990f0fb140f8.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7227,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dd31d210990f0fb140f8.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "083efee5dfd2903d9ceff83cfb8321e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dd31d210990f0fb140f8.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "{ width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; }question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n}\n--fcc-editable-region--\n--fcc-editable-region-- sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7227,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dd31d210990f0fb140f8.md",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "033861fd9fb8fa7695953496b718f50e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148defa9c01520fb9d178a0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148defa9c01520fb9d178a0\ntitle: Step 61\nchallengeType: 0\ndashedName: step-61\n--description--\nWhile ul/li elements are great at providing bullets for list items, your radio buttons don't need them You can control what the bullets look with the list-style property For example you can turn your bullets into circles with the following:\ncss\nul {\nlist-style: circle;\n}\nRemove the default styling for the answers-list items by setting its style to none, and remove the unordered list padding --hints--\nYou should use the answers-list selector js\nassert exists(new __helpers CSSHelp(document) getStyle(' answers-list'));\nYou should give answers-list a list-style of none js\nassert equal(new __helpers CSSHelp(document) getStyle(' answers-list') listStyle, 'none');\nYou should give answers-list a padding of 0 js\nassert equal(new __helpers CSSHelp(document) getStyle(' answers-list') padding, '0px');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148defa9c01520fb9d178a0.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d913c794be685e8331ece0d0af3a9335",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148defa9c01520fb9d178a0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148defa9c01520fb9d178a0.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0b958fb9c640d958d69e7bd7360b8940",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148defa9c01520fb9d178a0.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "{ width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; }question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n}\n--fcc-editable-region--\n--fcc-editable-region-- sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7502,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148defa9c01520fb9d178a0.md",
      "source_type": "git_repo"
    },
    "token_count": 320,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "814b35e16594152e1775641474c2cc3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e0bcc13efd10f7d7a6a9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148e0bcc13efd10f7d7a6a9\ntitle: Step 63\nchallengeType: 0\ndashedName: step-63\n--description--\nSet the footer background color to #2a2a40, and use Flexbox to horizontally center the text --hints--\nYou should use the footer element selector js\nassert exists(new __helpers CSSHelp(document) getStyle('footer'));\nYou should give footer a background-color of #2a2a40 js\nassert equal(new __helpers CSSHelp(document) getStyle('footer') backgroundColor, 'rgb(42, 42, 64)');\nYou should give footer a display of flex js\nassert equal(new __helpers CSSHelp(document) getStyle('footer') display, 'flex');\nYou should give footer a justify-content of center js\nassert equal(new __helpers CSSHelp(document) getStyle('footer') justifyContent, 'center');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7548,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e0bcc13efd10f7d7a6a9.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "613e0efd1c1af72368a3250bb6d80600",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e0bcc13efd10f7d7a6a9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7548,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e0bcc13efd10f7d7a6a9.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9ca4e1393c3b16c2565e35f64e1a32d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e0bcc13efd10f7d7a6a9.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "{ width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; }question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n} answers-list {\nlist-style: none;\npadding: 0;\n}\nbutton {\ndisplay: block;\nmargin: 40px auto;\nwidth: 40%;\npadding: 15px;\nfont-size: 1 438rem;\nbackground: #d0d0d5;\nborder: 3px solid #3b3b4f;\n}\n--fcc-editable-region--\n--fcc-editable-region-- sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7548,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e0bcc13efd10f7d7a6a9.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a4b1677190f31e1148dfd8a7c5ce8e4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148dfab9b54c110577de165\ntitle: Step 62\nchallengeType: 0\ndashedName: step-62\n--description--\nGive the submit button a freeCodeCamp-style design, with the following CSS properties:\ncss\ndisplay: block;\nmargin: 40px auto;\nwidth: 40%;\npadding: 15px;\nfont-size: 1 438rem;\nbackground: #d0d0d5;\nborder: 3px solid #3b3b4f;\n--hints--\nYou should use the button element selector js\nassert exists(new __helpers CSSHelp(document) getStyle('button'));\nYou should give button a display of block js\nassert equal(new __helpers CSSHelp(document) getStyle('button') display, 'block');\nYou should give button a margin of 40px auto js\nassert equal(new __helpers CSSHelp(document) getStyle('button') margin, '40px auto');\nYou should give button a width of 40% js\nassert equal(new __helpers CSSHelp(document) getStyle('button') width, '40%');\nYou should give button a padding of 15px js\nassert equal(new __helpers CSSHelp(document) getStyle('button') padding, '15px');\nYou should give button a font-size of 1 438rem js\nassert equal(new __helpers CSSHelp(document) getStyle('button') fontSize, '1 438rem');\nYou should give button a background of #d0d0d5 js\nassert equal(new __helpers CSSHelp(document) getStyle('button') backgroundColor, 'rgb(208, 208, 213)');\nYou should give button a border of 3px solid #3b3b4f js\nassert equal(new __helpers CSSHelp(document) getStyle('button') border, '3px solid rgb(59, 59, 79)');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "ff3dfe48198b2870394c8b7169eef238",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "getStyle('button') border, '3px solid rgb(59, 59, 79)'); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f4df62281c8d242f420fb3824ebd4dfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "#1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); text-align: center; } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; flex-wrap: wrap; align-items: center; padding-inline-start: 0; margin-block: 0; height: 100%; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 02rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n} question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2f78601876cfb912c9620569733e6996",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "} formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; } question-block { text-align: left; display: block; width: 100%; margin-top: 20px; padding-top: 5px; } h3 { margin-top: 5px; padding-left: 15px; font-size: 1 375rem; } h3::before { content: \"Question #\"; } question { border: none; padding-bottom: 0; }answers-list {\nlist-style: none;\npadding: 0;\n}\n--fcc-editable-region--\n--fcc-editable-region-- sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148dfab9b54c110577de165.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "56fe809a50a9514fd82d1db9bc133c4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148e28706b34912340fd042\ntitle: Step 65\nchallengeType: 0\ndashedName: step-65\n--description--\nHorizontally center all the text within the address element, and add some padding --hints--\nYou should use the address element selector js\nassert exists(new __helpers CSSHelp(document) getStyle('address'));\nYou should give address a text-align of center js\nassert equal(new __helpers CSSHelp(document) getStyle('address') textAlign, 'center');\nYou should give address a padding-top of at least 1px js\nassert isAtLeast(Number(window getComputedStyle(document querySelector('address'), null) getPropertyValue('padding-top') replace(/\\D\\D+/, '')), 1);\nYou should give address a padding-right of at least 1px js\nassert isAtLeast(Number(window getComputedStyle(document querySelector('address'), null) getPropertyValue('padding-right') replace(/\\D\\D+/, '')), 1);\nYou should give address a padding-bottom of at least 1px js\nassert isAtLeast(Number(window getComputedStyle(document querySelector('address'), null) getPropertyValue('padding-bottom') replace(/\\D\\D+/, '')), 1);\nYou should give address a padding-left of at least 1px js\nassert isAtLeast(Number(window getComputedStyle(document querySelector('address'), null) getPropertyValue('padding-left') replace(/\\D\\D+/, '')), 1);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d0281f2127a22098b281e4fc6300c8bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "getComputedStyle(document querySelector('address'), null) getPropertyValue('padding-left') replace(/\\D\\D+/, '')), 1); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "02dc5ca98f2b38e1c2101b26c85c8587",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "#1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); text-align: center; } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; flex-wrap: wrap; align-items: center; padding-inline-start: 0; margin-block: 0; height: 100%; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 02rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n} question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "85edd11499a431d6b312f4399e975b52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "} formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; } question-block { text-align: left; display: block; width: 100%; margin-top: 20px; padding-top: 5px; } h3 { margin-top: 5px; padding-left: 15px; font-size: 1 375rem; } h3::before { content: \"Question #\"; } question { border: none; padding-bottom: 0; }answers-list {\nlist-style: none;\npadding: 0;\n}\nbutton {\ndisplay: block;\nmargin: 40px auto;\nwidth: 40%;\npadding: 15px;\nfont-size: 1 438rem;\nbackground: #d0d0d5;\nborder: 3px solid #3b3b4f;\n}\nfooter {\nbackground-color: #2a2a40;\ndisplay: flex;\njustify-content: center;\n}\nfooter,\nfooter a {\ncolor: #dfdfe2;\n}\n--fcc-editable-region--\n--fcc-editable-region-- sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8240,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e28706b34912340fd042.md",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "e4b6dd61bdd6b4d13512b802e3feb6c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614ccc21ea91ef1736b9b578.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 614ccc21ea91ef1736b9b578\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nFor this workshop, you have been provided with a basic boilerplate.\nStart this accessibility journey by providing a lang attribute to your html element. This will assist screen readers in identifying the language of the page.\nAlso, remember to link your stylesheet to the page.\n--hints--\nYou should give the html element a lang attribute. Hint: You can use the value en for English.\njs\nassert.match(code, /<html\\s+lang=('|\")[\\w\\-]+?\\1\\s*>/i);\n// TODO: This should/could be fixed in the builder.js\n// assert.notThrow(Intl.getCanonicalLocales(document.querySelector('html').lang));\nYou should have a link element in your head element.\njs\nassert.exists(document.querySelector(\"head>link\"));\nYour link element should have rel=\"stylesheet\" and href=\"styles.css\".\njs\nconst link = document.querySelector(\"head>link\");\nassert.equal(link?.getAttribute(\"rel\"), \"stylesheet\");\nconst href = link?.getAttribute(\"data-href\");\nassert.oneOf(href, [\"./styles.css\", \"styles.css\"]);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```\ncss\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1410,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\614ccc21ea91ef1736b9b578.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "af04f8e38581e18222e120f995976b56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e335c1edd512d00e4691.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148e335c1edd512d00e4691\ntitle: Step 66\nchallengeType: 0\ndashedName: step-66\n--description--\nClicking on the navigation links should jump the viewport to the relevant section However, this jumping can be disorienting for some users Select all elements, and set the scroll-behavior to smooth --hints--\nYou should use the * selector js\nassert exists(new __helpers CSSHelp(document) getStyle('*'));\nYou should give * a scroll-behavior of smooth js\nassert equal(new __helpers CSSHelp(document) getStyle('*') scrollBehavior, 'smooth');\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7488,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e335c1edd512d00e4691.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "70c671c8f7f5df240675bf443d90d2aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e335c1edd512d00e4691.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css --fcc-editable-region-- --fcc-editable-region-- body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7488,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e335c1edd512d00e4691.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f008da08b2a6291d2946fa1eba358400",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e335c1edd512d00e4691.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "{ width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; }question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n} answers-list {\nlist-style: none;\npadding: 0;\n}\nbutton {\ndisplay: block;\nmargin: 40px auto;\nwidth: 40%;\npadding: 15px;\nfont-size: 1 438rem;\nbackground: #d0d0d5;\nborder: 3px solid #3b3b4f;\n}\nfooter {\nbackground-color: #2a2a40;\ndisplay: flex;\njustify-content: center;\n}\nfooter,\nfooter a {\ncolor: #dfdfe2;\n}\naddress {\ntext-align: center;\npadding: 0 3em;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7488,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e335c1edd512d00e4691.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "30fddee815972fa87eee8d08f0b81526",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148e161ecec9511941f8833\ntitle: Step 64\nchallengeType: 0\ndashedName: step-64\n--description--\nNow, we cannot read the text Target the footer and the anchor element within to set the font color to a color of adequate contrast ratio --hints--\nYou should use the footer, footer a selector js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nassert exists(gs('footer, footer a') || gs('footer a, footer'));\nYou should set the color to a value with a contrast ratio of at least 7:1 Hint: I suggest #dfdfe2\n```js\nfunction luminance(r, g, b) {\nconst a = [r, g, b] map((v) => {\nv /= 255;\nreturn v <= 0 03928 v / 12 92 : Math pow( (v + 0 055) / 1 055, 2 4 );\n});\nreturn a[0] * 0 2126 + a[1] * 0 7152 + a[2] * 0 0722;\n}\nfunction contrast(rgb1, rgb2) {\nconst lum1 = luminance(rgb1[0], rgb1[1], rgb1[2]);\nconst lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]);\nconst brightest = Math max(lum1, lum2);\nconst darkest = Math min(lum1, lum2);\nreturn (brightest + 0 05)\n/ (darkest + 0 05);\n}\nconst backgroundColor = [42, 42, 64];\nconst foot = getComputedStyle(document querySelector('footer')) color;\nconst a = getComputedStyle(document querySelector('footer a')) color;\nconst rgbFoot = foot match(/(\\d+),\\s(\\d+),\\s(\\d+)/);\nconst rgbA = a match(/(\\d+),\\s(\\d+),\\s(\\d+)/);\nconst footColor = [rgbFoot[1], rgbFoot[2], rgbFoot[3]];\nconst aColor = [rgbA[1], rgbA[2], rgbA[3]];\nassert isAtLeast(contrast(backgroundColor, footColor), 7);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d2c20358eb30152e4610f4a16a0e84b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "rgb1[2]); const lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]); const brightest = Math max(lum1, lum2); const darkest = Math min(lum1, lum2); return (brightest + 0 05) / (darkest + 0 05); } const backgroundColor = [42, 42, 64]; const foot = getComputedStyle(document querySelector('footer')) color; const a = getComputedStyle(document querySelector('footer a')) color; const rgbFoot = foot match(/(\\d+),\\s(\\d+),\\s(\\d+)/); const rgbA = a match(/(\\d+),\\s(\\d+),\\s(\\d+)/); const footColor = [rgbFoot[1], rgbFoot[2], rgbFoot[3]]; const aColor = [rgbA[1], rgbA[2], rgbA[3]]; assert isAtLeast(contrast(backgroundColor, footColor), 7); assertisAtLeast(contrast(backgroundColor, aColor), 7);\n```\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values Select an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "429ce1388a44553dfea32934f235f7eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "False CSS Can the CSS margin property accept negative values Select an option Yes No Do you have any questions: Send freeCodeCamp San Francisco California USA ``` ```css body { background: #f5f6f7; color: #1b1b32; font-family: Helvetica; margin: 0; } header { width: 100%; height: 50px; background-color: #1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 12em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0 2rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "21f55ed4b128f9bb3e05a0d1942d0bc2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "{ width: 80%; margin: 0 auto 10px auto; max-width: 600px; } h1, h2 { font-family: Verdana, Tahoma; } h2 { border-bottom: 4px solid #dfdfe2; margin-top: 0px; padding-top: 60px; } info { padding: 10px 0 0 5px; } formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; }question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n} answers-list {\nlist-style: none;\npadding: 0;\n}\nbutton {\ndisplay: block;\nmargin: 40px auto;\nwidth: 40%;\npadding: 15px;\nfont-size: 1 438rem;\nbackground: #d0d0d5;\nborder: 3px solid #3b3b4f;\n}\nfooter {\nbackground-color: #2a2a40;\ndisplay: flex;\njustify-content: center;\n}\n--fcc-editable-region--\n--fcc-editable-region-- sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8400,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e161ecec9511941f8833.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "7387029fe832d774d5bf91149b5d3ea6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd5a93fd62bb35968adeab.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd5a93fd62bb35968adeab\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nBegin your project by giving your head element a link element for your stylesheet.\n--hints--\nYour code should have a link element.\njs\nassert.match(code, /<link/);\nYour link element should be within your head element.\njs\nassert.match(code, /<head>[\\w\\W\\s]*<link[\\w\\W\\s]*\\/?>[\\w\\W\\s]*<\\/head>/i);\nYour link element should have a rel attribute with the value stylesheet.\njs\nassert.match(code, /<link[\\s\\S]*?rel=('|\"|`)stylesheet\\1/);\nYour link element should have an href attribute with the value styles.css.\njs\nassert.match(code, /<link[\\s\\S]*?href=('|\"|`)(\\.\\/)?styles\\.css\\1/);\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nBalance Sheet\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1094,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd5a93fd62bb35968adeab.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2d231b3e2752097894cf9581707ab667",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd66c687e610436494c6f1.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd66c687e610436494c6f1\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nWithin your section element, add an h1 element with a nested span element.\n--hints--\nYour section element should have an h1 element.\njs\nassert.strictEqual(\ndocument.querySelector('section')?.children?.[0]?.localName,\n'h1'\n);\nYour h1 element should have a span element.\njs\nassert.strictEqual(\ndocument.querySelector('h1')?.children?.[0]?.localName,\n'span'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 940,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd66c687e610436494c6f1.md",
      "source_type": "git_repo"
    },
    "token_count": 158,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "83efeb9b63b6c725212de106cbadfc3d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6343fb42013d99bcd7f3.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd6343fb42013d99bcd7f3\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nWithin your body element, nest a section element within a main element.\n--hints--\nThe first element inside the body element should be your main element.\njs\nassert.strictEqual(\ndocument.querySelector('body')?.children?.[0]?.localName,\n'main'\n);\nYou should have a section element within your main element.\njs\nassert.strictEqual(\ndocument.querySelector('main')?.children?.[0]?.localName,\n'section'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 924,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6343fb42013d99bcd7f3.md",
      "source_type": "git_repo"
    },
    "token_count": 159,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d7856c4a163e52f598ba6920e4fef404",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6ab779390f49148773bb.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd6ab779390f49148773bb\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n--description--\nBelow your h1 element, create a div element. Give it an id attribute set to years. You want this particular element to be hidden from screen readers, so give it the aria-hidden attribute set to true.\n--hints--\nYou should create a new div element after your h1 element.\njs\nassert.strictEqual(\ndocument.querySelector('h1')?.nextElementSibling?.localName,\n'div'\n);\nYour new div element should have an id attribute set to years.\njs\nassert.strictEqual(document.querySelector('div')?.getAttribute('id'), 'years');\nYour new div element should have the aria-hidden attribute set to true.\njs\nassert.strictEqual(\ndocument.querySelector('div')?.getAttribute('aria-hidden'),\n'true'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1433,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6ab779390f49148773bb.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c91bee6dae80b062ec8d96759826d2f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6b7c83dbf54a08cf0498.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd6b7c83dbf54a08cf0498\ntitle: Step 6\nchallengeType: 0\ndashedName: step-6\n--description--\nWithin your div element, add three span elements. Give each of them a class attribute set to year, and add the following text (in order): 2019, 2020, and 2021.\n--hints--\nYour div element should have three span elements.\njs\nassert.lengthOf(document.querySelector('div')?.children, 3);\nEach span element should have a class attribute set to year.\njs\nconst spans = [...document.querySelector('div')?.children];\nspans.forEach(span => assert.isTrue(span?.classList?.contains('year')));\nYour first span should have the text 2019.\njs\nassert.strictEqual(\ndocument.querySelector('div')?.children?.[0]?.textContent,\n'2019'\n);\nYour second span should have the text 2020.\njs\nassert.strictEqual(\ndocument.querySelector('div')?.children?.[1]?.textContent,\n'2020'\n);\nYour third span should have the text 2021.\njs\nassert.strictEqual(\ndocument.querySelector('div')?.children?.[2]?.textContent,\n'2021'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6b7c83dbf54a08cf0498.md",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5975faa1444b1a5130254bf18346eae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd67a656743144844941cb.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd67a656743144844941cb\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nScreen readers announce HTML elements based on the document flow. We will eventually want the balance sheet to have a heading of \"Balance Sheet\" and a subheading of \"AcmeWidgetCorp\". However, this order does not make sense if announced by a screen reader.\nGive your existing span the class attribute set to flex, and add two span elements within it. Give the first the text AcmeWidgetCorp. Give the second the text Balance Sheet. You will use CSS to reverse the order of the text on the page, but the HTML order will make more sense for a screen reader.\n--hints--\nYour existing span element should have the class attribute set to flex.\njs\nassert.isTrue(\ndocument.querySelector('h1')?.children?.[0]?.classList?.contains('flex')\n);\nYour existing span element should have two new span elements within it.\njs\nassert.strictEqual(\ndocument.querySelector('.flex')?.children?.[0]?.localName,\n'span'\n);\nassert.strictEqual(\ndocument.querySelector('.flex')?.children?.[1]?.localName,\n'span'\n);\nYour new span elements should not have a class attribute.\njs\nassert.isEmpty(document.querySelector('.flex')?.children?.[0]?.classList);\nassert.isEmpty(document.querySelector('.flex')?.children?.[1]?.classList);\nYour first new span element should have the text AcmeWidgetCorp.\njs\nassert.strictEqual(\ndocument.querySelector('.flex')?.children?.[0]?.textContent,\n'AcmeWidgetCorp'\n);\nYour second new span element should have the text Balance Sheet.\njs\nassert.strictEqual(\ndocument.querySelector('.flex')?.children?.[1]?.textContent,\n'Balance Sheet'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2233,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd67a656743144844941cb.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8dc7047091849a7e8a612b6c01e84c8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6cc9475a784b7776233e.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd6cc9475a784b7776233e\ntitle: Step 7\nchallengeType: 0\ndashedName: step-7\n--description--\nBelow your existing div element, add a new div element with a class set to table-wrap. This will be the container for your tables.\nWithin that, add three table elements. You will be using CSS to style these into a single table, but using separate tables will help screen readers understand the document flow.\n--hints--\nYou should create a new div element.\njs\nassert.lengthOf(document.querySelectorAll('div'), 2);\nYour new div element should have the class set to table-wrap.\njs\nassert.strictEqual(document.querySelector('.table-wrap')?.localName, 'div');\nYour .table-wrap element should come after your existing div.\njs\nassert.isTrue(\ndocument.querySelectorAll('div')?.[1]?.classList?.contains('table-wrap')\n);\nYour .table-wrap element should have three table elements.\njs\nconst children = [...(document.querySelector('.table-wrap')?.children ?? [])];\nassert.lengthOf(children, 3);\nchildren.forEach(child => assert.strictEqual(child?.localName, 'table'));\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1900,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd6cc9475a784b7776233e.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "991643ff6ac2c368bd93c9826ff46502",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6351e7a8684bf5377c4ee7f7.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6351e7a8684bf5377c4ee7f7\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nAlthough not required for label elements with a nested input, it is still best-practice to explicitly link a label with its corresponding input element Now, add a for attribute to each of your four labels that links the label to its corresponding radio input --hints--\nYou should give the first label a for attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [0] htmlFor);\nYou should give the first label a for attribute matching the id of its input element js\nconst htmlFor = document querySelectorAll('ul answers-list > li > label') [0] htmlFor;\nassert equal(htmlFor, document querySelectorAll('ul answers-list > li > label > input') [0] id);\nYou should give the second label a for attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [1] htmlFor);\nYou should give the second label a for attribute matching the id of its input element js\nconst htmlFor = document querySelectorAll('ul answers-list > li > label') [1] htmlFor;\nassert equal(htmlFor, document querySelectorAll('ul answers-list > li > label > input') [1] id);\nYou should give the third label a for attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [2] htmlFor);\nYou should give the third label a for attribute matching the id of its input element js\nconst htmlFor = document querySelectorAll('ul answers-list > li > label') [2] htmlFor;\nassert equal(htmlFor, document querySelectorAll('ul answers-list > li > label > input') [2] id);\nYou should give the fourth label a for attribute js\nassert notEmpty(document querySelectorAll('ul answers-list > li > label') [3] htmlFor);\nYou should give the fourth label a for attribute matching the id of its input element js\nconst htmlFor = document querySelectorAll('ul answers-list > li > label') [3] htmlFor;\nassert equal(htmlFor, document querySelectorAll('ul answers-list > li > label > input') [3]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6351e7a8684bf5377c4ee7f7.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "57ec97c6d625973d07eac6f36fa1657a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6351e7a8684bf5377c4ee7f7.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "[2] htmlFor; assert equal(htmlFor, document querySelectorAll('ul answers-list > li > label > input') [2] id); You should give the fourth label a for attribute js assert notEmpty(document querySelectorAll('ul answers-list > li > label') [3] htmlFor); You should give the fourth label a for attribute matching the id of its input element js const htmlFor = document querySelectorAll('ul answers-list > li > label') [3] htmlFor; assert equal(htmlFor, document querySelectorAll('ul answers-list > li > label > input') [3]id);\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\n--fcc-editable-region--\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\n--fcc-editable-region--\nCSS\n```\n```css\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6351e7a8684bf5377c4ee7f7.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "94fb2310a925ffb2098542581b63c865",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd70336ebb3e4f62ee81ba.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd70336ebb3e4f62ee81ba\ntitle: Step 8\nchallengeType: 0\ndashedName: step-8\n--description--\nHTML tables use the caption element to describe what the table is about. The caption element should always be the first child of a table, but can be positioned with the caption-side CSS property.\nAdd a caption element to your first table, and give it the text Assets.\n--hints--\nYour first table element should have a caption element.\njs\nassert.strictEqual(\ndocument.querySelector('table')?.children?.[0]?.localName,\n'caption'\n);\nYour caption element should have the text Assets.\njs\nassert.strictEqual(document.querySelector('caption')?.textContent.trim(), 'Assets');\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1627,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd70336ebb3e4f62ee81ba.md",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f347f6585219d2135ad5bba6e13f1c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd719788899952e67692b9.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd719788899952e67692b9\ntitle: Step 9\nchallengeType: 0\ndashedName: step-9\n--description--\nThe thead and tbody elements are used to indicate which portion of your table is the header, and which portion contains the primary data or content.\nAdd a thead and tbody to your first table, below the caption element.\n--hints--\nYour first table element should have a thead element.\njs\nconst table = document.querySelectorAll('table')?.[0];\nassert.isNotNull(table?.querySelector('thead'));\nYour first table element should have a tbody element.\njs\nconst table = document.querySelectorAll('table')?.[0];\nconst tbody = table?.querySelector('tbody');\nassert.isNotNull(tbody);\nYour thead element should be immediately below your caption element.\njs\nassert.strictEqual(\ndocument.querySelector('caption')?.nextElementSibling?.localName,\n'thead'\n);\nYour tbody element should be immediately below your thead element.\njs\nassert.strictEqual(\ndocument.querySelector('thead')?.nextElementSibling?.localName,\n'tbody'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\n--fcc-editable-region--\nAssets\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2032,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd719788899952e67692b9.md",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fb8dffafb0771792b3670b810f118ce6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd71d596e8f253b9408b39.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd71d596e8f253b9408b39\ntitle: Step 10\nchallengeType: 0\ndashedName: step-10\n--description--\nThe tr element is used to indicate a table row. Add a tr element within your thead element. In your new tr element, add a td element, followed by three th elements.\nThe td element indicates a data cell, while the th element indicates a header cell.\n--hints--\nYour thead element should have a tr element.\njs\nassert.strictEqual(\ndocument.querySelector('thead')?.children?.[0]?.localName,\n'tr'\n);\nYour tr element should have a td element as the first child.\njs\nassert.strictEqual(\ndocument.querySelector('tr')?.children?.[0]?.localName,\n'td'\n);\nYour tr element should have three th elements, after the td element.\njs\nassert.strictEqual(\ndocument.querySelector('tr')?.children?.[1]?.localName,\n'th'\n);\nassert.strictEqual(\ndocument.querySelector('tr')?.children?.[2]?.localName,\n'th'\n);\nassert.strictEqual(\ndocument.querySelector('tr')?.children?.[3]?.localName,\n'th'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd71d596e8f253b9408b39.md",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "89871ed437adf505fc37bdbe3704d7d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd75ea7f663457612dba02.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd75ea7f663457612dba02\ntitle: Step 11\nchallengeType: 0\ndashedName: step-11\n--description--\nWithin each of your new th elements, nest a span element with the class set to sr-only year. Give them the following text (in order): 2019, 2020, and 2021.\nGive your third th element the class attribute set to current.\nLeave the td element empty. This element exists only to ensure your table has a four-column layout and associate the headers with the correct columns.\n--hints--\nEach of your th elements should have a span element.\njs\nconst ths = [...document.querySelectorAll('th')];\nths?.forEach(th => {\nassert.lengthOf(th?.children, 1);\nassert.strictEqual(th?.children?.[0]?.localName, 'span');\n});\nEach of your new span elements should have the class attribute set to sr-only year.\njs\nconst ths = [...document.querySelectorAll('th')];\nths?.forEach(th => {\nassert.isTrue(th?.children?.[0]?.classList?.contains('sr-only'));\nassert.isTrue(th?.children?.[0]?.classList?.contains('year'));\n});\nYour first span element should have the text 2019.\njs\nassert.strictEqual(\ndocument.querySelectorAll('th')?.[0]?.children?.[0]?.textContent,\n'2019'\n);\nYour second span element should have the text 2020.\njs\nassert.strictEqual(\ndocument.querySelectorAll('th')?.[1]?.children?.[0]?.textContent,\n'2020'\n);\nYour third span element should have the text 2021.\njs\nassert.strictEqual(\ndocument.querySelectorAll('th')?.[2]?.children?.[0]?.textContent,\n'2021'\n);\nYour third th element should have the class set to current.\njs\nassert.isTrue(\ndocument\n.querySelector('table')\n?.querySelectorAll('th')?.[2]\n?.classList?.contains('current')\n);\nYour td element should be empty.\njs\nconst table = document.querySelector('table');\nconst tableData = table.querySelectorAll('td')?.[0];\nassert.strictEqual(tableData?.textContent, '');\nassert.isEmpty(tableData?.children);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3161,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd75ea7f663457612dba02.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b2a0b44cfbf29c8f8ad45c8946bba62d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7648a7ba2e5882436831.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd7648a7ba2e5882436831\ntitle: Step 12\nchallengeType: 0\ndashedName: step-12\n--description--\nWithin your tbody element, add four tr elements. Give the first three a class attribute set to data, and the fourth a class attribute set to total.\n--hints--\nYour tbody element should have four tr elements.\njs\nconst children = [...document.querySelector('tbody')?.children];\nassert.lengthOf(children, 4);\nchildren.forEach(child => assert.strictEqual(child?.localName, 'tr'));\nYour first three tr elements should have the class attribute set to data.\njs\nconst children = [...document.querySelector('tbody')?.children];\nchildren.forEach((child, index) => {\nif (index < 3) {\nassert.isTrue(child?.classList?.contains('data'));\n}\n});\nYour fourth tr element should have the class attribute set to total.\njs\nconst children = [...document.querySelector('tbody')?.children];\nassert.isTrue(children?.[3]?.classList?.contains('total'));\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2327,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7648a7ba2e5882436831.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f7a4c884c086ea3b6d8337ecf6916776",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd778081276b59d59abad6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd778081276b59d59abad6\ntitle: Step 13\nchallengeType: 0\ndashedName: step-13\n--description--\nIn your first tr, add a th element with the text Cash This is the cash we currently have on hand Wrap all of that text except Cash in a span element with the class set to description Following that, add three td elements with the following text (in order): $25, $30, $28 Give the third td element a class attribute set to current --hints--\nYour first tr should have a th element js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Cash This is the cash we currently have on hand js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert strictEqual(\ntableRow querySelector('th') innerText,\n'Cash This is the cash we currently have on hand '\n);\nYou should wrap the text This is the cash we currently have on hand in a span element js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'This is the cash we currently have on hand '\n);\nYour span element should have the class attribute set to description js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('description')\n);\nYou should have three td elements js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert lengthOf(tableRow querySelectorAll('td'), 3);\nYour first td element should have the text $25 js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$25');\nYour second td element should have the text $30 js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4387,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd778081276b59d59abad6.md",
      "source_type": "git_repo"
    },
    "token_count": 516,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fce71b5d9dd4d7cd684c5565aec789be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd778081276b59d59abad6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "contains('description') ); You should have three td elements js const tableBody = document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [0]; assert lengthOf(tableRow querySelectorAll('td'), 3); Your first td element should have the text $25 js const tableBody = document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [0]; assert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$25'); Your second td element should have the text $30 js const tableBody = document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [0]; assert strictEqual(tableRow querySelectorAll('td') [1]textContent, '$30');\nYour third td element should have the text $28 js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$28');\nYour third td element should have the class set to current js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [0];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4387,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd778081276b59d59abad6.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b48002933e00ac03e3158197ea243add",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd77f7ad2aeb5ae34d07d6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd77f7ad2aeb5ae34d07d6\ntitle: Step 14\nchallengeType: 0\ndashedName: step-14\n--description--\nIn your second tr element, add a th element with the text Checking Our primary transactional account Wrap that text, except for Checking, in a span element with the class attribute set to description Following that, add three td elements with the following text (in order): $54, $56, $53 Give the third td element a class attribute set to current --hints--\nYour second tr should have a th element js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Checking Our primary transactional account js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert strictEqual(\ntableRow querySelector('th') innerText,\n'Checking Our primary transactional account '\n);\nYou should wrap the text Our primary transactional account in a span element js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'Our primary transactional account '\n);\nYour span element should have the class attribute set to description js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('description')\n);\nYou should have three td elements js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert lengthOf(tableRow querySelectorAll('td'), 3);\nYour first td element should have the text $54 js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$54');\nYour second td element should have the text $56 js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$56');\nYour third td element should have the text $53",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd77f7ad2aeb5ae34d07d6.md",
      "source_type": "git_repo"
    },
    "token_count": 520,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "454cef64b67131cd5c0874c562ff0daf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd77f7ad2aeb5ae34d07d6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "= document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [1]; assert lengthOf(tableRow querySelectorAll('td'), 3); Your first td element should have the text $54 js const tableBody = document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [1]; assert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$54'); Your second td element should have the text $56 js const tableBody = document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [1]; assert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$56'); Your third td element should have the text $53js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$53');\nYour third td element should have the class set to current js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [1];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4602,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd77f7ad2aeb5ae34d07d6.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ffb1e939b54349a95da97867edceae9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "id: 6148e41c728f65138addf9cc\ntitle: Step 67\nchallengeType: 0\ndashedName: step-67\n--description--\nFinally, certain types of motion-based animations can cause discomfort for some users In particular, people with vestibular disorders have sensitivity to certain motion triggers The @media at-rule has a media feature called prefers-reduced-motion to set CSS based on the user's animation preferences It can take one of the following values:\nreduce\nno-preference\nCSS\n@media (feature: value) {\nselector {\nstyles\n}\n}\nYou will learn more about this feature in a future lesson For now, wrap the style rule that sets scroll-behavior: smooth within a @media at-rule with the media feature prefers-reduced-motion having no-preference set as the value Well done You have completed the Accessibility Quiz practice project --hints--\nYou should have one @media (prefers-reduced-motion: no-preference) rule js\nassert lengthOf(new __helpers CSSHelp(document) getRuleListsWithinMedia('(prefers-reduced-motion: no-preference)'), 1);\nYou should wrap the existing * rule within the @media rule js\nassert equal(new __helpers CSSHelp(document) getRuleListsWithinMedia('(prefers-reduced-motion: no-preference)') find(x => x selectorText === '*') style scrollBehavior, 'smooth');\nassert notExists(new __helpers CSSHelp(document) getStyle('*'));\n--seed--\n--seed-contents--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "8c3d063f326e1f9d58ca46a60eabade8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "scrollBehavior, 'smooth'); assert notExists(new __helpers CSSHelp(document) getStyle('*')); --seed-- --seed-contents-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\n--fcc-editable-region--\n* {\nscroll-behavior: smooth;\n}\n--fcc-editable-region--\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "7183eefb91cdcb6e9eaf6449a7c1d536",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "#1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); text-align: center; } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; flex-wrap: wrap; align-items: center; padding-inline-start: 0; margin-block: 0; height: 100%; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 02rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n} question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "77b68d5bdd8fa645d88e816998e47cdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "} formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; } question-block { text-align: left; display: block; width: 100%; margin-top: 20px; padding-top: 5px; } h3 { margin-top: 5px; padding-left: 15px; font-size: 1 375rem; } h3::before { content: \"Question #\"; } question { border: none; padding-bottom: 0; }answers-list {\nlist-style: none;\npadding: 0;\n}\nbutton {\ndisplay: block;\nmargin: 40px auto;\nwidth: 40%;\npadding: 15px;\nfont-size: 1 438rem;\nbackground: #d0d0d5;\nborder: 3px solid #3b3b4f;\n}\nfooter {\nbackground-color: #2a2a40;\ndisplay: flex;\njustify-content: center;\n}\nfooter,\nfooter a {\ncolor: #dfdfe2;\n}\naddress {\ntext-align: center;\npadding: 0 3em;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```\n--solutions--\n```html\nAccessibility Quiz\nHTML/CSS Quiz\nINFO\nHTML\nCSS\nStudent Info\nName:\nEmail:\nDate of Birth:\nHTML\nQuestion1\nThe legend element represents a caption for the content of its\nparent fieldset element\nTrue\nFalse\nQuestion2\nA label element nesting an input element is required to have a\nfor attribute with the same value as the input's id\nTrue\nFalse\nCSS\nCan the CSS margin property accept negative values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "98eeb81f4e38b33a6ba01c09ff003cb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "0, 0); white-space: nowrap; border: 0; } ``` --solutions-- ```html Accessibility Quiz HTML/CSS Quiz INFO HTML CSS Student Info Name: Email: Date of Birth: HTML Question1 The legend element represents a caption for the content of its parent fieldset element True False Question2 A label element nesting an input element is required to have a for attribute with the same value as the input's id True False CSS Can the CSS margin property accept negative valuesSelect an option\nYes\nNo\nDo you have any questions:\nSend\nfreeCodeCamp\nSan Francisco\nCalifornia\nUSA\n```\n```css\n@media (prefers-reduced-motion: no-preference) {\n* {\nscroll-behavior: smooth;\n}\n}\nbody {\nbackground: #f5f6f7;\ncolor: #1b1b32;\nfont-family: Helvetica;\nmargin: 0;\n}\nheader {\nwidth: 100%;\nheight: 50px;\nbackground-color: #1b1b32;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nlogo {\nwidth: max(10rem, 18vw);\nbackground-color: #0a0a23;\naspect-ratio: 35 / 4;\npadding: 0 4rem;\n}\nh1 {\ncolor: #f1be32;\nfont-size: min(5vw, 1 2em);\ntext-align: center;\n}\nnav {\nwidth: 50%;\nmax-width: 300px;\nheight: 50px;\n}\nnav > ul {\ndisplay: flex;\njustify-content: space-evenly;\nflex-wrap: wrap;\nalign-items: center;\npadding-inline-start: 0;\nmargin-block: 0;\nheight: 100%;\n}\nnav > ul > li {\ncolor: #dfdfe2;\nmargin: 0 0 2rem;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "353c4dbf8631030592c724f4e6293f96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "#1b1b32; display: flex; justify-content: space-between; align-items: center; } logo { width: max(10rem, 18vw); background-color: #0a0a23; aspect-ratio: 35 / 4; padding: 0 4rem; } h1 { color: #f1be32; font-size: min(5vw, 1 2em); text-align: center; } nav { width: 50%; max-width: 300px; height: 50px; } nav > ul { display: flex; justify-content: space-evenly; flex-wrap: wrap; align-items: center; padding-inline-start: 0; margin-block: 0; height: 100%; } nav > ul > li { color: #dfdfe2; margin: 0 0 2rem; padding: 02rem;\ndisplay: block;\n}\nnav > ul > li:hover {\nbackground-color: #dfdfe2;\ncolor: #1b1b32;\ncursor: pointer;\n}\nli > a {\ncolor: inherit;\ntext-decoration: none;\n}\nmain {\npadding-top: 50px;\n}\nsection {\nwidth: 80%;\nmargin: 0 auto 10px auto;\nmax-width: 600px;\n}\nh1,\nh2 {\nfont-family: Verdana, Tahoma;\n}\nh2 {\nborder-bottom: 4px solid #dfdfe2;\nmargin-top: 0px;\npadding-top: 60px;\n} info {\npadding: 10px 0 0 5px;\n} formrow {\nmargin-top: 30px;\npadding: 0px 15px;\n}\ninput {\nfont-size: 1rem;\n} info label, info input {\ndisplay: inline-block;\n} info input {\nwidth: 50%;\ntext-align: left;\n} info label {\nwidth: 10%;\nmin-width: 55px;\ntext-align: right;\n} question-block {\ntext-align: left;\ndisplay: block;\nwidth: 100%;\nmargin-top: 20px;\npadding-top: 5px;\n}\nh3 {\nmargin-top: 5px;\npadding-left: 15px;\nfont-size: 1 375rem;\n}\nh3::before {\ncontent: \"Question #\";\n} question {\nborder: none;\npadding-bottom: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "064db97016dd6dff43fa741ed0ade76a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
    "source_type": "git_repo",
    "title": "Accessibility Quiz",
    "content": "} formrow { margin-top: 30px; padding: 0px 15px; } input { font-size: 1rem; } info label, info input { display: inline-block; } info input { width: 50%; text-align: left; } info label { width: 10%; min-width: 55px; text-align: right; } question-block { text-align: left; display: block; width: 100%; margin-top: 20px; padding-top: 5px; } h3 { margin-top: 5px; padding-left: 15px; font-size: 1 375rem; } h3::before { content: \"Question #\"; } question { border: none; padding-bottom: 0; }answers-list {\nlist-style: none;\npadding: 0;\n}\nbutton {\ndisplay: block;\nmargin: 40px auto;\nwidth: 40%;\npadding: 15px;\nfont-size: 1 438rem;\nbackground: #d0d0d5;\nborder: 3px solid #3b3b4f;\n}\nfooter {\nbackground-color: #2a2a40;\ndisplay: flex;\njustify-content: center;\n}\nfooter,\nfooter a {\ncolor: #dfdfe2;\n}\naddress {\ntext-align: center;\npadding: 0 3em;\n} sr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-accessibility-quiz\\6148e41c728f65138addf9cc.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "15cc8600ce06d6271fbc40a238e1ca46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd78621573aa5e8b512f5e.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd78621573aa5e8b512f5e\ntitle: Step 15\nchallengeType: 0\ndashedName: step-15\n--description--\nIn your third tr element, add a th element with the text Savings Funds set aside for emergencies Wrap that text, except for Savings, in a span element with the class attribute set to description Following that, add three td elements with the following text (in order): $500, $650, $728 Give the third td element a class attribute set to current --hints--\nYour third tr should have a th element js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Savings Funds set aside for emergencies js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert strictEqual(\ntableRow querySelector('th') innerText,\n'Savings Funds set aside for emergencies '\n);\nYou should wrap the text Funds set aside for emergencies in a span element js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'Funds set aside for emergencies '\n);\nYour span element should have the class attribute set to description js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('description')\n);\nYou should have three td elements js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert lengthOf(tableRow querySelectorAll('td'), 3);\nYour first td element should have the text $500 js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$500');\nYour second td element should have the text $650 js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$650');\nYour third td element should have the text $728 js\nconst tableBody = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4815,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd78621573aa5e8b512f5e.md",
      "source_type": "git_repo"
    },
    "token_count": 526,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d7bc905ff4e4e7fc2b91f87e96cdd521",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd78621573aa5e8b512f5e.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "= tableBody querySelectorAll('tr') [2]; assert lengthOf(tableRow querySelectorAll('td'), 3); Your first td element should have the text $500 js const tableBody = document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [2]; assert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$500'); Your second td element should have the text $650 js const tableBody = document querySelector('tbody'); const tableRow = tableBody querySelectorAll('tr') [2]; assert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$650'); Your third td element should have the text $728 js const tableBody = documentquerySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$728');\nYour third td element should have the class set to current js\nconst tableBody = document querySelector('tbody');\nconst tableRow = tableBody querySelectorAll('tr') [2];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4815,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd78621573aa5e8b512f5e.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "798b90295717f09650ee80f9c3592d43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd8e491324ce717da97ffe.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd8e491324ce717da97ffe\ntitle: Step 18\nchallengeType: 0\ndashedName: step-18\n--description--\nWithin your thead, add a tr. Inside that, add a td and three th elements.\n--hints--\nYour thead element should have a tr element.\njs\nconst thead = document.querySelectorAll('table')?.[1]?.querySelector('thead');\nassert.strictEqual(thead?.children?.[0]?.localName, 'tr');\nYour tr element should have a td element as the first child.\njs\nconst trElement = document.querySelectorAll('table')?.[1]?.querySelector('tr');\nassert.strictEqual(trElement?.children?.[0]?.localName, 'td');\nYour tr element should have three th elements, after the td element.\njs\nconst trElement = document.querySelectorAll('table')?.[1]?.querySelector('tr');\nassert.strictEqual(trElement?.children?.[1]?.localName, 'th');\nassert.strictEqual(trElement?.children?.[2]?.localName, 'th');\nassert.strictEqual(trElement?.children?.[3]?.localName, 'th');\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\n--fcc-editable-region--\nLiabilities\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3454,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd8e491324ce717da97ffe.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4bc054982d7787147d27053c471791ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7b3fcaa5406257abc5d1.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd7b3fcaa5406257abc5d1\ntitle: Step 17\nchallengeType: 0\ndashedName: step-17\n--description--\nTime to move on to your second table. Start by giving it a caption element set to Liabilities. Then add your thead and tbody.\n--hints--\nYour second table element should have a caption element.\njs\nassert.strictEqual(\ndocument.querySelectorAll('table')?.[1]?.children?.[0]?.localName,\n'caption'\n);\nYour caption element should have the text Liabilities.\njs\nassert.strictEqual(\ndocument.querySelectorAll('table')?.[1]?.querySelector('caption')\n?.textContent.trim(),\n'Liabilities'\n);\nYour second table element should have a thead element.\njs\nassert.isNotNull(\ndocument.querySelectorAll('table')?.[1]?.querySelector('thead')\n);\nYour second table element should have a tbody element.\njs\nassert.isNotNull(\ndocument.querySelectorAll('table')?.[1]?.querySelector('tbody')\n);\nYour thead element should be immediately below your caption element.\njs\nconst table = document.querySelectorAll('table')?.[1];\nassert.strictEqual(\ntable?.querySelector('caption')?.nextElementSibling?.localName,\n'thead'\n);\nYour tbody element should be immediately below your thead element.\njs\nconst table = document.querySelectorAll('table')?.[1];\nassert.strictEqual(\ntable?.querySelector('thead')?.nextElementSibling?.localName,\n'tbody'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3777,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7b3fcaa5406257abc5d1.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "91a97784be5fcef52c8739cd4d9f231e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9126aa72a474301fc49f.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd9126aa72a474301fc49f\ntitle: Step 20\nchallengeType: 0\ndashedName: step-20\n--description--\nWithin the tbody element, add four tr elements. Give the first three the class attribute set to data, and the fourth the class attribute set to total.\n--hints--\nYour tbody element should have four tr elements.\njs\nconst children = [\n...document.querySelectorAll('table')?.[1]?.querySelector('tbody')?.children\n];\nassert.lengthOf(children, 4);\nchildren.forEach(child => assert.strictEqual(child?.localName, 'tr'));\nYour first three tr elements should have the class attribute set to data.\njs\nconst children = [\n...document.querySelectorAll('table')?.[1]?.querySelector('tbody')?.children\n];\nchildren.forEach((child, index) => {\nif (index < 3) {\nassert.isTrue(child?.classList?.contains('data'));\n}\n});\nYour fourth tr element should have the class attribute set to total.\njs\nconst children = [\n...document.querySelectorAll('table')?.[1]?.querySelector('tbody')?.children\n];\nassert.isTrue(children?.[3]?.classList?.contains('total'));\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\n--fcc-editable-region--\nLiabilities\n2019\n2020\n2021\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9126aa72a474301fc49f.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "48c88f5579bbba3614809208b2b682a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7a160ed17960e971f28b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd7a160ed17960e971f28b\ntitle: Step 16\nchallengeType: 0\ndashedName: step-16\n--description--\nIn your fourth tr element, add a th element with the text Total Assets Wrap the text Assets in a span element with the class attribute set to sr-only Following that, add three td elements with the following text (in order): $579, $736, $809 Give the third td element a class attribute set to current --hints--\nYour fourth tr should have a th element js\nassert exists(\ndocument querySelector('tbody') querySelectorAll('tr') [3] querySelector('th')\n);\nYour th element should have the text Total Assets js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst tableHeader = tableRow querySelector('th');\nassert strictEqual(tableHeader innerText trim(), 'Total Assets');\nYou should wrap the text Assets in a span element js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst span = tableRow querySelector('th > span');\nassert strictEqual(span textContent trim(), 'Assets');\nYour span element should have the class attribute set to sr-only js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst span = tableRow querySelector('th > span');\nassert isTrue(span classList contains('sr-only'));\nYou should have three td elements js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst tableDatas = tableRow querySelectorAll('td');\nassert lengthOf(tableDatas, 3);\nYour first td element should have the text $579 js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst tableData = tableRow querySelectorAll('td') [0];\nassert strictEqual(tableData textContent trim(), '$579');\nYour second td element should have the text $736 js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst tableData = tableRow querySelectorAll('td') [1];\nassert strictEqual(tableData textContent trim(), '$736');\nYour third td element should have the text $809 js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst tableData = tableRow querySelectorAll('td') [2];\nassert strictEqual(tableData textContent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7a160ed17960e971f28b.md",
      "source_type": "git_repo"
    },
    "token_count": 523,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3763d02594503462100dc6c40050d605",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7a160ed17960e971f28b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "the text $579 js const tableRow = document querySelector('tbody') querySelectorAll('tr') [3]; const tableData = tableRow querySelectorAll('td') [0]; assert strictEqual(tableData textContent trim(), '$579'); Your second td element should have the text $736 js const tableRow = document querySelector('tbody') querySelectorAll('tr') [3]; const tableData = tableRow querySelectorAll('td') [1]; assert strictEqual(tableData textContent trim(), '$736'); Your third td element should have the text $809 js const tableRow = document querySelector('tbody') querySelectorAll('tr') [3]; const tableData = tableRow querySelectorAll('td') [2]; assert strictEqual(tableData textContenttrim(), '$809');\nYour third td element should have the class attribute set to current js\nconst tableRow = document querySelector('tbody') querySelectorAll('tr') [3];\nconst tableData = tableRow querySelectorAll('td') [2];\nassert isTrue(tableData classList contains('current'));\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd7a160ed17960e971f28b.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8c99aa89d2078cd061b6fb0732df83f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd8fd08af43372f02952d0.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd8fd08af43372f02952d0\ntitle: Step 19\nchallengeType: 0\ndashedName: step-19\n--description--\nGive each th element a span element with the class set to sr-only and the following text, in order: 2019, 2020, and 2021 --hints--\nEach of your th elements should have a span element js\nconst ths = [ document querySelectorAll('table') [1] querySelectorAll('th')\n];\nths forEach(th => {\nassert lengthOf(th children, 1);\nassert strictEqual(th children [0] localName, 'span');\n});\nEach of your new span elements should have the class attribute set to sr-only js\nconst ths = [ document querySelectorAll('table') [1] querySelectorAll('th')\n];\nths forEach(th => {\nassert isTrue(th children [0] classList contains('sr-only'));\n});\nYour first span element should have the text 2019 js\nconst table = document querySelectorAll('table') [1];\nconst th = table querySelectorAll('th') [0];\nassert strictEqual(th children [0] textContent, '2019');\nYour second span element should have the text 2020 js\nconst table = document querySelectorAll('table') [1];\nconst th = table querySelectorAll('th') [1];\nassert strictEqual(th children [0] textContent, '2020');\nYour third span element should have the text 2021 js\nconst table = document querySelectorAll('table') [1];\nconst th = table querySelectorAll('th') [2];\nassert strictEqual(th children [0] textContent, '2021');\nYour td element should be empty js\nconst table = document querySelectorAll('table') [1];\nconst td = table querySelectorAll('td') [0];\nassert strictEqual(td textContent, '');\nassert lengthOf(td children, 0);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4361,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd8fd08af43372f02952d0.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e3e42d3926501938e178cffd56e71a5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd8fd08af43372f02952d0.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "[2]; assert strictEqual(th children [0] textContent, '2021'); Your td element should be empty js const table = document querySelectorAll('table') [1]; const td = table querySelectorAll('td') [0]; assert strictEqual(td textContent, ''); assert lengthOf(td children, 0); --seed-- --seed-contents-- ```html Balance Sheet AcmeWidgetCorp Balance Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\n--fcc-editable-region--\nLiabilities\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4361,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd8fd08af43372f02952d0.md",
      "source_type": "git_repo"
    },
    "token_count": 181,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1d0b0ff28d904f0b76eb07e9f2fa2174",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd933ba685de776a94997e.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd933ba685de776a94997e\ntitle: Step 21\nchallengeType: 0\ndashedName: step-21\n--description--\nWithin the first tr, add a th element with the text Loans The outstanding balance on our startup loan Wrap that text, except for Loans, within a span element with the class set to description Add three td elements below that, and give them the following text, in order: $500, $250, and $0 Give the third td element a class set to current --hints--\nYour first tr should have a th element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Loans The outstanding balance on our startup loan js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(\ntableRow querySelector('th') innerText,\n'Loans The outstanding balance on our startup loan '\n);\nYou should wrap the text The outstanding balance on our startup loan in a span element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'The outstanding balance on our startup loan '\n);\nYour span element should have the class attribute set to description js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('description')\n);\nYou should have three td elements js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert lengthOf(tableRow querySelectorAll('td'), 3);\nYour first td element should have the text $500 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6273,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd933ba685de776a94997e.md",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "aab22a7eabdb02a0fd114ed0304cd0a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd933ba685de776a94997e.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [0]; assert isTrue( tableRow querySelector('th > span') classList contains('description') ); You should have three td elements js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [0]; assert lengthOf(tableRow querySelectorAll('td'), 3); Your first td element should have the text $500 js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [0]; assert strictEqual(tableRow querySelectorAll('td') [0]textContent, '$500');\nYour second td element should have the text $250 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$250');\nYour third td element should have the text $0 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$0');\nYour third td element should have the class set to current js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6273,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd933ba685de776a94997e.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "895fa5eec53014cb1bacb97ba78ea20a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd986ddbcbd47ba8fbc5ec.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd986ddbcbd47ba8fbc5ec\ntitle: Step 23\nchallengeType: 0\ndashedName: step-23\n--description--\nWithin the third tr, add a th element with the text Credit The outstanding balance on our credit card Wrap that text, except for Credit, within a span element with the class set to description Add three td elements below that, and give them the following text, in order: $50, $50, and $75 Give the third td element a class set to current --hints--\nYour third tr should have a th element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Credit The outstanding balance on our credit card js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert strictEqual(\ntableRow querySelector('th') innerText,\n'Credit The outstanding balance on our credit card '\n);\nYou should wrap the text The outstanding balance on our credit card in a span element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'The outstanding balance on our credit card '\n);\nYour span element should have the class attribute set to description js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('description')\n);\nYou should have three td elements js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert lengthOf(tableRow querySelectorAll('td'), 3);\nYour first td element should have the text $50 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert strictEqual(tableRow querySelectorAll('td') [0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd986ddbcbd47ba8fbc5ec.md",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2b781d5d6b338c040cf38b47f762bee8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd986ddbcbd47ba8fbc5ec.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [2]; assert isTrue( tableRow querySelector('th > span') classList contains('description') ); You should have three td elements js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [2]; assert lengthOf(tableRow querySelectorAll('td'), 3); Your first td element should have the text $50 js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [2]; assert strictEqual(tableRow querySelectorAll('td') [0]textContent, '$50');\nYour second td element should have the text $50 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$50');\nYour third td element should have the text $75 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$75');\nYour third td element should have the class set to current js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [2];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\n--fcc-editable-region--\nLoans The outstanding balance on our startup loan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd986ddbcbd47ba8fbc5ec.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f43952243f0fa3c35e649a153a344e86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd986ddbcbd47ba8fbc5ec.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "tableRow = tbody querySelectorAll('tr') [2]; assert isTrue( tableRow querySelectorAll('td') [2] classList contains('current') ); --seed-- --seed-contents-- ```html Balance Sheet AcmeWidgetCorp Balance Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 --fcc-editable-region-- Loans The outstanding balance on our startup loan$500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6689,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd986ddbcbd47ba8fbc5ec.md",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "11046ab29b9e4952d8bbcca118e8b07f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9a4ff2fc4481b9157bd7.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd9a4ff2fc4481b9157bd7\ntitle: Step 25\nchallengeType: 0\ndashedName: step-25\n--description--\nFor your third table, add a caption with the text Net Worth, and set up a table header and table body --hints--\nYour third table element should have a caption element js\nconst table = document querySelectorAll('table') [2];\nassert strictEqual(table children [0] localName, 'caption');\nYour caption element should have the text Net Worth js\nconst table = document querySelectorAll('table') [2];\nassert strictEqual(table querySelector('caption') textContent trim(), 'Net Worth');\nYour third table element should have a thead element js\nassert isNotNull(\ndocument querySelectorAll('table') [2] querySelector('thead')\n);\nYour third table element should have a tbody element js\nassert isNotNull(\ndocument querySelectorAll('table') [2] querySelector('tbody')\n);\nYour thead element should be immediately below your caption element js\nconst table = document querySelectorAll('table') [2];\nassert strictEqual(\ntable querySelector('caption') nextElementSibling localName,\n'thead'\n);\nYour tbody element should be immediately below your thead element js\nconst table = document querySelectorAll('table') [2];\nassert strictEqual(\ntable querySelector('thead') nextElementSibling localName,\n'tbody'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\n--fcc-editable-region--\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5194,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9a4ff2fc4481b9157bd7.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9248b7115b3f7b681e22282fe1a44bef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd990577d8227dd93fbeeb.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd990577d8227dd93fbeeb\ntitle: Step 24\nchallengeType: 0\ndashedName: step-24\n--description--\nIn your fourth tr element, add a th element with the text Total Liabilities Wrap the text Liabilities in a span element with the class attribute set to sr-only Following that, add three td elements with the following text (in order): $750, $600, $475 Give the third td element a class attribute set to current --hints--\nYour fourth tr should have a th element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Total Liabilities js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert strictEqual(\ntableRow querySelector('th') innerText,\n'Total Liabilities'\n);\nYou should wrap the text Liabilities in a span element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'Liabilities'\n);\nYour span element should have the class attribute set to sr-only js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('sr-only')\n);\nYou should have three td elements js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert lengthOf(tableRow querySelectorAll('td'), 3);\nYour first td element should have the text $750 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$750');\nYour second td element should have the text $600 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd990577d8227dd93fbeeb.md",
      "source_type": "git_repo"
    },
    "token_count": 528,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "73b288eb3d88014a9ce0473fb12eee44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd990577d8227dd93fbeeb.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "elements js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [3]; assert lengthOf(tableRow querySelectorAll('td'), 3); Your first td element should have the text $750 js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [3]; assert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$750'); Your second td element should have the text $600 js const table = document querySelectorAll('table') [1]; const tbody = tablequerySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$600');\nYour third td element should have the text $475 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$475');\nYour third td element should have the class set to current js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [3];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\n--fcc-editable-region--\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6740,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd990577d8227dd93fbeeb.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7deee7db036a93403b8cabafd2a5076a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd94056e0355785fbba4d3.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd94056e0355785fbba4d3\ntitle: Step 22\nchallengeType: 0\ndashedName: step-22\n--description--\nWithin the second tr, add a th element with the text Expenses Annual anticipated expenses, such as payroll Wrap that text, except for Expenses, within a span element with the class set to description Add three td elements below that, and give them the following text, in order: $200, $300, and $400 Give the third td element a class set to current --hints--\nYour second tr should have a th element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Expenses Annual anticipated expenses, such as payroll js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert strictEqual(\ntableRow querySelector('th') innerText,\n'Expenses Annual anticipated expenses, such as payroll '\n);\nYou should wrap the text Annual anticipated expenses, such as payroll in a span element js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'Annual anticipated expenses, such as payroll '\n);\nYour span element should have the class attribute set to description js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('description')\n);\nYou should have three td elements js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert lengthOf(tableRow querySelectorAll('td'), 3);\nYour first td element should have the text $200 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert strictEqual(tableRow querySelectorAll('td') [0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd94056e0355785fbba4d3.md",
      "source_type": "git_repo"
    },
    "token_count": 521,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3a4421bcb6e0172fcc81c7ccfb8c3339",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd94056e0355785fbba4d3.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [1]; assert isTrue( tableRow querySelector('th > span') classList contains('description') ); You should have three td elements js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [1]; assert lengthOf(tableRow querySelectorAll('td'), 3); Your first td element should have the text $200 js const table = document querySelectorAll('table') [1]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [1]; assert strictEqual(tableRow querySelectorAll('td') [0]textContent, '$200');\nYour second td element should have the text $300 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$300');\nYour third td element should have the text $400 js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$400');\nYour third td element should have the class set to current js\nconst table = document querySelectorAll('table') [1];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [1];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\n--fcc-editable-region--\nLoans The outstanding balance on our startup loan",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd94056e0355785fbba4d3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "493b3e747f7cc334ffbbd925e486acad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd94056e0355785fbba4d3.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "tableRow = tbody querySelectorAll('tr') [1]; assert isTrue( tableRow querySelectorAll('td') [2] classList contains('current') ); --seed-- --seed-contents-- ```html Balance Sheet AcmeWidgetCorp Balance Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 --fcc-editable-region-- Loans The outstanding balance on our startup loan$500\n$250\n$0\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd94056e0355785fbba4d3.md",
      "source_type": "git_repo"
    },
    "token_count": 166,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3e10d2533a7074517e2ffed4bdcbcf20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9d9fbdfe078800317055.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd9d9fbdfe078800317055\ntitle: Step 28\nchallengeType: 0\ndashedName: step-28\n--description--\nTime to style your table. Start by resetting the box model. Create an html selector and give it a box-sizing property set to border-box.\n--hints--\nYou should have an html selector.\njs\nassert.isNotNull(new __helpers.CSSHelp(document).getStyle('html'));\nYour html selector should have a box-sizing property set to border-box.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document)\n.getStyle('html')\n?.getPropertyValue('box-sizing'),\n'border-box'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan.\n$500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll.\n$200\n$300\n$400\nCredit The outstanding balance on our credit card.\n$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5002,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9d9fbdfe078800317055.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "38ea00c41c1c6619ecdc7f9a54efffd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fda307bde0b091cf7d884a.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fda307bde0b091cf7d884a\ntitle: Step 29\nchallengeType: 0\ndashedName: step-29\n--description--\nCreate a body selector and give it a font-family property set to sans-serif and a color set to #0a0a23.\n--hints--\nYou should have a body selector.\njs\nassert.isNotNull(new __helpers.CSSHelp(document).getStyle('body'));\nYour body selector should have a font-family property set to sans-serif.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document)\n.getStyle('body')\n?.getPropertyValue('font-family'),\n'sans-serif'\n);\nYour body selector should have a color property set to #0a0a23.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document).getStyle('body')?.getPropertyValue('color'),\n'rgb(10, 10, 35)'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan.\n$500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll.\n$200\n$300\n$400\nCredit The outstanding balance on our credit card.\n$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nhtml {\nbox-sizing: border-box;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5214,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fda307bde0b091cf7d884a.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "64e16188380d514d32eb43023e241053",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fda339eadcfd92a6812bed.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fda339eadcfd92a6812bed\ntitle: Step 30\nchallengeType: 0\ndashedName: step-30\n--description--\nBefore you get too far into your styling, you should make use of the sr-only class. You can use CSS to make elements with this class completely hidden from the visual page, but still be announced by screen readers.\nThe CSS you are about to write is a common set of properties used to ensure elements are completely hidden visually.\nThe span[class~=\"sr-only\"] selector will select any span element whose class includes sr-only. Create that selector, and give it a border property set to 0.\n--hints--\nYou should have an span[class~=\"sr-only\"] selector.\njs\nassert.isNotNull(\nnew __helpers.CSSHelp(document).getStyle('span[class~=\"sr-only\"]')\n);\nYour span[class~=\"sr-only\"] selector should have a border property set to 0.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document)\n.getStyle('span[class~=\"sr-only\"]')\n?.getPropertyValue('border-width'),\n'0px'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan.\n$500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll.\n$200\n$300\n$400\nCredit The outstanding balance on our credit card.\n$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\n--fcc-editable-region--\n--fcc-editable-region--\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5515,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fda339eadcfd92a6812bed.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "948f32dc7e694a9389fc072e545097ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdaea3999cb19d76ce717b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fdaea3999cb19d76ce717b\ntitle: Step 32\nchallengeType: 0\ndashedName: step-32\n--description--\nNow you need to size these elements down. Give your span[class~=\"sr-only\"] selector a width and height property set to 1px.\n--hints--\nYour span[class~=\"sr-only\"] selector should have a width property set to 1px.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document)\n.getStyle('span[class~=\"sr-only\"]')\n?.getPropertyValue('width'),\n'1px'\n);\nYour span[class~=\"sr-only\"] selector should have a height property set to 1px.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document)\n.getStyle('span[class~=\"sr-only\"]')\n?.getPropertyValue('height'),\n'1px'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan.\n$500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll.\n$200\n$300\n$400\nCredit The outstanding balance on our credit card.\n$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\n--fcc-editable-region--\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\n}\n--fcc-editable-region--\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5313,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdaea3999cb19d76ce717b.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7adcf4e09b0624118b42cf3ff8869ab2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdac1e31692f9a9ad97295.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fdac1e31692f9a9ad97295\ntitle: Step 31\nchallengeType: 0\ndashedName: step-31\n--description--\nThe CSS clip property is used to define the visible portions of an element Set the span[class~=\"sr-only\"] selector to have a clip property of rect(1px, 1px, 1px, 1px) The clip-path property determines the shape the clip property should take Set the clip-path property to the value of inset(50%), forming the clip-path into a rectangle within the element --hints--\nYour span[class~=\"sr-only\"] selector should have a clip property set to rect(1px, 1px, 1px, 1px) js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('span[class~=\"sr-only\"]') getPropertyValue('clip'),\n'rect(1px, 1px, 1px, 1px)'\n);\nYour span[class~=\"sr-only\"] selector should have a clip-path property set to inset(50%) js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('span[class~=\"sr-only\"]') getPropertyValue('clip-path'),\n'inset(50%)'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdac1e31692f9a9ad97295.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7a65b5dc2f4934c05eafec3f7d2ce792",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdac1e31692f9a9ad97295.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\n--fcc-editable-region--\nspan[class~=\"sr-only\"] {\nborder: 0;\n}\n--fcc-editable-region--\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5558,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdac1e31692f9a9ad97295.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7be34326167506e8f2f4288e158796ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9ad665a4a282c8106be3.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd9ad665a4a282c8106be3\ntitle: Step 26\nchallengeType: 0\ndashedName: step-26\n--description--\nWithin your thead, create a tr element In that, add a td and three th elements Within each of the th elements, add a span element with the class set to sr-only and the following text, in order: 2019, 2020, and 2021 --hints--\nYour thead element should have a tr element js\nconst table = document querySelectorAll('table') [2];\nassert strictEqual(\ntable querySelector('thead') children [0] localName,\n'tr'\n);\nYour tr element should have a td element as the first child js\nconst table = document querySelectorAll('table') [2];\nassert strictEqual(table querySelector('tr') children [0] localName, 'td');\nYour tr element should have three th elements, after the td element js\nconst table = document querySelectorAll('table') [2];\nconst trElement = table querySelector('tr');\nassert strictEqual(trElement children [1] localName, 'th');\nassert strictEqual(trElement children [2] localName, 'th');\nassert strictEqual(trElement children [3] localName, 'th');\nEach of your th elements should have a span element js\nconst ths = [ document querySelectorAll('table') [2] querySelectorAll('th')\n];\nths forEach(th => {\nassert lengthOf(th children, 1);\nassert strictEqual(th children [0] localName, 'span');\n});\nEach of your new span elements should have the class attribute set to sr-only js\nconst ths = [ document querySelectorAll('table') [2] querySelectorAll('th')\n];\nths forEach(th => {\nassert isTrue(th children [0] classList contains('sr-only'));\n});\nYour first span element should have the text 2019 js\nconst table = document querySelectorAll('table') [2];\nconst thead = table querySelectorAll('th') [0];\nassert strictEqual(thead children [0] textContent, '2019');\nYour second span element should have the text 2020 js\nconst table = document querySelectorAll('table') [2];\nconst thead = table querySelectorAll('th') [1];\nassert strictEqual(thead children [0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6564,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9ad665a4a282c8106be3.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1fb4ddbbbbbfe3a577376665567c4ebf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9ad665a4a282c8106be3.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "sr-only js const ths = [ document querySelectorAll('table') [2] querySelectorAll('th') ]; ths forEach(th => { assert isTrue(th children [0] classList contains('sr-only')); }); Your first span element should have the text 2019 js const table = document querySelectorAll('table') [2]; const thead = table querySelectorAll('th') [0]; assert strictEqual(thead children [0] textContent, '2019'); Your second span element should have the text 2020 js const table = document querySelectorAll('table') [2]; const thead = table querySelectorAll('th') [1]; assert strictEqual(thead children [0]textContent, '2020');\nYour third span element should have the text 2021 js\nconst table = document querySelectorAll('table') [2];\nconst thead = table querySelectorAll('th') [2];\nassert strictEqual(thead children [0] textContent, '2021');\nYour td element should be empty js\nconst table = document querySelectorAll('table') [2];\nconst tableData = table querySelectorAll('td') [0];\nassert strictEqual(tableData textContent, '');\nassert isTrue(tableData children length === 0);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\n--fcc-editable-region--\nNet Worth\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6564,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9ad665a4a282c8106be3.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cded702563d7125956bce53c284339dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdaf9ff894b6a084ecdc1b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fdaf9ff894b6a084ecdc1b\ntitle: Step 33\nchallengeType: 0\ndashedName: step-33\n--description--\nTo prevent the text content from overflowing, give your span[class~=\"sr-only\"] selector an overflow property set to hidden and a white-space property set to nowrap.\n--hints--\nYour span[class~=\"sr-only\"] selector should have an overflow property set to hidden.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document)\n.getStyle('span[class~=\"sr-only\"]')\n?.getPropertyValue('overflow'),\n'hidden'\n);\nYour span[class~=\"sr-only\"] selector should have a white-space property set to nowrap.\njs\nassert.strictEqual(\nnew __helpers.CSSHelp(document)\n.getStyle('span[class~=\"sr-only\"]')\n?.getPropertyValue('white-space'),\n'nowrap'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand.\n$25\n$30\n$28\nChecking Our primary transactional account.\n$54\n$56\n$53\nSavings Funds set aside for emergencies.\n$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan.\n$500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll.\n$200\n$300\n$400\nCredit The outstanding balance on our credit card.\n$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\n--fcc-editable-region--\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\n}\n--fcc-editable-region--\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdaf9ff894b6a084ecdc1b.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fd3ee906185f227809d3432ca6562071",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9b7285bde783ad5b8aac.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fd9b7285bde783ad5b8aac\ntitle: Step 27\nchallengeType: 0\ndashedName: step-27\n--description--\nWithin the tbody, add a tr with the class set to total In that, add a th with the text Total Net Worth, and wrap Net Worth in a span with the class set to sr-only Then add three td elements, giving the third a class set to current, and giving each the following text: $-171, $136, $334 --hints--\nYour tbody element should have one tr element js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nassert lengthOf(tbody querySelectorAll('tr'), 1);\nYour tr element should have the class set to total js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nassert isTrue(tbody querySelector('tr') classList contains('total'));\nYour tr should have a th element js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert isNotNull(tableRow querySelector('th'));\nYour th element should have the text Total Net Worth js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelector('th') innerText, 'Total Net Worth');\nYou should wrap the text Net Worth in a span element js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(\ntableRow querySelector('th > span') textContent,\n'Net Worth'\n);\nYour span element should have the class attribute set to sr-only js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert isTrue(\ntableRow querySelector('th > span') classList contains('sr-only')\n);\nYou should have three td elements js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert lengthOf(tableRow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9b7285bde783ad5b8aac.md",
      "source_type": "git_repo"
    },
    "token_count": 522,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "62199f43acdf3e04c789bb3385b2d9a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9b7285bde783ad5b8aac.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "querySelectorAll('tr') [0]; assert strictEqual( tableRow querySelector('th > span') textContent, 'Net Worth' ); Your span element should have the class attribute set to sr-only js const table = document querySelectorAll('table') [2]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [0]; assert isTrue( tableRow querySelector('th > span') classList contains('sr-only') ); You should have three td elements js const table = document querySelectorAll('table') [2]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [0]; assert lengthOf(tableRowquerySelectorAll('td'), 3);\nYour first td element should have the text $-171 js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [0] textContent, '$-171');\nYour second td element should have the text $136 js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [1] textContent, '$136');\nYour third td element should have the text $334 js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert strictEqual(tableRow querySelectorAll('td') [2] textContent, '$334');\nYour third td element should have the class set to current js\nconst table = document querySelectorAll('table') [2];\nconst tbody = table querySelector('tbody');\nconst tableRow = tbody querySelectorAll('tr') [0];\nassert isTrue(\ntableRow querySelectorAll('td') [2] classList contains('current')\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9b7285bde783ad5b8aac.md",
      "source_type": "git_repo"
    },
    "token_count": 515,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ad052f761db7042f2687cc79034a3dbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9b7285bde783ad5b8aac.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "element should have the class set to current js const table = document querySelectorAll('table') [2]; const tbody = table querySelector('tbody'); const tableRow = tbody querySelectorAll('tr') [0]; assert isTrue( tableRow querySelectorAll('td') [2] classList contains('current') ); --seed-- --seed-contents-- ```html Balance Sheet AcmeWidgetCorp Balance Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\n--fcc-editable-region--\nNet Worth\n2019\n2020\n2021\n--fcc-editable-region--\n```\n```css\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fd9b7285bde783ad5b8aac.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d8ba86df2519b31c9971e3a4ab287d0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdb04d9939f0a26ca51c2b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fdb04d9939f0a26ca51c2b\ntitle: Step 35\nchallengeType: 0\ndashedName: step-35\n--description--\nTime to style your table heading Create an h1 selector Give it a max-width property set to 37 25rem, a margin property set to 0 auto, and a padding property set to 1 5rem 1 25rem --hints--\nYou should have an h1 selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('h1'));\nYour h1 selector should have a max-width property set to 37 25rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1') getPropertyValue('max-width'),\n'37 25rem'\n);\nYour h1 selector should have a margin property set to 0 auto js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1') getPropertyValue('margin'),\n'0px auto'\n);\nYour h1 selector should have a padding property set to 1 5rem 1 25rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1') getPropertyValue('padding'),\n'1 5rem 1 25rem'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5750,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdb04d9939f0a26ca51c2b.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7032874681cfdb9e0ac948f4b40b822f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdb04d9939f0a26ca51c2b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5750,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdb04d9939f0a26ca51c2b.md",
      "source_type": "git_repo"
    },
    "token_count": 284,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3501e7d94dabdc8a8d8329a5549a64fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdafe6f07fd7a1c6785bc2.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 61fdafe6f07fd7a1c6785bc2\ntitle: Step 34\nchallengeType: 0\ndashedName: step-34\n--description--\nFinally, you need to take these hidden elements out of the document flow Give the span[class~=\"sr-only\"] selector a position property set to absolute, a padding property set to 0, and a margin property set to -1px This will ensure that not only are they no longer visible, but they are not even within the page view --hints--\nYour span[class~=\"sr-only\"] selector should have a position property set to absolute js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('span[class~=\"sr-only\"]') getPropertyValue('position'),\n'absolute'\n);\nYour span[class~=\"sr-only\"] selector should have a padding property set to 0 js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('span[class~=\"sr-only\"]') getPropertyValue('padding'),\n'0px'\n);\nYour span[class~=\"sr-only\"] selector should have a margin property set to -1px js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('span[class~=\"sr-only\"]') getPropertyValue('margin'),\n'-1px'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5842,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdafe6f07fd7a1c6785bc2.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "074413ffd8ac531ced79ae3399de3dec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdafe6f07fd7a1c6785bc2.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\n--fcc-editable-region--\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\noverflow: hidden;\nwhite-space: nowrap;\n}\n--fcc-editable-region--\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5842,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\61fdafe6f07fd7a1c6785bc2.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "42509234abc221db416537845fbd76c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015a5da1c95c358f079ebb.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62015a5da1c95c358f079ebb\ntitle: Step 37\nchallengeType: 0\ndashedName: step-37\n--description--\nThe :first-of-type pseudo-selector is used to target the first element that matches the selector Create an h1 flex span:first-of-type selector to target the first span element in your flex container Remember that your span elements are reversed, visually, so this will appear to be the second element on the page Give your new selector a font-size property of 0 7em to make it look like a sub-heading --hints--\nYou should have an h1 flex span:first-of-type selector js\nassert isNotNull(\nnew __helpers CSSHelp(document) getStyle('h1 flex span:first-of-type')\n);\nYour h1 flex span:first-of-type selector should have a font-size property set to 0 7em js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1 flex span:first-of-type') getPropertyValue('font-size'),\n'0 7em'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5834,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015a5da1c95c358f079ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "748b70165099a6153d5db3cc9df9aee9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015a5da1c95c358f079ebb.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5834,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015a5da1c95c358f079ebb.md",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c08d6b9cee68566e3916d7284935a23c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620159cd5431aa34bc6a4c9c.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 620159cd5431aa34bc6a4c9c\ntitle: Step 36\nchallengeType: 0\ndashedName: step-36\n--description--\nTarget your flex container with an h1 flex selector Give it a display property set to flex to enable the flexbox layout Then set the flex-direction property to column-reverse - this will display the nested elements from bottom to top Finally, set the gap property to 1rem to create some space between the elements --hints--\nYou should have an h1 flex selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('h1 flex'));\nYour h1 flex selector should have a display property set to flex js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1 flex') getPropertyValue('display'),\n'flex'\n);\nYour h1 flex selector should have a flex-direction property set to column-reverse js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1 flex') getPropertyValue('flex-direction'),\n'column-reverse'\n);\nYour h1 flex selector should have a gap property set to 1rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1 flex') getPropertyValue('gap'),\n'1rem'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6021,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620159cd5431aa34bc6a4c9c.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a4d1a99f86ae5b45f2b3ec27eede1db4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620159cd5431aa34bc6a4c9c.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6021,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620159cd5431aa34bc6a4c9c.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "82f73b3d7fc702555943e967d683b710",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015cd2654a1139321a89d2.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62015cd2654a1139321a89d2\ntitle: Step 38\nchallengeType: 0\ndashedName: step-38\n--description--\nThe :last-of-type pseudo-selector does the exact opposite - it targets the last element that matches the selector Create an h1 flex span:last-of-type selector to target the last span in your flex container, and give it a font-size property set to 1 2em to make it look like a header --hints--\nYou should have an h1 flex span:last-of-type selector js\nassert isNotNull(\nnew __helpers CSSHelp(document) getStyle('h1 flex span:last-of-type')\n);\nYour h1 flex span:last-of-type selector should have a font-size property set to 1 2em js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('h1 flex span:last-of-type') getPropertyValue('font-size'),\n'1 2em'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5757,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015cd2654a1139321a89d2.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5bd73894d480330f2b97fee6eb25bdc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015cd2654a1139321a89d2.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5757,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015cd2654a1139321a89d2.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e5ed1aa1d3fc8df61677f01b3281e5a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620174ed519dd7506c1a4b61.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 620174ed519dd7506c1a4b61\ntitle: Step 41\nchallengeType: 0\ndashedName: step-41\n--description--\nNow apply some color to your #years Make the text #fff and the background #0a0a23 --hints--\nYour #years should have a color property set to #fff js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years') getPropertyValue('color'),\n'rgb(255, 255, 255)'\n);\nYour #years should have a background-color property set to #0a0a23 js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years') getPropertyValue('background-color'),\n'rgb(10, 10, 35)'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5782,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620174ed519dd7506c1a4b61.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d54ca6db71d7140d0534d0d8926ae667",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620174ed519dd7506c1a4b61.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0; clip: rect(1px, 1px, 1px, 1px); clip-path: inset(50%); height: 1px; width: 1px; position: absolute; overflow: hidden; white-space: nowrap; padding: 0; margin: -1px; } html { box-sizing: border-box; } body { font-family: sans-serif; color: #0a0a23; } h1 { max-width: 37 25rem; margin: 0 auto; padding: 15rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\n--fcc-editable-region--\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\ntop: 0;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5782,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620174ed519dd7506c1a4b61.md",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "09a1fe4eec227058d8320c9d7588a631",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015d8942384c3aed48329e.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62015d8942384c3aed48329e\ntitle: Step 39\nchallengeType: 0\ndashedName: step-39\n--description--\nYou wrapped your table in a section element - now you can style that to give your table a border Create a section selector, and give it a max-width property set to 40rem for responsive design Set the margin property to 0 auto to center it, and set the border property to 2px solid #d0d0d5 --hints--\nYou should have a section selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('section'));\nYour section selector should have a max-width property set to 40rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('section') getPropertyValue('max-width'),\n'40rem'\n);\nYour section selector should have a margin property set to 0 auto js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('section') getPropertyValue('margin'),\n'0px auto'\n);\nYour section selector should have a border property set to 2px solid #d0d0d5 js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('section') getPropertyValue('border'),\n'2px solid rgb(208, 208, 213)'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6197,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015d8942384c3aed48329e.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9804a42c6f0121b4c4e70bbb2ac739f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015d8942384c3aed48329e.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6197,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62015d8942384c3aed48329e.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bc6827a8c640abe93f230c5b8522b1b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620167374bb8b4455cd11125.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 620167374bb8b4455cd11125\ntitle: Step 40\nchallengeType: 0\ndashedName: step-40\n--description--\nThe last part of your table heading is your years Create a #years selector, and enable flexbox Justify the content to the end of the flex direction, and make the element sticky Fix it to the top of its container with top: 0 --hints--\nYou should have a #years selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('#years'));\nYour #years selector should have a display property set to flex js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years') getPropertyValue('display'),\n'flex'\n);\nYour #years selector should have a justify-content property set to flex-end js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years') getPropertyValue('justify-content'),\n'flex-end'\n);\nYour #years selector should have a position property set to sticky js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years') getPropertyValue('position'),\n'sticky'\n);\nYour #years selector should have a top property set to 0 js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years') getPropertyValue('top'),\n'0px'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6366,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620167374bb8b4455cd11125.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0955bd6090320836ba01346e4b9fc574",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620167374bb8b4455cd11125.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6366,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620167374bb8b4455cd11125.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8e79d964c8530f38f05df29183c83f38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620175b3710a0951cfa86edf.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 620175b3710a0951cfa86edf\ntitle: Step 42\nchallengeType: 0\ndashedName: step-42\n--description--\nThe calc() function is a CSS function that allows you to calculate a value based on other values For example, you can use it to calculate the width of the viewport minus the margin of an element:\ncss example {\nmargin: 10px;\nwidth: calc(100% - 20px);\n}\nGive #years a margin of 0 -2px, and a padding set to 0 5rem calc(1 25rem + 2px) 0 5rem 0 --hints--\nYour #years selector should have a margin property set to 0 -2px js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years') getPropertyValue('margin'),\n'0px -2px'\n);\nYour #years selector should have a padding property set to 0 5rem calc(1 25rem + 2px) 0 5rem 0 js\nconst padding = new __helpers CSSHelp(document) getStyle('#years') getPropertyValue('padding');\nassert include(\n[\n'0 5rem calc(1 25rem + 2px) 0 5rem 0px',\n'0 5rem calc(2px + 1 25rem) 0 5rem 0px'\n],\npadding\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6224,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620175b3710a0951cfa86edf.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3a750fac322d9722d28564dd04b82e15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620175b3710a0951cfa86edf.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\n--fcc-editable-region--\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6224,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620175b3710a0951cfa86edf.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "11c265ede2a5207407d1d943c6920eb3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201782cc420715562f36271.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 6201782cc420715562f36271\ntitle: Step 44\nchallengeType: 0\ndashedName: step-44\n--description--\nStyle the text within your #years element by creating a #years span[class] selector The span[class] syntax will target any span element that has a class attribute set, regardless of the attribute's value Give your new selector a bold font, a width of 4 5rem, and text aligned to the right --hints--\nYou should have a #years span[class] selector js\nassert isNotNull(\nnew __helpers CSSHelp(document) getStyle('#years span[class]')\n);\nYour #years span[class] selector should have a font-weight property set to bold js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years span[class]') getPropertyValue('font-weight'),\n'bold'\n);\nYour #years span[class] selector should have a width property set to 4 5rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years span[class]') getPropertyValue('width'),\n'4 5rem'\n);\nYour #years span[class] selector should have a text-align property set to right js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('#years span[class]') getPropertyValue('text-align'),\n'right'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201782cc420715562f36271.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "53942d78867d88ba4ff4a7eb8b18505a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201782cc420715562f36271.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201782cc420715562f36271.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1e366bc6eb81c766011b17066797ecef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620179bc0a6a2358c72b90ad.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 620179bc0a6a2358c72b90ad\ntitle: Step 45\nchallengeType: 0\ndashedName: step-45\n--description--\nYou wrapped your tables in a container with the table-wrap class Create a selector for that class, and give it a padding set to 0 0 75rem 1 5rem 0 75rem --hints--\nYou should have a table-wrap selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle(' table-wrap'));\nYour table-wrap selector should have a padding property set to 0 0 75rem 1 5rem 0 75rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle(' table-wrap') getPropertyValue('padding'),\n'0px 0 75rem 1 5rem'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620179bc0a6a2358c72b90ad.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "51b3bef968348eb9e264f4821238f2cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620179bc0a6a2358c72b90ad.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0; clip: rect(1px, 1px, 1px, 1px); clip-path: inset(50%); height: 1px; width: 1px; position: absolute; overflow: hidden; white-space: nowrap; padding: 0; margin: -1px; } html { box-sizing: border-box; } body { font-family: sans-serif; color: #0a0a23; } h1 { max-width: 3725rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620179bc0a6a2358c72b90ad.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "94d6e90d55d2df9273cadcb6be20edbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017b6f47454059bf2d3bd1.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62017b6f47454059bf2d3bd1\ntitle: Step 46\nchallengeType: 0\ndashedName: step-46\n--description--\nBefore you start diving in to the table itself, your span elements are currently bolded Create a span:not( sr-only) selector and give it a font-weight property set to normal The :not() pseudo-selector is used to target all elements that do not match the selector - in this case, any of your span elements that do not have the sr-only class This ensures that your earlier rules for the span[class~=\"sr-only\"] selector are not overwritten --hints--\nYou should have a span:not( sr-only) selector js\nassert isNotNull(\nnew __helpers CSSHelp(document) getStyle('span:not( sr-only)')\n);\nYour span:not( sr-only) selector should have a font-weight property set to normal js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('span:not( sr-only)') getPropertyValue('font-weight'),\n'normal'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017b6f47454059bf2d3bd1.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "fbdadec7c4d8027065824beadf428270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017b6f47454059bf2d3bd1.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card$50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017b6f47454059bf2d3bd1.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "148d52169d9a947e8c257088b91e83c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017b6f47454059bf2d3bd1.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "span:first-of-type { font-size: 0 7em; } h1 flex span:last-of-type { font-size: 1 2em; } section { max-width: 40rem; margin: 0 auto; border: 2px solid #d0d0d5; } years { display: flex; justify-content: flex-end; position: sticky; z-index: 999; top: 0; background: #0a0a23; color: #fff; padding: 0 5rem calc(1 25rem + 2px) 0 5rem 0; margin: 0 -2px; } years span[class] { font-weight: bold; width: 4 5rem; text-align: right; } table-wrap { padding: 0 0 75rem 1 5rem 075rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6369,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017b6f47454059bf2d3bd1.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ba46a6bfa0510a3a0bdb3adba0e5a4b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017fa5bbef406580ceb44f.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62017fa5bbef406580ceb44f\ntitle: Step 48\nchallengeType: 0\ndashedName: step-48\n--description--\nNow that you have added the important keyword, you can remove the :not( sr-only) from your span selector --hints--\nYou should not have a span:not( sr-only) selector js\nassert isNull(new __helpers CSSHelp(document) getStyle('span:not( sr-only)'));\nYou should have a span selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('span'));\nYou should not change the font-weight js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('span') getPropertyValue('font-weight'),\n'normal'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px) important;\nclip-path: inset(50%) important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px important;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6229,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017fa5bbef406580ceb44f.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b0b370cddaf913153f83e42025f7ec44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017fa5bbef406580ceb44f.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px) important; clip-path: inset(50%) important; height: 1px important; width: 1px important; position: absolute important; overflow: hidden important; white-space: nowrap important; padding: 0 important; margin: -1px important; } html { box-sizing: border-box; } body { font-family: sans-serif; color: #0a0a23; } h1 { max-width: 3725rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0 75rem;\n}\n--fcc-editable-region--\nspan:not( sr-only) {\nfont-weight: normal;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6229,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017fa5bbef406580ceb44f.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fde683d3761b3e08cd4561284e739b92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018243f046a368fab8ffb6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62018243f046a368fab8ffb6\ntitle: Step 49\nchallengeType: 0\ndashedName: step-49\n--description--\nCreate a table selector to target your tables Set the border-collapse property to collapse, which will allow cell borders to collapse into a single border, instead of a border around each cell Also set the border property to 0 to hide the borders themselves --hints--\nYou should have a table selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('table'));\nYour table selector should have a border-collapse property set to collapse js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table') getPropertyValue('border-collapse'),\n'collapse'\n);\nYour table selector should have a border property set to 0 js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table') getPropertyValue('border-width'),\n'0px'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px) important;\nclip-path: inset(50%) important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6487,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018243f046a368fab8ffb6.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "95d4f0ddc73db798cf7d41766cf5826f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018243f046a368fab8ffb6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "$500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px) important; clip-path: inset(50%) important; height: 1px important; width: 1px important; position: absolute important; overflow: hidden important; white-space: nowrap important; padding: 0 important; margin: -1pximportant;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0 75rem;\n}\nspan {\nfont-weight: normal;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6487,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018243f046a368fab8ffb6.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0073b6013c5df751fa0dba5b14a7d880",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201830cb0c74b69f1b41635.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 6201830cb0c74b69f1b41635\ntitle: Step 50\nchallengeType: 0\ndashedName: step-50\n--description--\nEnsure your table fills its container with a width property set to 100%, then position it relatively and give it a top margin of 3rem --hints--\nYour table selector should have a width property set to 100% js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table') getPropertyValue('width'),\n'100%'\n);\nYour table selector should have a position property set to relative js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table') getPropertyValue('position'),\n'relative'\n);\nYour table selector should have a margin-top property set to 3rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table') getPropertyValue('margin-top'),\n'3rem'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px) important;\nclip-path: inset(50%) important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201830cb0c74b69f1b41635.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ff8e41be8e6f3b74181bef250523010f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201830cb0c74b69f1b41635.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "$500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px) important; clip-path: inset(50%) important; height: 1px important; width: 1px important; position: absolute important; overflow: hidden important; white-space: nowrap important; padding: 0 important; margin: -1pximportant;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0 75rem;\n}\nspan {\nfont-weight: normal;\n}\n--fcc-editable-region--\ntable {\nborder-collapse: collapse;\nborder: 0;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\6201830cb0c74b69f1b41635.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7f7e25fba391e33fb5c942eade765826",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62017f47c87be96457c49f46\ntitle: Step 47\nchallengeType: 0\ndashedName: step-47\n--description--\nRather than having to constantly double-check you are not overwriting your earlier properties, you can use the important keyword to ensure these properties are always applied, regardless of order or specificity Give each property in your span[class~=\"sr-only\"] selector an important keyword Do not change any of the values --hints--\nYour span[class~=\"sr-only\"] selector should have the border property set to 0 important js\n// log it\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert isTrue(\ntext includes('border: 0px important;') ||\ntext includes('border: 0px none important')\n);\nYour span[class~=\"sr-only\"] selector should have the clip property set to rect(1px, 1px, 1px, 1px) important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'clip: rect(1px, 1px, 1px, 1px) important;');\nYour span[class~=\"sr-only\"] selector should have the clip-path property set to inset(50%) important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'clip-path: inset(50%) important;');\nYour span[class~=\"sr-only\"] selector should have the height property set to 1px important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'height: 1px important;');\nYour span[class~=\"sr-only\"] selector should have the width property set to 1px important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'width: 1px important;');\nYour span[class~=\"sr-only\"] selector should have the position property set to absolute important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'position: absolute",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "86175baa756b85ccc6ba5948b4c01e68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "property set to 1px important js const text = new __helpers CSSHelp(document) getStyle( 'span[class~=\"sr-only\"]' ) cssText; assert include(text, 'height: 1px important;'); Your span[class~=\"sr-only\"] selector should have the width property set to 1px important js const text = new __helpers CSSHelp(document) getStyle( 'span[class~=\"sr-only\"]' ) cssText; assert include(text, 'width: 1px important;'); Your span[class~=\"sr-only\"] selector should have the position property set to absolute important js const text = new __helpers CSSHelp(document) getStyle( 'span[class~=\"sr-only\"]' ) cssText; assert include(text, 'position: absoluteimportant;');\nYour span[class~=\"sr-only\"] selector should have the overflow property set to hidden important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'overflow: hidden important;');\nYour span[class~=\"sr-only\"] selector should have the white-space property set to nowrap important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'white-space: nowrap important;');\nYour span[class~=\"sr-only\"] selector should have the padding property set to 0 important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'padding: 0px important;');\nYour span[class~=\"sr-only\"] selector should have the margin property set to -1px important js\nconst text = new __helpers CSSHelp(document) getStyle(\n'span[class~=\"sr-only\"]'\n) cssText;\nassert include(text, 'margin: -1px important;');\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "320c906a3d0b61060315025c9d3c3184",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "cssText; assert include(text, 'padding: 0px important;'); Your span[class~=\"sr-only\"] selector should have the margin property set to -1px important js const text = new __helpers CSSHelp(document) getStyle( 'span[class~=\"sr-only\"]' ) cssText; assert include(text, 'margin: -1px important;'); --seed-- --seed-contents-- ```html Balance Sheet AcmeWidgetCorp Balance Sheet 2019 2020 2021 Assets 2019 2020 2021 Cash This is the cash we currently have on hand $25 $30 $28 Checking Our primary transactional account $54 $56 $53 Savings Funds set aside for emergencies$500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\n--fcc-editable-region--\nspan[class~=\"sr-only\"] {\nborder: 0;\nclip: rect(1px, 1px, 1px, 1px);\nclip-path: inset(50%);\nheight: 1px;\nwidth: 1px;\nposition: absolute;\noverflow: hidden;\nwhite-space: nowrap;\npadding: 0;\nmargin: -1px;\n}\n--fcc-editable-region--\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "96e9c7f16b1c2419c49beb529d8ebc2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "{ border: 0; clip: rect(1px, 1px, 1px, 1px); clip-path: inset(50%); height: 1px; width: 1px; position: absolute; overflow: hidden; white-space: nowrap; padding: 0; margin: -1px; } --fcc-editable-region-- html { box-sizing: border-box; } body { font-family: sans-serif; color: #0a0a23; } h1 { max-width: 37 25rem; margin: 0 auto; padding: 1 5rem 1 25rem; } h1 flex { display: flex; flex-direction: column-reverse; gap: 1rem; } h1 flex span:first-of-type { font-size: 0 7em; } h1 flex span:last-of-type { font-size: 12em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0 75rem;\n}\nspan:not( sr-only) {\nfont-weight: normal;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62017f47c87be96457c49f46.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "0221d6b7c29da5ad1aeb4a7b2b965961",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620186f4b6b8356d2def576b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 620186f4b6b8356d2def576b\ntitle: Step 51\nchallengeType: 0\ndashedName: step-51\n--description--\nNext you need to style your caption elements to look more like headers Create a table caption selector Set the text to have a color of #356eaf, a size of 1 3em, and a normal weight --hints--\nYou should have a table caption selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('table caption'));\nYour table caption selector should have a color property set to #356eaf js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table caption') getPropertyValue('color'),\n'rgb(53, 110, 175)'\n);\nYour table caption selector should have a font-size property set to 1 3em js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table caption') getPropertyValue('font-size'),\n'1 3em'\n);\nYour table caption selector should have a font-weight property set to normal js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table caption') getPropertyValue('font-weight'),\n'normal'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620186f4b6b8356d2def576b.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "120560d7be4486038c66a34db7781c2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620186f4b6b8356d2def576b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px)important;\nclip-path: inset(50%) important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px important;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620186f4b6b8356d2def576b.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a961916c321f185d5eeaa3587d5993ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620186f4b6b8356d2def576b.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "span:first-of-type { font-size: 0 7em; } h1 flex span:last-of-type { font-size: 1 2em; } section { max-width: 40rem; margin: 0 auto; border: 2px solid #d0d0d5; } years { display: flex; justify-content: flex-end; position: sticky; z-index: 999; top: 0; background: #0a0a23; color: #fff; padding: 0 5rem calc(1 25rem + 2px) 0 5rem 0; margin: 0 -2px; } years span[class] { font-weight: bold; width: 4 5rem; text-align: right; } table-wrap { padding: 0 0 75rem 1 5rem 075rem;\n}\nspan {\nfont-weight: normal;\n}\ntable {\nborder-collapse: collapse;\nborder: 0;\nwidth: 100%;\nposition: relative;\nmargin-top: 3rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620186f4b6b8356d2def576b.md",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "69dbd91449d085a83ad7fe45e81030b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ba1aa263770c953be66.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62018ba1aa263770c953be66\ntitle: Step 52\nchallengeType: 0\ndashedName: step-52\n--description--\nNow give the captions an absolute position, and shift them -2 25rem from the top and 0 5rem from the left --hints--\nYour table caption selector should have the position property set to absolute js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table caption') getPropertyValue('position'),\n'absolute'\n);\nYour table caption selector should have the top property set to -2 25rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table caption') getPropertyValue('top'),\n'-2 25rem'\n);\nYour table caption selector should have the left property set to 0 5rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('table caption') getPropertyValue('left'),\n'0 5rem'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px) important;\nclip-path: inset(50%) important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6643,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ba1aa263770c953be66.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "54a40760063bc20c0d6129bb56892ec7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ba1aa263770c953be66.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "$500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px) important; clip-path: inset(50%) important; height: 1px important; width: 1px important; position: absolute important; overflow: hidden important; white-space: nowrap important; padding: 0 important; margin: -1pximportant;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0 75rem;\n}\nspan {\nfont-weight: normal;\n}\ntable {\nborder-collapse: collapse;\nborder: 0;\nwidth: 100%;\nposition: relative;\nmargin-top: 3rem;\n}\n--fcc-editable-region--\ntable caption {\ncolor: #356eaf;\nfont-size: 1 3em;\nfont-weight: normal;\n}\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6643,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ba1aa263770c953be66.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "28665c3f08f7ca036a7d05324b03b070",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ec29b3ae674f40bef31.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62018ec29b3ae674f40bef31\ntitle: Step 54\nchallengeType: 0\ndashedName: step-54\n--description--\nNow target the th elements within your table body, and give them a width of the entire container, less 12rem --hints--\nYou should have a tbody th selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('tbody th'));\nYour tbody th selector should have a width property set to calc(100% - 12rem) js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tbody th') getPropertyValue('width'),\n'calc(100% - 12rem)'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px) important;\nclip-path: inset(50%) important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px important;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ec29b3ae674f40bef31.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "66238d17bdb5109a4005db739093cd52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ec29b3ae674f40bef31.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "$750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px) important; clip-path: inset(50%) important; height: 1px important; width: 1px important; position: absolute important; overflow: hidden important; white-space: nowrap important; padding: 0 important; margin: -1px important; } html { box-sizing: border-box; } body { font-family: sans-serif; color: #0a0a23; } h1 { max-width: 37 25rem; margin: 0 auto; padding: 1 5rem 125rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0 75rem;\n}\nspan {\nfont-weight: normal;\n}\ntable {\nborder-collapse: collapse;\nborder: 0;\nwidth: 100%;\nposition: relative;\nmargin-top: 3rem;\n}\ntable caption {\ncolor: #356eaf;\nfont-size: 1 3em;\nfont-weight: normal;\nposition: absolute;\ntop: -2 25rem;\nleft: 0 5rem;\n}\ntbody td {\nwidth: 100vw;\nmin-width: 4rem;\nmax-width: 4rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6449,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018ec29b3ae674f40bef31.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3d21b337bbf2698e1167ddeed924f510",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018c3e94434a71af1d5eaa.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62018c3e94434a71af1d5eaa\ntitle: Step 53\nchallengeType: 0\ndashedName: step-53\n--description--\nCreate a selector to target your td elements within your table body Give them a width to fill the viewport, with a minimum and maximum of 4rem This approach ensures that the width is fixed, whereas setting width specifically would allow the elements to shrink to the container --hints--\nYou should have a tbody td selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('tbody td'));\nYour tbody td selector should have a width property set to 100vw js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tbody td') getPropertyValue('width'),\n'100vw'\n);\nYour tbody td selector should have a min-width property set to 4rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tbody td') getPropertyValue('min-width'),\n'4rem'\n);\nYour tbody td selector should have a max-width property set to 4rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tbody td') getPropertyValue('max-width'),\n'4rem'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6959,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018c3e94434a71af1d5eaa.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b682639df52e8c9bbe924ad7ea7d6c3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018c3e94434a71af1d5eaa.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "set aside for emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px)important;\nclip-path: inset(50%) important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px important;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6959,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018c3e94434a71af1d5eaa.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c035e1b8c662d63984952c2d58adb936",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018c3e94434a71af1d5eaa.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "span:first-of-type { font-size: 0 7em; } h1 flex span:last-of-type { font-size: 1 2em; } section { max-width: 40rem; margin: 0 auto; border: 2px solid #d0d0d5; } years { display: flex; justify-content: flex-end; position: sticky; z-index: 999; top: 0; background: #0a0a23; color: #fff; padding: 0 5rem calc(1 25rem + 2px) 0 5rem 0; margin: 0 -2px; } years span[class] { font-weight: bold; width: 4 5rem; text-align: right; } table-wrap { padding: 0 0 75rem 1 5rem 075rem;\n}\nspan {\nfont-weight: normal;\n}\ntable {\nborder-collapse: collapse;\nborder: 0;\nwidth: 100%;\nposition: relative;\nmargin-top: 3rem;\n}\ntable caption {\ncolor: #356eaf;\nfont-size: 1 3em;\nfont-weight: normal;\nposition: absolute;\ntop: -2 25rem;\nleft: 0 5rem;\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6959,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62018c3e94434a71af1d5eaa.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3de5a187b2be9b5a8e925555c41463f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62019093fe30e278e797d2f6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 62019093fe30e278e797d2f6\ntitle: Step 55\nchallengeType: 0\ndashedName: step-55\n--description--\nThe [attribute=\"value\"] selector targets any element that has an attribute with a specific value Create a tr[class=\"total\"] selector to target specifically your tr elements with the total class Give it a bottom border of 4px double #0a0a23 and make the font bold --hints--\nYou should have a tr[class=\"total\"] selector js\nassert isNotNull(new __helpers CSSHelp(document) getStyle('tr[class=\"total\"]'));\nYour tr[class=\"total\"] selector should have a border-bottom property set to 4px double #0a0a23 js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tr[class=\"total\"]') getPropertyValue('border-bottom'),\n'4px double rgb(10, 10, 35)'\n);\nYour tr[class=\"total\"] selector should have a font-weight property set to bold js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tr[class=\"total\"]') getPropertyValue('font-weight'),\n'bold'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px) important;\nclip-path: inset(50%)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6952,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62019093fe30e278e797d2f6.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "eb5e25edae498d26a1cc99fc066b628d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62019093fe30e278e797d2f6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px) important; clip-path: inset(50%)important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px important;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6952,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62019093fe30e278e797d2f6.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c5cad42910ebd3fcbc9f705b8fa79b6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62019093fe30e278e797d2f6.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "span:first-of-type { font-size: 0 7em; } h1 flex span:last-of-type { font-size: 1 2em; } section { max-width: 40rem; margin: 0 auto; border: 2px solid #d0d0d5; } years { display: flex; justify-content: flex-end; position: sticky; z-index: 999; top: 0; background: #0a0a23; color: #fff; padding: 0 5rem calc(1 25rem + 2px) 0 5rem 0; margin: 0 -2px; } years span[class] { font-weight: bold; width: 4 5rem; text-align: right; } table-wrap { padding: 0 0 75rem 1 5rem 075rem;\n}\nspan {\nfont-weight: normal;\n}\ntable {\nborder-collapse: collapse;\nborder: 0;\nwidth: 100%;\nposition: relative;\nmargin-top: 3rem;\n}\ntable caption {\ncolor: #356eaf;\nfont-size: 1 3em;\nfont-weight: normal;\nposition: absolute;\ntop: -2 25rem;\nleft: 0 5rem;\n}\ntbody td {\nwidth: 100vw;\nmin-width: 4rem;\nmax-width: 4rem;\n}\ntbody th {\nwidth: calc(100% - 12rem);\n}\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6952,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\62019093fe30e278e797d2f6.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ccbe15e77b1e13cfd50b65a75c62ddd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620191707bc65579ddd3ce15.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "id: 620191707bc65579ddd3ce15\ntitle: Step 56\nchallengeType: 0\ndashedName: step-56\n--description--\nUsing the same selector syntax, target the th elements within your table rows where the class is total Align the text to the left, and give them a padding of 0 5rem 0 0 25rem 0 5rem --hints--\nYou should have a tr[class=\"total\"] th selector js\nassert isNotNull(\nnew __helpers CSSHelp(document) getStyle('tr[class=\"total\"] th')\n);\nYour tr[class=\"total\"] th selector should have a text-align property set to left js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tr[class=\"total\"] th') getPropertyValue('text-align'),\n'left'\n);\nYour tr[class=\"total\"] th selector should have a padding property set to 0 5rem 0 0 25rem 0 5rem js\nassert strictEqual(\nnew __helpers CSSHelp(document) getStyle('tr[class=\"total\"] th') getPropertyValue('padding'),\n'0 5rem 0px 0 25rem 0 5rem'\n);\n--seed--\n--seed-contents--\n```html\nBalance Sheet\nAcmeWidgetCorp\nBalance Sheet\n2019\n2020\n2021\nAssets\n2019\n2020\n2021\nCash This is the cash we currently have on hand $25\n$30\n$28\nChecking Our primary transactional account $54\n$56\n$53\nSavings Funds set aside for emergencies $500\n$650\n$728\nTotal Assets\n$579\n$736\n$809\nLiabilities\n2019\n2020\n2021\nLoans The outstanding balance on our startup loan $500\n$250\n$0\nExpenses Annual anticipated expenses, such as payroll $200\n$300\n$400\nCredit The outstanding balance on our credit card $50\n$50\n$75\nTotal Liabilities\n$750\n$600\n$475\nNet Worth\n2019\n2020\n2021\nTotal Net Worth\n$-171\n$136\n$334\n```\n```css\nspan[class~=\"sr-only\"] {\nborder: 0 important;\nclip: rect(1px, 1px, 1px, 1px) important;\nclip-path: inset(50%)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620191707bc65579ddd3ce15.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "df97c0832d330f635f14e9d60c48ccb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620191707bc65579ddd3ce15.md",
    "source_type": "git_repo",
    "title": "Balance Sheet",
    "content": "emergencies $500 $650 $728 Total Assets $579 $736 $809 Liabilities 2019 2020 2021 Loans The outstanding balance on our startup loan $500 $250 $0 Expenses Annual anticipated expenses, such as payroll $200 $300 $400 Credit The outstanding balance on our credit card $50 $50 $75 Total Liabilities $750 $600 $475 Net Worth 2019 2020 2021 Total Net Worth $-171 $136 $334 ``` ```css span[class~=\"sr-only\"] { border: 0 important; clip: rect(1px, 1px, 1px, 1px) important; clip-path: inset(50%)important;\nheight: 1px important;\nwidth: 1px important;\nposition: absolute important;\noverflow: hidden important;\nwhite-space: nowrap important;\npadding: 0 important;\nmargin: -1px important;\n}\nhtml {\nbox-sizing: border-box;\n}\nbody {\nfont-family: sans-serif;\ncolor: #0a0a23;\n}\nh1 {\nmax-width: 37 25rem;\nmargin: 0 auto;\npadding: 1 5rem 1 25rem;\n}\nh1 flex {\ndisplay: flex;\nflex-direction: column-reverse;\ngap: 1rem;\n}\nh1 flex span:first-of-type {\nfont-size: 0 7em;\n}\nh1 flex span:last-of-type {\nfont-size: 1 2em;\n}\nsection {\nmax-width: 40rem;\nmargin: 0 auto;\nborder: 2px solid #d0d0d5;\n}\nyears {\ndisplay: flex;\njustify-content: flex-end;\nposition: sticky;\nz-index: 999;\ntop: 0;\nbackground: #0a0a23;\ncolor: #fff;\npadding: 0 5rem calc(1 25rem + 2px) 0 5rem 0;\nmargin: 0 -2px;\n}\nyears span[class] {\nfont-weight: bold;\nwidth: 4 5rem;\ntext-align: right;\n} table-wrap {\npadding: 0 0 75rem 1 5rem 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6961,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\workshop-balance-sheet\\620191707bc65579ddd3ce15.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 1,
    "total_chunks": 3
  }
]