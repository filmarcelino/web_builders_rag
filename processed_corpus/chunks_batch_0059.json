[
  {
    "id": "4fa17e85e13205edc814ecd079ad8a35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "розумію, що плагіат є актом інтелектуальної нечесності і те, що людей зазвичай виганяють з університету чи звільняють з роботи, якщо їх спіймають на плагіаті»\", \"p4\": \"«Окрім використання бібліотек з відкритим вихідним кодом, таких як jQuery і Bootstrap, а також коротких фрагментів коду, де є посилання на оригінального автора, 100% коду в моїх проєктах написано мною, або разом з іншим студентом, який проходив навчальну програму freeCodeCamp та з яким я займався(-лась) парним програмуванням в режимі реального часу»\",\n      \"p5\": \"«Я зобов’язуюсь, що жоден з моїх проєктів freeCodeCamp org не буде плагіатом Я розумію, що команда freeCodeCamp org буде перевіряти мої проєкти, щоб підтвердити це",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 44,
    "total_chunks": 206
  },
  {
    "id": "9afa779ad93fd913910b02466aa6307e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "використання бібліотек з відкритим вихідним кодом, таких як jQuery і Bootstrap, а також коротких фрагментів коду, де є посилання на оригінального автора, 100% коду в моїх проєктах написано мною, або разом з іншим студентом, який проходив навчальну програму freeCodeCamp та з яким я займався(-лась) парним програмуванням в режимі реального часу»\", \"p5\": \"«Я зобов’язуюсь, що жоден з моїх проєктів freeCodeCamp org не буде плагіатом Я розумію, що команда freeCodeCamp org буде перевіряти мої проєкти, щоб підтвердити це»\",\n      \"p6\": \"У ситуаціях, коли ми виявляємо випадки однозначного плагіату, ми замінюємо сертифікацію цієї людини повідомленням про те, що «Після перевірки цей обліковий запис позначено як той, що порушує академічну доброчесність »\",\n      \"p7\": \"Як академічна установа, яка надає сертифікації на основі досягнень, ми дуже серйозно ставимося до академічної доброчесності",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 45,
    "total_chunks": 206
  },
  {
    "id": "d3081b978654c948e33e2bbc259d6a9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "реального часу»\", \"p5\": \"«Я зобов’язуюсь, що жоден з моїх проєктів freeCodeCamp org не буде плагіатом Я розумію, що команда freeCodeCamp org буде перевіряти мої проєкти, щоб підтвердити це»\", \"p6\": \"У ситуаціях, коли ми виявляємо випадки однозначного плагіату, ми замінюємо сертифікацію цієї людини повідомленням про те, що «Після перевірки цей обліковий запис позначено як той, що порушує академічну доброчесність »\", \"p7\": \"Як академічна установа, яка надає сертифікації на основі досягнень, ми дуже серйозно ставимося до академічної доброчесностіЯкщо у вас є будь-які запитання щодо цієї політики, або ви підозрюєте, що хтось порушив її, можете написати нам <0>{{email}}</0> і ми розглянемо це питання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 46,
    "total_chunks": 206
  },
  {
    "id": "ca2a939fd1681f4bca9b15592e064b81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "проєкти, щоб підтвердити це»\", \"p6\": \"У ситуаціях, коли ми виявляємо випадки однозначного плагіату, ми замінюємо сертифікацію цієї людини повідомленням про те, що «Після перевірки цей обліковий запис позначено як той, що порушує академічну доброчесність »\", \"p7\": \"Як академічна установа, яка надає сертифікації на основі досягнень, ми дуже серйозно ставимося до академічної доброчесностіЯкщо у вас є будь-які запитання щодо цієї політики, або ви підозрюєте, що хтось порушив її, можете написати нам <0>{{email}}</0> і ми розглянемо це питання\"\n    }\n  },\n  \"exam\": {\n    \"download-header\": \"Завантажте застосунок для екзаменів freeCodeCamp\",\n    \"explanation\": \"Щоб отримати сертифікацію, потрібно скласти екзамен з метою перевірки отриманих знань Екзамен абсолютно безоплатний \",\n    \"version\": \"Найновіша версія застосунку: {{version}}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 47,
    "total_chunks": 206
  },
  {
    "id": "e0775e9891e177f6e64c25bd36ad007f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "порушує академічну доброчесність »\", \"p7\": \"Як академічна установа, яка надає сертифікації на основі досягнень, ми дуже серйозно ставимося до академічної доброчесностіЯкщо у вас є будь-які запитання щодо цієї політики, або ви підозрюєте, що хтось порушив її, можете написати нам <0>{{email}}</0> і ми розглянемо це питання\" } }, \"exam\": { \"download-header\": \"Завантажте застосунок для екзаменів freeCodeCamp\", \"explanation\": \"Щоб отримати сертифікацію, потрібно скласти екзамен з метою перевірки отриманих знань Екзамен абсолютно безоплатний \", \"version\": \"Найновіша версія застосунку: {{version}}\",\n    \"download-details\": \"Завантажте застосунок самостійно\",\n    \"unable-to-detect-os\": \"Не вдалося виявити вашу операційну систему Будь ласка, завантажте застосунок нижче самостійно",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 48,
    "total_chunks": 206
  },
  {
    "id": "93fab68decd4645a65b9816687854473",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "ставимося до академічної доброчесностіЯкщо у вас є будь-які запитання щодо цієї політики, або ви підозрюєте, що хтось порушив її, можете написати нам <0>{{email}}</0> і ми розглянемо це питання\" } }, \"exam\": { \"download-header\": \"Завантажте застосунок для екзаменів freeCodeCamp\", \"explanation\": \"Щоб отримати сертифікацію, потрібно скласти екзамен з метою перевірки отриманих знань Екзамен абсолютно безоплатний \", \"version\": \"Найновіша версія застосунку: {{version}}\", \"download-details\": \"Завантажте застосунок самостійно\", \"unable-to-detect-os\": \"Не вдалося виявити вашу операційну систему Будь ласка, завантажте застосунок нижче самостійно\",\n    \"download-trouble\": \"Якщо виникли проблеми із завантаженням потрібної версії, зверніться до служби підтримки:\"\n  },\n  \"profile\": {\n    \"you-change-privacy\": \"Вам потрібно змінити налаштування конфіденційності для того, щоб інші могли побачити ваше портфоліо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 49,
    "total_chunks": 206
  },
  {
    "id": "1e2800d9c01f1dae5bfeac5394c92b98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "}, \"exam\": { \"download-header\": \"Завантажте застосунок для екзаменів freeCodeCamp\", \"explanation\": \"Щоб отримати сертифікацію, потрібно скласти екзамен з метою перевірки отриманих знань Екзамен абсолютно безоплатний \", \"version\": \"Найновіша версія застосунку: {{version}}\", \"download-details\": \"Завантажте застосунок самостійно\", \"unable-to-detect-os\": \"Не вдалося виявити вашу операційну систему Будь ласка, завантажте застосунок нижче самостійно\", \"download-trouble\": \"Якщо виникли проблеми із завантаженням потрібної версії, зверніться до служби підтримки:\" }, \"profile\": { \"you-change-privacy\": \"Вам потрібно змінити налаштування конфіденційності для того, щоб інші могли побачити ваше портфоліоЦе попередній перегляд того, як ваше портфоліо буде виглядати при відкритому доступі \",\n    \"username-change-privacy\": \"{{username}} має змінити налаштування конфіденційності для того, щоб ви могли переглянути портфоліо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 50,
    "total_chunks": 206
  },
  {
    "id": "e4f27028bbda05f30eaef9626a4c1648",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"version\": \"Найновіша версія застосунку: {{version}}\", \"download-details\": \"Завантажте застосунок самостійно\", \"unable-to-detect-os\": \"Не вдалося виявити вашу операційну систему Будь ласка, завантажте застосунок нижче самостійно\", \"download-trouble\": \"Якщо виникли проблеми із завантаженням потрібної версії, зверніться до служби підтримки:\" }, \"profile\": { \"you-change-privacy\": \"Вам потрібно змінити налаштування конфіденційності для того, щоб інші могли побачити ваше портфоліоЦе попередній перегляд того, як ваше портфоліо буде виглядати при відкритому доступі \", \"username-change-privacy\": \"{{username}} має змінити налаштування конфіденційності для того, щоб ви могли переглянути портфоліо\",\n    \"supporter\": \"Донор\",\n    \"contributor\": \"Найактивніший користувач\",\n    \"contributor-prolific\": \"Серед найактивніших волонтерів у {{year}} році\",\n    \"no-certs\": \"Не було отримано сертифікацій у цій навчальній програмі\",\n    \"fcc-certs\": \"Сертифікації freeCodeCamp\",\n    \"longest-streak\": \"Найдовший час без перерви:\",\n    \"current-streak\": \"Поточний час без перерви:\",\n    \"portfolio\": \"Портфоліо\",\n    \"badges\": \"Значки\",\n    \"donated\": \"Задонатив(-ла) спільноті\",\n    \"projects\": \"Проєкти\",\n    \"stats\": \"Статистика\",\n    \"activity\": \"Активність\",\n    \"timeline\": \"Хронологія\",\n    \"none-completed\": \"Поки що немає виконаних завдань",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 51,
    "total_chunks": 206
  },
  {
    "id": "4289b7210708ec53b013bf647c99befd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "ваше портфоліо буде виглядати при відкритому доступі \", \"username-change-privacy\": \"{{username}} має змінити налаштування конфіденційності для того, щоб ви могли переглянути портфоліо\", \"supporter\": \"Донор\", \"contributor\": \"Найактивніший користувач\", \"contributor-prolific\": \"Серед найактивніших волонтерів у {{year}} році\", \"no-certs\": \"Не було отримано сертифікацій у цій навчальній програмі\", \"fcc-certs\": \"Сертифікації freeCodeCamp\", \"longest-streak\": \"Найдовший час без перерви:\", \"current-streak\": \"Поточний час без перерви:\", \"portfolio\": \"Портфоліо\", \"badges\": \"Значки\", \"donated\": \"Задонатив(-ла) спільноті\", \"projects\": \"Проєкти\", \"stats\": \"Статистика\", \"activity\": \"Активність\", \"timeline\": \"Хронологія\", \"none-completed\": \"Поки що немає виконаних завдань\",\n    \"get-started\": \"Почніть тут \",\n    \"challenge\": \"Завдання\",\n    \"completed\": \"Виконано\",\n    \"add-linkedin\": \"Додати цю сертифікацію до мого профілю LinkedIn\",\n    \"add-twitter\": \"Поділитись сертифікацією на X\",\n    \"tweet\": \"Я щойно отримав(-ла) сертифікацію {{certTitle}} від @freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 52,
    "total_chunks": 206
  },
  {
    "id": "11e03d0988fd9e1725ce09193e51d106",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "волонтерів у {{year}} році\", \"no-certs\": \"Не було отримано сертифікацій у цій навчальній програмі\", \"fcc-certs\": \"Сертифікації freeCodeCamp\", \"longest-streak\": \"Найдовший час без перерви:\", \"current-streak\": \"Поточний час без перерви:\", \"portfolio\": \"Портфоліо\", \"badges\": \"Значки\", \"donated\": \"Задонатив(-ла) спільноті\", \"projects\": \"Проєкти\", \"stats\": \"Статистика\", \"activity\": \"Активність\", \"timeline\": \"Хронологія\", \"none-completed\": \"Поки що немає виконаних завдань\", \"get-started\": \"Почніть тут \", \"challenge\": \"Завдання\", \"completed\": \"Виконано\", \"add-linkedin\": \"Додати цю сертифікацію до мого профілю LinkedIn\", \"add-twitter\": \"Поділитись сертифікацією на X\", \"tweet\": \"Я щойно отримав(-ла) сертифікацію {{certTitle}} від @freeCodeCampПерегляньте її тут: {{certURL}}\",\n    \"avatar\": \"Аватар {{username}}\",\n    \"joined\": \"Приєднався(-лась) {{date}}\",\n    \"from\": \"{{location}}\",\n    \"total-points\": \"Всього балів:\",\n    \"points_one\": \"Балів станом на {{date}}: {{count}}\",\n    \"points_other\": \"Балів станом на {{date}}: {{count}}\",\n    \"page-number\": \"{{pageNumber}} з {{totalPages}}\",\n    \"edit-my-profile\": \"Редагувати профіль\",\n    \"add-bluesky\": \"Поділитись сертифікацією на BlueSky\",\n    \"add-threads\": \"Поділитись сертифікацією на Threads\"\n  },\n  \"footer\": {\n    \"tax-exempt-status\": \"freeCodeCamp — це некомерційна організація, яка підтримується спонсорськими внесками та звільнена від сплати податків 501(c)(3) (Федеральний ідентифікаційний номер платника податків США: 82-0779546)",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 53,
    "total_chunks": 206
  },
  {
    "id": "81a462dae963bd600c91fe6f5c14c270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Я щойно отримав(-ла) сертифікацію {{certTitle}} від @freeCodeCampПерегляньте її тут: {{certURL}}\", \"avatar\": \"Аватар {{username}}\", \"joined\": \"Приєднався(-лась) {{date}}\", \"from\": \"{{location}}\", \"total-points\": \"Всього балів:\", \"points_one\": \"Балів станом на {{date}}: {{count}}\", \"points_other\": \"Балів станом на {{date}}: {{count}}\", \"page-number\": \"{{pageNumber}} з {{totalPages}}\", \"edit-my-profile\": \"Редагувати профіль\", \"add-bluesky\": \"Поділитись сертифікацією на BlueSky\", \"add-threads\": \"Поділитись сертифікацією на Threads\" }, \"footer\": { \"tax-exempt-status\": \"freeCodeCamp — це некомерційна організація, яка підтримується спонсорськими внесками та звільнена від сплати податків 501(c)(3) (Федеральний ідентифікаційний номер платника податків США: 82-0779546)\",\n    \"mission-statement\": \"Ми хочемо допомогти людям безоплатно навчитися програмувати Ми досягаємо цього, створюючи тисячі відео, статей та інтерактивних уроків з програмування — вони усі доступні для широкого загалу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 54,
    "total_chunks": 206
  },
  {
    "id": "02cae31a88546a2d7a116523a20e1369",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"points_other\": \"Балів станом на {{date}}: {{count}}\", \"page-number\": \"{{pageNumber}} з {{totalPages}}\", \"edit-my-profile\": \"Редагувати профіль\", \"add-bluesky\": \"Поділитись сертифікацією на BlueSky\", \"add-threads\": \"Поділитись сертифікацією на Threads\" }, \"footer\": { \"tax-exempt-status\": \"freeCodeCamp — це некомерційна організація, яка підтримується спонсорськими внесками та звільнена від сплати податків 501(c)(3) (Федеральний ідентифікаційний номер платника податків США: 82-0779546)\", \"mission-statement\": \"Ми хочемо допомогти людям безоплатно навчитися програмувати Ми досягаємо цього, створюючи тисячі відео, статей та інтерактивних уроків з програмування — вони усі доступні для широкого загалу\",\n    \"donation-initiatives\": \"Внески до freeCodeCamp йдуть на наші освітні програми та допомагають оплачувати сервери, послуги та персонал \",\n    \"donate-text\": \"Ви можете <1>зробити неоподаткований донат тут</1>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 55,
    "total_chunks": 206
  },
  {
    "id": "4059aef630fcfef03d08c7424c3a2b67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"footer\": { \"tax-exempt-status\": \"freeCodeCamp — це некомерційна організація, яка підтримується спонсорськими внесками та звільнена від сплати податків 501(c)(3) (Федеральний ідентифікаційний номер платника податків США: 82-0779546)\", \"mission-statement\": \"Ми хочемо допомогти людям безоплатно навчитися програмувати Ми досягаємо цього, створюючи тисячі відео, статей та інтерактивних уроків з програмування — вони усі доступні для широкого загалу\", \"donation-initiatives\": \"Внески до freeCodeCamp йдуть на наші освітні програми та допомагають оплачувати сервери, послуги та персонал \", \"donate-text\": \"Ви можете <1>зробити неоподаткований донат тут</1>\",\n    \"trending-guides\": \"Популярні статті\",\n    \"mobile-app\": \"Мобільний застосунок\",\n    \"our-nonprofit\": \"Наша організація\",\n    \"links\": {\n      \"about\": \"Про нас\",\n      \"alumni\": \"Спільнота випускників\",\n      \"open-source\": \"Відкритий вихідний код\",\n      \"shop\": \"Магазин\",\n      \"support\": \"Допомога\",\n      \"sponsors\": \"Спонсори\",\n      \"honesty\": \"Академічна доброчесність\",\n      \"coc\": \"Кодекс поведінки\",\n      \"privacy\": \"Політика конфіденційності\",\n      \"tos\": \"Умови надання послуг\",\n      \"copyright\": \"Політика захисту авторських прав\"\n    },\n    \"language\": \"Мова:\"\n  },\n  \"learn\": {\n    \"heading\": \"Ласкаво просимо до навчальної програми freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 56,
    "total_chunks": 206
  },
  {
    "id": "bde124c4f96073c4568f5e8d6683c736",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "наші освітні програми та допомагають оплачувати сервери, послуги та персонал \", \"donate-text\": \"Ви можете <1>зробити неоподаткований донат тут</1>\", \"trending-guides\": \"Популярні статті\", \"mobile-app\": \"Мобільний застосунок\", \"our-nonprofit\": \"Наша організація\", \"links\": { \"about\": \"Про нас\", \"alumni\": \"Спільнота випускників\", \"open-source\": \"Відкритий вихідний код\", \"shop\": \"Магазин\", \"support\": \"Допомога\", \"sponsors\": \"Спонсори\", \"honesty\": \"Академічна доброчесність\", \"coc\": \"Кодекс поведінки\", \"privacy\": \"Політика конфіденційності\", \"tos\": \"Умови надання послуг\", \"copyright\": \"Політика захисту авторських прав\" }, \"language\": \"Мова:\" }, \"learn\": { \"heading\": \"Ласкаво просимо до навчальної програми freeCodeCamp\",\n    \"skip-to-content\": \"Перейти до змісту\",\n    \"welcome-1\": \"З поверненням, {{name}} \",\n    \"welcome-2\": \"Ласкаво просимо до freeCodeCamp org\",\n    \"start-at-beginning\": \"Якщо ви новачок у програмуванні, ми рекомендуємо <0>почати з початку</0> \",\n    \"happy-coding\": \"Щасливого програмування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 57,
    "total_chunks": 206
  },
  {
    "id": "214c6081de14905ae7fb0df7654220b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Про нас\", \"alumni\": \"Спільнота випускників\", \"open-source\": \"Відкритий вихідний код\", \"shop\": \"Магазин\", \"support\": \"Допомога\", \"sponsors\": \"Спонсори\", \"honesty\": \"Академічна доброчесність\", \"coc\": \"Кодекс поведінки\", \"privacy\": \"Політика конфіденційності\", \"tos\": \"Умови надання послуг\", \"copyright\": \"Політика захисту авторських прав\" }, \"language\": \"Мова:\" }, \"learn\": { \"heading\": \"Ласкаво просимо до навчальної програми freeCodeCamp\", \"skip-to-content\": \"Перейти до змісту\", \"welcome-1\": \"З поверненням, {{name}} \", \"welcome-2\": \"Ласкаво просимо до freeCodeCamp org\", \"start-at-beginning\": \"Якщо ви новачок у програмуванні, ми рекомендуємо <0>почати з початку</0> \", \"happy-coding\": \"Щасливого програмування\",\n    \"upcoming-lessons\": \"Майбутні уроки\",\n    \"learn\": \"Навчання\",\n    \"add-subtitles\": \"Допомогти покращити або додати субтитри\",\n    \"wrong-answer\": \"Нам шкода, але це неправильна відповідь Спробуєте ще раз \",\n    \"check-answer\": \"Натисніть кнопку нижче, щоб перевірити свою відповідь",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 58,
    "total_chunks": 206
  },
  {
    "id": "cece9fb4cc8ca96322f4fa975833538b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "захисту авторських прав\" }, \"language\": \"Мова:\" }, \"learn\": { \"heading\": \"Ласкаво просимо до навчальної програми freeCodeCamp\", \"skip-to-content\": \"Перейти до змісту\", \"welcome-1\": \"З поверненням, {{name}} \", \"welcome-2\": \"Ласкаво просимо до freeCodeCamp org\", \"start-at-beginning\": \"Якщо ви новачок у програмуванні, ми рекомендуємо <0>почати з початку</0> \", \"happy-coding\": \"Щасливого програмування\", \"upcoming-lessons\": \"Майбутні уроки\", \"learn\": \"Навчання\", \"add-subtitles\": \"Допомогти покращити або додати субтитри\", \"wrong-answer\": \"Нам шкода, але це неправильна відповідь Спробуєте ще раз \", \"check-answer\": \"Натисніть кнопку нижче, щоб перевірити свою відповідь\",\n    \"assignment-not-complete_one\": \"Будь ласка, завершіть завдання\",\n    \"assignment-not-complete_other\": \"Будь ласка, завершіть завдання\",\n    \"assignments_one\": \"Завдання\",\n    \"assignments_other\": \"Завдання\",\n    \"question\": \"Запитання\",\n    \"questions\": \"Запитання\",\n    \"answered-mcq\": \"Ви не відповіли на всі запитання та/або допустились помилок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 59,
    "total_chunks": 206
  },
  {
    "id": "9aa7e812c20d3733b0c031703180d75e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "до freeCodeCamp org\", \"start-at-beginning\": \"Якщо ви новачок у програмуванні, ми рекомендуємо <0>почати з початку</0> \", \"happy-coding\": \"Щасливого програмування\", \"upcoming-lessons\": \"Майбутні уроки\", \"learn\": \"Навчання\", \"add-subtitles\": \"Допомогти покращити або додати субтитри\", \"wrong-answer\": \"Нам шкода, але це неправильна відповідь Спробуєте ще раз \", \"check-answer\": \"Натисніть кнопку нижче, щоб перевірити свою відповідь\", \"assignment-not-complete_one\": \"Будь ласка, завершіть завдання\", \"assignment-not-complete_other\": \"Будь ласка, завершіть завдання\", \"assignments_one\": \"Завдання\", \"assignments_other\": \"Завдання\", \"question\": \"Запитання\", \"questions\": \"Запитання\", \"answered-mcq\": \"Ви не відповіли на всі запитання та/або допустились помилок\",\n    \"explanation\": \"Пояснення\",\n    \"transcript\": \"Текстова версія\",\n    \"solution-link\": \"Посилання на розв’язок\",\n    \"source-code-link\": \"Посилання на вихідний код\",\n    \"ms-link\": \"Посилання Microsoft\",\n    \"submit-and-go\": \"Відправити та перейти до наступного завдання\",\n    \"congratulations\": \"Вітаємо, ваш код проходить Відправте свій код, щоб продовжити",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 60,
    "total_chunks": 206
  },
  {
    "id": "bcc8c51dced69c9c1256be5db95c358a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "неправильна відповідь Спробуєте ще раз \", \"check-answer\": \"Натисніть кнопку нижче, щоб перевірити свою відповідь\", \"assignment-not-complete_one\": \"Будь ласка, завершіть завдання\", \"assignment-not-complete_other\": \"Будь ласка, завершіть завдання\", \"assignments_one\": \"Завдання\", \"assignments_other\": \"Завдання\", \"question\": \"Запитання\", \"questions\": \"Запитання\", \"answered-mcq\": \"Ви не відповіли на всі запитання та/або допустились помилок\", \"explanation\": \"Пояснення\", \"transcript\": \"Текстова версія\", \"solution-link\": \"Посилання на розв’язок\", \"source-code-link\": \"Посилання на вихідний код\", \"ms-link\": \"Посилання Microsoft\", \"submit-and-go\": \"Відправити та перейти до наступного завдання\", \"congratulations\": \"Вітаємо, ваш код проходить Відправте свій код, щоб продовжити\",\n    \"congratulations-code-passes\": \"✔ Вітаємо Ваш код працює",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 61,
    "total_chunks": 206
  },
  {
    "id": "0c06fe1a867ff67a41f63e312ef3f869",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"check-answer\": \"Натисніть кнопку нижче, щоб перевірити свою відповідь\", \"assignment-not-complete_one\": \"Будь ласка, завершіть завдання\", \"assignment-not-complete_other\": \"Будь ласка, завершіть завдання\", \"assignments_one\": \"Завдання\", \"assignments_other\": \"Завдання\", \"question\": \"Запитання\", \"questions\": \"Запитання\", \"answered-mcq\": \"Ви не відповіли на всі запитання та/або допустились помилок\", \"explanation\": \"Пояснення\", \"transcript\": \"Текстова версія\", \"solution-link\": \"Посилання на розв’язок\", \"source-code-link\": \"Посилання на вихідний код\", \"ms-link\": \"Посилання Microsoft\", \"submit-and-go\": \"Відправити та перейти до наступного завдання\", \"congratulations\": \"Вітаємо, ваш код проходить Відправте свій код, щоб продовжити\", \"congratulations-code-passes\": \"✔ Вітаємо Ваш код працює\",\n    \"i-completed\": \"Я виконав(-ла) це завдання\",\n    \"example-code\": \"Приклад коду\",\n    \"test-output\": \"Результат вашого тесту буде доступний тут\",\n    \"running-tests\": \"// запущені тести\",\n    \"tests-completed\": \"// виконані тести\",\n    \"console-output\": \"// вивід консолі\",\n    \"example-app\": \"Створіть застосунок, функціонально схожий на <0>приклад</0>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 62,
    "total_chunks": 206
  },
  {
    "id": "26f26bba7f6b302e8f1612220e43451e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "допустились помилок\", \"explanation\": \"Пояснення\", \"transcript\": \"Текстова версія\", \"solution-link\": \"Посилання на розв’язок\", \"source-code-link\": \"Посилання на вихідний код\", \"ms-link\": \"Посилання Microsoft\", \"submit-and-go\": \"Відправити та перейти до наступного завдання\", \"congratulations\": \"Вітаємо, ваш код проходить Відправте свій код, щоб продовжити\", \"congratulations-code-passes\": \"✔ Вітаємо Ваш код працює\", \"i-completed\": \"Я виконав(-ла) це завдання\", \"example-code\": \"Приклад коду\", \"test-output\": \"Результат вашого тесту буде доступний тут\", \"running-tests\": \"// запущені тести\", \"tests-completed\": \"// виконані тести\", \"console-output\": \"// вивід консолі\", \"example-app\": \"Створіть застосунок, функціонально схожий на <0>приклад</0>Спробуйте не копіювати проєкт, а надати власного стилю \",\n    \"syntax-error\": \"У коді виникла помилка ще до того, як запустились тести Будь ласка, виправте це і спробуйте знову \",\n    \"indentation-error\": \"У коді наявна помилка відступів Спробуйте додати <code>pass</code> в новому рядку, щоб утворити дійсний блок коду",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 63,
    "total_chunks": 206
  },
  {
    "id": "3f17df9abc8b46b694b40b287a7ae034",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "виконав(-ла) це завдання\", \"example-code\": \"Приклад коду\", \"test-output\": \"Результат вашого тесту буде доступний тут\", \"running-tests\": \"// запущені тести\", \"tests-completed\": \"// виконані тести\", \"console-output\": \"// вивід консолі\", \"example-app\": \"Створіть застосунок, функціонально схожий на <0>приклад</0>Спробуйте не копіювати проєкт, а надати власного стилю \", \"syntax-error\": \"У коді виникла помилка ще до того, як запустились тести Будь ласка, виправте це і спробуйте знову \", \"indentation-error\": \"У коді наявна помилка відступів Спробуйте додати <code>pass</code> в новому рядку, щоб утворити дійсний блок коду\",\n    \"sign-in-save\": \"Увійдіть, щоб зберегти свій прогрес\",\n    \"download-solution\": \"Завантажити розв’язок\",\n    \"download-results\": \"Завантажити результати\",\n    \"percent-complete\": \"виконано {{percent}}%\",\n    \"project-complete\": \"Завершено {{completedChallengesInBlock}} із {{totalChallengesInBlock}} сертифікаційних проєктів\",\n    \"tried-rsa\": \"Якщо ви вже спробували метод <0>читати-шукати-питати</0>, то ви можете звернутися за допомогою на форум freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 64,
    "total_chunks": 206
  },
  {
    "id": "c7935952b93fe0b1971a19dcab7713a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "стилю \", \"syntax-error\": \"У коді виникла помилка ще до того, як запустились тести Будь ласка, виправте це і спробуйте знову \", \"indentation-error\": \"У коді наявна помилка відступів Спробуйте додати <code>pass</code> в новому рядку, щоб утворити дійсний блок коду\", \"sign-in-save\": \"Увійдіть, щоб зберегти свій прогрес\", \"download-solution\": \"Завантажити розв’язок\", \"download-results\": \"Завантажити результати\", \"percent-complete\": \"виконано {{percent}}%\", \"project-complete\": \"Завершено {{completedChallengesInBlock}} із {{totalChallengesInBlock}} сертифікаційних проєктів\", \"tried-rsa\": \"Якщо ви вже спробували метод <0>читати-шукати-питати</0>, то ви можете звернутися за допомогою на форум freeCodeCamp\",\n    \"read-search-ask-checkbox\": \"Я спробував(-ла) метод <0>читати-шукати-питати</0>\",\n    \"similar-questions-checkbox\": \"Я шукав(-ла) <0>схожі запитання на форумі, на які вже є відповідь</0>\",\n    \"minimum-characters\": \"Будь ласка, додайте більше символів (принаймні {{characters}})\",\n    \"characters-left\": \"Скільки символів ще можна додати: {{characters}}\",\n    \"must-confirm-statements\": \"Підтвердьте наступні твердження, перш ніж опублікувати допис на форумі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 65,
    "total_chunks": 206
  },
  {
    "id": "15b1e09abd9380242c8b58729bbdb713",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "свій прогрес\", \"download-solution\": \"Завантажити розв’язок\", \"download-results\": \"Завантажити результати\", \"percent-complete\": \"виконано {{percent}}%\", \"project-complete\": \"Завершено {{completedChallengesInBlock}} із {{totalChallengesInBlock}} сертифікаційних проєктів\", \"tried-rsa\": \"Якщо ви вже спробували метод <0>читати-шукати-питати</0>, то ви можете звернутися за допомогою на форум freeCodeCamp\", \"read-search-ask-checkbox\": \"Я спробував(-ла) метод <0>читати-шукати-питати</0>\", \"similar-questions-checkbox\": \"Я шукав(-ла) <0>схожі запитання на форумі, на які вже є відповідь</0>\", \"minimum-characters\": \"Будь ласка, додайте більше символів (принаймні {{characters}})\", \"characters-left\": \"Скільки символів ще можна додати: {{characters}}\", \"must-confirm-statements\": \"Підтвердьте наступні твердження, перш ніж опублікувати допис на форумі\",\n    \"min-50-max-500\": \"Мінімум 50 символів, максимум 500 символів\",\n    \"rsa\": \"Читати, шукати, питати\",\n    \"rsa-forum\": \"<strong>Перш ніж робити новий допис,</strong> будь ласка, <0>перевірте, чи на ваше запитання ще не відповіли на форумі</0>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 66,
    "total_chunks": 206
  },
  {
    "id": "06a26136dcdbcb0f815e70b6712ca9ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "за допомогою на форум freeCodeCamp\", \"read-search-ask-checkbox\": \"Я спробував(-ла) метод <0>читати-шукати-питати</0>\", \"similar-questions-checkbox\": \"Я шукав(-ла) <0>схожі запитання на форумі, на які вже є відповідь</0>\", \"minimum-characters\": \"Будь ласка, додайте більше символів (принаймні {{characters}})\", \"characters-left\": \"Скільки символів ще можна додати: {{characters}}\", \"must-confirm-statements\": \"Підтвердьте наступні твердження, перш ніж опублікувати допис на форумі\", \"min-50-max-500\": \"Мінімум 50 символів, максимум 500 символів\", \"rsa\": \"Читати, шукати, питати\", \"rsa-forum\": \"<strong>Перш ніж робити новий допис,</strong> будь ласка, <0>перевірте, чи на ваше запитання ще не відповіли на форумі</0>\",\n    \"reset\": \"Скинути цей урок \",\n    \"reset-warn\": \"Ви впевнені, що хочете скинути урок «{{title}}» Редактори та тести буде скинуто \",\n    \"reset-warn-2\": \"Цю дію неможливо скасувати \",\n    \"revert-warn\": \"Ви впевнені, що хочете скинути цей урок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 67,
    "total_chunks": 206
  },
  {
    "id": "9111b63970c89f144ae35fe58b8e16d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "ще можна додати: {{characters}}\", \"must-confirm-statements\": \"Підтвердьте наступні твердження, перш ніж опублікувати допис на форумі\", \"min-50-max-500\": \"Мінімум 50 символів, максимум 500 символів\", \"rsa\": \"Читати, шукати, питати\", \"rsa-forum\": \"<strong>Перш ніж робити новий допис,</strong> будь ласка, <0>перевірте, чи на ваше запитання ще не відповіли на форумі</0>\", \"reset\": \"Скинути цей урок \", \"reset-warn\": \"Ви впевнені, що хочете скинути урок «{{title}}» Редактори та тести буде скинуто \", \"reset-warn-2\": \"Цю дію неможливо скасувати \", \"revert-warn\": \"Ви впевнені, що хочете скинути цей урокОстанні зміни буде скасовано, а код буде відновлено до останньої збереженої версії \",\n    \"scrimba-tip\": \"Порада: якщо мінібраузер закриває код, то натисніть та перетягніть його у сторону Також не соромтеся зупинятися та редагувати код у відео у будь-який час \",\n    \"chal-preview\": \"Попередній перегляд завдання\",\n    \"donation-record-not-found\": \"Запис про ваш донат не знайдено",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 68,
    "total_chunks": 206
  },
  {
    "id": "f9d311bd7bc1e083505c247190c411b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Ви впевнені, що хочете скинути урок «{{title}}» Редактори та тести буде скинуто \", \"reset-warn-2\": \"Цю дію неможливо скасувати \", \"revert-warn\": \"Ви впевнені, що хочете скинути цей урокОстанні зміни буде скасовано, а код буде відновлено до останньої збереженої версії \", \"scrimba-tip\": \"Порада: якщо мінібраузер закриває код, то натисніть та перетягніть його у сторону Також не соромтеся зупинятися та редагувати код у відео у будь-який час \", \"chal-preview\": \"Попередній перегляд завдання\", \"donation-record-not-found\": \"Запис про ваш донат не знайдено\",\n    \"donation-heading\": \"Прогрес нашої мети\",\n    \"sign-in-card-update\": \"Увійдіть, щоб оновити свою картку\",\n    \"sign-in-see-benefits\": \"Увійдіть, щоб побачити переваги донорів\",\n    \"card-has-been-updated\": \"Вашу картку успішно оновлено \",\n    \"contact-support-mistake\": \"Якщо виникла помилка, будь ласка, зв’яжіться з нами на donors@freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 69,
    "total_chunks": 206
  },
  {
    "id": "d46c405df3a683658463c4d525facd84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "відновлено до останньої збереженої версії \", \"scrimba-tip\": \"Порада: якщо мінібраузер закриває код, то натисніть та перетягніть його у сторону Також не соромтеся зупинятися та редагувати код у відео у будь-який час \", \"chal-preview\": \"Попередній перегляд завдання\", \"donation-record-not-found\": \"Запис про ваш донат не знайдено\", \"donation-heading\": \"Прогрес нашої мети\", \"sign-in-card-update\": \"Увійдіть, щоб оновити свою картку\", \"sign-in-see-benefits\": \"Увійдіть, щоб побачити переваги донорів\", \"card-has-been-updated\": \"Вашу картку успішно оновлено \", \"contact-support-mistake\": \"Якщо виникла помилка, будь ласка, зв’яжіться з нами на donors@freecodecamporg\",\n    \"editor-tabs\": {\n      \"code\": \"Код\",\n      \"tests\": \"Тести\",\n      \"restart\": \"Перезапустити\",\n      \"restart-step\": \"Перезапустити крок\",\n      \"console\": \"Консоль\",\n      \"instructions\": \"Інструкції\",\n      \"notes\": \"Примітки\",\n      \"preview\": \"Попередній перегляд\",\n      \"editor\": \"Редактор\"\n    },\n    \"editor-alerts\": {\n      \"tab-trapped\": \"При натисканні клавіші tab ви вставите символ табуляції\",\n      \"tab-free\": \"При натисканні клавіші tab ви перемістите фокус на наступний елемент, який можна сфокусувати\"\n    },\n    \"help-translate\": \"Ми досі перекладаємо цю сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 559,
    "chunk_index": 70,
    "total_chunks": 206
  },
  {
    "id": "c8cb4d9b9d23915a8f07d2c99ccf7384",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "щоб побачити переваги донорів\", \"card-has-been-updated\": \"Вашу картку успішно оновлено \", \"contact-support-mistake\": \"Якщо виникла помилка, будь ласка, зв’яжіться з нами на donors@freecodecamporg\", \"editor-tabs\": { \"code\": \"Код\", \"tests\": \"Тести\", \"restart\": \"Перезапустити\", \"restart-step\": \"Перезапустити крок\", \"console\": \"Консоль\", \"instructions\": \"Інструкції\", \"notes\": \"Примітки\", \"preview\": \"Попередній перегляд\", \"editor\": \"Редактор\" }, \"editor-alerts\": { \"tab-trapped\": \"При натисканні клавіші tab ви вставите символ табуляції\", \"tab-free\": \"При натисканні клавіші tab ви перемістите фокус на наступний елемент, який можна сфокусувати\" }, \"help-translate\": \"Ми досі перекладаємо цю сертифікацію\",\n    \"help-translate-link\": \"Допоможіть нам з перекладом \",\n    \"project-preview-title\": \"Попередній перегляд того, що ви будете створювати\",\n    \"demo-project-title\": \"Ось приклад проєкту, який відповідає вимогам\",\n    \"github-required\": \"<0>Створіть обліковий запис GitHub</0>, якщо у вас його немає Він знадобиться під час створення віртуальної серверної машини Linux Цей процес може зайняти кілька хвилин",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 71,
    "total_chunks": 206
  },
  {
    "id": "a92bdee7847aa0a6976524198583f59d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"tab-trapped\": \"При натисканні клавіші tab ви вставите символ табуляції\", \"tab-free\": \"При натисканні клавіші tab ви перемістите фокус на наступний елемент, який можна сфокусувати\" }, \"help-translate\": \"Ми досі перекладаємо цю сертифікацію\", \"help-translate-link\": \"Допоможіть нам з перекладом \", \"project-preview-title\": \"Попередній перегляд того, що ви будете створювати\", \"demo-project-title\": \"Ось приклад проєкту, який відповідає вимогам\", \"github-required\": \"<0>Створіть обліковий запис GitHub</0>, якщо у вас його немає Він знадобиться під час створення віртуальної серверної машини Linux Цей процес може зайняти кілька хвилин\",\n    \"gitpod\": {\n      \"intro\": \"Цей курс виконується у віртуальній машині Linux за допомогою Gitpod",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 72,
    "total_chunks": 206
  },
  {
    "id": "d2bdf302fe3ee7813bcbfd07e4d50eaa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "tab ви перемістите фокус на наступний елемент, який можна сфокусувати\" }, \"help-translate\": \"Ми досі перекладаємо цю сертифікацію\", \"help-translate-link\": \"Допоможіть нам з перекладом \", \"project-preview-title\": \"Попередній перегляд того, що ви будете створювати\", \"demo-project-title\": \"Ось приклад проєкту, який відповідає вимогам\", \"github-required\": \"<0>Створіть обліковий запис GitHub</0>, якщо у вас його немає Він знадобиться під час створення віртуальної серверної машини Linux Цей процес може зайняти кілька хвилин\", \"gitpod\": { \"intro\": \"Цей курс виконується у віртуальній машині Linux за допомогою GitpodДотримуйтесь цих інструкцій, щоб розпочати курс:\",\n      \"step-1\": \"<0>Створіть обліковий запис на GitHub</0>, якщо його немає\",\n      \"step-2\": \"Натисніть кнопку «Розпочати курс» нижче\",\n      \"step-3\": \"Увійдіть до Gitpod за допомогою облікового запису GitHub, якщо досі не зробили цього\",\n      \"step-4\": \"Як тільки віртуальна машина Linux завантажиться, запустіть розширення CodeRoad:\",\n      \"step-5\": \"натисніть на іконку «гамбургер» біля верхнього лівого кута вікна VSCode,\",\n      \"step-6\": \"перейдіть до меню «View»,\",\n      \"step-7\": \"натисніть на «Command Palette»,\",\n      \"step-8\": \"та виконайте команду «CodeRoad: Start»\",\n      \"step-9\": \"Дотримуйтесь інструкцій в CodeRoad, щоб завершити курс\",\n      \"continue-project\": \"Якщо натиснути на кнопку нижче, запуститься новий проєкт",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 73,
    "total_chunks": 206
  },
  {
    "id": "487487f3d15bae59d2e57f31345724e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "його немає\", \"step-2\": \"Натисніть кнопку «Розпочати курс» нижче\", \"step-3\": \"Увійдіть до Gitpod за допомогою облікового запису GitHub, якщо досі не зробили цього\", \"step-4\": \"Як тільки віртуальна машина Linux завантажиться, запустіть розширення CodeRoad:\", \"step-5\": \"натисніть на іконку «гамбургер» біля верхнього лівого кута вікна VSCode,\", \"step-6\": \"перейдіть до меню «View»,\", \"step-7\": \"натисніть на «Command Palette»,\", \"step-8\": \"та виконайте команду «CodeRoad: Start»\", \"step-9\": \"Дотримуйтесь інструкцій в CodeRoad, щоб завершити курс\", \"continue-project\": \"Якщо натиснути на кнопку нижче, запуститься новий проєктЯкщо ви вже працювали над курсом «{{course}}» та хочете продовжити, перейдіть на <0>свою панель Gitpod</0> \",\n      \"learn-more\": \"Див більше про <0>робочий простір Gitpod </0>\",\n      \"logout-warning\": \"Якщо ви вийдете з freeCodeCamp, не завершивши весь курс «{{course}}», ваш прогрес не буде збережено в обліковому записі freeCodeCamp \"\n    },\n    \"local\": {\n      \"intro\": \"Цей курс виконується на віртуальній машині Linux на вашому комп’ютері",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 74,
    "total_chunks": 206
  },
  {
    "id": "7338c59de59614f0eadcf538bde49e43",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "Start»\", \"step-9\": \"Дотримуйтесь інструкцій в CodeRoad, щоб завершити курс\", \"continue-project\": \"Якщо натиснути на кнопку нижче, запуститься новий проєктЯкщо ви вже працювали над курсом «{{course}}» та хочете продовжити, перейдіть на <0>свою панель Gitpod</0> \", \"learn-more\": \"Див більше про <0>робочий простір Gitpod </0>\", \"logout-warning\": \"Якщо ви вийдете з freeCodeCamp, не завершивши весь курс «{{course}}», ваш прогрес не буде збережено в обліковому записі freeCodeCamp \" }, \"local\": { \"intro\": \"Цей курс виконується на віртуальній машині Linux на вашому комп’ютеріЩоб розпочати, потрібно завантажити:\",\n      \"download-vscode\": \"<0>VS Code</0> і розширення <1>Dev Containers</1>\",\n      \"heading\": \"Потім дотримуйтесь цих інструкцій, щоб розпочати курс:\",\n      \"step-1\": \"Відкрийте термінал і клонуйте репозиторій RDB Alpha, виконавши команду <0>git clone https://github com/freeCodeCamp/rdb-alpha</0>\",\n      \"step-2\": \"Перейдіть до директорії <0>rdb-alpha</0> в терміналі за допомогою <1>cd rdb-alpha</1>, а також відкрийте VS Code за допомогою <2>code",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 75,
    "total_chunks": 206
  },
  {
    "id": "f3b8d6086b3e87e1ee9812de8e1793c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "«{{course}}», ваш прогрес не буде збережено в обліковому записі freeCodeCamp \" }, \"local\": { \"intro\": \"Цей курс виконується на віртуальній машині Linux на вашому комп’ютеріЩоб розпочати, потрібно завантажити:\", \"download-vscode\": \"<0>VS Code</0> і розширення <1>Dev Containers</1>\", \"heading\": \"Потім дотримуйтесь цих інструкцій, щоб розпочати курс:\", \"step-1\": \"Відкрийте термінал і клонуйте репозиторій RDB Alpha, виконавши команду <0>git clone https://github com/freeCodeCamp/rdb-alpha</0>\", \"step-2\": \"Перейдіть до директорії <0>rdb-alpha</0> в терміналі за допомогою <1>cd rdb-alpha</1>, а також відкрийте VS Code за допомогою <2>code</2>\",\n      \"sub-step-heading\": \"Якщо хочете зберегти прогрес в обліковому записі freeCodeCamp, зробіть наступне:\",\n      \"sub-step-1\": \"Згенеруйте токен користувача, якщо досі цього не зробили:\",\n      \"generate-token-btn\": \"Згенерувати токен користувача\",\n      \"sub-step-2\": \"Скопіюйте токен користувача:\",\n      \"copy-token-btn\": \"Скопіювати токен користувача\",\n      \"logout-warning\": \"Якщо ви вийдете з freeCodeCamp, не завершивши весь курс «{{course}}», ваш токен буде видалено, а прогрес не буде збережено в обліковому записі freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 530,
    "chunk_index": 76,
    "total_chunks": 206
  },
  {
    "id": "c4e259b633b6ce651aa3aed6c72de54b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "com/freeCodeCamp/rdb-alpha</0>\", \"step-2\": \"Перейдіть до директорії <0>rdb-alpha</0> в терміналі за допомогою <1>cd rdb-alpha</1>, а також відкрийте VS Code за допомогою <2>code</2>\", \"sub-step-heading\": \"Якщо хочете зберегти прогрес в обліковому записі freeCodeCamp, зробіть наступне:\", \"sub-step-1\": \"Згенеруйте токен користувача, якщо досі цього не зробили:\", \"generate-token-btn\": \"Згенерувати токен користувача\", \"sub-step-2\": \"Скопіюйте токен користувача:\", \"copy-token-btn\": \"Скопіювати токен користувача\", \"logout-warning\": \"Якщо ви вийдете з freeCodeCamp, не завершивши весь курс «{{course}}», ваш токен буде видалено, а прогрес не буде збережено в обліковому записі freeCodeCamp\",\n      \"sub-step-3\": \"У відкритому VS Code знайдіть і відкрийте файл під назвою <0>Dockerfile</0> Внизу файлу вставте свій токен як значення змінної <1>CODEROAD_WEBHOOK_TOKEN</1> Це має виглядати так: <2>ENV CODEROAD_WEBHOOK_TOKEN=тут-ваш-токен</2>\",\n      \"step-3\": \"Відкрийте палітру команд у VS Code, перейшовши до меню «View» та натиснувши «Command Palette",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 77,
    "total_chunks": 206
  },
  {
    "id": "0110e02182361e875811cc0583e031f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "токен користувача\", \"sub-step-2\": \"Скопіюйте токен користувача:\", \"copy-token-btn\": \"Скопіювати токен користувача\", \"logout-warning\": \"Якщо ви вийдете з freeCodeCamp, не завершивши весь курс «{{course}}», ваш токен буде видалено, а прогрес не буде збережено в обліковому записі freeCodeCamp\", \"sub-step-3\": \"У відкритому VS Code знайдіть і відкрийте файл під назвою <0>Dockerfile</0> Внизу файлу вставте свій токен як значення змінної <1>CODEROAD_WEBHOOK_TOKEN</1> Це має виглядати так: <2>ENV CODEROAD_WEBHOOK_TOKEN=тут-ваш-токен</2>\", \"step-3\": \"Відкрийте палітру команд у VS Code, перейшовши до меню «View» та натиснувши «Command Palette», а потім введіть <0>Dev Containers: Rebuild and Reopen in Container</0> \",\n      \"step-4\": \"Після цього відкриється нове вікно VS Code і розпочнеться створення образу Docker (протягом першого запуску це займе пару хвилин) \",\n      \"step-5\": \"Після завершення знову перейдіть до палітри команд і введіть <0>CodeRoad: Start</0>, щоб відкрити CodeRoad",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 78,
    "total_chunks": 206
  },
  {
    "id": "5589fe4cd2a441a20bf1f6d7b59a04ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "файлу вставте свій токен як значення змінної <1>CODEROAD_WEBHOOK_TOKEN</1> Це має виглядати так: <2>ENV CODEROAD_WEBHOOK_TOKEN=тут-ваш-токен</2>\", \"step-3\": \"Відкрийте палітру команд у VS Code, перейшовши до меню «View» та натиснувши «Command Palette», а потім введіть <0>Dev Containers: Rebuild and Reopen in Container</0> \", \"step-4\": \"Після цього відкриється нове вікно VS Code і розпочнеться створення образу Docker (протягом першого запуску це займе пару хвилин) \", \"step-5\": \"Після завершення знову перейдіть до палітри команд і введіть <0>CodeRoad: Start</0>, щоб відкрити CodeRoad\",\n      \"step-6\": \"У вікні CodeRoad натисніть «Start New Tutorial», а потім — на вкладку «URL» зверху \",\n      \"step-7\": \"Скопіюйте посилання на курс нижче, вставте його в «URL» і натисніть «Load» \",\n      \"copy-url\": \"Скопіювати посилання на курс\",\n      \"step-8\": \"Натисніть «Start», щоб розпочати \",\n      \"step-9\": \"Дотримуйтесь інструкцій в CodeRoad, щоб завершити курс",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 79,
    "total_chunks": 206
  },
  {
    "id": "2b5540c58c549411aeb1bb25a78b2530",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "розпочнеться створення образу Docker (протягом першого запуску це займе пару хвилин) \", \"step-5\": \"Після завершення знову перейдіть до палітри команд і введіть <0>CodeRoad: Start</0>, щоб відкрити CodeRoad\", \"step-6\": \"У вікні CodeRoad натисніть «Start New Tutorial», а потім — на вкладку «URL» зверху \", \"step-7\": \"Скопіюйте посилання на курс нижче, вставте його в «URL» і натисніть «Load» \", \"copy-url\": \"Скопіювати посилання на курс\", \"step-8\": \"Натисніть «Start», щоб розпочати \", \"step-9\": \"Дотримуйтесь інструкцій в CodeRoad, щоб завершити курсПримітка: можливо, вам знадобиться перезапустити термінал, щоб застосувати його налаштування і тести були успішними \"\n    },\n    \"step-1\": \"Крок 1: завершіть проєкт\",\n    \"step-2\": \"Крок 2: відправте код\",\n    \"submit-public-url\": \"Коли ви завершите проєкт, збережіть усі необхідні файли в загальнодоступному репозиторію та вкажіть URL-адресу на нього нижче \",\n    \"complete-both-steps\": \"Виконайте обидва кроки, щоб закінчити завдання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 80,
    "total_chunks": 206
  },
  {
    "id": "87457d6f4b4b3c5b0c3bebce4c72dc15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "в «URL» і натисніть «Load» \", \"copy-url\": \"Скопіювати посилання на курс\", \"step-8\": \"Натисніть «Start», щоб розпочати \", \"step-9\": \"Дотримуйтесь інструкцій в CodeRoad, щоб завершити курсПримітка: можливо, вам знадобиться перезапустити термінал, щоб застосувати його налаштування і тести були успішними \" }, \"step-1\": \"Крок 1: завершіть проєкт\", \"step-2\": \"Крок 2: відправте код\", \"submit-public-url\": \"Коли ви завершите проєкт, збережіть усі необхідні файли в загальнодоступному репозиторію та вкажіть URL-адресу на нього нижче \", \"complete-both-steps\": \"Виконайте обидва кроки, щоб закінчити завдання\",\n    \"runs-in-vm\": \"Проєкт виконується на віртуальній машині; виконайте описані там історії користувачів та пройдіть всі тести, щоб завершити крок 1 \",\n    \"completed\": \"Виконано\",\n    \"not-completed\": \"Не завершено\",\n    \"not-started\": \"Не розпочато\",\n    \"steps-completed\": \"Виконано кроків: {{completedSteps}} з {{totalSteps}}\",\n    \"test\": \"Тест\",\n    \"sorry-try-again\": \"На жаль, ваш код не працює",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 81,
    "total_chunks": 206
  },
  {
    "id": "57309365999b7d30eb510985e1bfdbf0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "завершіть проєкт\", \"step-2\": \"Крок 2: відправте код\", \"submit-public-url\": \"Коли ви завершите проєкт, збережіть усі необхідні файли в загальнодоступному репозиторію та вкажіть URL-адресу на нього нижче \", \"complete-both-steps\": \"Виконайте обидва кроки, щоб закінчити завдання\", \"runs-in-vm\": \"Проєкт виконується на віртуальній машині; виконайте описані там історії користувачів та пройдіть всі тести, щоб завершити крок 1 \", \"completed\": \"Виконано\", \"not-completed\": \"Не завершено\", \"not-started\": \"Не розпочато\", \"steps-completed\": \"Виконано кроків: {{completedSteps}} з {{totalSteps}}\", \"test\": \"Тест\", \"sorry-try-again\": \"На жаль, ваш код не працюєСпробуйте ще раз \",\n    \"sorry-keep-trying\": \"На жаль, ваш код не працює Продовжуйте спроби \",\n    \"sorry-getting-there\": \"На жаль, ваш код не працює Ви йдете у правильному напрямку \",\n    \"sorry-hang-in-there\": \"На жаль, ваш код не працює Тримайтеся \",\n    \"sorry-dont-giveup\": \"На жаль, ваш код не працює Не здавайтеся",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 82,
    "total_chunks": 206
  },
  {
    "id": "fc902ef424a46d7f27b2dcab65c95566",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "та пройдіть всі тести, щоб завершити крок 1 \", \"completed\": \"Виконано\", \"not-completed\": \"Не завершено\", \"not-started\": \"Не розпочато\", \"steps-completed\": \"Виконано кроків: {{completedSteps}} з {{totalSteps}}\", \"test\": \"Тест\", \"sorry-try-again\": \"На жаль, ваш код не працюєСпробуйте ще раз \", \"sorry-keep-trying\": \"На жаль, ваш код не працює Продовжуйте спроби \", \"sorry-getting-there\": \"На жаль, ваш код не працює Ви йдете у правильному напрямку \", \"sorry-hang-in-there\": \"На жаль, ваш код не працює Тримайтеся \", \"sorry-dont-giveup\": \"На жаль, ваш код не працює Не здавайтеся\",\n    \"challenges-completed\": \"{{completedCount}} з {{totalChallenges}} завдань виконано\",\n    \"season-greetings-fcc\": \"Вітання від спільноти freeCodeCamp 🎉\",\n    \"if-getting-value\": \"Якщо ви отримуєте багато інформації завдяки freeCodeCamp, то зараз слушний час задонатити на підтримку нашої місії \",\n    \"building-a-university\": \"Ми розробляємо безоплатну університетську програму «Комп’ютерні науки» 🎉\",\n    \"if-help-university\": \"Ми вже зробили багато роботи",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 83,
    "total_chunks": 206
  },
  {
    "id": "3e902225f6f30512aae6443f16535ffb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"sorry-getting-there\": \"На жаль, ваш код не працює Ви йдете у правильному напрямку \", \"sorry-hang-in-there\": \"На жаль, ваш код не працює Тримайтеся \", \"sorry-dont-giveup\": \"На жаль, ваш код не працює Не здавайтеся\", \"challenges-completed\": \"{{completedCount}} з {{totalChallenges}} завдань виконано\", \"season-greetings-fcc\": \"Вітання від спільноти freeCodeCamp 🎉\", \"if-getting-value\": \"Якщо ви отримуєте багато інформації завдяки freeCodeCamp, то зараз слушний час задонатити на підтримку нашої місії \", \"building-a-university\": \"Ми розробляємо безоплатну університетську програму «Комп’ютерні науки» 🎉\", \"if-help-university\": \"Ми вже зробили багато роботиПідтримайте довгий шлях нашої благодійної організації \",\n    \"preview-external-window\": \"Попередній перегляд знаходиться у зовнішньому вікні \",\n    \"fill-in-the-blank\": {\n      \"heading\": \"Заповніть прогалини\",\n      \"blank\": \"прогалина\"\n    },\n    \"quiz\": {\n      \"correct-answer\": \"Правильно \",\n      \"incorrect-answer\": \"Неправильно \",\n      \"unanswered-questions\": \"Ви не відповіли на такі запитання: {{ unansweredQuestions }}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 84,
    "total_chunks": 206
  },
  {
    "id": "7844634f8a8338b4dc47d5777da5a0bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "спільноти freeCodeCamp 🎉\", \"if-getting-value\": \"Якщо ви отримуєте багато інформації завдяки freeCodeCamp, то зараз слушний час задонатити на підтримку нашої місії \", \"building-a-university\": \"Ми розробляємо безоплатну університетську програму «Комп’ютерні науки» 🎉\", \"if-help-university\": \"Ми вже зробили багато роботиПідтримайте довгий шлях нашої благодійної організації \", \"preview-external-window\": \"Попередній перегляд знаходиться у зовнішньому вікні \", \"fill-in-the-blank\": { \"heading\": \"Заповніть прогалини\", \"blank\": \"прогалина\" }, \"quiz\": { \"correct-answer\": \"Правильно \", \"incorrect-answer\": \"Неправильно \", \"unanswered-questions\": \"Ви не відповіли на такі запитання: {{ unansweredQuestions }}Потрібно дати відповідь на всі запитання \",\n      \"have-n-correct-questions\": \"Ви правильно відповіли на {{ correctAnswerCount }} з {{ total }} запитань \",\n      \"finish-modal-header\": \"Завершити тест\",\n      \"finish-modal-body\": \"Точно завершити тест",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 85,
    "total_chunks": 206
  },
  {
    "id": "2756dbefd19f4e01d566c70e0a15d4d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "«Комп’ютерні науки» 🎉\", \"if-help-university\": \"Ми вже зробили багато роботиПідтримайте довгий шлях нашої благодійної організації \", \"preview-external-window\": \"Попередній перегляд знаходиться у зовнішньому вікні \", \"fill-in-the-blank\": { \"heading\": \"Заповніть прогалини\", \"blank\": \"прогалина\" }, \"quiz\": { \"correct-answer\": \"Правильно \", \"incorrect-answer\": \"Неправильно \", \"unanswered-questions\": \"Ви не відповіли на такі запитання: {{ unansweredQuestions }}Потрібно дати відповідь на всі запитання \", \"have-n-correct-questions\": \"Ви правильно відповіли на {{ correctAnswerCount }} з {{ total }} запитань \", \"finish-modal-header\": \"Завершити тест\", \"finish-modal-body\": \"Точно завершити тест\",\n      \"finish-modal-yes\": \"Так, завершити тест\",\n      \"finish-modal-no\": \"Ні, я хочу продовжити\",\n      \"exit-modal-header\": \"Покинути тест\",\n      \"exit-modal-body\": \"Ви впевнені, що хочете покинути тест Ваші відповіді не буде збережено \",\n      \"exit-modal-yes\": \"Так, я хочу покинути тест\",\n      \"exit-modal-no\": \"Ні, я хочу продовжити\"\n    },\n    \"exam\": {\n      \"qualified\": \"Вітаємо, ви виконали всі вимоги для допуску на екзамен",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 86,
    "total_chunks": 206
  },
  {
    "id": "54d1e524713d09cb944e2e0cf6fabcb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "дати відповідь на всі запитання \", \"have-n-correct-questions\": \"Ви правильно відповіли на {{ correctAnswerCount }} з {{ total }} запитань \", \"finish-modal-header\": \"Завершити тест\", \"finish-modal-body\": \"Точно завершити тест\", \"finish-modal-yes\": \"Так, завершити тест\", \"finish-modal-no\": \"Ні, я хочу продовжити\", \"exit-modal-header\": \"Покинути тест\", \"exit-modal-body\": \"Ви впевнені, що хочете покинути тест Ваші відповіді не буде збережено \", \"exit-modal-yes\": \"Так, я хочу покинути тест\", \"exit-modal-no\": \"Ні, я хочу продовжити\" }, \"exam\": { \"qualified\": \"Вітаємо, ви виконали всі вимоги для допуску на екзамен\",\n      \"not-qualified\": \"Ви недопущені до екзамену, оскільки не виконали всі вимоги Будь ласка, виконайте такі завдання:\",\n      \"time\": \"Час: {{ t }}\",\n      \"questions\": \"Запитання {{ n }} з {{ t }}\",\n      \"passed\": \"Пройдено\",\n      \"not-passed\": \"Не пройдено\",\n      \"number-of-questions\": \"Кількість запитань: {{ n }}\",\n      \"correct-answers\": \"Правильних відповідей: {{ n }}\",\n      \"percent-correct\": \"Відсоток правильних відповідей: {{ n }}%\",\n      \"passed-message\": \"Вітаємо Ви пройшли екзамен та можете отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 87,
    "total_chunks": 206
  },
  {
    "id": "375bb6a08f52a2af0ae86661919018e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "продовжити\" }, \"exam\": { \"qualified\": \"Вітаємо, ви виконали всі вимоги для допуску на екзамен\", \"not-qualified\": \"Ви недопущені до екзамену, оскільки не виконали всі вимоги Будь ласка, виконайте такі завдання:\", \"time\": \"Час: {{ t }}\", \"questions\": \"Запитання {{ n }} з {{ t }}\", \"passed\": \"Пройдено\", \"not-passed\": \"Не пройдено\", \"number-of-questions\": \"Кількість запитань: {{ n }}\", \"correct-answers\": \"Правильних відповідей: {{ n }}\", \"percent-correct\": \"Відсоток правильних відповідей: {{ n }}%\", \"passed-message\": \"Вітаємо Ви пройшли екзамен та можете отримати сертифікацію\",\n      \"not-passed-message\": \"На жаль, ви не відповіли на достатню кількість запитань, щоб скласти екзамен \",\n      \"results-header\": \"Результати «{{ title }}»\",\n      \"question-results\": \"Ви правильно відповіли на {{ n }} з {{ q }} запитань\",\n      \"percent-results\": \"{{ p }}% правильно\",\n      \"finish-header\": \"Завершити екзамен\",\n      \"finish\": \"Впевнені, що хочете завершити екзамен Ви не зможете змінити свої відповіді Результати будуть остаточними",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 88,
    "total_chunks": 206
  },
  {
    "id": "261dc42a71046f5af347acef9bb4afa2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Правильних відповідей: {{ n }}\", \"percent-correct\": \"Відсоток правильних відповідей: {{ n }}%\", \"passed-message\": \"Вітаємо Ви пройшли екзамен та можете отримати сертифікацію\", \"not-passed-message\": \"На жаль, ви не відповіли на достатню кількість запитань, щоб скласти екзамен \", \"results-header\": \"Результати «{{ title }}»\", \"question-results\": \"Ви правильно відповіли на {{ n }} з {{ q }} запитань\", \"percent-results\": \"{{ p }}% правильно\", \"finish-header\": \"Завершити екзамен\", \"finish\": \"Впевнені, що хочете завершити екзамен Ви не зможете змінити свої відповіді Результати будуть остаточними\",\n      \"finish-yes\": \"Так, завершити екзамен\",\n      \"finish-no\": \"Ні, я хочу продовжити\",\n      \"exit-header\": \"Покинути екзамен\",\n      \"exit\": \"Ви впевнені, що хочете покинути екзамен Ваші відповіді не буде збережено",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 89,
    "total_chunks": 206
  },
  {
    "id": "91f8981b63c706c99352bbee80d2d930",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "ви не відповіли на достатню кількість запитань, щоб скласти екзамен \", \"results-header\": \"Результати «{{ title }}»\", \"question-results\": \"Ви правильно відповіли на {{ n }} з {{ q }} запитань\", \"percent-results\": \"{{ p }}% правильно\", \"finish-header\": \"Завершити екзамен\", \"finish\": \"Впевнені, що хочете завершити екзамен Ви не зможете змінити свої відповіді Результати будуть остаточними\", \"finish-yes\": \"Так, завершити екзамен\", \"finish-no\": \"Ні, я хочу продовжити\", \"exit-header\": \"Покинути екзамен\", \"exit\": \"Ви впевнені, що хочете покинути екзамен Ваші відповіді не буде збережено\",\n      \"exit-yes\": \"Так, я хочу покинути екзамен\",\n      \"exit-no\": \"Ні, я хочу продовжити\"\n    },\n    \"ms\": {\n      \"link-header\": \"Прив’яжіть свій обліковий запис Microsoft\",\n      \"link-signin\": \"Щоб виконати це завдання, спочатку потрібно прив’язати ім’я користувача Microsoft до облікового запису freeCodeCamp Увійдіть, щоб прив’язати ім’я користувача Microsoft \",\n      \"linked\": \"Обліковий запис Microsoft з іменем користувача «{{ msUsername }}» вже прив’язаний до вашого облікового запису freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 90,
    "total_chunks": 206
  },
  {
    "id": "641f5df63965406173e9c3f014acc227",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "хочу продовжити\", \"exit-header\": \"Покинути екзамен\", \"exit\": \"Ви впевнені, що хочете покинути екзамен Ваші відповіді не буде збережено\", \"exit-yes\": \"Так, я хочу покинути екзамен\", \"exit-no\": \"Ні, я хочу продовжити\" }, \"ms\": { \"link-header\": \"Прив’яжіть свій обліковий запис Microsoft\", \"link-signin\": \"Щоб виконати це завдання, спочатку потрібно прив’язати ім’я користувача Microsoft до облікового запису freeCodeCamp Увійдіть, щоб прив’язати ім’я користувача Microsoft \", \"linked\": \"Обліковий запис Microsoft з іменем користувача «{{ msUsername }}» вже прив’язаний до вашого облікового запису freeCodeCampЯкщо це не ваше ім’я користувача Microsoft, видаліть посилання \",\n      \"unlinked\": \"Щоб виконати це завдання, спочатку потрібно прив’язати ім’я користувача Microsoft до облікового запису freeCodeCamp Дотримуйтесь цих інструкцій:\",\n      \"link-li-1\": \"Перейдіть до <0>https://learn microsoft com/users/me/transcript</0> через браузер, з якого увійшли до облікового запису Microsoft\",\n      \"link-li-2\": \"Знайдіть та натисніть кнопку «Поділитись посиланням»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 91,
    "total_chunks": 206
  },
  {
    "id": "9eb4a437e8f4ac8a00863d755726a1b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "облікового запису freeCodeCamp Увійдіть, щоб прив’язати ім’я користувача Microsoft \", \"linked\": \"Обліковий запис Microsoft з іменем користувача «{{ msUsername }}» вже прив’язаний до вашого облікового запису freeCodeCampЯкщо це не ваше ім’я користувача Microsoft, видаліть посилання \", \"unlinked\": \"Щоб виконати це завдання, спочатку потрібно прив’язати ім’я користувача Microsoft до облікового запису freeCodeCamp Дотримуйтесь цих інструкцій:\", \"link-li-1\": \"Перейдіть до <0>https://learn microsoft com/users/me/transcript</0> через браузер, з якого увійшли до облікового запису Microsoft\", \"link-li-2\": \"Знайдіть та натисніть кнопку «Поділитись посиланням»\",\n      \"link-li-3\": \"Якщо у вас немає посилання на стенограму, натисніть «Створити посилання», щоб створити його \",\n      \"link-li-4\": \"Натисніть кнопку «Копіювати посилання», щоб скопіювати посилання на стенограму \",\n      \"link-li-5\": \"Введіть посилання в полі нижче Воно має виглядати схоже до <0>https://learn microsoft",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 92,
    "total_chunks": 206
  },
  {
    "id": "913b4fcae642eb79abbe87a4ad1d84f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "це завдання, спочатку потрібно прив’язати ім’я користувача Microsoft до облікового запису freeCodeCamp Дотримуйтесь цих інструкцій:\", \"link-li-1\": \"Перейдіть до <0>https://learn microsoft com/users/me/transcript</0> через браузер, з якого увійшли до облікового запису Microsoft\", \"link-li-2\": \"Знайдіть та натисніть кнопку «Поділитись посиланням»\", \"link-li-3\": \"Якщо у вас немає посилання на стенограму, натисніть «Створити посилання», щоб створити його \", \"link-li-4\": \"Натисніть кнопку «Копіювати посилання», щоб скопіювати посилання на стенограму \", \"link-li-5\": \"Введіть посилання в полі нижче Воно має виглядати схоже до <0>https://learn microsoftcom/LOCALE/users/USERNAME/transcript/ID</0>\",\n      \"link-li-6\": \"Натисніть «Прив’язати обліковий запис», щоб прив’язати ім’я користувача Microsoft \",\n      \"transcript-label\": \"Посилання на стенограму Microsoft\",\n      \"invalid-transcript\": \"Ваше посилання на стенограму невірне Воно повинне мати такий формат: <1>https://learn microsoft com/LOCALE/users/USERNAME/transcript/ID</1> — перевірте, чи текст ВЕЛИКИМИ ЛІТЕРАМИ правильний",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 93,
    "total_chunks": 206
  },
  {
    "id": "331b56843bc5d38c02f7b0d6711bd6fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"link-li-3\": \"Якщо у вас немає посилання на стенограму, натисніть «Створити посилання», щоб створити його \", \"link-li-4\": \"Натисніть кнопку «Копіювати посилання», щоб скопіювати посилання на стенограму \", \"link-li-5\": \"Введіть посилання в полі нижче Воно має виглядати схоже до <0>https://learn microsoftcom/LOCALE/users/USERNAME/transcript/ID</0>\", \"link-li-6\": \"Натисніть «Прив’язати обліковий запис», щоб прив’язати ім’я користувача Microsoft \", \"transcript-label\": \"Посилання на стенограму Microsoft\", \"invalid-transcript\": \"Ваше посилання на стенограму невірне Воно повинне мати такий формат: <1>https://learn microsoft com/LOCALE/users/USERNAME/transcript/ID</1> — перевірте, чи текст ВЕЛИКИМИ ЛІТЕРАМИ правильний\"\n    },\n    \"block-type\": {\n      \"lecture\": \"Лекція\",\n      \"workshop\": \"Практичне заняття\",\n      \"lab\": \"Лабораторна робота\",\n      \"review\": \"Повторення\",\n      \"quiz\": \"Тест\",\n      \"exam\": \"Екзамен\"\n    }\n  },\n  \"donate\": {\n    \"title\": \"Підтримайте нашу організацію\",\n    \"processing\": \"Ми опрацьовуємо ваш донат \",\n    \"redirecting\": \"Переадресація",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 94,
    "total_chunks": 206
  },
  {
    "id": "b1e0e0e6e4f75dd2bea977202dc6939f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "має виглядати схоже до <0>https://learn microsoftcom/LOCALE/users/USERNAME/transcript/ID</0>\", \"link-li-6\": \"Натисніть «Прив’язати обліковий запис», щоб прив’язати ім’я користувача Microsoft \", \"transcript-label\": \"Посилання на стенограму Microsoft\", \"invalid-transcript\": \"Ваше посилання на стенограму невірне Воно повинне мати такий формат: <1>https://learn microsoft com/LOCALE/users/USERNAME/transcript/ID</1> — перевірте, чи текст ВЕЛИКИМИ ЛІТЕРАМИ правильний\" }, \"block-type\": { \"lecture\": \"Лекція\", \"workshop\": \"Практичне заняття\", \"lab\": \"Лабораторна робота\", \"review\": \"Повторення\", \"quiz\": \"Тест\", \"exam\": \"Екзамен\" } }, \"donate\": { \"title\": \"Підтримайте нашу організацію\", \"processing\": \"Ми опрацьовуємо ваш донат \", \"redirecting\": \"Переадресація\",\n    \"thanks\": \"Дякуємо за донат\",\n    \"thank-you\": \"Дякуємо за вашу підтримку\",\n    \"thank-you-continued\": \"Дякуємо за постійну підтримку\",\n    \"success-card-update\": \"Вашу картку успішно оновлено",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 95,
    "total_chunks": 206
  },
  {
    "id": "501e781cb22263dbaea0b1313d8c0c5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "на стенограму Microsoft\", \"invalid-transcript\": \"Ваше посилання на стенограму невірне Воно повинне мати такий формат: <1>https://learn microsoft com/LOCALE/users/USERNAME/transcript/ID</1> — перевірте, чи текст ВЕЛИКИМИ ЛІТЕРАМИ правильний\" }, \"block-type\": { \"lecture\": \"Лекція\", \"workshop\": \"Практичне заняття\", \"lab\": \"Лабораторна робота\", \"review\": \"Повторення\", \"quiz\": \"Тест\", \"exam\": \"Екзамен\" } }, \"donate\": { \"title\": \"Підтримайте нашу організацію\", \"processing\": \"Ми опрацьовуємо ваш донат \", \"redirecting\": \"Переадресація\", \"thanks\": \"Дякуємо за донат\", \"thank-you\": \"Дякуємо за вашу підтримку\", \"thank-you-continued\": \"Дякуємо за постійну підтримку\", \"success-card-update\": \"Вашу картку успішно оновлено\",\n    \"additional\": \"Ви можете зробити додатковий одноразовий донат на будь-яку суму за цим посиланням: <0>{{url}}</0>\",\n    \"help-more\": \"Допоможіть нашій організації робити більше\",\n    \"error\": \"Щось не так з вашим донатом \",\n    \"error-card-update\": \"Під час оновлення картки виникла помилка \",\n    \"error-2\": \"Щось пішло не так Будь ласка, зв’яжіться з donors@freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 96,
    "total_chunks": 206
  },
  {
    "id": "f3f36e05130dfcc85b8c197ff76297cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Підтримайте нашу організацію\", \"processing\": \"Ми опрацьовуємо ваш донат \", \"redirecting\": \"Переадресація\", \"thanks\": \"Дякуємо за донат\", \"thank-you\": \"Дякуємо за вашу підтримку\", \"thank-you-continued\": \"Дякуємо за постійну підтримку\", \"success-card-update\": \"Вашу картку успішно оновлено\", \"additional\": \"Ви можете зробити додатковий одноразовий донат на будь-яку суму за цим посиланням: <0>{{url}}</0>\", \"help-more\": \"Допоможіть нашій організації робити більше\", \"error\": \"Щось не так з вашим донатом \", \"error-card-update\": \"Під час оновлення картки виникла помилка \", \"error-2\": \"Щось пішло не так Будь ласка, зв’яжіться з donors@freecodecamporg\",\n    \"error-3\": \"Спробуйте ще раз або зв’яжіться з donors@freecodecamp org\",\n    \"free-tech\": \"Ваші донати підтримуватимуть безоплатну технологічну освіту для людей у всьому світі \",\n    \"visit-supporters\": \"Перегляньте сторінку донорів, щоб дізнатись про свої переваги",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 97,
    "total_chunks": 206
  },
  {
    "id": "e9f6a4d2e3ccf9c242824d276f48fcc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Ви можете зробити додатковий одноразовий донат на будь-яку суму за цим посиланням: <0>{{url}}</0>\", \"help-more\": \"Допоможіть нашій організації робити більше\", \"error\": \"Щось не так з вашим донатом \", \"error-card-update\": \"Під час оновлення картки виникла помилка \", \"error-2\": \"Щось пішло не так Будь ласка, зв’яжіться з donors@freecodecamporg\", \"error-3\": \"Спробуйте ще раз або зв’яжіться з donors@freecodecamp org\", \"free-tech\": \"Ваші донати підтримуватимуть безоплатну технологічну освіту для людей у всьому світі \", \"visit-supporters\": \"Перегляньте сторінку донорів, щоб дізнатись про свої переваги\",\n    \"gift-frequency\": \"Оберіть частоту сплати донатів:\",\n    \"gift-amount\": \"Оберіть розмір донату:\",\n    \"confirm\": \"Підтвердьте свій донат:\",\n    \"confirm-one-time\": \"Підтвердьте свій одноразовий донат у розмірі ${{usd}}:\",\n    \"confirm-monthly\": \"Підтвердьте свій донат у розмірі ${{usd}} на місяць:\",\n    \"confirm-yearly\": \"Підтвердьте свій донат у розмірі ${{usd}} на рік:\",\n    \"confirm-multitier\": \"Донатити {{usd}}$ на місяць:\",\n    \"edit-amount\": \"редагувати суму\",\n    \"wallet-label\": \"Донат ${{usd}} для FreeCodeCamp\",\n    \"wallet-label-1\": \"Донат ${{usd}} на місяць для FreeCodeCamp\",\n    \"your-donation\": \"Ваш донат у розмірі ${{usd}} надаватиме {{hours}} год навчання людям у всьому світі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 98,
    "total_chunks": 206
  },
  {
    "id": "729e5cdbd46a2c5ead766faca067967a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "про свої переваги\", \"gift-frequency\": \"Оберіть частоту сплати донатів:\", \"gift-amount\": \"Оберіть розмір донату:\", \"confirm\": \"Підтвердьте свій донат:\", \"confirm-one-time\": \"Підтвердьте свій одноразовий донат у розмірі ${{usd}}:\", \"confirm-monthly\": \"Підтвердьте свій донат у розмірі ${{usd}} на місяць:\", \"confirm-yearly\": \"Підтвердьте свій донат у розмірі ${{usd}} на рік:\", \"confirm-multitier\": \"Донатити {{usd}}$ на місяць:\", \"edit-amount\": \"редагувати суму\", \"wallet-label\": \"Донат ${{usd}} для FreeCodeCamp\", \"wallet-label-1\": \"Донат ${{usd}} на місяць для FreeCodeCamp\", \"your-donation\": \"Ваш донат у розмірі ${{usd}} надаватиме {{hours}} год навчання людям у всьому світі\",\n    \"your-donation-2\": \"Ваш донат у розмірі ${{usd}} щомісяця надаватиме {{hours}} год навчання людям у всьому світі \",\n    \"your-donation-3\": \"Ваш донат у розмірі ${{usd}} щороку надаватиме {{hours}} год навчання людям у всьому світі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 99,
    "total_chunks": 206
  },
  {
    "id": "75b1aaaadeff2f51d9929ab880191c55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "на місяць:\", \"confirm-yearly\": \"Підтвердьте свій донат у розмірі ${{usd}} на рік:\", \"confirm-multitier\": \"Донатити {{usd}}$ на місяць:\", \"edit-amount\": \"редагувати суму\", \"wallet-label\": \"Донат ${{usd}} для FreeCodeCamp\", \"wallet-label-1\": \"Донат ${{usd}} на місяць для FreeCodeCamp\", \"your-donation\": \"Ваш донат у розмірі ${{usd}} надаватиме {{hours}} год навчання людям у всьому світі\", \"your-donation-2\": \"Ваш донат у розмірі ${{usd}} щомісяця надаватиме {{hours}} год навчання людям у всьому світі \", \"your-donation-3\": \"Ваш донат у розмірі ${{usd}} щороку надаватиме {{hours}} год навчання людям у всьому світі\",\n    \"become-supporter\": \"Станьте донором\",\n    \"progress-modal-cta-1\": \"Задонатьте зараз, щоб допомогти нашій організації створити безоплатний акредитований ступінь з комп’ютерних наук \",\n    \"progress-modal-cta-2\": \"Задонатьте зараз, щоб підтримати 53 години роботи серверу вебсайту нашої організації",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 100,
    "total_chunks": 206
  },
  {
    "id": "47c53dfd068c5b490b76bcf9593ac539",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "FreeCodeCamp\", \"your-donation\": \"Ваш донат у розмірі ${{usd}} надаватиме {{hours}} год навчання людям у всьому світі\", \"your-donation-2\": \"Ваш донат у розмірі ${{usd}} щомісяця надаватиме {{hours}} год навчання людям у всьому світі \", \"your-donation-3\": \"Ваш донат у розмірі ${{usd}} щороку надаватиме {{hours}} год навчання людям у всьому світі\", \"become-supporter\": \"Станьте донором\", \"progress-modal-cta-1\": \"Задонатьте зараз, щоб допомогти нашій організації створити безоплатний акредитований ступінь з комп’ютерних наук \", \"progress-modal-cta-2\": \"Задонатьте зараз, щоб підтримати 53 години роботи серверу вебсайту нашої організації\",\n    \"progress-modal-cta-3\": \"Задонатьте зараз, щоб допомогти перекласти навчальну програму нашої організації на 32 мови \",\n    \"progress-modal-cta-4\": \"Задонатьте зараз, щоб підтримати розвиток нашої нової навчальної програми з Python \",\n    \"progress-modal-cta-5\": \"Задонатьте зараз, щоб допомогти нам створити нові уроки з інструментів програмування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 101,
    "total_chunks": 206
  },
  {
    "id": "226010a63b4be4e319bdcb5ad8e6ac9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "{{hours}} год навчання людям у всьому світі\", \"become-supporter\": \"Станьте донором\", \"progress-modal-cta-1\": \"Задонатьте зараз, щоб допомогти нашій організації створити безоплатний акредитований ступінь з комп’ютерних наук \", \"progress-modal-cta-2\": \"Задонатьте зараз, щоб підтримати 53 години роботи серверу вебсайту нашої організації\", \"progress-modal-cta-3\": \"Задонатьте зараз, щоб допомогти перекласти навчальну програму нашої організації на 32 мови \", \"progress-modal-cta-4\": \"Задонатьте зараз, щоб підтримати розвиток нашої нової навчальної програми з Python \", \"progress-modal-cta-5\": \"Задонатьте зараз, щоб допомогти нам створити нові уроки з інструментів програмування\",\n    \"progress-modal-cta-6\": \"Задонатьте зараз, щоб підтримати проєкти нашої організації з відкритим кодом \",\n    \"progress-modal-cta-7\": \"Задонатьте зараз, щоб допомогти нашій організації найняти чудових вчителів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 102,
    "total_chunks": 206
  },
  {
    "id": "fa54774d72eeb3bc0d98b0825e3b4539",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "комп’ютерних наук \", \"progress-modal-cta-2\": \"Задонатьте зараз, щоб підтримати 53 години роботи серверу вебсайту нашої організації\", \"progress-modal-cta-3\": \"Задонатьте зараз, щоб допомогти перекласти навчальну програму нашої організації на 32 мови \", \"progress-modal-cta-4\": \"Задонатьте зараз, щоб підтримати розвиток нашої нової навчальної програми з Python \", \"progress-modal-cta-5\": \"Задонатьте зараз, щоб допомогти нам створити нові уроки з інструментів програмування\", \"progress-modal-cta-6\": \"Задонатьте зараз, щоб підтримати проєкти нашої організації з відкритим кодом \", \"progress-modal-cta-7\": \"Задонатьте зараз, щоб допомогти нашій організації найняти чудових вчителів\",\n    \"progress-modal-cta-8\": \"Задонатьте зараз, щоб допомогти нам розробити нові курси з вилітних інструментів та понять у програмуванні \",\n    \"progress-modal-cta-9\": \"Задонатьте зараз, щоб підтримати нашу навчальну програму з математики для розробників",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 103,
    "total_chunks": 206
  },
  {
    "id": "c9bcc2801fd22612c59b3474323b7032",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"progress-modal-cta-4\": \"Задонатьте зараз, щоб підтримати розвиток нашої нової навчальної програми з Python \", \"progress-modal-cta-5\": \"Задонатьте зараз, щоб допомогти нам створити нові уроки з інструментів програмування\", \"progress-modal-cta-6\": \"Задонатьте зараз, щоб підтримати проєкти нашої організації з відкритим кодом \", \"progress-modal-cta-7\": \"Задонатьте зараз, щоб допомогти нашій організації найняти чудових вчителів\", \"progress-modal-cta-8\": \"Задонатьте зараз, щоб допомогти нам розробити нові курси з вилітних інструментів та понять у програмуванні \", \"progress-modal-cta-9\": \"Задонатьте зараз, щоб підтримати нашу навчальну програму з математики для розробників\",\n    \"progress-modal-cta-10\": \"Задонатьте зараз, щоб допомогти нам розробити безоплатні сертифікації з програмування \",\n    \"help-us-reach-20k\": \"Задонатьте зараз, щоб допомогти нашій організації досягнути мети у 20 000 донорів цього року \",\n    \"beta-certification\": \"Ця сертифікація знаходиться в бета-версії",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 104,
    "total_chunks": 206
  },
  {
    "id": "db08afe3e8fef59f81252ce9221d591d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "відкритим кодом \", \"progress-modal-cta-7\": \"Задонатьте зараз, щоб допомогти нашій організації найняти чудових вчителів\", \"progress-modal-cta-8\": \"Задонатьте зараз, щоб допомогти нам розробити нові курси з вилітних інструментів та понять у програмуванні \", \"progress-modal-cta-9\": \"Задонатьте зараз, щоб підтримати нашу навчальну програму з математики для розробників\", \"progress-modal-cta-10\": \"Задонатьте зараз, щоб допомогти нам розробити безоплатні сертифікації з програмування \", \"help-us-reach-20k\": \"Задонатьте зараз, щоб допомогти нашій організації досягнути мети у 20 000 донорів цього року \", \"beta-certification\": \"Ця сертифікація знаходиться в бета-версіїБудь ласка, зробіть донат, щоб підтримати її створення \",\n    \"unfinished-certification\": \"Сертифікація знаходиться в стані активної розробки Наразі для неї немає сертифіката, але він буде доступний найближчим часом Тим часом ви можете дослідити курси, які ми вже створили",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 105,
    "total_chunks": 206
  },
  {
    "id": "29028c9faa427a89ea8987699f2f6cdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "навчальну програму з математики для розробників\", \"progress-modal-cta-10\": \"Задонатьте зараз, щоб допомогти нам розробити безоплатні сертифікації з програмування \", \"help-us-reach-20k\": \"Задонатьте зараз, щоб допомогти нашій організації досягнути мети у 20 000 донорів цього року \", \"beta-certification\": \"Ця сертифікація знаходиться в бета-версіїБудь ласка, зробіть донат, щоб підтримати її створення \", \"unfinished-certification\": \"Сертифікація знаходиться в стані активної розробки Наразі для неї немає сертифіката, але він буде доступний найближчим часом Тим часом ви можете дослідити курси, які ми вже створили\",\n    \"consider-donating\": \"Якщо бажаєте, зробіть донат на підтримку розробки \",\n    \"unfinished-certification-2\": \"Для отримання цієї сертифікації потрібно багато часу і зусиль Якщо ви розпочнете зараз, то будете готові до екзамену як тільки ми його опублікуємо протягом найближчих місяців",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 106,
    "total_chunks": 206
  },
  {
    "id": "7951ab59a0a21892a5a31f5c455a900a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "сертифікація знаходиться в бета-версіїБудь ласка, зробіть донат, щоб підтримати її створення \", \"unfinished-certification\": \"Сертифікація знаходиться в стані активної розробки Наразі для неї немає сертифіката, але він буде доступний найближчим часом Тим часом ви можете дослідити курси, які ми вже створили\", \"consider-donating\": \"Якщо бажаєте, зробіть донат на підтримку розробки \", \"unfinished-certification-2\": \"Для отримання цієї сертифікації потрібно багато часу і зусиль Якщо ви розпочнете зараз, то будете готові до екзамену як тільки ми його опублікуємо протягом найближчих місяців\",\n    \"consider-donating-2\": \"Якщо ви хочете пришвидшити створення цієї навчальної програми, <0>то можете стати донором нашої спільноти </0>\",\n    \"help-us-develop\": \"Допоможіть нам розробити безоплатні сертифікації з програмування \",\n    \"nicely-done\": \"Вітаємо Ви завершили розділ «{{block}}»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 107,
    "total_chunks": 206
  },
  {
    "id": "5d6ecb581d16c53872e8e919bae82e46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "часом ви можете дослідити курси, які ми вже створили\", \"consider-donating\": \"Якщо бажаєте, зробіть донат на підтримку розробки \", \"unfinished-certification-2\": \"Для отримання цієї сертифікації потрібно багато часу і зусиль Якщо ви розпочнете зараз, то будете готові до екзамену як тільки ми його опублікуємо протягом найближчих місяців\", \"consider-donating-2\": \"Якщо ви хочете пришвидшити створення цієї навчальної програми, <0>то можете стати донором нашої спільноти </0>\", \"help-us-develop\": \"Допоможіть нам розробити безоплатні сертифікації з програмування \", \"nicely-done\": \"Вітаємо Ви завершили розділ «{{block}}»\",\n    \"credit-card\": \"Кредитна картка\",\n    \"credit-card-2\": \"Або задонатьте кредитною карткою:\",\n    \"or-card\": \"Або задонатьте карткою\",\n    \"paypal\": \"через PayPal:\",\n    \"need-email\": \"Нам потрібна дійсна адреса електронної пошти, на яку ми зможемо надіслати квитанцію про оплату донату \",\n    \"went-wrong\": \"Щось пішло не так під час опрацювання вашого донату",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 108,
    "total_chunks": 206
  },
  {
    "id": "a5cbdf27e0bbe9d256bb2b1e8f36c6b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "протягом найближчих місяців\", \"consider-donating-2\": \"Якщо ви хочете пришвидшити створення цієї навчальної програми, <0>то можете стати донором нашої спільноти </0>\", \"help-us-develop\": \"Допоможіть нам розробити безоплатні сертифікації з програмування \", \"nicely-done\": \"Вітаємо Ви завершили розділ «{{block}}»\", \"credit-card\": \"Кредитна картка\", \"credit-card-2\": \"Або задонатьте кредитною карткою:\", \"or-card\": \"Або задонатьте карткою\", \"paypal\": \"через PayPal:\", \"need-email\": \"Нам потрібна дійсна адреса електронної пошти, на яку ми зможемо надіслати квитанцію про оплату донату \", \"went-wrong\": \"Щось пішло не так під час опрацювання вашого донатуНе вдалося зняти кошти з вашої картки \",\n    \"valid-info\": \"Будь ласка, введіть дійсну адресу електронної пошти, номер кредитної картки та дату закінчення терміну дії \",\n    \"valid-email\": \"Будь ласка, введіть дійсну адресу електронної пошти \",\n    \"valid-card\": \"Будь ласка, введіть дійсний номер кредитної картки та дату закінчення терміну дії",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 109,
    "total_chunks": 206
  },
  {
    "id": "18cc74a27099f837af1d943f7696a8f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"paypal\": \"через PayPal:\", \"need-email\": \"Нам потрібна дійсна адреса електронної пошти, на яку ми зможемо надіслати квитанцію про оплату донату \", \"went-wrong\": \"Щось пішло не так під час опрацювання вашого донатуНе вдалося зняти кошти з вашої картки \", \"valid-info\": \"Будь ласка, введіть дійсну адресу електронної пошти, номер кредитної картки та дату закінчення терміну дії \", \"valid-email\": \"Будь ласка, введіть дійсну адресу електронної пошти \", \"valid-card\": \"Будь ласка, введіть дійсний номер кредитної картки та дату закінчення терміну дії\",\n    \"email-receipt\": \"Електронна пошта (ми надішлемо вам квитанцію про оплату донату, що не підлягає оподаткуванню):\",\n    \"need-help\": \"Потрібна допомога з поточними або попередніми донатами \",\n    \"forward-receipt\": \"Надішліть копію квитанції про оплату донату на donors@freecodecamp org і напишіть, як ми можемо допомогти \",\n    \"efficiency\": \"freeCodeCamp — це високоефективна некомерційна освітня організація",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 110,
    "total_chunks": 206
  },
  {
    "id": "b06556054c2326f7c4be9449bb80fb42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "та дату закінчення терміну дії \", \"valid-email\": \"Будь ласка, введіть дійсну адресу електронної пошти \", \"valid-card\": \"Будь ласка, введіть дійсний номер кредитної картки та дату закінчення терміну дії\", \"email-receipt\": \"Електронна пошта (ми надішлемо вам квитанцію про оплату донату, що не підлягає оподаткуванню):\", \"need-help\": \"Потрібна допомога з поточними або попередніми донатами \", \"forward-receipt\": \"Надішліть копію квитанції про оплату донату на donors@freecodecamp org і напишіть, як ми можемо допомогти \", \"efficiency\": \"freeCodeCamp — це високоефективна некомерційна освітня організація\",\n    \"why-donate-1\": \"Завдяки донатам для freeCodeCamp ви допомагаєте людям опанувати нові навички та забезпечувати їхні сім’ї \",\n    \"why-donate-2\": \"Ви також допомагаєте нам створювати нові матеріали, щоб ви використовували їх для розширення власних технологічних навичок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 111,
    "total_chunks": 206
  },
  {
    "id": "1d93722d51e676ae5688a215f0d411f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "вам квитанцію про оплату донату, що не підлягає оподаткуванню):\", \"need-help\": \"Потрібна допомога з поточними або попередніми донатами \", \"forward-receipt\": \"Надішліть копію квитанції про оплату донату на donors@freecodecamp org і напишіть, як ми можемо допомогти \", \"efficiency\": \"freeCodeCamp — це високоефективна некомерційна освітня організація\", \"why-donate-1\": \"Завдяки донатам для freeCodeCamp ви допомагаєте людям опанувати нові навички та забезпечувати їхні сім’ї \", \"why-donate-2\": \"Ви також допомагаєте нам створювати нові матеріали, щоб ви використовували їх для розширення власних технологічних навичок\",\n    \"bigger-donation\": \"Бажаєте зробити більший одноразовий донат, відправити нам чек на електронну пошту або в інший спосіб \",\n    \"other-ways\": \"Існує багато <0>інших способів підтримати місію нашої некомерційної організації</0>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 112,
    "total_chunks": 206
  },
  {
    "id": "b2e2e59367a28ceaa6aca2603492de00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "org і напишіть, як ми можемо допомогти \", \"efficiency\": \"freeCodeCamp — це високоефективна некомерційна освітня організація\", \"why-donate-1\": \"Завдяки донатам для freeCodeCamp ви допомагаєте людям опанувати нові навички та забезпечувати їхні сім’ї \", \"why-donate-2\": \"Ви також допомагаєте нам створювати нові матеріали, щоб ви використовували їх для розширення власних технологічних навичок\", \"bigger-donation\": \"Бажаєте зробити більший одноразовий донат, відправити нам чек на електронну пошту або в інший спосіб \", \"other-ways\": \"Існує багато <0>інших способів підтримати місію нашої некомерційної організації</0>\",\n    \"if-support-further\": \"Якщо ви хочете підтримувати нашу спільноту надалі, будь ласка, розгляньте можливість <0>зробити одноразовий донат</0>, <1>виписати чек</1> або <2>дізнайтесь про інші способи підтримки </2>\",\n    \"failed-pay\": \"Не вдалося здійснити транзакцію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 113,
    "total_chunks": 206
  },
  {
    "id": "e10d79ab2f542bfc1ee9afa4eb1fff14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "їхні сім’ї \", \"why-donate-2\": \"Ви також допомагаєте нам створювати нові матеріали, щоб ви використовували їх для розширення власних технологічних навичок\", \"bigger-donation\": \"Бажаєте зробити більший одноразовий донат, відправити нам чек на електронну пошту або в інший спосіб \", \"other-ways\": \"Існує багато <0>інших способів підтримати місію нашої некомерційної організації</0>\", \"if-support-further\": \"Якщо ви хочете підтримувати нашу спільноту надалі, будь ласка, розгляньте можливість <0>зробити одноразовий донат</0>, <1>виписати чек</1> або <2>дізнайтесь про інші способи підтримки </2>\", \"failed-pay\": \"Не вдалося здійснити транзакціюЧи не могли б ви повторити спробу \",\n    \"try-another-method\": \"Не вдалося здійснити транзакцію Чи не могли б ви спробувати інший спосіб оплати \",\n    \"try-again\": \"Будь ласка, повторіть спробу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 114,
    "total_chunks": 206
  },
  {
    "id": "caf12150dd32205a9a9f004628ed9cfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "нам чек на електронну пошту або в інший спосіб \", \"other-ways\": \"Існує багато <0>інших способів підтримати місію нашої некомерційної організації</0>\", \"if-support-further\": \"Якщо ви хочете підтримувати нашу спільноту надалі, будь ласка, розгляньте можливість <0>зробити одноразовий донат</0>, <1>виписати чек</1> або <2>дізнайтесь про інші способи підтримки </2>\", \"failed-pay\": \"Не вдалося здійснити транзакціюЧи не могли б ви повторити спробу \", \"try-another-method\": \"Не вдалося здійснити транзакцію Чи не могли б ви спробувати інший спосіб оплати \", \"try-again\": \"Будь ласка, повторіть спробу\",\n    \"card-number\": \"Номер вашої картки:\",\n    \"expiration\": \"Дата закінчення терміну дії:\",\n    \"secure-donation\": \"Безпечний внесок\",\n    \"faq\": \"Часті питання:\",\n    \"only-you\": \"Лише ви можете бачити це повідомлення Вітаємо з отриманням сертифікації Це було нелегко Піклуватись про freeCodeCamp також нелегко І недешево",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 115,
    "total_chunks": 206
  },
  {
    "id": "97311520f82f61d0217373ff2f5d22f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "чек</1> або <2>дізнайтесь про інші способи підтримки </2>\", \"failed-pay\": \"Не вдалося здійснити транзакціюЧи не могли б ви повторити спробу \", \"try-another-method\": \"Не вдалося здійснити транзакцію Чи не могли б ви спробувати інший спосіб оплати \", \"try-again\": \"Будь ласка, повторіть спробу\", \"card-number\": \"Номер вашої картки:\", \"expiration\": \"Дата закінчення терміну дії:\", \"secure-donation\": \"Безпечний внесок\", \"faq\": \"Часті питання:\", \"only-you\": \"Лише ви можете бачити це повідомлення Вітаємо з отриманням сертифікації Це було нелегко Піклуватись про freeCodeCamp також нелегко І недешевоДопоможіть нам допомогти вам та іншим людям з усього світу Зробіть донат, що не підлягає оподаткуванню, для нашої некомерційної організації сьогодні \",\n    \"get-help\": \"Як отримати допомогу з донатами \",\n    \"how-transparent\": \"Наскільки прозорий freeCodeCamp org \",\n    \"very-transparent\": \"Дуже прозорий Ми отримали платиновий рейтинг від GuideStar org",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 116,
    "total_chunks": 206
  },
  {
    "id": "3e8e9df673019021259e1975ff45a51f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"expiration\": \"Дата закінчення терміну дії:\", \"secure-donation\": \"Безпечний внесок\", \"faq\": \"Часті питання:\", \"only-you\": \"Лише ви можете бачити це повідомлення Вітаємо з отриманням сертифікації Це було нелегко Піклуватись про freeCodeCamp також нелегко І недешевоДопоможіть нам допомогти вам та іншим людям з усього світу Зробіть донат, що не підлягає оподаткуванню, для нашої некомерційної організації сьогодні \", \"get-help\": \"Як отримати допомогу з донатами \", \"how-transparent\": \"Наскільки прозорий freeCodeCamp org \", \"very-transparent\": \"Дуже прозорий Ми отримали платиновий рейтинг від GuideStar org\",\n    \"download-irs\": \"Ви можете <0>завантажити наш детермінаційний лист, виданий Службою внутрішніх доходів (IRS), тут</0> \",\n    \"download-990\": \"Ви можете <0>завантажити наш останній 990 (річний податковий звіт) тут</0> \",\n    \"how-efficient\": \"Наскільки ефективний freeCodeCamp \",\n    \"fcc-budget\": \"Бюджет freeCodeCamp набагато менший за більшість некомерційних організацій",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 117,
    "total_chunks": 206
  },
  {
    "id": "8f7fc073ddf317994ca36d750147034f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "світу Зробіть донат, що не підлягає оподаткуванню, для нашої некомерційної організації сьогодні \", \"get-help\": \"Як отримати допомогу з донатами \", \"how-transparent\": \"Наскільки прозорий freeCodeCamp org \", \"very-transparent\": \"Дуже прозорий Ми отримали платиновий рейтинг від GuideStar org\", \"download-irs\": \"Ви можете <0>завантажити наш детермінаційний лист, виданий Службою внутрішніх доходів (IRS), тут</0> \", \"download-990\": \"Ви можете <0>завантажити наш останній 990 (річний податковий звіт) тут</0> \", \"how-efficient\": \"Наскільки ефективний freeCodeCamp \", \"fcc-budget\": \"Бюджет freeCodeCamp набагато менший за більшість некомерційних організаційМи не залучали професійний збір коштів Натомість Квінсі робить все сам \",\n    \"help-millions\": \"Однак з бюджетом лише на кілька сотень тисяч доларів на рік, ми змогли допомогти мільйонам людей \",\n    \"how-one-time\": \"Як зробити одноразовий донат",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 118,
    "total_chunks": 206
  },
  {
    "id": "73401217218b1ac6953ed5f8ba7a787f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "GuideStar org\", \"download-irs\": \"Ви можете <0>завантажити наш детермінаційний лист, виданий Службою внутрішніх доходів (IRS), тут</0> \", \"download-990\": \"Ви можете <0>завантажити наш останній 990 (річний податковий звіт) тут</0> \", \"how-efficient\": \"Наскільки ефективний freeCodeCamp \", \"fcc-budget\": \"Бюджет freeCodeCamp набагато менший за більшість некомерційних організаційМи не залучали професійний збір коштів Натомість Квінсі робить все сам \", \"help-millions\": \"Однак з бюджетом лише на кілька сотень тисяч доларів на рік, ми змогли допомогти мільйонам людей \", \"how-one-time\": \"Як зробити одноразовий донат\",\n    \"one-time\": \"Якщо ви хочете робити одноразові донати, то можете підтримати місію freeCodeCamp у будь-який момент Використайте <0>це посилання, щоб зробити донат будь-якої суми через PayPal</0> \",\n    \"wire-transfer\": \"Ви також можете надіслати кошти напряму до freeCodeCamp через грошовий переказ Якщо вам потрібно більше деталей про це, напишіть Квінсі на quincy@freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 119,
    "total_chunks": 206
  },
  {
    "id": "1e4c95d9303b3fc9447bf98d513dbd91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "робить все сам \", \"help-millions\": \"Однак з бюджетом лише на кілька сотень тисяч доларів на рік, ми змогли допомогти мільйонам людей \", \"how-one-time\": \"Як зробити одноразовий донат\", \"one-time\": \"Якщо ви хочете робити одноразові донати, то можете підтримати місію freeCodeCamp у будь-який момент Використайте <0>це посилання, щоб зробити донат будь-якої суми через PayPal</0> \", \"wire-transfer\": \"Ви також можете надіслати кошти напряму до freeCodeCamp через грошовий переказ Якщо вам потрібно більше деталей про це, напишіть Квінсі на quincy@freecodecamporg\",\n    \"does-crypto\": \"Чи приймає freeCodeCamp донати в біткоїнах чи інших криптовалютах \",\n    \"yes-cryptocurrency\": \"Так Будь ласка, напишіть Квінсі на quincy@freecodecamp org і він зможе надіслати вам інформацію про гаманець freeCodeCamp Він також може надати квитанцію про донат, якщо вам потрібно \",\n    \"can-check\": \"Чи можу я виписати чек \",\n    \"yes-check\": \"Так, ми б були раді",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 120,
    "total_chunks": 206
  },
  {
    "id": "a90ca8918c13dab84718fee53795af85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"wire-transfer\": \"Ви також можете надіслати кошти напряму до freeCodeCamp через грошовий переказ Якщо вам потрібно більше деталей про це, напишіть Квінсі на quincy@freecodecamporg\", \"does-crypto\": \"Чи приймає freeCodeCamp донати в біткоїнах чи інших криптовалютах \", \"yes-cryptocurrency\": \"Так Будь ласка, напишіть Квінсі на quincy@freecodecamp org і він зможе надіслати вам інформацію про гаманець freeCodeCamp Він також може надати квитанцію про донат, якщо вам потрібно \", \"can-check\": \"Чи можу я виписати чек \", \"yes-check\": \"Так, ми б були радіВи можете відправити його сюди:\",\n    \"how-matching-gift\": \"Як налаштувати подарунки від мого роботодавця, або нарахування на заробітну плату \",\n    \"employers-vary\": \"Це залежить від роботодавця, і наша некомерційна організація вже зазначена у багатьох великих базах \",\n    \"some-volunteer\": \"Деякі люди можуть волонтерити для freeCodeCamp і їхні роботодавці дарують фіксовану суму за кожну годину волонтерства",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 121,
    "total_chunks": 206
  },
  {
    "id": "06a2a61aad344e9855ae9878478643bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "гаманець freeCodeCamp Він також може надати квитанцію про донат, якщо вам потрібно \", \"can-check\": \"Чи можу я виписати чек \", \"yes-check\": \"Так, ми б були радіВи можете відправити його сюди:\", \"how-matching-gift\": \"Як налаштувати подарунки від мого роботодавця, або нарахування на заробітну плату \", \"employers-vary\": \"Це залежить від роботодавця, і наша некомерційна організація вже зазначена у багатьох великих базах \", \"some-volunteer\": \"Деякі люди можуть волонтерити для freeCodeCamp і їхні роботодавці дарують фіксовану суму за кожну годину волонтерстваІнші роботодавці дарують будь-який донат, який компенсують донори на певну суму\",\n    \"help-matching-gift\": \"Якщо вам потрібна допомога — напишіть напряму до Квінсі: quincy@freecodecamp org\",\n    \"how-endowment\": \"Як оформити постійне дарування для freeCodeCamp org \",\n    \"endowment\": \"Це була б величезна допомога Оскільки це більш ручний процес, Квінсі особисто може допомогти вам Будь ласка, напишіть йому на quincy@freecodecamp org",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 122,
    "total_chunks": 206
  },
  {
    "id": "f388cd11caf8d1758de7fe62eaf1eae4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "у багатьох великих базах \", \"some-volunteer\": \"Деякі люди можуть волонтерити для freeCodeCamp і їхні роботодавці дарують фіксовану суму за кожну годину волонтерстваІнші роботодавці дарують будь-який донат, який компенсують донори на певну суму\", \"help-matching-gift\": \"Якщо вам потрібна допомога — напишіть напряму до Квінсі: quincy@freecodecamp org\", \"how-endowment\": \"Як оформити постійне дарування для freeCodeCamp org \", \"endowment\": \"Це була б величезна допомога Оскільки це більш ручний процес, Квінсі особисто може допомогти вам Будь ласка, напишіть йому на quincy@freecodecamp org\",\n    \"how-legacy\": \"Як оформити дарування для freeCodeCamp org \",\n    \"we-honored\": \"Для нас велика честь використати такий дарунок з користю, щоб допомогти людям у всьому світі навчитися програмувати Залежно від того, де ви проживаєте, це також може бути податковою пільгою",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 123,
    "total_chunks": 206
  },
  {
    "id": "9cf8746cbd0ba11c9591e9fbfe3615c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "напишіть напряму до Квінсі: quincy@freecodecamp org\", \"how-endowment\": \"Як оформити постійне дарування для freeCodeCamp org \", \"endowment\": \"Це була б величезна допомога Оскільки це більш ручний процес, Квінсі особисто може допомогти вам Будь ласка, напишіть йому на quincy@freecodecamp org\", \"how-legacy\": \"Як оформити дарування для freeCodeCamp org \", \"we-honored\": \"Для нас велика честь використати такий дарунок з користю, щоб допомогти людям у всьому світі навчитися програмувати Залежно від того, де ви проживаєте, це також може бути податковою пільгою\",\n    \"legacy-gift-message\": \"Я передаю, відписую та заповідаю [суму _____ доларів США (або іншої валюти) АБО _____ відсотків від залишку свого майна] freeCodeCamp org (Free Code Camp, Inc",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 124,
    "total_chunks": 206
  },
  {
    "id": "efa0d9a18fd9fb45ed07acfdd8ad0113",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "Квінсі особисто може допомогти вам Будь ласка, напишіть йому на quincy@freecodecamp org\", \"how-legacy\": \"Як оформити дарування для freeCodeCamp org \", \"we-honored\": \"Для нас велика честь використати такий дарунок з користю, щоб допомогти людям у всьому світі навчитися програмувати Залежно від того, де ви проживаєте, це також може бути податковою пільгою\", \"legacy-gift-message\": \"Я передаю, відписую та заповідаю [суму _____ доларів США (або іншої валюти) АБО _____ відсотків від залишку свого майна] freeCodeCamp org (Free Code Camp, Incідентифікаційний податковий номер 82-0779546), благодійній корпорації, організованій відповідно до законів штату Делавер, Сполучені Штати, наразі розташованій за адресою 3905 Hedgcoxe Rd, PO Box 250352, Plano, Texas, 75025 United States, для використання в загальних благодійних цілях на власний розсуд \",\n    \"thank-wikimedia\": \"Ми б хотіли подякувати фонду «Вікімедіа» за надання офіційного стилю",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 125,
    "total_chunks": 206
  },
  {
    "id": "577fb851cdea1bbe3fba4d83ac24798b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "пільгою\", \"legacy-gift-message\": \"Я передаю, відписую та заповідаю [суму _____ доларів США (або іншої валюти) АБО _____ відсотків від залишку свого майна] freeCodeCamp org (Free Code Camp, Incідентифікаційний податковий номер 82-0779546), благодійній корпорації, організованій відповідно до законів штату Делавер, Сполучені Штати, наразі розташованій за адресою 3905 Hedgcoxe Rd, PO Box 250352, Plano, Texas, 75025 United States, для використання в загальних благодійних цілях на власний розсуд \", \"thank-wikimedia\": \"Ми б хотіли подякувати фонду «Вікімедіа» за надання офіційного стилю\",\n    \"legacy-gift-questions\": \"Якщо у вас виникли будь-які питання щодо цього процесу, будь ласка, напишіть Квінсі на quincy@freecodecamp org \",\n    \"how-stock\": \"Як пожертвувати акції для freeCodeCamp org \",\n    \"welcome-stock\": \"Ми будемо раді вашим акціям Будь ласка, напишіть Квінсі та він допоможе вам з цим, зокрема поділиться деталями нашого брокерського рахунку: quincy@freecodecamp org",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 126,
    "total_chunks": 206
  },
  {
    "id": "6bf308e5f09f5920453305620be190e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "Plano, Texas, 75025 United States, для використання в загальних благодійних цілях на власний розсуд \", \"thank-wikimedia\": \"Ми б хотіли подякувати фонду «Вікімедіа» за надання офіційного стилю\", \"legacy-gift-questions\": \"Якщо у вас виникли будь-які питання щодо цього процесу, будь ласка, напишіть Квінсі на quincy@freecodecamp org \", \"how-stock\": \"Як пожертвувати акції для freeCodeCamp org \", \"welcome-stock\": \"Ми будемо раді вашим акціям Будь ласка, напишіть Квінсі та він допоможе вам з цим, зокрема поділиться деталями нашого брокерського рахунку: quincy@freecodecamp org\",\n    \"how-receipt\": \"Чи можу я отримати квитанцію про донат, щоб відраховувати його від податків \",\n    \"just-forward\": \"Абсолютно Просто надішліть квитанцію своєї транзакції на адресу donors@freecodecamp сом, скажіть нам, що ви хотіли б отримати квитанцію, та зазначте, якщо у вас є особисті побажання, і ми відповімо вам з квитанцією",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 127,
    "total_chunks": 206
  },
  {
    "id": "3de71466f2ebe54d17b51da0009776d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "акції для freeCodeCamp org \", \"welcome-stock\": \"Ми будемо раді вашим акціям Будь ласка, напишіть Квінсі та він допоможе вам з цим, зокрема поділиться деталями нашого брокерського рахунку: quincy@freecodecamp org\", \"how-receipt\": \"Чи можу я отримати квитанцію про донат, щоб відраховувати його від податків \", \"just-forward\": \"Абсолютно Просто надішліть квитанцію своєї транзакції на адресу donors@freecodecamp сом, скажіть нам, що ви хотіли б отримати квитанцію, та зазначте, якщо у вас є особисті побажання, і ми відповімо вам з квитанцією\",\n    \"how-update\": \"Я налаштував(-ла) щомісячний донат, але мені потрібно оновити або призупинити повторюваність Як це зробити \",\n    \"take-care-of-this\": \"Просто перешліть одну із щомісячних квитанцій на donors@freecodecamp org та повідомте, чим ми можемо допомогти Ми подбаємо про це та надішлемо вам підтвердження \",\n    \"anything-else\": \"Чи можу я дізнатись ще щось про донати для freeCodeCamp org",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 128,
    "total_chunks": 206
  },
  {
    "id": "44eb812ef23160da3b45c987a7b6f9ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "сом, скажіть нам, що ви хотіли б отримати квитанцію, та зазначте, якщо у вас є особисті побажання, і ми відповімо вам з квитанцією\", \"how-update\": \"Я налаштував(-ла) щомісячний донат, але мені потрібно оновити або призупинити повторюваність Як це зробити \", \"take-care-of-this\": \"Просто перешліть одну із щомісячних квитанцій на donors@freecodecamp org та повідомте, чим ми можемо допомогти Ми подбаємо про це та надішлемо вам підтвердження \", \"anything-else\": \"Чи можу я дізнатись ще щось про донати для freeCodeCamp org\",\n    \"other-support\": \"Якщо ви хочете підтримати нашу некомерційну організацію іншим шляхом, або ж маєте будь-які інші питання — напишіть Квінсі на quincy@freecodecamp org \",\n    \"bear-progress-alt\": \"Ведмежатко з прохальним виразом обличчя, що тримає порожню банку для коштів \",\n    \"bear-completion-alt\": \"Ведмежатко, що тримає великий трофей",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 129,
    "total_chunks": 206
  },
  {
    "id": "e5ca33883444cdd25e253c3800b50fa3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "одну із щомісячних квитанцій на donors@freecodecamp org та повідомте, чим ми можемо допомогти Ми подбаємо про це та надішлемо вам підтвердження \", \"anything-else\": \"Чи можу я дізнатись ще щось про донати для freeCodeCamp org\", \"other-support\": \"Якщо ви хочете підтримати нашу некомерційну організацію іншим шляхом, або ж маєте будь-які інші питання — напишіть Квінсі на quincy@freecodecamp org \", \"bear-progress-alt\": \"Ведмежатко з прохальним виразом обличчя, що тримає порожню банку для коштів \", \"bear-completion-alt\": \"Ведмежатко, що тримає великий трофей\",\n    \"flying-bear\": \"Зображення чарівного плюшевого ведмедика з академічною шапочкою та значком донора \",\n    \"crucial-contribution\": \"Ваші внески відіграють велику роль у створенні матеріалу, який надає мільйонам людей можливість опанувати нові навички та забезпечити сім’ю",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 130,
    "total_chunks": 206
  },
  {
    "id": "3d62c653fe663b82d3be394da7477241",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "freeCodeCamp org\", \"other-support\": \"Якщо ви хочете підтримати нашу некомерційну організацію іншим шляхом, або ж маєте будь-які інші питання — напишіть Квінсі на quincy@freecodecamp org \", \"bear-progress-alt\": \"Ведмежатко з прохальним виразом обличчя, що тримає порожню банку для коштів \", \"bear-completion-alt\": \"Ведмежатко, що тримає великий трофей\", \"flying-bear\": \"Зображення чарівного плюшевого ведмедика з академічною шапочкою та значком донора \", \"crucial-contribution\": \"Ваші внески відіграють велику роль у створенні матеріалу, який надає мільйонам людей можливість опанувати нові навички та забезпечити сім’ю\",\n    \"support-benefits-title\": \"Переваги стати донором:\",\n    \"support-benefits-1\": \"Жодних спливаючих повідомлень про донати\",\n    \"support-benefits-2\": \"Ви отримаєте значок донора\",\n    \"support-benefits-3\": \"Зображення профілю міститиме золоте гало навколо\",\n    \"support-benefits-4\": \"Ви отримаєте доступ до спеціальних каналів підтримки на дискорді: <0>приєднайтесь до нашого дискорду</0> та використайте команду <1>/supporter</1>, щоб отримати доступ\",\n    \"support-benefits-5\": \"Та багато іншого зовсім скоро\",\n    \"exclusive-features\": \"Ось список ваших переваг як донора:\",\n    \"current-initiatives-title\": \"Поточні ініціативи:\",\n    \"your-donation-helps-followings\": \"Завдяки вашим донатам можливі такі ініціативи:\",\n    \"current-initiatives-1\": \"Створення нової навчальної програми з JavaScript та Python\",\n    \"current-initiatives-2\": \"Створення навчальної програми з англійської мови та математики\",\n    \"current-initiatives-3\": \"Переклад навчальної програми та підручників на 32 мови\",\n    \"current-initiatives-4\": \"Створення безоплатного акредитованого ступеня бакалавра з комп’ютерних наук\",\n    \"community-achivements-title\": \"Цьогорічні досягнення нашої спільноти:\",\n    \"community-achivements-1\": \"Опубліковано <0>193</0> курси на YouTube",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 883,
    "chunk_index": 131,
    "total_chunks": 206
  },
  {
    "id": "6ef417ddca75c8e325d16de6ce49f90e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "використайте команду <1>/supporter</1>, щоб отримати доступ\", \"support-benefits-5\": \"Та багато іншого зовсім скоро\", \"exclusive-features\": \"Ось список ваших переваг як донора:\", \"current-initiatives-title\": \"Поточні ініціативи:\", \"your-donation-helps-followings\": \"Завдяки вашим донатам можливі такі ініціативи:\", \"current-initiatives-1\": \"Створення нової навчальної програми з JavaScript та Python\", \"current-initiatives-2\": \"Створення навчальної програми з англійської мови та математики\", \"current-initiatives-3\": \"Переклад навчальної програми та підручників на 32 мови\", \"current-initiatives-4\": \"Створення безоплатного акредитованого ступеня бакалавра з комп’ютерних наук\", \"community-achivements-title\": \"Цьогорічні досягнення нашої спільноти:\", \"community-achivements-1\": \"Опубліковано <0>193</0> курси на YouTube\",\n    \"community-achivements-2\": \"Опубліковано <0>850</0> текстових посібників та <0>5</0> безоплатних підручників на freeCodeCamp Press \",\n    \"community-achivements-3\": \"Додано <0>2 455</0> внесків в наші репозиторії з відкритим кодом на GitHub",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 132,
    "total_chunks": 206
  },
  {
    "id": "51af805b4b4e88e8b99578ca823bad34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "можливі такі ініціативи:\", \"current-initiatives-1\": \"Створення нової навчальної програми з JavaScript та Python\", \"current-initiatives-2\": \"Створення навчальної програми з англійської мови та математики\", \"current-initiatives-3\": \"Переклад навчальної програми та підручників на 32 мови\", \"current-initiatives-4\": \"Створення безоплатного акредитованого ступеня бакалавра з комп’ютерних наук\", \"community-achivements-title\": \"Цьогорічні досягнення нашої спільноти:\", \"community-achivements-1\": \"Опубліковано <0>193</0> курси на YouTube\", \"community-achivements-2\": \"Опубліковано <0>850</0> текстових посібників та <0>5</0> безоплатних підручників на freeCodeCamp Press \", \"community-achivements-3\": \"Додано <0>2 455</0> внесків в наші репозиторії з відкритим кодом на GitHub\",\n    \"community-achivements-4\": \"Перекладено <0>1,5</0> мільйона слів, щоб зробити навчальну програму та підручники доступними багатьма мовами світу \",\n    \"as-you-see\": \"Як бачите, ми багато чого робимо Тому можете бути певні, що ваші донати будуть використані правильно",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 133,
    "total_chunks": 206
  },
  {
    "id": "96ec53275cede94ddca429c881d6af5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "акредитованого ступеня бакалавра з комп’ютерних наук\", \"community-achivements-title\": \"Цьогорічні досягнення нашої спільноти:\", \"community-achivements-1\": \"Опубліковано <0>193</0> курси на YouTube\", \"community-achivements-2\": \"Опубліковано <0>850</0> текстових посібників та <0>5</0> безоплатних підручників на freeCodeCamp Press \", \"community-achivements-3\": \"Додано <0>2 455</0> внесків в наші репозиторії з відкритим кодом на GitHub\", \"community-achivements-4\": \"Перекладено <0>1,5</0> мільйона слів, щоб зробити навчальну програму та підручники доступними багатьма мовами світу \", \"as-you-see\": \"Як бачите, ми багато чого робимо Тому можете бути певні, що ваші донати будуть використані правильно\",\n    \"get-benefits\": \"Отримайте переваги та знання того, що ви допомагаєте нашій організації покращити освіту Станьте донором сьогодні",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 134,
    "total_chunks": 206
  },
  {
    "id": "5fb27461ce189bdadde6b72eed9c6e80",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "YouTube\", \"community-achivements-2\": \"Опубліковано <0>850</0> текстових посібників та <0>5</0> безоплатних підручників на freeCodeCamp Press \", \"community-achivements-3\": \"Додано <0>2 455</0> внесків в наші репозиторії з відкритим кодом на GitHub\", \"community-achivements-4\": \"Перекладено <0>1,5</0> мільйона слів, щоб зробити навчальну програму та підручники доступними багатьма мовами світу \", \"as-you-see\": \"Як бачите, ми багато чого робимо Тому можете бути певні, що ваші донати будуть використані правильно\", \"get-benefits\": \"Отримайте переваги та знання того, що ви допомагаєте нашій організації покращити освіту Станьте донором сьогодні\",\n    \"modal-benefits-title\": \"Підтримайте нас\",\n    \"help-us-more-certifications\": \"Допоможіть створити більше сертифікацій\",\n    \"remove-donation-popups\": \"Забудьте про повідомлення з донатами\",\n    \"help-millions-learn\": \"Допоможіть мільйонам людей навчатись\",\n    \"reach-goals-faster\": \"Досягайте цілей швидше\",\n    \"remove-distractions\": \"Позбавтесь повідомлень\",\n    \"remove-interruptions\": \"Позбавтесь повідомлень\",\n    \"acquire-skills-faster\": \"Набувайте навичок швидше\",\n    \"animation-description\": \"Це 20-секундна анімаційна реклама, щоб заохотити кемперів стати донорами freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 135,
    "total_chunks": 206
  },
  {
    "id": "d3c2eeb26418540303081ce189957755",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Як бачите, ми багато чого робимо Тому можете бути певні, що ваші донати будуть використані правильно\", \"get-benefits\": \"Отримайте переваги та знання того, що ви допомагаєте нашій організації покращити освіту Станьте донором сьогодні\", \"modal-benefits-title\": \"Підтримайте нас\", \"help-us-more-certifications\": \"Допоможіть створити більше сертифікацій\", \"remove-donation-popups\": \"Забудьте про повідомлення з донатами\", \"help-millions-learn\": \"Допоможіть мільйонам людей навчатись\", \"reach-goals-faster\": \"Досягайте цілей швидше\", \"remove-distractions\": \"Позбавтесь повідомлень\", \"remove-interruptions\": \"Позбавтесь повідомлень\", \"acquire-skills-faster\": \"Набувайте навичок швидше\", \"animation-description\": \"Це 20-секундна анімаційна реклама, щоб заохотити кемперів стати донорами freeCodeCampАнімація починається з ведмедика, який стає донором В результаті відволікаючі спливаючі вікна зникають, і ведмедик може досягти своїх цілей",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 136,
    "total_chunks": 206
  },
  {
    "id": "d9c3aaad8e7ffde0853fc62932c6d2a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "переваги та знання того, що ви допомагаєте нашій організації покращити освіту Станьте донором сьогодні\", \"modal-benefits-title\": \"Підтримайте нас\", \"help-us-more-certifications\": \"Допоможіть створити більше сертифікацій\", \"remove-donation-popups\": \"Забудьте про повідомлення з донатами\", \"help-millions-learn\": \"Допоможіть мільйонам людей навчатись\", \"reach-goals-faster\": \"Досягайте цілей швидше\", \"remove-distractions\": \"Позбавтесь повідомлень\", \"remove-interruptions\": \"Позбавтесь повідомлень\", \"acquire-skills-faster\": \"Набувайте навичок швидше\", \"animation-description\": \"Це 20-секундна анімаційна реклама, щоб заохотити кемперів стати донорами freeCodeCampАнімація починається з ведмедика, який стає донором В результаті відволікаючі спливаючі вікна зникають, і ведмедик може досягти своїх цілейПотім він закінчує навчання і стає освітнім супергероєм, який допомагає людям по всьому світу \",\n    \"animation-countdown\": \"До завершення анімації залишилось: {{secondsRemaining}}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 137,
    "total_chunks": 206
  },
  {
    "id": "19fb9b0507681606b003d5bb98e3ef14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "більше сертифікацій\", \"remove-donation-popups\": \"Забудьте про повідомлення з донатами\", \"help-millions-learn\": \"Допоможіть мільйонам людей навчатись\", \"reach-goals-faster\": \"Досягайте цілей швидше\", \"remove-distractions\": \"Позбавтесь повідомлень\", \"remove-interruptions\": \"Позбавтесь повідомлень\", \"acquire-skills-faster\": \"Набувайте навичок швидше\", \"animation-description\": \"Це 20-секундна анімаційна реклама, щоб заохотити кемперів стати донорами freeCodeCampАнімація починається з ведмедика, який стає донором В результаті відволікаючі спливаючі вікна зникають, і ведмедик може досягти своїх цілейПотім він закінчує навчання і стає освітнім супергероєм, який допомагає людям по всьому світу \", \"animation-countdown\": \"До завершення анімації залишилось: {{secondsRemaining}}\"\n  },\n  \"report\": {\n    \"sign-in\": \"Щоб повідомити про порушення користувача, ви повинні ввійти в систему\",\n    \"details\": \"Будь ласка, надайте якомога докладнішу інформацію про обліковий запис або поведінку, про яку ви повідомляєте",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 138,
    "total_chunks": 206
  },
  {
    "id": "53f94df589a15e768d16b8731fa3ea73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "анімаційна реклама, щоб заохотити кемперів стати донорами freeCodeCampАнімація починається з ведмедика, який стає донором В результаті відволікаючі спливаючі вікна зникають, і ведмедик може досягти своїх цілейПотім він закінчує навчання і стає освітнім супергероєм, який допомагає людям по всьому світу \", \"animation-countdown\": \"До завершення анімації залишилось: {{secondsRemaining}}\" }, \"report\": { \"sign-in\": \"Щоб повідомити про порушення користувача, ви повинні ввійти в систему\", \"details\": \"Будь ласка, надайте якомога докладнішу інформацію про обліковий запис або поведінку, про яку ви повідомляєте\",\n    \"portfolio\": \"Поскаржитися на портфоліо користувача\",\n    \"portfolio-2\": \"Ви хочете поскаржитися на портфоліо {{username}} за порушення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 139,
    "total_chunks": 206
  },
  {
    "id": "5a02ef9a442193d91cd3ff66411bf038",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "В результаті відволікаючі спливаючі вікна зникають, і ведмедик може досягти своїх цілейПотім він закінчує навчання і стає освітнім супергероєм, який допомагає людям по всьому світу \", \"animation-countdown\": \"До завершення анімації залишилось: {{secondsRemaining}}\" }, \"report\": { \"sign-in\": \"Щоб повідомити про порушення користувача, ви повинні ввійти в систему\", \"details\": \"Будь ласка, надайте якомога докладнішу інформацію про обліковий запис або поведінку, про яку ви повідомляєте\", \"portfolio\": \"Поскаржитися на портфоліо користувача\", \"portfolio-2\": \"Ви хочете поскаржитися на портфоліо {{username}} за порушення\",\n    \"notify-1\": \"Ми повідомимо команду модераторів спільноти та надішлемо копію цього звіту на вашу електронну пошту: <strong>{{email}}</strong>\",\n    \"notify-2\": \"За потреби ми зв’яжемося з вами для отримання додаткової інформації \",\n    \"what\": \"Про що ви хотіли б повідомити",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 140,
    "total_chunks": 206
  },
  {
    "id": "d29f1f039a85ef00dab8cb5c4a1e75a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"sign-in\": \"Щоб повідомити про порушення користувача, ви повинні ввійти в систему\", \"details\": \"Будь ласка, надайте якомога докладнішу інформацію про обліковий запис або поведінку, про яку ви повідомляєте\", \"portfolio\": \"Поскаржитися на портфоліо користувача\", \"portfolio-2\": \"Ви хочете поскаржитися на портфоліо {{username}} за порушення\", \"notify-1\": \"Ми повідомимо команду модераторів спільноти та надішлемо копію цього звіту на вашу електронну пошту: <strong>{{email}}</strong>\", \"notify-2\": \"За потреби ми зв’яжемося з вами для отримання додаткової інформації \", \"what\": \"Про що ви хотіли б повідомити\",\n    \"submit\": \"Надіслати звіт\"\n  },\n  \"404\": {\n    \"page-not-found\": \"Сторінку не знайдено\",\n    \"not-found\": \"404 не знайдено:\",\n    \"heres-a-quote\": \"Ми не змогли знайти те, що ви шукали, але ось цитата:\"\n  },\n  \"search\": {\n    \"label\": \"Пошук\",\n    \"placeholder\": {\n      \"default\": \"Шукати серед статей, підручників і книг\",\n      \"numbered\": \"Шукати серед {{ roundedTotalRecords }}+ статей, підручників і книг\"\n    },\n    \"see-results\": \"Переглянути всі результати для {{searchQuery}}\",\n    \"try\": \"Шукаєте щось",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 528,
    "chunk_index": 141,
    "total_chunks": 206
  },
  {
    "id": "f05fd01b7a3c06baab4e3af33f82f684",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "ми зв’яжемося з вами для отримання додаткової інформації \", \"what\": \"Про що ви хотіли б повідомити\", \"submit\": \"Надіслати звіт\" }, \"404\": { \"page-not-found\": \"Сторінку не знайдено\", \"not-found\": \"404 не знайдено:\", \"heres-a-quote\": \"Ми не змогли знайти те, що ви шукали, але ось цитата:\" }, \"search\": { \"label\": \"Пошук\", \"placeholder\": { \"default\": \"Шукати серед статей, підручників і книг\", \"numbered\": \"Шукати серед {{ roundedTotalRecords }}+ статей, підручників і книг\" }, \"see-results\": \"Переглянути всі результати для {{searchQuery}}\", \"try\": \"Шукаєте щосьСпробуйте пошуковий рядок на цій сторінці \",\n    \"no-results\": \"Нічого не знайдено\",\n    \"result-list\": \"Результати пошуку\"\n  },\n  \"misc\": {\n    \"coming-soon\": \"Зовсім скоро\",\n    \"offline\": \"Схоже, що ви не підключені до мережі, тому не зможете зберегти свій прогрес\",\n    \"server-offline\": \"Сервер не відповідає, ваш прогрес може не зберегтись",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 142,
    "total_chunks": 206
  },
  {
    "id": "9436cb6369e18ef787ef29e309fa6df8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "}, \"search\": { \"label\": \"Пошук\", \"placeholder\": { \"default\": \"Шукати серед статей, підручників і книг\", \"numbered\": \"Шукати серед {{ roundedTotalRecords }}+ статей, підручників і книг\" }, \"see-results\": \"Переглянути всі результати для {{searchQuery}}\", \"try\": \"Шукаєте щосьСпробуйте пошуковий рядок на цій сторінці \", \"no-results\": \"Нічого не знайдено\", \"result-list\": \"Результати пошуку\" }, \"misc\": { \"coming-soon\": \"Зовсім скоро\", \"offline\": \"Схоже, що ви не підключені до мережі, тому не зможете зберегти свій прогрес\", \"server-offline\": \"Сервер не відповідає, ваш прогрес може не зберегтисьБудь ласка, зв’яжіться з <0>підтримкою</0>, якщо помилка не зникне\",\n    \"unsubscribed\": \"Підписку успішно скасовано\",\n    \"keep-coding\": \"Що б не сталося, продовжуйте програмувати \",\n    \"email-signup\": \"Реєстрація через електронну пошту\",\n    \"brand-new-account\": \"Вітаємо у новому обліковому записі freeCodeCamp Розпочнемо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 143,
    "total_chunks": 206
  },
  {
    "id": "c39d90d5419096a9586c03770f154ae0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "щосьСпробуйте пошуковий рядок на цій сторінці \", \"no-results\": \"Нічого не знайдено\", \"result-list\": \"Результати пошуку\" }, \"misc\": { \"coming-soon\": \"Зовсім скоро\", \"offline\": \"Схоже, що ви не підключені до мережі, тому не зможете зберегти свій прогрес\", \"server-offline\": \"Сервер не відповідає, ваш прогрес може не зберегтисьБудь ласка, зв’яжіться з <0>підтримкою</0>, якщо помилка не зникне\", \"unsubscribed\": \"Підписку успішно скасовано\", \"keep-coding\": \"Що б не сталося, продовжуйте програмувати \", \"email-signup\": \"Реєстрація через електронну пошту\", \"brand-new-account\": \"Вітаємо у новому обліковому записі freeCodeCamp Розпочнемо\",\n    \"duplicate-account-warning\": \"Якщо ви хотіли ввійти у наявний обліковий запис, а не створювати новий, <0>натисніть тут, щоб видалити цей обліковий запис</0> та спробуйте іншу адресу електронної пошти \",\n    \"quincy\": \"— Квінсі Ларсон, вчитель, який заснував freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 144,
    "total_chunks": 206
  },
  {
    "id": "34f4ccb645ef83c2f1367322d81e9b85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Сервер не відповідає, ваш прогрес може не зберегтисьБудь ласка, зв’яжіться з <0>підтримкою</0>, якщо помилка не зникне\", \"unsubscribed\": \"Підписку успішно скасовано\", \"keep-coding\": \"Що б не сталося, продовжуйте програмувати \", \"email-signup\": \"Реєстрація через електронну пошту\", \"brand-new-account\": \"Вітаємо у новому обліковому записі freeCodeCamp Розпочнемо\", \"duplicate-account-warning\": \"Якщо ви хотіли ввійти у наявний обліковий запис, а не створювати новий, <0>натисніть тут, щоб видалити цей обліковий запис</0> та спробуйте іншу адресу електронної пошти \", \"quincy\": \"— Квінсі Ларсон, вчитель, який заснував freeCodeCamporg\",\n    \"email-blast\": \"Кожної п’ятниці я надсилаю електронний лист із 5 посиланнями про програмування та інформатику Я відправляю їх приблизно 6 мільйонам людей Можливо, надсилати ці листи й вам",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 145,
    "total_chunks": 206
  },
  {
    "id": "6796838d9f34430f57031af28c22206c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\", \"email-signup\": \"Реєстрація через електронну пошту\", \"brand-new-account\": \"Вітаємо у новому обліковому записі freeCodeCamp Розпочнемо\", \"duplicate-account-warning\": \"Якщо ви хотіли ввійти у наявний обліковий запис, а не створювати новий, <0>натисніть тут, щоб видалити цей обліковий запис</0> та спробуйте іншу адресу електронної пошти \", \"quincy\": \"— Квінсі Ларсон, вчитель, який заснував freeCodeCamporg\", \"email-blast\": \"Кожної п’ятниці я надсилаю електронний лист із 5 посиланнями про програмування та інформатику Я відправляю їх приблизно 6 мільйонам людей Можливо, надсилати ці листи й вам\",\n    \"update-email-1\": \"Оновити свою адресу електронної пошти\",\n    \"update-email-2\": \"Оновіть свою адресу електронної пошти тут:\",\n    \"email\": \"Адреса електронної пошти\",\n    \"and\": \"і\",\n    \"update-your-card\": \"Оновити картку\",\n    \"supporters-page-title\": \"Сторінка донорів\",\n    \"change-theme\": \"Увійдіть, щоб змінити тему",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 146,
    "total_chunks": 206
  },
  {
    "id": "2bf3e3230c700f08160da9cff79f29c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "видалити цей обліковий запис</0> та спробуйте іншу адресу електронної пошти \", \"quincy\": \"— Квінсі Ларсон, вчитель, який заснував freeCodeCamporg\", \"email-blast\": \"Кожної п’ятниці я надсилаю електронний лист із 5 посиланнями про програмування та інформатику Я відправляю їх приблизно 6 мільйонам людей Можливо, надсилати ці листи й вам\", \"update-email-1\": \"Оновити свою адресу електронної пошти\", \"update-email-2\": \"Оновіть свою адресу електронної пошти тут:\", \"email\": \"Адреса електронної пошти\", \"and\": \"і\", \"update-your-card\": \"Оновити картку\", \"supporters-page-title\": \"Сторінка донорів\", \"change-theme\": \"Увійдіть, щоб змінити тему\",\n    \"translation-pending\": \"Допоможіть нам з перекладом\",\n    \"certification-project\": \"Сертифікаційний проєкт\",\n    \"iframe-preview\": \"Передперегляд {{title}}\",\n    \"iframe-alert\": \"Зазвичай це посилання перенесло б вас на інший вебсайт Воно працює Це посилання на: {{externalLink}}\",\n    \"iframe-form-submit-alert\": \"Зазвичай ця форма буде відправлена",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 147,
    "total_chunks": 206
  },
  {
    "id": "68809d43018f6ccfccd5d8403a2b1dfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "Я відправляю їх приблизно 6 мільйонам людей Можливо, надсилати ці листи й вам\", \"update-email-1\": \"Оновити свою адресу електронної пошти\", \"update-email-2\": \"Оновіть свою адресу електронної пошти тут:\", \"email\": \"Адреса електронної пошти\", \"and\": \"і\", \"update-your-card\": \"Оновити картку\", \"supporters-page-title\": \"Сторінка донорів\", \"change-theme\": \"Увійдіть, щоб змінити тему\", \"translation-pending\": \"Допоможіть нам з перекладом\", \"certification-project\": \"Сертифікаційний проєкт\", \"iframe-preview\": \"Передперегляд {{title}}\", \"iframe-alert\": \"Зазвичай це посилання перенесло б вас на інший вебсайт Воно працює Це посилання на: {{externalLink}}\", \"iframe-form-submit-alert\": \"Зазвичай ця форма буде відправленаВона буде відправлена на: {{externalLink}}\",\n    \"document-notfound\": \"документ не знайдено\",\n    \"slow-load-msg\": \"Схоже, це займає більше часу, ніж зазвичай Будь ласка, спробуйте оновити сторінку \",\n    \"navigation-warning\": \"Ви втратите прогрес, якщо залишите цю сторінку Ви впевнені \",\n    \"fsd-b-description\": \"Завдяки комплексному курсу ви станете сертифікованим full stack розробником",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 148,
    "total_chunks": 206
  },
  {
    "id": "0f2fe9b8765d248288f2f36b8437cafb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"translation-pending\": \"Допоможіть нам з перекладом\", \"certification-project\": \"Сертифікаційний проєкт\", \"iframe-preview\": \"Передперегляд {{title}}\", \"iframe-alert\": \"Зазвичай це посилання перенесло б вас на інший вебсайт Воно працює Це посилання на: {{externalLink}}\", \"iframe-form-submit-alert\": \"Зазвичай ця форма буде відправленаВона буде відправлена на: {{externalLink}}\", \"document-notfound\": \"документ не знайдено\", \"slow-load-msg\": \"Схоже, це займає більше часу, ніж зазвичай Будь ласка, спробуйте оновити сторінку \", \"navigation-warning\": \"Ви втратите прогрес, якщо залишите цю сторінку Ви впевнені \", \"fsd-b-description\": \"Завдяки комплексному курсу ви станете сертифікованим full stack розробникомВи навчитесь повністю створювати застосунки за допомогою HTML, CSS, JavaScript, React, TypeScript, Node js, Python і багато іншого \",\n    \"fsd-b-cta\": \"Розпочати навчання\",\n    \"fsd-b-benefit-1-title\": \"100,000+ учнів\",\n    \"fsd-b-benefit-1-description\": \"Станьте одним з учнів, які отримують сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 149,
    "total_chunks": 206
  },
  {
    "id": "853c85c77ff8fc8e350488841fc23e49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "відправленаВона буде відправлена на: {{externalLink}}\", \"document-notfound\": \"документ не знайдено\", \"slow-load-msg\": \"Схоже, це займає більше часу, ніж зазвичай Будь ласка, спробуйте оновити сторінку \", \"navigation-warning\": \"Ви втратите прогрес, якщо залишите цю сторінку Ви впевнені \", \"fsd-b-description\": \"Завдяки комплексному курсу ви станете сертифікованим full stack розробникомВи навчитесь повністю створювати застосунки за допомогою HTML, CSS, JavaScript, React, TypeScript, Node js, Python і багато іншого \", \"fsd-b-cta\": \"Розпочати навчання\", \"fsd-b-benefit-1-title\": \"100,000+ учнів\", \"fsd-b-benefit-1-description\": \"Станьте одним з учнів, які отримують сертифікацію\",\n    \"fsd-b-benefit-2-title\": \"Професійний сертифікат\",\n    \"fsd-b-benefit-2-description\": \"Доведіть навички офіційним сертифікатом, який підлягає перевірці \",\n    \"fsd-b-benefit-3-title\": \"500+ завдань\",\n    \"fsd-b-benefit-3-description\": \"Зміцніть свої знання великою кількістю практики",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 150,
    "total_chunks": 206
  },
  {
    "id": "21dec791a24203186ea959c12ce14dd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\", \"navigation-warning\": \"Ви втратите прогрес, якщо залишите цю сторінку Ви впевнені \", \"fsd-b-description\": \"Завдяки комплексному курсу ви станете сертифікованим full stack розробникомВи навчитесь повністю створювати застосунки за допомогою HTML, CSS, JavaScript, React, TypeScript, Node js, Python і багато іншого \", \"fsd-b-cta\": \"Розпочати навчання\", \"fsd-b-benefit-1-title\": \"100,000+ учнів\", \"fsd-b-benefit-1-description\": \"Станьте одним з учнів, які отримують сертифікацію\", \"fsd-b-benefit-2-title\": \"Професійний сертифікат\", \"fsd-b-benefit-2-description\": \"Доведіть навички офіційним сертифікатом, який підлягає перевірці \", \"fsd-b-benefit-3-title\": \"500+ завдань\", \"fsd-b-benefit-3-description\": \"Зміцніть свої знання великою кількістю практики\"\n  },\n  \"icons\": {\n    \"gold-cup\": \"Золотий кубок\",\n    \"avatar\": \"Аватар за замовчуванням\",\n    \"avatar-2\": \"Аватар з ноутбуком\",\n    \"donate\": \"Задонатити через PayPal\",\n    \"fail\": \"Тест не пройдений\",\n    \"not-passed\": \"Не пройдено\",\n    \"waiting\": \"В очікуванні\",\n    \"passed\": \"Пройдено\",\n    \"failed\": \"Невдало\",\n    \"hint\": \"Підказка\",\n    \"heart\": \"Серце\",\n    \"initial\": \"Початковий\",\n    \"input-reset\": \"Очистити пошукові запити\",\n    \"input-search\": \"Надіслати пошукові запити\",\n    \"info\": \"Інформація\",\n    \"spacer\": \"Роздільник\",\n    \"toggle\": \"Перемкнути галочку\",\n    \"magnifier\": \"Надіслати пошукові запити\"\n  },\n  \"aria\": {\n    \"fcc-curriculum\": \"Навчальна програма freeCodeCamp\",\n    \"answer\": \"Відповідь\",\n    \"linkedin\": \"Посилання на сторінку LinkedIn {{username}}\",\n    \"github\": \"Посилання на сторінку GitHub {{username}}\",\n    \"website\": \"Посилання на вебсайт {{username}}\",\n    \"twitter\": \"Посилання на сторінку Twitter {{username}}\",\n    \"next-month\": \"Наступний місяць\",\n    \"previous-month\": \"Попередній місяць\",\n    \"first-page\": \"Перейти на першу сторінку\",\n    \"previous-page\": \"Перейти на попередню сторінку\",\n    \"next-page\": \"Перейти на наступну сторінку\",\n    \"last-page\": \"Перейти на останню сторінку\",\n    \"primary-nav\": \"первинний\",\n    \"breadcrumb-nav\": \"навігаційна стежка\",\n    \"timeline-pagination-nav\": \"Пагінація хронології\",\n    \"submit\": \"Використайте Ctrl + Enter, щоб відправити",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 951,
    "chunk_index": 151,
    "total_chunks": 206
  },
  {
    "id": "700c0d34cc2f0ea36d6a046b85350469",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Надіслати пошукові запити\" }, \"aria\": { \"fcc-curriculum\": \"Навчальна програма freeCodeCamp\", \"answer\": \"Відповідь\", \"linkedin\": \"Посилання на сторінку LinkedIn {{username}}\", \"github\": \"Посилання на сторінку GitHub {{username}}\", \"website\": \"Посилання на вебсайт {{username}}\", \"twitter\": \"Посилання на сторінку Twitter {{username}}\", \"next-month\": \"Наступний місяць\", \"previous-month\": \"Попередній місяць\", \"first-page\": \"Перейти на першу сторінку\", \"previous-page\": \"Перейти на попередню сторінку\", \"next-page\": \"Перейти на наступну сторінку\", \"last-page\": \"Перейти на останню сторінку\", \"primary-nav\": \"первинний\", \"breadcrumb-nav\": \"навігаційна стежка\", \"timeline-pagination-nav\": \"Пагінація хронології\", \"submit\": \"Використайте Ctrl + Enter, щоб відправити\",\n    \"running-tests\": \"Запущені тести\",\n    \"hide-preview\": \"Приховати попередній перегляд\",\n    \"move-preview-to-new-window\": \"Закрити вікно попереднього перегляду та сфокусувати його\",\n    \"move-preview-to-main-window\": \"Перемістити попередній перегляд у це вікно та закрити вікно попереднього перегляду\",\n    \"close-external-preview-window\": \"Закрити вікно попереднього перегляду\",\n    \"show-preview\": \"Показати попередній перегляд у цьому вікні\",\n    \"open-preview-in-new-window\": \"Відкрити попередній перегляд у новому вікні та сфокусувати його\",\n    \"step\": \"Крок\",\n    \"steps\": \"Кроки\",\n    \"steps-for\": \"Кроки для {{blockTitle}}\",\n    \"task\": \"Завдання\",\n    \"dialogues-and-tasks-for\": \"Діалоги та завдання з теми «{{blockTitle}}»\",\n    \"code-example\": \"Приклад коду {{codeName}}\",\n    \"opens-new-window\": \"Відкривається у новому вікні\",\n    \"rsa-checkbox\": \"Я спробував(-ла) метод читати-шукати-питати\",\n    \"similar-questions-checkbox\": \"Я шукав(-ла) схожі запитання на форумі, на які вже є відповідь\",\n    \"edit-my-profile\": \"Редагувати профіль\",\n    \"editor-a11y-off-macos\": \"Вміст редактора {{editorName}}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 809,
    "chunk_index": 152,
    "total_chunks": 206
  },
  {
    "id": "6f75dc5cfbcb181c46b7c86d55378386",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "закрити вікно попереднього перегляду\", \"close-external-preview-window\": \"Закрити вікно попереднього перегляду\", \"show-preview\": \"Показати попередній перегляд у цьому вікні\", \"open-preview-in-new-window\": \"Відкрити попередній перегляд у новому вікні та сфокусувати його\", \"step\": \"Крок\", \"steps\": \"Кроки\", \"steps-for\": \"Кроки для {{blockTitle}}\", \"task\": \"Завдання\", \"dialogues-and-tasks-for\": \"Діалоги та завдання з теми «{{blockTitle}}»\", \"code-example\": \"Приклад коду {{codeName}}\", \"opens-new-window\": \"Відкривається у новому вікні\", \"rsa-checkbox\": \"Я спробував(-ла) метод читати-шукати-питати\", \"similar-questions-checkbox\": \"Я шукав(-ла) схожі запитання на форумі, на які вже є відповідь\", \"edit-my-profile\": \"Редагувати профіль\", \"editor-a11y-off-macos\": \"Вміст редактора {{editorName}}Щоб перейти до функцій доступності, натисніть Option+F1 \",\n    \"editor-a11y-off-non-macos\": \"Вміст редактора {{editorName}} Щоб перейти до функцій доступності, натисніть Alt+F1 \",\n    \"editor-a11y-on-macos\": \"Вміст редактора {{editorName}} Ввімкнено режим доступності",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 153,
    "total_chunks": 206
  },
  {
    "id": "339d0a9f49858e00c81f023068921916",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"step\": \"Крок\", \"steps\": \"Кроки\", \"steps-for\": \"Кроки для {{blockTitle}}\", \"task\": \"Завдання\", \"dialogues-and-tasks-for\": \"Діалоги та завдання з теми «{{blockTitle}}»\", \"code-example\": \"Приклад коду {{codeName}}\", \"opens-new-window\": \"Відкривається у новому вікні\", \"rsa-checkbox\": \"Я спробував(-ла) метод читати-шукати-питати\", \"similar-questions-checkbox\": \"Я шукав(-ла) схожі запитання на форумі, на які вже є відповідь\", \"edit-my-profile\": \"Редагувати профіль\", \"editor-a11y-off-macos\": \"Вміст редактора {{editorName}}Щоб перейти до функцій доступності, натисніть Option+F1 \", \"editor-a11y-off-non-macos\": \"Вміст редактора {{editorName}} Щоб перейти до функцій доступності, натисніть Alt+F1 \", \"editor-a11y-on-macos\": \"Вміст редактора {{editorName}} Ввімкнено режим доступностіНатисніть Command+E, щоб вимкнути його, або Option+F1, щоб переглянути більше функцій \",\n    \"editor-a11y-on-non-macos\": \"Вміст редактора {{editorName}} Ввімкнено режим доступності Натисніть Ctrl+E, щоб вимкнути його, або Alt+F1, щоб переглянути більше функцій",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 154,
    "total_chunks": 206
  },
  {
    "id": "a2635e7c25ba1e924d2520cecfcfc63c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "метод читати-шукати-питати\", \"similar-questions-checkbox\": \"Я шукав(-ла) схожі запитання на форумі, на які вже є відповідь\", \"edit-my-profile\": \"Редагувати профіль\", \"editor-a11y-off-macos\": \"Вміст редактора {{editorName}}Щоб перейти до функцій доступності, натисніть Option+F1 \", \"editor-a11y-off-non-macos\": \"Вміст редактора {{editorName}} Щоб перейти до функцій доступності, натисніть Alt+F1 \", \"editor-a11y-on-macos\": \"Вміст редактора {{editorName}} Ввімкнено режим доступностіНатисніть Command+E, щоб вимкнути його, або Option+F1, щоб переглянути більше функцій \", \"editor-a11y-on-non-macos\": \"Вміст редактора {{editorName}} Ввімкнено режим доступності Натисніть Ctrl+E, щоб вимкнути його, або Alt+F1, щоб переглянути більше функцій\",\n    \"terminal-output\": \"Вивід терміналу\",\n    \"not-available\": \"Недоступно\"\n  },\n  \"flash\": {\n    \"no-email-in-userinfo\": \"Не вдалось отримати електронну пошту від вказаного провайдера Спробуйте іншого провайдера або виберіть опцію «Continue with Email»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 155,
    "total_chunks": 206
  },
  {
    "id": "6cb40c1d88c27c6acae418846a880303",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "Option+F1 \", \"editor-a11y-off-non-macos\": \"Вміст редактора {{editorName}} Щоб перейти до функцій доступності, натисніть Alt+F1 \", \"editor-a11y-on-macos\": \"Вміст редактора {{editorName}} Ввімкнено режим доступностіНатисніть Command+E, щоб вимкнути його, або Option+F1, щоб переглянути більше функцій \", \"editor-a11y-on-non-macos\": \"Вміст редактора {{editorName}} Ввімкнено режим доступності Натисніть Ctrl+E, щоб вимкнути його, або Alt+F1, щоб переглянути більше функцій\", \"terminal-output\": \"Вивід терміналу\", \"not-available\": \"Недоступно\" }, \"flash\": { \"no-email-in-userinfo\": \"Не вдалось отримати електронну пошту від вказаного провайдера Спробуйте іншого провайдера або виберіть опцію «Continue with Email»\",\n    \"honest-first\": \"Щоб отримати сертифікацію, ви повинні спочатку погодитись з нашою політикою академічної доброчесності\",\n    \"really-weird\": \"Щось пішло не так Якщо це повториться, будь ласка, повідомте про це за посиланням: https://github com/freeCodeCamp/freeCodeCamp/issues/new\",\n    \"generic-error\": \"Щось пішло не так",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 156,
    "total_chunks": 206
  },
  {
    "id": "b56b46876e08b24e75ef72ac0cf994a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "{{editorName}} Ввімкнено режим доступності Натисніть Ctrl+E, щоб вимкнути його, або Alt+F1, щоб переглянути більше функцій\", \"terminal-output\": \"Вивід терміналу\", \"not-available\": \"Недоступно\" }, \"flash\": { \"no-email-in-userinfo\": \"Не вдалось отримати електронну пошту від вказаного провайдера Спробуйте іншого провайдера або виберіть опцію «Continue with Email»\", \"honest-first\": \"Щоб отримати сертифікацію, ви повинні спочатку погодитись з нашою політикою академічної доброчесності\", \"really-weird\": \"Щось пішло не так Якщо це повториться, будь ласка, повідомте про це за посиланням: https://github com/freeCodeCamp/freeCodeCamp/issues/new\", \"generic-error\": \"Щось пішло не такБудь ласка, спробуйте ще раз, або напишіть на support@freecodecamp org, якщо помилка не зникає \",\n    \"went-wrong\": \"Щось пішло не так Будь ласка, перевірте та повторіть спробу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 157,
    "total_chunks": 206
  },
  {
    "id": "5e41dd0ab009ab6b4e7cd67348420740",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "вдалось отримати електронну пошту від вказаного провайдера Спробуйте іншого провайдера або виберіть опцію «Continue with Email»\", \"honest-first\": \"Щоб отримати сертифікацію, ви повинні спочатку погодитись з нашою політикою академічної доброчесності\", \"really-weird\": \"Щось пішло не так Якщо це повториться, будь ласка, повідомте про це за посиланням: https://github com/freeCodeCamp/freeCodeCamp/issues/new\", \"generic-error\": \"Щось пішло не такБудь ласка, спробуйте ще раз, або напишіть на support@freecodecamp org, якщо помилка не зникає \", \"went-wrong\": \"Щось пішло не так Будь ласка, перевірте та повторіть спробу\",\n    \"account-deleted\": \"Ваш обліковий запис було успішно видалено\",\n    \"progress-reset\": \"Ваш прогрес було скинуто\",\n    \"not-authorized\": \"Ви не авторизовані для продовження цієї дії\",\n    \"could-not-find\": \"Ми не змогли знайти те, що ви шукали Будь ласка, звіртесь та повторіть спробу\",\n    \"wrong-updating\": \"Щось пішло не так під час оновлення вашого облікового запису",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 158,
    "total_chunks": 206
  },
  {
    "id": "d0d71ee912310c8a792309ecd3687219",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"generic-error\": \"Щось пішло не такБудь ласка, спробуйте ще раз, або напишіть на support@freecodecamp org, якщо помилка не зникає \", \"went-wrong\": \"Щось пішло не так Будь ласка, перевірте та повторіть спробу\", \"account-deleted\": \"Ваш обліковий запис було успішно видалено\", \"progress-reset\": \"Ваш прогрес було скинуто\", \"not-authorized\": \"Ви не авторизовані для продовження цієї дії\", \"could-not-find\": \"Ми не змогли знайти те, що ви шукали Будь ласка, звіртесь та повторіть спробу\", \"wrong-updating\": \"Щось пішло не так під час оновлення вашого облікового записуБудь ласка, перевірте і повторіть спробу\",\n    \"updated-about-me\": \"Вашу особисту інформацію оновлено\",\n    \"updated-socials\": \"Ваші посилання на соціальні мережі оновлено\",\n    \"updated-sound\": \"Ваші налаштування звуку оновлено\",\n    \"updated-themes\": \"Вашу тему оновлено\",\n    \"keyboard-shortcut-updated\": \"Ваші налаштування клавіатурних скорочень оновлено\",\n    \"subscribe-to-quincy-updated\": \"Вашу підписку на розсилку від Квінсі оновлено\",\n    \"portfolio-item-updated\": \"Ваше портфоліо оновлено\",\n    \"email-invalid\": \"Неприпустимий формат адреси електронної пошти\",\n    \"email-valid\": \"Вашу електронну пошту змінено",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 534,
    "chunk_index": 159,
    "total_chunks": 206
  },
  {
    "id": "d97559e9e1f7cd6684dc9fa0ea5eef07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "те, що ви шукали Будь ласка, звіртесь та повторіть спробу\", \"wrong-updating\": \"Щось пішло не так під час оновлення вашого облікового записуБудь ласка, перевірте і повторіть спробу\", \"updated-about-me\": \"Вашу особисту інформацію оновлено\", \"updated-socials\": \"Ваші посилання на соціальні мережі оновлено\", \"updated-sound\": \"Ваші налаштування звуку оновлено\", \"updated-themes\": \"Вашу тему оновлено\", \"keyboard-shortcut-updated\": \"Ваші налаштування клавіатурних скорочень оновлено\", \"subscribe-to-quincy-updated\": \"Вашу підписку на розсилку від Квінсі оновлено\", \"portfolio-item-updated\": \"Ваше портфоліо оновлено\", \"email-invalid\": \"Неприпустимий формат адреси електронної пошти\", \"email-valid\": \"Вашу електронну пошту зміненоЩасливого програмування \",\n    \"bad-challengeId\": \"currentChallengeId не є дійсним ідентифікатором завдання\",\n    \"theme-invalid\": \"Недійсна тема\",\n    \"theme-set\": \"Тема вже встановлена\",\n    \"theme-updated\": \"Вашу тему було оновлено",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 160,
    "total_chunks": 206
  },
  {
    "id": "6807ec3106e372083e5f24777c297d4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "ласка, перевірте і повторіть спробу\", \"updated-about-me\": \"Вашу особисту інформацію оновлено\", \"updated-socials\": \"Ваші посилання на соціальні мережі оновлено\", \"updated-sound\": \"Ваші налаштування звуку оновлено\", \"updated-themes\": \"Вашу тему оновлено\", \"keyboard-shortcut-updated\": \"Ваші налаштування клавіатурних скорочень оновлено\", \"subscribe-to-quincy-updated\": \"Вашу підписку на розсилку від Квінсі оновлено\", \"portfolio-item-updated\": \"Ваше портфоліо оновлено\", \"email-invalid\": \"Неприпустимий формат адреси електронної пошти\", \"email-valid\": \"Вашу електронну пошту зміненоЩасливого програмування \", \"bad-challengeId\": \"currentChallengeId не є дійсним ідентифікатором завдання\", \"theme-invalid\": \"Недійсна тема\", \"theme-set\": \"Тема вже встановлена\", \"theme-updated\": \"Вашу тему було оновлено\",\n    \"username-used\": \"Ім’я користувача вже пов’язане з цим обліковим записом\",\n    \"username-taken\": \"Ім’я користувача вже пов’язане з іншим обліковим записом\",\n    \"username-updated\": \"Ми оновили ваше ім’я користувача на {{username}}\",\n    \"privacy-updated\": \"Ваші налаштування конфіденційності оновлено\",\n    \"could-not-logout\": \"Не вдалося вийти з системи",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 161,
    "total_chunks": 206
  },
  {
    "id": "89783d3146c7899ca461964608898795",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "від Квінсі оновлено\", \"portfolio-item-updated\": \"Ваше портфоліо оновлено\", \"email-invalid\": \"Неприпустимий формат адреси електронної пошти\", \"email-valid\": \"Вашу електронну пошту зміненоЩасливого програмування \", \"bad-challengeId\": \"currentChallengeId не є дійсним ідентифікатором завдання\", \"theme-invalid\": \"Недійсна тема\", \"theme-set\": \"Тема вже встановлена\", \"theme-updated\": \"Вашу тему було оновлено\", \"username-used\": \"Ім’я користувача вже пов’язане з цим обліковим записом\", \"username-taken\": \"Ім’я користувача вже пов’язане з іншим обліковим записом\", \"username-updated\": \"Ми оновили ваше ім’я користувача на {{username}}\", \"privacy-updated\": \"Ваші налаштування конфіденційності оновлено\", \"could-not-logout\": \"Не вдалося вийти з системиБудь ласка, повторіть спробу\",\n    \"email-encoded-wrong\": \"Неправильне форматування повідомлення у посиланні\",\n    \"oops-not-right\": \"Щось пішло не так, будь ласка, створіть запит на нове посилання для входу/реєстрації\",\n    \"expired-link\": \"Схоже, посилання, на яке ви натиснули, застаріло",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 162,
    "total_chunks": 206
  },
  {
    "id": "e00132e7c97c9bc0e8439d4d21fe6ad8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Тема вже встановлена\", \"theme-updated\": \"Вашу тему було оновлено\", \"username-used\": \"Ім’я користувача вже пов’язане з цим обліковим записом\", \"username-taken\": \"Ім’я користувача вже пов’язане з іншим обліковим записом\", \"username-updated\": \"Ми оновили ваше ім’я користувача на {{username}}\", \"privacy-updated\": \"Ваші налаштування конфіденційності оновлено\", \"could-not-logout\": \"Не вдалося вийти з системиБудь ласка, повторіть спробу\", \"email-encoded-wrong\": \"Неправильне форматування повідомлення у посиланні\", \"oops-not-right\": \"Щось пішло не так, будь ласка, створіть запит на нове посилання для входу/реєстрації\", \"expired-link\": \"Схоже, посилання, на яке ви натиснули, застарілоБудь ласка, створіть запит на нове посилання, щоб увійти\",\n    \"signin-success\": \"Ви успішно ввійшли у свій обліковий запис Щасливого програмування \",\n    \"social-auth-gone\": \"Ми відходимо від автентифікації за допомогою соцмереж через конфіденційність Наступного разу ми рекомендуємо використовувати свою адресу електронної пошти: {{email}} для входу в систему",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 163,
    "total_chunks": 206
  },
  {
    "id": "04254874992beb799da2355fc22c4b25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "з системиБудь ласка, повторіть спробу\", \"email-encoded-wrong\": \"Неправильне форматування повідомлення у посиланні\", \"oops-not-right\": \"Щось пішло не так, будь ласка, створіть запит на нове посилання для входу/реєстрації\", \"expired-link\": \"Схоже, посилання, на яке ви натиснули, застарілоБудь ласка, створіть запит на нове посилання, щоб увійти\", \"signin-success\": \"Ви успішно ввійшли у свій обліковий запис Щасливого програмування \", \"social-auth-gone\": \"Ми відходимо від автентифікації за допомогою соцмереж через конфіденційність Наступного разу ми рекомендуємо використовувати свою адресу електронної пошти: {{email}} для входу в систему\",\n    \"name-needed\": \"Нам потрібне ваше ім’я, щоб вказати його на сертифікаті Будь ласка, додайте своє ім’я до профілю і натисніть кнопку «Зберегти» Після цього ми зможемо видати сертифікат \",\n    \"incomplete-steps\": \"Схоже, ви не завершили необхідні кроки Будь ласка, виконайте необхідні проєкти, щоб отримати сертифікацію {{name}}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 164,
    "total_chunks": 206
  },
  {
    "id": "c309d2512cff119fb76ec05b8292654a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "ввійшли у свій обліковий запис Щасливого програмування \", \"social-auth-gone\": \"Ми відходимо від автентифікації за допомогою соцмереж через конфіденційність Наступного разу ми рекомендуємо використовувати свою адресу електронної пошти: {{email}} для входу в систему\", \"name-needed\": \"Нам потрібне ваше ім’я, щоб вказати його на сертифікаті Будь ласка, додайте своє ім’я до профілю і натисніть кнопку «Зберегти» Після цього ми зможемо видати сертифікат \", \"incomplete-steps\": \"Схоже, ви не завершили необхідні кроки Будь ласка, виконайте необхідні проєкти, щоб отримати сертифікацію {{name}}\",\n    \"already-claimed\": \"Схоже, ви вже отримали сертифікацію «{{name}}»\",\n    \"cert-claim-success\": \"@{{username}}, ви успішно отримали сертифікацію «{{name}}» Вітаємо від імені команди freeCodeCamp org \",\n    \"wrong-name\": \"Щось пішло не так під час перевірки «{{name}}» Будь ласка, спробуйте ще раз Якщо ви продовжуєте отримувати цю помилку, ви можете надіслати повідомлення на support@freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 165,
    "total_chunks": 206
  },
  {
    "id": "31fa3cebfbea76f709e89e66116cf979",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "до профілю і натисніть кнопку «Зберегти» Після цього ми зможемо видати сертифікат \", \"incomplete-steps\": \"Схоже, ви не завершили необхідні кроки Будь ласка, виконайте необхідні проєкти, щоб отримати сертифікацію {{name}}\", \"already-claimed\": \"Схоже, ви вже отримали сертифікацію «{{name}}»\", \"cert-claim-success\": \"@{{username}}, ви успішно отримали сертифікацію «{{name}}» Вітаємо від імені команди freeCodeCamp org \", \"wrong-name\": \"Щось пішло не так під час перевірки «{{name}}» Будь ласка, спробуйте ще раз Якщо ви продовжуєте отримувати цю помилку, ви можете надіслати повідомлення на support@freeCodeCamporg, щоб отримати допомогу \",\n    \"error-claiming\": \"Під час отримання «{{certName}}» сталася помилка\",\n    \"username-not-found\": \"Ми не змогли знайти користувача з ім’ям «{{username}}»\",\n    \"add-name\": \"Цей користувач повинен додати своє ім’я до облікового запису, щоб інші могли переглянути його сертифікацію \",\n    \"not-eligible\": \"Наразі цей користувач не має права отримати безоплатну сертифікацію freeCodeCamp org",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 166,
    "total_chunks": 206
  },
  {
    "id": "5cd4acd1570769e8d930bc7dd60e83d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\", \"wrong-name\": \"Щось пішло не так під час перевірки «{{name}}» Будь ласка, спробуйте ще раз Якщо ви продовжуєте отримувати цю помилку, ви можете надіслати повідомлення на support@freeCodeCamporg, щоб отримати допомогу \", \"error-claiming\": \"Під час отримання «{{certName}}» сталася помилка\", \"username-not-found\": \"Ми не змогли знайти користувача з ім’ям «{{username}}»\", \"add-name\": \"Цей користувач повинен додати своє ім’я до облікового запису, щоб інші могли переглянути його сертифікацію \", \"not-eligible\": \"Наразі цей користувач не має права отримати безоплатну сертифікацію freeCodeCamp org\",\n    \"profile-private\": \"{{username}} вирішив(-ла) зробити свій профіль приватним Спершу потрібно надати публічний доступ до профілю, щоб інші мали змогу переглянути сертифікацію \",\n    \"certs-private\": \"{{username}} вирішив(-ла) зробити свої сертифікації приватними Спершу потрібно надати публічний доступ до сертифікацій, щоб інші могли їх переглянути",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 167,
    "total_chunks": 206
  },
  {
    "id": "f8f8a166327bc58e68a7139a74924b41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "не змогли знайти користувача з ім’ям «{{username}}»\", \"add-name\": \"Цей користувач повинен додати своє ім’я до облікового запису, щоб інші могли переглянути його сертифікацію \", \"not-eligible\": \"Наразі цей користувач не має права отримати безоплатну сертифікацію freeCodeCamp org\", \"profile-private\": \"{{username}} вирішив(-ла) зробити свій профіль приватним Спершу потрібно надати публічний доступ до профілю, щоб інші мали змогу переглянути сертифікацію \", \"certs-private\": \"{{username}} вирішив(-ла) зробити свої сертифікації приватними Спершу потрібно надати публічний доступ до сертифікацій, щоб інші могли їх переглянути\",\n    \"not-honest\": \"{{username}} ще не прийняв(-ла) нашу Обітницю академічної доброчесності \",\n    \"user-not-certified\": \"Схоже, користувач {{username}} не має сертифікації «{{cert}}»\",\n    \"invalid-challenge\": \"Не вдалося підтвердити завдання\",\n    \"no-links-provided\": \"Ви не надали нам дійсні посилання для перевірки своєї роботи",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 168,
    "total_chunks": 206
  },
  {
    "id": "f1641cf3285406d5c9559ca2db988df6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "freeCodeCamp org\", \"profile-private\": \"{{username}} вирішив(-ла) зробити свій профіль приватним Спершу потрібно надати публічний доступ до профілю, щоб інші мали змогу переглянути сертифікацію \", \"certs-private\": \"{{username}} вирішив(-ла) зробити свої сертифікації приватними Спершу потрібно надати публічний доступ до сертифікацій, щоб інші могли їх переглянути\", \"not-honest\": \"{{username}} ще не прийняв(-ла) нашу Обітницю академічної доброчесності \", \"user-not-certified\": \"Схоже, користувач {{username}} не має сертифікації «{{cert}}»\", \"invalid-challenge\": \"Не вдалося підтвердити завдання\", \"no-links-provided\": \"Ви не надали нам дійсні посилання для перевірки своєї роботи\",\n    \"no-social\": \"Обліковий запис соціальної мережі не знайдено\",\n    \"invalid-social\": \"Неправильний обліковий запис соціальної мережі\",\n    \"no-account\": \"Немає облікового запису, пов’язаного з {{website}}\",\n    \"unlink-success\": \"Ви успішно від’єдналися від {{website}}\",\n    \"provide-username\": \"Перевірте, чи ви вказали ім’я користувача та звіт\",\n    \"report-sent\": \"Звіт був відправлений команді з {{email}} в копії\",\n    \"report-error\": \"Не вдалось повідомити про цього користувача",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 551,
    "chunk_index": 169,
    "total_chunks": 206
  },
  {
    "id": "e7c7ae96d8070519a62e198b9b266dd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\", \"user-not-certified\": \"Схоже, користувач {{username}} не має сертифікації «{{cert}}»\", \"invalid-challenge\": \"Не вдалося підтвердити завдання\", \"no-links-provided\": \"Ви не надали нам дійсні посилання для перевірки своєї роботи\", \"no-social\": \"Обліковий запис соціальної мережі не знайдено\", \"invalid-social\": \"Неправильний обліковий запис соціальної мережі\", \"no-account\": \"Немає облікового запису, пов’язаного з {{website}}\", \"unlink-success\": \"Ви успішно від’єдналися від {{website}}\", \"provide-username\": \"Перевірте, чи ви вказали ім’я користувача та звіт\", \"report-sent\": \"Звіт був відправлений команді з {{email}} в копії\", \"report-error\": \"Не вдалось повідомити про цього користувача\",\n    \"certificate-missing\": \"Такої сертифікації не існує\",\n    \"create-token-err\": \"Під час створення токена користувача сталася помилка\",\n    \"delete-token-err\": \"Під час видалення токена користувача сталася помилка\",\n    \"token-created\": \"Ви успішно створили новий токен користувача \",\n    \"token-deleted\": \"Ваш токен користувача видалено \",\n    \"start-project-err\": \"Під час запуску проєкту сталася помилка",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 170,
    "total_chunks": 206
  },
  {
    "id": "0d0176ad2a804fbbc0043b691b9373fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "пов’язаного з {{website}}\", \"unlink-success\": \"Ви успішно від’єдналися від {{website}}\", \"provide-username\": \"Перевірте, чи ви вказали ім’я користувача та звіт\", \"report-sent\": \"Звіт був відправлений команді з {{email}} в копії\", \"report-error\": \"Не вдалось повідомити про цього користувача\", \"certificate-missing\": \"Такої сертифікації не існує\", \"create-token-err\": \"Під час створення токена користувача сталася помилка\", \"delete-token-err\": \"Під час видалення токена користувача сталася помилка\", \"token-created\": \"Ви успішно створили новий токен користувача \", \"token-deleted\": \"Ваш токен користувача видалено \", \"start-project-err\": \"Під час запуску проєкту сталася помилкаБудь ласка, спробуйте ще раз \",\n    \"complete-project-first\": \"Спочатку ви повинні завершити проєкт \",\n    \"local-code-save-error\": \"Упс, ваш код не збережено Можливо, локальне сховище вашого браузера заповнене \",\n    \"local-code-saved\": \"Збережено Код було збережено в локальному сховищі вашого браузера \",\n    \"timeline-private\": \"{{username}} вирішив(-ла) зробити свою хронологію приватною",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 171,
    "total_chunks": 206
  },
  {
    "id": "b0de0eadf85c17633af7a0f92ffc4679",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "токена користувача сталася помилка\", \"delete-token-err\": \"Під час видалення токена користувача сталася помилка\", \"token-created\": \"Ви успішно створили новий токен користувача \", \"token-deleted\": \"Ваш токен користувача видалено \", \"start-project-err\": \"Під час запуску проєкту сталася помилкаБудь ласка, спробуйте ще раз \", \"complete-project-first\": \"Спочатку ви повинні завершити проєкт \", \"local-code-save-error\": \"Упс, ваш код не збережено Можливо, локальне сховище вашого браузера заповнене \", \"local-code-saved\": \"Збережено Код було збережено в локальному сховищі вашого браузера \", \"timeline-private\": \"{{username}} вирішив(-ла) зробити свою хронологію приватноюСпершу потрібно надати публічний доступ до хронології, щоб інші мали змогу переглянути сертифікацію \",\n    \"code-saved\": \"Ваш код збережено в базі даних Він буде тут, коли ви повернетесь \",\n    \"code-save-error\": \"Під час спроби зберегти ваш код сталася помилка \",\n    \"code-save-less\": \"Зачекайте Ваш код не було збережено Спробуйте ще раз через кілька секунд \",\n    \"challenge-save-too-big\": \"На жаль, ви не можете зберегти свій код",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 172,
    "total_chunks": 206
  },
  {
    "id": "d9bcf7e0c94ee244871f7d21c208f61e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "Код було збережено в локальному сховищі вашого браузера \", \"timeline-private\": \"{{username}} вирішив(-ла) зробити свою хронологію приватноюСпершу потрібно надати публічний доступ до хронології, щоб інші мали змогу переглянути сертифікацію \", \"code-saved\": \"Ваш код збережено в базі даних Він буде тут, коли ви повернетесь \", \"code-save-error\": \"Під час спроби зберегти ваш код сталася помилка \", \"code-save-less\": \"Зачекайте Ваш код не було збережено Спробуйте ще раз через кілька секунд \", \"challenge-save-too-big\": \"На жаль, ви не можете зберегти свій кодСкільки байтів займає ваш код: {{user-size}} Максимальна кількість байтів: {{max-size}} Будь ласка, зменште свій код і повторіть спробу або попросіть допомоги на https://forum freecodecamp org\",\n    \"challenge-submit-too-big\": \"На жаль, ви не можете надіслати свій код Скільки байтів займає ваш код: {{user-size}} Максимальна кількість байтів: {{max-size}} Будь ласка, зменште свій код і повторіть спробу або попросіть допомоги на https://forum freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 173,
    "total_chunks": 206
  },
  {
    "id": "3d88f6829ebe249b0f7517e0d8a81f49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "не було збережено Спробуйте ще раз через кілька секунд \", \"challenge-save-too-big\": \"На жаль, ви не можете зберегти свій кодСкільки байтів займає ваш код: {{user-size}} Максимальна кількість байтів: {{max-size}} Будь ласка, зменште свій код і повторіть спробу або попросіть допомоги на https://forum freecodecamp org\", \"challenge-submit-too-big\": \"На жаль, ви не можете надіслати свій код Скільки байтів займає ваш код: {{user-size}} Максимальна кількість байтів: {{max-size}} Будь ласка, зменште свій код і повторіть спробу або попросіть допомоги на https://forum freecodecamporg\",\n    \"invalid-update-flag\": \"Ви намагаєтеся отримати доступ до заборонених ресурсів Зверніться по допомогу на https://forum freecodecamp org, якщо це є дійсним запитом \",\n    \"generate-exam-error\": \"Під час спроби створити екзамен виникла помилка \",\n    \"cert-not-found\": \"Сертифікація «{{certSlug}}» не існує \",\n    \"reset-editor-layout\": \"Редактор скинуто \",\n    \"user-token-generated\": \"Для вас створено токен користувача \",\n    \"user-token-generate-error\": \"Не вдалось згенерувати токен користувача",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 174,
    "total_chunks": 206
  },
  {
    "id": "96fec3bdf52ada565c66aae675e286d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "байтів займає ваш код: {{user-size}} Максимальна кількість байтів: {{max-size}} Будь ласка, зменште свій код і повторіть спробу або попросіть допомоги на https://forum freecodecamporg\", \"invalid-update-flag\": \"Ви намагаєтеся отримати доступ до заборонених ресурсів Зверніться по допомогу на https://forum freecodecamp org, якщо це є дійсним запитом \", \"generate-exam-error\": \"Під час спроби створити екзамен виникла помилка \", \"cert-not-found\": \"Сертифікація «{{certSlug}}» не існує \", \"reset-editor-layout\": \"Редактор скинуто \", \"user-token-generated\": \"Для вас створено токен користувача \", \"user-token-generate-error\": \"Не вдалось згенерувати токен користувача\",\n    \"user-token-copied\": \"Токен користувача скопійовано до буфера обміну \",\n    \"user-token-copy-error\": \"Не вдалось скопіювати токен користувача \",\n    \"course-url-copied\": \"Посилання на курс скопійовано до буфера обміну \",\n    \"course-url-copy-error\": \"Під час спроби скопіювати посилання виникла помилка \",\n    \"ms\": {\n      \"transcript\": {\n        \"link-err-1\": \"Будь ласка, вкажіть посилання на стенограму Microsoft в запиті",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 175,
    "total_chunks": 206
  },
  {
    "id": "b098acad0148cdeeaa89cabc1edcf7b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "спроби створити екзамен виникла помилка \", \"cert-not-found\": \"Сертифікація «{{certSlug}}» не існує \", \"reset-editor-layout\": \"Редактор скинуто \", \"user-token-generated\": \"Для вас створено токен користувача \", \"user-token-generate-error\": \"Не вдалось згенерувати токен користувача\", \"user-token-copied\": \"Токен користувача скопійовано до буфера обміну \", \"user-token-copy-error\": \"Не вдалось скопіювати токен користувача \", \"course-url-copied\": \"Посилання на курс скопійовано до буфера обміну \", \"course-url-copy-error\": \"Під час спроби скопіювати посилання виникла помилка \", \"ms\": { \"transcript\": { \"link-err-1\": \"Будь ласка, вкажіть посилання на стенограму Microsoft в запиті\",\n        \"link-err-2\": \"Під час спроби отримати стенограму від Microsoft виникла помилка \",\n        \"link-err-3\": \"У стенограмі Microsoft не знайдено ім’я користувача \",\n        \"link-err-4\": \"Це ім’я користувача Microsoft вже використовується іншим обліковим записом freeCodeCamp \",\n        \"link-err-5\": \"Під час спроби зберегти обліковий запис Microsoft виникла помилка",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 176,
    "total_chunks": 206
  },
  {
    "id": "a0137a179c994311e9f9ddd04fe963c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "користувача \", \"course-url-copied\": \"Посилання на курс скопійовано до буфера обміну \", \"course-url-copy-error\": \"Під час спроби скопіювати посилання виникла помилка \", \"ms\": { \"transcript\": { \"link-err-1\": \"Будь ласка, вкажіть посилання на стенограму Microsoft в запиті\", \"link-err-2\": \"Під час спроби отримати стенограму від Microsoft виникла помилка \", \"link-err-3\": \"У стенограмі Microsoft не знайдено ім’я користувача \", \"link-err-4\": \"Це ім’я користувача Microsoft вже використовується іншим обліковим записом freeCodeCamp \", \"link-err-5\": \"Під час спроби зберегти обліковий запис Microsoft виникла помилка\",\n        \"link-err-6\": \"При спробі прив’язати ім’я користувача Microsoft до облікового запису freeCodeCamp виникла помилка \",\n        \"linked\": \"Ім’я користувача Microsoft успішно прив’язано до облікового запису freeCodeCamp \",\n        \"unlinked\": \"Посилання на ім’я користувача Microsoft видалено \",\n        \"unlink-err\": \"При спробі видалити посилання на ім’я користувача Microsoft виникла помилка",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 177,
    "total_chunks": 206
  },
  {
    "id": "2904305c7b50908583ffd1e293c2e39a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\", \"link-err-3\": \"У стенограмі Microsoft не знайдено ім’я користувача \", \"link-err-4\": \"Це ім’я користувача Microsoft вже використовується іншим обліковим записом freeCodeCamp \", \"link-err-5\": \"Під час спроби зберегти обліковий запис Microsoft виникла помилка\", \"link-err-6\": \"При спробі прив’язати ім’я користувача Microsoft до облікового запису freeCodeCamp виникла помилка \", \"linked\": \"Ім’я користувача Microsoft успішно прив’язано до облікового запису freeCodeCamp \", \"unlinked\": \"Посилання на ім’я користувача Microsoft видалено \", \"unlink-err\": \"При спробі видалити посилання на ім’я користувача Microsoft виникла помилка\"\n      },\n      \"profile\": {\n        \"err\": \"Не знайдено ID користувача Microsoft {{msUsername}}\"\n      },\n      \"trophy\": {\n        \"err-1\": \"Не вдалось знайти ім’я користувача Microsoft, пов’язане з обліковим записом freeCodeCamp \",\n        \"err-2\": \"Ви намагаєтесь відправити завдання, яке не є трофейним \",\n        \"err-3\": \"Нам не вдалось отримати ваш обліковий запис Microsoft за Microsoft ID \",\n        \"err-4\": \"Схоже, користувач {{msUsername}} не отримав цей трофей \",\n        \"err-5\": \"Не вдалось підтвердити трофей",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 178,
    "total_chunks": 206
  },
  {
    "id": "421f764759a8578a319dc4d11828f5f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "видалено \", \"unlink-err\": \"При спробі видалити посилання на ім’я користувача Microsoft виникла помилка\" }, \"profile\": { \"err\": \"Не знайдено ID користувача Microsoft {{msUsername}}\" }, \"trophy\": { \"err-1\": \"Не вдалось знайти ім’я користувача Microsoft, пов’язане з обліковим записом freeCodeCamp \", \"err-2\": \"Ви намагаєтесь відправити завдання, яке не є трофейним \", \"err-3\": \"Нам не вдалось отримати ваш обліковий запис Microsoft за Microsoft ID \", \"err-4\": \"Схоже, користувач {{msUsername}} не отримав цей трофей \", \"err-5\": \"Не вдалось підтвердити трофейБудь ласка, перевірте і повторіть спробу \",\n        \"err-6\": \"Схоже, ваш обліковий запис Microsoft приватний Зробіть його загальнодоступним та спробуйте ще раз \",\n        \"verified\": \"Ваш трофей на навчальній платформі Microsoft підтверджено \"\n      }\n    },\n    \"survey\": {\n      \"err-1\": \"Надіслане опитування не відповідає правильному формату \",\n      \"err-2\": \"Схоже, ви вже пройшли це опитування \",\n      \"err-3\": \"Під час спроби зберегти відповіді виникла помилка \",\n      \"success\": \"Дякуємо Ваші відповіді надіслано",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 179,
    "total_chunks": 206
  },
  {
    "id": "8879733bac60d86d1c53777861fbed7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "користувач {{msUsername}} не отримав цей трофей \", \"err-5\": \"Не вдалось підтвердити трофейБудь ласка, перевірте і повторіть спробу \", \"err-6\": \"Схоже, ваш обліковий запис Microsoft приватний Зробіть його загальнодоступним та спробуйте ще раз \", \"verified\": \"Ваш трофей на навчальній платформі Microsoft підтверджено \" } }, \"survey\": { \"err-1\": \"Надіслане опитування не відповідає правильному формату \", \"err-2\": \"Схоже, ви вже пройшли це опитування \", \"err-3\": \"Під час спроби зберегти відповіді виникла помилка \", \"success\": \"Дякуємо Ваші відповіді надіслано\"\n    },\n    \"classroom-mode-updated\": \"Ваші налаштування режиму класу оновлено\"\n  },\n  \"validation\": {\n    \"max-characters\": \"Максимальний розмір — 288 символів, у вас залишилося {{charsLeft}}\",\n    \"same-email\": \"Ця адреса електронної пошти збігається з вашою поточною адресою\",\n    \"invalid-email\": \"Ми не змогли перевірити вашу адресу електронної пошти Будь ласка, переконайтеся, що вона правильна",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 180,
    "total_chunks": 206
  },
  {
    "id": "7ec8bebf84e670adb9cc027488639406",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "{ \"err-1\": \"Надіслане опитування не відповідає правильному формату \", \"err-2\": \"Схоже, ви вже пройшли це опитування \", \"err-3\": \"Під час спроби зберегти відповіді виникла помилка \", \"success\": \"Дякуємо Ваші відповіді надіслано\" }, \"classroom-mode-updated\": \"Ваші налаштування режиму класу оновлено\" }, \"validation\": { \"max-characters\": \"Максимальний розмір — 288 символів, у вас залишилося {{charsLeft}}\", \"same-email\": \"Ця адреса електронної пошти збігається з вашою поточною адресою\", \"invalid-email\": \"Ми не змогли перевірити вашу адресу електронної пошти Будь ласка, переконайтеся, що вона правильна\",\n    \"email-mismatch\": \"Обидві нові адреси електронної пошти повинні збігатися\",\n    \"title-required\": \"Необхідно вказати заголовок\",\n    \"title-short\": \"Закороткий заголовок\",\n    \"title-long\": \"Задовгий заголовок\",\n    \"invalid-url\": \"Ми не змогли перевірити вашу URL-адресу Будь ласка, переконайтеся, що вона правильна",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 181,
    "total_chunks": 206
  },
  {
    "id": "42d09dc576cd064a0733fc4c6aa2a23d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "}, \"classroom-mode-updated\": \"Ваші налаштування режиму класу оновлено\" }, \"validation\": { \"max-characters\": \"Максимальний розмір — 288 символів, у вас залишилося {{charsLeft}}\", \"same-email\": \"Ця адреса електронної пошти збігається з вашою поточною адресою\", \"invalid-email\": \"Ми не змогли перевірити вашу адресу електронної пошти Будь ласка, переконайтеся, що вона правильна\", \"email-mismatch\": \"Обидві нові адреси електронної пошти повинні збігатися\", \"title-required\": \"Необхідно вказати заголовок\", \"title-short\": \"Закороткий заголовок\", \"title-long\": \"Задовгий заголовок\", \"invalid-url\": \"Ми не змогли перевірити вашу URL-адресу Будь ласка, переконайтеся, що вона правильна\",\n    \"invalid-protocol\": \"URL-адреса має починатися з http або https\",\n    \"url-not-image\": \"URL-адреса повинна посилатись на файл зображення безпосередньо\",\n    \"use-valid-url\": \"Будь ласка, введіть правильну URL-адресу\",\n    \"editor-url\": \"Не забудьте відправити URL-адресу Live App \",\n    \"http-url\": \"Не можна використовувати ненадійну (http) URL-адресу \",\n    \"own-work-url\": \"Не забудьте відправити власну роботу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 182,
    "total_chunks": 206
  },
  {
    "id": "afd8568fec33acfb3e12f50ef0582dca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "правильна\", \"email-mismatch\": \"Обидві нові адреси електронної пошти повинні збігатися\", \"title-required\": \"Необхідно вказати заголовок\", \"title-short\": \"Закороткий заголовок\", \"title-long\": \"Задовгий заголовок\", \"invalid-url\": \"Ми не змогли перевірити вашу URL-адресу Будь ласка, переконайтеся, що вона правильна\", \"invalid-protocol\": \"URL-адреса має починатися з http або https\", \"url-not-image\": \"URL-адреса повинна посилатись на файл зображення безпосередньо\", \"use-valid-url\": \"Будь ласка, введіть правильну URL-адресу\", \"editor-url\": \"Не забудьте відправити URL-адресу Live App \", \"http-url\": \"Не можна використовувати ненадійну (http) URL-адресу \", \"own-work-url\": \"Не забудьте відправити власну роботу\",\n    \"publicly-visible-url\": \"Не забудьте відправити загальнодоступну URL-адресу застосунку \",\n    \"ms-learn-link\": \"Використайте дійсне трофейне посилання Microsoft Learn \",\n    \"path-url\": \"Можливо, ви хочете надіслати кореневий шлях, тобто https://example com, а не https://example com/path\",\n    \"source-code-link-required\": \"Не забудьте надіслати посилання на свій вихідний код",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 183,
    "total_chunks": 206
  },
  {
    "id": "678fbe3eaad8e90bc44c8a90428f7cd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "https\", \"url-not-image\": \"URL-адреса повинна посилатись на файл зображення безпосередньо\", \"use-valid-url\": \"Будь ласка, введіть правильну URL-адресу\", \"editor-url\": \"Не забудьте відправити URL-адресу Live App \", \"http-url\": \"Не можна використовувати ненадійну (http) URL-адресу \", \"own-work-url\": \"Не забудьте відправити власну роботу\", \"publicly-visible-url\": \"Не забудьте відправити загальнодоступну URL-адресу застосунку \", \"ms-learn-link\": \"Використайте дійсне трофейне посилання Microsoft Learn \", \"path-url\": \"Можливо, ви хочете надіслати кореневий шлях, тобто https://example com, а не https://example com/path\", \"source-code-link-required\": \"Не забудьте надіслати посилання на свій вихідний код\",\n    \"source-code-link-public\": \"Посилання на початковий код має бути загальнодоступним \"\n  },\n  \"certification\": {\n    \"executive\": \"Виконавчий директор, freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 184,
    "total_chunks": 206
  },
  {
    "id": "f327e34be3fa7c63e4db1da8f503de57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Не забудьте відправити URL-адресу Live App \", \"http-url\": \"Не можна використовувати ненадійну (http) URL-адресу \", \"own-work-url\": \"Не забудьте відправити власну роботу\", \"publicly-visible-url\": \"Не забудьте відправити загальнодоступну URL-адресу застосунку \", \"ms-learn-link\": \"Використайте дійсне трофейне посилання Microsoft Learn \", \"path-url\": \"Можливо, ви хочете надіслати кореневий шлях, тобто https://example com, а не https://example com/path\", \"source-code-link-required\": \"Не забудьте надіслати посилання на свій вихідний код\", \"source-code-link-public\": \"Посилання на початковий код має бути загальнодоступним \" }, \"certification\": { \"executive\": \"Виконавчий директор, freeCodeCamporg\",\n    \"ms-president\": \"Президент відділу розробки Microsoft\",\n    \"verify\": \"Перевірити сертифікацію:\",\n    \"issued\": \"Виданий\",\n    \"fulltext\": \"<0>Цей сертифікат засвідчує, що</0> <1>{{user}}</1> <2>успішно закінчив(-ла) сертифікацію</2> <3>«{{title}}»</3> <4>{{time}},</4> <5>виконавши приблизно {{completionTime}} год навчання</5>\",\n    \"fulltextNoHours\": \"<0>Цей сертифікат підтверджує, що</0> <1>{{user}}</1> <2>успішно завершив(-ла) сертифікацію</2> <3>{{title}}</3> <4>{{time}}</4>\",\n    \"quincy-larson-signature\": \"Підпис Квінсі Ларсона\",\n    \"julia-liuson-signature\": \"Підпис Джулії Люсон\",\n    \"project\": {\n      \"heading-legacy-full-stack\": \"В рамках сертифікації програмного забезпечення повного циклу {{user}} отримав(-ла) такі сертифікації:\",\n      \"heading-exam\": \"{{user}} склав(-ла) екзамен в рамках цієї сертифікації: \",\n      \"heading\": \"У рамках цієї сертифікації {{user}} створив(-ла) такі проєкти і успішно пройшов(-ла) усі автоматизовані тестування:\",\n      \"solution\": \"Розв’язок\",\n      \"no-solution\": \"помилка відтворення розв’язку, напишіть на support@freeCodeCamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 826,
    "chunk_index": 185,
    "total_chunks": 206
  },
  {
    "id": "ecad7f0a8020ed2f73a4c55187a73c8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "<2>успішно закінчив(-ла) сертифікацію</2> <3>«{{title}}»</3> <4>{{time}},</4> <5>виконавши приблизно {{completionTime}} год навчання</5>\", \"fulltextNoHours\": \"<0>Цей сертифікат підтверджує, що</0> <1>{{user}}</1> <2>успішно завершив(-ла) сертифікацію</2> <3>{{title}}</3> <4>{{time}}</4>\", \"quincy-larson-signature\": \"Підпис Квінсі Ларсона\", \"julia-liuson-signature\": \"Підпис Джулії Люсон\", \"project\": { \"heading-legacy-full-stack\": \"В рамках сертифікації програмного забезпечення повного циклу {{user}} отримав(-ла) такі сертифікації:\", \"heading-exam\": \"{{user}} склав(-ла) екзамен в рамках цієї сертифікації: \", \"heading\": \"У рамках цієї сертифікації {{user}} створив(-ла) такі проєкти і успішно пройшов(-ла) усі автоматизовані тестування:\", \"solution\": \"Розв’язок\", \"no-solution\": \"помилка відтворення розв’язку, напишіть на support@freeCodeCamporg, щоб отримати допомогу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 186,
    "total_chunks": 206
  },
  {
    "id": "907f6c5b9b1521e226502466e6ee4b15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "<3>«{{title}}»</3> <4>{{time}},</4> <5>виконавши приблизно {{completionTime}} год навчання</5>\", \"fulltextNoHours\": \"<0>Цей сертифікат підтверджує, що</0> <1>{{user}}</1> <2>успішно завершив(-ла) сертифікацію</2> <3>{{title}}</3> <4>{{time}}</4>\", \"quincy-larson-signature\": \"Підпис Квінсі Ларсона\", \"julia-liuson-signature\": \"Підпис Джулії Люсон\", \"project\": { \"heading-legacy-full-stack\": \"В рамках сертифікації програмного забезпечення повного циклу {{user}} отримав(-ла) такі сертифікації:\", \"heading-exam\": \"{{user}} склав(-ла) екзамен в рамках цієї сертифікації: \", \"heading\": \"У рамках цієї сертифікації {{user}} створив(-ла) такі проєкти і успішно пройшов(-ла) усі автоматизовані тестування:\", \"solution\": \"Розв’язок\", \"no-solution\": \"помилка відтворення розв’язку, напишіть на support@freeCodeCamporg, щоб отримати допомогу\",\n      \"source\": \"Джерело\",\n      \"footnote\": \"Якщо ви підозрюєте, що будь-який з цих проєктів порушує <2>політику академічної доброчесності</2>, будь ласка, <5>повідомте про це нашій команді</5>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 527,
    "chunk_index": 187,
    "total_chunks": 206
  },
  {
    "id": "eaf6f900a8e81557b6b87c9580f086cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"julia-liuson-signature\": \"Підпис Джулії Люсон\", \"project\": { \"heading-legacy-full-stack\": \"В рамках сертифікації програмного забезпечення повного циклу {{user}} отримав(-ла) такі сертифікації:\", \"heading-exam\": \"{{user}} склав(-ла) екзамен в рамках цієї сертифікації: \", \"heading\": \"У рамках цієї сертифікації {{user}} створив(-ла) такі проєкти і успішно пройшов(-ла) усі автоматизовані тестування:\", \"solution\": \"Розв’язок\", \"no-solution\": \"помилка відтворення розв’язку, напишіть на support@freeCodeCamporg, щоб отримати допомогу\", \"source\": \"Джерело\", \"footnote\": \"Якщо ви підозрюєте, що будь-який з цих проєктів порушує <2>політику академічної доброчесності</2>, будь ласка, <5>повідомте про це нашій команді</5>\",\n      \"title\": {\n        \"Build a Personal Portfolio Webpage\": \"Створіть вебсторінку персонального портфоліо\",\n        \"Build a Random Quote Machine\": \"Створіть генератор випадкових цитат\",\n        \"Build a 25 + 5 Clock\": \"Створіть таймер 25 + 5\",\n        \"Build a JavaScript Calculator\": \"Створіть калькулятор JavaScript\",\n        \"Show the Local Weather\": \"Покажіть місцеву погоду\",\n        \"Use the TwitchTV JSON API\": \"Використайте TwitchTV JSON API\",\n        \"Stylize Stories on Camper News\": \"Стилізуйте стрічку новин на Camper News\",\n        \"Build a Wikipedia Viewer\": \"Створіть переглядача вікіпедії\",\n        \"Build a Tic Tac Toe Game\": \"Створіть гру «Хрестики-нулики»\",\n        \"Build a Simon Game\": \"Створіть гру «Simon»\",\n        \"Timestamp Microservice\": \"Мікросервіс позначок часу\",\n        \"Request Header Parser Microservice\": \"Мікросервіс парсингу заголовків запиту\",\n        \"URL Shortener Microservice\": \"Мікросервіс скорочування URL-адрес\",\n        \"Image Search Abstraction Layer\": \"Шар абстракції для пошуку зображень\",\n        \"File Metadata Microservice\": \"Мікросервіс файлу метаданих\",\n        \"Build a Voting App\": \"Створіть застосунок для голосування\",\n        \"Build a Nightlife Coordination App\": \"Створіть застосунок для координації нічного життя\",\n        \"Chart the Stock Market\": \"Діаграма фондової біржі\",\n        \"Manage a Book Trading Club\": \"Керуйте клубом книготоргівлі\",\n        \"Build a Pinterest Clone\": \"Створіть копію Pinterest\",\n        \"Build a Markdown Previewer\": \"Створіть попередній перегляд Markdown\",\n        \"Build a Camper Leaderboard\": \"Створіть таблицю лідерів-кемперів\",\n        \"Build a Recipe Box\": \"Створіть збірник рецептів\",\n        \"Build the Game of Life\": \"Створіть гру «Життя»\",\n        \"Build a Roguelike Dungeon Crawler Game\": \"Створіть гру «Roguelike Dungeon Crawler»\",\n        \"Visualize Data with a Bar Chart\": \"Візуалізуйте дані з допомогою стовпчикової діаграми\",\n        \"Visualize Data with a Scatterplot Graph\": \"Візуалізуйте дані з допомогою точкової діаграми\",\n        \"Visualize Data with a Heat Map\": \"Візуалізуйте дані з допомогою теплокарти\",\n        \"Show National Contiguity with a Force Directed Graph\": \"Покажіть національну спільність за допомогою орієнтованого графу\",\n        \"Map Data Across the Globe\": \"Картографічні дані з усього світу\",\n        \"Metric-Imperial Converter\": \"Конвертер метрично-британських величин\",\n        \"Issue Tracker\": \"Система відстеження помилок\",\n        \"Personal Library\": \"Персональна бібліотека\",\n        \"Stock Price Checker\": \"Перевірка цін на акції\",\n        \"Anonymous Message Board\": \"Анонімна панель повідомлень\",\n        \"Build a Tribute Page\": \"Створіть пам’ятну сторінку\",\n        \"Build a Survey Form\": \"Створіть форму для опитування\",\n        \"Build a Product Landing Page\": \"Створіть посадкову сторінку продукту\",\n        \"Build a Technical Documentation Page\": \"Створіть сторінку технічної документації\",\n        \"Palindrome Checker\": \"Перевірка паліндромів\",\n        \"Roman Numeral Converter\": \"Конвертер римських цифр\",\n        \"Caesars Cipher\": \"Шифр Цезаря\",\n        \"Telephone Number Validator\": \"Валідатор мобільного номера\",\n        \"Cash Register\": \"Касовий апарат\",\n        \"Build a Drum Machine\": \"Створіть драм-машину\",\n        \"Visualize Data with a Choropleth Map\": \"Візуалізуйте дані з допомогою хороплета\",\n        \"Visualize Data with a Treemap Diagram\": \"Візуалізуйте дані з допомогою деревової діаграми\",\n        \"Exercise Tracker\": \"Трекер вправ\",\n        \"Sudoku Solver\": \"Програма для розв’язування судоку\",\n        \"American British Translator\": \"Перекладач з американської на британську\",\n        \"Arithmetic Formatter\": \"Арифметичне форматування\",\n        \"Time Calculator\": \"Калькулятор часу\",\n        \"Budget App\": \"Застосунок для ведення бюджету\",\n        \"Polygon Area Calculator\": \"Калькулятор площі багатокутника\",\n        \"Probability Calculator\": \"Калькулятор ймовірностей\",\n        \"Mean-Variance-Standard Deviation Calculator\": \"Калькулятор середньоквадратичного відхилення\",\n        \"Demographic Data Analyzer\": \"Аналізатор демографічних даних\",\n        \"Medical Data Visualizer\": \"Візуалізатор медичних даних\",\n        \"Page View Time Series Visualizer\": \"Візуалізатор часового ряду перегляду сторінки\",\n        \"Sea Level Predictor\": \"Прогнозування змін рівня моря\",\n        \"Port Scanner\": \"Сканер портів\",\n        \"SHA-1 Password Cracker\": \"Програма для злому паролів SHA-1\",\n        \"Secure Real Time Multiplayer Game\": \"Безпечна багатокористувацька гра в режимі реального часу\",\n        \"Rock Paper Scissors\": \"Камінь-ножиці-папір\",\n        \"Cat and Dog Image Classifier\": \"Класифікатор зображень котів і собак\",\n        \"Book Recommendation Engine using KNN\": \"Інструмент рекомендацій книг із використанням KNN\",\n        \"Linear Regression Health Costs Calculator\": \"Калькулятор лінійної регресії витрат на здоров’я\",\n        \"Neural Network SMS Text Classifier\": \"Нейронна мережа для класифікації текстових SMS\",\n        \"Celestial Bodies Database\": \"База даних «Небесні тіла»\",\n        \"World Cup Database\": \"База даних «Чемпіонат світу»\",\n        \"Salon Appointment Scheduler\": \"Планувальник «Записи в салоні»\",\n        \"Periodic Table Database\": \"База даних «Періодична таблиця»\",\n        \"Number Guessing Game\": \"Гра «Вгадай число»\",\n        \"Build a freeCodeCamp Forum Homepage\": \"Створіть головну сторінку для форуму freeCodeCamp\"\n      }\n    },\n    \"title\": {\n      \"responsive-web-design\": \"Адаптивний вебдизайн\",\n      \"responsive-web-design-cert\": \"Сертифікація «Адаптивний вебдизайн»\",\n      \"javascript-algorithms-and-data-structures\": \"Алгоритми та структури даних JavaScript (стара версія)\",\n      \"javascript-algorithms-and-data-structures-cert\": \"Сертифікація «Алгоритми та структури даних JavaScript» (стара версія)\",\n      \"javascript-algorithms-and-data-structures-v8\": \"Алгоритми та структури даних JavaScript\",\n      \"javascript-algorithms-and-data-structures-v8-cert\": \"Сертифікація «Алгоритми та структури даних JavaScript»\",\n      \"front-end-development-libraries\": \"Бібліотеки Front End\",\n      \"front-end-development-libraries-cert\": \"Сертифікація «Бібліотеки Front End»\",\n      \"data-visualization\": \"Візуалізація даних\",\n      \"data-visualization-cert\": \"Сертифікація «Візуалізація даних»\",\n      \"relational-database-v8\": \"Реляційна база даних\",\n      \"relational-database-v8-cert\": \"Сертифікація «Реляційна база даних»\",\n      \"back-end-development-and-apis\": \"Розробка Back End та API\",\n      \"back-end-development-and-apis-cert\": \"Сертифікація «Розробка Back End та API»\",\n      \"quality-assurance-v7\": \"Забезпечення якості\",\n      \"quality-assurance-v7-cert\": \"Сертифікація «Забезпечення якості»\",\n      \"scientific-computing-with-python-v7\": \"Наукові обчислення з Python\",\n      \"scientific-computing-with-python-v7-cert\": \"Сертифікація «Наукові обчислення з Python»\",\n      \"data-analysis-with-python-v7\": \"Аналіз даних з Python\",\n      \"data-analysis-with-python-v7-cert\": \"Сертифікація «Аналіз даних з Python»\",\n      \"information-security-v7\": \"Інформаційна безпека\",\n      \"information-security-v7-cert\": \"Сертифікація «Інформаційна безпека»\",\n      \"machine-learning-with-python-v7\": \"Машинне навчання з Python\",\n      \"machine-learning-with-python-v7-cert\": \"Сертифікація «Машинне навчання з Python»\",\n      \"college-algebra-with-python-v8\": \"Алгебра з Python\",\n      \"college-algebra-with-python-v8-cert\": \"Сертифікація «Алгебра з Python»\",\n      \"foundational-c-sharp-with-microsoft\": \"Основи C# з Microsoft\",\n      \"foundational-c-sharp-with-microsoft-cert\": \"Сертифікація «Основи C# з Microsoft»\",\n      \"a2-english-for-developers\": \"Англійська мова A2 для розробників\",\n      \"a2-english-for-developers-cert\": \"Сертифікація «Англійська мова A2 для розробників»\",\n      \"b1-english-for-developers\": \"Англійська мова B1 для розробників\",\n      \"b1-english-for-developers-cert\": \"Сертифікація «Англійська мова B1 для розробників»\",\n      \"full-stack-developer-v9\": \"Full Stack розробник\",\n      \"full-stack-developer-v9-cert\": \"Сертифікація «Full Stack розробник»\",\n      \"a2-professional-spanish\": \"Іспанська мова A2 для роботи\",\n      \"a2-professional-spanish-cert\": \"Сертифікація «Іспанська мова A2 для роботи»\",\n      \"a2-professional-chinese\": \"Китайська мова A2 для роботи\",\n      \"a2-professional-chinese-cert\": \"Сертифікація «Китайська мова A2 для роботи»\",\n      \"a1-professional-chinese\": \"Китайська мова A1 для роботи\",\n      \"a1-professional-chinese-cert\": \"Сертифікація «Китайська мова A1 для роботи»\",\n      \"legacy-front-end\": \"Front End (стара версія)\",\n      \"legacy-front-end-cert\": \"Сертифікація «Front End» (стара версія)\",\n      \"legacy-back-end\": \"Back End (стара версія)\",\n      \"legacy-back-end-cert\": \"Сертифікація «Back End» (стара версія)\",\n      \"legacy-data-visualization\": \"Візуалізація даних (стара версія)\",\n      \"legacy-data-visualization-cert\": \"Сертифікація «Візуалізація даних» (стара версія)\",\n      \"information-security-and-quality-assurance\": \"Інформаційна безпека та забезпечення якості (стара версія)\",\n      \"information-security-and-quality-assurance-cert\": \"Сертифікація «Інформаційна безпека та забезпечення якості» (стара версія)\",\n      \"full-stack\": \"Full Stack (стара версія)\",\n      \"full-stack-cert\": \"Сертифікація «Full Stack» (стара версія)\"\n    }\n  },\n  \"certification-card\": {\n    \"title\": \"Отримайте свою сертифікацію\",\n    \"intro\": \"Завершіть наступні кроки, щоб мати змогу отримати та переглянути «{{i18nCertText}}»\",\n    \"complete-project\": \"Завершені проєкти «{{i18nCertText}}»\",\n    \"accept-honesty\": \"Прийняти нашу Політику академічної доброчесності\",\n    \"set-name\": \"Введіть своє ім’я та зробіть його загальнодоступним\",\n    \"set-certs-public\": \"Відкрити загальний доступ до сертифікацій\",\n    \"set-profile-public\": \"Відкрити загальний доступ до профілю\",\n    \"set-claim\": \"Отримайте та перегляньте свої сертифікації\"\n  },\n  \"forum-help\": {\n    \"browser-info\": \"Інформація про ваш браузер:\",\n    \"user-agent\": \"Агент користувача: <code>{{userAgent}}</code>\",\n    \"challenge\": \"Інформація про завдання:\",\n    \"whats-happening\": \"Розкажіть нам, що сталося:\",\n    \"describe\": \"Детально опишіть свою проблему",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 4336,
    "chunk_index": 188,
    "total_chunks": 206
  },
  {
    "id": "e81adc13cd9a1addd2974ed83e32c9c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"Отримайте свою сертифікацію\", \"intro\": \"Завершіть наступні кроки, щоб мати змогу отримати та переглянути «{{i18nCertText}}»\", \"complete-project\": \"Завершені проєкти «{{i18nCertText}}»\", \"accept-honesty\": \"Прийняти нашу Політику академічної доброчесності\", \"set-name\": \"Введіть своє ім’я та зробіть його загальнодоступним\", \"set-certs-public\": \"Відкрити загальний доступ до сертифікацій\", \"set-profile-public\": \"Відкрити загальний доступ до профілю\", \"set-claim\": \"Отримайте та перегляньте свої сертифікації\" }, \"forum-help\": { \"browser-info\": \"Інформація про ваш браузер:\", \"user-agent\": \"Агент користувача: <code>{{userAgent}}</code>\", \"challenge\": \"Інформація про завдання:\", \"whats-happening\": \"Розкажіть нам, що сталося:\", \"describe\": \"Детально опишіть свою проблемуНаприклад: \\nВ моєму елементі h1 немає початкового тегу Мій код потрібно перевірити \\nАБО \\nМій цикл for виконується нескінченно Як запобігти цьому",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 189,
    "total_chunks": 206
  },
  {
    "id": "302781008da59e9f1568821c4078b655",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "нашу Політику академічної доброчесності\", \"set-name\": \"Введіть своє ім’я та зробіть його загальнодоступним\", \"set-certs-public\": \"Відкрити загальний доступ до сертифікацій\", \"set-profile-public\": \"Відкрити загальний доступ до профілю\", \"set-claim\": \"Отримайте та перегляньте свої сертифікації\" }, \"forum-help\": { \"browser-info\": \"Інформація про ваш браузер:\", \"user-agent\": \"Агент користувача: <code>{{userAgent}}</code>\", \"challenge\": \"Інформація про завдання:\", \"whats-happening\": \"Розкажіть нам, що сталося:\", \"describe\": \"Детально опишіть свою проблемуНаприклад: \\nВ моєму елементі h1 немає початкового тегу Мій код потрібно перевірити \\nАБО \\nМій цикл for виконується нескінченно Як запобігти цьому\",\n    \"camper-project\": \"Посилання на ваші проєкти\",\n    \"camper-code\": \"Ваш код\",\n    \"warning\": \"УВАГА\",\n    \"too-long-one\": \"Початковий код завдання та/або ваш розв’язок перевищили максимальну довжину, яку ми можемо перенести з завдання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 190,
    "total_chunks": 206
  },
  {
    "id": "5051f8d66b5fda033dc55f7c9a0e71da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "та перегляньте свої сертифікації\" }, \"forum-help\": { \"browser-info\": \"Інформація про ваш браузер:\", \"user-agent\": \"Агент користувача: <code>{{userAgent}}</code>\", \"challenge\": \"Інформація про завдання:\", \"whats-happening\": \"Розкажіть нам, що сталося:\", \"describe\": \"Детально опишіть свою проблемуНаприклад: \\nВ моєму елементі h1 немає початкового тегу Мій код потрібно перевірити \\nАБО \\nМій цикл for виконується нескінченно Як запобігти цьому\", \"camper-project\": \"Посилання на ваші проєкти\", \"camper-code\": \"Ваш код\", \"warning\": \"УВАГА\", \"too-long-one\": \"Початковий код завдання та/або ваш розв’язок перевищили максимальну довжину, яку ми можемо перенести з завдання\",\n    \"too-long-two\": \"Вам потрібно зробити додатковий крок, щоб код, який ви написали був у форматі зручному для читання \",\n    \"too-long-three\": \"Будь ласка, скопіюйте/вставте весь код з редактора в завданні, посилання з якого ви надали \",\n    \"add-code-one\": \"Замініть ці два речення своїм скопійованим кодом",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 191,
    "total_chunks": 206
  },
  {
    "id": "c55a15f93e42c0e3847a06d7836b6466",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\\nМій цикл for виконується нескінченно Як запобігти цьому\", \"camper-project\": \"Посилання на ваші проєкти\", \"camper-code\": \"Ваш код\", \"warning\": \"УВАГА\", \"too-long-one\": \"Початковий код завдання та/або ваш розв’язок перевищили максимальну довжину, яку ми можемо перенести з завдання\", \"too-long-two\": \"Вам потрібно зробити додатковий крок, щоб код, який ви написали був у форматі зручному для читання \", \"too-long-three\": \"Будь ласка, скопіюйте/вставте весь код з редактора в завданні, посилання з якого ви надали \", \"add-code-one\": \"Замініть ці два речення своїм скопійованим кодом\",\n    \"add-code-two\": \"Будь ласка, залиште рядок над ``` та рядок під ```,\",\n    \"add-code-three\": \"тому що вони дозволяють вашому коду бути правильно відформатованим у повідомленні \"\n  },\n  \"user-token\": {\n    \"title\": \"Токен користувача\",\n    \"create\": \"Створити новий токен\",\n    \"create-p1\": \"Схоже, у вас немає токена користувача",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 192,
    "total_chunks": 206
  },
  {
    "id": "c84f51a4ea46253faad5e56c7312129e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "код, який ви написали був у форматі зручному для читання \", \"too-long-three\": \"Будь ласка, скопіюйте/вставте весь код з редактора в завданні, посилання з якого ви надали \", \"add-code-one\": \"Замініть ці два речення своїм скопійованим кодом\", \"add-code-two\": \"Будь ласка, залиште рядок над ``` та рядок під ```,\", \"add-code-three\": \"тому що вони дозволяють вашому коду бути правильно відформатованим у повідомленні \" }, \"user-token\": { \"title\": \"Токен користувача\", \"create\": \"Створити новий токен\", \"create-p1\": \"Схоже, у вас немає токена користувачаСтворіть його, щоб зберегти свій прогрес в цьому розділі\",\n    \"create-p2\": \"Створіть токен користувача, щоб зберегти свій прогрес у розділах навчальної програми, які використовують віртуальну машину \",\n    \"delete\": \"Видалити мій токен\",\n    \"delete-title\": \"Видалити мій токен\",\n    \"delete-p1\": \"Ваш токен користувача використовується для збереження вашого прогресу в розділах навчальної програми, які використовують віртуальну машину",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 193,
    "total_chunks": 206
  },
  {
    "id": "a11efe97bc01f28e6cec0aa7f96b9eed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "дозволяють вашому коду бути правильно відформатованим у повідомленні \" }, \"user-token\": { \"title\": \"Токен користувача\", \"create\": \"Створити новий токен\", \"create-p1\": \"Схоже, у вас немає токена користувачаСтворіть його, щоб зберегти свій прогрес в цьому розділі\", \"create-p2\": \"Створіть токен користувача, щоб зберегти свій прогрес у розділах навчальної програми, які використовують віртуальну машину \", \"delete\": \"Видалити мій токен\", \"delete-title\": \"Видалити мій токен\", \"delete-p1\": \"Ваш токен користувача використовується для збереження вашого прогресу в розділах навчальної програми, які використовують віртуальну машинуЯкщо ви підозрюєте, що його було зламано, ви можете видалити його, не втрачаючи прогресу Новий буде створено автоматично, коли ви відкриєте проєкт \",\n    \"delete-p2\": \"Якщо ви підозрюєте, що ваш токен зламано, ви можете видалити його та зробити непридатним для використання Прогрес на раніше поданих уроках не буде втрачено",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 194,
    "total_chunks": 206
  },
  {
    "id": "e462f2908acc3b7fa2942cb6d67ac1dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "використовують віртуальну машину \", \"delete\": \"Видалити мій токен\", \"delete-title\": \"Видалити мій токен\", \"delete-p1\": \"Ваш токен користувача використовується для збереження вашого прогресу в розділах навчальної програми, які використовують віртуальну машинуЯкщо ви підозрюєте, що його було зламано, ви можете видалити його, не втрачаючи прогресу Новий буде створено автоматично, коли ви відкриєте проєкт \", \"delete-p2\": \"Якщо ви підозрюєте, що ваш токен зламано, ви можете видалити його та зробити непридатним для використання Прогрес на раніше поданих уроках не буде втрачено\",\n    \"delete-p3\": \"Вам потрібно буде створити новий токен, щоб зберегти майбутній прогрес у розділах навчальної програми, які використовують віртуальну машину",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 195,
    "total_chunks": 206
  },
  {
    "id": "db509707d2f5a21c15eed6278cbc4322",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "вашого прогресу в розділах навчальної програми, які використовують віртуальну машинуЯкщо ви підозрюєте, що його було зламано, ви можете видалити його, не втрачаючи прогресу Новий буде створено автоматично, коли ви відкриєте проєкт \", \"delete-p2\": \"Якщо ви підозрюєте, що ваш токен зламано, ви можете видалити його та зробити непридатним для використання Прогрес на раніше поданих уроках не буде втрачено\", \"delete-p3\": \"Вам потрібно буде створити новий токен, щоб зберегти майбутній прогрес у розділах навчальної програми, які використовують віртуальну машину\",\n    \"no-thanks\": \"Ні, дякую, я хотів(-ла) би зберегти свій токен\",\n    \"yes-please\": \"Так, я хотів(-ла) би видалити свій токен\"\n  },\n  \"exam-token\": {\n    \"exam-token\": \"Токен екзамену\",\n    \"note\": \"Токен екзамену — це секретний ключ, який дозволяє отримати доступ до екзаменів Не поширюйте його",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 196,
    "total_chunks": 206
  },
  {
    "id": "8058a607062ad332795a4dd633dd3b1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "зламано, ви можете видалити його та зробити непридатним для використання Прогрес на раніше поданих уроках не буде втрачено\", \"delete-p3\": \"Вам потрібно буде створити новий токен, щоб зберегти майбутній прогрес у розділах навчальної програми, які використовують віртуальну машину\", \"no-thanks\": \"Ні, дякую, я хотів(-ла) би зберегти свій токен\", \"yes-please\": \"Так, я хотів(-ла) би видалити свій токен\" }, \"exam-token\": { \"exam-token\": \"Токен екзамену\", \"note\": \"Токен екзамену — це секретний ключ, який дозволяє отримати доступ до екзаменів Не поширюйте його\",\n    \"invalidation\": \"Якщо ви згенеруєте новий токен, то старий токен буде анульовано \",\n    \"generate-exam-token\": \"Згенерувати токен екзамену\",\n    \"error\": \"При генерації токену виникла помилка Будь ласка, спробуйте пізніше",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 197,
    "total_chunks": 206
  },
  {
    "id": "b954b93e00cca680963766da284a1a74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "зберегти майбутній прогрес у розділах навчальної програми, які використовують віртуальну машину\", \"no-thanks\": \"Ні, дякую, я хотів(-ла) би зберегти свій токен\", \"yes-please\": \"Так, я хотів(-ла) би видалити свій токен\" }, \"exam-token\": { \"exam-token\": \"Токен екзамену\", \"note\": \"Токен екзамену — це секретний ключ, який дозволяє отримати доступ до екзаменів Не поширюйте його\", \"invalidation\": \"Якщо ви згенеруєте новий токен, то старий токен буде анульовано \", \"generate-exam-token\": \"Згенерувати токен екзамену\", \"error\": \"При генерації токену виникла помилка Будь ласка, спробуйте пізніше\",\n    \"your-exam-token\": \"Ваш токен екзамену: {{token}}\",\n    \"copied\": \"Токен скопійовано до буфера обміну\",\n    \"copy-error\": \"Невдале копіювання токену\"\n  },\n  \"shortcuts\": {\n    \"title\": \"Гарячі клавіші\",\n    \"table-header-action\": \"Дія\",\n    \"table-header-key\": \"Ключ(і)\",\n    \"navigation-mode\": \"Режим навігації\",\n    \"execute-challenge\": \"Виконати завдання\",\n    \"focus-editor\": \"Редактор фокусу\",\n    \"focus-instructions-panel\": \"Панель інструкцій щодо фокусування\",\n    \"navigate-previous\": \"Перейти до попередньої вправи\",\n    \"navigate-next\": \"Перейти до наступної вправи\",\n    \"play-video\": \"Відтворити відео\"\n  },\n  \"signout\": {\n    \"heading\": \"Вийти з облікового запису\",\n    \"p1\": \"Увага: якщо ви продовжите, ваш прогрес не буде збережено",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 198,
    "total_chunks": 206
  },
  {
    "id": "8d9dc52b3e5c4aa2a07a4d9352a37ed4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "виникла помилка Будь ласка, спробуйте пізніше\", \"your-exam-token\": \"Ваш токен екзамену: {{token}}\", \"copied\": \"Токен скопійовано до буфера обміну\", \"copy-error\": \"Невдале копіювання токену\" }, \"shortcuts\": { \"title\": \"Гарячі клавіші\", \"table-header-action\": \"Дія\", \"table-header-key\": \"Ключ(і)\", \"navigation-mode\": \"Режим навігації\", \"execute-challenge\": \"Виконати завдання\", \"focus-editor\": \"Редактор фокусу\", \"focus-instructions-panel\": \"Панель інструкцій щодо фокусування\", \"navigate-previous\": \"Перейти до попередньої вправи\", \"navigate-next\": \"Перейти до наступної вправи\", \"play-video\": \"Відтворити відео\" }, \"signout\": { \"heading\": \"Вийти з облікового запису\", \"p1\": \"Увага: якщо ви продовжите, ваш прогрес не буде збережено\",\n    \"p2\": \"Ця дія призведе до виходу з облікового запису лише на цьому пристрої та в сеансі браузера Підтвердьте, якщо ви бажаєте продовжити",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 199,
    "total_chunks": 206
  },
  {
    "id": "5be01ac6fef64b0f25d9dd95487b6190",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "\"shortcuts\": { \"title\": \"Гарячі клавіші\", \"table-header-action\": \"Дія\", \"table-header-key\": \"Ключ(і)\", \"navigation-mode\": \"Режим навігації\", \"execute-challenge\": \"Виконати завдання\", \"focus-editor\": \"Редактор фокусу\", \"focus-instructions-panel\": \"Панель інструкцій щодо фокусування\", \"navigate-previous\": \"Перейти до попередньої вправи\", \"navigate-next\": \"Перейти до наступної вправи\", \"play-video\": \"Відтворити відео\" }, \"signout\": { \"heading\": \"Вийти з облікового запису\", \"p1\": \"Увага: якщо ви продовжите, ваш прогрес не буде збережено\", \"p2\": \"Ця дія призведе до виходу з облікового запису лише на цьому пристрої та в сеансі браузера Підтвердьте, якщо ви бажаєте продовжити\",\n    \"certain\": \"Вийти з облікового запису\",\n    \"nevermind\": \"Залишитись в обліковому записі\"\n  },\n  \"staging-warning\": {\n    \"heading\": \"Увага: це ранній доступ (тестове розгортання)\",\n    \"p1\": \"Ви можете використовувати цю платформу лише в тестовому режимі та отримати ранній доступ до майбутніх функціональностей Іноді ці зміни також називають наступними, бета, проміжними тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 200,
    "total_chunks": 206
  },
  {
    "id": "598684c9a617dfa1ef4eee27ca88c9d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "якщо ви продовжите, ваш прогрес не буде збережено\", \"p2\": \"Ця дія призведе до виходу з облікового запису лише на цьому пристрої та в сеансі браузера Підтвердьте, якщо ви бажаєте продовжити\", \"certain\": \"Вийти з облікового запису\", \"nevermind\": \"Залишитись в обліковому записі\" }, \"staging-warning\": { \"heading\": \"Увага: це ранній доступ (тестове розгортання)\", \"p1\": \"Ви можете використовувати цю платформу лише в тестовому режимі та отримати ранній доступ до майбутніх функціональностей Іноді ці зміни також називають наступними, бета, проміжними тощо\",\n    \"p2\": \"Ми вдячні за повідомлення про помилки, з якими ви стикаєтесь Це допомагає покращити freeCodeCamp org \",\n    \"p3\": \"Ваш прогрес МОЖЛИВО не буде збережним при наступному відвідуванні, а будь-які здобуті сертифікації не будуть дійсними",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 201,
    "total_chunks": 206
  },
  {
    "id": "6db40952d63b33c8457d09a1686f2060",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "запису\", \"nevermind\": \"Залишитись в обліковому записі\" }, \"staging-warning\": { \"heading\": \"Увага: це ранній доступ (тестове розгортання)\", \"p1\": \"Ви можете використовувати цю платформу лише в тестовому режимі та отримати ранній доступ до майбутніх функціональностей Іноді ці зміни також називають наступними, бета, проміжними тощо\", \"p2\": \"Ми вдячні за повідомлення про помилки, з якими ви стикаєтесь Це допомагає покращити freeCodeCamp org \", \"p3\": \"Ваш прогрес МОЖЛИВО не буде збережним при наступному відвідуванні, а будь-які здобуті сертифікації не будуть дійсними\",\n    \"certain\": \"Прийняти і відхилити\"\n  },\n  \"survey\": {\n    \"foundational-c-sharp\": {\n      \"title\": \"Опитування «Основи C# з Microsoft»\",\n      \"q1\": {\n        \"q\": \"Будь ласка, опишіть свою посаду:\",\n        \"o1\": \"Розробник-учень\",\n        \"o2\": \"Розробник-початківець (менше 2-ох років досвіду)\",\n        \"o3\": \"Розробник середнього рівня (від 2 до 5 років досвіду)\",\n        \"o4\": \"Досвідчений розробник (більше 5-ти років досвіду)\"\n      },\n      \"q2\": {\n        \"q\": \"Яким був ваш рівень з",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 552,
    "chunk_index": 202,
    "total_chunks": 206
  },
  {
    "id": "c25d56fecd74b6d017a550170fdce438",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "org \", \"p3\": \"Ваш прогрес МОЖЛИВО не буде збережним при наступному відвідуванні, а будь-які здобуті сертифікації не будуть дійсними\", \"certain\": \"Прийняти і відхилити\" }, \"survey\": { \"foundational-c-sharp\": { \"title\": \"Опитування «Основи C# з Microsoft»\", \"q1\": { \"q\": \"Будь ласка, опишіть свою посаду:\", \"o1\": \"Розробник-учень\", \"o2\": \"Розробник-початківець (менше 2-ох років досвіду)\", \"o3\": \"Розробник середнього рівня (від 2 до 5 років досвіду)\", \"o4\": \"Досвідчений розробник (більше 5-ти років досвіду)\" }, \"q2\": { \"q\": \"Яким був ваш рівень зNET та C# до цього курсу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 203,
    "total_chunks": 206
  },
  {
    "id": "1f12b202b0eb554c4c4903ee520b9e29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "МОЖЛИВО не буде збережним при наступному відвідуванні, а будь-які здобуті сертифікації не будуть дійсними\", \"certain\": \"Прийняти і відхилити\" }, \"survey\": { \"foundational-c-sharp\": { \"title\": \"Опитування «Основи C# з Microsoft»\", \"q1\": { \"q\": \"Будь ласка, опишіть свою посаду:\", \"o1\": \"Розробник-учень\", \"o2\": \"Розробник-початківець (менше 2-ох років досвіду)\", \"o3\": \"Розробник середнього рівня (від 2 до 5 років досвіду)\", \"o4\": \"Досвідчений розробник (більше 5-ти років досвіду)\" }, \"q2\": { \"q\": \"Яким був ваш рівень зNET та C# до цього курсу\",\n        \"o1\": \"Новачок (без попереднього досвіду)\",\n        \"o2\": \"Початковий рівень\",\n        \"o3\": \"Середній рівень\",\n        \"o4\": \"Високий рівень\",\n        \"o5\": \"Експерт\"\n      }\n    },\n    \"misc\": {\n      \"take\": \"Пройти опитування\",\n      \"submit\": \"Надіслати опитування\",\n      \"exit\": \"Вийти з опитування\",\n      \"two-questions\": \"Вітаємо з досягненням цієї точки",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 204,
    "total_chunks": 206
  },
  {
    "id": "9d2a447cf347dc5d1802978d10791261",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
    "source_type": "git_repo",
    "title": "translations",
    "content": "посаду:\", \"o1\": \"Розробник-учень\", \"o2\": \"Розробник-початківець (менше 2-ох років досвіду)\", \"o3\": \"Розробник середнього рівня (від 2 до 5 років досвіду)\", \"o4\": \"Досвідчений розробник (більше 5-ти років досвіду)\" }, \"q2\": { \"q\": \"Яким був ваш рівень зNET та C# до цього курсу\", \"o1\": \"Новачок (без попереднього досвіду)\", \"o2\": \"Початковий рівень\", \"o3\": \"Середній рівень\", \"o4\": \"Високий рівень\", \"o5\": \"Експерт\" } }, \"misc\": { \"take\": \"Пройти опитування\", \"submit\": \"Надіслати опитування\", \"exit\": \"Вийти з опитування\", \"two-questions\": \"Вітаємо з досягненням цієї точкиПерш ніж розпочати екзамен, будь ласка, дайте відповідь на два короткі запитання \"\n    }\n  },\n  \"curriculum\": {\n    \"catalog\": {\n      \"title\": \"Ознайомтесь з нашим каталогом\",\n      \"levels\": {\n        \"beginner\": \"Початковий рівень\",\n        \"intermediate\": \"Середній рівень\",\n        \"advanced\": \"Високий рівень\"\n      }\n    }\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 133323,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\translations.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 205,
    "total_chunks": 206
  },
  {
    "id": "18739957575953aa2592050dfef35024",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
    "source_type": "git_repo",
    "title": "auth0",
    "content": "import fastifyOauth2, { type OAuth2Namespace } from '@fastify/oauth2';\nimport { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport { Type } from '@sinclair/typebox';\nimport { Value } from '@sinclair/typebox/value';\nimport fp from 'fastify-plugin';\n\nimport { isError } from 'lodash';\nimport {\n  API_LOCATION,\n  AUTH0_CLIENT_ID,\n  AUTH0_CLIENT_SECRET,\n  AUTH0_DOMAIN,\n  COOKIE_DOMAIN,\n  HOME_LOCATION\n} from '../utils/env';\nimport { findOrCreateUser } from '../routes/helpers/auth-helpers';\nimport { createAccessToken } from '../utils/tokens';\nimport {\n  getLoginRedirectParams,\n  getPrefixedLandingPath\n} from '../utils/redirection';\n\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    auth0OAuth: OAuth2Namespace;\n  }\n}\n\nconst Auth0ErrorSchema = Type.Object({\n  data: Type.Object({\n    payload: Type.Object({\n      error: Type.String()\n    })\n  })\n});\n\n/**\n * Fastify plugin for Auth0 authentication. This uses fastify-plugin to expose\n * the auth0OAuth decorator (for easier testing), but to maintain encapsulation\n * it should be registered in a plugin. That prevents auth0OAuth from being\n * available globally.\n *\n * @param fastify - The Fastify instance.\n * @param _options - The plugin options.\n * @param done - The callback function.\n */\nexport const auth0Client: FastifyPluginCallbackTypebox = fp(\n  (fastify, _options, done) => {\n    void fastify.register(fastifyOauth2, {\n      name: 'auth0OAuth',\n      scope: ['openid', 'email', 'profile'],\n      credentials: {\n        client: {\n          id: AUTH0_CLIENT_ID,\n          secret: AUTH0_CLIENT_SECRET\n        }\n      },\n      discovery: { issuer: `https://${AUTH0_DOMAIN}` },\n      callbackUri: `${API_LOCATION}/auth/auth0/callback`,\n      cookie: {\n        // It's important not to sign the cookie, since the OAuth2 plugin will\n        // not unsign it.\n        signed: false\n      }\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8a6f5f0e3d8583f42846ba9b51d324db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
    "source_type": "git_repo",
    "title": "auth0",
    "content": "instance. * @param _options - The plugin options. * @param done - The callback function. */ export const auth0Client: FastifyPluginCallbackTypebox = fp( (fastify, _options, done) => { void fastify.register(fastifyOauth2, { name: 'auth0OAuth', scope: ['openid', 'email', 'profile'], credentials: { client: { id: AUTH0_CLIENT_ID, secret: AUTH0_CLIENT_SECRET } }, discovery: { issuer: `https://${AUTH0_DOMAIN}` }, callbackUri: `${API_LOCATION}/auth/auth0/callback`, cookie: { // It's important not to sign the cookie, since the OAuth2 plugin will // not unsign it. signed: false } });\n\nvoid fastify.register(function (fastify, _options, done) {\n      // TODO(Post-MVP): move this into the app, so that we add this hook once for\n      // all auth routes.\n      fastify.addHook('onRequest', fastify.redirectIfSignedIn);\n\nfastify.get('/signin', async function (request, reply) {\n        const returnTo = request.headers.referer ?? `${HOME_LOCATION}/learn`;\n        void reply.setCookie('login-returnto', returnTo, {\n          domain: COOKIE_DOMAIN,\n          httpOnly: true,\n          secure: true,\n          signed: true,\n          sameSite: 'lax'\n        });\n\nconst redirectUrl = await this.auth0OAuth.generateAuthorizationUri(\n          request,\n          reply\n        );\n        void reply.redirect(redirectUrl);\n      });\n      done();\n    });\n\n// TODO: use a schema to validate the query params.\n    fastify.get('/auth/auth0/callback', async function (req, reply) {\n      const logger = fastify.log.child({ req, res: reply });\n\nconst { error, error_description } = req.query as Record<string, string>;\n      if (error === 'access_denied') {\n        const blockedByLaw =\n          error_description === 'Access denied from your location';\n        if (blockedByLaw) {\n          logger.info('Access denied due to user location');\n          return reply.redirect(`${HOME_LOCATION}/blocked`);\n        } else {\n          logger.info('Authentication failed for user:' + error_description);\n          return reply.redirectWithMessage(`${HOME_LOCATION}/learn`, {\n            type: 'info',\n            content: error_description ?? 'Authentication failed'\n          });\n        }\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "cc7a690d01edcf78faf0f0ab40efbb93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
    "source_type": "git_repo",
    "title": "auth0",
    "content": "validate the query params. fastify.get('/auth/auth0/callback', async function (req, reply) { const logger = fastify.log.child({ req, res: reply }); const { error, error_description } = req.query as Record<string, string>; if (error === 'access_denied') { const blockedByLaw = error_description === 'Access denied from your location'; if (blockedByLaw) { logger.info('Access denied due to user location'); return reply.redirect(`${HOME_LOCATION}/blocked`); } else { logger.info('Authentication failed for user:' + error_description); return reply.redirectWithMessage(`${HOME_LOCATION}/learn`, { type: 'info', content: error_description ?? 'Authentication failed' }); } }\n\nconst { returnTo, pathPrefix, origin } = getLoginRedirectParams(req);\n      const redirectBase = getPrefixedLandingPath(origin, pathPrefix);\n\nlet token;\n      try {\n        token = (\n          await this.auth0OAuth.getAccessTokenFromAuthorizationCodeFlow(req)\n        ).token;\n      } catch (error) {\n        // This is the plugin's error message. If it changes, we will either\n        // have to update the test or write custom state create/verify\n        // functions.\n        if (error instanceof Error && error.message === 'Invalid state') {\n          logger.error('Auth failed: invalid state');\n        } else if (Value.Check(Auth0ErrorSchema, error)) {\n          const errorType = error.data.payload.error;\n          logger.error(error, 'Auth failed: ' + errorType);\n        } else {\n          logger.error(error, 'Failed to get access token from Auth0');\n          fastify.Sentry.captureException(error);\n        }\n        // It's important _not_ to redirect to /signin here, as that could\n        // create an infinite loop.\n        return reply.redirectWithMessage(returnTo, {\n          type: 'danger',\n          content: 'flash.generic-error'\n        });\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "272e558d1c86f129ac435030696cbdfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
    "source_type": "git_repo",
    "title": "auth0",
    "content": "or write custom state create/verify // functions. if (error instanceof Error && error.message === 'Invalid state') { logger.error('Auth failed: invalid state'); } else if (Value.Check(Auth0ErrorSchema, error)) { const errorType = error.data.payload.error; logger.error(error, 'Auth failed: ' + errorType); } else { logger.error(error, 'Failed to get access token from Auth0'); fastify.Sentry.captureException(error); } // It's important _not_ to redirect to /signin here, as that could // create an infinite loop. return reply.redirectWithMessage(returnTo, { type: 'danger', content: 'flash.generic-error' }); }\n\nlet email;\n      try {\n        const userinfo = (await fastify.auth0OAuth.userinfo(token)) as {\n          email: string;\n        };\n        logger.info(`Auth0 userinfo: ${JSON.stringify(userinfo)}`);\n        email = userinfo.email;\n        if (typeof email !== 'string') {\n          return reply.redirectWithMessage(returnTo, {\n            type: 'danger',\n            content: 'flash.no-email-in-userinfo'\n          });\n        }\n      } catch (error) {\n        logger.error(error, 'Failed to get userinfo from Auth0');\n        if (isError(error) && 'innerError' in error) {\n          // This is a specific error from the @fastify/oauth2 plugin.\n          const innerError = error.innerError as Error;\n          innerError.message = `Auth0 userinfo error: ${innerError.message}`;\n          fastify.Sentry.captureException(error.innerError);\n        } else {\n          fastify.Sentry.captureException(error);\n        }\n        return reply.redirectWithMessage(returnTo, {\n          type: 'danger',\n          content: 'flash.generic-error'\n        });\n      }\n\nconst { id, acceptedPrivacyTerms } = await findOrCreateUser(\n        fastify,\n        email\n      );\n\nreply.setAccessTokenCookie(createAccessToken(id));\n\nif (acceptedPrivacyTerms) {\n        void reply.redirectWithMessage(returnTo, {\n          type: 'success',\n          content: 'flash.signin-success'\n        });\n      } else {\n        void reply.redirectWithMessage(`${redirectBase}/email-sign-up`, {\n          type: 'success',\n          content: 'flash.signin-success'\n        });\n      }\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "af93b6d4a823bfd0bdadfec1840f79b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
    "source_type": "git_repo",
    "title": "auth0",
    "content": "in error) { // This is a specific error from the @fastify/oauth2 plugin. const innerError = error.innerError as Error; innerError.message = `Auth0 userinfo error: ${innerError.message}`; fastify.Sentry.captureException(error.innerError); } else { fastify.Sentry.captureException(error); } return reply.redirectWithMessage(returnTo, { type: 'danger', content: 'flash.generic-error' }); } const { id, acceptedPrivacyTerms } = await findOrCreateUser( fastify, email ); reply.setAccessTokenCookie(createAccessToken(id)); if (acceptedPrivacyTerms) { void reply.redirectWithMessage(returnTo, { type: 'success', content: 'flash.signin-success' }); } else { void reply.redirectWithMessage(`${redirectBase}/email-sign-up`, { type: 'success', content: 'flash.signin-success' }); } });\n\ndone();\n  },\n  // TODO(Post-MVP): remove bouncer dependency when moving redirectIfSignedIn\n  // out of this plugin.\n  { dependencies: ['redirect-with-message', 'bouncer'] }\n);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\auth0.ts",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "69d3603b4cfbb99808942f4057f6bd8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.ts",
    "source_type": "git_repo",
    "title": "bouncer",
    "content": "import type {\n  FastifyPluginCallback,\n  FastifyRequest,\n  FastifyReply\n} from 'fastify';\nimport fp from 'fastify-plugin';\nimport { getRedirectParams } from '../utils/redirection';\n\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    send401IfNoUser: (req: FastifyRequest, reply: FastifyReply) => void;\n    redirectIfNoUser: (req: FastifyRequest, reply: FastifyReply) => void;\n    redirectIfSignedIn: (req: FastifyRequest, reply: FastifyReply) => void;\n  }\n}\n\nconst plugin: FastifyPluginCallback = (fastify, _options, done) => {\n  fastify.decorate(\n    'send401IfNoUser',\n    async function (req: FastifyRequest, reply: FastifyReply) {\n      if (!req.user) {\n        const logger = fastify.log.child({ req, res: reply });\n\nlogger.trace(\n          'Protected route accessed by unauthenticated user. Sent 401.'\n        );\n\nawait reply.status(401).send({\n          type: req.accessDeniedMessage?.type,\n          message: req.accessDeniedMessage?.content\n        });\n      }\n    }\n  );\n\nfastify.decorate(\n    'redirectIfNoUser',\n    async function (req: FastifyRequest, reply: FastifyReply) {\n      const logger = fastify.log.child({ req, res: reply });\n      if (!req.user) {\n        logger.trace(\n          'Protected route accessed by unauthenticated user. Redirecting to login.'\n        );\n        const { origin } = getRedirectParams(req);\n        await reply.redirectWithMessage(origin, {\n          type: 'info',\n          content:\n            'Only authenticated users can access this route. Please sign in and try again.'\n        });\n      }\n    }\n  );\n\nfastify.decorate(\n    'redirectIfSignedIn',\n    async function (req: FastifyRequest, reply: FastifyReply) {\n      if (req.user) {\n        const logger = fastify.log.child({ req, res: reply });\n\nconst { returnTo } = getRedirectParams(req);\n\nlogger.trace(`User ${req.user?.id} redirected to: ${returnTo}`);\n\nawait reply.redirect(returnTo);\n      }\n    }\n  );\n\ndone();\n};\n\nexport default fp(plugin, {\n  dependencies: ['auth', 'redirect-with-message'],\n  name: 'bouncer'\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2084,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1564dd31278ea51a4700093f663381fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.test.ts",
    "source_type": "git_repo",
    "title": "bouncer.test",
    "content": "/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport Fastify, { type FastifyInstance } from 'fastify';\n\nimport { HOME_LOCATION } from '../utils/env';\nimport bouncer from './bouncer';\nimport auth from './auth';\nimport cookies from './cookies';\nimport redirectWithMessage, { formatMessage } from './redirect-with-message';\n\nlet authorizeSpy: jest.SpyInstance;\n\nasync function setupServer() {\n  const fastify = Fastify();\n  await fastify.register(cookies);\n  await fastify.register(auth);\n  authorizeSpy = jest.spyOn(fastify, 'authorize');\n\nawait fastify.register(redirectWithMessage);\n  await fastify.register(bouncer);\n  fastify.addHook('onRequest', fastify.authorize);\n  fastify.get('/', (_req, reply) => {\n    void reply.send({ foo: 'bar' });\n  });\n  return fastify;\n}\n\ndescribe('bouncer', () => {\n  let fastify: FastifyInstance;\n  beforeEach(async () => {\n    fastify = await setupServer();\n  });\n\nafterEach(async () => {\n    await fastify.close();\n  });\n\ndescribe('send401IfNoUser', () => {\n    beforeEach(() => {\n      fastify.addHook('onRequest', fastify.send401IfNoUser);\n    });\n\nit('should return 401 if NO user is present', async () => {\n      const message = {\n        type: 'danger',\n        content: 'Something undesirable occurred'\n      };\n      authorizeSpy.mockImplementationOnce((req, _reply, done) => {\n        req.accessDeniedMessage = message;\n        done();\n      });\n      const res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n\nexpect(res.json()).toStrictEqual({\n        type: message.type,\n        message: message.content\n      });\n      expect(res.statusCode).toEqual(401);\n    });\n\nit('should not alter the response if a user is present', async () => {\n      authorizeSpy.mockImplementationOnce((req, _reply, done) => {\n        req.user = { id: '123' };\n        done();\n      });\n\nconst res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n\nexpect(res.json()).toEqual({ foo: 'bar' });\n      expect(res.statusCode).toEqual(200);\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4781,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "64b9582bbde2f0f37a0f3f173914545c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.test.ts",
    "source_type": "git_repo",
    "title": "bouncer.test",
    "content": "'Something undesirable occurred' }; authorizeSpy.mockImplementationOnce((req, _reply, done) => { req.accessDeniedMessage = message; done(); }); const res = await fastify.inject({ method: 'GET', url: '/' }); expect(res.json()).toStrictEqual({ type: message.type, message: message.content }); expect(res.statusCode).toEqual(401); }); it('should not alter the response if a user is present', async () => { authorizeSpy.mockImplementationOnce((req, _reply, done) => { req.user = { id: '123' }; done(); }); const res = await fastify.inject({ method: 'GET', url: '/' }); expect(res.json()).toEqual({ foo: 'bar' }); expect(res.statusCode).toEqual(200); }); });\n\ndescribe('redirectIfNoUser', () => {\n    beforeEach(() => {\n      fastify.addHook('onRequest', fastify.redirectIfNoUser);\n    });\n    const redirectLocation = `${HOME_LOCATION}?${formatMessage({ type: 'info', content: 'Only authenticated users can access this route. Please sign in and try again.' })}`;\n\n// TODO(Post-MVP): make the redirects consistent between redirectIfNoUser\n    // and redirectIfSignedIn. Either both should redirect to the referer or\n    // both should redirect to HOME_LOCATION.\n    it('should redirect to HOME_LOCATION if NO user is present', async () => {\n      const message = {\n        type: 'danger',\n        content: 'At the moment, content is ignored'\n      };\n      authorizeSpy.mockImplementationOnce((req, _reply, done) => {\n        req.accessDeniedMessage = message;\n        done();\n      });\n      const res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n\nexpect(res.headers.location).toBe(redirectLocation);\n      expect(res.statusCode).toEqual(302);\n    });\n\nit('should not alter the response if a user is present', async () => {\n      authorizeSpy.mockImplementationOnce((req, _reply, done) => {\n        req.user = { id: '123' };\n        done();\n      });\n\nconst res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n\nexpect(res.json()).toEqual({ foo: 'bar' });\n      expect(res.statusCode).toEqual(200);\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4781,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ecf8fc7c2ed8dcd4b88c6342bf58ae6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.test.ts",
    "source_type": "git_repo",
    "title": "bouncer.test",
    "content": "'danger', content: 'At the moment, content is ignored' }; authorizeSpy.mockImplementationOnce((req, _reply, done) => { req.accessDeniedMessage = message; done(); }); const res = await fastify.inject({ method: 'GET', url: '/' }); expect(res.headers.location).toBe(redirectLocation); expect(res.statusCode).toEqual(302); }); it('should not alter the response if a user is present', async () => { authorizeSpy.mockImplementationOnce((req, _reply, done) => { req.user = { id: '123' }; done(); }); const res = await fastify.inject({ method: 'GET', url: '/' }); expect(res.json()).toEqual({ foo: 'bar' }); expect(res.statusCode).toEqual(200); }); });\n\ndescribe('redirectIfSignedIn', () => {\n    beforeEach(() => {\n      fastify.addHook('onRequest', fastify.redirectIfSignedIn);\n    });\n\nit('should redirect to the referer if a user is present', async () => {\n      authorizeSpy.mockImplementationOnce((req, _reply, done) => {\n        req.user = { id: '123' };\n        done();\n      });\n      const res = await fastify.inject({\n        method: 'GET',\n        url: '/',\n        headers: {\n          referer: 'https://www.freecodecamp.org/some/other/path'\n        }\n      });\n\nexpect(res.headers.location).toBe(\n        'https://www.freecodecamp.org/some/other/path'\n      );\n      expect(res.statusCode).toEqual(302);\n    });\n\nit('should not alter the response if NO user is present', async () => {\n      const message = {\n        type: 'danger',\n        content: 'At the moment, content is ignored'\n      };\n      authorizeSpy.mockImplementationOnce((req, _reply, done) => {\n        req.accessDeniedMessage = message;\n        done();\n      });\n      const res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n\nexpect(res.json()).toEqual({ foo: 'bar' });\n      expect(res.statusCode).toEqual(200);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4781,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\bouncer.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d0a1d9ffc5105fa2b9fab612b3a68443",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookie-update.ts",
    "source_type": "git_repo",
    "title": "cookie-update",
    "content": "import { FastifyPluginCallback } from 'fastify';\n\nimport type { CookieSerializeOptions } from './cookies';\n\ntype Options = { cookies: string[]; attributes: CookieSerializeOptions };\n\n/**\n * Plugin that updates the attributes of cookies in the response, without\n * changing the value.\n *\n * @param fastify The Fastify instance.\n * @param options Options passed to the plugin via `fastify.register(plugin,\n * options)`.\n * @param options.cookies The names of the cookies to update.\n * @param options.attributes The attributes to update the cookies with. NOTE:\n * The attributes are merged with the default values given to \\@fastify/cookie.\n * @param done Callback to signal that the logic has completed.\n */\nexport const cookieUpdate: FastifyPluginCallback<Options> = (\n  fastify,\n  options,\n  done\n) => {\n  fastify.addHook('onSend', (request, reply, _payload, next) => {\n    const logger = fastify.log.child({ request });\n\nfor (const cookie of options.cookies) {\n      const oldCookie = request.cookies[cookie];\n      if (!oldCookie) continue;\n\nconst unsigned = reply.unsignCookie(oldCookie);\n      const raw = unsigned.valid ? unsigned.value : oldCookie;\n      void reply.setCookie(cookie, raw, options.attributes);\n    }\n\nlogger.trace(`Updated cookies for user ${request.user?.id}.`);\n\nnext();\n  });\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1333,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookie-update.ts",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "48149020a1c28718560e85842ddca4cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookie-update.test.ts",
    "source_type": "git_repo",
    "title": "cookie-update.test",
    "content": "import Fastify, { FastifyInstance } from 'fastify';\nimport cookies, { type CookieSerializeOptions, sign } from './cookies';\nimport { cookieUpdate } from './cookie-update';\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-return\njest.mock('../utils/env', () => ({\n  ...jest.requireActual('../utils/env'),\n  COOKIE_DOMAIN: 'www.example.com',\n  FREECODECAMP_NODE_ENV: 'not-development'\n}));\n\ndescribe('Cookie updates', () => {\n  let fastify: FastifyInstance;\n\nconst setup = async (attributes: CookieSerializeOptions) => {\n    // Since register creates a new scope, we need to create a route inside the\n    // scope for the plugin to be applied.\n    await fastify.register(cookieUpdate, fastify => {\n      // eslint-disable-next-line @typescript-eslint/require-await\n      fastify.get('/', async () => {\n        return { hello: 'world' };\n      });\n      return {\n        cookies: ['cookie_name'],\n        attributes\n      };\n    });\n  };\n\nbeforeEach(async () => {\n    fastify = Fastify();\n    await fastify.register(cookies);\n  });\n\nafterEach(async () => {\n    await fastify.close();\n  });\n\nit('should not set cookies that are not in the request', async () => {\n    await setup({});\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/',\n      headers: {\n        cookie: 'cookie_name_two=cookie_value'\n      }\n    });\n\nexpect(res.headers['set-cookie']).toBeUndefined();\n  });\n\nit(\"should update the cookie's attributes without changing the value\", async () => {\n    await setup({ sameSite: 'strict' });\n    const signedCookie = sign('cookie_value');\n    const encodedCookie = encodeURIComponent(signedCookie);\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/',\n      headers: {\n        cookie: `cookie_name=${signedCookie}`\n      }\n    });\n\nconst updatedCookie = res.headers['set-cookie'] as string;\n    expect(updatedCookie).toEqual(\n      expect.stringContaining(`cookie_name=${encodedCookie}`)\n    );\n    expect(updatedCookie).toEqual(expect.stringContaining('SameSite=Strict'));\n  });\n\nit('should unsign the cookie if required', async () => {\n    await setup({ signed: false });\n    const signedCookie = sign('cookie_value');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3091,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookie-update.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b05e1802b3d1336a5b7935397a19f917",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookie-update.test.ts",
    "source_type": "git_repo",
    "title": "cookie-update.test",
    "content": "'cookie_name_two=cookie_value' } }); expect(res.headers['set-cookie']).toBeUndefined(); }); it(\"should update the cookie's attributes without changing the value\", async () => { await setup({ sameSite: 'strict' }); const signedCookie = sign('cookie_value'); const encodedCookie = encodeURIComponent(signedCookie); const res = await fastify.inject({ method: 'GET', url: '/', headers: { cookie: `cookie_name=${signedCookie}` } }); const updatedCookie = res.headers['set-cookie'] as string; expect(updatedCookie).toEqual( expect.stringContaining(`cookie_name=${encodedCookie}`) ); expect(updatedCookie).toEqual(expect.stringContaining('SameSite=Strict')); }); it('should unsign the cookie if required', async () => { await setup({ signed: false }); const signedCookie = sign('cookie_value');\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/',\n      headers: {\n        cookie: `cookie_name=${signedCookie}`\n      }\n    });\n\nconst updatedCookie = res.headers['set-cookie'] as string;\n    expect(updatedCookie).toEqual(\n      expect.stringContaining('cookie_name=cookie_value')\n    );\n  });\n\nit('should respect the default cookie config if not overriden', async () => {\n    await setup({});\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/',\n      headers: {\n        cookie: 'cookie_name=anything'\n      }\n    });\n\nexpect(res.cookies[0]).toStrictEqual({\n      domain: 'www.example.com',\n      httpOnly: true,\n      name: 'cookie_name',\n      path: '/',\n      sameSite: 'Lax',\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      value: expect.any(String),\n      secure: true\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3091,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookie-update.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5d832e39d6653c0606ee5652cd1c6c58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.ts",
    "source_type": "git_repo",
    "title": "cookies",
    "content": "import fastifyCookie, { type UnsignResult } from '@fastify/cookie';\nimport { FastifyPluginCallback } from 'fastify';\nimport fp from 'fastify-plugin';\n\nimport {\n  COOKIE_DOMAIN,\n  COOKIE_SECRET,\n  FREECODECAMP_NODE_ENV\n} from '../utils/env';\nimport { CSRF_COOKIE, CSRF_SECRET_COOKIE } from './csrf';\n\nexport { type CookieSerializeOptions } from '@fastify/cookie';\n\ndeclare module 'fastify' {\n  interface FastifyReply {\n    clearOurCookies: () => void;\n  }\n}\n\n/**\n * Signs a cookie value by prefixing it with \"s:\" and using the COOKIE_SECRET.\n *\n * @param value The value to sign.\n * @returns The signed cookie value.\n */\nexport const sign = (value: string) =>\n  's:' + fastifyCookie.sign(value, COOKIE_SECRET);\n\n/**\n * Unsigns a cookie value by removing the \"s:\" prefix and using the COOKIE_SECRET.\n *\n * @param rawValue The signed cookie value.\n * @returns The unsigned cookie value.\n */\nexport const unsign = (rawValue: string): UnsignResult => {\n  const prefix = rawValue.slice(0, 2);\n  if (prefix !== 's:') return { valid: false, renew: false, value: null };\n\nconst value = rawValue.slice(2);\n  return fastifyCookie.unsign(value, COOKIE_SECRET);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2384,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.ts",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "84feb126940b1dc17ba57aeb0e64a26d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.ts",
    "source_type": "git_repo",
    "title": "cookies",
    "content": "export const sign = (value: string) => 's:' + fastifyCookie.sign(value, COOKIE_SECRET); /** * Unsigns a cookie value by removing the \"s:\" prefix and using the COOKIE_SECRET. * * @param rawValue The signed cookie value. * @returns The unsigned cookie value. */ export const unsign = (rawValue: string): UnsignResult => { const prefix = rawValue.slice(0, 2); if (prefix !== 's:') return { valid: false, renew: false, value: null }; const value = rawValue.slice(2); return fastifyCookie.unsign(value, COOKIE_SECRET); };\n\n/**\n * Compatibility plugin for using cookies signed by express. By prefixing with\n * \"s:\" and removing it when unsigning, we can continue to use the same cookies\n * in Fastify.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n */\nconst cookies: FastifyPluginCallback = (fastify, _options, done) => {\n  const logger = fastify.log.child({});\n  void fastify.register(fastifyCookie, {\n    secret: {\n      sign,\n      unsign\n    },\n    parseOptions: {\n      domain: COOKIE_DOMAIN,\n      httpOnly: FREECODECAMP_NODE_ENV !== 'development',\n      // Path is necessary to ensure that only one cookie is set and it is valid\n      // for all routes.\n      path: '/',\n      sameSite: 'lax',\n      secure: FREECODECAMP_NODE_ENV !== 'development',\n      signed: true\n    }\n  });\n\nvoid fastify.decorateReply('clearOurCookies', function () {\n    void this.clearCookie('jwt_access_token');\n    void this.clearCookie(CSRF_SECRET_COOKIE);\n    void this.clearCookie(CSRF_COOKIE);\n\nlogger.trace('Clearing cookies for user.');\n  });\n\ndone();\n};\n\nexport default fp(cookies, { name: 'cookies' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2384,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.ts",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "388b4da63fffa0de302a241e258b6172",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.test.ts",
    "source_type": "git_repo",
    "title": "cookies.test",
    "content": "import Fastify, { type FastifyInstance } from 'fastify';\nimport fastifyCookie from '@fastify/cookie';\n\nimport { COOKIE_SECRET } from '../utils/env';\nimport cookies from './cookies';\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-return\njest.mock('../utils/env', () => ({\n  ...jest.requireActual('../utils/env'),\n  COOKIE_DOMAIN: 'www.example.com',\n  FREECODECAMP_NODE_ENV: 'not-development'\n}));\n\ndescribe('cookies', () => {\n  let fastify: FastifyInstance;\n\nbeforeEach(async () => {\n    fastify = Fastify();\n    await fastify.register(cookies);\n  });\n\nafterEach(async () => {\n    await fastify.close();\n  });\n\nit('should prefix signed cookies with \"s:\" (url-encoded)', async () => {\n    fastify.get('/test', async (req, reply) => {\n      void reply.setCookie('test', 'value', { signed: true });\n      return { ok: true };\n    });\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/test'\n    });\n\nexpect(res.headers['set-cookie']).toMatch(/test=s%3Avalue\\.\\w*/);\n  });\n\nit('should be able to unsign cookies', async () => {\n    const signedCookie = `test=s%3A${fastifyCookie.sign('value', COOKIE_SECRET)}`;\n    fastify.get('/test', (req, reply) => {\n      void reply.send({ unsigned: req.unsignCookie(req.cookies.test!) });\n    });\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        cookie: signedCookie\n      }\n    });\n\nexpect(res.json()).toEqual({\n      unsigned: { value: 'value', renew: false, valid: true }\n    });\n  });\n\nit('should reject cookies not prefixed with \"s:\"', async () => {\n    const signedCookie = `test=${fastifyCookie.sign('value', COOKIE_SECRET)}`;\n    fastify.get('/test', (req, reply) => {\n      void reply.send({ unsigned: req.unsignCookie(req.cookies.test!) });\n    });\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        cookie: signedCookie\n      }\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3641,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "214bcade137fd1254b01f136e677b3a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.test.ts",
    "source_type": "git_repo",
    "title": "cookies.test",
    "content": "{ void reply.send({ unsigned: req.unsignCookie(req.cookies.test!) }); }); const res = await fastify.inject({ method: 'GET', url: '/test', headers: { cookie: signedCookie } }); expect(res.json()).toEqual({ unsigned: { value: 'value', renew: false, valid: true } }); }); it('should reject cookies not prefixed with \"s:\"', async () => { const signedCookie = `test=${fastifyCookie.sign('value', COOKIE_SECRET)}`; fastify.get('/test', (req, reply) => { void reply.send({ unsigned: req.unsignCookie(req.cookies.test!) }); }); const res = await fastify.inject({ method: 'GET', url: '/test', headers: { cookie: signedCookie } });\n\nexpect(res.json()).toEqual({\n      unsigned: { value: null, renew: false, valid: false }\n    });\n  });\n\nit('should have reasonable defaults', async () => {\n    fastify.get('/test', async (req, reply) => {\n      void reply.setCookie('test', 'value');\n      return { ok: true };\n    });\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/test'\n    });\n\n// No max-age, so we default to a session cookie.\n    expect(res.cookies[0]).toStrictEqual({\n      name: 'test',\n      // defaults:\n      domain: 'www.example.com',\n      httpOnly: true,\n      path: '/',\n      sameSite: 'Lax',\n      secure: true,\n      // sign by default:\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      value: expect.stringMatching(/s:value\\.\\w*/)\n    });\n  });\n\n// TODO(Post-MVP): Clear all cookies rather than just three specific ones?\n  // Then it should be called something like clearAllCookies.\n  it('clearOurCookies should clear cookies that we set', async () => {\n    fastify.get('/test', async (req, reply) => {\n      void reply.clearOurCookies();\n      return { ok: true };\n    });\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/test'\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3641,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "30258d8edb1b21dbbcaf43755d1033f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.test.ts",
    "source_type": "git_repo",
    "title": "cookies.test",
    "content": "domain: 'www.example.com', httpOnly: true, path: '/', sameSite: 'Lax', secure: true, // sign by default: // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment value: expect.stringMatching(/s:value\\.\\w*/) }); }); // TODO(Post-MVP): Clear all cookies rather than just three specific ones? // Then it should be called something like clearAllCookies. it('clearOurCookies should clear cookies that we set', async () => { fastify.get('/test', async (req, reply) => { void reply.clearOurCookies(); return { ok: true }; }); const res = await fastify.inject({ method: 'GET', url: '/test' });\n\nexpect(res.cookies).toStrictEqual(\n      expect.arrayContaining([\n        expect.objectContaining({\n          name: 'jwt_access_token',\n          expires: new Date(0),\n          value: ''\n        }),\n        expect.objectContaining({\n          name: '_csrf',\n          expires: new Date(0),\n          value: ''\n        }),\n        expect.objectContaining({\n          name: 'csrf_token',\n          expires: new Date(0),\n          value: ''\n        })\n      ])\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3641,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cookies.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 245,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "035030aa60b543e0b24be379626c24ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cors.test.ts",
    "source_type": "git_repo",
    "title": "cors.test",
    "content": "import Fastify, { FastifyInstance, LogLevel } from 'fastify';\nimport cors from './cors';\n\nconst LOG_LEVELS: LogLevel[] = [\n  'fatal',\n  'error',\n  'warn',\n  'info',\n  'debug',\n  'trace'\n];\n\ndescribe('cors', () => {\n  let fastify: FastifyInstance;\n  beforeAll(async () => {\n    fastify = Fastify({ disableRequestLogging: true });\n    await fastify.register(cors);\n  });\n\nafterAll(async () => {\n    await fastify.close();\n  });\n\nit('should not log for /status/* routes', async () => {\n    const logger = fastify.log.child({ req: { url: '/status/ping' } });\n    const spies = LOG_LEVELS.map(level => jest.spyOn(logger, level));\n    await fastify.inject({\n      url: '/status/ping'\n    });\n\nspies.forEach(spy => {\n      expect(spy).not.toHaveBeenCalled();\n    });\n  });\n\nit('should not log if the origin is undefined', async () => {\n    const logger = fastify.log.child({ req: { url: '/api/some-endpoint' } });\n    const spies = LOG_LEVELS.map(level => jest.spyOn(logger, level));\n    await fastify.inject({\n      url: '/api/some-endpoint'\n    });\n\nspies.forEach(spy => {\n      expect(spy).not.toHaveBeenCalled();\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1142,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cors.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6f1d63e48289a29ffb1369ead41e1f56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\cors.ts",
    "source_type": "git_repo",
    "title": "cors",
    "content": "import { FastifyPluginCallback } from 'fastify';\nimport fp from 'fastify-plugin';\n\nimport { HOME_LOCATION } from '../utils/env';\nimport { allowedOrigins } from '../utils/allowed-origins';\n\nconst cors: FastifyPluginCallback = (fastify, _options, done) => {\n  fastify.options('*', (_req, reply) => {\n    void reply.send();\n  });\n\nfastify.addHook('onRequest', async (req, reply) => {\n    const logger = fastify.log.child({ req, res: reply });\n    const origin = req.headers.origin;\n    if (origin && allowedOrigins.includes(origin)) {\n      // Do we want to log allowed origins?\n      void reply.header('Access-Control-Allow-Origin', origin);\n    } else {\n      // TODO: Discuss if this is the correct approach. Standard practice is to\n      // reflect one of a list of allowed origins and handle development\n      // separately. If we switch to that approach we can replace use\n      // @fastify/cors instead.\n      void reply.header('Access-Control-Allow-Origin', HOME_LOCATION);\n\nif (origin && !req.url?.startsWith('/status/')) {\n        logger.info(`Received request from disallowed origin: ${origin}`);\n      }\n    }\n\nvoid reply\n      .header(\n        'Access-Control-Allow-Headers',\n        'Origin, X-Requested-With, Content-Type, Accept, Csrf-Token, Coderoad-User-Token, Exam-Environment-Authorization-Token'\n      )\n      .header('Access-Control-Allow-Credentials', true)\n      // These 4 are the only methods we use\n      .header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE')\n      // Vary: Origin to prevent cache poisoning\n      // TODO: do we need Vary: Accept-Encoding?\n      .header('Vary', 'Origin, Accept-Encoding');\n  });\n\ndone();\n};\n\nexport default fp(cors);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1701,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\cors.ts",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "633bed7ea1c8bc191cc64b8bcc9bb8d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\csrf.ts",
    "source_type": "git_repo",
    "title": "csrf",
    "content": "import type { FastifyPluginCallback } from 'fastify';\nimport fastifyCsrfProtection from '@fastify/csrf-protection';\n\nimport fp from 'fastify-plugin';\n\nexport const CSRF_COOKIE = 'csrf_token';\nexport const CSRF_HEADER = 'csrf-token';\nexport const CSRF_SECRET_COOKIE = '_csrf';\n\n/**\n * Plugin for preventing CSRF attacks.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n */\nconst csrf: FastifyPluginCallback = (fastify, _options, done) => {\n  void fastify.register(fastifyCsrfProtection, {\n    // TODO: consider signing cookies. We don't on the api-server, but we could\n    // as an extra layer of security.\n\n///Ignore all other possible sources of CSRF\n    // tokens since we know we can provide this one\n    getToken: req => req.headers[CSRF_HEADER] as string,\n    cookieOpts: { signed: false, sameSite: 'strict' },\n    logLevel: 'silent'\n  });\n\n// All routes except signout should add a CSRF token to the response\n  fastify.addHook('onRequest', (req, reply, done) => {\n    const logger = fastify.log.child({ req, res: reply });\n    const isSignout = req.url === '/signout' || req.url === '/signout/';\n\nif (!isSignout) {\n      logger.trace('Adding CSRF token to response');\n      const token = reply.generateCsrf();\n      void reply.setCookie(CSRF_COOKIE, token, {\n        sameSite: 'strict',\n        signed: false,\n        // it needs to be read by the client, so that it can be sent in the\n        // header of the next request:\n        httpOnly: false\n      });\n    }\n    done();\n  });\n\ndone();\n};\n\nexport default fp(csrf, { dependencies: ['cookies'] });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1718,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\csrf.ts",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a965f0b7c294acfbbc44a68208c4d7f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\csrf.test.ts",
    "source_type": "git_repo",
    "title": "csrf.test",
    "content": "import Fastify, { type FastifyInstance } from 'fastify';\n\nimport { COOKIE_DOMAIN } from '../utils/env';\nimport cookies from './cookies';\nimport csrf, { CSRF_COOKIE, CSRF_SECRET_COOKIE } from './csrf';\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-return\njest.mock('../utils/env', () => ({\n  ...jest.requireActual('../utils/env'),\n  COOKIE_DOMAIN: 'www.example.com',\n  FREECODECAMP_NODE_ENV: 'production'\n}));\n\nasync function setupServer() {\n  const fastify = Fastify({ logger: true, disableRequestLogging: true });\n  await fastify.register(cookies);\n  await fastify.register(csrf);\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  fastify.addHook('onRequest', fastify.csrfProtection);\n\nfastify.get('/', (_req, reply) => {\n    void reply.send({ foo: 'bar' });\n  });\n  return fastify;\n}\n\ndescribe('CSRF protection', () => {\n  let fastify: FastifyInstance;\n  beforeEach(async () => {\n    fastify = await setupServer();\n  });\n  it('should receive a new CSRF token with the expected properties', async () => {\n    const response = await fastify.inject({\n      method: 'GET',\n      url: '/'\n    });\n    const newCookies = response.cookies;\n    const csrfTokenCookie = newCookies.find(\n      cookie => cookie.name === CSRF_COOKIE\n    );\n\nconst { value, ...rest } = csrfTokenCookie!;\n\n// The value is a random string - it's enough to check that it's not empty\n    expect(value).toHaveLength(52);\n\nexpect(rest).toStrictEqual({\n      name: CSRF_COOKIE,\n      path: '/',\n      sameSite: 'Strict',\n      domain: COOKIE_DOMAIN,\n      secure: true\n    });\n  });\n\nit('should return 403 if the _csrf secret is missing', async () => {\n    const response = await fastify.inject({\n      method: 'GET',\n      url: '/'\n    });\n\nexpect(response.statusCode).toEqual(403);\n    // The response body is determined by the error-handling plugin, so we don't\n    // check it here.\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2899,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\csrf.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7f1bcad13758f1dc2746f30d538dfed4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\csrf.test.ts",
    "source_type": "git_repo",
    "title": "csrf.test",
    "content": "...rest } = csrfTokenCookie!; // The value is a random string - it's enough to check that it's not empty expect(value).toHaveLength(52); expect(rest).toStrictEqual({ name: CSRF_COOKIE, path: '/', sameSite: 'Strict', domain: COOKIE_DOMAIN, secure: true }); }); it('should return 403 if the _csrf secret is missing', async () => { const response = await fastify.inject({ method: 'GET', url: '/' }); expect(response.statusCode).toEqual(403); // The response body is determined by the error-handling plugin, so we don't // check it here. });\n\nit('should return 403 if the csrf_token is invalid', async () => {\n    const response = await fastify.inject({\n      method: 'GET',\n      url: '/',\n      cookies: {\n        _csrf: 'foo',\n        csrf_token: 'bar'\n      }\n    });\n    expect(response.statusCode).toEqual(403);\n  });\n\nit('should allow the request if the csrf_token is valid', async () => {\n    const csrfResponse = await fastify.inject({\n      method: 'GET',\n      url: '/'\n    });\n\nconst csrfTokenCookie = csrfResponse.cookies.find(\n      cookie => cookie.name === CSRF_COOKIE\n    );\n    const csrfSecretCookie = csrfResponse.cookies.find(\n      cookie => cookie.name === CSRF_SECRET_COOKIE\n    );\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/',\n      cookies: {\n        _csrf: csrfSecretCookie!.value\n      },\n      headers: {\n        'csrf-token': csrfTokenCookie!.value\n      }\n    });\n\nexpect(res.json()).toEqual({ foo: 'bar' });\n    expect(res.statusCode).toEqual(200);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2899,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\csrf.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "70c14595783c54b56bef928bf1383a4e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.ts",
    "source_type": "git_repo",
    "title": "error-handling",
    "content": "import type { FastifyPluginCallback } from 'fastify';\nimport * as Sentry from '@sentry/node';\nimport fp from 'fastify-plugin';\n\nimport { getRedirectParams } from '../utils/redirection';\n\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    Sentry: typeof Sentry;\n  }\n}\n\n/**\n * Plugin to handle errors and send them to Sentry.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n */\nconst errorHandling: FastifyPluginCallback = (fastify, _options, done) => {\n  Sentry.setupFastifyErrorHandler(fastify);\n\nfastify.decorate('Sentry', Sentry);\n\nfastify.setErrorHandler((error, request, reply) => {\n    const logger = fastify.log.child({ req: request });\n    const accepts = request.accepts().type(['json', 'html']);\n    const { returnTo } = getRedirectParams(request);\n\nif (!reply.statusCode || reply.statusCode === 200) {\n      const statusCode =\n        error.statusCode && error.statusCode >= 400 ? error.statusCode : 500;\n      reply.code(statusCode);\n    }\n\nconst isCSRFError =\n      error.code === 'FST_CSRF_INVALID_TOKEN' ||\n      error.code === 'FST_CSRF_MISSING_SECRET';\n\nif (!isCSRFError) {\n      if (reply.statusCode >= 500) {\n        logger.error(error, 'Error in request');\n      } else {\n        logger.warn(error, 'CSRF error in request');\n      }\n    }\n\nconst message =\n      reply.statusCode === 500 || isCSRFError\n        ? 'flash.generic-error'\n        : error.message;\n    if (accepts === 'json') {\n      void reply.send({\n        message,\n        type: 'danger'\n      });\n    } else {\n      void reply.status(302);\n      void reply.redirectWithMessage(returnTo, {\n        type: 'danger',\n        content: message\n      });\n    }\n  });\n\ndone();\n};\n\nexport default fp(errorHandling, {\n  dependencies: ['redirect-with-message', '@fastify/accepts']\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1939,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "203c8930cbb37123c5c553b5e435ca34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\growth-book.test.ts",
    "source_type": "git_repo",
    "title": "growth-book.test",
    "content": "import Fastify, { type FastifyInstance } from 'fastify';\nimport growthBook from './growth-book';\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-return\njest.mock('../utils/env', () => ({\n  ...jest.requireActual('../utils/env'),\n  // We're only interested in the production behaviour\n  FREECODECAMP_NODE_ENV: 'production'\n}));\n\nconst captureException = jest.fn();\n\ndescribe('growth-book', () => {\n  let fastify: FastifyInstance;\n  beforeAll(() => {\n    fastify = Fastify();\n    // @ts-expect-error we're mocking the Sentry plugin\n    fastify.Sentry = { captureException };\n  });\n\nafterAll(async () => {\n    await fastify.close();\n  });\n\nit('should log the error if the GrowthBook initialization fails', async () => {\n    const spy = jest.spyOn(fastify.log, 'error');\n\nawait fastify.register(growthBook, {\n      apiHost: 'invalid-url',\n      clientKey: 'invalid-key'\n    });\n\nexpect(spy).toHaveBeenCalled();\n    expect(captureException).toHaveBeenCalled();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 987,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\growth-book.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7c3f5d8358d56a085a7a8b85ff05b351",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\growth-book.ts",
    "source_type": "git_repo",
    "title": "growth-book",
    "content": "import { GrowthBook, Options } from '@growthbook/growthbook';\nimport { FastifyPluginAsync } from 'fastify';\nimport fp from 'fastify-plugin';\n\nimport { FREECODECAMP_NODE_ENV } from '../utils/env';\n\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    gb: GrowthBook;\n  }\n}\n\nconst growthBook: FastifyPluginAsync<Options> = async (fastify, options) => {\n  const gb = new GrowthBook(options);\n  const res = await gb.init({ timeout: 3000 });\n\nif (res.error && FREECODECAMP_NODE_ENV === 'production') {\n    fastify.log.error(res.error, 'Failed to initialize GrowthBook');\n    fastify.Sentry.captureException(res.error);\n  }\n\nfastify.decorate('gb', gb);\n\nfastify.addHook('onClose', () => {\n    gb.destroy();\n  });\n};\n\nexport default fp(growthBook);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 756,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\growth-book.ts",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9f8469ca81fa4934e678224b8814eb8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\mailer.test.ts",
    "source_type": "git_repo",
    "title": "mailer.test",
    "content": "import Fastify from 'fastify';\n\nimport mailer from './mailer';\n\ndescribe('mailer', () => {\n  it('should send an email via the provider', async () => {\n    const fastify = Fastify();\n    const send = jest.fn();\n    await fastify.register(mailer, { provider: { send } });\n\nconst data = {\n      to: 'test@add.ress',\n      from: 'team@freecodecamp.org',\n      subject: 'test',\n      text: 'test'\n    };\n\nawait fastify.sendEmail(data);\n\nexpect(send).toHaveBeenCalledWith(data);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 495,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\mailer.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 123,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bf66b2a76bf4bf94d2bb3b68155f4f10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
    "source_type": "git_repo",
    "title": "error-handling.test",
    "content": "const SENTRY_DSN = 'https://anything@goes/123';\n\nimport Fastify, { FastifyError, type FastifyInstance } from 'fastify';\nimport accepts from '@fastify/accepts';\nimport { http, HttpResponse } from 'msw';\nimport { setupServer } from 'msw/node';\nimport '../instrument';\n\nimport errorHandling from './error-handling';\nimport redirectWithMessage, { formatMessage } from './redirect-with-message';\n\njest.mock('../utils/env', () => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return {\n    ...jest.requireActual('../utils/env'),\n    SENTRY_DSN\n  };\n});\n\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\ndescribe('errorHandling', () => {\n  let fastify: FastifyInstance;\n\nbeforeEach(async () => {\n    fastify = Fastify();\n    await fastify.register(redirectWithMessage);\n    await fastify.register(accepts);\n    await fastify.register(errorHandling);\n\nfastify.get('/test', async (_req, _reply) => {\n      const error = Error('a very bad thing happened') as FastifyError;\n      error.statusCode = 500;\n      throw error;\n    });\n    fastify.get('/test-bad-request', async (_req, _reply) => {\n      const error = Error('a very bad thing happened') as FastifyError;\n      error.statusCode = 400;\n      throw error;\n    });\n    fastify.get('/test-csrf-token', async (_req, _reply) => {\n      const error = Error() as FastifyError;\n      error.code = 'FST_CSRF_INVALID_TOKEN';\n      error.statusCode = 403;\n      throw error;\n    });\n\nfastify.get('/test-csrf-secret', async (_req, _reply) => {\n      const error = Error() as FastifyError;\n      error.code = 'FST_CSRF_MISSING_SECRET';\n      error.statusCode = 403;\n      throw error;\n    });\n  });\n\nafterEach(async () => {\n    await fastify.close();\n    jest.clearAllMocks();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7706,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "491266f3f9d2be0aca789504eabd8aa8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
    "source_type": "git_repo",
    "title": "error-handling.test",
    "content": "throw error; }); fastify.get('/test-bad-request', async (_req, _reply) => { const error = Error('a very bad thing happened') as FastifyError; error.statusCode = 400; throw error; }); fastify.get('/test-csrf-token', async (_req, _reply) => { const error = Error() as FastifyError; error.code = 'FST_CSRF_INVALID_TOKEN'; error.statusCode = 403; throw error; }); fastify.get('/test-csrf-secret', async (_req, _reply) => { const error = Error() as FastifyError; error.code = 'FST_CSRF_MISSING_SECRET'; error.statusCode = 403; throw error; }); }); afterEach(async () => { await fastify.close(); jest.clearAllMocks(); });\n\nit('should redirect to the referer if the request does not Accept json', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        referer: 'https://www.freecodecamp.org/anything',\n        accept: 'text/plain'\n      }\n    });\n\nexpect(res.statusCode).toEqual(302);\n  });\n\nit('should add a generic flash message if it is a server error (i.e. 500+)', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        referer: 'https://www.freecodecamp.org/anything',\n        accept: 'text/plain'\n      }\n    });\n\nexpect(res.headers['location']).toEqual(\n      'https://www.freecodecamp.org/anything?' +\n        formatMessage({\n          type: 'danger',\n          content: 'flash.generic-error'\n        })\n    );\n  });\n\nit('should return a json response if the request does Accept json', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        referer: 'https://www.freecodecamp.org/anything',\n        accept: 'application/json,text/plain'\n      }\n    });\n\nexpect(res.statusCode).toEqual(500);\n    expect(res.json()).toEqual({\n      message: 'flash.generic-error',\n      type: 'danger'\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7706,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "36c18e6be4783186ac615a28eece64ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
    "source_type": "git_repo",
    "title": "error-handling.test",
    "content": "server error (i.e. 500+)', async () => { const res = await fastify.inject({ method: 'GET', url: '/test', headers: { referer: 'https://www.freecodecamp.org/anything', accept: 'text/plain' } }); expect(res.headers['location']).toEqual( 'https://www.freecodecamp.org/anything?' + formatMessage({ type: 'danger', content: 'flash.generic-error' }) ); }); it('should return a json response if the request does Accept json', async () => { const res = await fastify.inject({ method: 'GET', url: '/test', headers: { referer: 'https://www.freecodecamp.org/anything', accept: 'application/json,text/plain' } }); expect(res.statusCode).toEqual(500); expect(res.json()).toEqual({ message: 'flash.generic-error', type: 'danger' }); });\n\nit('should redirect if the request prefers text/html to json', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        referer: 'https://www.freecodecamp.org/anything',\n        // this does accept json, (via the */*), but prefers text/html\n        accept: 'text/html,*/*'\n      }\n    });\n\nexpect(res.statusCode).toEqual(302);\n  });\n\nit('should respect the error status code', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test-bad-request'\n    });\n\nexpect(res.statusCode).toEqual(400);\n  });\n\nit('should return the error message if the status is not 500 ', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test-bad-request'\n    });\n\nexpect(res.json()).toEqual({\n      message: 'a very bad thing happened',\n      type: 'danger'\n    });\n  });\n\nit('should convert CSRF errors to a generic error message', async () => {\n    const resToken = await fastify.inject({\n      method: 'GET',\n      url: '/test-csrf-token'\n    });\n    const resSecret = await fastify.inject({\n      method: 'GET',\n      url: '/test-csrf-secret'\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7706,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "f77caa7a82fd61f3286d298c30fd0069",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
    "source_type": "git_repo",
    "title": "error-handling.test",
    "content": "'GET', url: '/test-bad-request' }); expect(res.statusCode).toEqual(400); }); it('should return the error message if the status is not 500 ', async () => { const res = await fastify.inject({ method: 'GET', url: '/test-bad-request' }); expect(res.json()).toEqual({ message: 'a very bad thing happened', type: 'danger' }); }); it('should convert CSRF errors to a generic error message', async () => { const resToken = await fastify.inject({ method: 'GET', url: '/test-csrf-token' }); const resSecret = await fastify.inject({ method: 'GET', url: '/test-csrf-secret' });\n\nexpect(resToken.json()).toEqual({\n      message: 'flash.generic-error',\n      type: 'danger'\n    });\n    expect(resSecret.json()).toEqual({\n      message: 'flash.generic-error',\n      type: 'danger'\n    });\n  });\n\nit('should call fastify.log.error when an unhandled error occurs', async () => {\n    const logSpy = jest.spyOn(fastify.log, 'error');\n\nawait fastify.inject({\n      method: 'GET',\n      url: '/test'\n    });\n\nexpect(logSpy).toHaveBeenCalledWith(\n      Error('a very bad thing happened'),\n      'Error in request'\n    );\n  });\n\nit('should call fastify.log.warn when a bad request error occurs', async () => {\n    const logSpy = jest.spyOn(fastify.log, 'warn');\n\nawait fastify.inject({\n      method: 'GET',\n      url: '/test-bad-request'\n    });\n\nexpect(logSpy).toHaveBeenCalledWith(\n      Error('a very bad thing happened'),\n      'CSRF error in request'\n    );\n  });\n\nit('should NOT log when a CSRF error is thrown', async () => {\n    const errorLogSpy = jest.spyOn(fastify.log, 'error');\n    const warnLogSpy = jest.spyOn(fastify.log, 'warn');\n\nawait fastify.inject({\n      method: 'GET',\n      url: '/test-csrf-token'\n    });\n\nexpect(errorLogSpy).not.toHaveBeenCalled();\n    expect(warnLogSpy).not.toHaveBeenCalled();\n\nawait fastify.inject({\n      method: 'GET',\n      url: '/test-csrf-secret'\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7706,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d1e0a6395f6ef0018565e242638e8268",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
    "source_type": "git_repo",
    "title": "error-handling.test",
    "content": "it('should call fastify.log.warn when a bad request error occurs', async () => { const logSpy = jest.spyOn(fastify.log, 'warn'); await fastify.inject({ method: 'GET', url: '/test-bad-request' }); expect(logSpy).toHaveBeenCalledWith( Error('a very bad thing happened'), 'CSRF error in request' ); }); it('should NOT log when a CSRF error is thrown', async () => { const errorLogSpy = jest.spyOn(fastify.log, 'error'); const warnLogSpy = jest.spyOn(fastify.log, 'warn'); await fastify.inject({ method: 'GET', url: '/test-csrf-token' }); expect(errorLogSpy).not.toHaveBeenCalled(); expect(warnLogSpy).not.toHaveBeenCalled(); await fastify.inject({ method: 'GET', url: '/test-csrf-secret' });\n\nexpect(errorLogSpy).not.toHaveBeenCalled();\n    expect(warnLogSpy).not.toHaveBeenCalled();\n  });\n\ndescribe('Sentry integration', () => {\n    let mockServer: ReturnType<typeof setupServer>;\n\nbeforeAll(() => {\n      // The assumption is that Sentry is the only library making requests. Also, we\n      // only want to know if a request was made, not what it was.\n      const sentryHandler = http.post('*', () =>\n        HttpResponse.json({ success: true })\n      );\n      mockServer = setupServer(sentryHandler);\n      mockServer.listen();\n    });\n\nafterEach(() => {\n      mockServer.resetHandlers();\n    });\n\nafterAll(() => {\n      mockServer.close();\n    });\n\nconst createRequestListener = () =>\n      new Promise(resolve => {\n        mockServer.events.on('request:start', () => {\n          resolve(true);\n        });\n      });\n\nit('should capture the error with Sentry', async () => {\n      const receivedRequest = createRequestListener();\n\nawait fastify.inject({\n        method: 'GET',\n        url: '/test'\n      });\n\nexpect(await Promise.race([receivedRequest, delay(1000)])).toBe(true);\n    });\n\nit('should NOT capture CSRF token errors with Sentry', async () => {\n      const receivedRequest = createRequestListener();\n\nawait fastify.inject({\n        method: 'GET',\n        url: '/test-csrf-token'\n      });\n\nexpect(await Promise.race([receivedRequest, delay(200)])).toBeUndefined();\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7706,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "783fdb282e3ca74d877cd5e2dc31d39e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
    "source_type": "git_repo",
    "title": "error-handling.test",
    "content": "{ mockServer.resetHandlers(); }); afterAll(() => { mockServer.close(); }); const createRequestListener = () => new Promise(resolve => { mockServer.events.on('request:start', () => { resolve(true); }); }); it('should capture the error with Sentry', async () => { const receivedRequest = createRequestListener(); await fastify.inject({ method: 'GET', url: '/test' }); expect(await Promise.race([receivedRequest, delay(1000)])).toBe(true); }); it('should NOT capture CSRF token errors with Sentry', async () => { const receivedRequest = createRequestListener(); await fastify.inject({ method: 'GET', url: '/test-csrf-token' }); expect(await Promise.race([receivedRequest, delay(200)])).toBeUndefined(); });\n\nit('should NOT capture CSRF secret errors with Sentry', async () => {\n      const receivedRequest = createRequestListener();\n\nawait fastify.inject({\n        method: 'GET',\n        url: '/test-csrf-secret'\n      });\n\nexpect(await Promise.race([receivedRequest, delay(200)])).toBeUndefined();\n    });\n\nit('should NOT capture bad requests with Sentry', async () => {\n      const receivedRequest = createRequestListener();\n\nawait fastify.inject({\n        method: 'GET',\n        url: '/test-bad-request'\n      });\n\nexpect(await Promise.race([receivedRequest, delay(200)])).toBeUndefined();\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7706,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\error-handling.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "2765727a042c32bce6d8d8f70f02bb33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\mailer.ts",
    "source_type": "git_repo",
    "title": "mailer",
    "content": "import type { FastifyPluginCallback } from 'fastify';\nimport fp from 'fastify-plugin';\n\ndeclare module 'fastify' {\n  interface FastifyInstance {\n    sendEmail: SendEmail;\n  }\n}\n\nexport type SendEmailArgs = {\n  to: string;\n  from: string;\n  subject: string;\n  text: string;\n  cc?: string;\n};\n\ntype SendEmail = (args: SendEmailArgs) => Promise<void>;\n\nexport interface MailProvider {\n  send: SendEmail;\n}\n\nconst plugin: FastifyPluginCallback<{ provider: MailProvider }> = (\n  fastify,\n  options,\n  done\n) => {\n  const { provider } = options;\n\nfastify.decorate('sendEmail', async (args: SendEmailArgs) => {\n    const logger = fastify.log.child({ args });\n    logger.info('Sending Email');\n    return await provider.send(args);\n  });\n\ndone();\n};\n\nexport default fp(plugin);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 774,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\mailer.ts",
      "source_type": "git_repo"
    },
    "token_count": 192,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5ee784ab5e3ed7ee430f144c6c43a052",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\not-found.ts",
    "source_type": "git_repo",
    "title": "not-found",
    "content": "import type { FastifyPluginCallback } from 'fastify';\n\nimport fp from 'fastify-plugin';\n\nimport { getRedirectParams } from '../utils/redirection';\n\n/**\n * Plugin for handling missing endpoints.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n */\nconst fourOhFour: FastifyPluginCallback = (fastify, _options, done) => {\n  // If the request accepts JSON and does not specifically prefer text/html,\n  // this will return a 404 JSON response. Everything else will be redirected.\n  fastify.setNotFoundHandler((req, reply) => {\n    const logger = fastify.log.child({ req, res: reply });\n    logger.info('User requested path that does not exist');\n\nconst accepted = req.accepts().type(['json', 'html']);\n    if (accepted == 'json') {\n      void reply.code(404).send({ error: 'path not found' });\n    } else {\n      const { origin } = getRedirectParams(req);\n      void reply.status(302);\n      void reply.redirectWithMessage(`${origin}/404`, {\n        type: 'danger',\n        content: `We couldn't find path ${req.url}`\n      });\n    }\n  });\n  done();\n};\n\nexport default fp(fourOhFour, {\n  dependencies: ['redirect-with-message', '@fastify/accepts']\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1299,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\not-found.ts",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e3dd60e9c5761b68ed4037e087299a74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\not-found.test.ts",
    "source_type": "git_repo",
    "title": "not-found.test",
    "content": "import Fastify, { type FastifyInstance } from 'fastify';\nimport accepts from '@fastify/accepts';\n\nimport notFound from './not-found';\nimport redirectWithMessage, { formatMessage } from './redirect-with-message';\n\ndescribe('fourOhFour', () => {\n  let fastify: FastifyInstance;\n\nbeforeEach(async () => {\n    fastify = Fastify();\n    await fastify.register(redirectWithMessage);\n    await fastify.register(accepts);\n    await fastify.register(notFound);\n  });\n\nafterEach(async () => {\n    await fastify.close();\n  });\n\nit('should redirect to origin/404 if the request does not Accept json', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        referer: 'https://www.freecodecamp.org/anything',\n        accept: 'text/plain'\n      }\n    });\n\nexpect(res.headers['location']).toEqual(\n      'https://www.freecodecamp.org/404?' +\n        formatMessage({\n          type: 'danger',\n          content: \"We couldn't find path /test\"\n        })\n    );\n    expect(res.statusCode).toEqual(302);\n  });\n\nit('should return a 404 json response if the request does Accept json', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        referer: 'https://www.freecodecamp.org/anything',\n        accept: 'application/json,text/plain'\n      }\n    });\n\nexpect(res.json()).toEqual({ error: 'path not found' });\n    expect(res.statusCode).toEqual(404);\n  });\n\nit('should redirect if the request prefers text/html to json', async () => {\n    const res = await fastify.inject({\n      method: 'GET',\n      url: '/test',\n      headers: {\n        referer: 'https://www.freecodecamp.org/anything',\n        // this does accept json, (via the */*), but prefers text/html\n        accept: 'text/html,*/*'\n      }\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2089,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\not-found.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c7b45f1a591e258baa74b1599a6a7193",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\not-found.test.ts",
    "source_type": "git_repo",
    "title": "not-found.test",
    "content": "if the request does Accept json', async () => { const res = await fastify.inject({ method: 'GET', url: '/test', headers: { referer: 'https://www.freecodecamp.org/anything', accept: 'application/json,text/plain' } }); expect(res.json()).toEqual({ error: 'path not found' }); expect(res.statusCode).toEqual(404); }); it('should redirect if the request prefers text/html to json', async () => { const res = await fastify.inject({ method: 'GET', url: '/test', headers: { referer: 'https://www.freecodecamp.org/anything', // this does accept json, (via the */*), but prefers text/html accept: 'text/html,*/*' } });\n\nexpect(res.headers['location']).toEqual(\n      'https://www.freecodecamp.org/404?' +\n        formatMessage({\n          type: 'danger',\n          content: \"We couldn't find path /test\"\n        })\n    );\n    expect(res.statusCode).toEqual(302);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2089,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\not-found.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 219,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "291ef1d05ccee6ada4c3c73c850988e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\redirect-with-message.ts",
    "source_type": "git_repo",
    "title": "redirect-with-message",
    "content": "import { FastifyPluginCallback, type FastifyReply } from 'fastify';\nimport fp from 'fastify-plugin';\n// TODO: (POST MVP)use node's querystring and just JSON stringify the message.\n// No need for query-string on either side.\nimport qs from 'query-string';\n\ndeclare module 'fastify' {\n  interface FastifyReply {\n    redirectWithMessage: typeof redirectWithMessage;\n  }\n}\n\ntype Message = {\n  type: 'info' | 'danger' | 'success' | 'errors';\n  content: string;\n};\n\ntype MessageQuery = {\n  info?: string[];\n  danger?: string[];\n  success?: string[];\n  errors?: string[];\n};\n\n// The client expects a message like { info: ['foo'] }, { danger: ['bar'] } etc.\nconst prepareMessage = (message: Message): MessageQuery => ({\n  [message.type]: [message.content]\n});\n\nfunction redirectWithMessage(\n  this: FastifyReply,\n  url: string,\n  message: Message\n) {\n  return this.redirect(`${url}?${formatMessage(message)}`);\n}\n\n/**\n * Formats the message into a querystring.\n * @param message The message to format.\n * @returns The formatted message string.\n */\nexport function formatMessage(message: Message): string {\n  return qs.stringify(\n    {\n      messages: qs.stringify(prepareMessage(message), {\n        arrayFormat: 'index'\n      })\n    },\n    { arrayFormat: 'index' }\n  );\n}\n\nconst plugin: FastifyPluginCallback = (fastify, _options, done) => {\n  fastify.decorateReply('redirectWithMessage', redirectWithMessage);\n\ndone();\n};\n\nexport default fp(plugin, { name: 'redirect-with-message' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1480,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\redirect-with-message.ts",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "29138ed31b22e064dd4adbc61e5d144b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\security.ts",
    "source_type": "git_repo",
    "title": "security",
    "content": "import { FastifyPluginCallback } from 'fastify';\nimport fp from 'fastify-plugin';\n\nimport { FREECODECAMP_NODE_ENV } from '../utils/env';\n\nconst securityHeaders: FastifyPluginCallback = (fastify, _options, done) => {\n  // OWASP recommended headers\n  fastify.addHook('onRequest', async (req, reply) => {\n    void reply\n      .header('Cache-Control', 'no-store')\n      .header('Content-Security-Policy', \"frame-ancestors 'none'\")\n      .header('X-Content-Type-Options', 'nosniff')\n      .header('X-Frame-Options', 'DENY');\n    // TODO: Increase this gradually to 2 years. Include preload once it is\n    // at least 1 year.\n    if (FREECODECAMP_NODE_ENV === 'production') {\n      void reply.header(\n        'Strict-Transport-Security',\n        'max-age=300; includeSubDomains'\n      );\n    }\n  });\n\ndone();\n};\n\nexport default fp(securityHeaders);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 845,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\security.ts",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ee95589bf786cad7e4e6c79d00a06be4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\redirect-with-message.test.ts",
    "source_type": "git_repo",
    "title": "redirect-with-message.test",
    "content": "import Fastify, { FastifyInstance } from 'fastify';\nimport qs from 'query-string';\n\nimport redirectWithMessage from './redirect-with-message';\n\nasync function setupServer() {\n  const fastify = Fastify();\n  await fastify.register(redirectWithMessage);\n  return fastify;\n}\n\nconst isString = (value: unknown): value is string => {\n  return typeof value === 'string';\n};\n\ndescribe('redirectWithMessage plugin', () => {\n  it('should decorate reply object with redirectWithMessage method', async () => {\n    expect.assertions(3);\n\nconst fastify = await setupServer();\n\nfastify.get('/', (_req, reply) => {\n      expect(reply).toHaveProperty('redirectWithMessage');\n      expect(reply.redirectWithMessage).toBeInstanceOf(Function);\n      return { foo: 'bar' };\n    });\n\nconst res = await fastify.inject({\n      method: 'GET',\n      url: '/'\n    });\n\nexpect(res.statusCode).toEqual(200);\n  });\n\ndescribe('redirectWithMessage method', () => {\n    let fastify: FastifyInstance;\n    beforeEach(async () => {\n      fastify = await setupServer();\n    });\n\nit('should redirect to the first argument', async () => {\n      fastify.get('/', (_req, reply) => {\n        return reply.redirectWithMessage('/target', {\n          type: 'info',\n          content: 'foo'\n        });\n      });\n      const res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n\nexpect(res.headers.location).toMatch(/^\\/target/);\n      expect(res.statusCode).toEqual(302);\n    });\n\nit('should convert the second argument into a query string', async () => {\n      fastify.get('/', (_req, reply) => {\n        return reply.redirectWithMessage('/target', {\n          type: 'info',\n          content: 'foo'\n        });\n      });\n      const res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n\nexpect(res.headers.location).toMatch(/^\\/target\\?messages=info/);\n    });\n\nit('should encode the message twice when creating the query string', async () => {\n      const expectedMessage = { danger: ['foo bar'] };\n\nfastify.get('/', (_req, reply) => {\n        return reply.redirectWithMessage('/target', {\n          type: 'danger',\n          content: 'foo bar'\n        });\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2845,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\redirect-with-message.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f47a6fe95c89ed67b7171fefb4459e52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\redirect-with-message.test.ts",
    "source_type": "git_repo",
    "title": "redirect-with-message.test",
    "content": "it('should convert the second argument into a query string', async () => { fastify.get('/', (_req, reply) => { return reply.redirectWithMessage('/target', { type: 'info', content: 'foo' }); }); const res = await fastify.inject({ method: 'GET', url: '/' }); expect(res.headers.location).toMatch(/^\\/target\\?messages=info/); }); it('should encode the message twice when creating the query string', async () => { const expectedMessage = { danger: ['foo bar'] }; fastify.get('/', (_req, reply) => { return reply.redirectWithMessage('/target', { type: 'danger', content: 'foo bar' }); });\n\nconst res = await fastify.inject({\n        method: 'GET',\n        url: '/'\n      });\n      if (!isString(res.headers.location))\n        throw new Error('Location is not a string');\n      const { search } = new URL(res.headers.location, 'http://localhost');\n\n// The query string itself is encoded:\n      const { messages } = qs.parse(search, { arrayFormat: 'index' });\n      if (!isString(messages)) throw new Error('Messages is not a string');\n\n// As is the message embedded in it:\n      expect(qs.parse(messages, { arrayFormat: 'index' })).toEqual(\n        expectedMessage\n      );\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2845,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\redirect-with-message.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2b34c9c23139715e5d7accb1a3b12a78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\types.ts",
    "source_type": "git_repo",
    "title": "types",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const genericError = Type.Object({\n  message: Type.Literal('flash.generic-error'),\n  type: Type.Literal('danger')\n});\n\nexport const isCertMap = Type.Object({\n  isRespWebDesignCert: Type.Boolean(),\n  isJsAlgoDataStructCert: Type.Boolean(),\n  isFrontEndLibsCert: Type.Boolean(),\n  is2018DataVisCert: Type.Boolean(),\n  isApisMicroservicesCert: Type.Boolean(),\n  isInfosecQaCert: Type.Boolean(),\n  isQaCertV7: Type.Boolean(),\n  isInfosecCertV7: Type.Boolean(),\n  isFrontEndCert: Type.Boolean(),\n  isBackEndCert: Type.Boolean(),\n  isDataVisCert: Type.Boolean(),\n  isFullStackCert: Type.Boolean(),\n  isSciCompPyCertV7: Type.Boolean(),\n  isDataAnalysisPyCertV7: Type.Boolean(),\n  isMachineLearningPyCertV7: Type.Boolean(),\n  isRelationalDatabaseCertV8: Type.Boolean(),\n  isCollegeAlgebraPyCertV8: Type.Boolean(),\n  isFoundationalCSharpCertV8: Type.Boolean()\n});\n\nexport const file = Type.Object({\n  contents: Type.String(),\n  key: Type.String(),\n  ext: Type.String(),\n  name: Type.String(),\n  history: Type.Array(Type.String())\n});\n\n// This is only used for serialization, so should not use format. Reason being,\n// the serializer's job is simply to create JSON strings, not to validate the\n// data.\nexport const savedChallenge = Type.Object({\n  id: Type.String(),\n  files: Type.Array(file),\n  lastSavedDate: Type.Number()\n});\n\nexport const examResults = Type.Object({\n  numberOfCorrectAnswers: Type.Number(),\n  numberOfQuestionsInExam: Type.Number(),\n  percentCorrect: Type.Number(),\n  passingPercent: Type.Number(),\n  passed: Type.Boolean(),\n  examTimeInSeconds: Type.Number()\n});\n\nexport const surveyTitles = Type.Union([\n  Type.Literal('Foundational C# with Microsoft Survey')\n]);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2238,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\types.ts",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4d9ec329ae46ca360fd854663964384d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\types.ts",
    "source_type": "git_repo",
    "title": "types",
    "content": "name: Type.String(), history: Type.Array(Type.String()) }); // This is only used for serialization, so should not use format. Reason being, // the serializer's job is simply to create JSON strings, not to validate the // data. export const savedChallenge = Type.Object({ id: Type.String(), files: Type.Array(file), lastSavedDate: Type.Number() }); export const examResults = Type.Object({ numberOfCorrectAnswers: Type.Number(), numberOfQuestionsInExam: Type.Number(), percentCorrect: Type.Number(), passingPercent: Type.Number(), passed: Type.Boolean(), examTimeInSeconds: Type.Number() }); export const surveyTitles = Type.Union([ Type.Literal('Foundational C# with Microsoft Survey') ]);\n\nexport const profileUI = Type.Object({\n  isLocked: Type.Optional(Type.Boolean()),\n  showAbout: Type.Optional(Type.Boolean()),\n  showCerts: Type.Optional(Type.Boolean()),\n  showDonation: Type.Optional(Type.Boolean()),\n  showHeatMap: Type.Optional(Type.Boolean()),\n  showLocation: Type.Optional(Type.Boolean()),\n  showName: Type.Optional(Type.Boolean()),\n  showPoints: Type.Optional(Type.Boolean()),\n  showPortfolio: Type.Optional(Type.Boolean()),\n  showTimeLine: Type.Optional(Type.Boolean())\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2238,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\types.ts",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "961558ddb6f81d493739d5aff6357f60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\shadow-capture.ts",
    "source_type": "git_repo",
    "title": "shadow-capture",
    "content": "import { randomUUID } from 'crypto';\nimport { appendFileSync, mkdirSync } from 'fs';\nimport { join } from 'path';\nimport type { FastifyPluginCallback } from 'fastify';\n\nimport fp from 'fastify-plugin';\nimport { FastifyReply } from 'fastify/types/reply';\nimport { FastifyRequest } from 'fastify/types/request';\n\nconst LOGS_DIRECTORY = 'logs';\nconst REQUEST_CAPTURE_FILE = 'request-capture.jsonl';\nconst RESPONSE_CAPTURE_FILE = 'response-capture.jsonl';\n\nlet REQUEST_BUFFER: unknown[] = [];\nlet RESPONSE_BUFFER: unknown[] = [];\n\n/**\n * Plugin for capturing requests and responses to allow shadow testing.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n */\nconst shadowCapture: FastifyPluginCallback = (fastify, _options, done) => {\n  mkdirSync(LOGS_DIRECTORY, { recursive: true });\n  fastify.addHook('onRequest', (req, rep, done) => {\n    // Attach timestamp at beginning of lifecycle\n    // @ts-expect-error Exists\n    req.__timestamp = Date.now();\n\n// Give request and response same id to match.\n    const id = randomUUID();\n    // @ts-expect-error Exists\n    req.__id = id;\n    // @ts-expect-error Exists\n    rep.__id = id;\n    done();\n  });\n\n// Body is only included after `Parsing` lifecycle\n  fastify.addHook('preValidation', (req, rep, done) => {\n    captureRequest(req);\n    done();\n  });\n\nfastify.addHook('onSend', async (_req, rep, payload) => {\n    // @ts-expect-error Exists\n    rep.__payload = payload;\n    return payload;\n  });\n\nfastify.addHook('onResponse', (_req, rep, done) => {\n    captureReply(rep);\n    done();\n  });\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3883,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\shadow-capture.ts",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e95454a19b5c3e6d3b3e2a40e05b1173",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\shadow-capture.ts",
    "source_type": "git_repo",
    "title": "shadow-capture",
    "content": "@ts-expect-error Exists req.__timestamp = Date.now(); // Give request and response same id to match. const id = randomUUID(); // @ts-expect-error Exists req.__id = id; // @ts-expect-error Exists rep.__id = id; done(); }); // Body is only included after `Parsing` lifecycle fastify.addHook('preValidation', (req, rep, done) => { captureRequest(req); done(); }); fastify.addHook('onSend', async (_req, rep, payload) => { // @ts-expect-error Exists rep.__payload = payload; return payload; }); fastify.addHook('onResponse', (_req, rep, done) => { captureReply(rep); done(); }); done(); };\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nfunction captureRequest(req: FastifyRequest) {\n  const savedRequest = {\n    // @ts-expect-error Exists\n    id: req.__id,\n    // @ts-expect-error Exists\n    timestamp: req.__timestamp,\n    url: req.url,\n    headers: omit(req.headers, 'cookie'),\n    cookies: include(req.cookies, '_csrf', 'csrf_token', 'jwt_access_token'),\n    user: req.user,\n    body: req.body\n  };\n\nif (REQUEST_BUFFER.length > 10) {\n    appendFileSync(\n      join(LOGS_DIRECTORY, REQUEST_CAPTURE_FILE),\n      REQUEST_BUFFER.map(rb => JSON.stringify(rb)).join('\\n') + '\\n'\n    );\n    REQUEST_BUFFER = [savedRequest];\n  } else {\n    REQUEST_BUFFER.push(savedRequest);\n  }\n}\n\nfunction captureReply(rep: FastifyReply) {\n  const savedReply = {\n    // @ts-expect-error Exists\n    id: rep.__id,\n    headers: rep.getHeaders(),\n    timestamp: Date.now(),\n    // @ts-expect-error Exists\n    payload: rep.__payload,\n    statusCode: rep.statusCode\n  };\n\nif (RESPONSE_BUFFER.length > 10) {\n    appendFileSync(\n      join(LOGS_DIRECTORY, RESPONSE_CAPTURE_FILE),\n      RESPONSE_BUFFER.map(rb => JSON.stringify(rb)).join('\\n') + '\\n'\n    );\n    RESPONSE_BUFFER = [savedReply];\n  } else {\n    RESPONSE_BUFFER.push(savedReply);\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3883,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\shadow-capture.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "96c26884ba4485ffb213caa2f50d9a6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\plugins\\shadow-capture.ts",
    "source_type": "git_repo",
    "title": "shadow-capture",
    "content": "user: req.user, body: req.body }; if (REQUEST_BUFFER.length > 10) { appendFileSync( join(LOGS_DIRECTORY, REQUEST_CAPTURE_FILE), REQUEST_BUFFER.map(rb => JSON.stringify(rb)).join('\\n') + '\\n' ); REQUEST_BUFFER = [savedRequest]; } else { REQUEST_BUFFER.push(savedRequest); } } function captureReply(rep: FastifyReply) { const savedReply = { // @ts-expect-error Exists id: rep.__id, headers: rep.getHeaders(), timestamp: Date.now(), // @ts-expect-error Exists payload: rep.__payload, statusCode: rep.statusCode }; if (RESPONSE_BUFFER.length > 10) { appendFileSync( join(LOGS_DIRECTORY, RESPONSE_CAPTURE_FILE), RESPONSE_BUFFER.map(rb => JSON.stringify(rb)).join('\\n') + '\\n' ); RESPONSE_BUFFER = [savedReply]; } else { RESPONSE_BUFFER.push(savedReply); } }\n\n/**\n * Returns a subset of the given object with the values or properties given removed.\n * @param obj - An array or an object literal.\n * @param vals - Items or properties to exclude from `obj`.\n * @returns Subset of `obj`.\n */\nfunction omit(obj: Record<string, unknown> | unknown[], ...vals: unknown[]) {\n  if (Array.isArray(obj)) {\n    return obj.filter(o => !vals.includes(o));\n  } else {\n    return Object.keys(obj)\n      .filter(k => {\n        return !vals.includes(k);\n      })\n      .reduce((acc, curr) => ({ ...acc, [curr]: obj[curr] }), {});\n  }\n}\n\nfunction include(obj: Record<string, unknown> | unknown[], ...vals: unknown[]) {\n  if (Array.isArray(obj)) {\n    return obj.filter(o => vals.includes(o));\n  } else {\n    return Object.keys(obj)\n      .filter(k => {\n        return vals.includes(k);\n      })\n      .reduce((acc, curr) => ({ ...acc, [curr]: obj[curr] }), {});\n  }\n}\n\nexport default fp(shadowCapture);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3883,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\plugins\\shadow-capture.ts",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "61a6e30195de31836837d1884a4652af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\allowed-origins.ts",
    "source_type": "git_repo",
    "title": "allowed-origins",
    "content": "import { HOME_LOCATION, FREECODECAMP_NODE_ENV } from './env';\n\nconst ALLOWED_ORIGINS = [\n  'https://www.freecodecamp.dev',\n  'https://www.freecodecamp.org',\n  // pretty sure the rest of these can go?\n  'https://beta.freecodecamp.dev',\n  'https://beta.freecodecamp.org',\n  'https://chinese.freecodecamp.dev',\n  'https://chinese.freecodecamp.org'\n];\n\nexport const allowedOrigins =\n  FREECODECAMP_NODE_ENV === 'development'\n    ? [...ALLOWED_ORIGINS, HOME_LOCATION]\n    : ALLOWED_ORIGINS;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 486,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\allowed-origins.ts",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f13c7534fe65bd2725f972520605286d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\create-user.ts",
    "source_type": "git_repo",
    "title": "create-user",
    "content": "import crypto from 'node:crypto';\n\nimport { customAlphabet } from 'nanoid';\n\nexport const nanoidCharSet =\n  '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst nanoid = customAlphabet(nanoidCharSet, 21);\n\n/**\n * Creates the necessary data to reset a user's properties.\n * @returns Default data for resetting a user's properties.\n */\nexport const createResetProperties = () => ({\n  completedChallenges: [], // TODO(Post-MVP): Omit this from the document? (prisma will always return [])\n  completedExams: [], // TODO(Post-MVP): Omit this from the document? (prisma will always return [])\n  currentChallengeId: '',\n  is2018DataVisCert: false,\n  is2018FullStackCert: false,\n  isApisMicroservicesCert: false,\n  isBackEndCert: false,\n  isCollegeAlgebraPyCertV8: false,\n  isDataAnalysisPyCertV7: false,\n  isDataVisCert: false,\n  isFoundationalCSharpCertV8: false,\n  isFrontEndCert: false,\n  isFrontEndLibsCert: false,\n  isFullStackCert: false,\n  isInfosecCertV7: false,\n  isInfosecQaCert: false,\n  isJsAlgoDataStructCert: false,\n  isJsAlgoDataStructCertV8: false,\n  isMachineLearningPyCertV7: false,\n  isQaCertV7: false,\n  isRelationalDatabaseCertV8: false,\n  isRespWebDesignCert: false,\n  isSciCompPyCertV7: false,\n  needsModeration: false,\n  partiallyCompletedChallenges: [], // TODO(Post-MVP): Omit this from the document? (prisma will always return [])\n  progressTimestamps: [Date.now()], // TODO(Post-MVP): This may need normalising before we can omit it. Also, does it need to start with a timestamp?\n  savedChallenges: [] // TODO(Post-MVP): Omit this from the document? (prisma will always return [])\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3293,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\create-user.ts",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e647a825b1a740928e4da9f0f46c3dd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\create-user.ts",
    "source_type": "git_repo",
    "title": "create-user",
    "content": "false, isFrontEndLibsCert: false, isFullStackCert: false, isInfosecCertV7: false, isInfosecQaCert: false, isJsAlgoDataStructCert: false, isJsAlgoDataStructCertV8: false, isMachineLearningPyCertV7: false, isQaCertV7: false, isRelationalDatabaseCertV8: false, isRespWebDesignCert: false, isSciCompPyCertV7: false, needsModeration: false, partiallyCompletedChallenges: [], // TODO(Post-MVP): Omit this from the document? (prisma will always return []) progressTimestamps: [Date.now()], // TODO(Post-MVP): This may need normalising before we can omit it. Also, does it need to start with a timestamp? savedChallenges: [] // TODO(Post-MVP): Omit this from the document? (prisma will always return []) });\n\n/**\n * Creates the necessary data to create a new user.\n * @param email The email address of the new user.\n * @returns Default data for a new user.\n */\nexport function createUserInput(email: string) {\n  const username = 'fcc-' + crypto.randomUUID();\n  const externalId = crypto.randomUUID();\n  // This explicitly includes all array fields. This is not strictly necessary -\n  // Prisma will return an empty array even if the property is missing, but it's\n  // probably best to add them to the document, at least until we normalise the\n  // data.\n  return {\n    about: '',\n    acceptedPrivacyTerms: false,\n    donationEmails: [], // TODO(Post-MVP): Omit this from the document? (prisma will always return [])\n    email,\n    emailVerified: true, // this should be true until a user changes their email address\n    // TODO(Post-MVP): remove externalId?\n    externalId,\n    isBanned: false,\n    isCheater: false,\n    isDonating: false,\n    isHonest: false,\n    keyboardShortcuts: false,\n    location: '',\n    name: '',\n    unsubscribeId: nanoid(),\n    picture: '',\n    portfolio: [], // TODO(Post-MVP): Omit this from the document? (prisma will always return [])\n    profileUI: {\n      isLocked: false,\n      showAbout: false,\n      showCerts: false,\n      showDonation: false,\n      showHeatMap: false,\n      showLocation: false,\n      showName: false,\n      showPoints: false,\n      showPortfolio: false,\n      showTimeLine: false\n    },\n    sendQuincyEmail: false,\n    theme: 'default',\n    username,\n    usernameDisplay: username,\n    yearsTopContributor: [], // TODO: Omit this from the document? (prisma will always return []),\n    ...createResetProperties()\n  };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3293,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\create-user.ts",
      "source_type": "git_repo"
    },
    "token_count": 602,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0fd170b582f0b712e3933e26ae984081",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\email-templates.ts",
    "source_type": "git_repo",
    "title": "email-templates",
    "content": "import { user } from '@prisma/client';\n\n/**\n * Generates an email template for reporting a user profile.\n * @param reporter - The user who is reporting the profile.\n * @param abuser - The username of the user being reported.\n * @param reportDesc - The description of the report.\n * @returns - The generated email template.\n */\nexport const generateReportEmail = (\n  reporter: user,\n  abuser: user,\n  reportDesc: string\n) => {\n  return `\nHello Team,\n\nThis is to report the profile of ${abuser.username}. ID: ${abuser.id}.\n\nReport Details:\n\n${reportDesc}\n\nReported by:\nID: ${reporter.id}\nUsername: ${reporter.username}\nName:${reporter.name ? ' ' + reporter.name : ''}\nEmail: ${reporter.email}\n\nThanks and regards,\n${reporter.name ?? reporter.username}`;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 756,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\email-templates.ts",
      "source_type": "git_repo"
    },
    "token_count": 182,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2643c9ab950c23fa31fe12ab2ea743a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
    "source_type": "git_repo",
    "title": "common-challenge-functions",
    "content": "import type { ExamResults, user, Prisma } from '@prisma/client';\nimport { FastifyInstance } from 'fastify';\nimport { omit, pick } from 'lodash';\nimport { challengeTypes } from '../../../shared/config/challenge-types';\nimport { getChallenges } from './get-challenges';\nimport { normalizeDate } from './normalize';\n\nexport const jsCertProjectIds = [\n  'aaa48de84e1ecc7c742e1124',\n  'a7f4d8f2483413a6ce226cac',\n  '56533eb9ac21ba0edf2244e2',\n  'aff0395860f5d3034dc0bfc9',\n  'aa2e6f85cab2ab736c9a9b24'\n];\n\nexport const multifileCertProjectIds = getChallenges()\n  .filter(c => c.challengeType === challengeTypes.multifileCertProject)\n  .map(c => c.id);\n\nexport const multifilePythonCertProjectIds = getChallenges()\n  .filter(c => c.challengeType === challengeTypes.multifilePythonCertProject)\n  .map(c => c.id);\n\nexport const msTrophyChallenges = getChallenges()\n  .filter(challenge => challenge.challengeType === challengeTypes.msTrophy)\n  .map(({ id, msTrophyId }) => ({ id, msTrophyId }));\n\ntype SavedChallengeFile = {\n  key: string;\n  ext: string; // NOTE: This is Ext type in client\n  name: string;\n  history: string[];\n  contents: string;\n};\n\ntype SavedChallenge = {\n  id: string;\n  lastSavedDate: number;\n  files: SavedChallengeFile[];\n};\n\n// TODO: Confirm this type - read comments below\ntype CompletedChallengeFile = {\n  key: string;\n  ext: string; // NOTE: This is Ext type in client\n  name: string;\n  contents: string;\n\n// These values are present in prop-types and ajax.ts builds with it\n  // editableRegionBoundaries?: number[];\n  // usesMultifileEditor?: boolean;\n  // error: null | string | unknown;\n  // head: string;\n  // tail: string;\n  // seed: string;\n  // id: string;\n  // history: string[];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7700,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "a2fbc963e0c5ba89441821a49ad0babb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
    "source_type": "git_repo",
    "title": "common-challenge-functions",
    "content": "id: string; lastSavedDate: number; files: SavedChallengeFile[]; }; // TODO: Confirm this type - read comments below type CompletedChallengeFile = { key: string; ext: string; // NOTE: This is Ext type in client name: string; contents: string; // These values are present in prop-types and ajax.ts builds with it // editableRegionBoundaries?: number[]; // usesMultifileEditor?: boolean; // error: null | string | unknown; // head: string; // tail: string; // seed: string; // id: string; // history: string[];\n\n// This value is present in prisma schema\n  path?: string | null;\n};\n\n// TODO: Should probably prefer `import{CompletedChallenge}from'@prisma/client'` instead of defining it here\nexport type CompletedChallenge = {\n  id: string;\n  solution?: string | null;\n  githubLink?: string | null;\n  challengeType?: number | null;\n  completedDate: number;\n  isManuallyApproved?: boolean | null;\n  files?: CompletedChallengeFile[];\n  examResults?: ExamResults | null;\n};\n\n/**\n * Helper function to save a user's challenge data. Used in challenge\n * submission endpoints.\n *\n * @param challengeId The id of the submitted challenge.\n * @param savedChallenges The user's saved challenges array.\n * @param challenge The saveble challenge.\n * @returns Update or push the saved challenges.\n */\nexport function saveUserChallengeData(\n  challengeId: string,\n  savedChallenges: SavedChallenge[],\n  challenge: Omit<SavedChallenge, 'lastSavedDate'>\n) {\n  const challengeToSave: SavedChallenge = {\n    id: challengeId,\n    lastSavedDate: Date.now(),\n    files: challenge.files?.map(file =>\n      pick(file, ['contents', 'key', 'name', 'ext', 'history'])\n    )\n  };\n\nconst savedIndex = savedChallenges.findIndex(({ id }) => challengeId === id);\n\nif (savedIndex >= 0) {\n    savedChallenges[savedIndex] = challengeToSave;\n  } else {\n    savedChallenges.push(challengeToSave);\n  }\n\nreturn savedChallenges;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7700,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "02c5294b8269050e2ac30f62f8302c01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
    "source_type": "git_repo",
    "title": "common-challenge-functions",
    "content": "saved challenges array. * @param challenge The saveble challenge. * @returns Update or push the saved challenges. */ export function saveUserChallengeData( challengeId: string, savedChallenges: SavedChallenge[], challenge: Omit<SavedChallenge, 'lastSavedDate'> ) { const challengeToSave: SavedChallenge = { id: challengeId, lastSavedDate: Date.now(), files: challenge.files?.map(file => pick(file, ['contents', 'key', 'name', 'ext', 'history']) ) }; const savedIndex = savedChallenges.findIndex(({ id }) => challengeId === id); if (savedIndex >= 0) { savedChallenges[savedIndex] = challengeToSave; } else { savedChallenges.push(challengeToSave); } return savedChallenges; }\n\n/**\n * Helper function to update a user's challenge data. Used in challenge\n * submission endpoints.\n * TODO: Keep refactoring. This function does too much.\n * @param fastify The Fastify instance.\n * @param user The existing user record.\n * @param challengeId The id of the submitted challenge.\n * @param _completedChallenge The challenge submission.\n * @returns Information about the update.\n */\nexport async function updateUserChallengeData(\n  fastify: FastifyInstance,\n  user: Pick<\n    user,\n    | 'id'\n    | 'completedChallenges'\n    | 'needsModeration'\n    | 'savedChallenges'\n    | 'progressTimestamps'\n    | 'partiallyCompletedChallenges'\n  >,\n  challengeId: string,\n  _completedChallenge: CompletedChallenge\n) {\n  const { files, completedDate: newProgressTimeStamp = Date.now() } =\n    _completedChallenge;\n  let completedChallenge: CompletedChallenge;\n\nif (\n    jsCertProjectIds.includes(challengeId) ||\n    multifileCertProjectIds.includes(challengeId) ||\n    multifilePythonCertProjectIds.includes(challengeId)\n  ) {\n    completedChallenge = {\n      ..._completedChallenge,\n      files: files?.map(\n        file =>\n          pick(file, [\n            'contents',\n            'key',\n            'index',\n            'name',\n            'path',\n            'ext'\n          ]) as CompletedChallengeFile\n      ),\n      completedDate: normalizeDate(_completedChallenge.completedDate)\n    };\n  } else {\n    completedChallenge = omit(_completedChallenge, ['files']);\n  }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7700,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "7dc65f0afe7984258aefaeab781d1fb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
    "source_type": "git_repo",
    "title": "common-challenge-functions",
    "content": "FastifyInstance, user: Pick< user, | 'id' | 'completedChallenges' | 'needsModeration' | 'savedChallenges' | 'progressTimestamps' | 'partiallyCompletedChallenges' >, challengeId: string, _completedChallenge: CompletedChallenge ) { const { files, completedDate: newProgressTimeStamp = Date.now() } = _completedChallenge; let completedChallenge: CompletedChallenge; if ( jsCertProjectIds.includes(challengeId) || multifileCertProjectIds.includes(challengeId) || multifilePythonCertProjectIds.includes(challengeId) ) { completedChallenge = { ..._completedChallenge, files: files?.map( file => pick(file, [ 'contents', 'key', 'index', 'name', 'path', 'ext' ]) as CompletedChallengeFile ), completedDate: normalizeDate(_completedChallenge.completedDate) }; } else { completedChallenge = omit(_completedChallenge, ['files']); }\n\nconst {\n    completedChallenges = [],\n    needsModeration = false,\n    savedChallenges = [],\n    progressTimestamps = [],\n    partiallyCompletedChallenges = []\n  } = user;\n\nlet savedChallengesUpdate: Prisma.userUpdateInput['savedChallenges'];\n\nconst oldChallenge = completedChallenges.find(({ id }) => challengeId === id);\n  const alreadyCompleted = !!oldChallenge;\n\nconst finalChallenge = alreadyCompleted\n    ? {\n        ...completedChallenge,\n        completedDate: normalizeDate(oldChallenge.completedDate)\n      }\n    : completedChallenge;\n\n// TODO(Post-MVP): prevent concurrent completions of the same challenge by\n  // using optimistic concurrency control. i.e. the update should simultaneously\n  // check and update some property of the user record such that the same update\n  // can't be applied twice.\n  const userCompletedChallenges = alreadyCompleted\n    ? completedChallenges.map(x =>\n        x.id === challengeId\n          ? finalChallenge\n          : { ...x, completedDate: normalizeDate(x.completedDate) }\n      )\n    : { push: finalChallenge };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7700,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "25892792c4b73a4a8cf47c1af09aced1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
    "source_type": "git_repo",
    "title": "common-challenge-functions",
    "content": "const finalChallenge = alreadyCompleted ? { ...completedChallenge, completedDate: normalizeDate(oldChallenge.completedDate) } : completedChallenge; // TODO(Post-MVP): prevent concurrent completions of the same challenge by // using optimistic concurrency control. i.e. the update should simultaneously // check and update some property of the user record such that the same update // can't be applied twice. const userCompletedChallenges = alreadyCompleted ? completedChallenges.map(x => x.id === challengeId ? finalChallenge : { ...x, completedDate: normalizeDate(x.completedDate) } ) : { push: finalChallenge };\n\n// We can't use push, because progressTimestamps is a JSON blob and, until\n  // we convert it to an array, push is not available. Since this could result\n  // in the completedChallenges and progressTimestamps arrays being out of sync,\n  // we should prioritize normalizing the data structure.\n  const userProgressTimestamps =\n    !alreadyCompleted && progressTimestamps && Array.isArray(progressTimestamps)\n      ? [...progressTimestamps, newProgressTimeStamp]\n      : progressTimestamps;\n\nif (\n    multifileCertProjectIds.includes(challengeId) ||\n    multifilePythonCertProjectIds.includes(challengeId)\n  ) {\n    const challengeToSave: SavedChallenge = {\n      id: challengeId,\n      lastSavedDate: newProgressTimeStamp,\n      files: files?.map(file =>\n        pick(file, ['contents', 'key', 'name', 'ext', 'history'])\n      ) as SavedChallengeFile[]\n    };\n\nconst isSaved = savedChallenges.some(({ id }) => challengeId === id);\n\nsavedChallengesUpdate = isSaved\n      ? savedChallenges.map(x => (x.id === challengeId ? challengeToSave : x))\n      : { push: challengeToSave };\n  }\n\n// remove from partiallyCompleted on submit\n  const userPartiallyCompletedChallenges = partiallyCompletedChallenges.filter(\n    challenge => challenge.id !== challengeId\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7700,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "6b63f116fbb7bb03c8336a229019370f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
    "source_type": "git_repo",
    "title": "common-challenge-functions",
    "content": ": progressTimestamps; if ( multifileCertProjectIds.includes(challengeId) || multifilePythonCertProjectIds.includes(challengeId) ) { const challengeToSave: SavedChallenge = { id: challengeId, lastSavedDate: newProgressTimeStamp, files: files?.map(file => pick(file, ['contents', 'key', 'name', 'ext', 'history']) ) as SavedChallengeFile[] }; const isSaved = savedChallenges.some(({ id }) => challengeId === id); savedChallengesUpdate = isSaved ? savedChallenges.map(x => (x.id === challengeId ? challengeToSave : x)) : { push: challengeToSave }; } // remove from partiallyCompleted on submit const userPartiallyCompletedChallenges = partiallyCompletedChallenges.filter( challenge => challenge.id !== challengeId );\n\nconst { savedChallenges: userSavedChallenges } =\n    await fastify.prisma.user.update({\n      where: { id: user.id },\n      data: {\n        completedChallenges: userCompletedChallenges,\n        // TODO: `needsModeration` should be handled closer to source, because it exists in 3 states: true, false, undefined/null\n        //       `undefined` in Prisma is a no-op\n        needsModeration: needsModeration || undefined,\n        savedChallenges: savedChallengesUpdate,\n        progressTimestamps: userProgressTimestamps,\n        partiallyCompletedChallenges: userPartiallyCompletedChallenges\n      },\n      select: {\n        savedChallenges: true\n      }\n    });\n\nreturn {\n    alreadyCompleted,\n    completedDate: finalChallenge.completedDate,\n    userSavedChallenges\n  };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7700,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\common-challenge-functions.ts",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "2b1fef3b95a3a9e68e4f410b428edb2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\error-formatting.ts",
    "source_type": "git_repo",
    "title": "error-formatting",
    "content": "import { ErrorObject } from 'ajv';\n\ntype FormattedError = {\n  type: 'error';\n  message: string;\n};\n\n// TODO(Post-MVP): Normalize error responses (either msg or message, not both)\ntype CodeRoadError = {\n  type: 'error';\n  msg: string;\n};\n\nconst getError = (errors: ErrorObject[]): ErrorObject => {\n  // This is a guard against accidentally enabling allErrors in ajv and making\n  // the server more vulnerable to DOS.\n  const error = errors[0];\n  if (!error || errors.length !== 1) {\n    throw new Error(\n      'Bad Argument: the array of errors must have exactly one element.'\n    );\n  }\n  return error;\n};\n\n/**\n * Format validation errors for /project-completed.\n *\n * @param errors An array of validation errors.\n * @returns Formatted errors that can be used in the response.\n */\nexport const formatProjectCompletedValidation = (\n  errors: ErrorObject[]\n): FormattedError => {\n  const error = getError(errors);\n\n// TODO: split this into two functions. There's no need for it to handle both\n  // /project-completed and /save-challenge\n  return error.instancePath === '' &&\n    error.params.missingProperty === 'solution'\n    ? {\n        type: 'error',\n        message:\n          'You have not provided the valid links for us to inspect your work.'\n      }\n    : {\n        type: 'error',\n        message: 'That does not appear to be a valid challenge submission.'\n      };\n};\n\n/**\n * Format validation errors for /coderoad-challenge-completed.\n *\n * @param errors An array of validation errors.\n * @returns Formatted errors that can be used in the response.\n */\nexport const formatCoderoadChallengeCompletedValidation = (\n  errors: ErrorObject[]\n): CodeRoadError => {\n  const error = getError(errors);\n\n// TODO(Post-MVP): Return error saying that the body is not an object.\n  if (error.instancePath === '' && error.message === 'must be object')\n    return { type: 'error', msg: `'tutorialId' not found in request body` };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2265,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\error-formatting.ts",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c7e227da4c16a9ba1a928e981f712ead",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\error-formatting.ts",
    "source_type": "git_repo",
    "title": "error-formatting",
    "content": "* Format validation errors for /coderoad-challenge-completed. * * @param errors An array of validation errors. * @returns Formatted errors that can be used in the response. */ export const formatCoderoadChallengeCompletedValidation = ( errors: ErrorObject[] ): CodeRoadError => { const error = getError(errors); // TODO(Post-MVP): Return error saying that the body is not an object. if (error.instancePath === '' && error.message === 'must be object') return { type: 'error', msg: `'tutorialId' not found in request body` };\n\nif (\n    error.instancePath === '' &&\n    error.params.missingProperty === 'coderoad-user-token'\n  ) {\n    return {\n      type: 'error',\n      msg: `'Coderoad-User-Token' not found in request headers`\n    };\n  } else {\n    // by process of elimination:\n    return { type: 'error', msg: `'tutorialId' not found in request body` };\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2265,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\error-formatting.ts",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8a1f26fbbde711b401502e4952f4a4f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
    "source_type": "git_repo",
    "title": "exam-schemas",
    "content": "import { Answer, Exam, Question, ExamResults } from '@prisma/client';\nimport Joi from 'joi';\nimport { GeneratedExam, UserExam } from './exam-types';\n\nconst nanoIdRE = new RegExp('[a-z0-9]{10}');\nconst objectIdRE = new RegExp('^[0-9a-fA-F]{24}$');\n\n// Exam from database schema\nconst DbPrerequisitesJoi = Joi.object().keys({\n  id: Joi.string().regex(objectIdRE).required(),\n  title: Joi.string()\n});\n\nconst DbAnswerJoi = Joi.object().keys({\n  id: Joi.string().regex(nanoIdRE).required(),\n  deprecated: Joi.bool().allow(null),\n  answer: Joi.string().required()\n});\n\nconst DbQuestionJoi = Joi.object().keys({\n  id: Joi.string().regex(nanoIdRE).required(),\n  question: Joi.string().required(),\n  deprecated: Joi.bool().allow(null),\n  wrongAnswers: Joi.array()\n    .items(DbAnswerJoi)\n    .required()\n    .custom((value: Answer[], helpers) => {\n      const nonDeprecatedCount = value.reduce(\n        (count: number, answer: Answer) =>\n          answer.deprecated ? count : count + 1,\n        0\n      );\n      const minimumAnswers = 4;\n\nif (nonDeprecatedCount < minimumAnswers) {\n        return helpers.message({\n          en: `'wrongAnswers' must have at least ${minimumAnswers} non-deprecated answers.`\n        });\n      }\n\nreturn value;\n    }),\n  correctAnswers: Joi.array()\n    .items(DbAnswerJoi)\n    .required()\n    .custom((value: Answer[], helpers) => {\n      const nonDeprecatedCount = value.reduce(\n        (count: number, answer: Answer) =>\n          answer.deprecated ? count : count + 1,\n        0\n      );\n      const minimumAnswers = 1;\n\nif (nonDeprecatedCount < minimumAnswers) {\n        return helpers.message({\n          en: `'correctAnswers' must have at least ${minimumAnswers} non-deprecated answer.`\n        });\n      }\n\nreturn value;\n    })\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5589,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "aae792fd5b8a90b37ab164a0d78884c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
    "source_type": "git_repo",
    "title": "exam-schemas",
    "content": "= 4; if (nonDeprecatedCount < minimumAnswers) { return helpers.message({ en: `'wrongAnswers' must have at least ${minimumAnswers} non-deprecated answers.` }); } return value; }), correctAnswers: Joi.array() .items(DbAnswerJoi) .required() .custom((value: Answer[], helpers) => { const nonDeprecatedCount = value.reduce( (count: number, answer: Answer) => answer.deprecated ? count : count + 1, 0 ); const minimumAnswers = 1; if (nonDeprecatedCount < minimumAnswers) { return helpers.message({ en: `'correctAnswers' must have at least ${minimumAnswers} non-deprecated answer.` }); } return value; }) });\n\nconst examFromDbSchema = Joi.object().keys({\n  // TODO: make sure _id and title match what's in the challenge markdown file\n  id: Joi.string().regex(objectIdRE).required(),\n  title: Joi.string().required(),\n  numberOfQuestionsInExam: Joi.number()\n    .min(1)\n    .max(\n      Joi.ref('questions', {\n        adjust: (questions: Question[]) => {\n          const nonDeprecatedCount = questions.reduce(\n            (count: number, question: Question) =>\n              question.deprecated ? count : count + 1,\n            0\n          );\n          return nonDeprecatedCount;\n        }\n      })\n    )\n    .required(),\n  passingPercent: Joi.number().min(0).max(100).required(),\n  prerequisites: Joi.array().items(DbPrerequisitesJoi),\n  questions: Joi.array().items(DbQuestionJoi).min(1).required()\n});\n\n/**\n * Function to validate the exam data from the database.\n *\n * @param examFromDb The exam object from the database.\n * @returns JOI Validation object.\n */\nexport const validateExamFromDbSchema = (examFromDb: Exam) => {\n  return examFromDbSchema.validate(examFromDb);\n};\n\n// Generated Exam Schema\nconst GeneratedAnswerJoi = Joi.object().keys({\n  id: Joi.string().regex(nanoIdRE).required(),\n  answer: Joi.string().required()\n});\n\nconst GeneratedQuestionJoi = Joi.object().keys({\n  id: Joi.string().regex(nanoIdRE).required(),\n  question: Joi.string().required(),\n  answers: Joi.array().items(GeneratedAnswerJoi).min(5).required()\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5589,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "931bf4b5ca406a96fe3da58e140bf00b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
    "source_type": "git_repo",
    "title": "exam-schemas",
    "content": "); return nonDeprecatedCount; } }) ) .required(), passingPercent: Joi.number().min(0).max(100).required(), prerequisites: Joi.array().items(DbPrerequisitesJoi), questions: Joi.array().items(DbQuestionJoi).min(1).required() }); /** * Function to validate the exam data from the database. * * @param examFromDb The exam object from the database. * @returns JOI Validation object. */ export const validateExamFromDbSchema = (examFromDb: Exam) => { return examFromDbSchema.validate(examFromDb); }; // Generated Exam Schema const GeneratedAnswerJoi = Joi.object().keys({ id: Joi.string().regex(nanoIdRE).required(), answer: Joi.string().required() }); const GeneratedQuestionJoi = Joi.object().keys({ id: Joi.string().regex(nanoIdRE).required(), question: Joi.string().required(), answers: Joi.array().items(GeneratedAnswerJoi).min(5).required() });\n\nconst generatedExamSchema = Joi.array()\n  .items(GeneratedQuestionJoi)\n  .min(1)\n  .required();\n\n/**\n * Function to validate a generated exam.\n *\n * @param exam The exam that was generated.\n * @param numberOfQuestionsInExam The number of questions in the exam.\n * @returns JOI Validation object.\n */\nexport const validateGeneratedExamSchema = (\n  exam: GeneratedExam,\n  numberOfQuestionsInExam: number\n) => {\n  if (exam.length !== numberOfQuestionsInExam) {\n    throw new Error(\n      'The number of exam questions generated does not match the number of questions required.'\n    );\n  }\n\nreturn generatedExamSchema.validate(exam);\n};\n\n// User Completed Exam Schema\nconst UserCompletedQuestionJoi = Joi.object().keys({\n  id: Joi.string().regex(nanoIdRE).required(),\n  question: Joi.string().required(),\n  answer: Joi.object().keys({\n    id: Joi.string().regex(nanoIdRE).required(),\n    answer: Joi.string().required()\n  })\n});\n\nconst userCompletedExamSchema = Joi.object().keys({\n  userExamQuestions: Joi.array()\n    .items(UserCompletedQuestionJoi)\n    .min(1)\n    .required(),\n  examTimeInSeconds: Joi.number().min(0)\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5589,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "94fb315f6f39ab821b09301fd39ef125",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
    "source_type": "git_repo",
    "title": "exam-schemas",
    "content": "JOI Validation object. */ export const validateGeneratedExamSchema = ( exam: GeneratedExam, numberOfQuestionsInExam: number ) => { if (exam.length !== numberOfQuestionsInExam) { throw new Error( 'The number of exam questions generated does not match the number of questions required.' ); } return generatedExamSchema.validate(exam); }; // User Completed Exam Schema const UserCompletedQuestionJoi = Joi.object().keys({ id: Joi.string().regex(nanoIdRE).required(), question: Joi.string().required(), answer: Joi.object().keys({ id: Joi.string().regex(nanoIdRE).required(), answer: Joi.string().required() }) }); const userCompletedExamSchema = Joi.object().keys({ userExamQuestions: Joi.array() .items(UserCompletedQuestionJoi) .min(1) .required(), examTimeInSeconds: Joi.number().min(0) });\n\n/**\n * Function to validate a user completed exam.\n *\n * @param exam The exam the camper completed.\n * @param numberOfQuestionsInExam The number of questions in the exam.\n * @returns JOI Validation object.\n */\nexport const validateUserCompletedExamSchema = (\n  exam: UserExam,\n  numberOfQuestionsInExam: number\n) => {\n  // TODO: Validate that the properties exist\n  if (exam.userExamQuestions.length !== numberOfQuestionsInExam) {\n    throw new Error(\n      'The number of exam questions answered does not match the number of questions required.'\n    );\n  }\n\nreturn userCompletedExamSchema.validate(exam);\n};\n\n// Exam Results Schema\nconst examResultsSchema = Joi.object().keys({\n  numberOfCorrectAnswers: Joi.number().min(0),\n  numberOfQuestionsInExam: Joi.number().min(0),\n  percentCorrect: Joi.number().min(0),\n  passingPercent: Joi.number().min(0).max(100),\n  passed: Joi.bool(),\n  examTimeInSeconds: Joi.number().min(0)\n});\n\n/**\n * Function to validate generated exam results after a camper submits their exam.\n *\n * @param examResults The exam results that were generated.\n * @returns JOI Validation object.\n */\nexport const validateExamResultsSchema = (examResults: ExamResults) => {\n  return examResultsSchema.validate(examResults);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5589,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam-schemas.ts",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4ef902ad1e4cdd9f547b70043bdaf126",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam-types.ts",
    "source_type": "git_repo",
    "title": "exam-types",
    "content": "export interface Answer {\n  id: string;\n  answer: string;\n}\n\n// types for a generated exam\ninterface GeneratedQuestion {\n  id: string;\n  question: string;\n  answers: Answer[];\n}\n\nexport type GeneratedExam = GeneratedQuestion[];\n\n// types for a user completed exam (from client)\ninterface UserQuestion {\n  id: string;\n  question: string;\n  answer: Answer;\n}\n\nexport interface UserExam {\n  userExamQuestions: UserQuestion[];\n  examTimeInSeconds: number;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 454,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam-types.ts",
      "source_type": "git_repo"
    },
    "token_count": 102,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dd24deda328928e30d8a699caf4a05af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam.test.ts",
    "source_type": "git_repo",
    "title": "exam.test",
    "content": "import { Exam, Question } from '@prisma/client';\nimport {\n  examJson,\n  examWithZeroCorrect,\n  examWithOneCorrect,\n  examWithTwoCorrect,\n  examWithAllCorrect,\n  mockResultsZeroCorrect,\n  mockResultsOneCorrect,\n  mockResultsTwoCorrect,\n  mockResultsAllCorrect\n} from '../../__mocks__/exam';\nimport { generateRandomExam, createExamResults } from './exam';\nimport { GeneratedExam } from './exam-types';\n\ndescribe('Exam helpers', () => {\n  describe('generateRandomExam()', () => {\n    const randomizedExam: GeneratedExam = generateRandomExam(examJson as Exam);\n\nit('should have three questions', () => {\n      expect(randomizedExam.length).toBe(3);\n    });\n\nit('should have five answers per question', () => {\n      randomizedExam.forEach(question => {\n        expect(question.answers.length).toBe(5);\n      });\n    });\n\nit('should have exactly one correct answer per question', () => {\n      randomizedExam.forEach(question => {\n        const originalQuestion = examJson.questions.find(\n          q => q.id === question.id\n        ) as Question;\n        const originalCorrectAnswer = originalQuestion.correctAnswers;\n        const correctIds = originalCorrectAnswer.map(a => a.id);\n\nconst numberOfCorrectAnswers = question.answers.filter(a =>\n          correctIds.includes(a.id)\n        );\n\nexpect(numberOfCorrectAnswers).toHaveLength(1);\n      });\n    });\n  });\n\ndescribe('createExamResults()', () => {\n    const examResults1 = createExamResults(\n      examWithZeroCorrect,\n      examJson as Exam\n    );\n    const examResults2 = createExamResults(\n      examWithOneCorrect,\n      examJson as Exam\n    );\n    const examResults3 = createExamResults(\n      examWithTwoCorrect,\n      examJson as Exam\n    );\n    const examResults4 = createExamResults(\n      examWithAllCorrect,\n      examJson as Exam\n    );\n\nit('failing exam should return correct results', () => {\n      expect(examResults1).toEqual(mockResultsZeroCorrect);\n    });\n\nit('passing exam should return correct results', () => {\n      expect(examResults2).toEqual(mockResultsOneCorrect);\n      expect(examResults3).toEqual(mockResultsTwoCorrect);\n      expect(examResults4).toEqual(mockResultsAllCorrect);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2219,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8c787ba863f836337703ea149093dd7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
    "source_type": "git_repo",
    "title": "env",
    "content": "import assert from 'node:assert';\nimport path from 'node:path';\nimport { config } from 'dotenv';\nimport { LogLevel } from 'fastify';\n\nconst envPath = path.resolve(__dirname, '../../../.env');\nconst { error } = config({ path: envPath });\n\nif (error && process.env.FREECODECAMP_NODE_ENV !== 'production') {\n  console.warn(`\n  ----------------------------------------------------\n  Warning: .env file not found.\n  ----------------------------------------------------\n  Please copy sample.env to .env\n\nYou can ignore this warning if using a different way\n  to setup this environment.\n  ----------------------------------------------------\n  `);\n}\n\nfunction isAllowedEnv(env: string): env is 'development' | 'production' {\n  return ['development', 'production'].includes(env);\n}\n\nconst _EMAIL_PROVIDER = process.env.EMAIL_PROVIDER || 'ses';\nconst _FREECODECAMP_NODE_ENV =\n  process.env.FREECODECAMP_NODE_ENV || 'production';\n\nfunction isAllowedProvider(provider: string): provider is 'ses' | 'nodemailer' {\n  return ['ses', 'nodemailer'].includes(provider);\n}\n\nfunction createTestConnectionURL(url: string, dbId?: string) {\n  assert.notEqual(\n    _FREECODECAMP_NODE_ENV,\n    'production',\n    \"The database URL can't be modified in production.\"\n  );\n  assert.ok(\n    dbId,\n    `dbId is required for test connection URL. Is this running in a test environment?\nIf so, ensure that the environment variable JEST_WORKER_ID is set.`\n  );\n  return url.replace(/(.*)(\\?.*)/, `$1${dbId}$2`);\n}\n\nassert.ok(process.env.HOME_LOCATION);\nassert.ok(isAllowedEnv(_FREECODECAMP_NODE_ENV));\nassert.ok(process.env.DEPLOYMENT_ENV);\nassert.ok(isAllowedProvider(_EMAIL_PROVIDER));\nassert.ok(process.env.AUTH0_CLIENT_ID);\nassert.ok(process.env.AUTH0_CLIENT_SECRET);\nassert.ok(process.env.AUTH0_DOMAIN);\nassert.ok(process.env.API_LOCATION);\nassert.ok(process.env.JWT_SECRET);\nassert.ok(process.env.STRIPE_SECRET_KEY);\nassert.ok(process.env.MONGOHQ_URL);\nassert.ok(process.env.COOKIE_SECRET);\n\nconst LOG_LEVELS: LogLevel[] = [\n  'fatal',\n  'error',\n  'warn',\n  'info',\n  'debug',\n  'trace',\n  'silent'\n] as const;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7694,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "330e4ff69e17e43e7ba8ff20144ee0cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
    "source_type": "git_repo",
    "title": "env",
    "content": "function createTestConnectionURL(url: string, dbId?: string) { assert.notEqual( _FREECODECAMP_NODE_ENV, 'production', \"The database URL can't be modified in production.\" ); assert.ok( dbId, `dbId is required for test connection URL. Is this running in a test environment? If so, ensure that the environment variable JEST_WORKER_ID is set.` ); return url.replace(/(.*)(\\?.*)/, `$1${dbId}$2`); } assert.ok(process.env.HOME_LOCATION); assert.ok(isAllowedEnv(_FREECODECAMP_NODE_ENV)); assert.ok(process.env.DEPLOYMENT_ENV); assert.ok(isAllowedProvider(_EMAIL_PROVIDER)); assert.ok(process.env.AUTH0_CLIENT_ID); assert.ok(process.env.AUTH0_CLIENT_SECRET); assert.ok(process.env.AUTH0_DOMAIN); assert.ok(process.env.API_LOCATION); assert.ok(process.env.JWT_SECRET); assert.ok(process.env.STRIPE_SECRET_KEY); assert.ok(process.env.MONGOHQ_URL); assert.ok(process.env.COOKIE_SECRET); const LOG_LEVELS: LogLevel[] = [ 'fatal', 'error', 'warn', 'info', 'debug', 'trace', 'silent' ] as const;\n\nfunction isLogLevel(level: string): level is LogLevel {\n  return LOG_LEVELS.includes(level);\n}\n\nconst _FCC_API_LOG_LEVEL = process.env.FCC_API_LOG_LEVEL || 'info';\nconst _FCC_API_LOG_TRANSPORT = process.env.FCC_API_LOG_TRANSPORT || 'default';\n\nassert.ok(\n  isLogLevel(_FCC_API_LOG_LEVEL),\n  `FCC_API_LOG_LEVEL must be one of ${LOG_LEVELS.join(', ')}. Found ${_FCC_API_LOG_LEVEL}`\n);\n\nassert.ok(\n  _FCC_API_LOG_TRANSPORT === 'pretty' || _FCC_API_LOG_TRANSPORT === 'default',\n  `FCC_API_LOG_TRANSPORT must be one of 'pretty' or 'default'. Found ${_FCC_API_LOG_TRANSPORT}`\n); if (process env FREECODECAMP_NODE_ENV == 'development') {\n  assert ok(process env SES_ID);\n  assert ok(process env SES_SECRET);\n  assert notEqual(\n    process env SES_SECRET,\n    'ses_secret_from_aws',\n    'The SES secret should be changed from the default value '\n  );\n  assert ok(process env COOKIE_DOMAIN);\n  assert notEqual(process env COOKIE_SECRET, 'a_cookie_secret');\n  assert ok(process env",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7694,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "ee8736c96165325a3460c77b6fc2142f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
    "source_type": "git_repo",
    "title": "env",
    "content": "assert.ok( isLogLevel(_FCC_API_LOG_LEVEL), `FCC_API_LOG_LEVEL must be one of ${LOG_LEVELS.join(', ')}. Found ${_FCC_API_LOG_LEVEL}` ); assert.ok( _FCC_API_LOG_TRANSPORT === 'pretty' || _FCC_API_LOG_TRANSPORT === 'default', `FCC_API_LOG_TRANSPORT must be one of 'pretty' or 'default'. Found ${_FCC_API_LOG_TRANSPORT}` ); if (process env FREECODECAMP_NODE_ENV == 'development') { assert ok(process env SES_ID); assert ok(process env SES_SECRET); assert notEqual( process env SES_SECRET, 'ses_secret_from_aws', 'The SES secret should be changed from the default value ' ); assert ok(process env COOKIE_DOMAIN); assert notEqual(process env COOKIE_SECRET, 'a_cookie_secret'); assert ok(process envSENTRY_DSN);\n  assert ok(process env SENTRY_ENVIRONMENT);\n  assert ok(process env DEPLOYMENT_VERSION);\n  // The following values can exist in development, but production-like\n  // environments need to override the defaults assert notEqual(\n    process env SENTRY_DSN,\n    'dsn_from_sentry_dashboard',\n    `The DSN from Sentry's dashboard should be used `\n  );\n  assert notEqual(\n    process env SENTRY_ENVIRONMENT,\n    'development',\n    `The Sentry environment should be changed from the default `\n  );\n  assert notEqual(\n    process env JWT_SECRET,\n    'a_jwt_secret',\n    'The JWT secret should be changed from the default value '\n  );\n  assert ok(\n    process env FCC_ENABLE_DEV_LOGIN_MODE == 'true',\n    'Dev login mode MUST be disabled in production '\n  );\n  assert ok(\n    process env EMAIL_PROVIDER === 'ses',\n    'SES MUST be used in production '\n  );\n  assert notEqual(\n    process env STRIPE_SECRET_KEY,\n    'sk_from_stripe_dashboard',\n    'The Stripe secret should be changed from the default value '\n  );\n  assert notEqual(process env NODE_ENV, 'test');\n  assert notEqual(\n    process env AUTH0_CLIENT_SECRET,\n    'client_secret_from_auth0_dashboard',\n    'The Auth0 client secret should be changed from the default value '\n  );\n  assert ok(\n    process env GROWTHBOOK_FASTIFY_API_HOST,\n    'GROWTHBOOK_FASTIFY_API_HOST should be set '\n  );\n  assert",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7694,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "3da38e55eae76c738579452318e068f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
    "source_type": "git_repo",
    "title": "env",
    "content": "MUST be disabled in production ' ); assert ok( process env EMAIL_PROVIDER === 'ses', 'SES MUST be used in production ' ); assert notEqual( process env STRIPE_SECRET_KEY, 'sk_from_stripe_dashboard', 'The Stripe secret should be changed from the default value ' ); assert notEqual(process env NODE_ENV, 'test'); assert notEqual( process env AUTH0_CLIENT_SECRET, 'client_secret_from_auth0_dashboard', 'The Auth0 client secret should be changed from the default value ' ); assert ok( process env GROWTHBOOK_FASTIFY_API_HOST, 'GROWTHBOOK_FASTIFY_API_HOST should be set ' ); assertnotEqual(\n    process env GROWTHBOOK_FASTIFY_API_HOST,\n    'fastify_api_sdk_api_host_from_growthbook_dashboard',\n    'The GROWTHBOOK_FASTIFY_API_HOST env should be changed from the default value '\n  );\n  assert ok(\n    process env GROWTHBOOK_FASTIFY_CLIENT_KEY,\n    'GROWTHBOOK_FASTIFY_CLIENT_KEY should be set '\n  );\n  assert notEqual(\n    process env GROWTHBOOK_FASTIFY_CLIENT_KEY,\n    'fastify_api_sdk_client_key_from_growthbook_dashboard',\n    'The GROWTHBOOK_FASTIFY_CLIENT_KEY env should be changed from the default value '\n  );\n}\n\nexport const HOME_LOCATION = process.env.HOME_LOCATION;\n// Mailhog is used in development and test environments, hence the localhost\n// default.\nexport const MAILHOG_HOST = process.env.MAILHOG_HOST ?? 'localhost';\nexport const MONGOHQ_URL =\n  process.env.NODE_ENV === 'test'\n    ? createTestConnectionURL(\n        process.env.MONGOHQ_URL,\n        process.env.JEST_WORKER_ID\n      )\n    : process.env.MONGOHQ_URL; export const AUTH0_CLIENT_ID = process env AUTH0_CLIENT_ID;\nexport const AUTH0_DOMAIN = process env AUTH0_DOMAIN;\nexport const AUTH0_CLIENT_SECRET = process env AUTH0_CLIENT_SECRET;\nexport const EMAIL_PROVIDER = _EMAIL_PROVIDER;\nexport const PORT = process env PORT || '3000';\n// HOST defaults to 0 0 0 0 because the server is intended to be used in a\n// container export const HOST = process env HOST || '0 0 0 0';\nexport const API_LOCATION = process env API_LOCATION;\nexport const FCC_ENABLE_SWAGGER_UI = undefinedOrBool(\n  process env",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7694,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "015655a89cb06e7371915d1fdf1ca1d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
    "source_type": "git_repo",
    "title": "env",
    "content": "env AUTH0_CLIENT_ID; export const AUTH0_DOMAIN = process env AUTH0_DOMAIN; export const AUTH0_CLIENT_SECRET = process env AUTH0_CLIENT_SECRET; export const EMAIL_PROVIDER = _EMAIL_PROVIDER; export const PORT = process env PORT || '3000'; // HOST defaults to 0 0 0 0 because the server is intended to be used in a // container export const HOST = process env HOST || '0 0 0 0'; export const API_LOCATION = process env API_LOCATION; export const FCC_ENABLE_SWAGGER_UI = undefinedOrBool( process envFCC_ENABLE_SWAGGER_UI\n);\nexport const FCC_ENABLE_DEV_LOGIN_MODE =\n  process env FCC_ENABLE_DEV_LOGIN_MODE === 'true';\nexport const FCC_API_LOG_LEVEL = _FCC_API_LOG_LEVEL;\nexport const FCC_API_LOG_TRANSPORT = _FCC_API_LOG_TRANSPORT;\nexport const FCC_ENABLE_SHADOW_CAPTURE = undefinedOrBool(\n  process env FCC_ENABLE_SHADOW_CAPTURE\n);\nexport const FCC_ENABLE_EXAM_ENVIRONMENT = undefinedOrBool(\n  process env FCC_ENABLE_EXAM_ENVIRONMENT\n);\nexport const FCC_ENABLE_SENTRY_ROUTES = undefinedOrBool(\n  process env FCC_ENABLE_SENTRY_ROUTES\n);\nexport const FREECODECAMP_NODE_ENV = _FREECODECAMP_NODE_ENV;\nexport const DEPLOYMENT_ENV = process env DEPLOYMENT_ENV;\nexport const SENTRY_DSN =\n  process env SENTRY_DSN === 'dsn_from_sentry_dashboard' ''\n    : process env SENTRY_DSN;\nexport const SENTRY_ENVIRONMENT =\n  process env SENTRY_ENVIRONMENT === 'development' ''\n    : process env SENTRY_ENVIRONMENT;\nexport const COOKIE_DOMAIN = process env COOKIE_DOMAIN;\nexport const COOKIE_SECRET = process env COOKIE_SECRET;\nexport const JWT_SECRET = process env JWT_SECRET;\nexport const SES_ID = process env SES_ID;\nexport const SES_SECRET = process env SES_SECRET;\nexport const SES_REGION = process env SES_REGION || 'us-east-1';\nexport const SHOW_UPCOMING_CHANGES =\n  process env SHOW_UPCOMING_CHANGES === 'true';\nexport const STRIPE_SECRET_KEY = process env STRIPE_SECRET_KEY;\nexport const GROWTHBOOK_FASTIFY_API_HOST =\n  process env GROWTHBOOK_FASTIFY_API_HOST;\nexport const GROWTHBOOK_FASTIFY_CLIENT_KEY =\n  process env GROWTHBOOK_FASTIFY_CLIENT_KEY;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7694,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "3a2e6dd5ee5bcd6ab2e29ea643fc9cb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
    "source_type": "git_repo",
    "title": "env",
    "content": "env SENTRY_ENVIRONMENT; export const COOKIE_DOMAIN = process env COOKIE_DOMAIN; export const COOKIE_SECRET = process env COOKIE_SECRET; export const JWT_SECRET = process env JWT_SECRET; export const SES_ID = process env SES_ID; export const SES_SECRET = process env SES_SECRET; export const SES_REGION = process env SES_REGION || 'us-east-1'; export const SHOW_UPCOMING_CHANGES = process env SHOW_UPCOMING_CHANGES === 'true'; export const STRIPE_SECRET_KEY = process env STRIPE_SECRET_KEY; export const GROWTHBOOK_FASTIFY_API_HOST = process env GROWTHBOOK_FASTIFY_API_HOST; export const GROWTHBOOK_FASTIFY_CLIENT_KEY = process env GROWTHBOOK_FASTIFY_CLIENT_KEY;\n\nfunction undefinedOrBool(val: string | undefined): undefined | boolean {\n  if (!val) {\n    return undefined;\n  }\n\nreturn val === 'true';\n}\nexport const DEPLOYMENT_VERSION = process.env.DEPLOYMENT_VERSION || 'unknown';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7694,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\env.ts",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "25b3314ab7b4a2963858a428a330d98f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\get-challenges.test.ts",
    "source_type": "git_repo",
    "title": "get-challenges.test",
    "content": "import { getChallenges } from './get-challenges';\nimport { isObjectID } from './validation';\n\ndescribe('getChallenges', () => {\n  test('returns an array of challenges', () => {\n    const challenges = getChallenges();\n    expect(Array.isArray(challenges)).toBe(true);\n    expect(challenges.length).toBeGreaterThan(0);\n  });\n\ntest('challenge objects should contain challengeType and id', () => {\n    const challenges = getChallenges();\n\nfor (const challenge of challenges) {\n      expect(challenge).toHaveProperty('challengeType');\n      expect(typeof challenge?.challengeType).toBe('number');\n\nexpect(challenge).toHaveProperty('id');\n      expect(isObjectID(challenge?.id)).toBe(true);\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 713,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\get-challenges.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 154,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c20c6ba90d7fd618c6ebfe432550dd23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam.ts",
    "source_type": "git_repo",
    "title": "exam",
    "content": "import { Exam, Question } from '@prisma/client';\nimport { shuffleArray } from './../../../shared/utils/shuffle-array';\nimport { UserExam, GeneratedExam } from './exam-types';\n\n/**\n * Remove objects from array with deprecated: true.\n *\n * @param arr An array.\n * @returns The array without objects that have deprecated: true.\n */\nfunction filterDeprecated<T extends { deprecated: boolean | null }>(\n  arr: T[]\n): T[] {\n  return arr.filter(i => !i.deprecated);\n}\n\nfunction getRandomElement<T>(arr: T[]): T {\n  const id: number = Math.floor(Math.random() * arr.length);\n  return arr[id] as T;\n}\n\n/**\n * Generates a random exam.\n *\n * @param examJson Exam from the database converted to JSON.\n * @returns An array of randomized questions for the exam.\n */\nexport function generateRandomExam(examJson: Exam): GeneratedExam {\n  const { numberOfQuestionsInExam, questions } = examJson;\n  const numberOfAnswersPerQuestion = 5;\n\nconst availableQuestions = shuffleArray(filterDeprecated(questions));\n  const examQuestions = availableQuestions.slice(0, numberOfQuestionsInExam);\n\nconst randomizedExam: GeneratedExam = examQuestions.map(\n    (question: Question) => {\n      const availableCorrectAnswers = filterDeprecated(question.correctAnswers);\n      const availableWrongAnswers = shuffleArray(\n        filterDeprecated(question.wrongAnswers)\n      );\n      const correctAnswer = getRandomElement(availableCorrectAnswers);\n      const answers = shuffleArray([\n        correctAnswer,\n        ...availableWrongAnswers.slice(0, numberOfAnswersPerQuestion - 1)\n      ]).map(({ id, answer }) => ({ id, answer }));\n      return {\n        id: question.id,\n        question: question.question,\n        answers\n      };\n    }\n  );\n\nreturn randomizedExam;\n}\n\n/**\n * Evaluates a user completed exam.\n *\n * @param userExam User completed exam.\n * @param originalExam Exam from the database converted to JSON.\n * @returns An object of the exam results.\n */\nexport function createExamResults(userExam: UserExam, originalExam: Exam) {\n  const { userExamQuestions, examTimeInSeconds } = userExam;\n  const {\n    questions: originalQuestions,\n    numberOfQuestionsInExam,\n    passingPercent\n  } = originalExam;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3096,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "448ce1cf1a19d09b476633f145e74dbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\exam.ts",
    "source_type": "git_repo",
    "title": "exam",
    "content": "answer }) => ({ id, answer })); return { id: question.id, question: question.question, answers }; } ); return randomizedExam; } /** * Evaluates a user completed exam. * * @param userExam User completed exam. * @param originalExam Exam from the database converted to JSON. * @returns An object of the exam results. */ export function createExamResults(userExam: UserExam, originalExam: Exam) { const { userExamQuestions, examTimeInSeconds } = userExam; const { questions: originalQuestions, numberOfQuestionsInExam, passingPercent } = originalExam;\n\nconst numberOfCorrectAnswers = userExamQuestions.reduce(\n    (count, userQuestion) => {\n      const originalQuestion = originalQuestions.find(\n        examQuestion => examQuestion.id === userQuestion.id\n      );\n\nif (!originalQuestion) {\n        throw new Error('An error occurred. Could not find exam question.');\n      }\n\nconst isCorrect = originalQuestion.correctAnswers.find(\n        examAnswer => examAnswer.id === userQuestion.answer.id\n      );\n      return isCorrect ? count + 1 : count;\n    },\n    0\n  );\n\n// Percent rounded to one decimal place\n  const percent = (numberOfCorrectAnswers / numberOfQuestionsInExam) * 100;\n  const percentCorrect = Math.round(percent * 10) / 10;\n  const passed = percentCorrect >= passingPercent;\n\nreturn {\n    numberOfCorrectAnswers,\n    numberOfQuestionsInExam,\n    percentCorrect,\n    passingPercent,\n    passed,\n    examTimeInSeconds\n  };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3096,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\exam.ts",
      "source_type": "git_repo"
    },
    "token_count": 317,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c91f5abffbbba5b8d31a0d291e523caf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\ids.ts",
    "source_type": "git_repo",
    "title": "ids",
    "content": "import { customAlphabet } from 'nanoid';\n\n// uppercase, lowercase letters and numbers\nexport const customNanoid = customAlphabet(\n  '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  64\n);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 206,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\ids.ts",
      "source_type": "git_repo"
    },
    "token_count": 44,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2d6167c2c495b99a78969c0d4657140b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\index.test.ts",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "import { base64URLEncode, challenge, verifier } from '.';\n\ndescribe('utils', () => {\n  test('base64URLEncode', () => {\n    expect(base64URLEncode(Buffer.from('test'))).toEqual('dGVzdA');\n  });\n\ntest('verifier', () => {\n    expect(verifier).toHaveLength(43);\n  });\n\ntest('challenge', () => {\n    expect(challenge).toHaveLength(43);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 345,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\index.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 97,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eec13c3b5e63b171caef1cb96b50901f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\get-challenges.ts",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "// TODO: keeping curriculum in memory is handy if we want to field requests that\n// need to 'query' the curriculum, but if we force the client to handle\n// redirectToCurrentChallenge and, instead, only report the current challenge id\n// via the user object, then we should *not* store this so it can be garbage\n// collected.\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\nconst CURRICULUM_PATH = '../../../shared/config/curriculum.json';\n\n// Curriculum is read using fs, because it is too large for VSCode's LSP to handle type inference which causes annoying behavior.\nconst curriculum = JSON.parse(\n  readFileSync(join(__dirname, CURRICULUM_PATH), 'utf-8')\n) as Curriculum;\n\ninterface Block {\n  challenges: {\n    id: string;\n    tests?: { id?: string }[];\n    challengeType: number;\n    url?: string;\n    msTrophyId?: string;\n  }[];\n}\n\ntype SuperBlock = {\n  blocks: Record<string, Block>;\n};\n\ntype Curriculum = Record<string, SuperBlock>;\n\n/**\n * Get all challenges including all certifications as \"challenges\" (ids and tests).\n * @returns The whole curricula reduced to an array.\n */\nexport function getChallenges(): Block['challenges'] {\n  const curricula = Object.values(curriculum);\n\nreturn curricula\n    .map(v => v.blocks)\n    .reduce((acc: Block['challenges'], superBlock) => {\n      const blockKeys = Object.keys(superBlock);\n      const challengesForBlock = blockKeys.map(k => {\n        const block = superBlock[k];\n        if (!block) {\n          return [];\n        }\n        return block.challenges;\n      });\n      return [...acc, ...challengesForBlock.flat()];\n    }, []);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1609,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\get-challenges.ts",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ef22c422f4fb76f1508d6206a8a57ad8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "import { randomBytes, createHash } from 'crypto';\nimport { type TypeBoxTypeProvider } from '@fastify/type-provider-typebox';\nimport {\n  type FastifyRequest,\n  type FastifySchema,\n  type RawRequestDefaultExpression,\n  type RawServerDefault,\n  type RouteGenericInterface\n} from 'fastify';\n\n/**\n * Utility to encode a buffer to a base64 URI.\n *\n * @param buf The buffer to encode.\n * @returns The encoded string.\n */\nexport function base64URLEncode(buf: Buffer): string {\n  return buf\n    .toString('base64')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n}\nexport const verifier = base64URLEncode(randomBytes(32));\n\nfunction sha256(buf: Buffer) {\n  return createHash('sha256').update(buf).digest();\n}\nexport const challenge = base64URLEncode(sha256(Buffer.from(verifier)));\n\nexport type UpdateReqType<Schema extends FastifySchema> = FastifyRequest<\n  RouteGenericInterface,\n  RawServerDefault,\n  RawRequestDefaultExpression<RawServerDefault>,\n  Schema,\n  TypeBoxTypeProvider\n>;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * Wrapper around a promise to catch errors and return them as part of the promise.\n *\n * This is most useful to prevent callback / try...catch hell.\n *\n * ## Example:\n *\n * ```ts\n * const maybeWhatIWant = await mapErr(\n *   this.prisma.whatIWantCollection.create({\n *     data: {}\n *   })\n * );\n *\n * if (maybeWhatIWant.hasError) {\n *   void reply.code(500);\n *   return reply.send('Unable to generate exam, due to: ' +\n *     JSON.stringify(maybeWhatIWant.error)\n *   );\n * }\n *\n * const whatIWant = maybeWhatIWant.data;\n * ```\n *\n * @param promise - any promise to be tried.\n * @returns a promise with either the data or the caught error\n */\nexport async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> {\n  try {\n    return { hasError: false, data: await promise };\n  } catch (error) {\n    return { hasError: true, error };\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6073dcec1f56821806fc2d5f4fe015af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "* return reply.send('Unable to generate exam, due to: ' + * JSON.stringify(maybeWhatIWant.error) * ); * } * * const whatIWant = maybeWhatIWant.data; * ``` * * @param promise - any promise to be tried. * @returns a promise with either the data or the caught error */ export async function mapErr<T>(promise: Promise<T>): Promise<Result<T>> { try { return { hasError: false, data: await promise }; } catch (error) { return { hasError: true, error }; } }\n\n/**\n * Wrapper around a synchronise function to catch throws and return them as part of the value.\n *\n * This is most useful to prevent try...catch hell.\n *\n * ## Example:\n *\n * ```ts\n * const maybeWhatIWant = await syncMapErr(\n *   () => chai.assert.deepEqual({}, {})\n * );\n *\n * if (maybeWhatIWant.hasError) {\n *   void reply.code(500);\n *   return reply.send('Unable to generate exam, due to: ' +\n *     JSON.stringify(maybeWhatIWant.error)\n *   );\n * }\n *\n * const whatIWant = maybeWhatIWant.data;\n * ```\n *\n * @param fn - any function to be tried.\n * @returns the data or the caught error\n */\nexport function syncMapErr<T>(fn: () => T): Result<T> {\n  try {\n    return { hasError: false, data: fn() };\n  } catch (error) {\n    return { hasError: true, error };\n  }\n}\n\nexport type Result<T> =\n  | { hasError: false; data: T }\n  | { hasError: true; error: unknown };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 357,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0a2f2b34e453f16071634b302e45e94e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\logger.ts",
    "source_type": "git_repo",
    "title": "logger",
    "content": "import { Transform, TransformCallback, TransformOptions } from 'stream';\nimport { FastifyRequest, FastifyReply } from 'fastify';\nimport { isEmpty } from 'lodash';\nimport pino, {\n  TransportTargetOptions,\n  DestinationStream,\n  LoggerOptions\n} from 'pino';\nimport { FCC_API_LOG_LEVEL, FCC_API_LOG_TRANSPORT } from './env';\n\nconst serializers = {\n  req: (req: FastifyRequest) => {\n    const id = req.id || 'ID not found';\n    const method = req.method || 'METHOD not found';\n    const url = req.url || 'URL not found';\n    const xForwardedFor = Array.isArray(req.headers['x-forwarded-for'])\n      ? req.headers['x-forwarded-for'][0]\n        ? req.headers['x-forwarded-for'][0]\n        : req.headers['x-forwarded-for']\n      : req.headers['x-forwarded-for'];\n    const ip =\n      req.headers['cf-connecting-ip'] ||\n      xForwardedFor ||\n      req.headers['x-real-ip'] ||\n      req.ip ||\n      'IP not found';\n    const userAgent = req.headers['user-agent'] || 'USER_AGENT not found';\n    const country = req.headers['cf-ipcountry'] || 'COUNTRY not found';\n    const query = isEmpty(req.query) ? 'QUERY not found' : req.query;\n\nreturn {\n      REQ_METHOD: method,\n      REQ_URL: url,\n      REQ_IP: ip,\n      REQ_USER_AGENT: userAgent,\n      REQ_COUNTRY: country,\n      REQ_QUERY: query,\n      REQ_ID: id\n    };\n  },\n  res: (res: FastifyReply) => {\n    return {\n      RES_STATUS_CODE: res.statusCode,\n      RES_ELAPSED_TIME: res.elapsedTime\n    };\n  }\n};\n\nconst prettyTarget: TransportTargetOptions = {\n  target: 'pino-pretty',\n  options: {\n    singleLine: true,\n    translateTime: 'HH:MM:ss Z',\n    ignore: 'pid,hostname',\n    colorize: true\n  }\n};\n\nclass DeduplicatingTransform extends Transform {\n  constructor(options?: TransformOptions) {\n    super({ ...options, objectMode: false });\n  }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\logger.ts",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f2b55face3f23b26491c80dc92a1e6a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\logger.ts",
    "source_type": "git_repo",
    "title": "logger",
    "content": "const query = isEmpty(req.query) ? 'QUERY not found' : req.query; return { REQ_METHOD: method, REQ_URL: url, REQ_IP: ip, REQ_USER_AGENT: userAgent, REQ_COUNTRY: country, REQ_QUERY: query, REQ_ID: id }; }, res: (res: FastifyReply) => { return { RES_STATUS_CODE: res.statusCode, RES_ELAPSED_TIME: res.elapsedTime }; } }; const prettyTarget: TransportTargetOptions = { target: 'pino-pretty', options: { singleLine: true, translateTime: 'HH:MM:ss Z', ignore: 'pid,hostname', colorize: true } }; class DeduplicatingTransform extends Transform { constructor(options?: TransformOptions) { super({ ...options, objectMode: false }); }\n\n_transform(\n    chunk: Buffer | string,\n    encoding: BufferEncoding,\n    callback: TransformCallback\n  ): void {\n    try {\n      const logString = Buffer.isBuffer(chunk) ? chunk.toString() : chunk;\n      logString.split('\\n').forEach(line => {\n        if (line.trim() === '') return;\n        const logObject = JSON.parse(line);\n        const processedLog = JSON.parse(JSON.stringify(logObject));\n        this.push(JSON.stringify(processedLog) + '\\n');\n      });\n      callback();\n    } catch (_err) {\n      // If parsing or processing fails, pass the original chunk through\n      // In a production scenario, you might want to log this internal error\n      // to a different stream or use a fallback mechanism.\n      this.push(chunk);\n      callback();\n    }\n  }\n}\n\n/**\n * Get a logger instance.\n *\n * @returns A logger instance.\n */\nexport const getLogger = () => {\n  const isPretty = FCC_API_LOG_TRANSPORT === 'pretty';\n  const options: LoggerOptions = {\n    level: FCC_API_LOG_LEVEL || 'info',\n    serializers\n  };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\logger.ts",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a940074d0b895f4187a61d544c6b51b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\logger.ts",
    "source_type": "git_repo",
    "title": "logger",
    "content": "// If parsing or processing fails, pass the original chunk through // In a production scenario, you might want to log this internal error // to a different stream or use a fallback mechanism. this.push(chunk); callback(); } } } /** * Get a logger instance. * * @returns A logger instance. */ export const getLogger = () => { const isPretty = FCC_API_LOG_TRANSPORT === 'pretty'; const options: LoggerOptions = { level: FCC_API_LOG_LEVEL || 'info', serializers };\n\nif (isPretty) {\n    const transport = pino.transport({ targets: [prettyTarget] }) as\n      | DestinationStream\n      | undefined;\n    return pino(options, transport);\n  } else {\n    // For non-pretty, use the custom de-duplicating transform stream\n    // This logger will write to a stream that then pipes to our de-duplicator\n    const deduplicator = new DeduplicatingTransform();\n    // Pino writes NDJSON, so our transform needs to handle that.\n    // The pino instance itself doesn't need a complex transport, it writes to the stream.\n    const logger = pino(options, deduplicator);\n    deduplicator.pipe(process.stdout);\n    return logger;\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3470,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\logger.ts",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9784f3e27f1255bb7e3a64db85f202fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
    "source_type": "git_repo",
    "title": "normalize.test",
    "content": "import {\n  normalizeTwitter,\n  normalizeProfileUI,\n  normalizeChallenges,\n  normalizeFlags,\n  normalizeDate,\n  normalizeChallengeType\n} from './normalize';\n\ndescribe('normalize', () => {\n  describe('normalizeTwitter', () => {\n    it('returns the input if it is a url', () => {\n      const url = 'https://twitter.com/a_generic_user';\n      expect(normalizeTwitter(url)).toEqual(url);\n    });\n    it('adds the handle to twitter.com if it is not a url', () => {\n      const handle = '@a_generic_user';\n      expect(normalizeTwitter(handle)).toEqual(\n        'https://twitter.com/a_generic_user'\n      );\n    });\n    it('returns undefined  if that is the input', () => {\n      expect(normalizeTwitter('')).toBeUndefined();\n    });\n  });\n\nconst profileUIInput = {\n    isLocked: true,\n    showAbout: true,\n    showCerts: true,\n    showDonation: true,\n    showHeatMap: true,\n    showLocation: true,\n    showName: true,\n    showPoints: true,\n    showPortfolio: true,\n    showTimeLine: true\n  };\n\nconst defaultProfileUI = {\n    isLocked: true,\n    showAbout: false,\n    showCerts: false,\n    showDonation: false,\n    showHeatMap: false,\n    showLocation: false,\n    showName: false,\n    showPoints: false,\n    showPortfolio: false,\n    showTimeLine: false\n  };\n\ndescribe('normalizeProfileUI', () => {\n    it('should return the input if it is not null', () => {\n      expect(normalizeProfileUI(profileUIInput)).toEqual(profileUIInput);\n    });\n\nit('should return the default profileUI if the input is null', () => {\n      const input = null;\n      expect(normalizeProfileUI(input)).toEqual(defaultProfileUI);\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5359,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "cabb3ad4f9c3cc6ea6b93038c5431c65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
    "source_type": "git_repo",
    "title": "normalize.test",
    "content": "true, showHeatMap: true, showLocation: true, showName: true, showPoints: true, showPortfolio: true, showTimeLine: true }; const defaultProfileUI = { isLocked: true, showAbout: false, showCerts: false, showDonation: false, showHeatMap: false, showLocation: false, showName: false, showPoints: false, showPortfolio: false, showTimeLine: false }; describe('normalizeProfileUI', () => { it('should return the input if it is not null', () => { expect(normalizeProfileUI(profileUIInput)).toEqual(profileUIInput); }); it('should return the default profileUI if the input is null', () => { const input = null; expect(normalizeProfileUI(input)).toEqual(defaultProfileUI); });\n\nit('should convert all \"null\" values to \"undefined\"', () => {\n      const input = {\n        isLocked: null,\n        showAbout: false,\n        showCerts: null,\n        showDonation: null,\n        showHeatMap: null,\n        showLocation: null,\n        showName: null,\n        showPoints: null,\n        showPortfolio: null,\n        showTimeLine: null\n      };\n      expect(normalizeProfileUI(input)).toEqual({\n        isLocked: undefined,\n        showAbout: false,\n        showCerts: undefined,\n        showDonation: undefined,\n        showHeatMap: undefined,\n        showLocation: undefined,\n        showName: undefined,\n        showPoints: undefined,\n        showPortfolio: undefined,\n        showTimeLine: undefined\n      });\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5359,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "e4e15f103c8460ac07c9239f96ad7f5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
    "source_type": "git_repo",
    "title": "normalize.test",
    "content": "the default profileUI if the input is null', () => { const input = null; expect(normalizeProfileUI(input)).toEqual(defaultProfileUI); }); it('should convert all \"null\" values to \"undefined\"', () => { const input = { isLocked: null, showAbout: false, showCerts: null, showDonation: null, showHeatMap: null, showLocation: null, showName: null, showPoints: null, showPortfolio: null, showTimeLine: null }; expect(normalizeProfileUI(input)).toEqual({ isLocked: undefined, showAbout: false, showCerts: undefined, showDonation: undefined, showHeatMap: undefined, showLocation: undefined, showName: undefined, showPoints: undefined, showPortfolio: undefined, showTimeLine: undefined }); }); });\n\ndescribe('normalizeChallenges', () => {\n    it('should remove null values from the input', () => {\n      const completedChallenges = [\n        {\n          id: 'a6b0bb188d873cb2c8729495',\n          completedDate: 1520002973119,\n          challengeType: 5,\n          solution: null,\n          githubLink: null,\n          isManuallyApproved: null,\n          examResults: null,\n          files: [\n            {\n              contents: 'test',\n              ext: 'js',\n              key: 'indexjs',\n              name: 'test',\n              path: 'path-test'\n            },\n            {\n              contents: 'test2',\n              ext: 'html',\n              key: 'html-test',\n              name: 'test2',\n              path: null\n            }\n          ]\n        }\n      ];\n      expect(normalizeChallenges(completedChallenges)).toEqual([\n        {\n          id: 'a6b0bb188d873cb2c8729495',\n          completedDate: 1520002973119,\n          challengeType: 5,\n          files: [\n            {\n              contents: 'test',\n              ext: 'js',\n              key: 'indexjs',\n              name: 'test',\n              path: 'path-test'\n            },\n            {\n              contents: 'test2',\n              ext: 'html',\n              key: 'html-test',\n              name: 'test2'\n            }\n          ]\n        }\n      ]);\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5359,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "678429a7b914c77cd182afbcfa046297",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
    "source_type": "git_repo",
    "title": "normalize.test",
    "content": "challengeType: 5, solution: null, githubLink: null, isManuallyApproved: null, examResults: null, files: [ { contents: 'test', ext: 'js', key: 'indexjs', name: 'test', path: 'path-test' }, { contents: 'test2', ext: 'html', key: 'html-test', name: 'test2', path: null } ] } ]; expect(normalizeChallenges(completedChallenges)).toEqual([ { id: 'a6b0bb188d873cb2c8729495', completedDate: 1520002973119, challengeType: 5, files: [ { contents: 'test', ext: 'js', key: 'indexjs', name: 'test', path: 'path-test' }, { contents: 'test2', ext: 'html', key: 'html-test', name: 'test2' } ] } ]); }); });\n\ndescribe('normalizeFlags', () => {\n    it('should replace nulls with false', () => {\n      const flags = {\n        isLocked: null,\n        showAbout: false,\n        showCerts: true,\n        showDonation: null\n      };\n      expect(normalizeFlags(flags)).toEqual({\n        isLocked: false,\n        showAbout: false,\n        showCerts: true,\n        showDonation: false\n      });\n    });\n  });\n\ndescribe('normalizeDate', () => {\n    it('should return the date as a number', () => {\n      expect(normalizeDate(1)).toEqual(1);\n      expect(normalizeDate({ $date: '2023-10-01T00:00:00Z' })).toEqual(\n        1696118400000\n      );\n    });\n\nit('should throw an error if the date is not in the expected shape', () => {\n      expect(() => normalizeDate('2023-10-01T00:00:00Z')).toThrow(\n        'Unexpected date value: \"2023-10-01T00:00:00Z\"'\n      );\n      expect(() => normalizeDate({ date: '123' })).toThrow(\n        'Unexpected date value: {\"date\":\"123\"}'\n      );\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5359,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "270cff3d181dfee501e7b9defd601c7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
    "source_type": "git_repo",
    "title": "normalize.test",
    "content": "showCerts: true, showDonation: null }; expect(normalizeFlags(flags)).toEqual({ isLocked: false, showAbout: false, showCerts: true, showDonation: false }); }); }); describe('normalizeDate', () => { it('should return the date as a number', () => { expect(normalizeDate(1)).toEqual(1); expect(normalizeDate({ $date: '2023-10-01T00:00:00Z' })).toEqual( 1696118400000 ); }); it('should throw an error if the date is not in the expected shape', () => { expect(() => normalizeDate('2023-10-01T00:00:00Z')).toThrow( 'Unexpected date value: \"2023-10-01T00:00:00Z\"' ); expect(() => normalizeDate({ date: '123' })).toThrow( 'Unexpected date value: {\"date\":\"123\"}' ); }); });\n\ndescribe('normalizeChallengeType', () => {\n    it('should return the challenge type as a number or null', () => {\n      expect(normalizeChallengeType(10)).toEqual(10);\n      expect(normalizeChallengeType('10')).toEqual(10);\n      expect(normalizeChallengeType(null)).toEqual(null);\n    });\n\nit('should throw an error if the challenge type is not in the expected shape', () => {\n      expect(() => normalizeChallengeType('invalid')).toThrow(\n        'Unexpected challengeType value: \"invalid\"'\n      );\n      expect(() => normalizeChallengeType({ type: '123' })).toThrow(\n        'Unexpected challengeType value: {\"type\":\"123\"}'\n      );\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5359,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "0add156dde77aa47d26c633adcd6f5b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\progress.test.ts",
    "source_type": "git_repo",
    "title": "progress.test",
    "content": "import { getCalendar, getPoints } from './progress';\n\ndescribe('utils/progress', () => {\n  describe('getCalendar', () => {\n    it('should return an empty object if no timestamps are passed', () => {\n      expect(getCalendar([])).toEqual({});\n      expect(getCalendar(null)).toEqual({});\n    });\n    it('should take timestamps and return a calendar object', () => {\n      const timestamps = [-1111001, 0, 1111000, 1111500, 1113000, 9999999];\n\nexpect(getCalendar(timestamps)).toEqual({\n        '-1112': 1,\n        0: 1,\n        1111: 1,\n        1113: 1,\n        9999: 1\n      });\n    });\n\nit('should handle null, { timestamp: number } and float entries', () => {\n      const timestamps = [null, { timestamp: 1113000 }, 1111000.5];\n\nexpect(getCalendar(timestamps)).toEqual({\n        1111: 1,\n        1113: 1\n      });\n    });\n  });\n\ndescribe('getPoints', () => {\n    it('should return 1 if there are no progressTimestamps', () => {\n      expect(getPoints(null)).toEqual(1);\n    });\n    it('should return then number of progressTimestamps if there are any', () => {\n      expect(getPoints([0, 1, 2])).toEqual(3);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1145,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\progress.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "661a2f6093baa5ffb87f3eb900151ee8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\progress.ts",
    "source_type": "git_repo",
    "title": "progress",
    "content": "export type ProgressTimestamp = number | { timestamp: number } | null;\nexport type Calendar = Record<number, 1>;\n/**\n * Converts a ProgressTimestamp array to a object with keys based on the timestamps.\n *\n * @param progressTimestamps The ProgressTimestamp array.\n * @returns The object with keys based on the timestamps.\n */\nexport const getCalendar = (\n  progressTimestamps: ProgressTimestamp[] | null\n): Calendar => {\n  const calendar: Calendar = {};\n\nprogressTimestamps?.forEach(progress => {\n    if (progress === null) return;\n    if (typeof progress === 'number') {\n      calendar[Math.floor(progress / 1000)] = 1;\n    } else {\n      calendar[Math.floor(progress.timestamp / 1000)] = 1;\n    }\n  });\n\nreturn calendar;\n};\n\n/**\n * Converts a ProgressTimestamp array to an integer number of points.\n *\n * @param progressTimestamps The ProgressTimestamp array.\n * @returns The number of points.\n */\nexport const getPoints = (\n  progressTimestamps: ProgressTimestamp[] | null\n): number => {\n  return progressTimestamps?.length ?? 1;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1039,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\progress.ts",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c7cb02750c70a42f06a2435a21446837",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
    "source_type": "git_repo",
    "title": "normalize",
    "content": "/* This module's job is to parse the database output and prepare it for\nserialization */\nimport type {\n  ProfileUI,\n  CompletedChallenge,\n  ExamResults,\n  Survey,\n  Prisma\n} from '@prisma/client';\nimport _ from 'lodash';\n\ntype NullToUndefined<T> = T extends null ? undefined : T;\ntype NullToFalse<T> = T extends null ? false : T;\n\ntype NoNullProperties<T> = {\n  [P in keyof T]: NullToUndefined<T[P]>;\n};\n\ntype DefaultToFalse<T> = {\n  [P in keyof T]: NullToFalse<T[P]>;\n};\n\n/**\n * Converts a Twitter handle or URL to a URL.\n *\n * @param handleOrUrl Twitter handle or URL.\n * @returns Twitter URL.\n */\nexport const normalizeTwitter = (\n  handleOrUrl: string | null\n): string | undefined => {\n  if (!handleOrUrl) return undefined;\n\nlet url;\n  try {\n    new URL(handleOrUrl);\n  } catch {\n    url = `https://twitter.com/${handleOrUrl.replace(/^@/, '')}`;\n  }\n  return url ?? handleOrUrl;\n};\n\n/**\n * Normalizes a date value to a timestamp number.\n *\n * @param date An object with a $date string or a number.\n * @returns The date as a timestamp number.\n */\nexport const normalizeDate = (date?: Prisma.JsonValue): number => {\n  if (typeof date === 'number') {\n    return date;\n  } else if (\n    date &&\n    typeof date === 'object' &&\n    '$date' in date &&\n    typeof date.$date === 'string'\n  ) {\n    return new Date(date.$date).getTime();\n  } else {\n    throw Error('Unexpected date value: ' + JSON.stringify(date));\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5261,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c3170566f40e577001b21aa6d4631674",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
    "source_type": "git_repo",
    "title": "normalize",
    "content": "number. * * @param date An object with a $date string or a number. * @returns The date as a timestamp number. */ export const normalizeDate = (date?: Prisma.JsonValue): number => { if (typeof date === 'number') { return date; } else if ( date && typeof date === 'object' && '$date' in date && typeof date.$date === 'string' ) { return new Date(date.$date).getTime(); } else { throw Error('Unexpected date value: ' + JSON.stringify(date)); } };\n\n/**\n * Normalizes a challenge type value to a number.\n *\n * @param challengeType A JSON value that can be a number, string, or null.\n * @returns The challenge type as a number or null.\n */\nexport const normalizeChallengeType = (\n  challengeType?: Prisma.JsonValue\n): number | null => {\n  if (typeof challengeType === 'number') {\n    return challengeType;\n  } else if (typeof challengeType === 'string') {\n    const parsed = parseInt(challengeType, 10);\n    if (isNaN(parsed)) {\n      throw Error(\n        'Unexpected challengeType value: ' + JSON.stringify(challengeType)\n      );\n    }\n    return parsed;\n  } else if (challengeType === null) {\n    return null;\n  } else {\n    throw Error(\n      'Unexpected challengeType value: ' + JSON.stringify(challengeType)\n    );\n  }\n};\n\n/**\n * Ensure that the user's profile UI settings are valid.\n *\n * @param maybeProfileUI A null or the user's profile UI settings.\n * @returns The input with nulls removed or a default value if there is no input.\n */\nexport const normalizeProfileUI = (\n  maybeProfileUI: ProfileUI | null\n): NoNullProperties<ProfileUI> => {\n  return maybeProfileUI\n    ? removeNulls(maybeProfileUI)\n    : {\n        isLocked: true,\n        showAbout: false,\n        showCerts: false,\n        showDonation: false,\n        showHeatMap: false,\n        showLocation: false,\n        showName: false,\n        showPoints: false,\n        showPortfolio: false,\n        showTimeLine: false\n      };\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5261,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "267ce7451b41122da7305f111a52ce09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
    "source_type": "git_repo",
    "title": "normalize",
    "content": "user's profile UI settings are valid. * * @param maybeProfileUI A null or the user's profile UI settings. * @returns The input with nulls removed or a default value if there is no input. */ export const normalizeProfileUI = ( maybeProfileUI: ProfileUI | null ): NoNullProperties<ProfileUI> => { return maybeProfileUI ? removeNulls(maybeProfileUI) : { isLocked: true, showAbout: false, showCerts: false, showDonation: false, showHeatMap: false, showLocation: false, showName: false, showPoints: false, showPortfolio: false, showTimeLine: false }; };\n\n/**\n * Remove all the null properties from an object.\n *\n * @param obj Any object.\n * @returns The input with nulls removed.\n */\nexport const removeNulls = <T extends Record<string, unknown>>(\n  obj: T\n): NoNullProperties<T> =>\n  _.pickBy(obj, value => value !== null) as NoNullProperties<T>;\n\ntype NormalizedFile = {\n  contents: string;\n  ext: string;\n  key: string;\n  name: string;\n  path?: string;\n};\n\nexport type NormalizedChallenge = {\n  challengeType?: number;\n  completedDate: number;\n  files: NormalizedFile[];\n  githubLink?: string;\n  id: string;\n  isManuallyApproved?: boolean;\n  solution?: string;\n  examResults?: ExamResults;\n};\n\n/**\n * Remove all the null properties from a CompletedChallenge array.\n *\n * @param completedChallenges The CompletedChallenge array.\n * @returns The input with nulls removed.\n */\nexport const normalizeChallenges = (\n  completedChallenges: CompletedChallenge[]\n): NormalizedChallenge[] => {\n  const fixedDateAndType = completedChallenges.map(challenge => {\n    const { completedDate, challengeType, ...rest } = challenge;\n    return {\n      ...rest,\n      completedDate: normalizeDate(completedDate),\n      challengeType: normalizeChallengeType(challengeType)\n    };\n  });\n\nconst noNullProps = fixedDateAndType.map(challenge => removeNulls(challenge));\n  // files.path is optional\n  const noNullPath = noNullProps.map(challenge => {\n    const { files, ...rest } = challenge;\n    const noNullFiles = files?.map(file => removeNulls(file));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5261,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "bc606402068760a6340ecb2ddac0465e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
    "source_type": "git_repo",
    "title": "normalize",
    "content": "@param completedChallenges The CompletedChallenge array. * @returns The input with nulls removed. */ export const normalizeChallenges = ( completedChallenges: CompletedChallenge[] ): NormalizedChallenge[] => { const fixedDateAndType = completedChallenges.map(challenge => { const { completedDate, challengeType, ...rest } = challenge; return { ...rest, completedDate: normalizeDate(completedDate), challengeType: normalizeChallengeType(challengeType) }; }); const noNullProps = fixedDateAndType.map(challenge => removeNulls(challenge)); // files.path is optional const noNullPath = noNullProps.map(challenge => { const { files, ...rest } = challenge; const noNullFiles = files?.map(file => removeNulls(file));\n\nreturn { ...rest, files: noNullFiles };\n  });\n\nreturn noNullPath;\n};\n\ntype NormalizedSurvey = {\n  title: string;\n  responses: {\n    question: string;\n    response: string;\n  }[];\n};\n\n/**\n * Remove the extra properties from the SurveyResults array.\n *\n * @param surveyResults The SurveyResults array.\n * @returns The input without the id and userid.\n */\nexport const normalizeSurveys = (\n  surveyResults: Survey[]\n): NormalizedSurvey[] => {\n  return surveyResults.map(survey => {\n    const { title, responses } = survey;\n    return { title, responses };\n  });\n};\n\n/**\n * Replace null flags with false.\n * @param flags Object with nullable boolean flags.\n * @returns Same object with boolean flags, defaulting to false.\n */\nexport const normalizeFlags = <T extends Record<string, boolean | null>>(\n  flags: T\n): DefaultToFalse<T> =>\n  _.mapValues(flags, flag => flag ?? false) as DefaultToFalse<T>;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5261,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\normalize.ts",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "879ad63b3c13df75ac33fe5f0832376c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
    "source_type": "git_repo",
    "title": "redirection.test",
    "content": "import jwt from 'jsonwebtoken';\n\nimport {\n  getReturnTo,\n  normalizeParams,\n  getRedirectParams,\n  getPrefixedLandingPath,\n  getLoginRedirectParams\n} from './redirection';\nimport { HOME_LOCATION } from './env';\n\nconst validJWTSecret = 'this is a super secret string';\nconst invalidJWTSecret = 'This is not correct secret';\nconst validReturnTo = 'https://www.freecodecamp.org/settings';\nconst invalidReturnTo = 'https://www.freecodecamp.org.fake/settings';\nconst defaultReturnTo = 'https://www.freecodecamp.org/learn';\nconst defaultOrigin = 'https://www.freecodecamp.org';\nconst defaultPrefix = '';\n\nconst defaultObject = {\n  returnTo: defaultReturnTo,\n  origin: defaultOrigin,\n  pathPrefix: defaultPrefix\n};\n\n// TODO: tidy this up (the mocking is a bit of a mess)\ndescribe('redirection', () => {\n  describe('getReturnTo', () => {\n    it('should extract returnTo from a jwt', () => {\n      expect.assertions(1);\n\nconst encryptedReturnTo = jwt.sign(\n        { returnTo: validReturnTo, origin: defaultOrigin },\n        validJWTSecret\n      );\n      expect(\n        getReturnTo(encryptedReturnTo, validJWTSecret, defaultOrigin)\n      ).toStrictEqual({\n        ...defaultObject,\n        returnTo: validReturnTo\n      });\n    });\n\nit('should return a default url if the secrets do not match', () => {\n      const oldLog = console.log;\n      expect.assertions(2);\n      console.log = jest.fn();\n      const encryptedReturnTo = jwt.sign(\n        { returnTo: validReturnTo },\n        invalidJWTSecret\n      );\n      expect(\n        getReturnTo(encryptedReturnTo, validJWTSecret, defaultOrigin)\n      ).toStrictEqual(defaultObject);\n      expect(console.log).toHaveBeenCalled();\n      console.log = oldLog;\n    }); it('should return a default url for unknown origins', () => {\n      expect assertions(1);\n      const encryptedReturnTo = jwt sign(\n        { returnTo: invalidReturnTo },\n        validJWTSecret\n      );\n      expect(\n        getReturnTo(encryptedReturnTo, validJWTSecret, defaultOrigin)\n      )",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8085,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "03e14f488d3f4cf838671fba872601a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
    "source_type": "git_repo",
    "title": "redirection.test",
    "content": "...defaultObject, returnTo: validReturnTo }); }); it('should return a default url if the secrets do not match', () => { const oldLog = console.log; expect.assertions(2); console.log = jest.fn(); const encryptedReturnTo = jwt.sign( { returnTo: validReturnTo }, invalidJWTSecret ); expect( getReturnTo(encryptedReturnTo, validJWTSecret, defaultOrigin) ).toStrictEqual(defaultObject); expect(console.log).toHaveBeenCalled(); console.log = oldLog; }); it('should return a default url for unknown origins', () => { expect assertions(1); const encryptedReturnTo = jwt sign( { returnTo: invalidReturnTo }, validJWTSecret ); expect( getReturnTo(encryptedReturnTo, validJWTSecret, defaultOrigin) )toStrictEqual(defaultObject);\n    });\n  });\n  describe('normalizeParams', () => {\n    it('should return a {returnTo, origin, pathPrefix} object', () => {\n      expect assertions(2);\n      const keys = Object keys(normalizeParams({}));\n      const expectedKeys = ['returnTo', 'origin', 'pathPrefix'];\n      expect(keys length) toBe(3);\n      expect(keys) toEqual(expect arrayContaining(expectedKeys));\n    });\n    it('should default to process env HOME_LOCATION', () => {\n      expect assertions(1);\n      expect(normalizeParams({}, defaultOrigin)) toEqual(defaultObject);\n    });\n    it('should convert an unknown pathPrefix to \"\"', () => {\n      expect assertions(1);\n      const brokenPrefix = { defaultObject,\n        pathPrefix: 'not-really-a-name'\n      };\n      expect(normalizeParams(brokenPrefix, defaultOrigin)) toEqual(\n        defaultObject\n      );\n    });\n    it('should not change a known pathPrefix', () => {\n      expect assertions(1);\n      const spanishPrefix = { defaultObject,\n        pathPrefix: 'espanol'\n      };\n      expect(normalizeParams(spanishPrefix, defaultOrigin)) toEqual(\n        spanishPrefix\n      );\n    });\n    // we *could*, in principle, grab the path and send them to\n    // process env HOME_LOCATION/path, but if the origin is wrong something unexpected is\n    // going on In that case it's probably best to just send them to\n    // process env HOME_LOCATION/learn it('should return default parameters if the origin is unknown', () => {\n      expect",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8085,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "96ed7646d1b38bde3d8e300a40683416",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
    "source_type": "git_repo",
    "title": "redirection.test",
    "content": "pathPrefix', () => { expect assertions(1); const spanishPrefix = { defaultObject, pathPrefix: 'espanol' }; expect(normalizeParams(spanishPrefix, defaultOrigin)) toEqual( spanishPrefix ); }); // we *could*, in principle, grab the path and send them to // process env HOME_LOCATION/path, but if the origin is wrong something unexpected is // going on In that case it's probably best to just send them to // process env HOME_LOCATION/learn it('should return default parameters if the origin is unknown', () => { expectassertions(1);\n      const exampleOrigin = { defaultObject,\n        origin: 'http://example com',\n        pathPrefix: 'espanol'\n      };\n      expect(normalizeParams(exampleOrigin, defaultOrigin)) toEqual(\n        defaultObject\n      );\n    });\n    it('should return default parameters if the returnTo is unknown', () => {\n      expect assertions(1);\n      const exampleReturnTo = { defaultObject,\n        returnTo: 'http://example com/path',\n        pathPrefix: 'espanol'\n      };\n      expect(normalizeParams(exampleReturnTo, defaultOrigin)) toEqual(\n        defaultObject\n      );\n    });\n\nit('should reject returnTo without trailing slashes', () => {\n      const exampleReturnTo = {\n        ...defaultObject,\n        returnTo: 'https://www.freecodecamp.dev'\n      };\n      expect(normalizeParams(exampleReturnTo, defaultOrigin)).toEqual(\n        defaultObject\n      );\n    });\n\nit('should not modify the returnTo if it is valid', () => {\n      const exampleReturnTo = {\n        ...defaultObject,\n        returnTo: 'https://www.freecodecamp.dev/'\n      };\n      expect(normalizeParams(exampleReturnTo, defaultOrigin)).toEqual(\n        exampleReturnTo\n      );\n    });\n  });\n\ndescribe('getRedirectParams', () => {\n    it('should return origin, pathPrefix and returnTo given valid headers', () => {\n      const req = {\n        headers: {\n          referer: `https://www.freecodecamp.org/espanol/learn/rosetta-code/`\n        }\n      };\n\nconst expectedReturn = {\n        origin: 'https://www.freecodecamp.org',\n        pathPrefix: 'espanol',\n        returnTo: 'https://www.freecodecamp.org/espanol/learn/rosetta-code/'\n      };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8085,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "f9d6abd66318dfe8f5ad7f3549f35954",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
    "source_type": "git_repo",
    "title": "redirection.test",
    "content": "const exampleReturnTo = { ...defaultObject, returnTo: 'https://www.freecodecamp.dev' }; expect(normalizeParams(exampleReturnTo, defaultOrigin)).toEqual( defaultObject ); }); it('should not modify the returnTo if it is valid', () => { const exampleReturnTo = { ...defaultObject, returnTo: 'https://www.freecodecamp.dev/' }; expect(normalizeParams(exampleReturnTo, defaultOrigin)).toEqual( exampleReturnTo ); }); }); describe('getRedirectParams', () => { it('should return origin, pathPrefix and returnTo given valid headers', () => { const req = { headers: { referer: `https://www.freecodecamp.org/espanol/learn/rosetta-code/` } }; const expectedReturn = { origin: 'https://www.freecodecamp.org', pathPrefix: 'espanol', returnTo: 'https://www.freecodecamp.org/espanol/learn/rosetta-code/' };\n\nconst result = getRedirectParams(req);\n      expect(result).toEqual(expectedReturn);\n    });\n\nit('should strip off any query parameters from the referer', () => {\n      const req = {\n        headers: {\n          referer: `https://www.freecodecamp.org/espanol/learn/rosetta-code/?query=param`\n        }\n      };\n\nconst expectedReturn = {\n        origin: 'https://www.freecodecamp.org',\n        pathPrefix: 'espanol',\n        returnTo: 'https://www.freecodecamp.org/espanol/learn/rosetta-code/'\n      };\n\nconst result = getRedirectParams(req);\n      expect(result).toEqual(expectedReturn);\n    });\n\nit('should returnTo the origin if the referer is missing', () => {\n      const req = {\n        headers: {}\n      };\n\nconst expectedReturn = {\n        returnTo: `${HOME_LOCATION}/`,\n        origin: HOME_LOCATION,\n        pathPrefix: ''\n      };\n\nconst result = getRedirectParams(req);\n      expect(result).toEqual(expectedReturn);\n    });\n\nit('should returnTo the origin if the referrer is invalid', () => {\n      const req = {\n        headers: {\n          referer: 'invalid-url'\n        }\n      };\n\nconst expectedReturn = {\n        returnTo: `${HOME_LOCATION}/`,\n        origin: HOME_LOCATION,\n        pathPrefix: ''\n      };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8085,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6255f9dfd35b11ec6f9a0f39d51e0a3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
    "source_type": "git_repo",
    "title": "redirection.test",
    "content": "}; const result = getRedirectParams(req); expect(result).toEqual(expectedReturn); }); it('should returnTo the origin if the referer is missing', () => { const req = { headers: {} }; const expectedReturn = { returnTo: `${HOME_LOCATION}/`, origin: HOME_LOCATION, pathPrefix: '' }; const result = getRedirectParams(req); expect(result).toEqual(expectedReturn); }); it('should returnTo the origin if the referrer is invalid', () => { const req = { headers: { referer: 'invalid-url' } }; const expectedReturn = { returnTo: `${HOME_LOCATION}/`, origin: HOME_LOCATION, pathPrefix: '' };\n\nconst result = getRedirectParams(req);\n      expect(result).toEqual(expectedReturn);\n    });\n  });\n\ndescribe('getLoginRedirectParams', () => {\n    it('should use the login-returnto cookie if present', () => {\n      const mockReq = {\n        cookies: {\n          'login-returnto': 'https://www.freecodecamp.org/espanol/learn'\n        },\n        unsignCookie: (rawValue: string) => ({ value: rawValue })\n      };\n\nconst expectedReturn = {\n        origin: 'https://www.freecodecamp.org',\n        pathPrefix: 'espanol',\n        returnTo: 'https://www.freecodecamp.org/espanol/learn'\n      };\n\nconst result = getLoginRedirectParams(mockReq);\n      expect(result).toEqual(expectedReturn);\n    });\n  });\n\ndescribe('getPrefixedLandingPath', () => {\n    it('should return the origin when no pathPrefix is provided', () => {\n      const result = getPrefixedLandingPath(defaultOrigin);\n      expect(result).toEqual(defaultOrigin);\n    });\n\nit('should append pathPrefix to origin when pathPrefix is provided', () => {\n      const expectedPath = `${defaultOrigin}/learn`;\n      const result = getPrefixedLandingPath(defaultOrigin, 'learn');\n      expect(result).toEqual(expectedPath);\n    });\n\nit('should handle empty origin', () => {\n      const pathPrefix = 'learn';\n      const expectedPath = '/learn';\n      const result = getPrefixedLandingPath('', pathPrefix);\n      expect(result).toEqual(expectedPath);\n    });\n\nit('should handle empty pathPrefix', () => {\n      const result = getPrefixedLandingPath(defaultOrigin, '');\n      expect(result).toEqual(defaultOrigin);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8085,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "3f51fba4bb96f1ca1e7570ba3db90be0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
    "source_type": "git_repo",
    "title": "redirection",
    "content": "import jwt from 'jsonwebtoken';\n\nimport { availableLangs } from '../../../shared/config/i18n';\nimport { allowedOrigins } from './allowed-origins';\n\n// process.env.HOME_LOCATION is being used as a fallback here. If the one\n// provided by the client is invalid we default to this.\nimport { HOME_LOCATION } from './env';\n\n/**\n * Get the returnTo value.\n *\n * @param encryptedParams - The encrypted parameters.\n * @param secret - The secret key.\n * @param _homeLocation - The home location.\n * @returns The returnTo value.\n */\nexport function getReturnTo(\n  encryptedParams: string,\n  secret: jwt.Secret,\n  _homeLocation = process.env.HOME_LOCATION\n) {\n  let params;\n  try {\n    params = jwt.verify(encryptedParams, secret);\n  } catch (e) {\n    // TODO: report to Sentry? Probably not. Remove entirely?\n    console.log(e);\n    // something went wrong, use default params\n    params = {\n      returnTo: `${_homeLocation}/learn`,\n      origin: _homeLocation,\n      pathPrefix: ''\n    };\n  }\n\n// @ts-expect-error - I'm working on it...\n  return normalizeParams(params, _homeLocation);\n}\n\ntype RedirectParams = {\n  returnTo: string;\n  origin: string;\n  pathPrefix: string;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5260,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "33a5ebdb7b896b426c61f831f0e83613",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
    "source_type": "git_repo",
    "title": "redirection",
    "content": "value. */ export function getReturnTo( encryptedParams: string, secret: jwt.Secret, _homeLocation = process.env.HOME_LOCATION ) { let params; try { params = jwt.verify(encryptedParams, secret); } catch (e) { // TODO: report to Sentry? Probably not. Remove entirely? console.log(e); // something went wrong, use default params params = { returnTo: `${_homeLocation}/learn`, origin: _homeLocation, pathPrefix: '' }; } // @ts-expect-error - I'm working on it... return normalizeParams(params, _homeLocation); } type RedirectParams = { returnTo: string; origin: string; pathPrefix: string; };\n\n/**\n * Normalize the parameters, making they're valid.\n *\n * @param arg - The parameters to normalize.\n * @param arg.returnTo - The returnTo value.\n * @param arg.origin - The origin value.\n * @param arg.pathPrefix - The pathPrefix value.\n * @param _homeLocation - The home location.\n * @returns The normalized parameters.\n */\nexport function normalizeParams(\n  { returnTo, origin, pathPrefix }: Partial<RedirectParams>,\n  _homeLocation = HOME_LOCATION\n): RedirectParams {\n  // coerce to strings, just in case something weird and nefarious is happening\n  // TODO: validate, don't coerce\n  returnTo = '' + returnTo;\n  origin = '' + origin;\n  pathPrefix = '' + pathPrefix;\n  // TODO(Post-MVP): consider adding HOME_LOCATION in allowedOrigins to allow\n  // redirection to work in development.\n  // we add the '/' to prevent returns to\n  // www.freecodecamp.org.somewhere.else.com\n  if (\n    !returnTo ||\n    !allowedOrigins.some(allowed => returnTo?.startsWith(allowed + '/'))\n  ) {\n    returnTo = `${_homeLocation}/learn`;\n    origin = _homeLocation;\n    pathPrefix = '';\n  }\n  if (!origin || !allowedOrigins.includes(origin)) {\n    returnTo = `${_homeLocation}/learn`;\n    origin = _homeLocation;\n    pathPrefix = '';\n  }\n  pathPrefix = availableLangs.client.includes(pathPrefix) ? pathPrefix : '';\n  return { returnTo, origin, pathPrefix };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5260,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "12f5231ba1dcc67472510913e28eb919",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
    "source_type": "git_repo",
    "title": "redirection",
    "content": "// TODO(Post-MVP): consider adding HOME_LOCATION in allowedOrigins to allow // redirection to work in development. // we add the '/' to prevent returns to // www.freecodecamp.org.somewhere.else.com if ( !returnTo || !allowedOrigins.some(allowed => returnTo?.startsWith(allowed + '/')) ) { returnTo = `${_homeLocation}/learn`; origin = _homeLocation; pathPrefix = ''; } if (!origin || !allowedOrigins.includes(origin)) { returnTo = `${_homeLocation}/learn`; origin = _homeLocation; pathPrefix = ''; } pathPrefix = availableLangs.client.includes(pathPrefix) ? pathPrefix : ''; return { returnTo, origin, pathPrefix }; }\n\n/**\n * Get the prefixed landing path.\n *\n * @param origin - The origin value.\n * @param pathPrefix - The pathPrefix value.\n * @returns The prefixed landing path.\n */\nexport function getPrefixedLandingPath(origin: string, pathPrefix?: string) {\n  const redirectPathSegment = pathPrefix ? `/${pathPrefix}` : '';\n  return `${origin}${redirectPathSegment}`;\n}\n\nfunction getParamsFromUrl(\n  url: string | undefined | null,\n  normalize: typeof normalizeParams\n) {\n  // since we do not always redirect the user back to the page they were on\n  // we need client locale and origin to construct the redirect url.\n  let returnUrl;\n  try {\n    returnUrl = new URL(url ? url : HOME_LOCATION);\n  } catch (_e) {\n    returnUrl = new URL(HOME_LOCATION);\n  }\n\nconst origin = returnUrl.origin;\n  // if this is not one of the client languages, validation will convert\n  // this to '' before it is used.\n  const pathPrefix = returnUrl.pathname.split('/')[1] ?? '';\n  return normalize({\n    // strip off any query parameters\n    returnTo: returnUrl.origin + returnUrl.pathname,\n    origin,\n    pathPrefix\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5260,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "9a9a2b98bea220db46d023b2e3cfb8c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
    "source_type": "git_repo",
    "title": "redirection",
    "content": "locale and origin to construct the redirect url. let returnUrl; try { returnUrl = new URL(url ? url : HOME_LOCATION); } catch (_e) { returnUrl = new URL(HOME_LOCATION); } const origin = returnUrl.origin; // if this is not one of the client languages, validation will convert // this to '' before it is used. const pathPrefix = returnUrl.pathname.split('/')[1] ?? ''; return normalize({ // strip off any query parameters returnTo: returnUrl.origin + returnUrl.pathname, origin, pathPrefix }); }\n\n/**\n * Get the redirect parameters.\n *\n * @param req - A fastify Request.\n * @param req.headers - The request headers.\n * @param req.headers.referer - The referer header.\n * @param _normalizeParams - The function to normalize the parameters.\n * @returns The redirect parameters.\n */\nexport function getRedirectParams(\n  req: { headers: { referer?: string } },\n  _normalizeParams = normalizeParams\n): RedirectParams {\n  const url = req.headers['referer'];\n  return getParamsFromUrl(url, _normalizeParams);\n}\n\n/**\n * Get the redirect parameters after sign in flow.\n *\n * @param req - A fastify Request.\n * @param req.cookies - The request cookies.\n * @param req.unsignCookie - The function to unsign the cookie.\n * @param _normalizeParams - The function to normalize the parameters.\n * @returns The redirect parameters.\n */\nexport function getLoginRedirectParams(\n  req: {\n    cookies: Record<string, string | undefined>;\n    unsignCookie: (rawValue: string) => { value: string | null };\n  },\n  _normalizeParams = normalizeParams\n): RedirectParams {\n  const signedUrl = req.cookies['login-returnto'];\n  const url = signedUrl ? req.unsignCookie(signedUrl).value : null;\n  return getParamsFromUrl(url, _normalizeParams);\n}\n\n/**\n * Check if the redirect base and return URL have the same path.\n *\n * @param redirectBase - The redirect base URL.\n * @param returnUrl - The return URL.\n * @returns A boolean indicating whether the paths are the same.\n */\nexport function haveSamePath(\n  redirectBase: string | URL,\n  returnUrl: string | URL\n) {\n  const base = new URL(redirectBase);\n  const url = new URL(returnUrl);\n  return base.pathname === url.pathname;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5260,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\redirection.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ac6643f17d22fdc34c222333b229eda8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\tokens.ts",
    "source_type": "git_repo",
    "title": "tokens",
    "content": "import jwt from 'jsonwebtoken';\nimport { customNanoid } from './ids';\n\nimport { JWT_SECRET } from './env';\n\n/**\n * Encode an id into a JWT (the naming suggests it's a user token, but it's the\n * id of the UserToken document).\n * @param userToken A token id to encode.\n * @returns An encoded object with the userToken property.\n */\nexport function encodeUserToken(userToken: string): string {\n  return jwt.sign({ userToken }, JWT_SECRET);\n}\n\nexport type Token = {\n  userId: string;\n  id: string;\n  ttl: number;\n  created: string;\n};\n\ntype DbToken = {\n  userId: string;\n  id: string;\n  ttl: number;\n  created: Date;\n};\n\n/**\n * Creates an access token.\n * @param userId The user ID as a string (yes, it's an ObjectID, but it will be serialized to a string anyway).\n * @param ttl The time to live for the token in milliseconds (default: 77760000000).\n * @returns The access token.\n */\nexport const createAccessToken = (userId: string, ttl?: number): Token => {\n  return {\n    userId,\n    id: customNanoid(),\n    ttl: ttl ?? 77760000000,\n    created: new Date().toISOString()\n  };\n};\n\n/**\n * Creates an auth token.\n * @param userId The user ID as a string (yes, it's an ObjectID, but it will be serialized to a string anyway).\n * @param ttl The time to live for the token in milliseconds (default: 900000 aka 15 minutes).\n * @returns The access token.\n */\nexport const createAuthToken = (userId: string, ttl?: number): Token => {\n  return {\n    userId,\n    id: customNanoid(),\n    ttl: ttl ?? 900000,\n    created: new Date().toISOString()\n  };\n};\n\n/**\n * Check if an access token has expired.\n * @param token The access token to check.\n * @returns True if the token has expired, false otherwise.\n */\nexport const isExpired = (token: Token | DbToken): boolean => {\n  const created = new Date(token.created);\n  return Date.now() > created.getTime() + token.ttl;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1858,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\tokens.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ab02a72e21c826f14da60393f912bc12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\tokens.test.ts",
    "source_type": "git_repo",
    "title": "tokens.test",
    "content": "jest.useFakeTimers();\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { createAccessToken, createAuthToken, isExpired } from './tokens';\n\ndescribe('createAccessToken', () => {\n  it('creates an object with id, ttl, created and userId', () => {\n    const userId = 'abc';\n\nconst actual = createAccessToken(userId);\n\nexpect(actual).toStrictEqual({\n      id: expect.stringMatching(/[a-zA-Z0-9]{64}/),\n      ttl: 77760000000,\n      created: expect.stringMatching(\n        /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/\n      ),\n      userId\n    });\n  });\n\nit('sets the ttl, defaulting to 77760000000 ms', () => {\n    const userId = 'abc';\n    const ttl = 123;\n    const actual = createAccessToken(userId, ttl);\n\nexpect(actual.ttl).toBe(ttl);\n    expect(createAccessToken(userId).ttl).toBe(77760000000);\n  });\n});\n\ndescribe('createAuthToken', () => {\n  it('creates an object with id, ttl, created and userId', () => {\n    const userId = 'abc';\n\nconst actual = createAuthToken(userId);\n\nexpect(actual).toStrictEqual({\n      id: expect.stringMatching(/[a-zA-Z0-9]{64}/),\n      ttl: 900000,\n      created: expect.stringMatching(\n        /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/\n      ),\n      userId\n    });\n  });\n\nit('sets the ttl, defaulting to 900000 ms', () => {\n    const userId = 'abc';\n    const ttl = 123;\n    const actual = createAuthToken(userId, ttl);\n\nexpect(actual.ttl).toBe(ttl);\n    expect(createAuthToken(userId).ttl).toBe(900000);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2269,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\tokens.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7b51037b09a2d28a74b2aa040aca8a0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\tokens.test.ts",
    "source_type": "git_repo",
    "title": "tokens.test",
    "content": "const ttl = 123; const actual = createAccessToken(userId, ttl); expect(actual.ttl).toBe(ttl); expect(createAccessToken(userId).ttl).toBe(77760000000); }); }); describe('createAuthToken', () => { it('creates an object with id, ttl, created and userId', () => { const userId = 'abc'; const actual = createAuthToken(userId); expect(actual).toStrictEqual({ id: expect.stringMatching(/[a-zA-Z0-9]{64}/), ttl: 900000, created: expect.stringMatching( /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/ ), userId }); }); it('sets the ttl, defaulting to 900000 ms', () => { const userId = 'abc'; const ttl = 123; const actual = createAuthToken(userId, ttl); expect(actual.ttl).toBe(ttl); expect(createAuthToken(userId).ttl).toBe(900000); }); });\n\ndescribe('isExpired', () => {\n  it('returns true if the token expiry date is in the past', () => {\n    const token = createAccessToken('abc', 1000);\n    expect(isExpired(token)).toBe(false);\n    jest.advanceTimersByTime(500);\n    expect(isExpired(token)).toBe(false);\n    jest.advanceTimersByTime(500);\n    expect(isExpired(token)).toBe(false);\n    jest.advanceTimersByTime(1);\n    expect(isExpired(token)).toBe(true);\n  });\n\nit('handles tokens with Date values for created', () => {\n    const token = { ...createAccessToken('abc', 2000), created: new Date() };\n    expect(isExpired(token)).toBe(false);\n    jest.advanceTimersByTime(2000);\n    expect(isExpired(token)).toBe(false);\n    jest.advanceTimersByTime(1);\n    expect(isExpired(token)).toBe(true);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2269,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\tokens.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "dfd0fa00cd274f75627825ac2e862bc9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\validate-donation.test.ts",
    "source_type": "git_repo",
    "title": "validate-donation.test",
    "content": "import { inLastFiveMinutes } from './validate-donation';\n\ndescribe('inLastFiveMinutes', () => {\n  beforeAll(() => {\n    jest.useFakeTimers();\n  });\n\nafterAll(() => {\n    jest.useRealTimers();\n  });\n\nit('should return true if the timestamp is within the last five minutes', () => {\n    const currentTimestamp = Math.floor(Date.now() / 1000);\n    const recentTimestamp = currentTimestamp - 100;\n    expect(inLastFiveMinutes(recentTimestamp)).toBe(true);\n  });\n\nit('should return false if the timestamp is more than five minutes ago', () => {\n    const currentTimestamp = Math.floor(Date.now() / 1000);\n    const oldTimestamp = currentTimestamp - 400;\n    expect(inLastFiveMinutes(oldTimestamp)).toBe(false);\n  });\n\nit('should return true if the timestamp is exactly five minutes ago', () => {\n    const currentTimestamp = Math.floor(Date.now() / 1000);\n    const exactTimestamp = currentTimestamp - 300;\n    expect(inLastFiveMinutes(exactTimestamp)).toBe(true);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 978,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\validate-donation.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a704c3e7360d14d5e6df09f6dcc2ba2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\validate-donation.ts",
    "source_type": "git_repo",
    "title": "validate-donation",
    "content": "/**\n * Checks if a timestamp was created within five minutes.\n * @param unixTimestamp - A unix timestamp .\n * @returns - The generated email template.\n */\nexport const inLastFiveMinutes = (unixTimestamp: number) => {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  const timeDifference = currentTimestamp - unixTimestamp;\n  return timeDifference <= 300; // 300 seconds is 5 minutes\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 397,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\validate-donation.ts",
      "source_type": "git_repo"
    },
    "token_count": 91,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8abe6c4ecd15802ca360aea21885fa6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\validation.test.ts",
    "source_type": "git_repo",
    "title": "validation.test",
    "content": "import { isObjectID } from './validation';\n\ndescribe('Validation', () => {\n  describe('isObjectID', () => {\n    it('returns true for valid ObjectIDs', () => {\n      expect(isObjectID('5f1e0f3b5d2c12b0b8f7a6b9')).toBe(true);\n    });\n\nit('returns false for invalid ObjectIDs', () => {\n      expect(isObjectID('5f1e0f3b5d2c12b0b8f7a6b')).toBe(false);\n      expect(isObjectID('5f1e0f3b5d2c12b0b8f7a6b99')).toBe(false);\n      expect(isObjectID('5f1e0f3b5d2c12b0b8f7a6b-')).toBe(false);\n      expect(isObjectID(undefined)).toBe(false);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 552,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\validation.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2bac2eddd91f898abc779fc270328e63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\utils\\validation.ts",
    "source_type": "git_repo",
    "title": "validation",
    "content": "import { ObjectId } from 'mongodb';\n\n// This is trivial, but makes it simple to refactor if we swap monogodb for\n// bson, say.\n\n/**\n * Checks if a string is a valid MongoDB ObjectID.\n * @param id A string to check.\n * @returns A boolean indicating if the string is a valid MongoDB ObjectID.\n */\nexport const isObjectID = (id?: string): boolean =>\n  id ? ObjectId.isValid(id) : false;\n\n// Refer : http://stackoverflow.com/a/430240/1932901\n/**\n * Sanitizes a input by removing HTML tags.\n * @deprecated\n * @param value A string to sanitize.\n * @returns A string with HTML tags removed.\n */\nexport const trimTags = (value: string): string => {\n  const tagBody = '(?:[^\"\\'>]|\"[^\"]*\"|\\'[^\\']*\\')*';\n  const tagOrComment = new RegExp(\n    '<(?:' +\n      // Comment body.\n      '!--(?:(?:-*[^->])*--+|-?)' +\n      // Special \"raw text\" elements whose content should be elided.\n      '|script\\\\b' +\n      tagBody +\n      '>[\\\\s\\\\S]*?</script\\\\s*' +\n      '|style\\\\b' +\n      tagBody +\n      '>[\\\\s\\\\S]*?</style\\\\s*' +\n      // Regular name\n      '|/?[a-z]' +\n      tagBody +\n      ')>',\n    'gi'\n  );\n  let rawValue;\n  do {\n    rawValue = value;\n    value = value.replace(tagOrComment, '');\n  } while (value !== rawValue);\n\nreturn value.replace(/</g, '&lt;');\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1257,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\utils\\validation.ts",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b61c9848d9e62be1ad62bfa4819bf5f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\certificate-verify.ts",
    "source_type": "git_repo",
    "title": "certificate-verify",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError, isCertMap } from '../types'; export const certificateVerify = {\n  // TODO(POST_MVP): Remove partial validation from route for schema validation\n  body: Type Object({\n    certSlug: Type String({ maxLength: 1024 })\n  }),\n  response: {\n    200: Type Object({\n      response: Type Union([\n        Type Object({\n          type: Type Literal('info'),\n          message: Type Union([Type Literal('flash already-claimed')]),\n          variables: Type Object({\n            name: Type String()\n          })\n        }),\n        Type Object({\n          type: Type Literal('success'),\n          message: Type Literal('flash cert-claim-success'),\n          variables: Type Object({\n            username: Type String(),\n            name: Type String()\n          })\n        })\n      ]),\n      isCertMap,\n      completedChallenges: Type Array(\n        Type Object({\n          id: Type String(),\n          completedDate: Type Number(),\n          solution: Type Optional(Type String()),\n          githubLink: Type Optional(Type String()),\n          challengeType: Type Optional(Type Number()),\n          // Technically, files is optional, but the db default was [] and\n          // the client treats null, undefined and [] equivalently // TODO(Post-MVP): make this optional files: Type Array(\n            Type Object({\n              contents: Type String(),\n              key: Type String(),\n              ext: Type String(),\n              name: Type String(),\n              path: Type Optional(Type String())\n            })\n          ),\n          isManuallyApproved: Type Optional(Type Boolean())\n        })\n      )\n    }),\n    400: Type Union([\n      Type Object({\n        response: Type Object({\n          type: Type Literal('info'),\n          message: Type Union([Type Literal('flash incomplete-steps')]),\n          variables: Type Object({\n            name: Type String()\n          })\n        }),\n        isCertMap,\n        completedChallenges: Type Array(\n          Type Object({\n            id: Type String(),\n            completedDate: Type Number(),\n            solution: Type Optional(Type String()),\n            githubLink: Type Optional(Type String()),\n            challengeType: Type Optional(Type Number()),\n            // Technically, files is optional, but the db default was [] and\n            // the client treats null, undefined and [] equivalently // TODO(Post-MVP): make this optional files: Type Array(\n              Type Object({\n                contents: Type",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4430,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\certificate-verify.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bfc1c938ad390f42a6659999a96ea984",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\certificate-verify.ts",
    "source_type": "git_repo",
    "title": "certificate-verify",
    "content": "response: Type Object({ type: Type Literal('info'), message: Type Union([Type Literal('flash incomplete-steps')]), variables: Type Object({ name: Type String() }) }), isCertMap, completedChallenges: Type Array( Type Object({ id: Type String(), completedDate: Type Number(), solution: Type Optional(Type String()), githubLink: Type Optional(Type String()), challengeType: Type Optional(Type Number()), // Technically, files is optional, but the db default was [] and // the client treats null, undefined and [] equivalently // TODO(Post-MVP): make this optional files: Type Array( Type Object({ contents: TypeString(),\n                key: Type String(),\n                ext: Type String(),\n                name: Type String(),\n                path: Type Optional(Type String())\n              })\n            ),\n            isManuallyApproved: Type Optional(Type Boolean())\n          })\n        )\n      }),\n      Type Object({\n        response: Type Object({\n          type: Type Literal('danger'),\n          message: Type Union([Type Literal('flash wrong-name')]),\n          variables: Type Object({\n            name: Type String()\n          })\n        })\n      }),\n      Type Object({\n        response: Type Object({\n          type: Type Literal('info'),\n          message: Type Union([Type Literal('flash name-needed')])\n        }),\n        isCertMap,\n        completedChallenges: Type Array(\n          Type Object({\n            id: Type String(),\n            completedDate: Type Number(),\n            solution: Type Optional(Type String()),\n            githubLink: Type Optional(Type String()),\n            challengeType: Type Optional(Type Number()),\n            // Technically, files is optional, but the db default was [] and\n            // the client treats null, undefined and [] equivalently // TODO(Post-MVP): make this optional files: Type Array(\n              Type Object({\n                contents: Type String(),\n                key: Type String(),\n                ext: Type String(),\n                name: Type String(),\n                path: Type Optional(Type String())\n              })\n            ),\n            isManuallyApproved: Type Optional(Type Boolean())\n          })\n        )\n      })\n    ]),\n    500: Type Union([\n      Type Object({\n        type: Type Literal('danger'),\n        message: Type Literal('flash went-wrong')\n      }),\n      genericError\n    ]),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4430,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\certificate-verify.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a6749d341ad2714481e6a47c55e28486",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\cert-slug.ts",
    "source_type": "git_repo",
    "title": "cert-slug",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { Certification } from '../../../../shared/config/certification-settings';\nimport { genericError } from '../types'; export const certSlug = {\n  params: Type Object({\n    certSlug: Type String(),\n    username: Type String()\n  }),\n  response: {\n    // TODO(POST_MVP): Most of these should not be 200s\n    200: Type Union([\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type Literal('info'),\n            message: Type Literal('flash username-not-found'),\n            variables: Type Object({\n              username: Type String()\n            })\n          })\n        )\n      }),\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type Literal('info'),\n            message: Type Literal('flash not-eligible')\n          })\n        )\n      }),\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type Literal('info'),\n            message: Type Literal('flash not-honest'),\n            variables: Type Object({\n              username: Type String()\n            })\n          })\n        )\n      }),\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type Literal('info'),\n            message: Type Literal('flash profile-private'),\n            variables: Type Object({\n              username: Type String()\n            })\n          })\n        )\n      }),\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type Literal('info'),\n            message: Type Literal('flash add-name')\n          })\n        )\n      }),\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type Literal('info'),\n            message: Type Literal('flash certs-private'),\n            variables: Type Object({\n              username: Type String()\n            })\n          })\n        )\n      }),\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type Literal('info'),\n            message: Type Literal('flash timeline-private'),\n            variables: Type Object({\n              username: Type String()\n            })\n          })\n        )\n      }),\n      Type Object({\n        certSlug: Type Enum(Certification),\n        certTitle: Type String(),\n        username: Type String(),\n        name: Type Optional(Type String()),\n        date: Type Number(),\n        completionTime: Type Number()\n      }),\n      Type Object({\n        messages: Type Array(\n          Type Object({\n            type: Type",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3174,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\cert-slug.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d1ce7d6860f661bdd5195cb194fdac8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\cert-slug.ts",
    "source_type": "git_repo",
    "title": "cert-slug",
    "content": "Type Array( Type Object({ type: Type Literal('info'), message: Type Literal('flash certs-private'), variables: Type Object({ username: Type String() }) }) ) }), Type Object({ messages: Type Array( Type Object({ type: Type Literal('info'), message: Type Literal('flash timeline-private'), variables: Type Object({ username: Type String() }) }) ) }), Type Object({ certSlug: Type Enum(Certification), certTitle: Type String(), username: Type String(), name: Type Optional(Type String()), date: Type Number(), completionTime: Type Number() }), Type Object({ messages: Type Array( Type Object({ type: TypeLiteral('info'),\n            message: Type Literal('flash user-not-certified'),\n            variables: Type Object({\n              username: Type String(),\n              cert: Type String()\n            })\n          })\n        )\n      })\n    ]),\n    404: Type Object({\n      messages: Type Array(\n        Type Object({\n          message: Type Literal('flash cert-not-found'),\n          type: Type Literal('info'),\n          variables: Type Object({\n            certSlug: Type String()\n          })\n        })\n      )\n    }),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3174,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\certificate\\cert-slug.ts",
      "source_type": "git_repo"
    },
    "token_count": 243,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5d410410d15e40264501d2b15a6119fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\backend-challenge-completed.ts",
    "source_type": "git_repo",
    "title": "backend-challenge-completed",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const backendChallengeCompleted = {\n  body: Type.Object({\n    id: Type.String({ format: 'objectid', maxLength: 24, minLength: 24 })\n  }),\n  response: {\n    200: Type.Object({\n      completedDate: Type.Number(),\n      points: Type.Number(),\n      alreadyCompleted: Type.Boolean()\n    }),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal(\n        'That does not appear to be a valid challenge submission.'\n      )\n    }),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 594,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\backend-challenge-completed.ts",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0e4c96d89406516f35fe0686d1e6a098",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\coderoad-challenge-completed.ts",
    "source_type": "git_repo",
    "title": "coderoad-challenge-completed",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const coderoadChallengeCompleted = {\n  body: Type.Object({\n    tutorialId: Type.String()\n  }),\n  headers: Type.Object({ 'coderoad-user-token': Type.String() }),\n  response: {\n    200: Type.Object({\n      type: Type.Literal('success'),\n      msg: Type.String()\n    }),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      msg: Type.String()\n    }),\n    default: Type.Object({\n      type: Type.Literal('error'),\n      msg: Type.String()\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 523,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\coderoad-challenge-completed.ts",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "062cad5d5894524552aaa08c3c017cfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\daily-coding-challenge-completed.ts",
    "source_type": "git_repo",
    "title": "daily-coding-challenge-completed",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { DailyCodingChallengeLanguage } from '@prisma/client';\n\nconst languages = Object.values(DailyCodingChallengeLanguage).map(k =>\n  Type.Literal(k)\n);\n\nexport const dailyCodingChallengeCompleted = {\n  body: Type.Object({\n    id: Type.String({ format: 'objectid', maxLength: 24, minLength: 24 }),\n    language: Type.Union(languages)\n  }),\n  response: {\n    200: Type.Object({\n      completedDate: Type.Number(),\n      points: Type.Number(),\n      alreadyCompleted: Type.Boolean(),\n      completedDailyCodingChallenges: Type.Array(\n        Type.Object({\n          id: Type.String(),\n          completedDate: Type.Number(),\n          languages: Type.Array(Type.Union(languages))\n        })\n      )\n    }),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal(\n        'That does not appear to be a valid challenge submission.'\n      )\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 939,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\daily-coding-challenge-completed.ts",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2d9b2df3af7715d1ddcc01aa16570204",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\exam-challenge-completed.ts",
    "source_type": "git_repo",
    "title": "exam-challenge-completed",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { examResults, genericError } from '../types';\n\nexport const examChallengeCompleted = {\n  body: Type.Object({\n    id: Type.String({ format: 'objectid', maxLength: 24, minLength: 24 }),\n    challengeType: Type.Number(),\n    userCompletedExam: Type.Object({\n      examTimeInSeconds: Type.Number(),\n      userExamQuestions: Type.Array(\n        Type.Object({\n          id: Type.String(),\n          question: Type.String(),\n          answer: Type.Object({\n            id: Type.String(),\n            answer: Type.String()\n          })\n        }),\n        { minItems: 1 }\n      )\n    })\n  }),\n  response: {\n    200: Type.Object({\n      completedDate: Type.Number(),\n      points: Type.Number(),\n      alreadyCompleted: Type.Boolean(),\n      examResults\n    }),\n    400: Type.Object({\n      error: Type.String()\n    }),\n    403: Type.Union([\n      Type.Object({\n        error: Type.String()\n      }),\n      genericError\n    ]),\n    500: Type.Object({\n      error: Type.String()\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1046,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\exam-challenge-completed.ts",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8bf4a608a029ea06646b6cf45dc511ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\exam.ts",
    "source_type": "git_repo",
    "title": "exam",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const exam = {\n  params: Type.Object({\n    id: Type.String({\n      format: 'objectid',\n      maxLength: 24,\n      minLength: 24\n    })\n  }),\n  response: {\n    200: Type.Object({\n      generatedExam: Type.Array(\n        Type.Object({\n          id: Type.String(),\n          question: Type.String(),\n          answers: Type.Array(\n            Type.Object({\n              id: Type.String(),\n              answer: Type.String()\n            })\n          )\n        })\n      )\n    }),\n    // TODO: Standardize error responses - e.g. { type, message }\n    400: Type.Object({\n      error: Type.String()\n    }),\n    403: Type.Union([\n      Type.Object({\n        error: Type.String()\n      }),\n      genericError\n    ]),\n    500: Type.Object({\n      error: Type.String()\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 877,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\exam.ts",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "726a6f2e8970ed3fb4433de60c91a1dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\modern-challenge-completed.ts",
    "source_type": "git_repo",
    "title": "modern-challenge-completed",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError, savedChallenge } from '../types';\n\nexport const modernChallengeCompleted = {\n  body: Type.Object({\n    id: Type.String({ format: 'objectid', maxLength: 24, minLength: 24 }),\n    challengeType: Type.Number(),\n    files: Type.Optional(\n      Type.Array(\n        Type.Object({\n          contents: Type.String(),\n          key: Type.String(),\n          ext: Type.String(),\n          name: Type.String(),\n          history: Type.Array(Type.String())\n        })\n      )\n    )\n  }),\n  response: {\n    200: Type.Object({\n      completedDate: Type.Number(),\n      points: Type.Number(),\n      alreadyCompleted: Type.Boolean(),\n      savedChallenges: Type.Array(savedChallenge)\n    }),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal(\n        'That does not appear to be a valid challenge submission.'\n      )\n    }),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 957,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\modern-challenge-completed.ts",
      "source_type": "git_repo"
    },
    "token_count": 213,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "67ee48106c7221dd647d25d227b8201f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\ms-trophy-challenge-completed.ts",
    "source_type": "git_repo",
    "title": "ms-trophy-challenge-completed",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const msTrophyChallengeCompleted = {\n  body: Type.Object({\n    id: Type.String({ format: 'objectid', maxLength: 24, minLength: 24 })\n  }),\n  response: {\n    200: Type.Object({\n      completedDate: Type.Number(),\n      points: Type.Number(),\n      alreadyCompleted: Type.Boolean()\n    }),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal('flash.ms.trophy.err-2')\n    }),\n    403: Type.Union([\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.trophy.err-1')\n      }),\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.trophy.err-3')\n      }),\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.trophy.err-4'),\n        variables: Type.Object({\n          msUsername: Type.String()\n        })\n      }),\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.trophy.err-6')\n      }),\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.profile.err'),\n        variables: Type.Object({\n          msUsername: Type.String()\n        })\n      })\n    ]),\n    500: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal('flash.ms.trophy.err-5')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1395,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\ms-trophy-challenge-completed.ts",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8fb8cdf069e290748bdc0277dae53cfa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\save-challenge.ts",
    "source_type": "git_repo",
    "title": "save-challenge",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { file, genericError, savedChallenge } from '../types';\n\nexport const saveChallenge = {\n  body: Type.Object({\n    id: Type.String({\n      format: 'objectid',\n      maxLength: 24,\n      minLength: 24\n    }),\n    files: Type.Array(file)\n  }),\n  response: {\n    200: Type.Object({\n      savedChallenges: Type.Array(savedChallenge)\n    }),\n    400: Type.Union([\n      Type.Object({\n        message: Type.Literal(\n          'That does not appear to be a valid challenge submission.'\n        ),\n        type: Type.Literal('error')\n      }),\n      Type.Literal('That challenge type is not saveable.')\n    ]),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 697,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\save-challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c7e15b0535cf927dea0e213e6f1cf374",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\project-completed.ts",
    "source_type": "git_repo",
    "title": "project-completed",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const projectCompleted = {\n  body: Type.Object({\n    id: Type.String({ format: 'objectid', maxLength: 24, minLength: 24 }),\n    challengeType: Type.Optional(Type.Number()),\n    // The solution must be a valid URL only if it is a `backEndProject`.\n    solution: Type.String({ maxLength: 1024 }),\n    githubLink: Type.Optional(Type.String())\n  }),\n  response: {\n    200: Type.Object({\n      // TODO(Post-MVP): delete completedDate and alreadyCompleted? As far as\n      // I can tell, they are not used anywhere\n      completedDate: Type.Number(),\n      points: Type.Number(),\n      alreadyCompleted: Type.Boolean()\n    }),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Union([\n        Type.Literal(\n          'That does not appear to be a valid challenge submission.'\n        ),\n        Type.Literal(\n          'You have not provided the valid links for us to inspect your work.'\n        )\n      ])\n    }),\n    403: Type.Union([\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Union([\n          Type.Literal(\n            'You have to complete the project before you can submit a URL.'\n          ),\n          Type.Literal(\n            'That does not appear to be a valid challenge submission.'\n          )\n        ])\n      }),\n      genericError\n    ]),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1451,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\project-completed.ts",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6b392866bb073576dcc27a30419ff334",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\submit-quiz-attempt.ts",
    "source_type": "git_repo",
    "title": "submit-quiz-attempt",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const submitQuizAttempt = {\n  body: Type.Object({\n    challengeId: Type.String({\n      format: 'objectid',\n      maxLength: 24,\n      minLength: 24\n    }),\n    quizId: Type.String()\n  }),\n  response: {\n    200: Type.Object({}),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal(\n        'That does not appear to be a valid quiz attempt submission.'\n      )\n    }),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 538,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\challenge\\submit-quiz-attempt.ts",
      "source_type": "git_repo"
    },
    "token_count": 134,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "17c19570a1158950f66dea0a60c8d341",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\deprecated\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const deprecatedEndpoints = {\n  response: {\n    410: Type.Object({\n      message: Type.Object({\n        type: Type.Literal('info'),\n        message: Type.Literal(\n          'Please reload the app, this feature is no longer available.'\n        )\n      })\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 331,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\deprecated\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 75,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "04b1f14456b68468e541ba0eb389477d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\add-donation.ts",
    "source_type": "git_repo",
    "title": "add-donation",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const addDonation = {\n  body: Type.Object({}),\n  response: {\n    200: Type.Object({\n      isDonating: Type.Boolean()\n    }),\n    400: Type.Object({\n      message: Type.Literal('User is already donating.'),\n      type: Type.Literal('info')\n    }),\n    500: Type.Object({\n      message: Type.Literal('Something went wrong.'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 436,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\add-donation.ts",
      "source_type": "git_repo"
    },
    "token_count": 110,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "113f7bf7244eb8f7a3fc7c83135288de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\charge-stripe.ts",
    "source_type": "git_repo",
    "title": "charge-stripe",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const chargeStripe = {\n  body: Type.Object({\n    amount: Type.Number(),\n    duration: Type.Literal('month'),\n    email: Type.String({ format: 'email', maxLength: 1024 }),\n    subscriptionId: Type.String()\n  }),\n  response: {\n    200: Type.Object({\n      isDonating: Type.Boolean()\n    }),\n    default: Type.Object({\n      error: Type.Literal('Donation failed due to a server error.')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 461,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\charge-stripe.ts",
      "source_type": "git_repo"
    },
    "token_count": 114,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d52204b28b7d1006e79efe334fedc983",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\charge-stripe-card.ts",
    "source_type": "git_repo",
    "title": "charge-stripe-card",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const chargeStripeCard = {\n  body: Type.Object({\n    paymentMethodId: Type.String(),\n    amount: Type.Number(),\n    duration: Type.Literal('month')\n  }),\n  response: {\n    200: Type.Object({\n      isDonating: Type.Boolean(),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      error: Type.Object({\n        message: Type.String(),\n        type: Type.Union([\n          Type.Literal('AlreadyDonatingError'),\n          Type.Literal('MethodRestrictionError')\n        ])\n      })\n    }),\n    402: Type.Object({\n      error: Type.Object({\n        message: Type.String(),\n        type: Type.Union([\n          Type.Literal('UserActionRequired'),\n          Type.Literal('PaymentMethodRequired')\n        ]),\n        client_secret: Type.Optional(Type.String())\n      })\n    }),\n    403: Type.Object({\n      error: Type.Object({\n        message: Type.String(),\n        type: Type.Literal('EmailRequiredError')\n      })\n    }),\n    500: Type.Object({\n      error: Type.Literal('Donation failed due to a server error.')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1103,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\charge-stripe-card.ts",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "59b4040881bbf238ba144c1313fe2859",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\create-stripe-payment-intent.ts",
    "source_type": "git_repo",
    "title": "create-stripe-payment-intent",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const createStripePaymentIntent = {\n  body: Type.Object({\n    amount: Type.Number(),\n    duration: Type.Literal('month'),\n    email: Type.String({ format: 'email', maxLength: 1024 }),\n    name: Type.String()\n  }),\n  response: {\n    200: Type.Object({\n      subscriptionId: Type.String(),\n      clientSecret: Type.String()\n    }),\n    400: Type.Object({\n      error: Type.Literal(\n        'The donation form had invalid values for this submission.'\n      )\n    }),\n    default: Type.Object({\n      error: Type.Literal('Donation failed due to a server error.')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 636,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\create-stripe-payment-intent.ts",
      "source_type": "git_repo"
    },
    "token_count": 151,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "08b97ab1361181aacc9f1baaf49b9596",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\update-stripe-card.ts",
    "source_type": "git_repo",
    "title": "update-stripe-card",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const updateStripeCard = {\n  body: Type.Object({}),\n  response: {\n    200: Type.Object({\n      sessionId: Type.String()\n    }),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 265,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\donate\\update-stripe-card.ts",
      "source_type": "git_repo"
    },
    "token_count": 64,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d71ab4ad4253709ec10bd43669000112",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\email-subscription\\resubscribe.ts",
    "source_type": "git_repo",
    "title": "resubscribe",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const resubscribe = {\n  params: Type.Object({\n    unsubscribeId: Type.String({\n      minLength: 1\n    })\n  })\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 176,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\email-subscription\\resubscribe.ts",
      "source_type": "git_repo"
    },
    "token_count": 44,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dd41c9275f194d96fee14637237f165a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\email-subscription\\unsubscribe.ts",
    "source_type": "git_repo",
    "title": "unsubscribe",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const unsubscribe = {\n  params: Type.Object({\n    unsubscribeId: Type.String({\n      minLength: 1\n    })\n  })\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 176,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\email-subscription\\unsubscribe.ts",
      "source_type": "git_repo"
    },
    "token_count": 42,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "85015a925da02b6b62ead89aaa96c2a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\sentry\\event.ts",
    "source_type": "git_repo",
    "title": "event",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const sentryPostEvent = {\n  body: Type.Object({\n    text: Type.String()\n  }),\n  response: {\n    500: Type.Object({\n      message: Type.Literal('flash.generic-error'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 279,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\sentry\\event.ts",
      "source_type": "git_repo"
    },
    "token_count": 71,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "438c2d2f0f66c6a515254d72b130877d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\confirm-email.ts",
    "source_type": "git_repo",
    "title": "confirm-email",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const confirmEmail = {\n  querystring: Type.Object({\n    email: Type.String({ maxLength: 1000 }),\n    token: Type.String({ minLength: 64, maxLength: 64 })\n  })\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 225,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\confirm-email.ts",
      "source_type": "git_repo"
    },
    "token_count": 57,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ec8ea0b41fbe72cce32886dc92ad7cdc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-about.ts",
    "source_type": "git_repo",
    "title": "update-my-about",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyAbout = {\n  body: Type.Object({\n    // TODO(Post-MVP): make these required\n    about: Type.Optional(Type.String()),\n    name: Type.Optional(Type.String()),\n    picture: Type.Optional(Type.String()),\n    location: Type.Optional(Type.String())\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.updated-about-me'),\n      type: Type.Literal('success')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 586,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-about.ts",
      "source_type": "git_repo"
    },
    "token_count": 139,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "09edc699af55cdbe4c5f06430729cb02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-classroom-mode.ts",
    "source_type": "git_repo",
    "title": "update-my-classroom-mode",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const updateMyClassroomMode = {\n  body: Type.Object({\n    isClassroomAccount: Type.Boolean()\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.classroom-mode-updated'),\n      type: Type.Literal('success')\n    }),\n    403: Type.Union([\n      Type.Object({\n        message: Type.Literal('flash.wrong-updating'),\n        type: Type.Literal('danger')\n      }),\n      genericError\n    ])\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 522,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-classroom-mode.ts",
      "source_type": "git_repo"
    },
    "token_count": 129,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "11ac9cf8682dca32572f10cc7f58cd85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-email.ts",
    "source_type": "git_repo",
    "title": "update-my-email",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyEmail = {\n  body: Type.Object({\n    email: Type.String({ format: 'email', maxLength: 1024 })\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal(\n        'Check your email and click the link we sent you to confirm your new email address.'\n      ),\n      type: Type.Literal('info')\n    }),\n    400: Type.Object({\n      message: Type.String(),\n      type: Type.Union([Type.Literal('danger'), Type.Literal('info')])\n    }),\n    429: Type.Object({\n      message: Type.String(),\n      type: Type.Literal('info')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 736,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-email.ts",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fd1e52eabf6b99b853f4bd47095eaa45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-keyboard-shortcuts.ts",
    "source_type": "git_repo",
    "title": "update-my-keyboard-shortcuts",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyKeyboardShortcuts = {\n  body: Type.Object({\n    keyboardShortcuts: Type.Boolean()\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.keyboard-shortcut-updated'),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 554,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-keyboard-shortcuts.ts",
      "source_type": "git_repo"
    },
    "token_count": 139,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "96db1ccfcb38009f72b87e691c06aef0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-honesty.ts",
    "source_type": "git_repo",
    "title": "update-my-honesty",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyHonesty = {\n  body: Type.Object({\n    isHonest: Type.Literal(true)\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('buttons.accepted-honesty'),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 532,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-honesty.ts",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f7a4e85cc8afe869fc8706e050f5e907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-portfolio.ts",
    "source_type": "git_repo",
    "title": "update-my-portfolio",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyPortfolio = {\n  body: Type.Object({\n    portfolio: Type.Array(\n      Type.Object({\n        description: Type.Optional(Type.String()),\n        id: Type.Optional(Type.String()),\n        image: Type.Optional(Type.String()),\n        title: Type.Optional(Type.String()),\n        url: Type.Optional(Type.String())\n      })\n    )\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.portfolio-item-updated'),\n      type: Type.Literal('success')\n    }),\n    // TODO(Post-MVP): give more detailed response (i.e. which item is\n    // missing)\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    // TODO(Post-MVP): differentiate with more than just the status\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 947,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-portfolio.ts",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c285d3a5ef9fa102f839c2844e084227",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-privacy-terms.ts",
    "source_type": "git_repo",
    "title": "update-my-privacy-terms",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyPrivacyTerms = {\n  body: Type.Object({\n    quincyEmails: Type.Boolean()\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.privacy-updated'),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 534,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-privacy-terms.ts",
      "source_type": "git_repo"
    },
    "token_count": 138,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "09f3a681e225b7ef798346c8855eb90c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-profile-ui.ts",
    "source_type": "git_repo",
    "title": "update-my-profile-ui",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyProfileUI = {\n  body: Type.Object({\n    profileUI: Type.Object({\n      isLocked: Type.Boolean(),\n      showAbout: Type.Boolean(),\n      showCerts: Type.Boolean(),\n      showDonation: Type.Boolean(),\n      showHeatMap: Type.Boolean(),\n      showLocation: Type.Boolean(),\n      showName: Type.Boolean(),\n      showPoints: Type.Boolean(),\n      showPortfolio: Type.Boolean(),\n      showTimeLine: Type.Boolean()\n    })\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.privacy-updated'),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 877,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-profile-ui.ts",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "edfc651db5d55b525a7d802e47a11472",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-quincy-email.ts",
    "source_type": "git_repo",
    "title": "update-my-quincy-email",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyQuincyEmail = {\n  body: Type.Object({\n    sendQuincyEmail: Type.Boolean()\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.subscribe-to-quincy-updated'),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 548,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-quincy-email.ts",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ddf0691fa072ae76a8f760a206903621",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-socials.ts",
    "source_type": "git_repo",
    "title": "update-my-socials",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nconst urlOrEmptyString = Type.Union([\n  Type.Literal(''),\n  Type.String({ format: 'uri', maxLength: 1024 })\n]);\n\nexport const updateMySocials = {\n  body: Type.Object({\n    website: urlOrEmptyString,\n    twitter: urlOrEmptyString,\n    githubProfile: urlOrEmptyString,\n    linkedin: urlOrEmptyString\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.updated-socials'),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 739,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-socials.ts",
      "source_type": "git_repo"
    },
    "token_count": 194,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c4b9763afa6233b243fc0949c7d5854f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-username.ts",
    "source_type": "git_repo",
    "title": "update-my-username",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyUsername = {\n  body: Type.Object({\n    username: Type.String({ minLength: 3, maxLength: 1000 })\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.String(),\n      type: Type.Literal('success'),\n      variables: Type.Object({ username: Type.String() })\n    }),\n    400: Type.Object({\n      message: Type.Optional(Type.String()),\n      type: Type.Literal('info')\n    }),\n    500: Type.Object({\n      message: Type.String(),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 560,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-username.ts",
      "source_type": "git_repo"
    },
    "token_count": 138,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ee120f1f52b059b76e475d62dceefeea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-theme.ts",
    "source_type": "git_repo",
    "title": "update-my-theme",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const updateMyTheme = {\n  body: Type.Object({\n    theme: Type.Union([Type.Literal('default'), Type.Literal('night')])\n  }),\n  response: {\n    200: Type.Object({\n      message: Type.Literal('flash.updated-themes'),\n      type: Type.Literal('success')\n    }),\n    400: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    }),\n    500: Type.Object({\n      message: Type.Literal('flash.wrong-updating'),\n      type: Type.Literal('danger')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\settings\\update-my-theme.ts",
      "source_type": "git_repo"
    },
    "token_count": 146,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "74e5669c2361abfa3de5f49139b6e18c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\delete-ms-username.ts",
    "source_type": "git_repo",
    "title": "delete-ms-username",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const deleteMsUsername = {\n  response: {\n    200: Type.Object({ msUsername: Type.Null() }),\n    500: Type.Object({\n      message: Type.Literal('flash.ms.transcript.unlink-err'),\n      type: Type.Literal('error')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 289,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\delete-ms-username.ts",
      "source_type": "git_repo"
    },
    "token_count": 74,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8e6bed9b7a67d004e4cdd34c33bbfffe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\delete-my-account.ts",
    "source_type": "git_repo",
    "title": "delete-my-account",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const deleteMyAccount = {\n  response: {\n    200: Type.Object({}),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 203,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\delete-my-account.ts",
      "source_type": "git_repo"
    },
    "token_count": 50,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5a21bac7b4ac77c8387545c6d267cd7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\delete-user-token.ts",
    "source_type": "git_repo",
    "title": "delete-user-token",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const deleteUserToken = {\n  response: {\n    200: Type.Object({\n      userToken: Type.Null()\n    }),\n    404: Type.Object({\n      message: Type.Literal('userToken not found'),\n      type: Type.Literal('info')\n    }),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 353,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\delete-user-token.ts",
      "source_type": "git_repo"
    },
    "token_count": 87,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b52262ef9311c3cb926bfd41c716b6e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\exam-environment-token.ts",
    "source_type": "git_repo",
    "title": "exam-environment-token",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { STANDARD_ERROR } from '../../exam-environment/utils/errors';\n\nexport const userExamEnvironmentToken = {\n  response: {\n    201: Type.Object({\n      examEnvironmentAuthorizationToken: Type.String()\n    }),\n    403: STANDARD_ERROR\n    // default: STANDARD_ERROR\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 330,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\exam-environment-token.ts",
      "source_type": "git_repo"
    },
    "token_count": 73,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9de21e02ce6b28df30647e54c86a0909",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\post-ms-username.ts",
    "source_type": "git_repo",
    "title": "post-ms-username",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const postMsUsername = {\n  body: Type.Object({\n    msTranscriptUrl: Type.String({ maxLength: 1000 })\n  }),\n  response: {\n    200: Type.Object({\n      msUsername: Type.String()\n    }),\n    400: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal('flash.ms.transcript.link-err-1')\n    }),\n    404: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal('flash.ms.transcript.link-err-2')\n    }),\n    403: Type.Union([\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.transcript.link-err-4')\n      }),\n      genericError\n    ]),\n    500: Type.Union([\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.transcript.link-err-6')\n      }),\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.ms.transcript.link-err-3')\n      })\n    ])\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1021,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\post-ms-username.ts",
      "source_type": "git_repo"
    },
    "token_count": 265,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6cbc704735193a5c188f8c100da2bf69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\report-user.ts",
    "source_type": "git_repo",
    "title": "report-user",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const reportUser = {\n  body: Type.Object({\n    username: Type.String(),\n    reportDescription: Type.String({ minLength: 1 })\n  }),\n  response: {\n    200: Type.Object({\n      type: Type.Literal('info'),\n      message: Type.Literal('flash.report-sent'),\n      variables: Type.Object({\n        email: Type.String()\n      })\n    }),\n    404: Type.Object({\n      type: Type.Literal('danger'),\n      message: Type.Literal('flash.report-error')\n    }),\n    500: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 579,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\report-user.ts",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b131c703e95621a63eee1fc9c6ab8f69",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\reset-my-progress.ts",
    "source_type": "git_repo",
    "title": "reset-my-progress",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { genericError } from '../types';\n\nexport const resetMyProgress = {\n  response: {\n    200: Type.Object({}),\n    default: genericError\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 203,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\reset-my-progress.ts",
      "source_type": "git_repo"
    },
    "token_count": 50,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "463fc9122d1935aa0a5b5040e17dfaee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\submit-survey.ts",
    "source_type": "git_repo",
    "title": "submit-survey",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { surveyTitles } from '../types';\n\nexport const submitSurvey = {\n  body: Type.Object({\n    surveyResults: Type.Object({\n      title: surveyTitles,\n      responses: Type.Array(\n        Type.Object({\n          question: Type.String(),\n          response: Type.String()\n        })\n      )\n    })\n  }),\n  response: {\n    200: Type.Object({\n      type: Type.Literal('success'),\n      message: Type.Literal('flash.survey.success')\n    }),\n    400: Type.Union([\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.survey.err-1')\n      }),\n      Type.Object({\n        type: Type.Literal('error'),\n        message: Type.Literal('flash.survey.err-2')\n      })\n    ]),\n    500: Type.Object({\n      type: Type.Literal('error'),\n      message: Type.Literal('flash.survey.err-3')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 884,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\submit-survey.ts",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "01bfeb1586d931ced0c1567f9549663f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\exists.ts",
    "source_type": "git_repo",
    "title": "exists",
    "content": "import { Type } from '@fastify/type-provider-typebox';\n\nexport const userExists = {\n  querystring: Type.Object({\n    username: Type.String({ minLength: 1 })\n  }),\n  response: {\n    200: Type.Object({\n      exists: Type.Boolean()\n    }),\n    400: Type.Object({\n      type: Type.Literal('danger'),\n      message: Type.Literal('username parameter is required')\n      // message: Type.Literal(\"'username' parameter is required\")\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 439,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\exists.ts",
      "source_type": "git_repo"
    },
    "token_count": 105,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0414792b1c95bf8b68d971bace2f5a2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\get-session-user.ts",
    "source_type": "git_repo",
    "title": "get-session-user",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { DailyCodingChallengeLanguage } from '@prisma/client';\nimport { examResults, profileUI, savedChallenge } from '../types';\n\nconst languages = Object.values(DailyCodingChallengeLanguage).map(k =>\n  Type.Literal(k)\n); export const getSessionUser = {\n  response: {\n    200: Type Object({\n      user: Type Record(\n        Type String(),\n        Type Object({\n          about: Type String(),\n          acceptedPrivacyTerms: Type Boolean(),\n          calendar: Type Record(Type Number(), Type Literal(1)),\n          completedChallenges: Type Array(\n            Type Object({\n              id: Type String(),\n              completedDate: Type Number(),\n              solution: Type Optional(Type String()),\n              githubLink: Type Optional(Type String()),\n              challengeType: Type Optional(Type Number()),\n              // Technically, files is optional, but the db default was [] and\n              // the client treats null, undefined and [] equivalently // TODO(Post-MVP): make this optional files: Type Array(\n                Type Object({\n                  contents: Type String(),\n                  key: Type String(),\n                  ext: Type String(),\n                  name: Type String(),\n                  path: Type Optional(Type String())\n                })\n              ),\n              isManuallyApproved: Type Optional(Type Boolean()),\n              examResults: Type Optional(examResults)\n            })\n          ),\n          completedExams: Type Array(\n            Type Object({\n              id: Type String(),\n              completedDate: Type Number(),\n              challengeType: Type Optional(Type Number()),\n              examResults\n            })\n          ),\n          quizAttempts: Type Array(\n            Type Object({\n              challengeId: Type String(),\n              quizId: Type String(),\n              timestamp: Type Number()\n            })\n          ),\n          completedChallengeCount: Type Number(),\n          completedDailyCodingChallenges: Type Array(\n            Type Object({\n              id: Type String(),\n              completedDate: Type Number(),\n              languages: Type Array(Type Union(languages))\n            })\n          ),\n          currentChallengeId: Type String(),\n          email: Type String(),\n          emailVerified: Type Boolean(),\n          githubProfile: Type Optional(Type String()),\n          id: Type String(),\n          is2018DataVisCert: Type Boolean(),\n          is2018FullStackCert: Type Boolean(),\n          isApisMicroservicesCert: Type Boolean(),\n          isBackEndCert: Type Boolean(),\n          isCheater: Type",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5295,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\get-session-user.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "01d8dbd43f68f9948df526274532f11c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\get-session-user.ts",
    "source_type": "git_repo",
    "title": "get-session-user",
    "content": "completedDate: Type Number(), challengeType: Type Optional(Type Number()), examResults }) ), quizAttempts: Type Array( Type Object({ challengeId: Type String(), quizId: Type String(), timestamp: Type Number() }) ), completedChallengeCount: Type Number(), completedDailyCodingChallenges: Type Array( Type Object({ id: Type String(), completedDate: Type Number(), languages: Type Array(Type Union(languages)) }) ), currentChallengeId: Type String(), email: Type String(), emailVerified: Type Boolean(), githubProfile: Type Optional(Type String()), id: Type String(), is2018DataVisCert: Type Boolean(), is2018FullStackCert: Type Boolean(), isApisMicroservicesCert: Type Boolean(), isBackEndCert: Type Boolean(), isCheater: TypeBoolean(),\n          isCollegeAlgebraPyCertV8: Type Boolean(),\n          isDataAnalysisPyCertV7: Type Boolean(),\n          isDataVisCert: Type Boolean(),\n          isDonating: Type Boolean(),\n          isFoundationalCSharpCertV8: Type Boolean(),\n          isFrontEndCert: Type Boolean(),\n          isFrontEndLibsCert: Type Boolean(),\n          isFullStackCert: Type Boolean(),\n          isHonest: Type Boolean(),\n          isInfosecCertV7: Type Boolean(),\n          isInfosecQaCert: Type Boolean(),\n          isJsAlgoDataStructCert: Type Boolean(),\n          isJsAlgoDataStructCertV8: Type Boolean(),\n          isMachineLearningPyCertV7: Type Boolean(),\n          isQaCertV7: Type Boolean(),\n          isRelationalDatabaseCertV8: Type Boolean(),\n          isRespWebDesignCert: Type Boolean(),\n          isSciCompPyCertV7: Type Boolean(),\n          keyboardShortcuts: Type Boolean(),\n          linkedin: Type Optional(Type String()),\n          location: Type String(),\n          name: Type String(),\n          partiallyCompletedChallenges: Type Array(\n            Type Object({ id: Type String(), completedDate: Type Number() })\n          ),\n          picture: Type String(),\n          points: Type Number(),\n          portfolio: Type Array(\n            Type Object({\n              description: Type String(),\n              id: Type String(),\n              image: Type String(),\n              title: Type String(),\n              url: Type String()\n            })\n          ),\n          profileUI: Type Optional(profileUI),\n          sendQuincyEmail: Type Boolean(),\n          theme: Type String(),\n          twitter: Type",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5295,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\get-session-user.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2944840ac07d493753401929ab6c65f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\get-session-user.ts",
    "source_type": "git_repo",
    "title": "get-session-user",
    "content": "Type Boolean(), isRelationalDatabaseCertV8: Type Boolean(), isRespWebDesignCert: Type Boolean(), isSciCompPyCertV7: Type Boolean(), keyboardShortcuts: Type Boolean(), linkedin: Type Optional(Type String()), location: Type String(), name: Type String(), partiallyCompletedChallenges: Type Array( Type Object({ id: Type String(), completedDate: Type Number() }) ), picture: Type String(), points: Type Number(), portfolio: Type Array( Type Object({ description: Type String(), id: Type String(), image: Type String(), title: Type String(), url: Type String() }) ), profileUI: Type Optional(profileUI), sendQuincyEmail: Type Boolean(), theme: Type String(), twitter: TypeOptional(Type String()),\n          website: Type Optional(Type String()),\n          yearsTopContributor: Type Array(Type String()), // TODO(Post-MVP): convert to number isEmailVerified: Type Boolean(),\n          joinDate: Type String(),\n          savedChallenges: Type Optional(Type Array(savedChallenge)),\n          username: Type String(),\n          usernameDisplay: Type String(),\n          userToken: Type Optional(Type String()),\n          completedSurveys: Type Array(\n            Type Object({\n              title: Type String(),\n              responses: Type Array(\n                Type Object({\n                  question: Type String(),\n                  response: Type String()\n                })\n              )\n            })\n          ),\n          msUsername: Type Optional(Type String())\n        })\n      ),\n      result: Type String()\n    }),\n    500: Type Object({\n      user: Type Object({}),\n      result: Type Literal('')\n    })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5295,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\user\\get-session-user.ts",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3b872a59d7aefad5b3bae1fc27c0b142",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\auth-helpers.test.ts",
    "source_type": "git_repo",
    "title": "auth-helpers.test",
    "content": "import Fastify, { FastifyInstance } from 'fastify';\n\nimport db from '../../db/prisma';\nimport { createUserInput } from '../../utils/create-user';\nimport { checkCanConnectToDb } from '../../../jest.utils';\nimport { findOrCreateUser } from './auth-helpers';\n\nconst captureException = jest.fn();\n\nasync function setupServer() {\n  const fastify = Fastify();\n  await fastify.register(db);\n  await checkCanConnectToDb(fastify.prisma);\n  // @ts-expect-error we're mocking the Sentry plugin\n  fastify.Sentry = { captureException };\n  return fastify;\n}\n\ndescribe('findOrCreateUser', () => {\n  let fastify: FastifyInstance;\n  const email = 'test@user.com';\n  beforeAll(async () => {\n    fastify = await setupServer();\n  });\n\nafterEach(async () => {\n    await fastify.prisma.user.deleteMany({ where: { email } });\n    await fastify.close();\n    jest.clearAllMocks();\n  });\n\nit('should send a message to Sentry if there are multiple users with the same email', async () => {\n    const user1 = await fastify.prisma.user.create({\n      data: createUserInput(email)\n    });\n    const user2 = await fastify.prisma.user.create({\n      data: createUserInput(email)\n    });\n\nconst ids = [user1.id, user2.id];\n\nawait findOrCreateUser(fastify, email);\n\nexpect(captureException).toHaveBeenCalledTimes(1);\n    expect(captureException).toHaveBeenCalledWith(\n      new Error(`Multiple user records found for: ${ids.join(', ')}`)\n    );\n  });\n\nit('should NOT send a message if there is only one user with the email', async () => {\n    await fastify.prisma.user.create({ data: createUserInput(email) });\n\nawait findOrCreateUser(fastify, email);\n\nexpect(captureException).not.toHaveBeenCalled();\n  });\n\nit('should NOT send a message if there are no users with the email', async () => {\n    await findOrCreateUser(fastify, email);\n\nexpect(captureException).not.toHaveBeenCalled();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1894,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\auth-helpers.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "242b6b79f0bfd68942873b85d6fc58b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\auth-helpers.ts",
    "source_type": "git_repo",
    "title": "auth-helpers",
    "content": "import { FastifyInstance } from 'fastify';\nimport { createUserInput } from '../../utils/create-user';\n\n/**\n * Finds an existing user with the given email or creates a new user if none exists.\n * @param fastify - The Fastify instance.\n * @param email - The email of the user.\n * @returns The existing or newly created user.\n */\nexport const findOrCreateUser = async (\n  fastify: FastifyInstance,\n  email: string\n): Promise<{ id: string; acceptedPrivacyTerms: boolean }> => {\n  // TODO: handle the case where there are multiple users with the same email.\n  // e.g. use findMany and throw an error if more than one is found.\n  const existingUser = await fastify.prisma.user.findMany({\n    where: { email },\n    select: { id: true, acceptedPrivacyTerms: true }\n  });\n  if (existingUser.length > 1) {\n    fastify.Sentry.captureException(\n      new Error(\n        `Multiple user records found for: ${existingUser.map(user => user.id).join(', ')}`\n      )\n    );\n  }\n\nreturn (\n    existingUser[0] ??\n    (await fastify.prisma.user.create({\n      data: createUserInput(email),\n      select: { id: true, acceptedPrivacyTerms: true }\n    }))\n  );\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1142,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\auth-helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6f8e4c57d72baa7dcbff830f5dff7eb5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\certificate-utils.test.ts",
    "source_type": "git_repo",
    "title": "certificate-utils.test",
    "content": "import { getFallbackFullStackDate } from './certificate-utils';\n\nconst fullStackChallenges = [\n  {\n    completedDate: 1585210952511,\n    id: '5a553ca864b52e1d8bceea14'\n  },\n  {\n    completedDate: 1585210952511,\n    id: '561add10cb82ac38a17513bc'\n  },\n  {\n    completedDate: 1588665778679,\n    id: '561acd10cb82ac38a17513bc'\n  },\n  {\n    completedDate: 1685210952511,\n    id: '561abd10cb81ac38a17513bc'\n  },\n  {\n    completedDate: 1585210952511,\n    id: '561add10cb82ac38a17523bc'\n  },\n  {\n    completedDate: 1588665778679,\n    id: '561add10cb82ac38a17213bc'\n  }\n];\n\ndescribe('helper functions', () => {\n  describe('getFallbackFullStackDate', () => {\n    it('should return the date of the latest completed challenge', () => {\n      expect(getFallbackFullStackDate(fullStackChallenges, 123)).toBe(\n        1685210952511\n      );\n    });\n\nit('should fall back to completedDate if no certifications are provided', () => {\n      expect(getFallbackFullStackDate([], 123)).toBe(123);\n    });\n\nit('should fall back to completedDate if none of the certifications have been completed', () => {\n      expect(\n        getFallbackFullStackDate([{ completedDate: 567, id: 'abc' }], 123)\n      ).toBe(123);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1218,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\certificate-utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b18bb17b5c1c6a968269a813530c5ac0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\get-public-profile.ts",
    "source_type": "git_repo",
    "title": "get-public-profile",
    "content": "import { Type } from '@fastify/type-provider-typebox';\nimport { profileUI, examResults, savedChallenge } from '../types'; export const getPublicProfile = {\n  querystring: Type Object({\n    username: Type String({ minLength: 1 })\n  }),\n  response: {\n    200: Type Object({\n      entities: Type Object({\n        user: Type Record(\n          Type String(),\n          Type Union([\n            Type Object({\n              isLocked: Type Boolean(),\n              profileUI,\n              username: Type String()\n            }),\n            Type Object({\n              about: Type String(),\n              calendar: Type Record(Type Number(), Type Literal(1)),\n              completedChallenges: Type Array(\n                Type Object({\n                  id: Type String(),\n                  completedDate: Type Number(),\n                  solution: Type Optional(Type String()),\n                  githubLink: Type Optional(Type String()),\n                  challengeType: Type Optional(Type Number()),\n                  files: Type Array(\n                    Type Object({\n                      contents: Type String(),\n                      key: Type String(),\n                      ext: Type String(),\n                      name: Type String(),\n                      path: Type Optional(Type String())\n                    })\n                  ),\n                  isManuallyApproved: Type Optional(Type Boolean()),\n                  examResults: Type Optional(examResults)\n                })\n              ),\n              completedExams: Type Array(\n                Type Object({\n                  id: Type String(),\n                  completedDate: Type Number(),\n                  challengeType: Type Optional(Type Number()),\n                  examResults\n                })\n              ),\n              // TODO(Post-MVP): return completedSurveys Presumably not, since why\n              // would this need to be public githubProfile: Type Optional(Type String()),\n              is2018DataVisCert: Type Boolean(),\n              is2018FullStackCert: Type Boolean(),\n              isApisMicroservicesCert: Type Boolean(),\n              isBackEndCert: Type Boolean(),\n              isCheater: Type Boolean(),\n              isCollegeAlgebraPyCertV8: Type Boolean(),\n              isDataAnalysisPyCertV7: Type Boolean(),\n              isDataVisCert: Type Boolean(),\n              // TODO(Post-MVP): isDonating should be boolean isDonating: Type Union([Type Boolean(), Type Null()]),\n              isFoundationalCSharpCertV8: Type Boolean(),\n              isFrontEndCert: Type Boolean(),\n              isFrontEndLibsCert: Type Boolean(),\n              isFullStackCert: Type Boolean(),\n              isHonest: Type Boolean(),\n              isInfosecCertV7: Type",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5019,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\get-public-profile.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3bf6d8352ebe65cdbdb81e3fc516f3ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\get-public-profile.ts",
    "source_type": "git_repo",
    "title": "get-public-profile",
    "content": "Number()), examResults }) ), // TODO(Post-MVP): return completedSurveys Presumably not, since why // would this need to be public githubProfile: Type Optional(Type String()), is2018DataVisCert: Type Boolean(), is2018FullStackCert: Type Boolean(), isApisMicroservicesCert: Type Boolean(), isBackEndCert: Type Boolean(), isCheater: Type Boolean(), isCollegeAlgebraPyCertV8: Type Boolean(), isDataAnalysisPyCertV7: Type Boolean(), isDataVisCert: Type Boolean(), // TODO(Post-MVP): isDonating should be boolean isDonating: Type Union([Type Boolean(), Type Null()]), isFoundationalCSharpCertV8: Type Boolean(), isFrontEndCert: Type Boolean(), isFrontEndLibsCert: Type Boolean(), isFullStackCert: Type Boolean(), isHonest: Type Boolean(), isInfosecCertV7: TypeBoolean(),\n              isInfosecQaCert: Type Boolean(),\n              isJsAlgoDataStructCert: Type Boolean(),\n              isJsAlgoDataStructCertV8: Type Boolean(),\n              isMachineLearningPyCertV7: Type Boolean(),\n              isQaCertV7: Type Boolean(),\n              isRelationalDatabaseCertV8: Type Boolean(),\n              isRespWebDesignCert: Type Boolean(),\n              isSciCompPyCertV7: Type Boolean(),\n              linkedin: Type Optional(Type String()),\n              location: Type String(),\n              name: Type String(),\n              partiallyCompletedChallenges: Type Array(\n                Type Object({\n                  id: Type String(),\n                  completedDate: Type Number()\n                })\n              ),\n              picture: Type String(),\n              // TODO(Post-MVP): points should be a number\n              points: Type Union([Type Number(), Type Null()]),\n              portfolio: Type Array(\n                Type Object({\n                  description: Type String(),\n                  id: Type String(),\n                  image: Type String(),\n                  title: Type String(),\n                  url: Type String()\n                })\n              ),\n              profileUI,\n              twitter: Type Optional(Type String()),\n              website: Type Optional(Type String()),\n              yearsTopContributor: Type Array(Type String()), // TODO(Post-MVP): convert to number joinDate: Type String(),\n              savedChallenges: Type Array(savedChallenge),\n              username: Type String(),\n              usernameDisplay: Type String(),\n              msUsername: Type Optional(Type",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5019,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\get-public-profile.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7bd5f3265229ee6376aa169902e307f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\get-public-profile.ts",
    "source_type": "git_repo",
    "title": "get-public-profile",
    "content": "completedDate: Type Number() }) ), picture: Type String(), // TODO(Post-MVP): points should be a number points: Type Union([Type Number(), Type Null()]), portfolio: Type Array( Type Object({ description: Type String(), id: Type String(), image: Type String(), title: Type String(), url: Type String() }) ), profileUI, twitter: Type Optional(Type String()), website: Type Optional(Type String()), yearsTopContributor: Type Array(Type String()), // TODO(Post-MVP): convert to number joinDate: Type String(), savedChallenges: Type Array(savedChallenge), username: Type String(), usernameDisplay: Type String(), msUsername: Type Optional(TypeString())\n            })\n          ])\n        )\n      }),\n      result: Type String()\n    }),\n    // We can't simply have Type Object({}), even though that's correct, because\n    // TypeScript will then accept all responses (since every object can be\n    // assigned to {})\n    400: Type Union([\n      Type Object({ entities: Type Optional(Type Never()) }),\n      Type Literal(\n        'This endpoint is no longer available outside of the freeCodeCamp ecosystem'\n      )\n    ]),\n    404: Type Object({ entities: Type Optional(Type Never()) })\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5019,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\schemas\\users\\get-public-profile.ts",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8f21565b0e251e09cef457c2a185b1f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\certificate-utils.ts",
    "source_type": "git_repo",
    "title": "certificate-utils",
    "content": "import { Prisma } from '@prisma/client';\nimport {\n  certSlugTypeMap,\n  certIds\n} from '../../../../shared/config/certification-settings';\nimport { normalizeDate } from '../../utils/normalize';\n\nconst {\n  legacyInfosecQaId,\n  respWebDesignId,\n  frontEndDevLibsId,\n  jsAlgoDataStructId,\n  dataVis2018Id,\n  apisMicroservicesId\n} = certIds;\n\nconst fullStackCertificateIds = [\n  respWebDesignId,\n  jsAlgoDataStructId,\n  frontEndDevLibsId,\n  dataVis2018Id,\n  apisMicroservicesId,\n  legacyInfosecQaId\n];\n\n/**\n * Checks if the given certification slug is known.\n *\n * @param certSlug - The certification slug to check.\n * @returns True if the certification slug is known, otherwise false.\n */\nexport function isKnownCertSlug(\n  certSlug: string\n): certSlug is keyof typeof certSlugTypeMap {\n  return certSlug in certSlugTypeMap;\n}\n\n/**\n * Retrieves the completion date for the full stack certification, if it exists.\n *\n * @param completedChallenges - The array of completed challenges.\n * @param completedDate - The fallback completed date.\n * @returns The latest certification date or the completed date if no certification is found.\n */\nexport function getFallbackFullStackDate(\n  completedChallenges: { id: string; completedDate: Prisma.JsonValue }[],\n  completedDate: Prisma.JsonValue\n): number {\n  const latestCertDate = completedChallenges\n    .filter(chal => fullStackCertificateIds.includes(chal.id))\n    .map(chal => ({\n      ...chal,\n      completedDate: normalizeDate(chal.completedDate)\n    }))\n    .sort((a, b) => b.completedDate - a.completedDate)[0]?.completedDate;\n\nreturn latestCertDate ?? normalizeDate(completedDate);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1634,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\certificate-utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1298fff8710e6ef8239761db257bbe5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.ts",
    "source_type": "git_repo",
    "title": "challenge-helpers",
    "content": "/**\n * Confirm that a user can submit a CodeRoad project.\n *\n * @param id The id of the project.\n * @param param The challenges the user has completed.\n * @param param.partiallyCompletedChallenges The partially completed challenges.\n * @param param.completedChallenges The completed challenges.\n * @returns A boolean indicating if the user can submit the project.\n */\nexport const canSubmitCodeRoadCertProject = (\n  id: string | undefined,\n  {\n    partiallyCompletedChallenges,\n    completedChallenges\n  }: {\n    partiallyCompletedChallenges: { id: string }[];\n    completedChallenges: { id: string }[];\n  }\n) => {\n  if (partiallyCompletedChallenges.some(c => c.id === id)) return true;\n  if (completedChallenges.some(c => c.id === id)) return true;\n  return false;\n};\n\ntype MSProfileError = {\n  type: 'error';\n  message: 'flash.ms.profile.err';\n  variables: { msUsername: string };\n};\n\ntype MSProfileSuccess = {\n  type: 'success';\n  userId: string;\n};\n\nasync function getMSProfile(msUsername: string) {\n  const error: MSProfileError = {\n    type: 'error',\n    message: 'flash.ms.profile.err',\n    variables: {\n      msUsername\n    }\n  };\n\nconst msProfileApi = `https://learn.microsoft.com/api/profiles/${msUsername}`;\n  const msProfileApiRes = await fetch(msProfileApi);\n\nif (!msProfileApiRes.ok) return error;\n\nconst { userId } = (await msProfileApiRes.json()) as {\n    userId: string;\n  };\n\nconst success: MSProfileSuccess = {\n    type: 'success',\n    userId\n  };\n\nreturn userId ? success : error;\n}\n\ntype AchievementsError = {\n  type: 'error';\n  message: 'flash.ms.trophy.err-3';\n};\n\ntype NoAchievementsError = {\n  type: 'error';\n  message: 'flash.ms.trophy.err-6';\n};\n\ntype NoTrophyError = {\n  type: 'error';\n  message: 'flash.ms.trophy.err-4';\n  variables: { msUsername: string };\n};\n\ntype Validated = {\n  type: 'success';\n  msUserAchievementsApiUrl: string;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3669,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "043a957f3bd3afa69984330c5914657d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.ts",
    "source_type": "git_repo",
    "title": "challenge-helpers",
    "content": "= await fetch(msProfileApi); if (!msProfileApiRes.ok) return error; const { userId } = (await msProfileApiRes.json()) as { userId: string; }; const success: MSProfileSuccess = { type: 'success', userId }; return userId ? success : error; } type AchievementsError = { type: 'error'; message: 'flash.ms.trophy.err-3'; }; type NoAchievementsError = { type: 'error'; message: 'flash.ms.trophy.err-6'; }; type NoTrophyError = { type: 'error'; message: 'flash.ms.trophy.err-4'; variables: { msUsername: string }; }; type Validated = { type: 'success'; msUserAchievementsApiUrl: string; };\n\n/**\n * Handles all communication with the Microsoft Learn APIs.\n *\n * @param requestData The data needed by the Microsoft Learn APIs.\n * @param requestData.msUsername The Microsoft username used to get the profile.\n * @param requestData.msTrophyId The Microsoft trophy ID to verify.\n * @returns An object with 'type' of success|error and information about the success or failure.\n */\nexport async function verifyTrophyWithMicrosoft({\n  msUsername,\n  msTrophyId\n}: {\n  msUsername: string;\n  msTrophyId: string;\n}) {\n  const msProfile = await getMSProfile(msUsername);\n\nif (msProfile.type === 'error') return msProfile;\n\nconst msUserAchievementsApiUrl = `https://learn.microsoft.com/api/achievements/user/${msProfile.userId}`;\n  const msUserAchievementsApiRes = await fetch(msUserAchievementsApiUrl);\n\nif (!msUserAchievementsApiRes.ok) {\n    return {\n      type: 'error',\n      message: 'flash.ms.trophy.err-3'\n    } as AchievementsError;\n  }\n\nconst { achievements } = (await msUserAchievementsApiRes.json()) as {\n    achievements?: { typeId: string }[];\n  };\n\nif (!achievements?.length)\n    return {\n      type: 'error',\n      message: 'flash.ms.trophy.err-6'\n    } as NoAchievementsError;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3669,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "16929c9b7c9bf36baef540925fa191d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.ts",
    "source_type": "git_repo",
    "title": "challenge-helpers",
    "content": "or failure. */ export async function verifyTrophyWithMicrosoft({ msUsername, msTrophyId }: { msUsername: string; msTrophyId: string; }) { const msProfile = await getMSProfile(msUsername); if (msProfile.type === 'error') return msProfile; const msUserAchievementsApiUrl = `https://learn.microsoft.com/api/achievements/user/${msProfile.userId}`; const msUserAchievementsApiRes = await fetch(msUserAchievementsApiUrl); if (!msUserAchievementsApiRes.ok) { return { type: 'error', message: 'flash.ms.trophy.err-3' } as AchievementsError; } const { achievements } = (await msUserAchievementsApiRes.json()) as { achievements?: { typeId: string }[]; }; if (!achievements?.length) return { type: 'error', message: 'flash.ms.trophy.err-6' } as NoAchievementsError;\n\n// TODO: handle the case where there are achievements, but the `typeId` is not\n  // a property of the achievements. This suggests that Microsoft has changed\n  // their API and, to aid debugging, we should report a different error\n  // message.\n  const earnedTrophy = achievements?.some(a => a.typeId === msTrophyId);\n\nif (earnedTrophy) {\n    return {\n      type: 'success',\n      msUserAchievementsApiUrl\n    } as Validated;\n  } else {\n    return {\n      type: 'error',\n      message: 'flash.ms.trophy.err-4',\n      variables: {\n        msUsername\n      }\n    } as NoTrophyError;\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3669,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7d1c2cd722f0d9e42586ca846c7997a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\is-restricted.ts",
    "source_type": "git_repo",
    "title": "is-restricted",
    "content": "import { isProfane } from 'no-profanity';\n\nimport { blocklistedUsernames } from '../../../../shared/config/constants';\n\n/**\n * Checks if a username is restricted (i.e. It's profane or reserved).\n * @param username - The username to check.\n * @returns True if the username is restricted, false otherwise.\n */\nexport const isRestricted = (username: string): boolean => {\n  return isProfane(username) || blocklistedUsernames.includes(username);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 445,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\is-restricted.ts",
      "source_type": "git_repo"
    },
    "token_count": 98,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca6a4aca99a6c7635fe031c40a822ec3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\user-utils.ts",
    "source_type": "git_repo",
    "title": "user-utils",
    "content": "import _ from 'lodash';\n\n// user flags that the api-server returns as false if they're missing in the\n// user document. Since Prisma returns null for missing fields, we need to\n// normalize them to false.\n// TODO(Post-MVP): remove this when the database is normalized.\nconst nullableFlags = [\n  'is2018DataVisCert',\n  'is2018FullStackCert',\n  'isApisMicroservicesCert',\n  'isBackEndCert',\n  'isCheater',\n  'isCollegeAlgebraPyCertV8',\n  'isDataAnalysisPyCertV7',\n  'isDataVisCert',\n  // isDonating doesn't need fixing because it's not nullable\n  'isFoundationalCSharpCertV8',\n  'isFrontEndCert',\n  'isFullStackCert',\n  'isFrontEndLibsCert',\n  'isHonest',\n  'isInfosecCertV7',\n  'isInfosecQaCert',\n  'isJsAlgoDataStructCert',\n  'isJsAlgoDataStructCertV8',\n  'isMachineLearningPyCertV7',\n  'isQaCertV7',\n  'isRelationalDatabaseCertV8',\n  'isRespWebDesignCert',\n  'isSciCompPyCertV7',\n  'isDataAnalysisPyCertV7',\n  // isUpcomingPythonCertV8 exists in the db, but is not returned by the api-server\n  // TODO(Post-MVP): delete it from the db?\n  'keyboardShortcuts'\n] as const;\n\ntype NullableFlags = (typeof nullableFlags)[number];\n\n/**\n * Splits a user object into two objects: one with nullable flags and one without.\n *\n * @param user - The user object to split.\n * @returns A tuple where the first element is an object with nullable flags and the second element is an object with the remaining properties.\n */\nexport function splitUser<U extends Record<NullableFlags, unknown>>(\n  user: U\n): [Pick<U, NullableFlags>, Omit<U, NullableFlags>] {\n  return [_.pick(user, nullableFlags), _.omit(user, nullableFlags)];\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1611,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\user-utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bffc658c4fc27ac055e4534facb592f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.test.ts",
    "source_type": "git_repo",
    "title": "challenge-helpers.test",
    "content": "import type {\n  PartiallyCompletedChallenge,\n  CompletedChallenge\n} from '@prisma/client';\n\nimport { createFetchMock } from '../../../jest.utils';\nimport {\n  canSubmitCodeRoadCertProject,\n  verifyTrophyWithMicrosoft\n} from './challenge-helpers';\n\nconst id = 'abc';\n\nconst partiallyCompletedChallenges: PartiallyCompletedChallenge[] = [\n  {\n    id,\n    completedDate: 1\n  }\n];\nconst completedChallenges: CompletedChallenge[] = [\n  {\n    id,\n    completedDate: 1,\n    challengeType: 1,\n    files: [],\n    githubLink: null,\n    solution: null,\n    isManuallyApproved: false,\n    examResults: null\n  }\n];\n\ndescribe('Challenge Helpers', () => {\n  describe('canSubmitCodeRoadCertProject', () => {\n    it('returns true if the user has completed the required challenges or partially completed them', () => {\n      expect(\n        canSubmitCodeRoadCertProject(id, {\n          partiallyCompletedChallenges,\n          completedChallenges\n        })\n      ).toBe(true);\n\nexpect(\n        canSubmitCodeRoadCertProject(id, {\n          partiallyCompletedChallenges: [],\n          completedChallenges\n        })\n      ).toBe(true);\n\nexpect(\n        canSubmitCodeRoadCertProject(id, {\n          partiallyCompletedChallenges,\n          completedChallenges: []\n        })\n      ).toBe(true);\n    });\n\nit('returns false if the user has not completed the required challenges', () => {\n      expect(\n        canSubmitCodeRoadCertProject(id, {\n          partiallyCompletedChallenges: [],\n          completedChallenges: []\n        })\n      ).toBe(false);\n    });\n\nit('returns false if the id is undefined', () => {\n      expect(\n        canSubmitCodeRoadCertProject(undefined, {\n          partiallyCompletedChallenges,\n          completedChallenges\n        })\n      ).toBe(false);\n    });\n  });\n\ndescribe('verifyTrophyWithMicrosoft', () => {\n    const userId = 'abc123';\n    const msUsername = 'ANRandom';\n    const msTrophyId = 'learn.wwl.get-started-c-sharp-part-3.trophy';\n    const verifyData = { msUsername, msTrophyId };\n    const achievementsUrl = `https://learn.microsoft.com/api/achievements/user/${userId}`;\n\nafterEach(() => jest.clearAllMocks());",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "735152ffd7b0397fadda98afc72dca8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.test.ts",
    "source_type": "git_repo",
    "title": "challenge-helpers.test",
    "content": "}) ).toBe(true); }); it('returns false if the user has not completed the required challenges', () => { expect( canSubmitCodeRoadCertProject(id, { partiallyCompletedChallenges: [], completedChallenges: [] }) ).toBe(false); }); it('returns false if the id is undefined', () => { expect( canSubmitCodeRoadCertProject(undefined, { partiallyCompletedChallenges, completedChallenges }) ).toBe(false); }); }); describe('verifyTrophyWithMicrosoft', () => { const userId = 'abc123'; const msUsername = 'ANRandom'; const msTrophyId = 'learn.wwl.get-started-c-sharp-part-3.trophy'; const verifyData = { msUsername, msTrophyId }; const achievementsUrl = `https://learn.microsoft.com/api/achievements/user/${userId}`; afterEach(() => jest.clearAllMocks());\n\ntest(\"handles failure to reach Microsoft's profile api\", async () => {\n      const notOk = createFetchMock({ ok: false });\n      jest.spyOn(globalThis, 'fetch').mockImplementation(notOk);\n\nconst verification = await verifyTrophyWithMicrosoft(verifyData);\n\nexpect(verification).toEqual({\n        type: 'error',\n        message: 'flash.ms.profile.err',\n        variables: {\n          msUsername\n        }\n      });\n    });\n\ntest(\"handles failure to reach Microsoft's achievements api\", async () => {\n      const fetchProfile = createFetchMock({ body: { userId } });\n      const fetchAchievements = createFetchMock({ ok: false });\n      jest\n        .spyOn(globalThis, 'fetch')\n        .mockImplementationOnce(fetchProfile)\n        .mockImplementationOnce(fetchAchievements);\n\nconst verification = await verifyTrophyWithMicrosoft(verifyData);\n\nexpect(verification).toEqual({\n        type: 'error',\n        message: 'flash.ms.trophy.err-3'\n      });\n    });\n\ntest('handles the case where the user has no achievements', async () => {\n      const fetchProfile = createFetchMock({ body: { userId } });\n      const fetchAchievements = createFetchMock({ body: { achievements: [] } });\n      jest\n        .spyOn(globalThis, 'fetch')\n        .mockImplementationOnce(fetchProfile)\n        .mockImplementationOnce(fetchAchievements);\n\nconst verification = await verifyTrophyWithMicrosoft(verifyData);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a6cc3f5dc10d69c6ffa219e5d671bb8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.test.ts",
    "source_type": "git_repo",
    "title": "challenge-helpers.test",
    "content": "{ const fetchProfile = createFetchMock({ body: { userId } }); const fetchAchievements = createFetchMock({ ok: false }); jest .spyOn(globalThis, 'fetch') .mockImplementationOnce(fetchProfile) .mockImplementationOnce(fetchAchievements); const verification = await verifyTrophyWithMicrosoft(verifyData); expect(verification).toEqual({ type: 'error', message: 'flash.ms.trophy.err-3' }); }); test('handles the case where the user has no achievements', async () => { const fetchProfile = createFetchMock({ body: { userId } }); const fetchAchievements = createFetchMock({ body: { achievements: [] } }); jest .spyOn(globalThis, 'fetch') .mockImplementationOnce(fetchProfile) .mockImplementationOnce(fetchAchievements); const verification = await verifyTrophyWithMicrosoft(verifyData);\n\nexpect(verification).toEqual({\n        type: 'error',\n        message: 'flash.ms.trophy.err-6'\n      });\n    });\n\ntest(\"handles failure to find the trophy in the user's achievements\", async () => {\n      const fetchProfile = createFetchMock({ body: { userId } });\n      const fetchAchievements = createFetchMock({\n        body: { achievements: [{ typeId: 'fake-id' }] }\n      });\n      jest\n        .spyOn(globalThis, 'fetch')\n        .mockImplementationOnce(fetchProfile)\n        .mockImplementationOnce(fetchAchievements);\n\nconst verification = await verifyTrophyWithMicrosoft(verifyData);\n\nexpect(verification).toEqual({\n        type: 'error',\n        message: 'flash.ms.trophy.err-4',\n        variables: {\n          msUsername\n        }\n      });\n    });\n\ntest('returns msUserAchievementsApiUrl on success', async () => {\n      const fetchProfile = createFetchMock({ body: { userId } });\n      const fetchAchievements = createFetchMock({\n        body: { achievements: [{ typeId: msTrophyId }] }\n      });\n      jest\n        .spyOn(globalThis, 'fetch')\n        .mockImplementationOnce(fetchProfile)\n        .mockImplementationOnce(fetchAchievements);\n\nconst verification = await verifyTrophyWithMicrosoft(verifyData);\n\nexpect(verification).toEqual({\n        type: 'success',\n        msUserAchievementsApiUrl: achievementsUrl\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\helpers\\challenge-helpers.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "76f504cc1a2a93707cf8b2767a0f7369",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "import { Certification } from '../../../../shared/config/certification-settings';\nimport {\n  defaultUserEmail,\n  defaultUserId,\n  devLogin,\n  setupServer,\n  superRequest\n} from '../../../jest.utils';\n\ndescribe('certificate routes', () => {\n  setupServer();\n  describe('Authenticated user', () => {\n    let setCookies: string[];\n\n// Authenticate user\n    beforeAll(async () => {\n      setCookies = await devLogin();\n    });\n\nafterEach(() => {\n      jest.restoreAllMocks();\n    });\n\ndescribe('PUT /certificate/verify', () => {\n      beforeEach(async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: defaultUserEmail },\n          data: {\n            completedChallenges: [],\n            name: 'fcc',\n            isRespWebDesignCert: false,\n            isJsAlgoDataStructCert: false,\n            isFrontEndLibsCert: false,\n            is2018DataVisCert: false,\n            isRelationalDatabaseCertV8: false,\n            isApisMicroservicesCert: false,\n            isQaCertV7: false,\n            isSciCompPyCertV7: false,\n            isDataAnalysisPyCertV7: false,\n            isInfosecCertV7: false,\n            isMachineLearningPyCertV7: false,\n            isCollegeAlgebraPyCertV8: false,\n            isFoundationalCSharpCertV8: false,\n            username: 'fcc'\n          }\n        });\n      });\n\ntest('should return 400 if no certSlug', async () => {\n        const response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({});\n\nexpect(response.body).toMatchObject({\n          response: {\n            message: 'flash.wrong-name',\n            variables: { name: '' }\n          }\n        });\n        expect(response.status).toBe(400);\n      });\n\ntest('should return 400 if certSlug is invalid', async () => {\n        const response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: 'non-existant'\n        });\n        expect(response.body).toMatchObject({\n          response: {\n            message: 'flash.wrong-name',\n            variables: { name: 'non-existant' }\n          }\n        });\n        expect(response.status).toBe(400);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 15
  },
  {
    "id": "141e7bc682d3b7f253f53aa973d722ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "'fcc' } }); }); test('should return 400 if no certSlug', async () => { const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({}); expect(response.body).toMatchObject({ response: { message: 'flash.wrong-name', variables: { name: '' } } }); expect(response.status).toBe(400); }); test('should return 400 if certSlug is invalid', async () => { const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: 'non-existant' }); expect(response.body).toMatchObject({ response: { message: 'flash.wrong-name', variables: { name: 'non-existant' } } }); expect(response.status).toBe(400); });\n\n// TODO: Revisit this test after deciding if we need/want to fetch the\n      // entire user during authorization or just the user id.\n      test.skip('should return 500 if user not found in db', async () => {\n        jest\n          .spyOn(fastifyTestInstance.prisma.user, 'findUnique')\n          .mockImplementation(\n            () =>\n              Promise.resolve(null) as ReturnType<\n                typeof fastifyTestInstance.prisma.user.findUnique\n              >\n          );\n        const response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: Certification.RespWebDesign\n        });\n\nexpect(response.body).toStrictEqual({\n          message: 'flash.went-wrong',\n          type: 'danger'\n        });\n        expect(response.status).toBe(500);\n      });\n\ntest('should return 400 if user has not set a `name`', async () => {\n        await fastifyTestInstance.prisma.user.update({\n          where: { id: defaultUserId },\n          data: {\n            name: null\n          }\n        });\n\nconst response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: Certification.RespWebDesign\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 1,
    "total_chunks": 15
  },
  {
    "id": "98e5280a46ba83e50d09ad0f306ee752",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "=> { jest .spyOn(fastifyTestInstance.prisma.user, 'findUnique') .mockImplementation( () => Promise.resolve(null) as ReturnType< typeof fastifyTestInstance.prisma.user.findUnique > ); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); expect(response.body).toStrictEqual({ message: 'flash.went-wrong', type: 'danger' }); expect(response.status).toBe(500); }); test('should return 400 if user has not set a `name`', async () => { await fastifyTestInstance.prisma.user.update({ where: { id: defaultUserId }, data: { name: null } }); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign });\n\nexpect(response.body).toMatchObject({\n          response: {\n            type: 'info',\n            message: 'flash.name-needed'\n          },\n          isCertMap: {\n            is2018DataVisCert: false,\n            isApisMicroservicesCert: false,\n            isBackEndCert: false,\n            isCollegeAlgebraPyCertV8: false,\n            isDataAnalysisPyCertV7: false,\n            isDataVisCert: false,\n            isFoundationalCSharpCertV8: false,\n            isFrontEndCert: false,\n            isFrontEndLibsCert: false,\n            isFullStackCert: false,\n            isInfosecCertV7: false,\n            isInfosecQaCert: false,\n            isJsAlgoDataStructCert: false,\n            isMachineLearningPyCertV7: false,\n            isQaCertV7: false,\n            isRelationalDatabaseCertV8: false,\n            isRespWebDesignCert: false,\n            isSciCompPyCertV7: false\n          },\n          completedChallenges: []\n        });\n        expect(response.status).toBe(400);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 2,
    "total_chunks": 15
  },
  {
    "id": "1a7549bab9eabb5db3edeb090f0dd24f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "where: { id: defaultUserId }, data: { name: null } }); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); expect(response.body).toMatchObject({ response: { type: 'info', message: 'flash.name-needed' }, isCertMap: { is2018DataVisCert: false, isApisMicroservicesCert: false, isBackEndCert: false, isCollegeAlgebraPyCertV8: false, isDataAnalysisPyCertV7: false, isDataVisCert: false, isFoundationalCSharpCertV8: false, isFrontEndCert: false, isFrontEndLibsCert: false, isFullStackCert: false, isInfosecCertV7: false, isInfosecQaCert: false, isJsAlgoDataStructCert: false, isMachineLearningPyCertV7: false, isQaCertV7: false, isRelationalDatabaseCertV8: false, isRespWebDesignCert: false, isSciCompPyCertV7: false }, completedChallenges: [] }); expect(response.status).toBe(400); });\n\ntest('should return 200 if user already claimed cert', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: defaultUserEmail },\n          data: {\n            completedChallenges: [],\n            isRespWebDesignCert: true\n          }\n        });\n        const response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: Certification.RespWebDesign\n        });\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        expect(response.body.response).toStrictEqual({\n          type: 'info',\n          message: 'flash.already-claimed',\n          variables: {\n            name: 'Responsive Web Design'\n          }\n        });\n\nexpect(response.status).toBe(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 3,
    "total_chunks": 15
  },
  {
    "id": "ca8668df6629a1844e51a75fde99e2a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "isJsAlgoDataStructCert: false, isMachineLearningPyCertV7: false, isQaCertV7: false, isRelationalDatabaseCertV8: false, isRespWebDesignCert: false, isSciCompPyCertV7: false }, completedChallenges: [] }); expect(response.status).toBe(400); }); test('should return 200 if user already claimed cert', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: defaultUserEmail }, data: { completedChallenges: [], isRespWebDesignCert: true } }); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access expect(response.body.response).toStrictEqual({ type: 'info', message: 'flash.already-claimed', variables: { name: 'Responsive Web Design' } }); expect(response.status).toBe(200); });\n\ntest('should return 400 if not all requirements have been met to claim', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: defaultUserEmail },\n          data: {\n            completedChallenges: [\n              { id: '587d78af367417b2b2512b03', completedDate: 123456789 },\n              { id: '587d78af367417b2b2512b04', completedDate: 123456789 },\n              { id: '587d78b0367417b2b2512b05', completedDate: 123456789 },\n              { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 }\n            ],\n            isRespWebDesignCert: false\n          }\n        });\n        const response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: Certification.RespWebDesign\n        });\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        expect(response.body.response).toStrictEqual({\n          message: 'flash.incomplete-steps',\n          type: 'info',\n          variables: { name: 'Responsive Web Design' }\n        });\n        expect(response.status).toBe(400);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 15
  },
  {
    "id": "134ad100be0349c943a702b4fde9397b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "claim', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: defaultUserEmail }, data: { completedChallenges: [ { id: '587d78af367417b2b2512b03', completedDate: 123456789 }, { id: '587d78af367417b2b2512b04', completedDate: 123456789 }, { id: '587d78b0367417b2b2512b05', completedDate: 123456789 }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 } ], isRespWebDesignCert: false } }); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access expect(response.body.response).toStrictEqual({ message: 'flash.incomplete-steps', type: 'info', variables: { name: 'Responsive Web Design' } }); expect(response.status).toBe(400); });\n\ntest('should return 500 if db update fails', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: defaultUserEmail },\n          data: {\n            completedChallenges: [\n              { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 },\n              { id: '587d78af367417b2b2512b03', completedDate: 123456789 },\n              { id: '587d78af367417b2b2512b04', completedDate: 123456789 },\n              { id: '587d78b0367417b2b2512b05', completedDate: 123456789 },\n              { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 }\n            ]\n          }\n        });\n        jest\n          .spyOn(fastifyTestInstance.prisma.user, 'update')\n          .mockImplementation(() => {\n            throw new Error('test');\n          });\n        const response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: Certification.RespWebDesign\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 5,
    "total_chunks": 15
  },
  {
    "id": "16fd2ac719260c549f6e101211b76fc7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "500 if db update fails', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: defaultUserEmail }, data: { completedChallenges: [ { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 }, { id: '587d78af367417b2b2512b03', completedDate: 123456789 }, { id: '587d78af367417b2b2512b04', completedDate: 123456789 }, { id: '587d78b0367417b2b2512b05', completedDate: 123456789 }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 } ] } }); jest .spyOn(fastifyTestInstance.prisma.user, 'update') .mockImplementation(() => { throw new Error('test'); }); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign });\n\nexpect(response.body).toStrictEqual({\n          message: 'flash.generic-error',\n          type: 'danger'\n        });\n        expect(response.status).toBe(500);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 268,
    "chunk_index": 6,
    "total_chunks": 15
  },
  {
    "id": "cd872afe0c9c3e901ce8fda41a774c30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "{ await fastifyTestInstance.prisma.user.updateMany({ where: { email: defaultUserEmail }, data: { completedChallenges: [ { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 }, { id: '587d78af367417b2b2512b03', completedDate: 123456789 }, { id: '587d78af367417b2b2512b04', completedDate: 123456789 }, { id: '587d78b0367417b2b2512b05', completedDate: 123456789 }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 } ] } }); jest .spyOn(fastifyTestInstance.prisma.user, 'update') .mockImplementation(() => { throw new Error('test'); }); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); expect(response.body).toStrictEqual({ message: 'flash.generic-error', type: 'danger' }); expect(response.status).toBe(500); });\n\n// Note: Email does not actually send (work) in development, but status should still be 200.\n      test('should send the certified email, if all current certifications are met', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: defaultUserEmail },\n          data: {\n            completedChallenges: [\n              { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 },\n              { id: '587d78af367417b2b2512b03', completedDate: 123456789 },\n              { id: '587d78af367417b2b2512b04', completedDate: 123456789 },\n              { id: '587d78b0367417b2b2512b05', completedDate: 123456789 },\n              { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 }\n            ],\n            isRespWebDesignCert: false,\n            isJsAlgoDataStructCertV8: true,\n            isFrontEndLibsCert: true,\n            is2018DataVisCert: true,\n            isRelationalDatabaseCertV8: true,\n            isApisMicroservicesCert: true,\n            isQaCertV7: true,\n            isSciCompPyCertV7: true,\n            isDataAnalysisPyCertV7: true,\n            isInfosecCertV7: true,\n            isMachineLearningPyCertV7: true,\n            isCollegeAlgebraPyCertV8: true,\n            isFoundationalCSharpCertV8: true\n          }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 7,
    "total_chunks": 15
  },
  {
    "id": "799cd9a4c9d96fe32bc09c7117718a85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "are met', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: defaultUserEmail }, data: { completedChallenges: [ { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 }, { id: '587d78af367417b2b2512b03', completedDate: 123456789 }, { id: '587d78af367417b2b2512b04', completedDate: 123456789 }, { id: '587d78b0367417b2b2512b05', completedDate: 123456789 }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 } ], isRespWebDesignCert: false, isJsAlgoDataStructCertV8: true, isFrontEndLibsCert: true, is2018DataVisCert: true, isRelationalDatabaseCertV8: true, isApisMicroservicesCert: true, isQaCertV7: true, isSciCompPyCertV7: true, isDataAnalysisPyCertV7: true, isInfosecCertV7: true, isMachineLearningPyCertV7: true, isCollegeAlgebraPyCertV8: true, isFoundationalCSharpCertV8: true } });\n\nconst spy = jest.spyOn(fastifyTestInstance, 'sendEmail');\n\nconst response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: Certification.RespWebDesign\n        });\n\nexpect(spy).toHaveBeenCalled();\n        expect(response.status).toBe(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 8,
    "total_chunks": 15
  },
  {
    "id": "a231c5b1a84a0d1b2bef50359dbdf82d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "123456789 }, { id: '587d78af367417b2b2512b03', completedDate: 123456789 }, { id: '587d78af367417b2b2512b04', completedDate: 123456789 }, { id: '587d78b0367417b2b2512b05', completedDate: 123456789 }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 } ], isRespWebDesignCert: false, isJsAlgoDataStructCertV8: true, isFrontEndLibsCert: true, is2018DataVisCert: true, isRelationalDatabaseCertV8: true, isApisMicroservicesCert: true, isQaCertV7: true, isSciCompPyCertV7: true, isDataAnalysisPyCertV7: true, isInfosecCertV7: true, isMachineLearningPyCertV7: true, isCollegeAlgebraPyCertV8: true, isFoundationalCSharpCertV8: true } }); const spy = jest.spyOn(fastifyTestInstance, 'sendEmail'); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); expect(spy).toHaveBeenCalled(); expect(response.status).toBe(200); });\n\ntest('should return 200 if all went well', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: defaultUserEmail },\n          data: {\n            completedChallenges: [\n              { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 },\n              { id: '587d78af367417b2b2512b03', completedDate: 123456789 },\n              { id: '587d78af367417b2b2512b04', completedDate: 123456789 },\n              { id: '587d78b0367417b2b2512b05', completedDate: 123456789 },\n              { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 }\n            ],\n            isRespWebDesignCert: false\n          }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 9,
    "total_chunks": 15
  },
  {
    "id": "559bbc5ccb3255a4d53d0046971a8a5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "= jest.spyOn(fastifyTestInstance, 'sendEmail'); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); expect(spy).toHaveBeenCalled(); expect(response.status).toBe(200); }); test('should return 200 if all went well', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: defaultUserEmail }, data: { completedChallenges: [ { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 }, { id: '587d78af367417b2b2512b03', completedDate: 123456789 }, { id: '587d78af367417b2b2512b04', completedDate: 123456789 }, { id: '587d78b0367417b2b2512b05', completedDate: 123456789 }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 } ], isRespWebDesignCert: false } });\n\nconst response = await superRequest('/certificate/verify', {\n          method: 'PUT',\n          setCookies\n        }).send({\n          certSlug: Certification.RespWebDesign\n        });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: defaultUserEmail }\n        }); expect(user) toMatchObject({ isRespWebDesignCert: true });\n        expect(response body) toStrictEqual({\n          response: {\n            message: 'flash",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 10,
    "total_chunks": 15
  },
  {
    "id": "17d32e6140827d2db1a1b15e86c53fa0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "}, data: { completedChallenges: [ { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 123456789 }, { id: '587d78af367417b2b2512b03', completedDate: 123456789 }, { id: '587d78af367417b2b2512b04', completedDate: 123456789 }, { id: '587d78b0367417b2b2512b05', completedDate: 123456789 }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 123456789 } ], isRespWebDesignCert: false } }); const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug: Certification.RespWebDesign }); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: defaultUserEmail } }); expect(user) toMatchObject({ isRespWebDesignCert: true }); expect(response body) toStrictEqual({ response: { message: 'flashcert-claim-success',\n            type: 'success',\n            variables: {\n              name: 'Responsive Web Design',\n              username: 'fcc'\n            }\n          },\n          isCertMap: {\n            isRespWebDesignCert: true,\n            isJsAlgoDataStructCert: false,\n            isFrontEndLibsCert: false,\n            is2018DataVisCert: false,\n            isApisMicroservicesCert: false,\n            isInfosecQaCert: false,\n            isQaCertV7: false,\n            isInfosecCertV7: false,\n            isFrontEndCert: false,\n            isBackEndCert: false,\n            isDataVisCert: false,\n            isFullStackCert: false,\n            isSciCompPyCertV7: false,\n            isDataAnalysisPyCertV7: false,\n            isMachineLearningPyCertV7: false,\n            isRelationalDatabaseCertV8: false,\n            isCollegeAlgebraPyCertV8: false,\n            isFoundationalCSharpCertV8: false\n          },\n          completedChallenges: [\n            {\n              completedDate: 123456789,\n              files: [],\n              id: 'bd7158d8c442eddfaeb5bd18'\n            },\n            {\n              completedDate: 123456789,\n              files: [],\n              id: '587d78af367417b2b2512b03'\n            },\n            {\n              completedDate: 123456789,\n              files: [],\n              id: '587d78af367417b2b2512b04'\n            },\n            {\n              completedDate: 123456789,\n              files: [],\n              id: '587d78b0367417b2b2512b05'\n            },\n            {\n              completedDate: 123456789,\n              files: [],\n              id: 'bd7158d8c242eddfaeb5bd13'\n            },\n            {\n              challengeType: 7,\n              // TODO: use matcher for date near now\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              completedDate: expect",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 11,
    "total_chunks": 15
  },
  {
    "id": "52f56012065ec0897cb694348b90e4d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "false, isDataVisCert: false, isFullStackCert: false, isSciCompPyCertV7: false, isDataAnalysisPyCertV7: false, isMachineLearningPyCertV7: false, isRelationalDatabaseCertV8: false, isCollegeAlgebraPyCertV8: false, isFoundationalCSharpCertV8: false }, completedChallenges: [ { completedDate: 123456789, files: [], id: 'bd7158d8c442eddfaeb5bd18' }, { completedDate: 123456789, files: [], id: '587d78af367417b2b2512b03' }, { completedDate: 123456789, files: [], id: '587d78af367417b2b2512b04' }, { completedDate: 123456789, files: [], id: '587d78b0367417b2b2512b05' }, { completedDate: 123456789, files: [], id: 'bd7158d8c242eddfaeb5bd13' }, { challengeType: 7, // TODO: use matcher for date near now // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment completedDate: expectany(Number),\n              files: [],\n              id: '561add10cb82ac38a17513bc'\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 12,
    "total_chunks": 15
  },
  {
    "id": "5e9c2476b71e84594cbeae36be319c5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "isRelationalDatabaseCertV8: false, isCollegeAlgebraPyCertV8: false, isFoundationalCSharpCertV8: false }, completedChallenges: [ { completedDate: 123456789, files: [], id: 'bd7158d8c442eddfaeb5bd18' }, { completedDate: 123456789, files: [], id: '587d78af367417b2b2512b03' }, { completedDate: 123456789, files: [], id: '587d78af367417b2b2512b04' }, { completedDate: 123456789, files: [], id: '587d78b0367417b2b2512b05' }, { completedDate: 123456789, files: [], id: 'bd7158d8c242eddfaeb5bd13' }, { challengeType: 7, // TODO: use matcher for date near now // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment completedDate: expectany(Number), files: [], id: '561add10cb82ac38a17513bc' } ] }); expect(response status) toBe(200); });\n\n// Tests for all certifications as to what may currently be claimed, and what may no longer be claimed\n      test('should return 400 if certSlug is not allowed', async () => {\n        const claimableCerts = [\n          Certification.RespWebDesign,\n          Certification.JsAlgoDataStruct,\n          Certification.FrontEndDevLibs,\n          Certification.DataVis,\n          Certification.RelationalDb,\n          Certification.BackEndDevApis,\n          Certification.QualityAssurance,\n          Certification.SciCompPy,\n          Certification.DataAnalysisPy,\n          Certification.InfoSec,\n          Certification.MachineLearningPy,\n          Certification.CollegeAlgebraPy,\n          Certification.FoundationalCSharp,\n          Certification.LegacyFrontEnd,\n          Certification.LegacyBackEnd,\n          Certification.LegacyDataVis,\n          Certification.LegacyInfoSecQa,\n          Certification.LegacyFullStack\n        ];\n        const unclaimableCerts = ['fake-slug'];\n\nfor (const certSlug of claimableCerts) {\n          const response = await superRequest('/certificate/verify', {\n            method: 'PUT',\n            setCookies\n          }).send({\n            certSlug\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 13,
    "total_chunks": 15
  },
  {
    "id": "1a5fc9adf64089ecac105d4bc67b9db3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "// Tests for all certifications as to what may currently be claimed, and what may no longer be claimed test('should return 400 if certSlug is not allowed', async () => { const claimableCerts = [ Certification.RespWebDesign, Certification.JsAlgoDataStruct, Certification.FrontEndDevLibs, Certification.DataVis, Certification.RelationalDb, Certification.BackEndDevApis, Certification.QualityAssurance, Certification.SciCompPy, Certification.DataAnalysisPy, Certification.InfoSec, Certification.MachineLearningPy, Certification.CollegeAlgebraPy, Certification.FoundationalCSharp, Certification.LegacyFrontEnd, Certification.LegacyBackEnd, Certification.LegacyDataVis, Certification.LegacyInfoSecQa, Certification.LegacyFullStack ]; const unclaimableCerts = ['fake-slug']; for (const certSlug of claimableCerts) { const response = await superRequest('/certificate/verify', { method: 'PUT', setCookies }).send({ certSlug });\n\n// `flash.incomplete-steps` comes after the check for whether a certification may be claimed or not.\n          expect(response.body).toMatchObject({\n            response: { message: 'flash.incomplete-steps' }\n          });\n          expect(response.status).toBe(400);\n        }\n\nfor (const certSlug of unclaimableCerts) {\n          const response = await superRequest('/certificate/verify', {\n            method: 'PUT',\n            setCookies\n          }).send({\n            certSlug\n          });\n\nexpect(response.body).toMatchObject({\n            response: {\n              variables: { name: certSlug },\n              message: 'flash.wrong-name'\n            }\n          });\n          expect(response.status).toBe(400);\n        }\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 14565,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 14,
    "total_chunks": 15
  },
  {
    "id": "d734fb2d97e61f69c8fc670df57d7a27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "import type { CompletedChallenge } from '@prisma/client';\nimport isEmail from 'validator/lib/isEmail';\nimport type { FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\n\nimport { getChallenges } from '../../utils/get-challenges';\nimport {\n  certIds,\n  certSlugTypeMap,\n  certTypeTitleMap,\n  certTypes,\n  currentCertifications,\n  legacyCertifications,\n  legacyFullStackCertification,\n  upcomingCertifications\n} from '../../../../shared/config/certification-settings';\n\nimport * as schemas from '../../schemas';\nimport { normalizeChallenges, removeNulls } from '../../utils/normalize';\n\nimport { SHOW_UPCOMING_CHANGES } from '../../utils/env';\nimport { isKnownCertSlug } from '../helpers/certificate-utils';\n\nconst {\n  legacyFrontEndChallengeId,\n  legacyBackEndChallengeId,\n  legacyDataVisId,\n  legacyInfosecQaId,\n  legacyFullStackId,\n  respWebDesignId,\n  frontEndDevLibsId,\n  jsAlgoDataStructId,\n  jsAlgoDataStructV8Id,\n  dataVis2018Id,\n  apisMicroservicesId,\n  qaV7Id,\n  infosecV7Id,\n  sciCompPyV7Id,\n  dataAnalysisPyV7Id,\n  machineLearningPyV7Id,\n  relationalDatabaseV8Id,\n  collegeAlgebraPyV8Id,\n  foundationalCSharpV8Id\n} = certIds;\n\nfunction isCertAllowed(certSlug: string): boolean {\n  if (\n    currentCertifications.includes(certSlug) ||\n    legacyCertifications.includes(certSlug) ||\n    legacyFullStackCertification.includes(certSlug)\n  ) {\n    return true;\n  }\n  if (SHOW_UPCOMING_CHANGES && upcomingCertifications.includes(certSlug)) {\n    return true;\n  }\n  return false;\n}\n\nfunction renderCertifiedEmail({\n  username,\n  name\n}: {\n  username: string;\n  name: string;\n}) {\n  const certifiedEmailTemplate = `Hi ${name || username},\n\nCongratulations on completing all of the freeCodeCamp certifications!\n\nAll of your certifications are now live at: https://www.freecodecamp.org/${username}\n\nPlease tell me a bit more about you and your near-term goals.\n\nAre you interested in contributing to our open source projects used by nonprofits?",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 14
  },
  {
    "id": "33ea78bbd8cd7366822c19de68618886",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "{ return true; } if (SHOW_UPCOMING_CHANGES && upcomingCertifications.includes(certSlug)) { return true; } return false; } function renderCertifiedEmail({ username, name }: { username: string; name: string; }) { const certifiedEmailTemplate = `Hi ${name || username}, Congratulations on completing all of the freeCodeCamp certifications! All of your certifications are now live at: https://www.freecodecamp.org/${username} Please tell me a bit more about you and your near-term goals. Are you interested in contributing to our open source projects used by nonprofits?\n\nAlso, check out https://contribute.freecodecamp.org/ for some fun and convenient ways you can contribute to the community.\n\nHappy coding,\n\n- Quincy Larson, teacher at freeCodeCamp\n`;\n  return certifiedEmailTemplate;\n}\n\nfunction hasCompletedTests(\n  tests: { id: string }[],\n  completedChallenges: CompletedChallenge[]\n) {\n  return tests.every(({ id }) =>\n    completedChallenges.some(({ id: completedId }) => completedId === id)\n  );\n}\n\nfunction assertTestsExist(\n  tests: ReturnType<typeof getChallenges>[number]['tests']\n): asserts tests is { id: string }[] {\n  if (!Array.isArray(tests)) {\n    throw new Error('Tests is not an array');\n  }\n  if (!tests.every(test => typeof test === 'object' && test !== null)) {\n    throw new Error('Tests contains non-object values');\n  }\n  if (!tests.every(test => typeof test.id === 'string')) {\n    throw new Error('Tests contain non-string ids');\n  }\n}\n\nfunction getCertById(\n  challengeId: string,\n  challenges: ReturnType<typeof getChallenges>\n): { id: string; tests: { id: string }[]; challengeType: number } {\n  const challengeById = challenges.filter(({ id }) => id === challengeId)[0];\n  if (!challengeById) {\n    throw new Error(`Challenge with id '${challengeId}' not found`);\n  }\n  const { id, tests, challengeType } = challengeById;\n  assertTestsExist(tests);\n  return { id, tests, challengeType };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 1,
    "total_chunks": 14
  },
  {
    "id": "937fd0e359685c699461b26b9cb7e98f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "values'); } if (!tests.every(test => typeof test.id === 'string')) { throw new Error('Tests contain non-string ids'); } } function getCertById( challengeId: string, challenges: ReturnType<typeof getChallenges> ): { id: string; tests: { id: string }[]; challengeType: number } { const challengeById = challenges.filter(({ id }) => id === challengeId)[0]; if (!challengeById) { throw new Error(`Challenge with id '${challengeId}' not found`); } const { id, tests, challengeType } = challengeById; assertTestsExist(tests); return { id, tests, challengeType }; }\n\nfunction createCertTypeIds(challenges: ReturnType<typeof getChallenges>) {\n  return {\n    // legacy\n    [certTypes.frontEnd]: getCertById(legacyFrontEndChallengeId, challenges),\n    [certTypes.jsAlgoDataStruct]: getCertById(jsAlgoDataStructId, challenges),\n    [certTypes.backEnd]: getCertById(legacyBackEndChallengeId, challenges),\n    [certTypes.dataVis]: getCertById(legacyDataVisId, challenges),\n    [certTypes.infosecQa]: getCertById(legacyInfosecQaId, challenges),\n    [certTypes.fullStack]: getCertById(legacyFullStackId, challenges),",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 2,
    "total_chunks": 14
  },
  {
    "id": "7beba28d98548d046edcb368f43b74e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "id: string; tests: { id: string }[]; challengeType: number } { const challengeById = challenges.filter(({ id }) => id === challengeId)[0]; if (!challengeById) { throw new Error(`Challenge with id '${challengeId}' not found`); } const { id, tests, challengeType } = challengeById; assertTestsExist(tests); return { id, tests, challengeType }; } function createCertTypeIds(challenges: ReturnType<typeof getChallenges>) { return { // legacy [certTypes.frontEnd]: getCertById(legacyFrontEndChallengeId, challenges), [certTypes.jsAlgoDataStruct]: getCertById(jsAlgoDataStructId, challenges), [certTypes.backEnd]: getCertById(legacyBackEndChallengeId, challenges), [certTypes.dataVis]: getCertById(legacyDataVisId, challenges), [certTypes.infosecQa]: getCertById(legacyInfosecQaId, challenges), [certTypes.fullStack]: getCertById(legacyFullStackId, challenges),\n\n// modern\n    [certTypes.respWebDesign]: getCertById(respWebDesignId, challenges),\n    [certTypes.frontEndDevLibs]: getCertById(frontEndDevLibsId, challenges),\n    [certTypes.dataVis2018]: getCertById(dataVis2018Id, challenges),\n    [certTypes.jsAlgoDataStructV8]: getCertById(\n      jsAlgoDataStructV8Id,\n      challenges\n    ),\n    [certTypes.apisMicroservices]: getCertById(apisMicroservicesId, challenges),\n    [certTypes.qaV7]: getCertById(qaV7Id, challenges),\n    [certTypes.infosecV7]: getCertById(infosecV7Id, challenges),\n    [certTypes.sciCompPyV7]: getCertById(sciCompPyV7Id, challenges),\n    [certTypes.dataAnalysisPyV7]: getCertById(dataAnalysisPyV7Id, challenges),\n    [certTypes.machineLearningPyV7]: getCertById(\n      machineLearningPyV7Id,\n      challenges\n    ),\n    [certTypes.relationalDatabaseV8]: getCertById(\n      relationalDatabaseV8Id,\n      challenges\n    ),\n    [certTypes.collegeAlgebraPyV8]: getCertById(\n      collegeAlgebraPyV8Id,\n      challenges\n    ),\n    [certTypes.foundationalCSharpV8]: getCertById(\n      foundationalCSharpV8Id,\n      challenges\n    )",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 530,
    "chunk_index": 3,
    "total_chunks": 14
  },
  {
    "id": "d6874fd696bd162d668c7489dacb1043",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "ReturnType<typeof getChallenges>) { return { // legacy [certTypes.frontEnd]: getCertById(legacyFrontEndChallengeId, challenges), [certTypes.jsAlgoDataStruct]: getCertById(jsAlgoDataStructId, challenges), [certTypes.backEnd]: getCertById(legacyBackEndChallengeId, challenges), [certTypes.dataVis]: getCertById(legacyDataVisId, challenges), [certTypes.infosecQa]: getCertById(legacyInfosecQaId, challenges), [certTypes.fullStack]: getCertById(legacyFullStackId, challenges), // modern [certTypes.respWebDesign]: getCertById(respWebDesignId, challenges), [certTypes.frontEndDevLibs]: getCertById(frontEndDevLibsId, challenges), [certTypes.dataVis2018]: getCertById(dataVis2018Id, challenges), [certTypes.jsAlgoDataStructV8]: getCertById( jsAlgoDataStructV8Id, challenges ), [certTypes.apisMicroservices]: getCertById(apisMicroservicesId, challenges), [certTypes.qaV7]: getCertById(qaV7Id, challenges), [certTypes.infosecV7]: getCertById(infosecV7Id, challenges), [certTypes.sciCompPyV7]: getCertById(sciCompPyV7Id, challenges), [certTypes.dataAnalysisPyV7]: getCertById(dataAnalysisPyV7Id, challenges), [certTypes.machineLearningPyV7]: getCertById( machineLearningPyV7Id, challenges ), [certTypes.relationalDatabaseV8]: getCertById( relationalDatabaseV8Id, challenges ), [certTypes.collegeAlgebraPyV8]: getCertById( collegeAlgebraPyV8Id, challenges ), [certTypes.foundationalCSharpV8]: getCertById( foundationalCSharpV8Id, challenges )\n\n// upcoming\n  };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 4,
    "total_chunks": 14
  },
  {
    "id": "8ae77eb4748783e55c738d741e6ae348",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "{ // legacy [certTypes.frontEnd]: getCertById(legacyFrontEndChallengeId, challenges), [certTypes.jsAlgoDataStruct]: getCertById(jsAlgoDataStructId, challenges), [certTypes.backEnd]: getCertById(legacyBackEndChallengeId, challenges), [certTypes.dataVis]: getCertById(legacyDataVisId, challenges), [certTypes.infosecQa]: getCertById(legacyInfosecQaId, challenges), [certTypes.fullStack]: getCertById(legacyFullStackId, challenges), // modern [certTypes.respWebDesign]: getCertById(respWebDesignId, challenges), [certTypes.frontEndDevLibs]: getCertById(frontEndDevLibsId, challenges), [certTypes.dataVis2018]: getCertById(dataVis2018Id, challenges), [certTypes.jsAlgoDataStructV8]: getCertById( jsAlgoDataStructV8Id, challenges ), [certTypes.apisMicroservices]: getCertById(apisMicroservicesId, challenges), [certTypes.qaV7]: getCertById(qaV7Id, challenges), [certTypes.infosecV7]: getCertById(infosecV7Id, challenges), [certTypes.sciCompPyV7]: getCertById(sciCompPyV7Id, challenges), [certTypes.dataAnalysisPyV7]: getCertById(dataAnalysisPyV7Id, challenges), [certTypes.machineLearningPyV7]: getCertById( machineLearningPyV7Id, challenges ), [certTypes.relationalDatabaseV8]: getCertById( relationalDatabaseV8Id, challenges ), [certTypes.collegeAlgebraPyV8]: getCertById( collegeAlgebraPyV8Id, challenges ), [certTypes.foundationalCSharpV8]: getCertById( foundationalCSharpV8Id, challenges ) // upcoming }; }\n\ninterface CertI {\n  isRespWebDesignCert?: boolean;\n  isJsAlgoDataStructCert?: boolean;\n  isJsAlgoDataStructCertV8?: boolean;\n  isFrontEndLibsCert?: boolean;\n  is2018DataVisCert?: boolean;\n  isApisMicroservicesCert?: boolean;\n  isInfosecQaCert?: boolean;\n  isQaCertV7?: boolean;\n  isInfosecCertV7?: boolean;\n  isFrontEndCert?: boolean;\n  isBackEndCert?: boolean;\n  isDataVisCert?: boolean;\n  isFullStackCert?: boolean;\n  isSciCompPyCertV7?: boolean;\n  isDataAnalysisPyCertV7?: boolean;\n  isMachineLearningPyCertV7?: boolean;\n  isRelationalDatabaseCertV8?: boolean;\n  isCollegeAlgebraPyCertV8?: boolean;\n  isFoundationalCSharpCertV8?: boolean;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 594,
    "chunk_index": 5,
    "total_chunks": 14
  },
  {
    "id": "bf49b242e87a80037a3bbe71ec216657",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "challenges), [certTypes.infosecV7]: getCertById(infosecV7Id, challenges), [certTypes.sciCompPyV7]: getCertById(sciCompPyV7Id, challenges), [certTypes.dataAnalysisPyV7]: getCertById(dataAnalysisPyV7Id, challenges), [certTypes.machineLearningPyV7]: getCertById( machineLearningPyV7Id, challenges ), [certTypes.relationalDatabaseV8]: getCertById( relationalDatabaseV8Id, challenges ), [certTypes.collegeAlgebraPyV8]: getCertById( collegeAlgebraPyV8Id, challenges ), [certTypes.foundationalCSharpV8]: getCertById( foundationalCSharpV8Id, challenges ) // upcoming }; } interface CertI { isRespWebDesignCert?: boolean; isJsAlgoDataStructCert?: boolean; isJsAlgoDataStructCertV8?: boolean; isFrontEndLibsCert?: boolean; is2018DataVisCert?: boolean; isApisMicroservicesCert?: boolean; isInfosecQaCert?: boolean; isQaCertV7?: boolean; isInfosecCertV7?: boolean; isFrontEndCert?: boolean; isBackEndCert?: boolean; isDataVisCert?: boolean; isFullStackCert?: boolean; isSciCompPyCertV7?: boolean; isDataAnalysisPyCertV7?: boolean; isMachineLearningPyCertV7?: boolean; isRelationalDatabaseCertV8?: boolean; isCollegeAlgebraPyCertV8?: boolean; isFoundationalCSharpCertV8?: boolean; }\n\nfunction getUserIsCertMap(user: CertI) {\n  const {\n    isRespWebDesignCert = false,\n    isJsAlgoDataStructCert = false,\n    isJsAlgoDataStructCertV8 = false,\n    isFrontEndLibsCert = false,\n    is2018DataVisCert = false,\n    isApisMicroservicesCert = false,\n    isInfosecQaCert = false,\n    isQaCertV7 = false,\n    isInfosecCertV7 = false,\n    isFrontEndCert = false,\n    isBackEndCert = false,\n    isDataVisCert = false,\n    isFullStackCert = false,\n    isSciCompPyCertV7 = false,\n    isDataAnalysisPyCertV7 = false,\n    isMachineLearningPyCertV7 = false,\n    isRelationalDatabaseCertV8 = false,\n    isCollegeAlgebraPyCertV8 = false,\n    isFoundationalCSharpCertV8 = false\n  } = user;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 551,
    "chunk_index": 6,
    "total_chunks": 14
  },
  {
    "id": "b5e0dd6a6a032e291d346279bbb10219",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "boolean; isMachineLearningPyCertV7?: boolean; isRelationalDatabaseCertV8?: boolean; isCollegeAlgebraPyCertV8?: boolean; isFoundationalCSharpCertV8?: boolean; } function getUserIsCertMap(user: CertI) { const { isRespWebDesignCert = false, isJsAlgoDataStructCert = false, isJsAlgoDataStructCertV8 = false, isFrontEndLibsCert = false, is2018DataVisCert = false, isApisMicroservicesCert = false, isInfosecQaCert = false, isQaCertV7 = false, isInfosecCertV7 = false, isFrontEndCert = false, isBackEndCert = false, isDataVisCert = false, isFullStackCert = false, isSciCompPyCertV7 = false, isDataAnalysisPyCertV7 = false, isMachineLearningPyCertV7 = false, isRelationalDatabaseCertV8 = false, isCollegeAlgebraPyCertV8 = false, isFoundationalCSharpCertV8 = false } = user;\n\nreturn {\n    isRespWebDesignCert,\n    isJsAlgoDataStructCert,\n    isJsAlgoDataStructCertV8,\n    isFrontEndLibsCert,\n    is2018DataVisCert,\n    isApisMicroservicesCert,\n    isInfosecQaCert,\n    isQaCertV7,\n    isInfosecCertV7,\n    isFrontEndCert,\n    isBackEndCert,\n    isDataVisCert,\n    isFullStackCert,\n    isSciCompPyCertV7,\n    isDataAnalysisPyCertV7,\n    isMachineLearningPyCertV7,\n    isRelationalDatabaseCertV8,\n    isCollegeAlgebraPyCertV8,\n    isFoundationalCSharpCertV8\n  };\n}\n\n/**\n * Plugin for the protected certificate endpoints.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const protectedCertificateRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  const challenges = getChallenges();\n  const certTypeIds = createCertTypeIds(challenges);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 7,
    "total_chunks": 14
  },
  {
    "id": "70032e37834a3110f7ea080588a3d26b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "is2018DataVisCert, isApisMicroservicesCert, isInfosecQaCert, isQaCertV7, isInfosecCertV7, isFrontEndCert, isBackEndCert, isDataVisCert, isFullStackCert, isSciCompPyCertV7, isDataAnalysisPyCertV7, isMachineLearningPyCertV7, isRelationalDatabaseCertV8, isCollegeAlgebraPyCertV8, isFoundationalCSharpCertV8 }; } /** * Plugin for the protected certificate endpoints. * * @param fastify The Fastify instance. * @param _options Options passed to the plugin via `fastify.register(plugin, options)`. * @param done The callback to signal that the plugin is ready. */ export const protectedCertificateRoutes: FastifyPluginCallbackTypebox = ( fastify, _options, done ) => { const challenges = getChallenges(); const certTypeIds = createCertTypeIds(challenges);\n\n// TODO(POST_MVP): Response should not include updated user. If a client wants the updated user, it should make a separate request\n  // OR: Always respond with current user - full user object - not random pieces.\n  fastify.put(\n    '/certificate/verify',\n    {\n      schema: schemas.certificateVerify,\n      errorHandler(error, request, reply) {\n        if (error.validation) {\n          void reply.code(400).send({\n            response: {\n              type: 'danger',\n              message: 'flash.wrong-name',\n              variables: { name: '' }\n            }\n          });\n        } else {\n          fastify.errorHandler(error, request, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      const { certSlug } = req.body;\n\nif (!isKnownCertSlug(certSlug) || !isCertAllowed(certSlug)) {\n        logger.warn(`Unknown certificate slug \"${certSlug}\"`);\n        void reply.code(400);\n        return {\n          response: {\n            type: 'danger',\n            // message: 'Certificate type not found'\n            message: 'flash.wrong-name',\n            variables: { name: certSlug }\n          }\n        } as const;\n      }\n\nconst certType = certSlugTypeMap[certSlug];\n      const certName = certTypeTitleMap[certType];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 8,
    "total_chunks": 14
  },
  {
    "id": "c27150a69e33dad34d587844cf603d1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "name: '' } } }); } else { fastify.errorHandler(error, request, reply); } } }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); const { certSlug } = req.body; if (!isKnownCertSlug(certSlug) || !isCertAllowed(certSlug)) { logger.warn(`Unknown certificate slug \"${certSlug}\"`); void reply.code(400); return { response: { type: 'danger', // message: 'Certificate type not found' message: 'flash.wrong-name', variables: { name: certSlug } } } as const; } const certType = certSlugTypeMap[certSlug]; const certName = certTypeTitleMap[certType];\n\nconst user = await fastify.prisma.user.findUnique({\n        where: { id: req.user?.id }\n      });\n\nif (!user) {\n        void reply.code(500);\n        logger.error(`User with id ${req.user?.id} not found`);\n        fastify.Sentry.captureException(Error('User not found'));\n        return {\n          type: 'danger',\n          // message: 'User not found'\n          message: 'flash.went-wrong'\n        } as const;\n      }\n      const { completedChallenges } = user;\n      const isCertMap = getUserIsCertMap(removeNulls(user));\n\n// TODO: Discuss if this is a requirement still\n      if (!user.name) {\n        logger.warn(`${user.id} does not have a name property`);\n        void reply.code(400);\n        return {\n          response: {\n            type: 'info',\n            message: 'flash.name-needed'\n          },\n          isCertMap,\n          completedChallenges: normalizeChallenges(completedChallenges)\n        } as const;\n      }\n\nif (user[certType]) {\n        logger.info(`${user.id} has already claimed ${certName}`);\n        void reply.code(200);\n        return {\n          response: {\n            type: 'info',\n            message: 'flash.already-claimed',\n            variables: {\n              name: certName\n            }\n          },\n          isCertMap,\n          completedChallenges: normalizeChallenges(completedChallenges)\n        } as const;\n      }\n\nconst { id, tests, challengeType } = certTypeIds[certType];\n      const hasCompletedTestRequirements = hasCompletedTests(\n        tests,\n        user.completedChallenges\n      );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 9,
    "total_chunks": 14
  },
  {
    "id": "52c2d51fdb19b3eff9c114228ec88493",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "requirement still if (!user.name) { logger.warn(`${user.id} does not have a name property`); void reply.code(400); return { response: { type: 'info', message: 'flash.name-needed' }, isCertMap, completedChallenges: normalizeChallenges(completedChallenges) } as const; } if (user[certType]) { logger.info(`${user.id} has already claimed ${certName}`); void reply.code(200); return { response: { type: 'info', message: 'flash.already-claimed', variables: { name: certName } }, isCertMap, completedChallenges: normalizeChallenges(completedChallenges) } as const; } const { id, tests, challengeType } = certTypeIds[certType]; const hasCompletedTestRequirements = hasCompletedTests( tests, user.completedChallenges );\n\nif (!hasCompletedTestRequirements) {\n        logger.info(`${user.id} has not completed the tests for ${certName}`);\n        void reply.code(400);\n        return {\n          response: {\n            type: 'info',\n            message: 'flash.incomplete-steps',\n            variables: {\n              name: certName\n            }\n          },\n          isCertMap,\n          completedChallenges: normalizeChallenges(completedChallenges)\n        } as const;\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 10,
    "total_chunks": 14
  },
  {
    "id": "c1d67905cce07174522f7c279cfcf833",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "has already claimed ${certName}`); void reply.code(200); return { response: { type: 'info', message: 'flash.already-claimed', variables: { name: certName } }, isCertMap, completedChallenges: normalizeChallenges(completedChallenges) } as const; } const { id, tests, challengeType } = certTypeIds[certType]; const hasCompletedTestRequirements = hasCompletedTests( tests, user.completedChallenges ); if (!hasCompletedTestRequirements) { logger.info(`${user.id} has not completed the tests for ${certName}`); void reply.code(400); return { response: { type: 'info', message: 'flash.incomplete-steps', variables: { name: certName } }, isCertMap, completedChallenges: normalizeChallenges(completedChallenges) } as const; }\n\nconst updatedUser = await fastify.prisma.user.update({\n        where: { id: user.id },\n        data: {\n          [certType]: true,\n          completedChallenges: {\n            push: {\n              id,\n              completedDate: Date.now(),\n              challengeType\n            }\n          }\n        },\n        select: {\n          username: true,\n          email: true,\n          name: true,\n          completedChallenges: true,\n          is2018DataVisCert: true,\n          is2018FullStackCert: true,\n          isApisMicroservicesCert: true,\n          isBackEndCert: true,\n          isDataVisCert: true,\n          isCollegeAlgebraPyCertV8: true,\n          isDataAnalysisPyCertV7: true,\n          isFoundationalCSharpCertV8: true,\n          isFrontEndCert: true,\n          isFrontEndLibsCert: true,\n          isFullStackCert: true,\n          isInfosecCertV7: true,\n          isInfosecQaCert: true,\n          isJsAlgoDataStructCert: true,\n          isJsAlgoDataStructCertV8: true,\n          isMachineLearningPyCertV7: true,\n          isQaCertV7: true,\n          isRelationalDatabaseCertV8: true,\n          isRespWebDesignCert: true,\n          isSciCompPyCertV7: true\n        }\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 11,
    "total_chunks": 14
  },
  {
    "id": "df382eb37d81e2557268d02f2cbeb667",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "updatedUser = await fastify.prisma.user.update({ where: { id: user.id }, data: { [certType]: true, completedChallenges: { push: { id, completedDate: Date.now(), challengeType } } }, select: { username: true, email: true, name: true, completedChallenges: true, is2018DataVisCert: true, is2018FullStackCert: true, isApisMicroservicesCert: true, isBackEndCert: true, isDataVisCert: true, isCollegeAlgebraPyCertV8: true, isDataAnalysisPyCertV7: true, isFoundationalCSharpCertV8: true, isFrontEndCert: true, isFrontEndLibsCert: true, isFullStackCert: true, isInfosecCertV7: true, isInfosecQaCert: true, isJsAlgoDataStructCert: true, isJsAlgoDataStructCertV8: true, isMachineLearningPyCertV7: true, isQaCertV7: true, isRelationalDatabaseCertV8: true, isRespWebDesignCert: true, isSciCompPyCertV7: true } });\n\nconst email = updatedUser.email;\n      const updatedUserSansNull = removeNulls(updatedUser);\n      const updatedIsCertMap = getUserIsCertMap(updatedUserSansNull);\n\n// TODO(POST-MVP): Consider sending email based on `user.isEmailVerified` as well\n      const hasCompletedAllCerts = currentCertifications\n        .map(x => certSlugTypeMap[x])\n        .every(certType => updatedIsCertMap[certType]);\n      const shouldSendCertifiedEmailToCamper =\n        email && isEmail(email) && hasCompletedAllCerts;\n\nif (shouldSendCertifiedEmailToCamper) {\n        const notifyUser = {\n          to: email,\n          from: 'quincy@freecodecamp.org',\n          subject:\n            'Congratulations on completing all of the freeCodeCamp certifications!',\n          text: renderCertifiedEmail({\n            username: updatedUser.username,\n            // Safety: `user.name` is required to exist earlier. TODO: Assert\n            name: updatedUser.name as string\n          })\n        };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 12,
    "total_chunks": 14
  },
  {
    "id": "ee15c7d0bcc8f797690ff02c4e82ce37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "const updatedUserSansNull = removeNulls(updatedUser); const updatedIsCertMap = getUserIsCertMap(updatedUserSansNull); // TODO(POST-MVP): Consider sending email based on `user.isEmailVerified` as well const hasCompletedAllCerts = currentCertifications .map(x => certSlugTypeMap[x]) .every(certType => updatedIsCertMap[certType]); const shouldSendCertifiedEmailToCamper = email && isEmail(email) && hasCompletedAllCerts; if (shouldSendCertifiedEmailToCamper) { const notifyUser = { to: email, from: 'quincy@freecodecamp.org', subject: 'Congratulations on completing all of the freeCodeCamp certifications!', text: renderCertifiedEmail({ username: updatedUser.username, // Safety: `user.name` is required to exist earlier. TODO: Assert name: updatedUser.name as string }) };\n\n// Failed email should not prevent successful response.\n        try {\n          logger.info(`Sending congratulations email to ${user.id}`);\n          // TODO(POST-MVP): Ensure Camper knows they **have** claimed the cert, but the email failed to send.\n          await fastify.sendEmail(notifyUser);\n        } catch (e) {\n          logger.error(e);\n          fastify.Sentry.captureException(e);\n        }\n      }\n\nlogger.info(`${user.id} has claimed ${certName}`);\n      void reply.code(200);\n      return {\n        response: {\n          type: 'success',\n          message: 'flash.cert-claim-success',\n          variables: {\n            username: updatedUser.username,\n            name: certName\n          }\n        },\n        isCertMap: updatedIsCertMap,\n        completedChallenges: normalizeChallenges(\n          updatedUserSansNull.completedChallenges\n        )\n      } as const;\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13724,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 13,
    "total_chunks": 14
  },
  {
    "id": "d7c95cc13d2547cfcda51926be3583c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport jwt from 'jsonwebtoken';\nimport { uniqBy, matches } from 'lodash';\nimport { CompletedExam, ExamResults } from '@prisma/client';\nimport isURL from 'validator/lib/isURL';\nimport type { FastifyInstance, FastifyReply } from 'fastify';\n\nimport { challengeTypes } from '../../../../shared/config/challenge-types';\nimport * as schemas from '../../schemas';\nimport {\n  jsCertProjectIds,\n  multifileCertProjectIds,\n  multifilePythonCertProjectIds,\n  updateUserChallengeData,\n  type CompletedChallenge,\n  saveUserChallengeData,\n  msTrophyChallenges\n} from '../../utils/common-challenge-functions';\nimport { JWT_SECRET } from '../../utils/env';\nimport {\n  formatCoderoadChallengeCompletedValidation,\n  formatProjectCompletedValidation\n} from '../../utils/error-formatting';\nimport { getChallenges } from '../../utils/get-challenges';\nimport { ProgressTimestamp, getPoints } from '../../utils/progress';\nimport {\n  validateExamFromDbSchema,\n  validateGeneratedExamSchema,\n  validateUserCompletedExamSchema,\n  validateExamResultsSchema\n} from '../../utils/exam-schemas';\nimport { generateRandomExam, createExamResults } from '../../utils/exam';\nimport {\n  canSubmitCodeRoadCertProject,\n  verifyTrophyWithMicrosoft\n} from '../helpers/challenge-helpers';\nimport { UpdateReqType } from '../../utils';\nimport { normalizeChallengeType, normalizeDate } from '../../utils/normalize';\n\ninterface JwtPayload {\n  userToken: string;\n}\n\n// TODO(Post-MVP): This could be narrowed down to only the fields needed by\n// specific endpoints, but that means complicating the update helper.\nconst userChallengeSelect = {\n  id: true,\n  completedChallenges: true,\n  partiallyCompletedChallenges: true,\n  progressTimestamps: true,\n  needsModeration: true,\n  savedChallenges: true\n};\n\nconst challenges = getChallenges();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 24
  },
  {
    "id": "44123b75730455481624e9fc69df1f47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "{ generateRandomExam, createExamResults } from '../../utils/exam'; import { canSubmitCodeRoadCertProject, verifyTrophyWithMicrosoft } from '../helpers/challenge-helpers'; import { UpdateReqType } from '../../utils'; import { normalizeChallengeType, normalizeDate } from '../../utils/normalize'; interface JwtPayload { userToken: string; } // TODO(Post-MVP): This could be narrowed down to only the fields needed by // specific endpoints, but that means complicating the update helper. const userChallengeSelect = { id: true, completedChallenges: true, partiallyCompletedChallenges: true, progressTimestamps: true, needsModeration: true, savedChallenges: true }; const challenges = getChallenges();\n\n/**\n * Plugin for the challenge submission endpoints.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const challengeRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.post(\n    '/project-completed',\n    {\n      schema: schemas.projectCompleted,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          return formatProjectCompletedValidation(error.validation);\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req: req });\n      logger.info(`User ${req.user?.id} submitted a project`);\n      // TODO: considering validation is determined by `challengeType`, it should not come from the client\n      //       Determine `challengeType` by `id`\n      const { id: projectId, challengeType, solution, githubLink } = req.body;\n      const userId = req.user?.id;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 1,
    "total_chunks": 24
  },
  {
    "id": "120595779d83d46cea476f5ade7fbbb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "fastify.log.child({ req, res: reply }); if (error.validation) { logger.warn({ validationError: error.validation }); void reply.code(400); return formatProjectCompletedValidation(error.validation); } else { fastify.errorHandler(error, req, reply); } } }, async (req, reply) => { const logger = fastify.log.child({ req: req }); logger.info(`User ${req.user?.id} submitted a project`); // TODO: considering validation is determined by `challengeType`, it should not come from the client // Determine `challengeType` by `id` const { id: projectId, challengeType, solution, githubLink } = req.body; const userId = req.user?.id;\n\n// If `backEndProject`:\n      // - `solution` needs to exist, but does not have to be valid URL\n      // - `githubLink` needs to exist and be valid URL\n      if (challengeType === challengeTypes.backEndProject) {\n        if (!solution || !isURL(githubLink + '')) {\n          logger.warn(\n            { solution, githubLink },\n            'Invalid backEndProject submission'\n          );\n          return void reply.code(403).send({\n            type: 'error',\n            message: 'That does not appear to be a valid challenge submission.'\n          });\n        }\n      } else if (solution && !isURL(solution + '')) {\n        logger.warn({ solution }, 'Invalid solution URL');\n        return void reply.code(403).send({\n          type: 'error',\n          message: 'That does not appear to be a valid challenge submission.'\n        });\n      }\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n        where: { id: userId },\n        select: userChallengeSelect\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 2,
    "total_chunks": 24
  },
  {
    "id": "51fc4acd77606f3d488f28ef1d0fdbd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "+ '')) { logger.warn( { solution, githubLink }, 'Invalid backEndProject submission' ); return void reply.code(403).send({ type: 'error', message: 'That does not appear to be a valid challenge submission.' }); } } else if (solution && !isURL(solution + '')) { logger.warn({ solution }, 'Invalid solution URL'); return void reply.code(403).send({ type: 'error', message: 'That does not appear to be a valid challenge submission.' }); } const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: userId }, select: userChallengeSelect });\n\nif (\n        challengeType === challengeTypes.codeAllyCert &&\n        !canSubmitCodeRoadCertProject(projectId, user)\n      ) {\n        logger.warn(\n          { projectId, user },\n          'User tried to submit a codeRoad cert project before completing the required challenges'\n        );\n        void reply.code(403);\n        return reply.send({\n          type: 'error',\n          message:\n            'You have to complete the project before you can submit a URL.'\n        });\n      }\n      const challenge = {\n        challengeType,\n        solution,\n        githubLink,\n        id: projectId,\n        completedDate: Date.now()\n      };\n      const progressTimestamps = user.progressTimestamps as ProgressTimestamp[];\n      const points = getPoints(progressTimestamps);\n\nconst { alreadyCompleted, completedDate } = await updateUserChallengeData(\n        fastify,\n        user,\n        projectId,\n        challenge\n      );\n\nreply.send({\n        alreadyCompleted,\n        // TODO(Post-MVP): audit the client and remove this if the client does\n        // not use it.\n        completedDate: normalizeDate(completedDate),\n        points: alreadyCompleted ? points : points + 1\n      });\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 3,
    "total_chunks": 24
  },
  {
    "id": "59e7cd37d86023c374a97444c413e6a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "the project before you can submit a URL.' }); } const challenge = { challengeType, solution, githubLink, id: projectId, completedDate: Date.now() }; const progressTimestamps = user.progressTimestamps as ProgressTimestamp[]; const points = getPoints(progressTimestamps); const { alreadyCompleted, completedDate } = await updateUserChallengeData( fastify, user, projectId, challenge ); reply.send({ alreadyCompleted, // TODO(Post-MVP): audit the client and remove this if the client does // not use it. completedDate: normalizeDate(completedDate), points: alreadyCompleted ? points : points + 1 }); } );\n\nfastify.post(\n    '/backend-challenge-completed',\n    {\n      schema: schemas.backendChallengeCompleted,\n      errorHandler(error, request, reply) {\n        const logger = fastify.log.child({ req: request });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          return formatProjectCompletedValidation(error.validation);\n        } else {\n          fastify.errorHandler(error, request, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(\n        { userId: req.user?.id },\n        `User submitted a backend challenge`\n      );\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n        where: { id: req.user?.id },\n\nselect: userChallengeSelect\n      });\n      const progressTimestamps = user.progressTimestamps as\n        | ProgressTimestamp[]\n        | null;\n      const points = getPoints(progressTimestamps);\n\nconst completedChallenge = {\n        completedDate: Date.now(),\n        ...req.body\n      };\n\nconst { alreadyCompleted } = await updateUserChallengeData(\n        fastify,\n        user,\n        req.body.id,\n        completedChallenge\n      );\n\nreturn {\n        alreadyCompleted,\n        points: alreadyCompleted ? points : points + 1,\n        completedDate: completedChallenge.completedDate\n      };\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 4,
    "total_chunks": 24
  },
  {
    "id": "f2fa0ecaae0eddb75a0c9eba3e6e61f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "res: reply }); logger.info( { userId: req.user?.id }, `User submitted a backend challenge` ); const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id }, select: userChallengeSelect }); const progressTimestamps = user.progressTimestamps as | ProgressTimestamp[] | null; const points = getPoints(progressTimestamps); const completedChallenge = { completedDate: Date.now(), ...req.body }; const { alreadyCompleted } = await updateUserChallengeData( fastify, user, req.body.id, completedChallenge ); return { alreadyCompleted, points: alreadyCompleted ? points : points + 1, completedDate: completedChallenge.completedDate }; } );\n\nfastify.post(\n    '/modern-challenge-completed',\n    {\n      schema: schemas.modernChallengeCompleted,\n      errorHandler(error, req, reply) {\n        if (error.validation) {\n          const logger = fastify.log.child({ req, res: reply });\n          // This is another highly used route, so debug log level is used to\n          // avoid excessive logging\n          logger.debug({ validationError: error.validation });\n          void reply.code(400);\n          return formatProjectCompletedValidation(error.validation);\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      // This is another highly used route, so debug log level is used to\n      // avoid excessive logging\n      logger.debug(\n        { userId: req.user?.id },\n        'User submitted a modern challenge'\n      );\n\nconst { id, files, challengeType } = req.body;\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n        where: { id: req.user?.id },\n        select: userChallengeSelect\n      });\n      const RawProgressTimestamp = user.progressTimestamps as\n        | ProgressTimestamp[]\n        | null;\n      const points = getPoints(RawProgressTimestamp);\n\nconst completedChallenge: CompletedChallenge = {\n        id,\n        files,\n        completedDate: Date.now()\n      };\n\nif (challengeType === challengeTypes.multifileCertProject) {\n        completedChallenge.isManuallyApproved = false;\n        user.needsModeration = true;\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 5,
    "total_chunks": 24
  },
  {
    "id": "04cfeb81de10f64f2f7fccd11c437140",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "log level is used to // avoid excessive logging logger.debug( { userId: req.user?.id }, 'User submitted a modern challenge' ); const { id, files, challengeType } = req.body; const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id }, select: userChallengeSelect }); const RawProgressTimestamp = user.progressTimestamps as | ProgressTimestamp[] | null; const points = getPoints(RawProgressTimestamp); const completedChallenge: CompletedChallenge = { id, files, completedDate: Date.now() }; if (challengeType === challengeTypes.multifileCertProject) { completedChallenge.isManuallyApproved = false; user.needsModeration = true; }\n\nif (\n        jsCertProjectIds.includes(id) ||\n        multifileCertProjectIds.includes(id) ||\n        multifilePythonCertProjectIds.includes(id)\n      ) {\n        completedChallenge.challengeType = challengeType;\n      }\n\nconst { alreadyCompleted, userSavedChallenges: savedChallenges } =\n        await updateUserChallengeData(fastify, user, id, completedChallenge);\n\nreturn {\n        alreadyCompleted,\n        points: alreadyCompleted ? points : points + 1,\n        completedDate: completedChallenge.completedDate,\n        savedChallenges\n      };\n    }\n  );\n\nfastify.post(\n    '/daily-coding-challenge-completed',\n    {\n      schema: schemas.dailyCodingChallengeCompleted,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          void reply.send({\n            type: 'error',\n            message: 'That does not appear to be a valid challenge submission.'\n          });\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    postDailyCodingChallengeCompleted\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 6,
    "total_chunks": 24
  },
  {
    "id": "acace59b649fc614b694a90959dd9b97",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "savedChallenges } = await updateUserChallengeData(fastify, user, id, completedChallenge); return { alreadyCompleted, points: alreadyCompleted ? points : points + 1, completedDate: completedChallenge.completedDate, savedChallenges }; } ); fastify.post( '/daily-coding-challenge-completed', { schema: schemas.dailyCodingChallengeCompleted, errorHandler(error, req, reply) { const logger = fastify.log.child({ req }); if (error.validation) { logger.warn({ validationError: error.validation }); void reply.code(400); void reply.send({ type: 'error', message: 'That does not appear to be a valid challenge submission.' }); } else { fastify.errorHandler(error, req, reply); } } }, postDailyCodingChallengeCompleted );\n\nfastify.post(\n    '/save-challenge',\n    {\n      schema: schemas.saveChallenge,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          return formatProjectCompletedValidation(error.validation);\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info({ userId: req.user?.id }, 'User saved a challenge');\n\nconst { files, id: challengeId } = req.body;\n      const user = await fastify.prisma.user.findUniqueOrThrow({\n        where: { id: req.user?.id }\n      });\n      const challenge = {\n        id: challengeId,\n        files\n      };\n\nif (\n        !multifileCertProjectIds.includes(challengeId) &&\n        !multifilePythonCertProjectIds.includes(challengeId)\n      ) {\n        logger.warn(\n          {\n            challengeId\n          },\n          'User tried to save a challenge that is not saveable'\n        );\n        return void reply\n          .code(400)\n          .send('That challenge type is not saveable.');\n      }\n\nconst userSavedChallenges = saveUserChallengeData(\n        challengeId,\n        user.savedChallenges,\n        challenge\n      );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 7,
    "total_chunks": 24
  },
  {
    "id": "a21182cfae321636a95bd108b70582c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "logger.info({ userId: req.user?.id }, 'User saved a challenge'); const { files, id: challengeId } = req.body; const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id } }); const challenge = { id: challengeId, files }; if ( !multifileCertProjectIds.includes(challengeId) && !multifilePythonCertProjectIds.includes(challengeId) ) { logger.warn( { challengeId }, 'User tried to save a challenge that is not saveable' ); return void reply .code(400) .send('That challenge type is not saveable.'); } const userSavedChallenges = saveUserChallengeData( challengeId, user.savedChallenges, challenge );\n\nawait fastify.prisma.user.update({\n        where: { id: user.id },\n        data: {\n          savedChallenges: userSavedChallenges\n        }\n      });\n\nvoid reply.send({ savedChallenges: userSavedChallenges });\n    }\n  );\n\nfastify.get(\n    '/exam/:id',\n    {\n      schema: schemas.exam,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          return { error: `Valid 'id' not found in request parameters.` };\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(\n        { userId: req.user?.id, examId: req.params.id },\n        'User requested an exam'\n      );\n\nconst { id } = req.params;\n\nconst { completedChallenges } =\n        await fastify.prisma.user.findUniqueOrThrow({\n          where: { id: req.user?.id },\n          select: { completedChallenges: true }\n        });\n\nconst examFromDb = await fastify.prisma.exam.findUnique({\n        where: { id }\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 8,
    "total_chunks": 24
  },
  {
    "id": "7e6989fb7b9e30b8b0ff39c77383d2a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "`Valid 'id' not found in request parameters.` }; } else { fastify.errorHandler(error, req, reply); } } }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); logger.info( { userId: req.user?.id, examId: req.params.id }, 'User requested an exam' ); const { id } = req.params; const { completedChallenges } = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id }, select: { completedChallenges: true } }); const examFromDb = await fastify.prisma.exam.findUnique({ where: { id } });\n\nif (!examFromDb) {\n        logger.warn(\n          { examId: id },\n          'User requested an exam that does not exist'\n        );\n        void reply.code(500);\n        return {\n          error: 'An error occurred trying to get the exam from the database.'\n        };\n      }\n\nconst validExamFromDbSchema = validateExamFromDbSchema(examFromDb);\n\nif ('error' in validExamFromDbSchema) {\n        logger.warn(\n          { examId: id, validationError: validExamFromDbSchema.error },\n          'Error validating exam from database'\n        );\n        void reply.code(500);\n        return {\n          error:\n            'An error occurred validating the exam information from the database.'\n        };\n      }\n\nconst { prerequisites, numberOfQuestionsInExam, title } = examFromDb;\n\n// Validate User has completed prerequisite challenges\n      const prerequisiteIds = prerequisites.map(p => p.id);\n      const completedPrerequisites = completedChallenges.filter(c =>\n        prerequisiteIds.includes(c.id)\n      );\n\nif (completedPrerequisites.length !== prerequisiteIds.length) {\n        logger.warn(\n          { examId: id, prerequisites, completedPrerequisites },\n          'User has not completed all prerequisites for exam'\n        );\n        void reply.code(403);\n        return {\n          error: `You have not completed the required challenges to start the '${title}'.`\n        };\n      }\n\nconst randomizedExam = generateRandomExam(examFromDb);\n      const validGeneratedExamSchema = validateGeneratedExamSchema(\n        randomizedExam,\n        numberOfQuestionsInExam\n      );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 9,
    "total_chunks": 24
  },
  {
    "id": "2e8382c182a34b97bd38ddd4582e502a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "prerequisites, numberOfQuestionsInExam, title } = examFromDb; // Validate User has completed prerequisite challenges const prerequisiteIds = prerequisites.map(p => p.id); const completedPrerequisites = completedChallenges.filter(c => prerequisiteIds.includes(c.id) ); if (completedPrerequisites.length !== prerequisiteIds.length) { logger.warn( { examId: id, prerequisites, completedPrerequisites }, 'User has not completed all prerequisites for exam' ); void reply.code(403); return { error: `You have not completed the required challenges to start the '${title}'.` }; } const randomizedExam = generateRandomExam(examFromDb); const validGeneratedExamSchema = validateGeneratedExamSchema( randomizedExam, numberOfQuestionsInExam );\n\nif (validGeneratedExamSchema.error) {\n        logger.error(\n          validGeneratedExamSchema.error,\n          'Error validating generated exam'\n        );\n        fastify.Sentry.captureException(validGeneratedExamSchema.error);\n        void reply.code(500);\n        return { error: 'An error occurred trying to randomize the exam.' };\n      }\n\nreturn {\n        generatedExam: randomizedExam\n      };\n    }\n  );\n\nfastify.post(\n    '/ms-trophy-challenge-completed',\n    {\n      schema: schemas.msTrophyChallengeCompleted,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          void reply.send({ type: 'error', message: 'flash.ms.trophy.err-2' });\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(\n        { userId: req.user?.id },\n        'User submitted a Microsoft trophy challenge'\n      );\n      try {\n        const challengeId = req.body.id;\n        const challenge = msTrophyChallenges.find(\n          challenge => challenge.id === challengeId\n        );\n\nif (!challenge) {\n          logger.warn(\n            { challengeId },\n            'User tried to submit a Microsoft trophy challenge that does not exist'\n          );\n          return reply\n            .code(400)\n            .send({ type: 'error', message: 'flash.ms.trophy.err-2' });\n        }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 10,
    "total_chunks": 24
  },
  {
    "id": "edb9a03926cf2afcf7a875c1c5bc5235",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "req, reply); } } }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); logger.info( { userId: req.user?.id }, 'User submitted a Microsoft trophy challenge' ); try { const challengeId = req.body.id; const challenge = msTrophyChallenges.find( challenge => challenge.id === challengeId ); if (!challenge) { logger.warn( { challengeId }, 'User tried to submit a Microsoft trophy challenge that does not exist' ); return reply .code(400) .send({ type: 'error', message: 'flash.ms.trophy.err-2' }); }\n\nconst msUser = await fastify.prisma.msUsername.findFirst({\n          where: { userId: req.user?.id }\n        });\n\nif (!msUser || !msUser.msUsername) {\n          logger.warn(\n            { hasMsUser: !!msUser },\n            'User tried to submit a Microsoft trophy challenge without a Microsoft username'\n          );\n          return reply\n            .code(403)\n            .send({ type: 'error', message: 'flash.ms.trophy.err-1' });\n        }\n\nconst { msUsername } = msUser;\n\n// TODO: log error if msTrophyId not found?\n        const msTrophyId = challenge.msTrophyId ?? '';\n\nconst msTrophyStatus = await verifyTrophyWithMicrosoft({\n          msUsername,\n          msTrophyId\n        });\n\nif (msTrophyStatus.type === 'error') {\n          logger.warn('Error verifying trophy with Microsoft');\n          return reply.code(403).send(msTrophyStatus);\n        }\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n          where: { id: req.user?.id },\n          select: userChallengeSelect\n        });\n\nconst progressTimestamps =\n          user.progressTimestamps as ProgressTimestamp[];\n\nconst completedChallenge = {\n          id: challengeId,\n          solution: msTrophyStatus.msUserAchievementsApiUrl,\n          completedDate: Date.now()\n        };\n\nconst { alreadyCompleted, completedDate } =\n          await updateUserChallengeData(\n            fastify,\n            user,\n            challengeId,\n            completedChallenge\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 11,
    "total_chunks": 24
  },
  {
    "id": "51b684248aca0b3203ca168c2b34e29a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "log error if msTrophyId not found? const msTrophyId = challenge.msTrophyId ?? ''; const msTrophyStatus = await verifyTrophyWithMicrosoft({ msUsername, msTrophyId }); if (msTrophyStatus.type === 'error') { logger.warn('Error verifying trophy with Microsoft'); return reply.code(403).send(msTrophyStatus); } const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id }, select: userChallengeSelect }); const progressTimestamps = user.progressTimestamps as ProgressTimestamp[]; const completedChallenge = { id: challengeId, solution: msTrophyStatus.msUserAchievementsApiUrl, completedDate: Date.now() }; const { alreadyCompleted, completedDate } = await updateUserChallengeData( fastify, user, challengeId, completedChallenge );\n\nreply.send({\n          alreadyCompleted,\n          points: getPoints(progressTimestamps) + (alreadyCompleted ? 0 : 1),\n          completedDate: normalizeDate(completedDate)\n        });\n      } catch (error) {\n        logger.error(error, 'Error submitting Microsoft trophy challenge');\n        fastify.Sentry.captureException(error);\n        void reply.code(500);\n        return {\n          type: 'error',\n          message: 'flash.ms.trophy.err-5'\n        } as const;\n      }\n    }\n  );\n\nfastify.post(\n    '/exam-challenge-completed',\n    {\n      schema: schemas.examChallengeCompleted,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          void reply.send({\n            error: 'Valid request body not found in attempt to submit exam.'\n          });\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n\nlogger.info({ userId: req.user?.id }, 'User submitted an exam challenge');\n\ntry {\n        const userId = req.user?.id;\n        const { userCompletedExam, id, challengeType } = req.body;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 12,
    "total_chunks": 24
  },
  {
    "id": "711e6826df5490e84c5025dc6deb5022",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "const logger = fastify.log.child({ req, res: reply }); if (error.validation) { logger.warn({ validationError: error.validation }); void reply.code(400); void reply.send({ error: 'Valid request body not found in attempt to submit exam.' }); } else { fastify.errorHandler(error, req, reply); } } }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); logger.info({ userId: req.user?.id }, 'User submitted an exam challenge'); try { const userId = req.user?.id; const { userCompletedExam, id, challengeType } = req.body;\n\nconst { completedChallenges, completedExams, progressTimestamps } =\n          await fastify.prisma.user.findUniqueOrThrow({\n            where: { id: userId },\n            select: {\n              completedChallenges: true,\n              completedExams: true,\n              progressTimestamps: true\n            }\n          });\n\nconst examFromDb = await fastify.prisma.exam.findUnique({\n          where: { id }\n        });\n\nif (!examFromDb) {\n          logger.warn(\n            { examId: id },\n            'User tried to submit an exam that does not exist'\n          );\n          void reply.code(400);\n          return {\n            error: 'An error occurred trying to get the exam from the database.'\n          };\n        }\n\nconst validExamFromDbSchema = validateExamFromDbSchema(examFromDb);\n        if ('error' in validExamFromDbSchema) {\n          logger.warn(\n            { examId: id, validationError: validExamFromDbSchema.error },\n            'Error validating exam from database'\n          );\n          void reply.code(500);\n          return {\n            error:\n              'An error occurred validating the exam information from the database.'\n          };\n        }\n\nconst { prerequisites, numberOfQuestionsInExam, title } = examFromDb;\n\nconst prerequisiteIds = prerequisites.map(p => p.id);\n        const completedPrerequisites = completedChallenges.filter(c =>\n          prerequisiteIds.includes(c.id)\n        );\n\nif (completedPrerequisites.length !== prerequisiteIds.length) {\n          logger.warn(\n            { examId: id, prerequisites, completedPrerequisites },\n            'User has not completed all prerequisites for exam'\n          );\n          void reply.code(403);\n          return {\n            error: `You have not completed the required challenges to start the '${title}'.`\n          };\n        }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 13,
    "total_chunks": 24
  },
  {
    "id": "7574112acd808b18069f8044414b388b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "reply.code(500); return { error: 'An error occurred validating the exam information from the database.' }; } const { prerequisites, numberOfQuestionsInExam, title } = examFromDb; const prerequisiteIds = prerequisites.map(p => p.id); const completedPrerequisites = completedChallenges.filter(c => prerequisiteIds.includes(c.id) ); if (completedPrerequisites.length !== prerequisiteIds.length) { logger.warn( { examId: id, prerequisites, completedPrerequisites }, 'User has not completed all prerequisites for exam' ); void reply.code(403); return { error: `You have not completed the required challenges to start the '${title}'.` }; }\n\nconst validUserCompletedExam = validateUserCompletedExamSchema(\n          userCompletedExam,\n          numberOfQuestionsInExam\n        );\n        if ('error' in validUserCompletedExam) {\n          logger.error(validUserCompletedExam.error);\n          void reply.code(400);\n          return {\n            error: 'An error occurred validating the submitted exam.'\n          };\n        }\n\nconst examResults = createExamResults(userCompletedExam, examFromDb);\n\nconst validExamResults = validateExamResultsSchema(examResults);\n        if ('error' in validExamResults) {\n          logger.error(validExamResults.error);\n          void reply.code(500);\n          return {\n            error: 'An error occurred validating the submitted exam.'\n          };\n        }\n\nconst newCompletedChallenges: CompletedChallenge[] =\n          completedChallenges.map(c => {\n            const { completedDate, challengeType, ...rest } = c;\n\nreturn {\n              completedDate: normalizeDate(completedDate),\n              challengeType: normalizeChallengeType(challengeType),\n              ...rest\n            };\n          });\n        const newCompletedExams: CompletedExam[] = completedExams;\n        const newProgressTimeStamps = progressTimestamps as ProgressTimestamp[];\n        const completedDate = Date.now();\n\nconst newCompletedChallenge = {\n          id,\n          challengeType,\n          completedDate,\n          examResults\n        };\n\n// Always push to completedExams[] to keep a record of all exams taken.\n        newCompletedExams.push(newCompletedChallenge);\n\nlet addPoint = false;\n\nconst alreadyCompletedIndex = completedChallenges.findIndex(\n          c => c.id === id\n        );\n\nconst alreadyCompleted = alreadyCompletedIndex >= 0;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 14,
    "total_chunks": 24
  },
  {
    "id": "ab391f525052c9587eb718aa39c648d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "{ const { completedDate, challengeType, ...rest } = c; return { completedDate: normalizeDate(completedDate), challengeType: normalizeChallengeType(challengeType), ...rest }; }); const newCompletedExams: CompletedExam[] = completedExams; const newProgressTimeStamps = progressTimestamps as ProgressTimestamp[]; const completedDate = Date.now(); const newCompletedChallenge = { id, challengeType, completedDate, examResults }; // Always push to completedExams[] to keep a record of all exams taken. newCompletedExams.push(newCompletedChallenge); let addPoint = false; const alreadyCompletedIndex = completedChallenges.findIndex( c => c.id === id ); const alreadyCompleted = alreadyCompletedIndex >= 0;\n\nif (examResults.passed) {\n          if (alreadyCompleted) {\n            const { percentCorrect } = examResults;\n            const oldChallenge = completedChallenges[\n              alreadyCompletedIndex\n            ] as CompletedChallenge;\n            const oldResults = oldChallenge?.examResults as ExamResults;\n\n// only update if it's a better result\n            if (percentCorrect > oldResults.percentCorrect) {\n              const updatedChallenge = {\n                id,\n                challengeType: oldChallenge.challengeType,\n                completedDate: oldChallenge.completedDate,\n                examResults\n              };\n\nnewCompletedChallenges[alreadyCompletedIndex] = updatedChallenge;\n\n// TODO(Post-MVP): Try to DRY the updates.\n              // updateUserChallengeData, for all its faults, handles the\n              // update/insert logic well.\n              await fastify.prisma.user.update({\n                where: { id: userId },\n                data: {\n                  completedExams: newCompletedExams,\n                  completedChallenges: newCompletedChallenges\n                }\n              });\n            } else {\n              await fastify.prisma.user.update({\n                where: { id: userId },\n                data: {\n                  completedExams: newCompletedExams\n                }\n              });\n            }\n\n// not already completed, push to completedChallenges\n          } else {\n            addPoint = true;\n            newCompletedChallenges.push(newCompletedChallenge);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 15,
    "total_chunks": 24
  },
  {
    "id": "4b361eaf913376212c7aa2d6d144b18c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "{ id, challengeType: oldChallenge.challengeType, completedDate: oldChallenge.completedDate, examResults }; newCompletedChallenges[alreadyCompletedIndex] = updatedChallenge; // TODO(Post-MVP): Try to DRY the updates. // updateUserChallengeData, for all its faults, handles the // update/insert logic well. await fastify.prisma.user.update({ where: { id: userId }, data: { completedExams: newCompletedExams, completedChallenges: newCompletedChallenges } }); } else { await fastify.prisma.user.update({ where: { id: userId }, data: { completedExams: newCompletedExams } }); } // not already completed, push to completedChallenges } else { addPoint = true; newCompletedChallenges.push(newCompletedChallenge);\n\nawait fastify.prisma.user.update({\n              where: { id: userId },\n              data: {\n                completedExams: newCompletedExams,\n                completedChallenges: newCompletedChallenges,\n                progressTimestamps: [\n                  ...newProgressTimeStamps,\n                  newCompletedChallenge.completedDate\n                ]\n              }\n            });\n          }\n\n// exam not passed\n        } else {\n          await fastify.prisma.user.update({\n            where: { id: userId },\n            data: {\n              completedExams: newCompletedExams\n            }\n          });\n        }\n\nconst points = getPoints(newProgressTimeStamps);\n\nreturn {\n          alreadyCompleted,\n          points: addPoint ? points + 1 : points,\n          completedDate,\n          examResults\n        };\n      } catch (error) {\n        logger.error(error, 'Error submitting exam challenge');\n        fastify.Sentry.captureException(error);\n        void reply.code(500);\n        return {\n          error: 'An error occurred trying to submit your exam.'\n        };\n      }\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 16,
    "total_chunks": 24
  },
  {
    "id": "de6545bb0fd2ec7d27ca3859bd8ae14a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "completedChallenges: newCompletedChallenges, progressTimestamps: [ ...newProgressTimeStamps, newCompletedChallenge.completedDate ] } }); } // exam not passed } else { await fastify.prisma.user.update({ where: { id: userId }, data: { completedExams: newCompletedExams } }); } const points = getPoints(newProgressTimeStamps); return { alreadyCompleted, points: addPoint ? points + 1 : points, completedDate, examResults }; } catch (error) { logger.error(error, 'Error submitting exam challenge'); fastify.Sentry.captureException(error); void reply.code(500); return { error: 'An error occurred trying to submit your exam.' }; } } );\n\nfastify.post(\n    '/submit-quiz-attempt',\n    {\n      schema: schemas.submitQuizAttempt,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          void reply.send({\n            type: 'error',\n            message:\n              'That does not appear to be a valid quiz attempt submission.'\n          });\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async req => {\n      const { challengeId, quizId } = req.body;\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n        where: { id: req.user?.id },\n        select: {\n          id: true,\n          quizAttempts: true\n        }\n      });\n\nconst existingAttempt = user.quizAttempts.find(matches({ challengeId }));\n\nconst newAttempt = {\n        challengeId,\n        quizId,\n        timestamp: Date.now()\n      };\n\nawait fastify.prisma.user.update({\n        where: { id: user.id },\n        data: {\n          quizAttempts: existingAttempt\n            ? {\n                updateMany: { where: { challengeId }, data: newAttempt }\n              }\n            : { push: newAttempt }\n        }\n      });\n\nreturn {};\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 17,
    "total_chunks": 24
  },
  {
    "id": "11497ca6ab6dda15221b5a0058a78b65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "const { challengeId, quizId } = req.body; const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id }, select: { id: true, quizAttempts: true } }); const existingAttempt = user.quizAttempts.find(matches({ challengeId })); const newAttempt = { challengeId, quizId, timestamp: Date.now() }; await fastify.prisma.user.update({ where: { id: user.id }, data: { quizAttempts: existingAttempt ? { updateMany: { where: { challengeId }, data: newAttempt } } : { push: newAttempt } } }); return {}; } ); done(); };\n\n/**\n * Plugin for challenge submissions behind AuthZ, not AuthN.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const challengeTokenRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.post(\n    '/coderoad-challenge-completed',\n    {\n      schema: schemas.coderoadChallengeCompleted,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400);\n          return formatCoderoadChallengeCompletedValidation(error.validation);\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    postCoderoadChallengeCompleted\n  );\n\ndone();\n};\n\nasync function postCoderoadChallengeCompleted(\n  this: FastifyInstance,\n  req: UpdateReqType<typeof schemas.coderoadChallengeCompleted>,\n  reply: FastifyReply\n) {\n  const logger = this.log.child({ req, res: reply });\n  logger.info({ userId: req.user?.id }, 'User submitted a coderoad challenge');\n\nconst { 'coderoad-user-token': encodedUserToken } = req.headers;\n  const { tutorialId } = req.body;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 18,
    "total_chunks": 24
  },
  {
    "id": "96cc5052c3efec4e0e83de3edb1c41b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "reply) { const logger = fastify.log.child({ req, res: reply }); if (error.validation) { logger.warn({ validationError: error.validation }); void reply.code(400); return formatCoderoadChallengeCompletedValidation(error.validation); } else { fastify.errorHandler(error, req, reply); } } }, postCoderoadChallengeCompleted ); done(); }; async function postCoderoadChallengeCompleted( this: FastifyInstance, req: UpdateReqType<typeof schemas.coderoadChallengeCompleted>, reply: FastifyReply ) { const logger = this.log.child({ req, res: reply }); logger.info({ userId: req.user?.id }, 'User submitted a coderoad challenge'); const { 'coderoad-user-token': encodedUserToken } = req.headers; const { tutorialId } = req.body;\n\nlet userToken;\n  try {\n    const payload = jwt.verify(encodedUserToken, JWT_SECRET) as JwtPayload;\n    userToken = payload.userToken;\n  } catch {\n    logger.warn('Invalid user token');\n    void reply.code(400);\n    return reply.send({ type: 'error', msg: `invalid user token` });\n  }\n\nconst tutorialRepo = tutorialId.split(':')[0];\n  const tutorialOrg = tutorialRepo?.split('/')?.[0];\n\nif (tutorialOrg !== 'freeCodeCamp') {\n    logger.warn(\n      { tutorialId },\n      'Tutorial not hosted on freeCodeCamp GitHub account'\n    );\n    void reply.code(400);\n    return reply.send({\n      type: 'error',\n      msg: `Tutorial not hosted on freeCodeCamp GitHub account`\n    });\n  }\n\nconst codeRoadChallenges = challenges.filter(\n    ({ challengeType }) =>\n      challengeType === challengeTypes.codeAllyPractice ||\n      challengeType === challengeTypes.codeAllyCert\n  );\n\nconst challenge = codeRoadChallenges.find(challenge => {\n    return tutorialRepo && challenge.url?.endsWith(tutorialRepo);\n  });\n\nif (!challenge) {\n    logger.warn({ tutorialRepo }, 'Tutorial repo is not valid');\n    void reply.code(400);\n    return reply.send({ type: 'error', msg: 'Tutorial name is not valid' });\n  }\n\nconst { id: challengeId, challengeType } = challenge;\n  try {\n    const tokenInfo = await this.prisma.userToken.findUnique({\n      where: { id: userToken }\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 19,
    "total_chunks": 24
  },
  {
    "id": "9875ed6ef234d65420452911cf839c53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "account` }); } const codeRoadChallenges = challenges.filter( ({ challengeType }) => challengeType === challengeTypes.codeAllyPractice || challengeType === challengeTypes.codeAllyCert ); const challenge = codeRoadChallenges.find(challenge => { return tutorialRepo && challenge.url?.endsWith(tutorialRepo); }); if (!challenge) { logger.warn({ tutorialRepo }, 'Tutorial repo is not valid'); void reply.code(400); return reply.send({ type: 'error', msg: 'Tutorial name is not valid' }); } const { id: challengeId, challengeType } = challenge; try { const tokenInfo = await this.prisma.userToken.findUnique({ where: { id: userToken } });\n\nif (!tokenInfo) {\n      logger.warn('User token not found');\n      void reply.code(400);\n      return reply.send({ type: 'error', msg: 'User token not found' });\n    }\n\nconst { userId } = tokenInfo;\n\nconst user = await this.prisma.user.findFirstOrThrow({\n      where: { id: userId }\n    });\n\nif (!user) {\n      logger.warn('User not found');\n      void reply.code(400);\n      return {\n        type: 'error',\n        msg: 'User for user token not found'\n      } as const;\n    }\n\nconst completedDate = Date.now();\n    const { completedChallenges = [], partiallyCompletedChallenges = [] } =\n      user;\n\nconst isCompleted = completedChallenges.some(\n      challenge => challenge.id === challengeId\n    );\n\nif (challengeType === challengeTypes.codeAllyCert && !isCompleted) {\n      const finalChallenge = {\n        id: challengeId,\n        completedDate\n      };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 20,
    "total_chunks": 24
  },
  {
    "id": "1b07dcdedf1b2ab2a89bbc38ad70f1a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "= tokenInfo; const user = await this.prisma.user.findFirstOrThrow({ where: { id: userId } }); if (!user) { logger.warn('User not found'); void reply.code(400); return { type: 'error', msg: 'User for user token not found' } as const; } const completedDate = Date.now(); const { completedChallenges = [], partiallyCompletedChallenges = [] } = user; const isCompleted = completedChallenges.some( challenge => challenge.id === challengeId ); if (challengeType === challengeTypes.codeAllyCert && !isCompleted) { const finalChallenge = { id: challengeId, completedDate };\n\nawait this.prisma.user.update({\n        where: { id: userId },\n        data: {\n          partiallyCompletedChallenges: uniqBy(\n            [finalChallenge, ...partiallyCompletedChallenges],\n            'id'\n          )\n        }\n      });\n    } else {\n      await updateUserChallengeData(this, user, challengeId, {\n        id: challengeId,\n        completedDate\n      });\n    }\n  } catch (error) {\n    // TODO(Post-MVP): don't catch, just let Sentry handle this.\n    logger.error(error, 'Error submitting coderoad challenge');\n    this.Sentry.captureException(error);\n    void reply.code(500);\n    return reply.send({\n      type: 'error',\n      msg: 'An error occurred trying to submit the challenge'\n    });\n  }\n  reply.send({\n    type: 'success',\n    msg: 'Successfully submitted challenge'\n  });\n}\n\nasync function postDailyCodingChallengeCompleted(\n  this: FastifyInstance,\n  req: UpdateReqType<typeof schemas.dailyCodingChallengeCompleted>,\n  reply: FastifyReply\n) {\n  const logger = this.log.child({ req });\n  logger.info(`User ${req.user?.id} submitted a daily coding challenge`);\n\nconst { id, language } = req.body;\n\nconst user = await this.prisma.user.findUniqueOrThrow({\n    where: { id: req.user?.id },\n    select: {\n      completedDailyCodingChallenges: true,\n      progressTimestamps: true\n    }\n  });\n\nconst { completedDailyCodingChallenges, progressTimestamps = [] } = user;\n\nconst points = getPoints(progressTimestamps as ProgressTimestamp[]);\n  const oldCompletedChallenge = completedDailyCodingChallenges.find(\n    c => c.id === id\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 21,
    "total_chunks": 24
  },
  {
    "id": "4d5ffa925e40dfcff5db148f1156faf7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "} async function postDailyCodingChallengeCompleted( this: FastifyInstance, req: UpdateReqType<typeof schemas.dailyCodingChallengeCompleted>, reply: FastifyReply ) { const logger = this.log.child({ req }); logger.info(`User ${req.user?.id} submitted a daily coding challenge`); const { id, language } = req.body; const user = await this.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id }, select: { completedDailyCodingChallenges: true, progressTimestamps: true } }); const { completedDailyCodingChallenges, progressTimestamps = [] } = user; const points = getPoints(progressTimestamps as ProgressTimestamp[]); const oldCompletedChallenge = completedDailyCodingChallenges.find( c => c.id === id );\n\nconst alreadyCompleted = !!oldCompletedChallenge;\n  const languageAlreadyCompleted =\n    oldCompletedChallenge?.languages.includes(language);\n\nif (alreadyCompleted) {\n    const { completedDate, languages } = oldCompletedChallenge;\n\nif (languageAlreadyCompleted) {\n      // alreadyCompleted && languageAlreadyCompleted, no need to change anything in the database\n      return reply.send({\n        alreadyCompleted,\n        points,\n        completedDate,\n        completedDailyCodingChallenges\n      });\n    } else {\n      // alreadyCompleted && !languageAlreadyCompleted, add the language to the record\n      const { completedDailyCodingChallenges } = await this.prisma.user.update({\n        where: { id: req.user?.id },\n        select: {\n          completedDailyCodingChallenges: true\n        },\n        data: {\n          completedDailyCodingChallenges: {\n            updateMany: {\n              where: { id },\n              data: {\n                languages: [...new Set([...languages, language])]\n              }\n            }\n          }\n        }\n      });\n      return reply.send({\n        alreadyCompleted,\n        points,\n        completedDate,\n        completedDailyCodingChallenges\n      });\n    }\n  } else {\n    // !alreadyCompleted, add new record for completed challenge\n    const newCompletedDate = Date.now();\n\nconst newCompletedChallenge = {\n      id,\n      completedDate: newCompletedDate,\n      languages: [language]\n    };\n\nconst newCompletedChallenges = [\n      ...completedDailyCodingChallenges,\n      newCompletedChallenge\n    ];\n\nconst newProgressTimestamps = Array.isArray(progressTimestamps)\n      ? [...progressTimestamps, newCompletedDate]\n      : [newCompletedDate];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 22,
    "total_chunks": 24
  },
  {
    "id": "c623ce7427b27f6c13feb7fe423e1b5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
    "source_type": "git_repo",
    "title": "challenge",
    "content": "}, select: { completedDailyCodingChallenges: true }, data: { completedDailyCodingChallenges: { updateMany: { where: { id }, data: { languages: [...new Set([...languages, language])] } } } } }); return reply.send({ alreadyCompleted, points, completedDate, completedDailyCodingChallenges }); } } else { // !alreadyCompleted, add new record for completed challenge const newCompletedDate = Date.now(); const newCompletedChallenge = { id, completedDate: newCompletedDate, languages: [language] }; const newCompletedChallenges = [ ...completedDailyCodingChallenges, newCompletedChallenge ]; const newProgressTimestamps = Array.isArray(progressTimestamps) ? [...progressTimestamps, newCompletedDate] : [newCompletedDate];\n\nawait this.prisma.user.update({\n      where: { id: req.user?.id },\n      data: {\n        completedDailyCodingChallenges: newCompletedChallenges,\n        progressTimestamps: newProgressTimestamps\n      }\n    });\n    return reply.send({\n      alreadyCompleted,\n      points: points + 1,\n      completedDate: newCompletedDate,\n      completedDailyCodingChallenges: newCompletedChallenges\n    });\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 33338,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 248,
    "chunk_index": 23,
    "total_chunks": 24
  },
  {
    "id": "d1a36d8fec5d3ecd5e2cd6f1d6570df6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "import {\n  createSuperRequest,\n  devLogin,\n  setupServer,\n  defaultUserEmail,\n  defaultUserId\n} from '../../../jest.utils';\nimport { createUserInput } from '../../utils/create-user'; const testEWalletEmail = 'baz@bar com';\nconst testSubscriptionId = 'sub_test_id';\nconst testCustomerId = 'cust_test_id';\nconst userWithoutProgress = createUserInput(defaultUserEmail);\nconst userWithProgress = { createUserInput(defaultUserEmail),\n  completedChallenges: [\n    {\n      id: 'a6b0bb188d873cb2c8729495',\n      completedDate: 1520002973119,\n      solution: null,\n      challengeType: 5\n    },\n    {\n      id: '33b0bb188d873cb2c8729433',\n      completedDate: 4420002973122,\n      solution: null,\n      challengeType: 5\n    },\n    {\n      id: 'a5229172f011153519423690',\n      completedDate: 1520440323273,\n      solution: null,\n      challengeType: 5\n    },\n    {\n      id: 'a5229172f011153519423692',\n      completedDate: 1520440323274,\n      githubLink: '',\n      challengeType: 5\n    }\n  ]\n};\nconst donationMock = {\n  endDate: null,\n  startDate: {\n    date: '2024-07-17T10:20:56 076Z',\n    when: '2024-07-17T10:20:56 076+00:00'\n  },\n  id: '66979a414748aa2f3ba36d41',\n  amount: 500,\n  customerId: 'cust_test_id',\n  duration: 'month',\n  email: 'foo@bar com',\n  provider: 'stripe',\n  subscriptionId: 'sub_test_id',\n  userId: defaultUserId\n};\nconst sharedDonationReqBody = {\n  amount: 500,\n  duration: 'month'\n};\nconst chargeStripeReqBody = {\n  email: testEWalletEmail,\n  subscriptionId: 'sub_test_id', sharedDonationReqBody\n};\nconst chargeStripeCardReqBody = {\n  paymentMethodId: 'UID',",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 15
  },
  {
    "id": "49b0203205a5827367a9012643dd6a4e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "1520440323273, solution: null, challengeType: 5 }, { id: 'a5229172f011153519423692', completedDate: 1520440323274, githubLink: '', challengeType: 5 } ] }; const donationMock = { endDate: null, startDate: { date: '2024-07-17T10:20:56 076Z', when: '2024-07-17T10:20:56 076+00:00' }, id: '66979a414748aa2f3ba36d41', amount: 500, customerId: 'cust_test_id', duration: 'month', email: 'foo@bar com', provider: 'stripe', subscriptionId: 'sub_test_id', userId: defaultUserId }; const sharedDonationReqBody = { amount: 500, duration: 'month' }; const chargeStripeReqBody = { email: testEWalletEmail, subscriptionId: 'sub_test_id', sharedDonationReqBody }; const chargeStripeCardReqBody = { paymentMethodId: 'UID',sharedDonationReqBody\n};\nconst createStripePaymentIntentReqBody = {\n  email: testEWalletEmail,\n  name: 'Baz Bar',\n  token: { id: 'tok_123' }, sharedDonationReqBody\n};\nconst mockSubCreate = jest fn();\nconst mockAttachPaymentMethod = jest fn(() =>\n  Promise resolve({\n    id: 'pm_1MqLiJLkdIwHu7ixUEgbFdYF',\n    object: 'payment_method'\n  })\n);\nconst mockCustomerCreate = jest fn(() =>\n  Promise resolve({\n    id: testCustomerId,\n    name: 'Jest_User',\n    currency: 'sgd',\n    description: 'Jest User Account created'\n  })\n);\nconst mockSubRetrieveObj = {\n  id: testSubscriptionId,\n  items: {\n    data: [\n      {\n        plan: {\n          product: 'prod_GD1GGbJsqQaupl'\n        }\n      }\n    ]\n  },\n  // 1 Jan 2040\n  current_period_start: Math floor(Date now() / 1000),\n  customer: testCustomerId,\n  status: 'active'\n};\nconst mockSubRetrieve = jest fn(() => Promise resolve(mockSubRetrieveObj));\nconst mockCheckoutSessionCreate = jest",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 15
  },
  {
    "id": "6889f1d93a52f96ef0079aa41c51044d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "=> Promise resolve({ id: 'pm_1MqLiJLkdIwHu7ixUEgbFdYF', object: 'payment_method' }) ); const mockCustomerCreate = jest fn(() => Promise resolve({ id: testCustomerId, name: 'Jest_User', currency: 'sgd', description: 'Jest User Account created' }) ); const mockSubRetrieveObj = { id: testSubscriptionId, items: { data: [ { plan: { product: 'prod_GD1GGbJsqQaupl' } } ] }, // 1 Jan 2040 current_period_start: Math floor(Date now() / 1000), customer: testCustomerId, status: 'active' }; const mockSubRetrieve = jest fn(() => Promise resolve(mockSubRetrieveObj)); const mockCheckoutSessionCreate = jestfn(() =>\n  Promise resolve({ id: 'checkout_session_id' })\n);\nconst mockCustomerUpdate = jest fn();\nconst generateMockSubCreate = (status: string) => () =>\n  Promise resolve({\n    id: testSubscriptionId,\n    latest_invoice: {\n      payment_intent: {\n        client_secret: 'superSecret',\n        status\n      }\n    }\n  });\nconst defaultError = () =>\n  Promise reject(new Error('Stripe encountered an error'));\n\njest.mock('stripe', () => {\n  return jest.fn().mockImplementation(() => {\n    return {\n      customers: {\n        create: mockCustomerCreate,\n        update: mockCustomerUpdate\n      },\n      paymentMethods: {\n        attach: mockAttachPaymentMethod\n      },\n      subscriptions: {\n        create: mockSubCreate,\n        retrieve: mockSubRetrieve\n      },\n      checkout: {\n        sessions: {\n          create: mockCheckoutSessionCreate\n        }\n      }\n    };\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 2,
    "total_chunks": 15
  },
  {
    "id": "47ef65b4209cdb46e635bd4ad30d8e98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "= jest fn(); const generateMockSubCreate = (status: string) => () => Promise resolve({ id: testSubscriptionId, latest_invoice: { payment_intent: { client_secret: 'superSecret', status } } }); const defaultError = () => Promise reject(new Error('Stripe encountered an error')); jest.mock('stripe', () => { return jest.fn().mockImplementation(() => { return { customers: { create: mockCustomerCreate, update: mockCustomerUpdate }, paymentMethods: { attach: mockAttachPaymentMethod }, subscriptions: { create: mockSubCreate, retrieve: mockSubRetrieve }, checkout: { sessions: { create: mockCheckoutSessionCreate } } }; }); });\n\ndescribe('Donate', () => {\n  let setCookies: string[];\n  setupServer();\n  describe('Authenticated User', () => {\n    let superPost: ReturnType<typeof createSuperRequest>;\n    let superPut: ReturnType<typeof createSuperRequest>;\n    const verifyUpdatedUserAndNewDonation = async (email: string) => {\n      const user = await fastifyTestInstance.prisma.user.findFirst({\n        where: { email }\n      });\n      const donations = await fastifyTestInstance.prisma.donation.findMany({\n        where: { userId: user?.id }\n      });\n      const donation = donations[0];\n      expect(donations.length).toBe(1);\n      expect(donation?.amount).toBe(sharedDonationReqBody.amount);\n      expect(donation?.duration).toBe(sharedDonationReqBody.duration);\n      expect(typeof donation?.subscriptionId).toBe('string');\n      expect(donation?.customerId).toBe(testCustomerId);\n      expect(donation?.provider).toBe('stripe');\n    };\n    const verifyNoUpdatedUserAndNoNewDonation = async (email: string) => {\n      const user = await fastifyTestInstance.prisma.user.findFirst({\n        where: { email }\n      });\n      const donations = await fastifyTestInstance.prisma.donation.findMany({});\n      expect(user?.isDonating).toBe(false);\n      expect(donations.length).toBe(0);\n    };\n    const verifyNoNewUserAndNoNewDonation = async () => {\n      const user = await fastifyTestInstance.prisma.user.findFirst({\n        where: { email: testEWalletEmail }\n      });\n      const donations = await fastifyTestInstance.prisma.donation.findMany({});\n      expect(user).toBe(null);\n      expect(donations.length).toBe(0);\n    };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 3,
    "total_chunks": 15
  },
  {
    "id": "58cb7ae825ce26a97dfd7ac5fa76e35a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "}); const donations = await fastifyTestInstance.prisma.donation.findMany({ where: { userId: user?.id } }); const donation = donations[0]; expect(donations.length).toBe(1); expect(donation?.amount).toBe(sharedDonationReqBody.amount); expect(donation?.duration).toBe(sharedDonationReqBody.duration); expect(typeof donation?.subscriptionId).toBe('string'); expect(donation?.customerId).toBe(testCustomerId); expect(donation?.provider).toBe('stripe'); }; const verifyNoUpdatedUserAndNoNewDonation = async (email: string) => { const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email } }); const donations = await fastifyTestInstance.prisma.donation.findMany({}); expect(user?.isDonating).toBe(false); expect(donations.length).toBe(0); }; const verifyNoNewUserAndNoNewDonation = async () => { const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: testEWalletEmail } }); const donations = await fastifyTestInstance.prisma.donation.findMany({}); expect(user).toBe(null); expect(donations.length).toBe(0); };\n\nbeforeEach(async () => {\n      setCookies = await devLogin();\n      superPost = createSuperRequest({ method: 'POST', setCookies });\n      superPut = createSuperRequest({ method: 'PUT', setCookies });\n      await fastifyTestInstance.prisma.user.updateMany({\n        where: { email: userWithProgress.email },\n        data: userWithProgress\n      });\n      await fastifyTestInstance.prisma.user.deleteMany({\n        where: { email: testEWalletEmail }\n      });\n      await fastifyTestInstance.prisma.donation.deleteMany({});\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 4,
    "total_chunks": 15
  },
  {
    "id": "7d8105a71d0359bd3deb0b6c98bd1c47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "donations = await fastifyTestInstance.prisma.donation.findMany({}); expect(user?.isDonating).toBe(false); expect(donations.length).toBe(0); }; const verifyNoNewUserAndNoNewDonation = async () => { const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: testEWalletEmail } }); const donations = await fastifyTestInstance.prisma.donation.findMany({}); expect(user).toBe(null); expect(donations.length).toBe(0); }; beforeEach(async () => { setCookies = await devLogin(); superPost = createSuperRequest({ method: 'POST', setCookies }); superPut = createSuperRequest({ method: 'PUT', setCookies }); await fastifyTestInstance.prisma.user.updateMany({ where: { email: userWithProgress.email }, data: userWithProgress }); await fastifyTestInstance.prisma.user.deleteMany({ where: { email: testEWalletEmail } }); await fastifyTestInstance.prisma.donation.deleteMany({}); });\n\ndescribe('POST /donate/charge-stripe-card', () => {\n      it('should return 200 and update the user', async () => {\n        mockSubCreate.mockImplementationOnce(\n          generateMockSubCreate('we only care about specific error cases')\n        );\n        const response = await superPost('/donate/charge-stripe-card').send(\n          chargeStripeCardReqBody\n        );\n        await verifyUpdatedUserAndNewDonation(userWithProgress.email);\n        expect(response.body).toEqual({ isDonating: true, type: 'success' });\n        expect(response.status).toBe(200);\n      });\n\nit('should return 402 with client_secret if subscription status requires source action', async () => {\n        mockSubCreate.mockImplementationOnce(\n          generateMockSubCreate('requires_source_action')\n        );\n        const response = await superPost('/donate/charge-stripe-card').send(\n          chargeStripeCardReqBody\n        );\n        await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email);\n        expect(response.body).toEqual({\n          error: {\n            type: 'UserActionRequired',\n            message: 'Payment requires user action',\n            client_secret: 'superSecret'\n          }\n        });\n        expect(response.status).toBe(402);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 5,
    "total_chunks": 15
  },
  {
    "id": "d912648ee2e7af3368279377e625e5fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "update the user', async () => { mockSubCreate.mockImplementationOnce( generateMockSubCreate('we only care about specific error cases') ); const response = await superPost('/donate/charge-stripe-card').send( chargeStripeCardReqBody ); await verifyUpdatedUserAndNewDonation(userWithProgress.email); expect(response.body).toEqual({ isDonating: true, type: 'success' }); expect(response.status).toBe(200); }); it('should return 402 with client_secret if subscription status requires source action', async () => { mockSubCreate.mockImplementationOnce( generateMockSubCreate('requires_source_action') ); const response = await superPost('/donate/charge-stripe-card').send( chargeStripeCardReqBody ); await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email); expect(response.body).toEqual({ error: { type: 'UserActionRequired', message: 'Payment requires user action', client_secret: 'superSecret' } }); expect(response.status).toBe(402); });\n\nit('should return 402 if subscription status requires source', async () => {\n        mockSubCreate.mockImplementationOnce(\n          generateMockSubCreate('requires_source')\n        );\n        const response = await superPost('/donate/charge-stripe-card').send(\n          chargeStripeCardReqBody\n        );\n        await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email);\n        expect(response.body).toEqual({\n          error: {\n            type: 'PaymentMethodRequired',\n            message: 'Card has been declined'\n          }\n        });\n        expect(response.status).toBe(402);\n      });\n\nit('should return 400 if the user is already donating', async () => {\n        mockSubCreate.mockImplementationOnce(\n          generateMockSubCreate('still does not matter')\n        );\n        const successResponse = await superPost(\n          '/donate/charge-stripe-card'\n        ).send(chargeStripeCardReqBody);\n        const failResponse = await superPost('/donate/charge-stripe-card').send(\n          chargeStripeCardReqBody\n        );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 6,
    "total_chunks": 15
  },
  {
    "id": "de3637b89695fefce032a82646344ca6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "'superSecret' } }); expect(response.status).toBe(402); }); it('should return 402 if subscription status requires source', async () => { mockSubCreate.mockImplementationOnce( generateMockSubCreate('requires_source') ); const response = await superPost('/donate/charge-stripe-card').send( chargeStripeCardReqBody ); await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email); expect(response.body).toEqual({ error: { type: 'PaymentMethodRequired', message: 'Card has been declined' } }); expect(response.status).toBe(402); }); it('should return 400 if the user is already donating', async () => { mockSubCreate.mockImplementationOnce( generateMockSubCreate('still does not matter') ); const successResponse = await superPost( '/donate/charge-stripe-card' ).send(chargeStripeCardReqBody); const failResponse = await superPost('/donate/charge-stripe-card').send( chargeStripeCardReqBody );\n\n//Verify that only the first call changed the DB\n        await verifyUpdatedUserAndNewDonation(userWithProgress.email);\n        expect(successResponse.status).toBe(200);\n        expect(failResponse.body).toEqual({\n          error: {\n            type: 'AlreadyDonatingError',\n            message: 'User is already donating.'\n          }\n        });\n        expect(failResponse.status).toBe(400);\n      });\n\nit('should return 403 if the user has no email', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: userWithProgress.email },\n          data: { email: null }\n        });\n        const response = await superPost('/donate/charge-stripe-card').send(\n          chargeStripeCardReqBody\n        );\n        expect(response.body).toEqual({\n          error: {\n            type: 'EmailRequiredError',\n            message: 'User has not provided an email address'\n          }\n        });\n        expect(response.status).toBe(403);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 7,
    "total_chunks": 15
  },
  {
    "id": "56f214ac10097c5086f7b6c06d840670",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "//Verify that only the first call changed the DB await verifyUpdatedUserAndNewDonation(userWithProgress.email); expect(successResponse.status).toBe(200); expect(failResponse.body).toEqual({ error: { type: 'AlreadyDonatingError', message: 'User is already donating.' } }); expect(failResponse.status).toBe(400); }); it('should return 403 if the user has no email', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: userWithProgress.email }, data: { email: null } }); const response = await superPost('/donate/charge-stripe-card').send( chargeStripeCardReqBody ); expect(response.body).toEqual({ error: { type: 'EmailRequiredError', message: 'User has not provided an email address' } }); expect(response.status).toBe(403); });\n\nit('should return 500 if Stripe encountes an error', async () => {\n        mockSubCreate.mockImplementationOnce(defaultError);\n        const response = await superPost('/donate/charge-stripe-card').send(\n          chargeStripeCardReqBody\n        );\n        await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email);\n        expect(response.status).toBe(500);\n        expect(response.body).toEqual({\n          error: 'Donation failed due to a server error.'\n        });\n      });\n\nit('should return 400 if user has not completed challenges', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: userWithProgress.email },\n          data: userWithoutProgress\n        });\n        const failResponse = await superPost('/donate/charge-stripe-card').send(\n          chargeStripeCardReqBody\n        );\n        await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email);\n        expect(failResponse.body).toEqual({\n          error: {\n            type: 'MethodRestrictionError',\n            message: `Donate using another method`\n          }\n        });\n        expect(failResponse.status).toBe(400);\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 8,
    "total_chunks": 15
  },
  {
    "id": "efe78abbc2bef89dea6a55f83e9cd907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "encountes an error', async () => { mockSubCreate.mockImplementationOnce(defaultError); const response = await superPost('/donate/charge-stripe-card').send( chargeStripeCardReqBody ); await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email); expect(response.status).toBe(500); expect(response.body).toEqual({ error: 'Donation failed due to a server error.' }); }); it('should return 400 if user has not completed challenges', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: userWithProgress.email }, data: userWithoutProgress }); const failResponse = await superPost('/donate/charge-stripe-card').send( chargeStripeCardReqBody ); await verifyNoUpdatedUserAndNoNewDonation(userWithProgress.email); expect(failResponse.body).toEqual({ error: { type: 'MethodRestrictionError', message: `Donate using another method` } }); expect(failResponse.status).toBe(400); }); });\n\ndescribe('POST /donate/add-donation', () => {\n      it('should return 200 and update the user', async () => {\n        const response = await superPost('/donate/add-donation').send({\n          anything: true,\n          itIs: 'ignored'\n        });\n        const user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: userWithProgress.email }\n        });\n        expect(user?.isDonating).toBe(true);\n        expect(response.body).toEqual({\n          isDonating: true\n        });\n        expect(response.status).toBe(200);\n      });\n\nit('should return 400 if the user is already donating', async () => {\n        const successResponse = await superPost('/donate/add-donation').send(\n          {}\n        );\n        expect(successResponse.status).toBe(200);\n        const failResponse = await superPost('/donate/add-donation').send({});\n        expect(failResponse.status).toBe(400);\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 9,
    "total_chunks": 15
  },
  {
    "id": "21bc8d98e3d2880a908c388d809e7c5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "expect(failResponse.status).toBe(400); }); }); describe('POST /donate/add-donation', () => { it('should return 200 and update the user', async () => { const response = await superPost('/donate/add-donation').send({ anything: true, itIs: 'ignored' }); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: userWithProgress.email } }); expect(user?.isDonating).toBe(true); expect(response.body).toEqual({ isDonating: true }); expect(response.status).toBe(200); }); it('should return 400 if the user is already donating', async () => { const successResponse = await superPost('/donate/add-donation').send( {} ); expect(successResponse.status).toBe(200); const failResponse = await superPost('/donate/add-donation').send({}); expect(failResponse.status).toBe(400); }); });\n\ndescribe('PUT /donate/update-stripe-card', () => {\n      it('should return 200 and return session id', async () => {\n        await fastifyTestInstance.prisma.donation.create({\n          data: donationMock\n        });\n        const response = await superPut('/donate/update-stripe-card').send({});\n        expect(mockCheckoutSessionCreate).toHaveBeenCalledWith({\n          cancel_url: 'http://localhost:8000/update-stripe-card',\n          customer: 'cust_test_id',\n          mode: 'setup',\n          payment_method_types: ['card'],\n          setup_intent_data: {\n            metadata: {\n              customer_id: 'cust_test_id',\n              subscription_id: 'sub_test_id'\n            }\n          },\n          success_url:\n            'http://localhost:8000/update-stripe-card?session_id={CHECKOUT_SESSION_ID}'\n        });\n        expect(response.body).toEqual({ sessionId: 'checkout_session_id' });\n        expect(response.status).toBe(200);\n      });\n      it('should return 500 if there is no donation record', async () => {\n        const response = await superPut('/donate/update-stripe-card').send({});\n        expect(response.body).toEqual({\n          message: 'flash.generic-error',\n          type: 'danger'\n        });\n        expect(response.status).toBe(500);\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 10,
    "total_chunks": 15
  },
  {
    "id": "b26758afb200c9e05ed6abb76de67d9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "it('should return 200 and return session id', async () => { await fastifyTestInstance.prisma.donation.create({ data: donationMock }); const response = await superPut('/donate/update-stripe-card').send({}); expect(mockCheckoutSessionCreate).toHaveBeenCalledWith({ cancel_url: 'http://localhost:8000/update-stripe-card', customer: 'cust_test_id', mode: 'setup', payment_method_types: ['card'], setup_intent_data: { metadata: { customer_id: 'cust_test_id', subscription_id: 'sub_test_id' } }, success_url: 'http://localhost:8000/update-stripe-card?session_id={CHECKOUT_SESSION_ID}' }); expect(response.body).toEqual({ sessionId: 'checkout_session_id' }); expect(response.status).toBe(200); }); it('should return 500 if there is no donation record', async () => { const response = await superPut('/donate/update-stripe-card').send({}); expect(response.body).toEqual({ message: 'flash.generic-error', type: 'danger' }); expect(response.status).toBe(500); }); });\n\ndescribe('POST /donate/create-stripe-payment-intent', () => {\n      it('should return 200 and call stripe api properly', async () => {\n        mockSubCreate.mockImplementationOnce(\n          generateMockSubCreate('no-errors')\n        );\n        const response = await superPost(\n          '/donate/create-stripe-payment-intent'\n        ).send(createStripePaymentIntentReqBody);\n        expect(mockCustomerCreate).toHaveBeenCalledWith({\n          email: testEWalletEmail,\n          name: 'Baz Bar'\n        });\n        expect(response.status).toBe(200);\n      });\n\nit('should return 400 when email format is wrong', async () => {\n        const response = await superPost(\n          '/donate/create-stripe-payment-intent'\n        ).send({\n          ...createStripePaymentIntentReqBody,\n          email: '12raqdcev'\n        });\n        expect(response.body).toEqual({\n          error: 'The donation form had invalid values for this submission.'\n        });\n        expect(response.status).toBe(400);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 11,
    "total_chunks": 15
  },
  {
    "id": "4d3f28fedb5c53c2480ed364a4c2b9c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "expect(response.status).toBe(500); }); }); describe('POST /donate/create-stripe-payment-intent', () => { it('should return 200 and call stripe api properly', async () => { mockSubCreate.mockImplementationOnce( generateMockSubCreate('no-errors') ); const response = await superPost( '/donate/create-stripe-payment-intent' ).send(createStripePaymentIntentReqBody); expect(mockCustomerCreate).toHaveBeenCalledWith({ email: testEWalletEmail, name: 'Baz Bar' }); expect(response.status).toBe(200); }); it('should return 400 when email format is wrong', async () => { const response = await superPost( '/donate/create-stripe-payment-intent' ).send({ ...createStripePaymentIntentReqBody, email: '12raqdcev' }); expect(response.body).toEqual({ error: 'The donation form had invalid values for this submission.' }); expect(response.status).toBe(400); });\n\nit('should return 400 if amount is incorrect', async () => {\n        const response = await superPost(\n          '/donate/create-stripe-payment-intent'\n        ).send({\n          ...createStripePaymentIntentReqBody,\n          amount: '350'\n        });\n        expect(response.body).toEqual({\n          error: 'The donation form had invalid values for this submission.'\n        });\n        expect(response.status).toBe(400);\n      });\n\nit('should return 500 if Stripe encounters an error', async () => {\n        mockSubCreate.mockImplementationOnce(defaultError);\n        const response = await superPost(\n          '/donate/create-stripe-payment-intent'\n        ).send(createStripePaymentIntentReqBody);\n        expect(response.body).toEqual({\n          error: 'Donation failed due to a server error.'\n        });\n        expect(response.status).toBe(500);\n      });\n    });\n\ndescribe('POST /donate/charge-stripe', () => {\n      it('should return 200 and call stripe api properly', async () => {\n        mockSubCreate.mockImplementationOnce(\n          generateMockSubCreate('no-errors')\n        );\n        const response = await superPost('/donate/charge-stripe').send(\n          chargeStripeReqBody\n        );\n        await verifyUpdatedUserAndNewDonation(testEWalletEmail);\n        expect(mockSubRetrieve).toHaveBeenCalledWith('sub_test_id');\n        expect(response.status).toBe(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 12,
    "total_chunks": 15
  },
  {
    "id": "5cb6fd15c787276896d7aed23938fe59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "donation form had invalid values for this submission.' }); expect(response.status).toBe(400); }); it('should return 500 if Stripe encounters an error', async () => { mockSubCreate.mockImplementationOnce(defaultError); const response = await superPost( '/donate/create-stripe-payment-intent' ).send(createStripePaymentIntentReqBody); expect(response.body).toEqual({ error: 'Donation failed due to a server error.' }); expect(response.status).toBe(500); }); }); describe('POST /donate/charge-stripe', () => { it('should return 200 and call stripe api properly', async () => { mockSubCreate.mockImplementationOnce( generateMockSubCreate('no-errors') ); const response = await superPost('/donate/charge-stripe').send( chargeStripeReqBody ); await verifyUpdatedUserAndNewDonation(testEWalletEmail); expect(mockSubRetrieve).toHaveBeenCalledWith('sub_test_id'); expect(response.status).toBe(200); });\n\nit('should return 500 when if product id is wrong', async () => {\n        mockSubRetrieve.mockImplementationOnce(() =>\n          Promise.resolve({\n            ...mockSubRetrieveObj,\n            items: {\n              ...mockSubRetrieveObj.items,\n              data: [\n                {\n                  ...mockSubRetrieveObj.items.data[0],\n                  plan: {\n                    product: 'wrong_product_id'\n                  }\n                }\n              ]\n            }\n          })\n        );\n        const response = await superPost('/donate/charge-stripe').send(\n          chargeStripeReqBody\n        );\n        await verifyNoNewUserAndNoNewDonation();\n        expect(response.body).toEqual({\n          error: 'Donation failed due to a server error.'\n        });\n        expect(response.status).toBe(500);\n      });\n\nit('should return 500 if subsciption is not active', async () => {\n        mockSubRetrieve.mockImplementationOnce(() =>\n          Promise.resolve({\n            ...mockSubRetrieveObj,\n            status: 'canceled'\n          })\n        );\n        const response = await superPost('/donate/charge-stripe').send(\n          chargeStripeReqBody\n        );\n        await verifyNoNewUserAndNoNewDonation();\n        expect(response.body).toEqual({\n          error: 'Donation failed due to a server error.'\n        });\n        expect(response.status).toBe(500);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 13,
    "total_chunks": 15
  },
  {
    "id": "740096bff0c3c6cbb36aa840238ae6ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "data: [ { ...mockSubRetrieveObj.items.data[0], plan: { product: 'wrong_product_id' } } ] } }) ); const response = await superPost('/donate/charge-stripe').send( chargeStripeReqBody ); await verifyNoNewUserAndNoNewDonation(); expect(response.body).toEqual({ error: 'Donation failed due to a server error.' }); expect(response.status).toBe(500); }); it('should return 500 if subsciption is not active', async () => { mockSubRetrieve.mockImplementationOnce(() => Promise.resolve({ ...mockSubRetrieveObj, status: 'canceled' }) ); const response = await superPost('/donate/charge-stripe').send( chargeStripeReqBody ); await verifyNoNewUserAndNoNewDonation(); expect(response.body).toEqual({ error: 'Donation failed due to a server error.' }); expect(response.status).toBe(500); });\n\nit('should return 500 if timestamp is old', async () => {\n        mockSubRetrieve.mockImplementationOnce(() =>\n          Promise.resolve({\n            ...mockSubRetrieveObj,\n            current_period_start: Math.floor(Date.now() / 1000) - 500\n          })\n        );\n        const response = await superPost('/donate/charge-stripe').send(\n          chargeStripeReqBody\n        );\n        await verifyNoNewUserAndNoNewDonation();\n        expect(response.body).toEqual({\n          error: 'Donation failed due to a server error.'\n        });\n        expect(response.status).toBe(500);\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 16754,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 14,
    "total_chunks": 15
  },
  {
    "id": "9824278fd1e9e42b29a5d58e899e8167",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "// Yes, putting this above the imports is a hack to get around the fact that\n// jest.mock() must be called at the top level of the file.\nconst mockVerifyTrophyWithMicrosoft = jest.fn();\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { omit } from 'lodash';\nimport { Static } from '@fastify/type-provider-typebox';\nimport { DailyCodingChallengeLanguage } from '@prisma/client';\nimport request from 'supertest';\n\nimport { challengeTypes } from '../../../../shared/config/challenge-types';\nimport {\n  defaultUserId,\n  devLogin,\n  setupServer,\n  superRequest,\n  seedExam,\n  defaultUserEmail,\n  createSuperRequest,\n  defaultUsername\n} from '../../../jest.utils';\nimport {\n  completedExamChallengeOneCorrect,\n  completedExamChallengeTwoCorrect,\n  completedExamChallengeAllCorrect,\n  completedTrophyChallenges,\n  examChallengeId,\n  mockResultsZeroCorrect,\n  mockResultsTwoCorrect,\n  mockResultsAllCorrect,\n  examWithZeroCorrect,\n  examWithOneCorrect,\n  examWithTwoCorrect,\n  examWithAllCorrect,\n  type ExamSubmission\n} from '../../../__mocks__/exam';\nimport { Answer } from '../../utils/exam-types';\nimport type { getSessionUser } from '../../schemas/user/get-session-user';\n\nconst EXISTING_COMPLETED_DATE = new Date('2024-11-08').getTime();\nconst DATE_NOW = Date.now();\n\njest.mock('../helpers/challenge-helpers', () => {\n  const originalModule = jest.requireActual<\n    typeof import('../helpers/challenge-helpers')\n  >('../helpers/challenge-helpers');\n\nreturn {\n    __esModule: true,\n    ...originalModule,\n    verifyTrophyWithMicrosoft: mockVerifyTrophyWithMicrosoft\n  };\n});\n\nconst isValidChallengeCompletionErrorMsg = {\n  type: 'error',\n  message: 'That does not appear to be a valid challenge submission.'\n};\n\n// /project-completed\nconst id1 = 'bd7123c8c441eddfaeb5bdef';\nconst id2 = 'bd7123c8c441eddfaeb5bdec';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 50
  },
  {
    "id": "50a1b0c31713801f9627afbf87b476a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "examWithAllCorrect, type ExamSubmission } from '../../../__mocks__/exam'; import { Answer } from '../../utils/exam-types'; import type { getSessionUser } from '../../schemas/user/get-session-user'; const EXISTING_COMPLETED_DATE = new Date('2024-11-08').getTime(); const DATE_NOW = Date.now(); jest.mock('../helpers/challenge-helpers', () => { const originalModule = jest.requireActual< typeof import('../helpers/challenge-helpers') >('../helpers/challenge-helpers'); return { __esModule: true, ...originalModule, verifyTrophyWithMicrosoft: mockVerifyTrophyWithMicrosoft }; }); const isValidChallengeCompletionErrorMsg = { type: 'error', message: 'That does not appear to be a valid challenge submission.' }; // /project-completed const id1 = 'bd7123c8c441eddfaeb5bdef'; const id2 = 'bd7123c8c441eddfaeb5bdec';\n\nconst codeallyProject = {\n  id: id1,\n  challengeType: challengeTypes.codeAllyCert,\n  solution: 'https://any.valid/url'\n};\nconst backendProject = {\n  id: id2,\n  challengeType: challengeTypes.backEndProject,\n  solution: 'https://any.valid/url',\n  githubLink: 'https://github.com/anything/valid/'\n};\nconst partialCompletion = { id: id1, completedDate: 1 };\n\n// /backend-challenge-completed\nconst backendChallengeId1 = '587d7fb1367417b2b2512bf4';\nconst backendChallengeId2 = '587d7fb2367417b2b2512bf8';\n\nconst backendChallengeBody1 = {\n  id: backendChallengeId1\n};\nconst backendChallengeBody2 = {\n  id: backendChallengeId2\n};\n\n// /modern-challenge-completed\nconst HtmlChallengeId = '5dc174fcf86c76b9248c6eb2';\nconst JsProjectId = '56533eb9ac21ba0edf2244e2';\nconst multiFileCertProjectId = 'bd7158d8c242eddfaeb5bd13';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 50
  },
  {
    "id": "66757b5f03e539a201189bf22f23bbd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "'bd7123c8c441eddfaeb5bdef'; const id2 = 'bd7123c8c441eddfaeb5bdec'; const codeallyProject = { id: id1, challengeType: challengeTypes.codeAllyCert, solution: 'https://any.valid/url' }; const backendProject = { id: id2, challengeType: challengeTypes.backEndProject, solution: 'https://any.valid/url', githubLink: 'https://github.com/anything/valid/' }; const partialCompletion = { id: id1, completedDate: 1 }; // /backend-challenge-completed const backendChallengeId1 = '587d7fb1367417b2b2512bf4'; const backendChallengeId2 = '587d7fb2367417b2b2512bf8'; const backendChallengeBody1 = { id: backendChallengeId1 }; const backendChallengeBody2 = { id: backendChallengeId2 }; // /modern-challenge-completed const HtmlChallengeId = '5dc174fcf86c76b9248c6eb2'; const JsProjectId = '56533eb9ac21ba0edf2244e2'; const multiFileCertProjectId = 'bd7158d8c242eddfaeb5bd13';\n\nconst HtmlChallengeBody = {\n  challengeType: challengeTypes.html,\n  id: HtmlChallengeId\n};\nconst JsProjectBody = {\n  challengeType: challengeTypes.jsProject,\n  id: JsProjectId,\n  files: [\n    {\n      contents: 'console.log(\"Hello There!\")',\n      key: 'scriptjs',\n      ext: 'js',\n      name: 'script',\n      history: ['script.js']\n    }\n  ]\n};\nconst multiFileCertProjectBody = {\n  challengeType: challengeTypes.multifileCertProject,\n  id: multiFileCertProjectId,\n  files: [\n    {\n      contents: '<h1>Multi File Project v1</h1>',\n      key: 'indexhtml',\n      ext: 'html',\n      name: 'index',\n      history: ['index.html']\n    },\n    {\n      contents: '.hello-there { general: kenobi; }',\n      key: 'stylescss',\n      ext: 'css',\n      name: 'styles',\n      history: ['styles.css']\n    }\n  ]\n};\nconst updatedMultiFileCertProjectBody = {\n  challengeType: challengeTypes.multifileCertProject,\n  id: multiFileCertProjectId,\n  files: [\n    {\n      contents: '<h1>Multi File Project v2</h1>',\n      key: 'indexhtml',\n      ext: 'html',\n      name: 'index',\n      history: ['index.html']\n    },\n    {\n      contents: '.wibbly-wobbly { timey: wimey; }',\n      key: 'stylescss',\n      ext: 'css',\n      name: 'styles',\n      history: ['styles.css']\n    }\n  ]\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 2,
    "total_chunks": 50
  },
  {
    "id": "9d2c2a80c1b84469073e6f58e80a11ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "{ contents: '<h1>Multi File Project v1</h1>', key: 'indexhtml', ext: 'html', name: 'index', history: ['index.html'] }, { contents: '.hello-there { general: kenobi; }', key: 'stylescss', ext: 'css', name: 'styles', history: ['styles.css'] } ] }; const updatedMultiFileCertProjectBody = { challengeType: challengeTypes.multifileCertProject, id: multiFileCertProjectId, files: [ { contents: '<h1>Multi File Project v2</h1>', key: 'indexhtml', ext: 'html', name: 'index', history: ['index.html'] }, { contents: '.wibbly-wobbly { timey: wimey; }', key: 'stylescss', ext: 'css', name: 'styles', history: ['styles.css'] } ] };\n\nconst dailyCodingChallengeId = '5900f36e1000cf542c50fe80';\nconst dailyCodingChallengeBody = {\n  id: dailyCodingChallengeId,\n  language: DailyCodingChallengeLanguage.javascript\n};\n\ndescribe('challengeRoutes', () => {\n  setupServer();\n  describe('Authenticated user', () => {\n    let setCookies: string[];\n    let superPost: ReturnType<typeof createSuperRequest>;\n    let superGet: ReturnType<typeof createSuperRequest>;\n\n// Authenticate user\n    beforeAll(async () => {\n      setCookies = await devLogin();\n      superPost = createSuperRequest({ method: 'POST', setCookies });\n      superGet = createSuperRequest({ method: 'GET', setCookies });\n      await seedExam();\n    });\n\ndescribe('POST /coderoad-challenge-completed', () => {\n      test('should return 400 if no tutorialId', async () => {\n        const response = await superPost('/coderoad-challenge-completed');\n        expect(response.body).toEqual({\n          msg: `'tutorialId' not found in request body`,\n          type: 'error'\n        });\n        expect(response.status).toBe(400);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 3,
    "total_chunks": 50
  },
  {
    "id": "ff86f581cb19a9eca4dd8a2cb6db1158",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "user', () => { let setCookies: string[]; let superPost: ReturnType<typeof createSuperRequest>; let superGet: ReturnType<typeof createSuperRequest>; // Authenticate user beforeAll(async () => { setCookies = await devLogin(); superPost = createSuperRequest({ method: 'POST', setCookies }); superGet = createSuperRequest({ method: 'GET', setCookies }); await seedExam(); }); describe('POST /coderoad-challenge-completed', () => { test('should return 400 if no tutorialId', async () => { const response = await superPost('/coderoad-challenge-completed'); expect(response.body).toEqual({ msg: `'tutorialId' not found in request body`, type: 'error' }); expect(response.status).toBe(400); });\n\ntest('should return 400 if no user token', async () => {\n        const response = await superPost('/coderoad-challenge-completed').send({\n          tutorialId: 'freeCodeCamp/learn-bash-by-building-a-boilerplate:v1.0.0'\n        });\n        expect(response.body).toEqual({\n          msg: `'Coderoad-User-Token' not found in request headers`,\n          type: 'error'\n        });\n        expect(response.status).toBe(400);\n      });\n\ntest('should return 400 if invalid user token', async () => {\n        const response = await superPost('/coderoad-challenge-completed')\n          .set('coderoad-user-token', 'invalid')\n          .send({\n            tutorialId:\n              'freeCodeCamp/learn-bash-by-building-a-boilerplate:v1.0.0'\n          });\n        expect(response.body).toEqual({\n          msg: 'invalid user token',\n          type: 'error'\n        });\n        expect(response.status).toBe(400);\n      });\n\ntest('should return 400 if invalid tutorialId', async () => {\n        const tokenResponse = await superPost('/user/user-token');\n        expect(tokenResponse.body).toHaveProperty('userToken');\n        expect(tokenResponse.status).toBe(200);\n\nconst token = (tokenResponse.body as { userToken: string }).userToken;\n\nconst response = await superPost('/coderoad-challenge-completed')\n          .set('coderoad-user-token', token)\n          .send({ tutorialId: 'invalid' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 4,
    "total_chunks": 50
  },
  {
    "id": "daf0241b118428161488f08109bcd3b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "request headers`, type: 'error' }); expect(response.status).toBe(400); }); test('should return 400 if invalid user token', async () => { const response = await superPost('/coderoad-challenge-completed') .set('coderoad-user-token', 'invalid') .send({ tutorialId: 'freeCodeCamp/learn-bash-by-building-a-boilerplate:v1.0.0' }); expect(response.body).toEqual({ msg: 'invalid user token', type: 'error' }); expect(response.status).toBe(400); }); test('should return 400 if invalid tutorialId', async () => { const tokenResponse = await superPost('/user/user-token'); expect(tokenResponse.body).toHaveProperty('userToken'); expect(tokenResponse.status).toBe(200); const token = (tokenResponse.body as { userToken: string }).userToken; const response = await superPost('/coderoad-challenge-completed') .set('coderoad-user-token', token) .send({ tutorialId: 'invalid' });\n\nexpect(response.body).toEqual({\n          msg: 'Tutorial not hosted on freeCodeCamp GitHub account',\n          type: 'error'\n        });\n        expect(response.status).toBe(400);\n      });\n\ntest('should return 400 if invalid tutorialId but is hosted on freeCodeCamp', async () => {\n        const tokenResponse = await superPost('/user/user-token');\n        expect(tokenResponse.body).toHaveProperty('userToken');\n        expect(tokenResponse.status).toBe(200);\n\nconst token = (tokenResponse.body as { userToken: string }).userToken;\n\nconst response = await superPost('/coderoad-challenge-completed')\n          .set('coderoad-user-token', token)\n          .send({ tutorialId: 'freeCodeCamp/invalid:V1.0.0' });\n\nexpect(response.body).toEqual({\n          msg: 'Tutorial name is not valid',\n          type: 'error'\n        });\n        expect(response.status).toBe(400);\n      });\n\ntest('Should complete challenge with code 200', async () => {\n        const tokenResponse = await superPost('/user/user-token');\n        expect(tokenResponse.body).toHaveProperty('userToken');\n        expect(tokenResponse.status).toBe(200);\n\nconst token = (tokenResponse.body as { userToken: string }).userToken;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 5,
    "total_chunks": 50
  },
  {
    "id": "6e8688ed28c8f7cdff5da29c5e1d4a6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "invalid tutorialId but is hosted on freeCodeCamp', async () => { const tokenResponse = await superPost('/user/user-token'); expect(tokenResponse.body).toHaveProperty('userToken'); expect(tokenResponse.status).toBe(200); const token = (tokenResponse.body as { userToken: string }).userToken; const response = await superPost('/coderoad-challenge-completed') .set('coderoad-user-token', token) .send({ tutorialId: 'freeCodeCamp/invalid:V1.0.0' }); expect(response.body).toEqual({ msg: 'Tutorial name is not valid', type: 'error' }); expect(response.status).toBe(400); }); test('Should complete challenge with code 200', async () => { const tokenResponse = await superPost('/user/user-token'); expect(tokenResponse.body).toHaveProperty('userToken'); expect(tokenResponse.status).toBe(200); const token = (tokenResponse.body as { userToken: string }).userToken;\n\n// This route is special since it does not have CSRF protection OR authN\n        // protection. As such, we use a normal `request` to send the bare\n        // minimum (no extra headers or cookies).\n        const response = await request(fastifyTestInstance.server)\n          .post('/coderoad-challenge-completed')\n          .set('coderoad-user-token', token)\n          .send({\n            tutorialId:\n              'freeCodeCamp/learn-bash-by-building-a-boilerplate:v1.0.0'\n          });\n\nexpect(response.body).toEqual({\n          msg: 'Successfully submitted challenge',\n          type: 'success'\n        });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: 'foo@bar.com' }\n        });\n\nconst challengeCompleted = user?.completedChallenges.some(challenge => {\n          return challenge.id === '5ea8adfab628f68d805bfc5e';\n        });\n\nexpect(challengeCompleted).toBe(true);\n        expect(response.status).toBe(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 6,
    "total_chunks": 50
  },
  {
    "id": "e618ec990495fd55f2d714f0b0ffecac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "is special since it does not have CSRF protection OR authN // protection. As such, we use a normal `request` to send the bare // minimum (no extra headers or cookies). const response = await request(fastifyTestInstance.server) .post('/coderoad-challenge-completed') .set('coderoad-user-token', token) .send({ tutorialId: 'freeCodeCamp/learn-bash-by-building-a-boilerplate:v1.0.0' }); expect(response.body).toEqual({ msg: 'Successfully submitted challenge', type: 'success' }); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); const challengeCompleted = user?.completedChallenges.some(challenge => { return challenge.id === '5ea8adfab628f68d805bfc5e'; }); expect(challengeCompleted).toBe(true); expect(response.status).toBe(200); });\n\ntest('Should return an error response if something goes wrong', async () => {\n        jest\n          .spyOn(fastifyTestInstance.prisma.userToken, 'findUnique')\n          .mockImplementationOnce(() => {\n            throw new Error('Database error');\n          });\n        const tokenResponse = await superPost('/user/user-token');\n        const token = (tokenResponse.body as { userToken: string }).userToken;\n\nconst response = await superPost('/coderoad-challenge-completed')\n          .set('coderoad-user-token', token)\n          .send({\n            tutorialId: 'freeCodeCamp/learn-celestial-bodies-database:v1.0.0'\n          });\n\nexpect(response.body).toEqual({\n          msg: 'An error occurred trying to submit the challenge',\n          type: 'error'\n        });\n        expect(response.status).toBe(500);\n      });\n\ntest('Should complete project with code 200', async () => {\n        const tokenResponse = await superPost('/user/user-token');\n        expect(tokenResponse.body).toHaveProperty('userToken');\n        expect(tokenResponse.status).toBe(200);\n\nconst token = (tokenResponse.body as { userToken: string }).userToken;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 7,
    "total_chunks": 50
  },
  {
    "id": "1dcad5feca21607eaa47b45f4d14f85e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": ".spyOn(fastifyTestInstance.prisma.userToken, 'findUnique') .mockImplementationOnce(() => { throw new Error('Database error'); }); const tokenResponse = await superPost('/user/user-token'); const token = (tokenResponse.body as { userToken: string }).userToken; const response = await superPost('/coderoad-challenge-completed') .set('coderoad-user-token', token) .send({ tutorialId: 'freeCodeCamp/learn-celestial-bodies-database:v1.0.0' }); expect(response.body).toEqual({ msg: 'An error occurred trying to submit the challenge', type: 'error' }); expect(response.status).toBe(500); }); test('Should complete project with code 200', async () => { const tokenResponse = await superPost('/user/user-token'); expect(tokenResponse.body).toHaveProperty('userToken'); expect(tokenResponse.status).toBe(200); const token = (tokenResponse.body as { userToken: string }).userToken;\n\nconst response = await superPost('/coderoad-challenge-completed')\n          .set('coderoad-user-token', token)\n          .send({\n            tutorialId: 'freeCodeCamp/learn-celestial-bodies-database:v1.0.0'\n          });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: 'foo@bar.com' }\n        });\n\nconst projectCompleted = user?.partiallyCompletedChallenges.some(\n          project => {\n            return project.id === '5f1a4ef5d5d6b5ab580fc6ae';\n          }\n        );\n\nexpect(projectCompleted).toBe(true);\n        expect(response.status).toBe(200);\n      });\n\nafterAll(async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: 'foo@bar.com' },\n          data: {\n            completedChallenges: [],\n            progressTimestamps: []\n          }\n        });\n      });\n    });\n    describe('/project-completed', () => {\n      describe('validation', () => {\n        it('POST rejects requests without ids', async () => {\n          const response = await superPost('/project-completed').send({});\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 8,
    "total_chunks": 50
  },
  {
    "id": "dbfa729aa5ec8140e7a4e56f8e31d738",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "}); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); const projectCompleted = user?.partiallyCompletedChallenges.some( project => { return project.id === '5f1a4ef5d5d6b5ab580fc6ae'; } ); expect(projectCompleted).toBe(true); expect(response.status).toBe(200); }); afterAll(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: 'foo@bar.com' }, data: { completedChallenges: [], progressTimestamps: [] } }); }); }); describe('/project-completed', () => { describe('validation', () => { it('POST rejects requests without ids', async () => { const response = await superPost('/project-completed').send({}); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); });\n\nit('POST rejects requests without valid ObjectIDs', async () => {\n          const response = await superPost(\n            '/project-completed'\n            // This is a departure from api-server, which does not require a\n            // solution to give this error. However, the validator will reject\n            // based on the missing solution before it gets to the invalid id.\n          ).send({ id: 'not-a-valid-id', solution: '' });\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n\nit('POST rejects requests with invalid challengeTypes', async () => {\n          const response = await superPost('/project-completed').send({\n            id: id1,\n            challengeType: 'not-a-valid-challenge-type',\n            // TODO(Post-MVP): drop these comments, since the api-server will not\n            // exist.\n\n// a solution is required, because otherwise the request will be\n            // rejected before it gets to the challengeType validation. NOTE: this\n            // is a departure from the api-server, but only in the message sent.\n            solution: ''\n          });\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n\nit('POST rejects requests without solutions', async () => {\n          const response = await superPost('/project-completed').send({\n            id: id1,\n            challengeType: 3\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 9,
    "total_chunks": 50
  },
  {
    "id": "f28d4e53006a1ac2b82b4b9c08a3c911",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "challengeType: 'not-a-valid-challenge-type', // TODO(Post-MVP): drop these comments, since the api-server will not // exist. // a solution is required, because otherwise the request will be // rejected before it gets to the challengeType validation. NOTE: this // is a departure from the api-server, but only in the message sent. solution: '' }); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); }); it('POST rejects requests without solutions', async () => { const response = await superPost('/project-completed').send({ id: id1, challengeType: 3 });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message:\n              'You have not provided the valid links for us to inspect your work.'\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\nit('POST rejects requests with solutions that are not urls', async () => {\n          const response = await superPost('/project-completed').send({\n            id: id1,\n            challengeType: 3,\n            solution: 'not-a-valid-solution'\n          });\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(403);\n        });\n\nit('POST rejects backendProject requests without URL githubLinks', async () => {\n          const response = await superPost('/project-completed').send({\n            id: id1,\n            challengeType: challengeTypes.backEndProject,\n            // Solution is allowed to be localhost for backEndProject\n            solution: 'http://localhost:3000'\n          });\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(403);\n\nconst response_2 = await superPost('/project-completed').send({\n            id: id1,\n            challengeType: challengeTypes.backEndProject,\n            solution: 'http://localhost:3000',\n            githubLink: 'not-a-valid-url'\n          });\n\nexpect(response_2.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response_2.statusCode).toBe(403);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 10,
    "total_chunks": 50
  },
  {
    "id": "fcc6497741c8e6b9732efa74702151d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "async () => { const response = await superPost('/project-completed').send({ id: id1, challengeType: 3, solution: 'not-a-valid-solution' }); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(403); }); it('POST rejects backendProject requests without URL githubLinks', async () => { const response = await superPost('/project-completed').send({ id: id1, challengeType: challengeTypes.backEndProject, // Solution is allowed to be localhost for backEndProject solution: 'http://localhost:3000' }); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(403); const response_2 = await superPost('/project-completed').send({ id: id1, challengeType: challengeTypes.backEndProject, solution: 'http://localhost:3000', githubLink: 'not-a-valid-url' }); expect(response_2.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response_2.statusCode).toBe(403); });\n\nit('POST rejects CodeRoad/CodeAlly projects when the user has not completed the required challenges', async () => {\n          const response = await superPost('/project-completed').send({\n            id: id1, // not a codeally challenge id, but does not matter\n            challengeType: 13, // this does matter, however, since there's special logic for that challenge type\n            solution: 'https://any.valid/url'\n          });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message:\n              'You have to complete the project before you can submit a URL.'\n          });\n          // It's not really a bad request, since the client is sending a valid\n          // body. It's just that the user is not allowed to do this - hence 403.\n          expect(response.statusCode).toBe(403);\n        });\n      });\n\ndescribe('handling', () => {\n        beforeEach(async () => {\n          // setup: complete the challenges that codeally projects require\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              partiallyCompletedChallenges: [{ id: id1, completedDate: 1 }]\n            }\n          });\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 11,
    "total_chunks": 50
  },
  {
    "id": "225af8f66e5204d51156eef3e9cff0b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "before you can submit a URL.' }); // It's not really a bad request, since the client is sending a valid // body. It's just that the user is not allowed to do this - hence 403. expect(response.statusCode).toBe(403); }); }); describe('handling', () => { beforeEach(async () => { // setup: complete the challenges that codeally projects require await fastifyTestInstance.prisma.user.updateMany({ where: { email: 'foo@bar.com' }, data: { partiallyCompletedChallenges: [{ id: id1, completedDate: 1 }] } }); });\n\nafterEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              partiallyCompletedChallenges: [],\n              completedChallenges: [],\n              savedChallenges: [],\n              progressTimestamps: []\n            }\n          });\n        });\n\nit('POST accepts CodeRoad/CodeAlly projects when the user has completed the required challenges', async () => {\n          const now = Date.now();\n          const response =\n            await superPost('/project-completed').send(codeallyProject);\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n            where: { email: 'foo@bar.com' }\n          });\n\nexpect(user).toMatchObject({\n            partiallyCompletedChallenges: [],\n            completedChallenges: [\n              {\n                ...codeallyProject,\n                completedDate: expect.any(Number)\n              }\n            ]\n          });\n\nconst completedDate = user?.completedChallenges[0]?.completedDate;\n\n// TODO: use a custom matcher for this\n          expect(completedDate).toBeGreaterThan(now);\n          expect(completedDate).toBeLessThan(now + 1000);\n\nexpect(response.body).toStrictEqual({\n            alreadyCompleted: false,\n            points: 1,\n            completedDate\n          });\n\nexpect(response.statusCode).toBe(200);\n        });\n\nit('POST accepts backend projects', async () => {\n          const now = Date.now();\n\nconst response =\n            await superPost('/project-completed').send(backendProject);\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n            where: { email: 'foo@bar.com' }\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 12,
    "total_chunks": 50
  },
  {
    "id": "3164296e9fd788588d3b97d514b0f5b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); expect(user).toMatchObject({ partiallyCompletedChallenges: [], completedChallenges: [ { ...codeallyProject, completedDate: expect.any(Number) } ] }); const completedDate = user?.completedChallenges[0]?.completedDate; // TODO: use a custom matcher for this expect(completedDate).toBeGreaterThan(now); expect(completedDate).toBeLessThan(now + 1000); expect(response.body).toStrictEqual({ alreadyCompleted: false, points: 1, completedDate }); expect(response.statusCode).toBe(200); }); it('POST accepts backend projects', async () => { const now = Date.now(); const response = await superPost('/project-completed').send(backendProject); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } });\n\nexpect(user).toMatchObject({\n            partiallyCompletedChallenges: [partialCompletion],\n            completedChallenges: [\n              {\n                ...backendProject,\n                completedDate: expect.any(Number)\n              }\n            ]\n          });\n\nconst completedDate = user?.completedChallenges[0]?.completedDate;\n\n// TODO: use a custom matcher for this\n          expect(completedDate).toBeGreaterThan(now);\n          expect(completedDate).toBeLessThan(now + 1000);\n\nexpect(response.body).toStrictEqual({\n            alreadyCompleted: false,\n            points: 1,\n            completedDate\n          });\n\nexpect(response.statusCode).toBe(200);\n        });\n\nit('POST correctly handles multiple requests', async () => {\n          const resOriginal =\n            await superPost('/project-completed').send(codeallyProject);\n\nconst resBackend =\n            await superPost('/project-completed').send(backendProject);\n\n// sending backendProject again should update its solution, but not\n          // progressTimestamps or its completedDate\n\nconst resUpdate = await superPost('/project-completed').send({\n            ...codeallyProject,\n            solution: 'https://any.other/url'\n          });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n            where: { email: 'foo@bar.com' }\n          });\n\nconst expectedProgressTimestamps = user?.completedChallenges.map(\n            challenge => challenge.completedDate\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 13,
    "total_chunks": 50
  },
  {
    "id": "395e31e2826772caba51d71e82ac929c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "this expect(completedDate).toBeGreaterThan(now); expect(completedDate).toBeLessThan(now + 1000); expect(response.body).toStrictEqual({ alreadyCompleted: false, points: 1, completedDate }); expect(response.statusCode).toBe(200); }); it('POST correctly handles multiple requests', async () => { const resOriginal = await superPost('/project-completed').send(codeallyProject); const resBackend = await superPost('/project-completed').send(backendProject); // sending backendProject again should update its solution, but not // progressTimestamps or its completedDate const resUpdate = await superPost('/project-completed').send({ ...codeallyProject, solution: 'https://any.other/url' }); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); const expectedProgressTimestamps = user?.completedChallenges.map( challenge => challenge.completedDate );\n\nexpect(user).toMatchObject({\n            completedChallenges: [\n              {\n                ...codeallyProject,\n                solution: 'https://any.other/url',\n                completedDate: resOriginal.body.completedDate\n              },\n              {\n                ...backendProject,\n                completedDate: resBackend.body.completedDate\n              }\n            ],\n            progressTimestamps: expectedProgressTimestamps\n          });\n\nexpect(resUpdate.body).toStrictEqual({\n            alreadyCompleted: true,\n            points: 2,\n            completedDate: expect.any(Number)\n          });\n\n// If a challenge has already been completed, it should return the\n          // original completedDate\n          expect(resUpdate.body.completedDate).toBe(\n            resOriginal.body.completedDate\n          );\n          expect(resUpdate.statusCode).toBe(200);\n        });\n      });\n    });\n\ndescribe('/backend-challenge-completed', () => {\n      describe('validation', () => {\n        test('POST rejects requests without ids', async () => {\n          const response = await superPost('/backend-challenge-completed');\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests without valid ObjectIDs', async () => {\n          const response = await superPost('/backend-challenge-completed').send(\n            { id: 'not-a-valid-id', solution: '' }\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 14,
    "total_chunks": 50
  },
  {
    "id": "79b758dbd42170d47ab4443faa9e460b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "points: 2, completedDate: expect.any(Number) }); // If a challenge has already been completed, it should return the // original completedDate expect(resUpdate.body.completedDate).toBe( resOriginal.body.completedDate ); expect(resUpdate.statusCode).toBe(200); }); }); }); describe('/backend-challenge-completed', () => { describe('validation', () => { test('POST rejects requests without ids', async () => { const response = await superPost('/backend-challenge-completed'); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); }); test('POST rejects requests without valid ObjectIDs', async () => { const response = await superPost('/backend-challenge-completed').send( { id: 'not-a-valid-id', solution: '' } );\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n      });\n\ndescribe('handling', () => {\n        afterEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              completedChallenges: [],\n              progressTimestamps: []\n            }\n          });\n        });\n\ntest('POST accepts backend challenges', async () => {\n          const now = Date.now();\n\nconst response = await superPost('/backend-challenge-completed').send(\n            backendChallengeBody1\n          );\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n            where: { email: 'foo@bar.com' }\n          });\n\nexpect(user).toMatchObject({\n            completedChallenges: [\n              {\n                ...backendChallengeBody1,\n                completedDate: expect.any(Number)\n              }\n            ]\n          });\n\nconst completedDate = user?.completedChallenges[0]?.completedDate;\n          expect(completedDate).toBeGreaterThanOrEqual(now);\n          expect(completedDate).toBeLessThanOrEqual(now + 1000);\n\nexpect(response.body).toStrictEqual({\n            alreadyCompleted: false,\n            points: 1,\n            completedDate\n          });\n          expect(response.statusCode).toBe(200);\n        });\n\ntest('POST correctly handles multiple requests', async () => {\n          const resOriginal = await superPost(\n            '/backend-challenge-completed'\n          ).send(backendChallengeBody1);\n\nawait superPost('/backend-challenge-completed').send(\n            backendChallengeBody2\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 15,
    "total_chunks": 50
  },
  {
    "id": "db858aebeeb80eb1969d9a7ac6fe4623",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "accepts backend challenges', async () => { const now = Date.now(); const response = await superPost('/backend-challenge-completed').send( backendChallengeBody1 ); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); expect(user).toMatchObject({ completedChallenges: [ { ...backendChallengeBody1, completedDate: expect.any(Number) } ] }); const completedDate = user?.completedChallenges[0]?.completedDate; expect(completedDate).toBeGreaterThanOrEqual(now); expect(completedDate).toBeLessThanOrEqual(now + 1000); expect(response.body).toStrictEqual({ alreadyCompleted: false, points: 1, completedDate }); expect(response.statusCode).toBe(200); }); test('POST correctly handles multiple requests', async () => { const resOriginal = await superPost( '/backend-challenge-completed' ).send(backendChallengeBody1); await superPost('/backend-challenge-completed').send( backendChallengeBody2 );\n\nconst resUpdated = await superPost(\n            '/backend-challenge-completed'\n          ).send({\n            ...backendChallengeBody1\n          });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n            where: { email: 'foo@bar.com' }\n          });\n\nconst expectedProgressTimestamps = user?.completedChallenges.map(\n            challenge => challenge.completedDate\n          );\n\nexpect(user).toMatchObject({\n            completedChallenges: [\n              {\n                ...backendChallengeBody1,\n                completedDate: expect.any(Number)\n              },\n              {\n                ...backendChallengeBody2,\n                completedDate: expect.any(Number)\n              }\n            ],\n            progressTimestamps: expectedProgressTimestamps\n          });\n\nexpect(resUpdated.body.completedDate).not.toBe(\n            resOriginal.body.completedDate\n          );\n          expect(resUpdated.body).toStrictEqual({\n            alreadyCompleted: true,\n            points: 2,\n            completedDate: expect.any(Number)\n          });\n          expect(resUpdated.statusCode).toBe(200);\n        });\n      });\n    });\n\ndescribe('/modern-challenge-completed', () => {\n      describe('validation', () => {\n        test('POST rejects requests without ids', async () => {\n          const response = await superPost('/modern-challenge-completed');\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 16,
    "total_chunks": 50
  },
  {
    "id": "a9d8b8d1fac57a67cecfa6c143b94926",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "= await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); const expectedProgressTimestamps = user?.completedChallenges.map( challenge => challenge.completedDate ); expect(user).toMatchObject({ completedChallenges: [ { ...backendChallengeBody1, completedDate: expect.any(Number) }, { ...backendChallengeBody2, completedDate: expect.any(Number) } ], progressTimestamps: expectedProgressTimestamps }); expect(resUpdated.body.completedDate).not.toBe( resOriginal.body.completedDate ); expect(resUpdated.body).toStrictEqual({ alreadyCompleted: true, points: 2, completedDate: expect.any(Number) }); expect(resUpdated.statusCode).toBe(200); }); }); }); describe('/modern-challenge-completed', () => { describe('validation', () => { test('POST rejects requests without ids', async () => { const response = await superPost('/modern-challenge-completed'); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); });\n\ntest('POST rejects requests without valid ObjectIDs', async () => {\n          const response = await superPost('/modern-challenge-completed').send({\n            id: 'not-a-valid-id'\n          });\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n      });\n\ndescribe('handling', () => {\n        afterEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              completedChallenges: [],\n              savedChallenges: [],\n              progressTimestamps: []\n            }\n          });\n        });\n\n// HTML(0), JS(1), Modern(6), Video(11), The Odin Project(15)\n        test('POST accepts challenges without files present', async () => {\n          const now = Date.now();\n\nconst response = await superPost('/modern-challenge-completed').send(\n            HtmlChallengeBody\n          );\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nexpect(user).toMatchObject({\n            completedChallenges: [\n              {\n                id: HtmlChallengeId,\n                completedDate: expect.any(Number)\n              }\n            ]\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 17,
    "total_chunks": 50
  },
  {
    "id": "9914e6b95f161c964210389718a24576",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "() => { afterEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: 'foo@bar.com' }, data: { completedChallenges: [], savedChallenges: [], progressTimestamps: [] } }); }); // HTML(0), JS(1), Modern(6), Video(11), The Odin Project(15) test('POST accepts challenges without files present', async () => { const now = Date.now(); const response = await superPost('/modern-challenge-completed').send( HtmlChallengeBody ); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); expect(user).toMatchObject({ completedChallenges: [ { id: HtmlChallengeId, completedDate: expect.any(Number) } ] });\n\nconst completedDate = user.completedChallenges[0]?.completedDate;\n          expect(completedDate).toBeGreaterThanOrEqual(now);\n          expect(completedDate).toBeLessThanOrEqual(now + 1000);\n\nexpect(response.statusCode).toBe(200);\n          expect(response.body).toStrictEqual({\n            alreadyCompleted: false,\n            points: 1,\n            completedDate,\n            savedChallenges: []\n          });\n        });\n\n// JS Project(5), Multi-file Cert Project(14)\n        test('POST accepts challenges with files present', async () => {\n          const now = Date.now();\n\nconst response = await superPost('/modern-challenge-completed').send(\n            JsProjectBody\n          );\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nconst file = omit(JsProjectBody.files[0], 'history');\n\nexpect(user).toMatchObject({\n            completedChallenges: [\n              {\n                id: JsProjectId,\n                challengeType: JsProjectBody.challengeType,\n                files: [file],\n                completedDate: expect.any(Number)\n              }\n            ]\n          });\n\nconst completedDate = user.completedChallenges[0]?.completedDate;\n          expect(completedDate).toBeGreaterThanOrEqual(now);\n          expect(completedDate).toBeLessThanOrEqual(now + 1000);\n\nexpect(response.body).toStrictEqual({\n            alreadyCompleted: false,\n            points: 1,\n            completedDate,\n            savedChallenges: []\n          });\n          expect(response.statusCode).toBe(200);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 18,
    "total_chunks": 50
  },
  {
    "id": "1927549facd36d35753c8b7cefb41691",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "JS Project(5), Multi-file Cert Project(14) test('POST accepts challenges with files present', async () => { const now = Date.now(); const response = await superPost('/modern-challenge-completed').send( JsProjectBody ); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); const file = omit(JsProjectBody.files[0], 'history'); expect(user).toMatchObject({ completedChallenges: [ { id: JsProjectId, challengeType: JsProjectBody.challengeType, files: [file], completedDate: expect.any(Number) } ] }); const completedDate = user.completedChallenges[0]?.completedDate; expect(completedDate).toBeGreaterThanOrEqual(now); expect(completedDate).toBeLessThanOrEqual(now + 1000); expect(response.body).toStrictEqual({ alreadyCompleted: false, points: 1, completedDate, savedChallenges: [] }); expect(response.statusCode).toBe(200); });\n\ntest('POST accepts challenges with saved solutions', async () => {\n          const now = Date.now();\n\nconst response = await superPost('/modern-challenge-completed').send(\n            multiFileCertProjectBody\n          );\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nconst testFiles = multiFileCertProjectBody.files.map(\n            ({ history: _history, ...rest }) => rest\n          );\n\nexpect(user).toMatchObject({\n            needsModeration: true,\n            completedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                challengeType: multiFileCertProjectBody.challengeType,\n                files: testFiles,\n                completedDate: expect.any(Number),\n                isManuallyApproved: false\n              }\n            ],\n            savedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                lastSavedDate: expect.any(Number),\n                files: multiFileCertProjectBody.files\n              }\n            ]\n          });\n\nconst completedDate = user.completedChallenges[0]?.completedDate;\n          expect(completedDate).toBeGreaterThanOrEqual(now);\n          expect(completedDate).toBeLessThanOrEqual(now + 1000);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 19,
    "total_chunks": 50
  },
  {
    "id": "cb0248cb8353bee6fdf225bf7ed1f7a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "async () => { const now = Date.now(); const response = await superPost('/modern-challenge-completed').send( multiFileCertProjectBody ); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); const testFiles = multiFileCertProjectBody.files.map( ({ history: _history, ...rest }) => rest ); expect(user).toMatchObject({ needsModeration: true, completedChallenges: [ { id: multiFileCertProjectId, challengeType: multiFileCertProjectBody.challengeType, files: testFiles, completedDate: expect.any(Number), isManuallyApproved: false } ], savedChallenges: [ { id: multiFileCertProjectId, lastSavedDate: expect.any(Number), files: multiFileCertProjectBody.files } ] }); const completedDate = user.completedChallenges[0]?.completedDate; expect(completedDate).toBeGreaterThanOrEqual(now); expect(completedDate).toBeLessThanOrEqual(now + 1000);\n\nexpect(response.body).toStrictEqual({\n            alreadyCompleted: false,\n            points: 1,\n            completedDate,\n            savedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                lastSavedDate: completedDate,\n                files: multiFileCertProjectBody.files\n              }\n            ]\n          });\n          expect(response.statusCode).toBe(200);\n        });\n\ntest('POST correctly handles multiple requests', async () => {\n          const resOriginal = await superPost(\n            '/modern-challenge-completed'\n          ).send(multiFileCertProjectBody);\n\nawait superPost('/modern-challenge-completed').send(\n            HtmlChallengeBody\n          );\n\nconst resUpdate = await superPost('/modern-challenge-completed').send(\n            updatedMultiFileCertProjectBody\n          );\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nconst expectedProgressTimestamps = user.completedChallenges.map(\n            challenge => challenge.completedDate\n          );\n\nconst testFiles = updatedMultiFileCertProjectBody.files.map(file =>\n            omit(file, 'history')\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 20,
    "total_chunks": 50
  },
  {
    "id": "e7c96f055207ee644d4c446c5b08c2fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "+ 1000); expect(response.body).toStrictEqual({ alreadyCompleted: false, points: 1, completedDate, savedChallenges: [ { id: multiFileCertProjectId, lastSavedDate: completedDate, files: multiFileCertProjectBody.files } ] }); expect(response.statusCode).toBe(200); }); test('POST correctly handles multiple requests', async () => { const resOriginal = await superPost( '/modern-challenge-completed' ).send(multiFileCertProjectBody); await superPost('/modern-challenge-completed').send( HtmlChallengeBody ); const resUpdate = await superPost('/modern-challenge-completed').send( updatedMultiFileCertProjectBody ); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); const expectedProgressTimestamps = user.completedChallenges.map( challenge => challenge.completedDate ); const testFiles = updatedMultiFileCertProjectBody.files.map(file => omit(file, 'history') );\n\nexpect(user).toMatchObject({\n            needsModeration: true,\n            completedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                challengeType: updatedMultiFileCertProjectBody.challengeType,\n                files: testFiles,\n                completedDate: expect.any(Number),\n                isManuallyApproved: false\n              },\n              {\n                id: HtmlChallengeId,\n                completedDate: expect.any(Number)\n              }\n            ],\n            savedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                lastSavedDate: expect.any(Number),\n                files: updatedMultiFileCertProjectBody.files\n              }\n            ],\n            progressTimestamps: expectedProgressTimestamps\n          });\n\nexpect(\n            resUpdate.body.savedChallenges[0].lastSavedDate\n          ).toBeGreaterThan(\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            resOriginal.body.savedChallenges[0].lastSavedDate\n          );\n\nexpect(resUpdate.body).toStrictEqual({\n            alreadyCompleted: true,\n            points: 2,\n            completedDate: expect.any(Number),\n            savedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                lastSavedDate: expect.any(Number),\n                files: updatedMultiFileCertProjectBody.files\n              }\n            ]\n          });\n          expect(resUpdate.statusCode).toBe(200);\n        });\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 21,
    "total_chunks": 50
  },
  {
    "id": "359b3c2151c73e928246b19a9f10189a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "testFiles = updatedMultiFileCertProjectBody.files.map(file => omit(file, 'history') ); expect(user).toMatchObject({ needsModeration: true, completedChallenges: [ { id: multiFileCertProjectId, challengeType: updatedMultiFileCertProjectBody.challengeType, files: testFiles, completedDate: expect.any(Number), isManuallyApproved: false }, { id: HtmlChallengeId, completedDate: expect.any(Number) } ], savedChallenges: [ { id: multiFileCertProjectId, lastSavedDate: expect.any(Number), files: updatedMultiFileCertProjectBody.files } ], progressTimestamps: expectedProgressTimestamps }); expect( resUpdate.body.savedChallenges[0].lastSavedDate ).toBeGreaterThan( // eslint-disable-next-line @typescript-eslint/no-unsafe-argument resOriginal.body.savedChallenges[0].lastSavedDate ); expect(resUpdate.body).toStrictEqual({ alreadyCompleted: true, points: 2, completedDate: expect.any(Number), savedChallenges: [ { id: multiFileCertProjectId, lastSavedDate: expect.any(Number), files: updatedMultiFileCertProjectBody.files } ] }); expect(resUpdate.statusCode).toBe(200); }); }); });\n\ndescribe('/daily-coding-challenge-completed', () => {\n      describe('validation', () => {\n        test('POST rejects requests without an id', async () => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { id, ...noIdReqBody } = dailyCodingChallengeBody;\n          const response = await superPost(\n            '/daily-coding-challenge-completed'\n          ).send(noIdReqBody);\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests without a language', async () => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { language, ...noLanguageReqBody } = dailyCodingChallengeBody;\n          const response = await superPost(\n            '/daily-coding-challenge-completed'\n          ).send(noLanguageReqBody);\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 22,
    "total_chunks": 50
  },
  {
    "id": "a93826e00081e19909827c07708789a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "expect(resUpdate.statusCode).toBe(200); }); }); }); describe('/daily-coding-challenge-completed', () => { describe('validation', () => { test('POST rejects requests without an id', async () => { // eslint-disable-next-line @typescript-eslint/no-unused-vars const { id, ...noIdReqBody } = dailyCodingChallengeBody; const response = await superPost( '/daily-coding-challenge-completed' ).send(noIdReqBody); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); }); test('POST rejects requests without a language', async () => { // eslint-disable-next-line @typescript-eslint/no-unused-vars const { language, ...noLanguageReqBody } = dailyCodingChallengeBody; const response = await superPost( '/daily-coding-challenge-completed' ).send(noLanguageReqBody); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); });\n\ntest('POST rejects requests without valid ObjectIDs', async () => {\n          const response = await superPost(\n            '/daily-coding-challenge-completed'\n          ).send({\n            ...dailyCodingChallengeBody,\n            id: 'not-a-valid-id'\n          });\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests without valid coding language', async () => {\n          const response = await superPost(\n            '/daily-coding-challenge-completed'\n          ).send({\n            ...dailyCodingChallengeBody,\n            language: 'not-a-valid-language'\n          });\n\nexpect(response.body).toStrictEqual(\n            isValidChallengeCompletionErrorMsg\n          );\n          expect(response.statusCode).toBe(400);\n        });\n      });\n\ndescribe('handling', () => {\n        afterEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              completedDailyCodingChallenges: [],\n              progressTimestamps: []\n            }\n          });\n        });\n\ntest('POST correctly handles multiple requests', async () => {\n          const now = Date.now();\n\nconst res1 = await superPost(\n            '/daily-coding-challenge-completed'\n          ).send(dailyCodingChallengeBody);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 23,
    "total_chunks": 50
  },
  {
    "id": "454a6cb5be5d90b9172967b5976b02a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); }); test('POST rejects requests without valid coding language', async () => { const response = await superPost( '/daily-coding-challenge-completed' ).send({ ...dailyCodingChallengeBody, language: 'not-a-valid-language' }); expect(response.body).toStrictEqual( isValidChallengeCompletionErrorMsg ); expect(response.statusCode).toBe(400); }); }); describe('handling', () => { afterEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: 'foo@bar.com' }, data: { completedDailyCodingChallenges: [], progressTimestamps: [] } }); }); test('POST correctly handles multiple requests', async () => { const now = Date.now(); const res1 = await superPost( '/daily-coding-challenge-completed' ).send(dailyCodingChallengeBody);\n\nconst user1 = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nconst completedDate =\n            user1.completedDailyCodingChallenges[0]?.completedDate;\n\n// should have correct completedDate\n          expect(completedDate).toBeGreaterThanOrEqual(now);\n          expect(completedDate).toBeLessThanOrEqual(now + 1000);\n\nexpect(user1).toMatchObject({\n            // should add completedDailyCodingChallenge to database with correct info\n            completedDailyCodingChallenges: [\n              {\n                id: dailyCodingChallengeId,\n                completedDate,\n                languages: [DailyCodingChallengeLanguage.javascript]\n              }\n            ],\n            // should add to progressTimestamps\n            progressTimestamps: [completedDate]\n          });\n\n// should have correct response\n          expect(res1.statusCode).toBe(200);\n          expect(res1.body).toStrictEqual({\n            alreadyCompleted: false,\n            points: 1,\n            completedDate,\n            completedDailyCodingChallenges: [\n              {\n                id: dailyCodingChallengeId,\n                completedDate,\n                languages: [DailyCodingChallengeLanguage.javascript]\n              }\n            ]\n          });\n\nconst res2 = await superPost(\n            '/daily-coding-challenge-completed'\n          ).send(dailyCodingChallengeBody);\n\nconst user2 = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 24,
    "total_chunks": 50
  },
  {
    "id": "0eb963a511d749958b90e65511f3d88c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "have correct completedDate expect(completedDate).toBeGreaterThanOrEqual(now); expect(completedDate).toBeLessThanOrEqual(now + 1000); expect(user1).toMatchObject({ // should add completedDailyCodingChallenge to database with correct info completedDailyCodingChallenges: [ { id: dailyCodingChallengeId, completedDate, languages: [DailyCodingChallengeLanguage.javascript] } ], // should add to progressTimestamps progressTimestamps: [completedDate] }); // should have correct response expect(res1.statusCode).toBe(200); expect(res1.body).toStrictEqual({ alreadyCompleted: false, points: 1, completedDate, completedDailyCodingChallenges: [ { id: dailyCodingChallengeId, completedDate, languages: [DailyCodingChallengeLanguage.javascript] } ] }); const res2 = await superPost( '/daily-coding-challenge-completed' ).send(dailyCodingChallengeBody); const user2 = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } });\n\n// should not add 'javascript' again, should not update completedDate\n          expect(user2).toMatchObject({\n            completedDailyCodingChallenges: [\n              {\n                id: dailyCodingChallengeId,\n                completedDate,\n                languages: [DailyCodingChallengeLanguage.javascript]\n              }\n            ],\n            // should not add to progressTimestamps\n            progressTimestamps: [completedDate]\n          });\n\n// should have correct response\n          expect(res2.statusCode).toBe(200);\n          expect(res2.body).toStrictEqual({\n            alreadyCompleted: true,\n            points: 1,\n            completedDate,\n            completedDailyCodingChallenges: [\n              {\n                id: dailyCodingChallengeId,\n                completedDate,\n                languages: [DailyCodingChallengeLanguage.javascript]\n              }\n            ]\n          });\n\nconst res3 = await superPost(\n            '/daily-coding-challenge-completed'\n          ).send({\n            ...dailyCodingChallengeBody,\n            language: 'python'\n          });\n\nconst user3 = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 25,
    "total_chunks": 50
  },
  {
    "id": "3d12396c597c03f9e358dae90f2b1235",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "}); // should not add 'javascript' again, should not update completedDate expect(user2).toMatchObject({ completedDailyCodingChallenges: [ { id: dailyCodingChallengeId, completedDate, languages: [DailyCodingChallengeLanguage.javascript] } ], // should not add to progressTimestamps progressTimestamps: [completedDate] }); // should have correct response expect(res2.statusCode).toBe(200); expect(res2.body).toStrictEqual({ alreadyCompleted: true, points: 1, completedDate, completedDailyCodingChallenges: [ { id: dailyCodingChallengeId, completedDate, languages: [DailyCodingChallengeLanguage.javascript] } ] }); const res3 = await superPost( '/daily-coding-challenge-completed' ).send({ ...dailyCodingChallengeBody, language: 'python' }); const user3 = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } });\n\n// should add 'python' to languages + should not update completedDate\n          expect(user3).toMatchObject({\n            completedDailyCodingChallenges: [\n              {\n                id: dailyCodingChallengeId,\n                completedDate,\n                languages: [\n                  DailyCodingChallengeLanguage.javascript,\n                  DailyCodingChallengeLanguage.python\n                ]\n              }\n            ],\n            // should not add to progressTimestamps\n            progressTimestamps: [completedDate]\n          });\n\n// should have correct response\n          expect(res3.statusCode).toBe(200);\n          expect(res3.body).toStrictEqual({\n            alreadyCompleted: true,\n            points: 1,\n            completedDate,\n            completedDailyCodingChallenges: [\n              {\n                id: dailyCodingChallengeId,\n                completedDate,\n                languages: [\n                  DailyCodingChallengeLanguage.javascript,\n                  DailyCodingChallengeLanguage.python\n                ]\n              }\n            ]\n          });\n        });\n      });\n    });\n\ndescribe('POST /save-challenge', () => {\n      describe('validation', () => {\n        test('returns 400 status for unsavable challenges', async () => {\n          const response = await superPost('/save-challenge').send({\n            savedChallenges: {\n              // valid mongo id, but not a saveable one\n              id: 'aaaaaaaaaaaaaaaaaaaaaaa',\n              files: multiFileCertProjectBody.files\n            }\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 26,
    "total_chunks": 50
  },
  {
    "id": "9fb7b0ae3ff144fd5d445de1e4d7370a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "add to progressTimestamps progressTimestamps: [completedDate] }); // should have correct response expect(res3.statusCode).toBe(200); expect(res3.body).toStrictEqual({ alreadyCompleted: true, points: 1, completedDate, completedDailyCodingChallenges: [ { id: dailyCodingChallengeId, completedDate, languages: [ DailyCodingChallengeLanguage.javascript, DailyCodingChallengeLanguage.python ] } ] }); }); }); }); describe('POST /save-challenge', () => { describe('validation', () => { test('returns 400 status for unsavable challenges', async () => { const response = await superPost('/save-challenge').send({ savedChallenges: { // valid mongo id, but not a saveable one id: 'aaaaaaaaaaaaaaaaaaaaaaa', files: multiFileCertProjectBody.files } });\n\nexpect(response.body).toEqual({\n            message: 'That does not appear to be a valid challenge submission.',\n            type: 'error'\n          });\n          expect(response.statusCode).toBe(400);\n        });\n      });\n\ndescribe('handling', () => {\n        afterEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              savedChallenges: []\n            }\n          });\n        });\n\ntest('rejects requests for challenges that cannot be saved', async () => {\n          const response = await superPost('/save-challenge').send({\n            id: '66ebd4ae2812430bb883c786',\n            files: multiFileCertProjectBody.files\n          });\n\nconst { savedChallenges } =\n            await fastifyTestInstance.prisma.user.findFirstOrThrow({\n              where: { email: 'foo@bar.com' }\n            });\n\nexpect(response.statusCode).toBe(400);\n          expect(response.text).toEqual('That challenge type is not saveable.');\n          expect(savedChallenges).toHaveLength(0);\n        });\n\ntest('update the user savedchallenges and return them', async () => {\n          const response = await superPost('/save-challenge').send({\n            id: multiFileCertProjectId,\n            files: updatedMultiFileCertProjectBody.files\n          });\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nconst savedDate = user.savedChallenges[0]?.lastSavedDate;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 27,
    "total_chunks": 50
  },
  {
    "id": "be57d12fee29bd79422489c50456ad78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "that cannot be saved', async () => { const response = await superPost('/save-challenge').send({ id: '66ebd4ae2812430bb883c786', files: multiFileCertProjectBody.files }); const { savedChallenges } = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); expect(response.statusCode).toBe(400); expect(response.text).toEqual('That challenge type is not saveable.'); expect(savedChallenges).toHaveLength(0); }); test('update the user savedchallenges and return them', async () => { const response = await superPost('/save-challenge').send({ id: multiFileCertProjectId, files: updatedMultiFileCertProjectBody.files }); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); const savedDate = user.savedChallenges[0]?.lastSavedDate;\n\nexpect(user).toMatchObject({\n            savedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                lastSavedDate: savedDate,\n                files: updatedMultiFileCertProjectBody.files\n              }\n            ]\n          });\n          expect(response.body).toEqual({\n            savedChallenges: [\n              {\n                id: multiFileCertProjectId,\n                lastSavedDate: savedDate,\n                files: updatedMultiFileCertProjectBody.files\n              }\n            ]\n          });\n          expect(response.statusCode).toBe(200);\n        });\n      });\n    });\n\ndescribe('GET /exam/:id', () => {\n      beforeAll(async () => {\n        await seedExam();\n      });\n\ndescribe('validation', () => {\n        test('GET rejects requests without id param', async () => {\n          const response = await superGet('/exam/');\n\nexpect(response.body).toStrictEqual({\n            error: `Valid 'id' not found in request parameters.`\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('GET rejects requests when id param is not a 24-character string', async () => {\n          const response = await superGet('/exam/fake-id');\n\nexpect(response.body).toStrictEqual({\n            error: `Valid 'id' not found in request parameters.`\n          });\n          expect(response.statusCode).toBe(400);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 28,
    "total_chunks": 50
  },
  {
    "id": "40b231753dc61c35c425403d39645193",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "}); describe('GET /exam/:id', () => { beforeAll(async () => { await seedExam(); }); describe('validation', () => { test('GET rejects requests without id param', async () => { const response = await superGet('/exam/'); expect(response.body).toStrictEqual({ error: `Valid 'id' not found in request parameters.` }); expect(response.statusCode).toBe(400); }); test('GET rejects requests when id param is not a 24-character string', async () => { const response = await superGet('/exam/fake-id'); expect(response.body).toStrictEqual({ error: `Valid 'id' not found in request parameters.` }); expect(response.statusCode).toBe(400); });\n\ntest('GET rejects requests with non-existent id param', async () => {\n          const response = await superGet('/exam/123412341234123412341234');\n\nexpect(response.body).toStrictEqual({\n            error: 'An error occurred trying to get the exam from the database.'\n          });\n          expect(response.statusCode).toBe(500);\n        });\n\ntest('GET rejects requests where camper has not completed prerequisites', async () => {\n          const response = await superGet('/exam/647e22d18acb466c97ccbef8');\n\nexpect(response.body).toStrictEqual({\n            error: `You have not completed the required challenges to start the 'Exam Certification'.`\n          });\n          expect(response.statusCode).toBe(403);\n        });\n      });\n\ndescribe('handling', () => {\n        test('GET returns a generatedExam array with the correct objects', async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: defaultUserEmail },\n            data: { completedChallenges: completedTrophyChallenges }\n          });\n\nconst response = await superGet('/exam/647e22d18acb466c97ccbef8');\n\nexpect(response.body).toHaveProperty('generatedExam');\n\nconst { generatedExam } = response.body;\n\nexpect(Array.isArray(generatedExam)).toBe(true);\n          expect(generatedExam).toHaveLength(3);\n\nexpect(generatedExam[0]).toHaveProperty('question');\n          expect(typeof generatedExam[0].question).toBe('string');\n\nexpect(generatedExam[0]).toHaveProperty('id');\n          expect(typeof generatedExam[0].id).toBe('string');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 29,
    "total_chunks": 50
  },
  {
    "id": "64b1ba59ed8e2d8d8cff2c738f7ea9be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "() => { const response = await superGet('/exam/647e22d18acb466c97ccbef8'); expect(response.body).toStrictEqual({ error: `You have not completed the required challenges to start the 'Exam Certification'.` }); expect(response.statusCode).toBe(403); }); }); describe('handling', () => { test('GET returns a generatedExam array with the correct objects', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: defaultUserEmail }, data: { completedChallenges: completedTrophyChallenges } }); const response = await superGet('/exam/647e22d18acb466c97ccbef8'); expect(response.body).toHaveProperty('generatedExam'); const { generatedExam } = response.body; expect(Array.isArray(generatedExam)).toBe(true); expect(generatedExam).toHaveLength(3); expect(generatedExam[0]).toHaveProperty('question'); expect(typeof generatedExam[0].question).toBe('string'); expect(generatedExam[0]).toHaveProperty('id'); expect(typeof generatedExam[0].id).toBe('string');\n\nexpect(generatedExam[0]).toHaveProperty('answers');\n          expect(Array.isArray(generatedExam[0].answers)).toBe(true);\n          expect(generatedExam[0].answers).toHaveLength(5);\n\nconst answers = generatedExam[0].answers as Answer[];\n\nanswers.forEach(a => {\n            expect(a).toHaveProperty('answer');\n            expect(typeof a.answer).toBe('string');\n            expect(a).toHaveProperty('id');\n            expect(typeof a.id).toBe('string');\n          });\n\nexpect(response.statusCode).toBe(200);\n        });\n      });\n      describe('/ms-trophy-challenge-completed', () => {\n        const msUserId = 'abc123';\n        // Add Logic to C# Console Applications's id:\n        const trophyChallengeId = '647f882207d29547b3bee1c0';\n        // Create and Run Simple C# Console Applications's id:\n        const trophyChallengeId2 = '647f87dc07d29547b3bee1bf';\n        const nonTrophyChallengeId = 'bd7123c8c441eddfaeb5bdef';\n        const solutionUrl = `https://learn.microsoft.com/api/achievements/user/${msUserId}`;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 30,
    "total_chunks": 50
  },
  {
    "id": "13202a9e1fc9b616ea29f23330b51608",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "{ generatedExam } = response.body; expect(Array.isArray(generatedExam)).toBe(true); expect(generatedExam).toHaveLength(3); expect(generatedExam[0]).toHaveProperty('question'); expect(typeof generatedExam[0].question).toBe('string'); expect(generatedExam[0]).toHaveProperty('id'); expect(typeof generatedExam[0].id).toBe('string'); expect(generatedExam[0]).toHaveProperty('answers'); expect(Array.isArray(generatedExam[0].answers)).toBe(true); expect(generatedExam[0].answers).toHaveLength(5); const answers = generatedExam[0].answers as Answer[]; answers.forEach(a => { expect(a).toHaveProperty('answer'); expect(typeof a.answer).toBe('string'); expect(a).toHaveProperty('id'); expect(typeof a.id).toBe('string'); }); expect(response.statusCode).toBe(200); }); }); describe('/ms-trophy-challenge-completed', () => { const msUserId = 'abc123'; // Add Logic to C# Console Applications's id: const trophyChallengeId = '647f882207d29547b3bee1c0'; // Create and Run Simple C# Console Applications's id: const trophyChallengeId2 = '647f87dc07d29547b3bee1bf'; const nonTrophyChallengeId = 'bd7123c8c441eddfaeb5bdef'; const solutionUrl = `https://learn.microsoft.com/api/achievements/user/${msUserId}`;\n\nconst idIsMissingOrInvalid = {\n          type: 'error',\n          message: 'flash.ms.trophy.err-2'\n        } as const;\n        const userHasNotLinkedTheirAccount = {\n          type: 'error',\n          message: 'flash.ms.trophy.err-1'\n        } as const;\n        const unexpectedError = {\n          type: 'error',\n          message: 'flash.ms.trophy.err-5'\n        } as const;\n\ndescribe('validation', () => {\n          test('POST rejects requests without valid ids', async () => {\n            const resNoId = await superPost('/ms-trophy-challenge-completed');\n\nexpect(resNoId.body).toStrictEqual(idIsMissingOrInvalid);\n            expect(resNoId.statusCode).toBe(400);\n\nconst resBadId = await superPost(\n              '/ms-trophy-challenge-completed'\n            ).send({ id: nonTrophyChallengeId });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 31,
    "total_chunks": 50
  },
  {
    "id": "4bb72505cdbfa9981dbf6cabb2c6299f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "const trophyChallengeId2 = '647f87dc07d29547b3bee1bf'; const nonTrophyChallengeId = 'bd7123c8c441eddfaeb5bdef'; const solutionUrl = `https://learn.microsoft.com/api/achievements/user/${msUserId}`; const idIsMissingOrInvalid = { type: 'error', message: 'flash.ms.trophy.err-2' } as const; const userHasNotLinkedTheirAccount = { type: 'error', message: 'flash.ms.trophy.err-1' } as const; const unexpectedError = { type: 'error', message: 'flash.ms.trophy.err-5' } as const; describe('validation', () => { test('POST rejects requests without valid ids', async () => { const resNoId = await superPost('/ms-trophy-challenge-completed'); expect(resNoId.body).toStrictEqual(idIsMissingOrInvalid); expect(resNoId.statusCode).toBe(400); const resBadId = await superPost( '/ms-trophy-challenge-completed' ).send({ id: nonTrophyChallengeId });\n\nexpect(resBadId.body).toStrictEqual(idIsMissingOrInvalid);\n            expect(resBadId.statusCode).toBe(400);\n          });\n\n// TODO(Post-MVP): give a more specific error message\n          test('POST rejects requests without valid ObjectIDs', async () => {\n            const response = await superPost(\n              '/ms-trophy-challenge-completed'\n            ).send({ id: 'not-a-valid-id' });\n\nexpect(response.body).toStrictEqual(idIsMissingOrInvalid);\n            expect(response.statusCode).toBe(400);\n          });\n        });\n\ndescribe('handling', () => {\n          async function createMSUsernameRecord(msUsername: string) {\n            await fastifyTestInstance.prisma.msUsername.create({\n              data: {\n                msUsername,\n                ttl: 123,\n                userId: defaultUserId\n              }\n            });\n          }\n          afterEach(async () => {\n            await fastifyTestInstance.prisma.msUsername.deleteMany({\n              where: { userId: defaultUserId }\n            });\n            await fastifyTestInstance.prisma.user.updateMany({\n              where: { id: defaultUserId },\n              data: {\n                completedChallenges: [],\n                progressTimestamps: []\n              }\n            });\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 32,
    "total_chunks": 50
  },
  {
    "id": "77410c548cd253c4abc832fc93fa42f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "specific error message test('POST rejects requests without valid ObjectIDs', async () => { const response = await superPost( '/ms-trophy-challenge-completed' ).send({ id: 'not-a-valid-id' }); expect(response.body).toStrictEqual(idIsMissingOrInvalid); expect(response.statusCode).toBe(400); }); }); describe('handling', () => { async function createMSUsernameRecord(msUsername: string) { await fastifyTestInstance.prisma.msUsername.create({ data: { msUsername, ttl: 123, userId: defaultUserId } }); } afterEach(async () => { await fastifyTestInstance.prisma.msUsername.deleteMany({ where: { userId: defaultUserId } }); await fastifyTestInstance.prisma.user.updateMany({ where: { id: defaultUserId }, data: { completedChallenges: [], progressTimestamps: [] } }); });\n\ntest('POST rejects requests if the user does not have a Microsoft username', async () => {\n            const res = await superPost('/ms-trophy-challenge-completed').send({\n              id: trophyChallengeId\n            });\n\nexpect(res.body).toStrictEqual(userHasNotLinkedTheirAccount);\n            expect(res.statusCode).toBe(403);\n          });\n\ntest(\"POST rejects requests if Microsoft's api responds with an error\", async () => {\n            const msUsername = 'ANRandom';\n            await createMSUsernameRecord(msUsername);\n            // This can be any error that the route can serialize. Other than\n            // that, the details do not matter, since whatever\n            // verifyTrophyWithMicrosoft returns will be returned by the route.\n            const verifyError = {\n              type: 'error',\n              message: 'flash.ms.profile.err',\n              variables: {\n                msUsername\n              }\n            };\n            mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() =>\n              Promise.resolve(verifyError)\n            );\n\nconst res = await superPost('/ms-trophy-challenge-completed').send({\n              id: trophyChallengeId\n            });\n\nexpect(res.body).toStrictEqual(verifyError);\n            expect(res.statusCode).toBe(403);\n          });\n\ntest('POST handles unexpected errors', async () => {\n            mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() => {\n              throw new Error('Network error');\n            });\n            const msUsername = 'ANRandom';\n            await createMSUsernameRecord(msUsername);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 33,
    "total_chunks": 50
  },
  {
    "id": "cd63ec1af1bb31b11f22e52b66d896fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "error that the route can serialize. Other than // that, the details do not matter, since whatever // verifyTrophyWithMicrosoft returns will be returned by the route. const verifyError = { type: 'error', message: 'flash.ms.profile.err', variables: { msUsername } }; mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() => Promise.resolve(verifyError) ); const res = await superPost('/ms-trophy-challenge-completed').send({ id: trophyChallengeId }); expect(res.body).toStrictEqual(verifyError); expect(res.statusCode).toBe(403); }); test('POST handles unexpected errors', async () => { mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() => { throw new Error('Network error'); }); const msUsername = 'ANRandom'; await createMSUsernameRecord(msUsername);\n\nconst res = await superPost('/ms-trophy-challenge-completed').send({\n              id: trophyChallengeId\n            });\n\nexpect(res.body).toStrictEqual(unexpectedError);\n            expect(res.statusCode).toBe(500);\n          });\n\ntest('POST updates the user record with a new completed challenge', async () => {\n            mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() =>\n              Promise.resolve({\n                type: 'success',\n                msUserAchievementsApiUrl: solutionUrl\n              })\n            );\n            const msUsername = 'ANRandom';\n            await createMSUsernameRecord(msUsername);\n            const now = Date.now();\n\nconst res = await superPost('/ms-trophy-challenge-completed').send({\n              id: trophyChallengeId\n            });\n\nconst user =\n              await fastifyTestInstance.prisma.user.findUniqueOrThrow({\n                where: { id: defaultUserId }\n              });\n            const completedDate = user.completedChallenges[0]?.completedDate;\n\nexpect(res.body).toStrictEqual({\n              alreadyCompleted: false,\n              points: 1,\n              completedDate\n            });\n\nexpect(completedDate).toBeGreaterThan(now);\n            expect(completedDate).toBeLessThan(now + 1000);\n            expect(res.statusCode).toBe(200);\n\nexpect(user).toMatchObject({\n              completedChallenges: [\n                {\n                  id: trophyChallengeId,\n                  solution: solutionUrl,\n                  completedDate: expect.any(Number)\n                }\n              ]\n            });\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 34,
    "total_chunks": 50
  },
  {
    "id": "a5232f915dc3527f6f90947898034cf5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "a new completed challenge', async () => { mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() => Promise.resolve({ type: 'success', msUserAchievementsApiUrl: solutionUrl }) ); const msUsername = 'ANRandom'; await createMSUsernameRecord(msUsername); const now = Date.now(); const res = await superPost('/ms-trophy-challenge-completed').send({ id: trophyChallengeId }); const user = await fastifyTestInstance.prisma.user.findUniqueOrThrow({ where: { id: defaultUserId } }); const completedDate = user.completedChallenges[0]?.completedDate; expect(res.body).toStrictEqual({ alreadyCompleted: false, points: 1, completedDate }); expect(completedDate).toBeGreaterThan(now); expect(completedDate).toBeLessThan(now + 1000); expect(res.statusCode).toBe(200); expect(user).toMatchObject({ completedChallenges: [ { id: trophyChallengeId, solution: solutionUrl, completedDate: expect.any(Number) } ] }); });\n\nit('POST correctly handles multiple requests', async () => {\n            mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() =>\n              Promise.resolve({\n                type: 'success',\n                msUserAchievementsApiUrl: solutionUrl\n              })\n            );\n            const msUsername = 'ANRandom';\n            await createMSUsernameRecord(msUsername);\n\nconst resOne = await superPost(\n              '/ms-trophy-challenge-completed'\n            ).send({ id: trophyChallengeId });\n\nmockVerifyTrophyWithMicrosoft.mockImplementationOnce(() =>\n              Promise.resolve({\n                type: 'success',\n                msUserAchievementsApiUrl: solutionUrl\n              })\n            );\n            const resTwo = await superPost(\n              '/ms-trophy-challenge-completed'\n            ).send({ id: trophyChallengeId2 });\n\n// sending the second trophy challenge again should not change\n            // anything\n            mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() =>\n              Promise.resolve({\n                type: 'success',\n                msUserAchievementsApiUrl: solutionUrl\n              })\n            );\n            const resUpdate = await superPost(\n              '/ms-trophy-challenge-completed'\n            ).send({ id: trophyChallengeId2 });\n\nconst { completedChallenges, progressTimestamps } =\n              await fastifyTestInstance.prisma.user.findUniqueOrThrow({\n                where: { id: defaultUserId }\n              });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 35,
    "total_chunks": 50
  },
  {
    "id": "5290923f6c49bd7f9712dfcdb94e12d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "await createMSUsernameRecord(msUsername); const resOne = await superPost( '/ms-trophy-challenge-completed' ).send({ id: trophyChallengeId }); mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() => Promise.resolve({ type: 'success', msUserAchievementsApiUrl: solutionUrl }) ); const resTwo = await superPost( '/ms-trophy-challenge-completed' ).send({ id: trophyChallengeId2 }); // sending the second trophy challenge again should not change // anything mockVerifyTrophyWithMicrosoft.mockImplementationOnce(() => Promise.resolve({ type: 'success', msUserAchievementsApiUrl: solutionUrl }) ); const resUpdate = await superPost( '/ms-trophy-challenge-completed' ).send({ id: trophyChallengeId2 }); const { completedChallenges, progressTimestamps } = await fastifyTestInstance.prisma.user.findUniqueOrThrow({ where: { id: defaultUserId } });\n\nexpect(completedChallenges).toHaveLength(2);\n            expect(completedChallenges).toStrictEqual(\n              expect.arrayContaining([\n                expect.objectContaining({\n                  id: trophyChallengeId,\n                  solution: solutionUrl,\n                  completedDate: resOne.body.completedDate\n                }),\n                expect.objectContaining({\n                  id: trophyChallengeId2,\n                  solution: solutionUrl,\n                  completedDate: resTwo.body.completedDate\n                })\n              ])\n            );\n\nconst expectedProgressTimestamps = completedChallenges.map(\n              challenge => challenge.completedDate\n            );\n            expect(progressTimestamps).toStrictEqual(\n              expectedProgressTimestamps\n            );\n\nexpect(resUpdate.body).toStrictEqual({\n              alreadyCompleted: true,\n              points: 2,\n              completedDate: expect.any(Number)\n            });\n\n// If a challenge has already been completed, it should return the\n            // original completedDate\n            expect(resUpdate.body.completedDate).toBe(\n              resTwo.body.completedDate\n            );\n            expect(resUpdate.statusCode).toBe(200);\n          });\n        });\n      });\n    });\n\ndescribe('/exam-challenge-completed', () => {\n      afterEach(async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { id: defaultUserId },\n          data: {\n            completedChallenges: [],\n            completedExams: [],\n            progressTimestamps: []\n          }\n        });\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 36,
    "total_chunks": 50
  },
  {
    "id": "f503bcc9682e6d1ceff8368911d3fdaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "trophyChallengeId2, solution: solutionUrl, completedDate: resTwo.body.completedDate }) ]) ); const expectedProgressTimestamps = completedChallenges.map( challenge => challenge.completedDate ); expect(progressTimestamps).toStrictEqual( expectedProgressTimestamps ); expect(resUpdate.body).toStrictEqual({ alreadyCompleted: true, points: 2, completedDate: expect.any(Number) }); // If a challenge has already been completed, it should return the // original completedDate expect(resUpdate.body.completedDate).toBe( resTwo.body.completedDate ); expect(resUpdate.statusCode).toBe(200); }); }); }); }); describe('/exam-challenge-completed', () => { afterEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { id: defaultUserId }, data: { completedChallenges: [], completedExams: [], progressTimestamps: [] } }); });\n\ndescribe('validation', () => {\n        test('POST rejects requests with no body', async () => {\n          const response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          });\n\nexpect(response.body).toStrictEqual({\n            error: `Valid request body not found in attempt to submit exam.`\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests without valid ObjectID', async () => {\n          const response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({ id: 'not-a-valid-id' });\n\nexpect(response.body).toStrictEqual({\n            error: `Valid request body not found in attempt to submit exam.`\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests with valid, but non existing ID', async () => {\n          const response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({\n            id: '647e22d18acb466c97ccbef0',\n            challengeType: 17,\n            userCompletedExam: {\n              examTimeInSeconds: 111,\n              userExamQuestions: [\n                {\n                  id: 'q-id',\n                  question: '?',\n                  answer: {\n                    id: 'a-id',\n                    answer: 'a'\n                  }\n                }\n              ]\n            }\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 37,
    "total_chunks": 50
  },
  {
    "id": "9bf6da1bcaf2575aee1759493738f75a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "response = await superRequest('/exam-challenge-completed', { method: 'POST', setCookies }).send({ id: 'not-a-valid-id' }); expect(response.body).toStrictEqual({ error: `Valid request body not found in attempt to submit exam.` }); expect(response.statusCode).toBe(400); }); test('POST rejects requests with valid, but non existing ID', async () => { const response = await superRequest('/exam-challenge-completed', { method: 'POST', setCookies }).send({ id: '647e22d18acb466c97ccbef0', challengeType: 17, userCompletedExam: { examTimeInSeconds: 111, userExamQuestions: [ { id: 'q-id', question: '?', answer: { id: 'a-id', answer: 'a' } } ] } });\n\nexpect(response.body).toStrictEqual({\n            error: `An error occurred trying to get the exam from the database.`\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests without valid userCompletedExam schema', async () => {\n          const response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({\n            id: examChallengeId,\n            challengeType: 17,\n            userCompletedExam: ''\n          });\n\nexpect(response.body).toStrictEqual({\n            error: `Valid request body not found in attempt to submit exam.`\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests without valid examTimeInSeconds schema', async () => {\n          const response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({\n            id: examChallengeId,\n            challengeType: 17,\n            userCompletedExam: { examTimeInSeconds: 'a' }\n          });\n\nexpect(response.body).toStrictEqual({\n            error: `Valid request body not found in attempt to submit exam.`\n          });\n          expect(response.statusCode).toBe(400);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 38,
    "total_chunks": 50
  },
  {
    "id": "5526fde62e8d9c847787b7a0807317fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "= await superRequest('/exam-challenge-completed', { method: 'POST', setCookies }).send({ id: examChallengeId, challengeType: 17, userCompletedExam: '' }); expect(response.body).toStrictEqual({ error: `Valid request body not found in attempt to submit exam.` }); expect(response.statusCode).toBe(400); }); test('POST rejects requests without valid examTimeInSeconds schema', async () => { const response = await superRequest('/exam-challenge-completed', { method: 'POST', setCookies }).send({ id: examChallengeId, challengeType: 17, userCompletedExam: { examTimeInSeconds: 'a' } }); expect(response.body).toStrictEqual({ error: `Valid request body not found in attempt to submit exam.` }); expect(response.statusCode).toBe(400); });\n\ntest('POST rejects requests without valid userExamQuestions schema', async () => {\n          const response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({\n            id: examChallengeId,\n            challengeType: 17,\n            userCompletedExam: { examTimeInSeconds: 11, userExamQuestions: [] }\n          });\n\nexpect(response.body).toStrictEqual({\n            error: `Valid request body not found in attempt to submit exam.`\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests with prerequisites not completed', async () => {\n          const response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({\n            id: examChallengeId,\n            challengeType: 17,\n            userCompletedExam: {\n              examTimeInSeconds: 111,\n              userExamQuestions: [\n                {\n                  id: 'q-id',\n                  question: '?',\n                  answer: {\n                    id: 'a-id',\n                    answer: 'a'\n                  }\n                }\n              ]\n            }\n          });\n\nexpect(response.body).toStrictEqual({\n            error: `You have not completed the required challenges to start the 'Exam Certification'.`\n          });\n          expect(response.statusCode).toBe(403);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 39,
    "total_chunks": 50
  },
  {
    "id": "1cca6fff499ea5e7a4888afe7adc6368",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "request body not found in attempt to submit exam.` }); expect(response.statusCode).toBe(400); }); test('POST rejects requests with prerequisites not completed', async () => { const response = await superRequest('/exam-challenge-completed', { method: 'POST', setCookies }).send({ id: examChallengeId, challengeType: 17, userCompletedExam: { examTimeInSeconds: 111, userExamQuestions: [ { id: 'q-id', question: '?', answer: { id: 'a-id', answer: 'a' } } ] } }); expect(response.body).toStrictEqual({ error: `You have not completed the required challenges to start the 'Exam Certification'.` }); expect(response.statusCode).toBe(403); });\n\ntest('POST rejects requests with invalid userCompletedExam values', async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              completedChallenges: completedTrophyChallenges\n            }\n          });\n\nconst response = await superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({\n            id: examChallengeId,\n            challengeType: 17,\n            userCompletedExam: {\n              examTimeInSeconds: 111,\n              userExamQuestions: [\n                {\n                  id: 'q-id',\n                  question: '?',\n                  answer: {\n                    id: 'a-id',\n                    answer: 'a'\n                  }\n                }\n              ]\n            }\n          });\n\nexpect(response.body).toStrictEqual({\n            error: `An error occurred trying to submit your exam.`\n          });\n          expect(response.statusCode).toBe(500);\n        });\n      });\n\ndescribe('handling', () => {\n        beforeEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { id: defaultUserId },\n            data: {\n              completedChallenges: completedTrophyChallenges\n            }\n          });\n        });\n\nafterEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { id: defaultUserId },\n            data: {\n              completedChallenges: [],\n              completedExams: [],\n              progressTimestamps: []\n            }\n          });\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 40,
    "total_chunks": 50
  },
  {
    "id": "55422d3a53ad21b2516ffb87e2f21535",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "userExamQuestions: [ { id: 'q-id', question: '?', answer: { id: 'a-id', answer: 'a' } } ] } }); expect(response.body).toStrictEqual({ error: `An error occurred trying to submit your exam.` }); expect(response.statusCode).toBe(500); }); }); describe('handling', () => { beforeEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { id: defaultUserId }, data: { completedChallenges: completedTrophyChallenges } }); }); afterEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { id: defaultUserId }, data: { completedChallenges: [], completedExams: [], progressTimestamps: [] } }); });\n\nconst submitExam = async (exam: ExamSubmission) => {\n          return superRequest('/exam-challenge-completed', {\n            method: 'POST',\n            setCookies\n          }).send({\n            id: examChallengeId,\n            challengeType: 17,\n            userCompletedExam: exam\n          });\n        };\n\ntest('POST handles submitting a failing exam', async () => {\n          const now = Date.now();\n\n// Submit exam with 0 correct answers\n          const response = await submitExam(examWithZeroCorrect);\n\ntype GetSessionUserResponseBody = Static<\n            (typeof getSessionUser)['response']['200']\n          >['user'];\n\nconst res = (await superGet('/user/get-session-user')).body as {\n            user: GetSessionUserResponseBody;\n          };\n\nconst { completedChallenges, completedExams, calendar } =\n            res.user[defaultUsername]!;\n\n// should have the 1 prerequisite challenge\n          expect(completedChallenges).toHaveLength(1);\n          expect(completedExams).toHaveLength(1);\n          expect(calendar).toStrictEqual({});\n          expect(completedChallenges).toEqual(completedTrophyChallenges);\n          expect(completedExams[0]).toEqual({\n            id: '647e22d18acb466c97ccbef8',\n            challengeType: 17,\n            completedDate: expect.any(Number),\n            examResults: mockResultsZeroCorrect\n          });\n\nexpect(completedExams[0]?.completedDate).toBeGreaterThan(now);\n          expect(response.body).toMatchObject({\n            points: 0,\n            alreadyCompleted: false,\n            examResults: mockResultsZeroCorrect\n          });\n          expect(response.statusCode).toBe(200);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 41,
    "total_chunks": 50
  },
  {
    "id": "5f163247718e8f0e804d253d287b3e6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "() => { const now = Date.now(); // Submit exam with 0 correct answers const response = await submitExam(examWithZeroCorrect); type GetSessionUserResponseBody = Static< (typeof getSessionUser)['response']['200'] >['user']; const res = (await superGet('/user/get-session-user')).body as { user: GetSessionUserResponseBody; }; const { completedChallenges, completedExams, calendar } = res.user[defaultUsername]!; // should have the 1 prerequisite challenge expect(completedChallenges).toHaveLength(1); expect(completedExams).toHaveLength(1); expect(calendar).toStrictEqual({}); expect(completedChallenges).toEqual(completedTrophyChallenges); expect(completedExams[0]).toEqual({ id: '647e22d18acb466c97ccbef8', challengeType: 17, completedDate: expect.any(Number), examResults: mockResultsZeroCorrect }); expect(completedExams[0]?.completedDate).toBeGreaterThan(now); expect(response.body).toMatchObject({ points: 0, alreadyCompleted: false, examResults: mockResultsZeroCorrect }); expect(response.statusCode).toBe(200); });\n\ntest(\"POST always adds to the user's completedExams\", async () => {\n          let now = Date.now();\n          // The first exam should be stored in the user's completedExams\n          await submitExam(examWithAllCorrect);\n\nlet { completedExams } =\n            await fastifyTestInstance.prisma.user.findFirstOrThrow({\n              where: { id: defaultUserId }\n            });\n\nexpect(completedExams).toHaveLength(1);\n          expect(completedExams[0]).toEqual(completedExamChallengeAllCorrect);\n          expect(completedExams[0]?.completedDate).toBeGreaterThan(now);\n          expect(completedExams[0]?.completedDate).toBeLessThan(Date.now());\n\nnow = Date.now();\n          // the second exam should be added to the exams, not replace the first\n          await submitExam(examWithOneCorrect);\n\ncompletedExams = (\n            await fastifyTestInstance.prisma.user.findFirstOrThrow({\n              where: { id: defaultUserId }\n            })\n          ).completedExams;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 42,
    "total_chunks": 50
  },
  {
    "id": "e90ddf388bf25bdb3fb1765e66bee060",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "test(\"POST always adds to the user's completedExams\", async () => { let now = Date.now(); // The first exam should be stored in the user's completedExams await submitExam(examWithAllCorrect); let { completedExams } = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { id: defaultUserId } }); expect(completedExams).toHaveLength(1); expect(completedExams[0]).toEqual(completedExamChallengeAllCorrect); expect(completedExams[0]?.completedDate).toBeGreaterThan(now); expect(completedExams[0]?.completedDate).toBeLessThan(Date.now()); now = Date.now(); // the second exam should be added to the exams, not replace the first await submitExam(examWithOneCorrect); completedExams = ( await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { id: defaultUserId } }) ).completedExams;\n\nexpect(completedExams).toHaveLength(2);\n          expect(completedExams).toEqual(\n            expect.arrayContaining([\n              completedExamChallengeAllCorrect,\n              completedExamChallengeOneCorrect\n            ])\n          );\n          expect(completedExams[1]?.completedDate).toBeGreaterThan(now);\n          expect(completedExams[1]?.completedDate).toBeLessThan(Date.now());\n        });\n\ntest('POST updates user progress if they have not completed the exam before', async () => {\n          // Submit exam with 2/3 correct answers\n          const now = Date.now();\n          const res = await submitExam(examWithTwoCorrect);\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { id: defaultUserId }\n          });\n\n// should add to completedChallenges\n          expect(user.completedChallenges).toHaveLength(2);\n          expect(user.completedChallenges).toMatchObject([\n            ...completedTrophyChallenges,\n            completedExamChallengeTwoCorrect\n          ]);\n          expect(user.completedChallenges[1]?.completedDate).toBeGreaterThan(\n            now\n          );\n\n// should add to progressTimestamps\n          expect(user.progressTimestamps).toHaveLength(1);\n\nexpect(res.body).toMatchObject({\n            points: 1,\n            alreadyCompleted: false,\n            examResults: mockResultsTwoCorrect\n          });\n          expect(res.statusCode).toBe(200);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 43,
    "total_chunks": 50
  },
  {
    "id": "5ca379a5bd638eeff86c05a73ce1c099",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "); expect(completedExams[1]?.completedDate).toBeGreaterThan(now); expect(completedExams[1]?.completedDate).toBeLessThan(Date.now()); }); test('POST updates user progress if they have not completed the exam before', async () => { // Submit exam with 2/3 correct answers const now = Date.now(); const res = await submitExam(examWithTwoCorrect); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { id: defaultUserId } }); // should add to completedChallenges expect(user.completedChallenges).toHaveLength(2); expect(user.completedChallenges).toMatchObject([ ...completedTrophyChallenges, completedExamChallengeTwoCorrect ]); expect(user.completedChallenges[1]?.completedDate).toBeGreaterThan( now ); // should add to progressTimestamps expect(user.progressTimestamps).toHaveLength(1); expect(res.body).toMatchObject({ points: 1, alreadyCompleted: false, examResults: mockResultsTwoCorrect }); expect(res.statusCode).toBe(200); });\n\ntest('POST does not update user progress if new exam is not an improvement', async () => {\n          // Submit exam with 2/3 correct answers\n          await submitExam(examWithTwoCorrect);\n\nconst user1 = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { id: defaultUserId }\n          });\n\n// Submit exam with 2/3 correct answers (no improvement)\n          const res2 = await submitExam(examWithTwoCorrect);\n\nconst user2 = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { id: defaultUserId }\n          });\n\n// should not update user progress\n          expect(user2.completedChallenges).toEqual(user1.completedChallenges);\n          expect(user2.progressTimestamps).toEqual(user1.progressTimestamps);\n\nexpect(res2.body).toMatchObject({\n            points: 1,\n            alreadyCompleted: true,\n            examResults: mockResultsTwoCorrect\n          });\n          expect(res2.statusCode).toBe(200);\n        });\n\ntest('POST updates user progress if exam is an improvement', async () => {\n          // Submit exam with 2/3 correct answers\n          await submitExam(examWithTwoCorrect);\n          const user1 = await fastifyTestInstance.prisma.user.findUniqueOrThrow(\n            {\n              where: { id: defaultUserId }\n            }\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 44,
    "total_chunks": 50
  },
  {
    "id": "8a671b11c5c4f99ff87e908509b87c16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "exam with 2/3 correct answers (no improvement) const res2 = await submitExam(examWithTwoCorrect); const user2 = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { id: defaultUserId } }); // should not update user progress expect(user2.completedChallenges).toEqual(user1.completedChallenges); expect(user2.progressTimestamps).toEqual(user1.progressTimestamps); expect(res2.body).toMatchObject({ points: 1, alreadyCompleted: true, examResults: mockResultsTwoCorrect }); expect(res2.statusCode).toBe(200); }); test('POST updates user progress if exam is an improvement', async () => { // Submit exam with 2/3 correct answers await submitExam(examWithTwoCorrect); const user1 = await fastifyTestInstance.prisma.user.findUniqueOrThrow( { where: { id: defaultUserId } } );\n\n// Submit improved exam\n          const res = await submitExam(examWithAllCorrect);\n\nconst user2 = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\n// should update existing completedChallenge\n          expect(user2.completedChallenges).toHaveLength(2);\n          expect(user2.completedChallenges).toMatchObject([\n            ...completedTrophyChallenges,\n            completedExamChallengeAllCorrect\n          ]);\n          expect(user2.completedChallenges[1]?.completedDate).toEqual(\n            user1.completedChallenges[1]?.completedDate\n          );\n\n// they have not completed anything new, so progressTimestamps should\n          // remain the same\n          expect(user2.progressTimestamps).toEqual(user1.progressTimestamps);\n\nexpect(res.body).toMatchObject({\n            points: 1,\n            alreadyCompleted: true,\n            examResults: mockResultsAllCorrect\n          });\n          expect(res.statusCode).toBe(200);\n        });\n      });\n    });\n\ndescribe('/submit-quiz-attempt', () => {\n      describe('validation', () => {\n        test('POST rejects requests without challengeId', async () => {\n          const response = await superPost('/submit-quiz-attempt').send({\n            quizId: 'id'\n          });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message:\n              'That does not appear to be a valid quiz attempt submission.'\n          });\n          expect(response.statusCode).toBe(400);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 45,
    "total_chunks": 50
  },
  {
    "id": "5e6088673c921c7fd24eda799d262ffd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "...completedTrophyChallenges, completedExamChallengeAllCorrect ]); expect(user2.completedChallenges[1]?.completedDate).toEqual( user1.completedChallenges[1]?.completedDate ); // they have not completed anything new, so progressTimestamps should // remain the same expect(user2.progressTimestamps).toEqual(user1.progressTimestamps); expect(res.body).toMatchObject({ points: 1, alreadyCompleted: true, examResults: mockResultsAllCorrect }); expect(res.statusCode).toBe(200); }); }); }); describe('/submit-quiz-attempt', () => { describe('validation', () => { test('POST rejects requests without challengeId', async () => { const response = await superPost('/submit-quiz-attempt').send({ quizId: 'id' }); expect(response.body).toStrictEqual({ type: 'error', message: 'That does not appear to be a valid quiz attempt submission.' }); expect(response.statusCode).toBe(400); });\n\ntest('POST rejects requests without quizId', async () => {\n          const response = await superPost('/submit-quiz-attempt').send({\n            challengeId: '66df3b712c41c499e9d31e5b'\n          });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message:\n              'That does not appear to be a valid quiz attempt submission.'\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\ntest('POST rejects requests without valid ObjectID', async () => {\n          const response = await superPost('/submit-quiz-attempt').send({\n            challengeId: 'not-a-valid-id'\n          });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message:\n              'That does not appear to be a valid quiz attempt submission.'\n          });\n          expect(response.statusCode).toBe(400);\n        });\n      });\n\ndescribe('handling', () => {\n        beforeAll(() => {\n          jest.useFakeTimers({\n            doNotFake: ['nextTick']\n          });\n          jest.setSystemTime(DATE_NOW);\n        });\n\nafterAll(() => {\n          jest.useRealTimers();\n        });\n\nafterEach(async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { email: 'foo@bar.com' },\n            data: {\n              completedChallenges: [],\n              quizAttempts: []\n            }\n          });\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 46,
    "total_chunks": 50
  },
  {
    "id": "6395a32af71f4b4f7c57fbebcdd8ff70",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "}); test('POST rejects requests without valid ObjectID', async () => { const response = await superPost('/submit-quiz-attempt').send({ challengeId: 'not-a-valid-id' }); expect(response.body).toStrictEqual({ type: 'error', message: 'That does not appear to be a valid quiz attempt submission.' }); expect(response.statusCode).toBe(400); }); }); describe('handling', () => { beforeAll(() => { jest.useFakeTimers({ doNotFake: ['nextTick'] }); jest.setSystemTime(DATE_NOW); }); afterAll(() => { jest.useRealTimers(); }); afterEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: 'foo@bar.com' }, data: { completedChallenges: [], quizAttempts: [] } }); });\n\ntest('POST adds new attempt to quizAttempts', async () => {\n          const response = await superPost('/submit-quiz-attempt').send({\n            challengeId: '66df3b712c41c499e9d31e5b',\n            quizId: '0'\n          });\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nexpect(user).toMatchObject({\n            quizAttempts: [\n              {\n                challengeId: '66df3b712c41c499e9d31e5b',\n                quizId: '0',\n                timestamp: DATE_NOW\n              }\n            ]\n          });\n\nexpect(response.statusCode).toBe(200);\n          expect(response.body).toStrictEqual({});\n        });\n\ntest('POST updates the timestamp of the existing attempt', async () => {\n          await fastifyTestInstance.prisma.user.updateMany({\n            where: { id: defaultUserId },\n            data: {\n              quizAttempts: [\n                {\n                  challengeId: '66df3b712c41c499e9d31e5b', // quiz-basic-html\n                  quizId: '0',\n                  timestamp: EXISTING_COMPLETED_DATE\n                },\n                {\n                  challengeId: '66ed903cf45ce3ece4053ebe', // quiz-semantic-html\n                  quizId: '1',\n                  timestamp: EXISTING_COMPLETED_DATE\n                }\n              ]\n            }\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 47,
    "total_chunks": 50
  },
  {
    "id": "a9536f8d97854041a902e56b47138172",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "quizId: '0' }); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); expect(user).toMatchObject({ quizAttempts: [ { challengeId: '66df3b712c41c499e9d31e5b', quizId: '0', timestamp: DATE_NOW } ] }); expect(response.statusCode).toBe(200); expect(response.body).toStrictEqual({}); }); test('POST updates the timestamp of the existing attempt', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { id: defaultUserId }, data: { quizAttempts: [ { challengeId: '66df3b712c41c499e9d31e5b', // quiz-basic-html quizId: '0', timestamp: EXISTING_COMPLETED_DATE }, { challengeId: '66ed903cf45ce3ece4053ebe', // quiz-semantic-html quizId: '1', timestamp: EXISTING_COMPLETED_DATE } ] } });\n\nconst response = await superPost('/submit-quiz-attempt').send({\n            challengeId: '66df3b712c41c499e9d31e5b',\n            quizId: '1'\n          });\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n            where: { email: 'foo@bar.com' }\n          });\n\nexpect(user).toMatchObject({\n            quizAttempts: [\n              {\n                challengeId: '66df3b712c41c499e9d31e5b',\n                quizId: '1',\n                timestamp: DATE_NOW\n              },\n              {\n                challengeId: '66ed903cf45ce3ece4053ebe',\n                quizId: '1',\n                timestamp: EXISTING_COMPLETED_DATE\n              }\n            ]\n          });\n\nexpect(response.statusCode).toBe(200);\n          expect(response.body).toStrictEqual({});\n        });\n      });\n    });\n  });\n\ndescribe('Unauthenticated user', () => {\n    let setCookies: string[];\n\n// Get the CSRF cookies from an unprotected route\n    beforeAll(async () => {\n      const res = await superRequest('/status/ping', { method: 'GET' });\n      setCookies = res.get('Set-Cookie');\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 48,
    "total_chunks": 50
  },
  {
    "id": "b68913ef22c6a216dcf7304723de176b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
    "source_type": "git_repo",
    "title": "challenge.test",
    "content": "'66df3b712c41c499e9d31e5b', quizId: '1' }); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: 'foo@bar.com' } }); expect(user).toMatchObject({ quizAttempts: [ { challengeId: '66df3b712c41c499e9d31e5b', quizId: '1', timestamp: DATE_NOW }, { challengeId: '66ed903cf45ce3ece4053ebe', quizId: '1', timestamp: EXISTING_COMPLETED_DATE } ] }); expect(response.statusCode).toBe(200); expect(response.body).toStrictEqual({}); }); }); }); }); describe('Unauthenticated user', () => { let setCookies: string[]; // Get the CSRF cookies from an unprotected route beforeAll(async () => { const res = await superRequest('/status/ping', { method: 'GET' }); setCookies = res.get('Set-Cookie'); });\n\nconst endpoints: { path: string; method: 'POST' | 'GET' }[] = [\n      // { path: '/coderoad-challenge-completed', method: 'POST' },\n      { path: '/project-completed', method: 'POST' },\n      { path: '/backend-challenge-completed', method: 'POST' },\n      { path: '/modern-challenge-completed', method: 'POST' },\n      { path: '/daily-coding-challenge-completed', method: 'POST' },\n      { path: '/save-challenge', method: 'POST' },\n      { path: '/exam/647e22d18acb466c97ccbef8', method: 'GET' },\n      { path: '/ms-trophy-challenge-completed', method: 'POST' },\n      { path: '/exam-challenge-completed', method: 'POST' }\n    ];\n\nendpoints.forEach(({ path, method }) => {\n      test(`${method} ${path} returns 401 status code with error message`, async () => {\n        const response = await superRequest(path, {\n          method,\n          setCookies\n        });\n        expect(response.statusCode).toBe(401);\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71104,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\challenge.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 49,
    "total_chunks": 50
  },
  {
    "id": "d077685fbb9008996f6a0430fe351e6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "export * from './certificate';\nexport * from './challenge';\nexport * from './donate';\nexport * from './settings';\nexport * from './user';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 138,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 31,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "330dee1c9b103335f2a5d878057dd14e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport Stripe from 'stripe';\n\nimport * as schemas from '../../schemas';\nimport { donationSubscriptionConfig } from '../../../../shared/config/donation-settings';\nimport { STRIPE_SECRET_KEY, HOME_LOCATION } from '../../utils/env';\n\n/**\n * Plugin for the donation endpoints requiring auth.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const donateRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  // Stripe plugin\n  const stripe = new Stripe(STRIPE_SECRET_KEY, {\n    apiVersion: '2024-06-20',\n    typescript: true\n  });\n\nfastify.put(\n    '/donate/update-stripe-card',\n    {\n      schema: schemas.updateStripeCard\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      const donation = await fastify.prisma.donation.findFirst({\n        where: { userId: req.user?.id, provider: 'stripe' }\n      });\n      if (!donation) {\n        logger.error(`Stripe donation record not found: ${req.user?.id}`);\n        throw Error(`Stripe donation record not found: ${req.user?.id}`);\n      }\n      const { customerId, subscriptionId } = donation;\n      const session = await stripe.checkout.sessions.create({\n        payment_method_types: ['card'],\n        mode: 'setup',\n        customer: customerId,\n        setup_intent_data: {\n          metadata: {\n            customer_id: customerId,\n            subscription_id: subscriptionId\n          }\n        },\n        success_url: `${HOME_LOCATION}/update-stripe-card?session_id={CHECKOUT_SESSION_ID}`,\n        cancel_url: `${HOME_LOCATION}/update-stripe-card`\n      });\n      logger.info(`Stripe session created for user: ${req.user?.id}`);\n      return { sessionId: session.id } as const;\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7612,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "becf13804dab086ddfa350e80b939764",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "= await fastify.prisma.donation.findFirst({ where: { userId: req.user?.id, provider: 'stripe' } }); if (!donation) { logger.error(`Stripe donation record not found: ${req.user?.id}`); throw Error(`Stripe donation record not found: ${req.user?.id}`); } const { customerId, subscriptionId } = donation; const session = await stripe.checkout.sessions.create({ payment_method_types: ['card'], mode: 'setup', customer: customerId, setup_intent_data: { metadata: { customer_id: customerId, subscription_id: subscriptionId } }, success_url: `${HOME_LOCATION}/update-stripe-card?session_id={CHECKOUT_SESSION_ID}`, cancel_url: `${HOME_LOCATION}/update-stripe-card` }); logger.info(`Stripe session created for user: ${req.user?.id}`); return { sessionId: session.id } as const; } );\n\nfastify.post(\n    '/donate/add-donation',\n    {\n      schema: schemas.addDonation\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        const user = await fastify.prisma.user.findUnique({\n          where: { id: req.user?.id }\n        });\n\nif (user?.isDonating) {\n          logger.info(`User ${req.user?.id} is already donating.`);\n          void reply.code(400);\n          return {\n            type: 'info',\n            message: 'User is already donating.'\n          } as const;\n        }\n\nawait fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            isDonating: true\n          }\n        });\n\nlogger.info(`User ${req.user?.id} is now donating`);\n\nreturn {\n          isDonating: true\n        } as const;\n      } catch (error) {\n        logger.error(error, `User ${req.user?.id} failed to donate`);\n        fastify.Sentry.captureException(error);\n        void reply.code(500);\n        return {\n          type: 'danger',\n          message: 'Something went wrong.'\n        } as const;\n      }\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7612,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "722d10ef19762da8b5b09b07494cd696",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "}); if (user?.isDonating) { logger.info(`User ${req.user?.id} is already donating.`); void reply.code(400); return { type: 'info', message: 'User is already donating.' } as const; } await fastify.prisma.user.update({ where: { id: req.user?.id }, data: { isDonating: true } }); logger.info(`User ${req.user?.id} is now donating`); return { isDonating: true } as const; } catch (error) { logger.error(error, `User ${req.user?.id} failed to donate`); fastify.Sentry.captureException(error); void reply.code(500); return { type: 'danger', message: 'Something went wrong.' } as const; } } );\n\nfastify.post(\n    '/donate/charge-stripe-card',\n    {\n      schema: schemas.chargeStripeCard\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        const { paymentMethodId, amount, duration } = req.body;\n        const id = req.user!.id;\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n          where: { id }\n        });\n\nconst { email, name } = user;\n\nif (!email) {\n          logger.warn(`User ${id} has no email`);\n          void reply.code(403);\n          return reply.send({\n            error: {\n              type: 'EmailRequiredError',\n              message: 'User has not provided an email address'\n            }\n          });\n        }\n        const threeChallengesCompleted = user.completedChallenges.length >= 3;\n\nif (!threeChallengesCompleted) {\n          logger.warn(\n            `User ${id} has tried to donate before completing 3 challenges`\n          );\n          void reply.code(400);\n          return {\n            error: {\n              type: 'MethodRestrictionError',\n              message: `Donate using another method`\n            }\n          } as const;\n        }\n\nif (user.isDonating) {\n          logger.info(`User ${id} is already donating.`);\n          void reply.code(400);\n          return reply.send({\n            error: {\n              type: 'AlreadyDonatingError',\n              message: 'User is already donating.'\n            }\n          });\n        }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7612,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "94018a5eeb20b0963b915be0b3983cba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "type: 'EmailRequiredError', message: 'User has not provided an email address' } }); } const threeChallengesCompleted = user.completedChallenges.length >= 3; if (!threeChallengesCompleted) { logger.warn( `User ${id} has tried to donate before completing 3 challenges` ); void reply.code(400); return { error: { type: 'MethodRestrictionError', message: `Donate using another method` } } as const; } if (user.isDonating) { logger.info(`User ${id} is already donating.`); void reply.code(400); return reply.send({ error: { type: 'AlreadyDonatingError', message: 'User is already donating.' } }); }\n\n// Create Stripe Customer\n        const { id: customerId } = await stripe.customers.create({\n          email,\n          payment_method: paymentMethodId,\n          invoice_settings: { default_payment_method: paymentMethodId },\n          ...(name && { name })\n        });\n\n// //Create Stripe Subscription\n        const plan = `${donationSubscriptionConfig.duration[\n          duration\n        ].toLowerCase()}-donation-${amount}`;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7612,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "230918236eca12c9318e52ba9b883156",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "return { error: { type: 'MethodRestrictionError', message: `Donate using another method` } } as const; } if (user.isDonating) { logger.info(`User ${id} is already donating.`); void reply.code(400); return reply.send({ error: { type: 'AlreadyDonatingError', message: 'User is already donating.' } }); } // Create Stripe Customer const { id: customerId } = await stripe.customers.create({ email, payment_method: paymentMethodId, invoice_settings: { default_payment_method: paymentMethodId }, ...(name && { name }) }); // //Create Stripe Subscription const plan = `${donationSubscriptionConfig.duration[ duration ].toLowerCase()}-donation-${amount}`;\n\nconst {\n          id: subscriptionId,\n          latest_invoice: {\n            // For older api versions, @ts-ignore is recommended by Stripe. More info: https://github.com/stripe/stripe-node/blob/fe81d1f28064c9b468c7b380ab09f7a93054ba63/README.md?plain=1#L91\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore stripe-version-2019-10-17\n            payment_intent: { client_secret, status }\n          }\n        } = await stripe.subscriptions.create({\n          customer: customerId,\n          payment_behavior: 'allow_incomplete',\n          items: [{ plan }],\n          expand: ['latest_invoice.payment_intent']\n        });\n        if (status === 'requires_source_action') {\n          logger.info(`User ${id} payment requires user action`);\n          void reply.code(402);\n          return reply.send({\n            error: {\n              type: 'UserActionRequired',\n              message: 'Payment requires user action',\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              client_secret\n            }\n          });\n        } else if (status === 'requires_source') {\n          logger.info(`User ${id} payment declined`);\n          void reply.code(402);\n          return reply.send({\n            error: {\n              type: 'PaymentMethodRequired',\n              message: 'Card has been declined'\n            }\n          });\n        }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7612,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "f6efdc7730786f5a34de8da0c8a32a2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "client_secret, status } } } = await stripe.subscriptions.create({ customer: customerId, payment_behavior: 'allow_incomplete', items: [{ plan }], expand: ['latest_invoice.payment_intent'] }); if (status === 'requires_source_action') { logger.info(`User ${id} payment requires user action`); void reply.code(402); return reply.send({ error: { type: 'UserActionRequired', message: 'Payment requires user action', // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment client_secret } }); } else if (status === 'requires_source') { logger.info(`User ${id} payment declined`); void reply.code(402); return reply.send({ error: { type: 'PaymentMethodRequired', message: 'Card has been declined' } }); }\n\n// update record in database\n        const donation = {\n          userId: id,\n          email,\n          amount,\n          duration,\n          provider: 'stripe',\n          subscriptionId,\n          customerId: customerId,\n          // TODO(Post-MVP) migrate to startDate: new Date()\n          startDate: {\n            date: new Date().toISOString(),\n            when: new Date().toISOString().replace(/.$/, '+00:00')\n          }\n        };\n\nawait fastify.prisma.donation.create({\n          data: donation\n        });\n\nawait fastify.prisma.user.update({\n          where: { id },\n          data: {\n            isDonating: true\n          }\n        });\n\nlogger.info(`User ${id} has successfully donated`);\n\nreturn reply.send({\n          type: 'success',\n          isDonating: true\n        });\n      } catch (error) {\n        logger.error(error, `User ${req.user?.id} failed to donate`);\n        fastify.Sentry.captureException(error);\n        void reply.code(500);\n        return reply.send({\n          error: 'Donation failed due to a server error.'\n        });\n      }\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7612,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "f75224e665c5996b1102ec3ebbd527ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport {\n  devLogin,\n  setupServer,\n  superRequest,\n  createSuperRequest,\n  defaultUserId,\n  defaultUserEmail\n} from '../../../jest.utils';\nimport { formatMessage } from '../../plugins/redirect-with-message';\nimport { createUserInput } from '../../utils/create-user';\nimport { API_LOCATION, HOME_LOCATION } from '../../utils/env';\nimport {\n  isPictureWithProtocol,\n  getWaitMessage,\n  validateSocialUrl\n} from './settings';\n\nconst baseProfileUI = {\n  isLocked: false,\n  showAbout: false,\n  showCerts: false,\n  showDonation: false,\n  showHeatMap: false,\n  showLocation: false,\n  showName: false,\n  showPoints: false,\n  showPortfolio: false,\n  showTimeLine: false\n};\n\nconst profileUI = {\n  ...baseProfileUI,\n  isLocked: true,\n  showAbout: true,\n  showDonation: true,\n  showLocation: true,\n  showName: true,\n  showPortfolio: true\n};\n\nconst developerUserEmail = 'foo@bar.com';\nconst otherDeveloperUserEmail = 'bar@bar.com';\nconst unusedEmailOne = 'nobody@would.com';\nconst unusedEmailTwo = 'would@they.com';\n\nconst updateErrorResponse = {\n  type: 'danger',\n  message: 'flash.wrong-updating'\n};\n\ndescribe('settingRoutes', () => {\n  setupServer();\n\ndescribe('Authenticated user', () => {\n    let superPut: ReturnType<typeof createSuperRequest>;\n    let superGet: ReturnType<typeof createSuperRequest>;\n\n// Authenticate user\n    beforeAll(async () => {\n      const setCookies = await devLogin();\n      superPut = createSuperRequest({ method: 'PUT', setCookies });\n      superGet = createSuperRequest({ method: 'GET', setCookies });\n      // This is not strictly necessary, since the defaultUser has this\n      // profileUI, but we're interested in how the profileUI is updated. As\n      // such, setting this explicitly isolates these tests.\n      await fastifyTestInstance.prisma.user.updateMany({\n        where: { email: developerUserEmail },\n        data: { profileUI: baseProfileUI }\n      });\n\nconst otherUser = await fastifyTestInstance.prisma.user.findFirst({\n        where: { email: otherDeveloperUserEmail }\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 30
  },
  {
    "id": "b46fd152e70029b43176d339653b7e71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "=> { const setCookies = await devLogin(); superPut = createSuperRequest({ method: 'PUT', setCookies }); superGet = createSuperRequest({ method: 'GET', setCookies }); // This is not strictly necessary, since the defaultUser has this // profileUI, but we're interested in how the profileUI is updated. As // such, setting this explicitly isolates these tests. await fastifyTestInstance.prisma.user.updateMany({ where: { email: developerUserEmail }, data: { profileUI: baseProfileUI } }); const otherUser = await fastifyTestInstance.prisma.user.findFirst({ where: { email: otherDeveloperUserEmail } });\n\nif (!otherUser) {\n        await fastifyTestInstance.prisma.user.create({\n          data: createUserInput(otherDeveloperUserEmail)\n        });\n      }\n    });\n\ndescribe('/confirm-email', () => {\n      const defaultErrorMessage = {\n        type: 'danger',\n        content:\n          'Oops! Something went wrong. Please try again in a moment or contact support@freecodecamp.org if the error persists.'\n      } as const;\n\nconst successMessage = {\n        type: 'success',\n        content: 'flash.email-valid'\n      } as const;\n\nconst validToken =\n        '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGy';\n      // This is a valid id for a token, but it doesn't exist in the database\n      const validButMissingToken =\n        '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGY';\n      const tokenWithMissingUser =\n        '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGH';\n      const expiredToken =\n        '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGE';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 30
  },
  {
    "id": "b044cda653a4488c4b8cef86d4ace41a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "} }); describe('/confirm-email', () => { const defaultErrorMessage = { type: 'danger', content: 'Oops! Something went wrong. Please try again in a moment or contact support@freecodecamp.org if the error persists.' } as const; const successMessage = { type: 'success', content: 'flash.email-valid' } as const; const validToken = '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGy'; // This is a valid id for a token, but it doesn't exist in the database const validButMissingToken = '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGY'; const tokenWithMissingUser = '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGH'; const expiredToken = '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGE';\n\nconst tokens = [validToken, tokenWithMissingUser, expiredToken];\n      const newEmail = 'anything@goes.com';\n      const encodedEmail = Buffer.from(newEmail).toString('base64');\n      const notEmail = Buffer.from('foobar.com').toString('base64');\n\nbeforeEach(async () => {\n        await fastifyTestInstance.prisma.authToken.create({\n          data: {\n            created: new Date(),\n            id: validToken,\n            ttl: 1000,\n            userId: defaultUserId\n          }\n        });\n\nawait fastifyTestInstance.prisma.authToken.create({\n          data: {\n            created: new Date(),\n            id: tokenWithMissingUser,\n            ttl: 1000,\n            // Random ObjectId\n            userId: '6650ac23ccc46c0349a86dee'\n          }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 2,
    "total_chunks": 30
  },
  {
    "id": "d503415601211e4f056915176a220573",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "a token, but it doesn't exist in the database const validButMissingToken = '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGY'; const tokenWithMissingUser = '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGH'; const expiredToken = '4kZFEVHChxzY7kX1XSzB4uhh8fcUwcqAGWV9hv25hsI6nviVlwzXCv2YE9lENYGE'; const tokens = [validToken, tokenWithMissingUser, expiredToken]; const newEmail = 'anything@goes.com'; const encodedEmail = Buffer.from(newEmail).toString('base64'); const notEmail = Buffer.from('foobar.com').toString('base64'); beforeEach(async () => { await fastifyTestInstance.prisma.authToken.create({ data: { created: new Date(), id: validToken, ttl: 1000, userId: defaultUserId } }); await fastifyTestInstance.prisma.authToken.create({ data: { created: new Date(), id: tokenWithMissingUser, ttl: 1000, // Random ObjectId userId: '6650ac23ccc46c0349a86dee' } });\n\nawait fastifyTestInstance.prisma.authToken.create({\n          data: {\n            created: new Date(Date.now() - 1000),\n            id: expiredToken,\n            ttl: 1000,\n            userId: defaultUserId\n          }\n        });\n\n// We expect these properties to be changed by the endpoint, so they\n        // need to be set so that change can be confirmed.\n        await fastifyTestInstance.prisma.user.update({\n          where: { id: defaultUserId },\n          data: {\n            newEmail,\n            emailVerified: false,\n            emailVerifyTTL: new Date(),\n            emailAuthLinkTTL: new Date()\n          }\n        });\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 3,
    "total_chunks": 30
  },
  {
    "id": "23459a866d9cb96279017c189fc7f3f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "created: new Date(), id: tokenWithMissingUser, ttl: 1000, // Random ObjectId userId: '6650ac23ccc46c0349a86dee' } }); await fastifyTestInstance.prisma.authToken.create({ data: { created: new Date(Date.now() - 1000), id: expiredToken, ttl: 1000, userId: defaultUserId } }); // We expect these properties to be changed by the endpoint, so they // need to be set so that change can be confirmed. await fastifyTestInstance.prisma.user.update({ where: { id: defaultUserId }, data: { newEmail, emailVerified: false, emailVerifyTTL: new Date(), emailAuthLinkTTL: new Date() } }); });\n\nafterEach(async () => {\n        await fastifyTestInstance.prisma.authToken.deleteMany({\n          where: { id: { in: tokens } }\n        });\n        await fastifyTestInstance.prisma.user.update({\n          where: { id: defaultUserId },\n          data: { newEmail: null, email: defaultUserEmail, emailVerified: true }\n        });\n      });\n\nit('should reject requests without params', async () => {\n        const resNoParams = await superGet('/confirm-email');\n\nexpect(resNoParams.headers.location).toBe(\n          `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage)\n        );\n        expect(resNoParams.status).toBe(302);\n      });\n\nit('should reject requests which have an invalid token param', async () => {\n        const res = await superGet(\n          // token should be 64 characters long\n          `/confirm-email?email=${encodedEmail}&token=tooshort`\n        );\n\nexpect(res.headers.location).toBe(\n          `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage)\n        );\n        expect(res.status).toBe(302);\n      });\n\nit('should reject requests which have an invalid email param', async () => {\n        const res = await superGet(\n          `/confirm-email?email=${notEmail}&token=${validToken}`\n        );\n\nexpect(res.headers.location).toBe(\n          `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage)\n        );\n        expect(res.status).toBe(302);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 4,
    "total_chunks": 30
  },
  {
    "id": "56309ed589d7a8dcc534f927da29078b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "() => { const resNoParams = await superGet('/confirm-email'); expect(resNoParams.headers.location).toBe( `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage) ); expect(resNoParams.status).toBe(302); }); it('should reject requests which have an invalid token param', async () => { const res = await superGet( // token should be 64 characters long `/confirm-email?email=${encodedEmail}&token=tooshort` ); expect(res.headers.location).toBe( `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage) ); expect(res.status).toBe(302); }); it('should reject requests which have an invalid email param', async () => { const res = await superGet( `/confirm-email?email=${notEmail}&token=${validToken}` ); expect(res.headers.location).toBe( `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage) ); expect(res.status).toBe(302); });\n\nit('should reject requests when the auth token is not in the database', async () => {\n        const res = await superGet(\n          `/confirm-email?email=${encodedEmail}&token=${validButMissingToken}`\n        );\n\nexpect(res.headers.location).toBe(\n          `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage)\n        );\n        expect(res.status).toBe(302);\n      });\n\nit('should reject requests when the auth token exists, but the user does not', async () => {\n        const res = await superGet(\n          `/confirm-email?email=${encodedEmail}&token=${validButMissingToken}`\n        );\n\nexpect(res.headers.location).toBe(\n          `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage)\n        );\n        expect(res.status).toBe(302);\n      });\n\n// TODO(Post-MVP): there's no need to keep the auth token around if,\n      // somehow, the user is missing\n      it.todo(\n        'should delete the auth token if there is no user associated with it'\n      );\n\nit('should reject requests when the email param is different from user.newEmail', async () => {\n        await fastifyTestInstance.prisma.user.update({\n          where: { id: defaultUserId },\n          data: { newEmail: 'an@oth.er' }\n        });\n\nconst res = await superGet(\n          `/confirm-email?email=${encodedEmail}&token=${validToken}`\n        );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 5,
    "total_chunks": 30
  },
  {
    "id": "97909f74ec1a52299c86f865838c5cdb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "); expect(res.headers.location).toBe( `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage) ); expect(res.status).toBe(302); }); // TODO(Post-MVP): there's no need to keep the auth token around if, // somehow, the user is missing it.todo( 'should delete the auth token if there is no user associated with it' ); it('should reject requests when the email param is different from user.newEmail', async () => { await fastifyTestInstance.prisma.user.update({ where: { id: defaultUserId }, data: { newEmail: 'an@oth.er' } }); const res = await superGet( `/confirm-email?email=${encodedEmail}&token=${validToken}` );\n\nexpect(res.headers.location).toBe(\n          `${HOME_LOCATION}?` + formatMessage(defaultErrorMessage)\n        );\n        expect(res.status).toBe(302);\n      });\n\nit('should reject requests if the auth token has expired', async () => {\n        const res = await superGet(\n          `/confirm-email?email=${encodedEmail}&token=${expiredToken}`\n        );\n\nexpect(res.headers.location).toBe(\n          `${HOME_LOCATION}?` +\n            formatMessage({\n              content:\n                'The link to confirm your new email address has expired. Please try again.',\n              type: 'info'\n            })\n        );\n        expect(res.status).toBe(302);\n      });\n\nit('should update the user email', async () => {\n        const res = await superGet(\n          `/confirm-email?email=${encodedEmail}&token=${validToken}`\n        );\n        const user = await fastifyTestInstance.prisma.user.findUniqueOrThrow({\n          where: { id: defaultUserId }\n        });\n\nexpect(res.headers.location).toBe(\n          `${HOME_LOCATION}?` + formatMessage(successMessage)\n        );\n        expect(user.email).toBe(newEmail);\n      });\n\nit('should clean up the user record', async () => {\n        await superGet(\n          `/confirm-email?email=${encodedEmail}&token=${validToken}`\n        );\n\nconst user = await fastifyTestInstance.prisma.user.findUniqueOrThrow({\n          where: { id: defaultUserId }\n        });\n\nexpect(user.newEmail).toBeNull();\n        expect(user.emailVerified).toBe(true);\n        expect(user.emailVerifyTTL).toBeNull();\n        expect(user.emailAuthLinkTTL).toBeNull();\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 6,
    "total_chunks": 30
  },
  {
    "id": "460f026925af630a2ca89e09c30ebd12",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "address has expired. Please try again.', type: 'info' }) ); expect(res.status).toBe(302); }); it('should update the user email', async () => { const res = await superGet( `/confirm-email?email=${encodedEmail}&token=${validToken}` ); const user = await fastifyTestInstance.prisma.user.findUniqueOrThrow({ where: { id: defaultUserId } }); expect(res.headers.location).toBe( `${HOME_LOCATION}?` + formatMessage(successMessage) ); expect(user.email).toBe(newEmail); }); it('should clean up the user record', async () => { await superGet( `/confirm-email?email=${encodedEmail}&token=${validToken}` ); const user = await fastifyTestInstance.prisma.user.findUniqueOrThrow({ where: { id: defaultUserId } }); expect(user.newEmail).toBeNull(); expect(user.emailVerified).toBe(true); expect(user.emailVerifyTTL).toBeNull(); expect(user.emailAuthLinkTTL).toBeNull(); });\n\nit('should remove the auth token on success', async () => {\n        await superGet(\n          `/confirm-email?email=${encodedEmail}&token=${validToken}`\n        );\n\nconst authToken = await fastifyTestInstance.prisma.authToken.findUnique(\n          {\n            where: { id: validToken }\n          }\n        );\n\nexpect(authToken).toBeNull();\n      });\n    });\n\ndescribe('/update-my-profileui', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-profileui').send({\n          profileUI\n        });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: developerUserEmail }\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.privacy-updated',\n          type: 'success'\n        });\n        expect(user?.profileUI).toEqual(profileUI);\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest('PUT ignores invalid keys', async () => {\n        const response = await superPut('/update-my-profileui').send({\n          profileUI: {\n            ...profileUI,\n            invalidKey: 'invalidValue'\n          }\n        });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: developerUserEmail }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 7,
    "total_chunks": 30
  },
  {
    "id": "82fd3a0cc1a3512d94bb60f8227e62ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "}); }); describe('/update-my-profileui', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-profileui').send({ profileUI }); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: developerUserEmail } }); expect(response.body).toEqual({ message: 'flash.privacy-updated', type: 'success' }); expect(user?.profileUI).toEqual(profileUI); expect(response.statusCode).toEqual(200); }); test('PUT ignores invalid keys', async () => { const response = await superPut('/update-my-profileui').send({ profileUI: { ...profileUI, invalidKey: 'invalidValue' } }); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: developerUserEmail } });\n\nexpect(user?.profileUI).toEqual(profileUI);\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest('PUT returns 400 status code with missing keys', async () => {\n        const response = await superPut('/update-my-profileui').send({\n          profileUI: {\n            isLocked: true,\n            showName: true,\n            showPoints: false,\n            showPortfolio: true,\n            showTimeLine: false\n          }\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-email', () => {\n      let sendEmailSpy: jest.SpyInstance;\n      beforeEach(async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: developerUserEmail },\n          data: {\n            newEmail: null,\n            emailVerified: true,\n            emailVerifyTTL: null,\n            emailAuthLinkTTL: null\n          }\n        });\n\nsendEmailSpy = jest\n          .spyOn(fastifyTestInstance, 'sendEmail')\n          .mockImplementationOnce(jest.fn());\n      });\n\nafterEach(async () => {\n        jest.clearAllMocks();\n        await fastifyTestInstance.prisma.authToken.deleteMany({\n          where: { userId: defaultUserId }\n        });\n      });\n      test('PUT returns 200 status code with \"info\" message', async () => {\n        const response = await superPut('/update-my-email').send({\n          email: 'foo@foo.com'\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 8,
    "total_chunks": 30
  },
  {
    "id": "dd296dbdbf80e58cc9a4dc1b4bd13214",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "}); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-email', () => { let sendEmailSpy: jest.SpyInstance; beforeEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: developerUserEmail }, data: { newEmail: null, emailVerified: true, emailVerifyTTL: null, emailAuthLinkTTL: null } }); sendEmailSpy = jest .spyOn(fastifyTestInstance, 'sendEmail') .mockImplementationOnce(jest.fn()); }); afterEach(async () => { jest.clearAllMocks(); await fastifyTestInstance.prisma.authToken.deleteMany({ where: { userId: defaultUserId } }); }); test('PUT returns 200 status code with \"info\" message', async () => { const response = await superPut('/update-my-email').send({ email: 'foo@foo.com' });\n\nexpect(response.body).toEqual({\n          message:\n            'Check your email and click the link we sent you to confirm your new email address.',\n          type: 'info'\n        });\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest(\"PUT updates the user's record in preparation for receiving auth email\", async () => {\n        const timeBefore = Date.now();\n        const response = await superPut('/update-my-email').send({\n          email: unusedEmailOne\n        });\n\nconst user = await fastifyTestInstance.prisma.user.findFirstOrThrow({\n          where: { email: developerUserEmail },\n          select: {\n            emailAuthLinkTTL: true,\n            emailVerifyTTL: true,\n            emailVerified: true,\n            newEmail: true\n          }\n        });\n\n// expect the emailVerifyTTL and emailAuthLinkTTL to be set to the current time\n        expect(user.emailVerifyTTL!.getTime()).toBeGreaterThan(timeBefore);\n        expect(user.emailVerifyTTL!.getTime()).toBeLessThan(Date.now());\n        expect(user.emailAuthLinkTTL!.getTime()).toBeGreaterThan(timeBefore);\n        expect(user.emailAuthLinkTTL!.getTime()).toBeLessThan(Date.now());\n\nexpect(user.emailVerified).toEqual(false);\n        expect(user.newEmail).toEqual(unusedEmailOne);\n        expect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 9,
    "total_chunks": 30
  },
  {
    "id": "557cce2dffd4b912b7fed47b9cbbe2ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "address.', type: 'info' }); expect(response.statusCode).toEqual(200); }); test(\"PUT updates the user's record in preparation for receiving auth email\", async () => { const timeBefore = Date.now(); const response = await superPut('/update-my-email').send({ email: unusedEmailOne }); const user = await fastifyTestInstance.prisma.user.findFirstOrThrow({ where: { email: developerUserEmail }, select: { emailAuthLinkTTL: true, emailVerifyTTL: true, emailVerified: true, newEmail: true } }); // expect the emailVerifyTTL and emailAuthLinkTTL to be set to the current time expect(user.emailVerifyTTL!.getTime()).toBeGreaterThan(timeBefore); expect(user.emailVerifyTTL!.getTime()).toBeLessThan(Date.now()); expect(user.emailAuthLinkTTL!.getTime()).toBeGreaterThan(timeBefore); expect(user.emailAuthLinkTTL!.getTime()).toBeLessThan(Date.now()); expect(user.emailVerified).toEqual(false); expect(user.newEmail).toEqual(unusedEmailOne); expect(response.statusCode).toEqual(200); });\n\ntest('PUT rejects invalid email addresses', async () => {\n        const response = await superPut('/update-my-email').send({\n          email: 'invalid'\n        });\n\n// We cannot use fastify's default validation failure response here\n        // because the client consumes the response and displays it to the user.\n        expect(response.body).toEqual({\n          type: 'danger',\n          message: 'Email format is invalid'\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT accepts requests to update to the current email address (ignoring case) if it is not verified', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: developerUserEmail },\n          data: { emailVerified: false }\n        });\n        const response = await superPut('/update-my-email').send({\n          email: developerUserEmail.toUpperCase()\n        });\n\nexpect(response.statusCode).toEqual(200);\n        expect(response.body).toEqual({\n          message:\n            'Check your email and click the link we sent you to confirm your new email address.',\n          type: 'info'\n        });\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 10,
    "total_chunks": 30
  },
  {
    "id": "bb7212727f01c6b93384a47ab6170bd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "expect(response.body).toEqual({ type: 'danger', message: 'Email format is invalid' }); expect(response.statusCode).toEqual(400); }); test('PUT accepts requests to update to the current email address (ignoring case) if it is not verified', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: developerUserEmail }, data: { emailVerified: false } }); const response = await superPut('/update-my-email').send({ email: developerUserEmail.toUpperCase() }); expect(response.statusCode).toEqual(200); expect(response.body).toEqual({ message: 'Check your email and click the link we sent you to confirm your new email address.', type: 'info' }); });\n\ntest('PUT rejects a request to update to the existing email (ignoring case) address', async () => {\n        const response = await superPut('/update-my-email').send({\n          email: developerUserEmail.toUpperCase()\n        });\n\nexpect(response.body).toEqual({\n          type: 'info',\n          message: `${developerUserEmail} is already associated with this account.\nYou can update a new email address instead.`\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT rejects a request to update to the same email (ignoring case) twice', async () => {\n        const successResponse = await superPut('/update-my-email').send({\n          email: unusedEmailOne\n        });\n\nexpect(successResponse.statusCode).toEqual(200);\n\nconst failResponse = await superPut('/update-my-email').send({\n          email: unusedEmailOne.toUpperCase()\n        });\n\nexpect(failResponse?.body).toEqual({\n          type: 'info',\n          message: `We have already sent an email confirmation request to ${unusedEmailOne}.\nPlease wait 5 minutes to resend an authentication link.`\n        });\n        expect(failResponse?.statusCode).toEqual(429);\n      });\n\ntest('PUT rejects a request if the new email is already in use', async () => {\n        const response = await superPut('/update-my-email').send({\n          email: otherDeveloperUserEmail\n        });\n\nexpect(response.body).toEqual({\n          type: 'info',\n          message: `${otherDeveloperUserEmail} is already associated with another account.`\n        });\n        expect(response.statusCode).toEqual(400);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 11,
    "total_chunks": 30
  },
  {
    "id": "d5baf4ada5cf96f8c7854fb445185228",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "email: unusedEmailOne }); expect(successResponse.statusCode).toEqual(200); const failResponse = await superPut('/update-my-email').send({ email: unusedEmailOne.toUpperCase() }); expect(failResponse?.body).toEqual({ type: 'info', message: `We have already sent an email confirmation request to ${unusedEmailOne}. Please wait 5 minutes to resend an authentication link.` }); expect(failResponse?.statusCode).toEqual(429); }); test('PUT rejects a request if the new email is already in use', async () => { const response = await superPut('/update-my-email').send({ email: otherDeveloperUserEmail }); expect(response.body).toEqual({ type: 'info', message: `${otherDeveloperUserEmail} is already associated with another account.` }); expect(response.statusCode).toEqual(400); });\n\ntest('PUT rejects the second request if is immediately after the first', async () => {\n        const successResponse = await superPut('/update-my-email').send({\n          email: unusedEmailOne\n        });\n\nexpect(successResponse.statusCode).toEqual(200);\n\nconst failResponse = await superPut('/update-my-email').send({\n          email: unusedEmailTwo\n        });\n\nexpect(failResponse?.statusCode).toEqual(429);\n\nexpect(failResponse?.body).toEqual({\n          type: 'info',\n          message: `Please wait 5 minutes to resend an authentication link.`\n        });\n      });\n\ntest('PUT sends an email to the new email address', async () => {\n        jest\n          .spyOn(fastifyTestInstance.prisma.authToken, 'create')\n          .mockImplementationOnce(() =>\n            // @ts-expect-error This is a mock implementation, all we're\n            // interested in is the id.\n            Promise.resolve({\n              id: '123'\n            })\n          );\n        await superPut('/update-my-email').send({\n          email: unusedEmailOne\n        });\n\nconst expectedLink = `${API_LOCATION}/confirm-email?email=${Buffer.from(unusedEmailOne).toString('base64')}&token=123&emailChange=true`;\n        expect(sendEmailSpy).toHaveBeenCalledWith({\n          from: 'team@freecodecamp.org',\n          to: unusedEmailOne,\n          subject:\n            'Please confirm your updated email address for freeCodeCamp.org',\n          text: `Please confirm this email address for freeCodeCamp.org:\n\n${expectedLink}\n\nHappy coding!",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 12,
    "total_chunks": 30
  },
  {
    "id": "0d9e8b325f691412ec0ab0c24e2001a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "authentication link.` }); }); test('PUT sends an email to the new email address', async () => { jest .spyOn(fastifyTestInstance.prisma.authToken, 'create') .mockImplementationOnce(() => // @ts-expect-error This is a mock implementation, all we're // interested in is the id. Promise.resolve({ id: '123' }) ); await superPut('/update-my-email').send({ email: unusedEmailOne }); const expectedLink = `${API_LOCATION}/confirm-email?email=${Buffer.from(unusedEmailOne).toString('base64')}&token=123&emailChange=true`; expect(sendEmailSpy).toHaveBeenCalledWith({ from: 'team@freecodecamp.org', to: unusedEmailOne, subject: 'Please confirm your updated email address for freeCodeCamp.org', text: `Please confirm this email address for freeCodeCamp.org: ${expectedLink} Happy coding!\n\n- The freeCodeCamp.org Team\n`\n        });\n      });\n\ntest('PUT creates an auth token record for the requesting user', async () => {\n        const noToken = await fastifyTestInstance.prisma.authToken.findFirst({\n          where: { userId: defaultUserId }\n        });\n        expect(noToken).toBeNull();\n\nawait superPut('/update-my-email').send({\n          email: unusedEmailOne\n        });\n\nconst token = await fastifyTestInstance.prisma.authToken.findFirst({\n          where: { userId: defaultUserId }\n        });\n\nexpect(token).toEqual({\n          ttl: 15 * 60 * 1000,\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          created: expect.any(Date),\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          id: expect.any(String),\n          userId: defaultUserId\n        });\n      });\n    });\n\ndescribe('/update-my-theme', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-theme').send({\n          theme: 'night'\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.updated-themes',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest('PUT returns 400 status code with invalid theme', async () => {\n        const response = await superPut('/update-my-theme').send({\n          theme: 'invalid'\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 13,
    "total_chunks": 30
  },
  {
    "id": "fbd87a851c8e91592a7e1efe8d69f975",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "} }); expect(token).toEqual({ ttl: 15 * 60 * 1000, // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment created: expect.any(Date), // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment id: expect.any(String), userId: defaultUserId }); }); }); describe('/update-my-theme', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-theme').send({ theme: 'night' }); expect(response.body).toEqual({ message: 'flash.updated-themes', type: 'success' }); expect(response.statusCode).toEqual(200); }); test('PUT returns 400 status code with invalid theme', async () => { const response = await superPut('/update-my-theme').send({ theme: 'invalid' });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-username', () => {\n      test('PUT returns an error when the username uses special characters', async () => {\n        const response = await superPut('/update-my-username').send({\n          username: 'twaha@'\n        });\n\nexpect(response.body).toEqual({\n          message: 'Username twaha@ contains invalid characters',\n          type: 'info'\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT returns an error when the username is an endpoint', async () => {\n        const response = await superPut('/update-my-username').send({\n          username: 'german'\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.username-taken',\n          type: 'info'\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT returns an error when the username is a bad word', async () => {\n        const response = await superPut('/update-my-username').send({\n          username: 'ass'\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.username-taken',\n          type: 'info'\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT returns an error when the username is a https status code', async () => {\n        const response = await superPut('/update-my-username').send({\n          username: '404'\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 14,
    "total_chunks": 30
  },
  {
    "id": "cb9fd44f42745644f3a5bd924992e8da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "endpoint', async () => { const response = await superPut('/update-my-username').send({ username: 'german' }); expect(response.body).toEqual({ message: 'flash.username-taken', type: 'info' }); expect(response.statusCode).toEqual(400); }); test('PUT returns an error when the username is a bad word', async () => { const response = await superPut('/update-my-username').send({ username: 'ass' }); expect(response.body).toEqual({ message: 'flash.username-taken', type: 'info' }); expect(response.statusCode).toEqual(400); }); test('PUT returns an error when the username is a https status code', async () => { const response = await superPut('/update-my-username').send({ username: '404' });\n\nexpect(response.body).toEqual({\n          message: 'Username 404 is a reserved error code',\n          type: 'info'\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT returns an error when the username is shorter than 3 characters', async () => {\n        const response = await superPut('/update-my-username').send({\n          username: 'fo'\n        });\n\nexpect(response.body).toEqual({\n          message: 'body/username must NOT have fewer than 3 characters',\n          type: 'info'\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-username').send({\n          username: 'TwaHa1'\n        });\n\nexpect(response.body).toStrictEqual({\n          message: 'flash.username-updated',\n          type: 'success',\n          variables: { username: 'TwaHa1' }\n        });\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: 'foo@bar.com' }\n        });\n\nexpect(user?.username).toEqual('twaha1');\n        expect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 15,
    "total_chunks": 30
  },
  {
    "id": "cc53c94f7adada546e4afa53f9ce97ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "shorter than 3 characters', async () => { const response = await superPut('/update-my-username').send({ username: 'fo' }); expect(response.body).toEqual({ message: 'body/username must NOT have fewer than 3 characters', type: 'info' }); expect(response.statusCode).toEqual(400); }); test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-username').send({ username: 'TwaHa1' }); expect(response.body).toStrictEqual({ message: 'flash.username-updated', type: 'success', variables: { username: 'TwaHa1' } }); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); expect(user?.username).toEqual('twaha1'); expect(response.statusCode).toEqual(200); });\n\ntest('PUT returns an error when the username is already used', async () => {\n        await fastifyTestInstance.prisma.user.create({\n          data: {\n            email: 'an@ran.dom',\n            username: 'sembauke',\n            about: 'about',\n            acceptedPrivacyTerms: true,\n            emailVerified: true,\n            externalId: 'externalId',\n            isDonating: true,\n            picture: 'picture',\n            sendQuincyEmail: true,\n            unsubscribeId: 'unsubscribeId'\n          }\n        });\n        await superPut('/update-my-username').send({ username: 'twaha2' });\n\nconst secondUpdate = await superPut('/update-my-username').send({\n          username: 'twaha2'\n        });\n\nexpect(secondUpdate.body).toEqual({\n          message: 'flash.username-used',\n          type: 'info'\n        });\n        expect(secondUpdate.statusCode).toEqual(400);\n\n// Not allowed because, while the usernameDisplay is different, the\n        // username is not\n        const existingUser = await superPut('/update-my-username').send({\n          username: 'SemBauke'\n        });\n\nexpect(existingUser.body).toEqual({\n          message: 'flash.username-taken',\n          type: 'info'\n        });\n        expect(existingUser.statusCode).toEqual(400);\n      });\n\ntest('PUT returns 200 status code with \"success\" message', async () => {\n        await superPut('/update-my-username').send({ username: 'twaha3' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 16,
    "total_chunks": 30
  },
  {
    "id": "a0695e62bf4f8100fd4e0eb3c754393c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "true, picture: 'picture', sendQuincyEmail: true, unsubscribeId: 'unsubscribeId' } }); await superPut('/update-my-username').send({ username: 'twaha2' }); const secondUpdate = await superPut('/update-my-username').send({ username: 'twaha2' }); expect(secondUpdate.body).toEqual({ message: 'flash.username-used', type: 'info' }); expect(secondUpdate.statusCode).toEqual(400); // Not allowed because, while the usernameDisplay is different, the // username is not const existingUser = await superPut('/update-my-username').send({ username: 'SemBauke' }); expect(existingUser.body).toEqual({ message: 'flash.username-taken', type: 'info' }); expect(existingUser.statusCode).toEqual(400); }); test('PUT returns 200 status code with \"success\" message', async () => { await superPut('/update-my-username').send({ username: 'twaha3' });\n\nconst response = await superPut('/update-my-username').send({\n          username: 'TWaha3'\n        });\n\nexpect(response.body).toStrictEqual({\n          message: 'flash.username-updated',\n          type: 'success',\n          variables: { username: 'TWaha3' }\n        });\n        expect(response.statusCode).toEqual(200);\n      });\n      test('PUT /update-my-username returns 400 status code when username is too long', async () => {\n        const username = 'a'.repeat(1001);\n        const response = await superPut('/update-my-username').send({\n          username\n        });\n\nexpect(response.body).toEqual({\n          message: 'body/username must NOT have more than 1000 characters',\n          type: 'info'\n        });\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-keyboard-shortcuts', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-keyboard-shortcuts').send({\n          keyboardShortcuts: true\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.keyboard-shortcut-updated',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 17,
    "total_chunks": 30
  },
  {
    "id": "c2e9960a0e795f475a25d4fa68d09f9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "expect(response.statusCode).toEqual(200); }); test('PUT /update-my-username returns 400 status code when username is too long', async () => { const username = 'a'.repeat(1001); const response = await superPut('/update-my-username').send({ username }); expect(response.body).toEqual({ message: 'body/username must NOT have more than 1000 characters', type: 'info' }); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-keyboard-shortcuts', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-keyboard-shortcuts').send({ keyboardShortcuts: true }); expect(response.body).toEqual({ message: 'flash.keyboard-shortcut-updated', type: 'success' }); expect(response.statusCode).toEqual(200); });\n\ntest('PUT returns 400 status code with invalid shortcuts setting', async () => {\n        const response = await superPut('/update-my-keyboard-shortcuts').send({\n          keyboardShortcuts: 'invalid'\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-socials', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-socials').send({\n          website: 'https://www.freecodecamp.org/',\n          twitter: 'https://twitter.com/ossia',\n          linkedin: 'https://www.linkedin.com/in/quincylarson',\n          githubProfile: 'https://github.com/QuincyLarson'\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.updated-socials',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest('PUT accepts empty strings for socials', async () => {\n        const response = await superPut('/update-my-socials').send({\n          website: 'https://www.freecodecamp.org/',\n          twitter: '',\n          linkedin: '',\n          githubProfile: ''\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.updated-socials',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 18,
    "total_chunks": 30
  },
  {
    "id": "64726a6a1130b94795f0c613b63a6582",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "'invalid' }); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-socials', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-socials').send({ website: 'https://www.freecodecamp.org/', twitter: 'https://twitter.com/ossia', linkedin: 'https://www.linkedin.com/in/quincylarson', githubProfile: 'https://github.com/QuincyLarson' }); expect(response.body).toEqual({ message: 'flash.updated-socials', type: 'success' }); expect(response.statusCode).toEqual(200); }); test('PUT accepts empty strings for socials', async () => { const response = await superPut('/update-my-socials').send({ website: 'https://www.freecodecamp.org/', twitter: '', linkedin: '', githubProfile: '' }); expect(response.body).toEqual({ message: 'flash.updated-socials', type: 'success' }); expect(response.statusCode).toEqual(200); });\n\ntest('PUT rejects non-url values', async () => {\n        const response = await superPut('/update-my-socials').send({\n          website: 'invalid',\n          twitter: '',\n          linkedin: '',\n          githubProfile: ''\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT only accepts urls to certain domains', async () => {\n        const response = await superPut('/update-my-socials').send({\n          website: '',\n          twitter: '',\n          linkedin: '',\n          githubProfile: 'https://x.com/should-be-github'\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-quincy-email', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-quincy-email').send({\n          sendQuincyEmail: true\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.subscribe-to-quincy-updated',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 19,
    "total_chunks": 30
  },
  {
    "id": "69aa59c07dc12fd6ae28ff3244d1d2f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "= await superPut('/update-my-socials').send({ website: 'invalid', twitter: '', linkedin: '', githubProfile: '' }); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); test('PUT only accepts urls to certain domains', async () => { const response = await superPut('/update-my-socials').send({ website: '', twitter: '', linkedin: '', githubProfile: 'https://x.com/should-be-github' }); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-quincy-email', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-quincy-email').send({ sendQuincyEmail: true }); expect(response.body).toEqual({ message: 'flash.subscribe-to-quincy-updated', type: 'success' }); expect(response.statusCode).toEqual(200); });\n\ntest('PUT returns 400 status code with invalid sendQuincyEmail', async () => {\n        const response = await superPut('/update-my-quincy-email').send({\n          sendQuincyEmail: 'invalid'\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-about', () => {\n      test('PUT updates the values in about settings', async () => {\n        const response = await superPut('/update-my-about').send({\n          about: 'Teacher at freeCodeCamp',\n          name: 'Quincy Larson',\n          location: 'USA',\n          picture:\n            'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg'\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.updated-about-me',\n          type: 'success'\n        });\n\nconst user = await fastifyTestInstance?.prisma.user.findFirst({\n          where: { email: 'foo@bar.com' }\n        });\n\nexpect(user?.about).toEqual('Teacher at freeCodeCamp');\n        expect(user?.name).toEqual('Quincy Larson');\n        expect(user?.location).toEqual('USA');\n        expect(user?.picture).toEqual(\n          'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg'\n        );\n        expect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 20,
    "total_chunks": 30
  },
  {
    "id": "b90a4c1e4871c979e8338974ab90d888",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "async () => { const response = await superPut('/update-my-quincy-email').send({ sendQuincyEmail: 'invalid' }); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-about', () => { test('PUT updates the values in about settings', async () => { const response = await superPut('/update-my-about').send({ about: 'Teacher at freeCodeCamp', name: 'Quincy Larson', location: 'USA', picture: 'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg' }); expect(response.body).toEqual({ message: 'flash.updated-about-me', type: 'success' }); const user = await fastifyTestInstance?.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); expect(user?.about).toEqual('Teacher at freeCodeCamp'); expect(user?.name).toEqual('Quincy Larson'); expect(user?.location).toEqual('USA'); expect(user?.picture).toEqual( 'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg' ); expect(response.statusCode).toEqual(200); });\n\ntest('PUT updates the values in about settings without image', async () => {\n        const response = await superPut('/update-my-about').send({\n          about: 'Teacher at freeCodeCamp',\n          name: 'Quincy Larson',\n          location: 'USA',\n          // `new URL` throws if the image isn't a URL, this checks if it doesn't throw.\n          picture: 'invalid'\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.updated-about-me',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest('PUT with empty strings clears the values in about settings ', async () => {\n        const initialResponse = await superPut('/update-my-about').send({\n          about: 'Teacher at freeCodeCamp',\n          name: 'Quincy Larson',\n          location: 'USA',\n          picture:\n            'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg'\n        });\n\nexpect(initialResponse.body).toEqual({\n          message: 'flash.updated-about-me',\n          type: 'success'\n        });\n        expect(initialResponse.statusCode).toEqual(200);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 21,
    "total_chunks": 30
  },
  {
    "id": "7c7feb47ff4d42cb1dea631589947df3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "superPut('/update-my-about').send({ about: 'Teacher at freeCodeCamp', name: 'Quincy Larson', location: 'USA', // `new URL` throws if the image isn't a URL, this checks if it doesn't throw. picture: 'invalid' }); expect(response.body).toEqual({ message: 'flash.updated-about-me', type: 'success' }); expect(response.statusCode).toEqual(200); }); test('PUT with empty strings clears the values in about settings ', async () => { const initialResponse = await superPut('/update-my-about').send({ about: 'Teacher at freeCodeCamp', name: 'Quincy Larson', location: 'USA', picture: 'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg' }); expect(initialResponse.body).toEqual({ message: 'flash.updated-about-me', type: 'success' }); expect(initialResponse.statusCode).toEqual(200);\n\nconst response = await superPut('/update-my-about').send({\n          about: '',\n          name: '',\n          location: '',\n          picture: ''\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.updated-about-me',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n\nconst user = await fastifyTestInstance?.prisma.user.findFirst({\n          where: { email: 'foo@bar.com' }\n        });\n        expect(user?.about).toEqual('');\n        expect(user?.name).toEqual('');\n        expect(user?.location).toEqual('');\n        expect(user?.picture).toEqual('');\n      });\n\ntest('PUT returns 400 status code with invalid about settings', async () => {\n        const response = await superPut('/update-my-about').send({\n          about: { no: 'objects' }\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-honesty', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-honesty').send({\n          isHonest: true\n        });\n\nexpect(response.body).toEqual({\n          message: 'buttons.accepted-honesty',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 22,
    "total_chunks": 30
  },
  {
    "id": "bb0a1694abf9272d3d556e845d0b7263",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "const user = await fastifyTestInstance?.prisma.user.findFirst({ where: { email: 'foo@bar.com' } }); expect(user?.about).toEqual(''); expect(user?.name).toEqual(''); expect(user?.location).toEqual(''); expect(user?.picture).toEqual(''); }); test('PUT returns 400 status code with invalid about settings', async () => { const response = await superPut('/update-my-about').send({ about: { no: 'objects' } }); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-honesty', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-honesty').send({ isHonest: true }); expect(response.body).toEqual({ message: 'buttons.accepted-honesty', type: 'success' }); expect(response.statusCode).toEqual(200); });\n\ntest('PUT returns 400 status code with invalid honesty', async () => {\n        const response = await superPut('/update-my-honesty').send({\n          isHonest: false\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-privacy-terms', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-privacy-terms').send({\n          quincyEmails: true\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.privacy-updated',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest('PUT returns 400 status code with non-boolean data', async () => {\n        const response = await superPut('/update-privacy-terms').send({\n          quincyEmails: '123'\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-portfolio', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-portfolio').send({\n          portfolio: [{}]\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 23,
    "total_chunks": 30
  },
  {
    "id": "ca01dfd660a70c5407ed779cfbe9eaae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-privacy-terms').send({ quincyEmails: true }); expect(response.body).toEqual({ message: 'flash.privacy-updated', type: 'success' }); expect(response.statusCode).toEqual(200); }); test('PUT returns 400 status code with non-boolean data', async () => { const response = await superPut('/update-privacy-terms').send({ quincyEmails: '123' }); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-portfolio', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-portfolio').send({ portfolio: [{}] });\n\nexpect(response.body).toEqual({\n          message: 'flash.portfolio-item-updated',\n          type: 'success'\n        });\n        expect(response.statusCode).toEqual(200);\n      });\n\ntest('PUT returns 400 status code when the portfolio property is missing', async () => {\n        const response = await superPut('/update-my-portfolio').send({});\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('PUT returns 400 status code when any data is the wrong type', async () => {\n        const response = await superPut('/update-my-portfolio').send({\n          portfolio: [\n            { id: '', title: '', description: '', url: '', image: '' },\n            { id: '', title: {}, description: '', url: '', image: '' }\n          ]\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n    });\n\ndescribe('/update-my-classroom-mode', () => {\n      test('PUT returns 200 status code with \"success\" message', async () => {\n        const response = await superPut('/update-my-classroom-mode').send({\n          isClassroomAccount: true\n        });\n\nexpect(response.body).toEqual({\n          message: 'flash.classroom-mode-updated',\n          type: 'success'\n        });\n\nexpect(response.statusCode).toEqual(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 24,
    "total_chunks": 30
  },
  {
    "id": "289c8c6a3cea0946bea757af47cf09d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "the wrong type', async () => { const response = await superPut('/update-my-portfolio').send({ portfolio: [ { id: '', title: '', description: '', url: '', image: '' }, { id: '', title: {}, description: '', url: '', image: '' } ] }); expect(response.body).toEqual(updateErrorResponse); expect(response.statusCode).toEqual(400); }); }); describe('/update-my-classroom-mode', () => { test('PUT returns 200 status code with \"success\" message', async () => { const response = await superPut('/update-my-classroom-mode').send({ isClassroomAccount: true }); expect(response.body).toEqual({ message: 'flash.classroom-mode-updated', type: 'success' }); expect(response.statusCode).toEqual(200); });\n\ntest('PUT returns 400 status code with invalid classroom mode', async () => {\n        const response = await superPut('/update-my-classroom-mode').send({\n          isClassroomAccount: 'invalid'\n        });\n\nexpect(response.body).toEqual(updateErrorResponse);\n        expect(response.statusCode).toEqual(400);\n      });\n\ntest('After updating the classroom mode, the user should have this property set', async () => {\n        await superPut('/update-my-classroom-mode').send({\n          isClassroomAccount: false\n        });\n\nconst user = await fastifyTestInstance?.prisma.user.findFirst({\n          where: {\n            email: developerUserEmail\n          }\n        });\n\nexpect(user?.isClassroomAccount).toEqual(false);\n      });\n    });\n  });\n\ndescribe('Unauthenticated User', () => {\n    let setCookies: string[];\n\n// Get the CSRF cookies from an unprotected route\n    beforeAll(async () => {\n      const res = await superRequest('/status/ping', { method: 'GET' });\n      setCookies = res.get('Set-Cookie');\n    });\n\ndescribe('/confirm-email', () => {\n      it('redirects to the HOME_LOCATION with flash message', async () => {\n        const res = await superRequest('/confirm-email', {\n          method: 'GET'\n        }).set('Referer', 'https://who.knows/');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 25,
    "total_chunks": 30
  },
  {
    "id": "3e2d28810a8c4c04be453418e2550f78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "false }); const user = await fastifyTestInstance?.prisma.user.findFirst({ where: { email: developerUserEmail } }); expect(user?.isClassroomAccount).toEqual(false); }); }); }); describe('Unauthenticated User', () => { let setCookies: string[]; // Get the CSRF cookies from an unprotected route beforeAll(async () => { const res = await superRequest('/status/ping', { method: 'GET' }); setCookies = res.get('Set-Cookie'); }); describe('/confirm-email', () => { it('redirects to the HOME_LOCATION with flash message', async () => { const res = await superRequest('/confirm-email', { method: 'GET' }).set('Referer', 'https://who.knows/');\n\nexpect(res.status).toBe(302);\n        expect(res.headers).toMatchObject({\n          location: `http://localhost:8000?${formatMessage({ type: 'info', content: 'Only authenticated users can access this route. Please sign in and try again.' })}`\n        });\n      });\n    });\n\nconst endpoints: { path: string; method: 'PUT' }[] = [\n      { path: '/update-my-profileui', method: 'PUT' },\n      { path: '/update-my-theme', method: 'PUT' },\n      { path: '/update-my-username', method: 'PUT' },\n      { path: '/update-my-keyboard-shortcuts', method: 'PUT' },\n      { path: '/update-my-socials', method: 'PUT' },\n      { path: '/update-my-quincy-email', method: 'PUT' },\n      { path: '/update-my-about', method: 'PUT' },\n      { path: '/update-my-honesty', method: 'PUT' },\n      { path: '/update-privacy-terms', method: 'PUT' },\n      { path: '/update-my-portfolio', method: 'PUT' }\n    ];\n\nendpoints.forEach(({ path, method }) => {\n      test(`${method} ${path} returns 401 status code with error message`, async () => {\n        const response = await superRequest(path, {\n          method,\n          setCookies\n        });\n        expect(response.statusCode).toBe(401);\n      });\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 26,
    "total_chunks": 30
  },
  {
    "id": "d367983b75e6edfaddf5ef757dfb3779",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "}, { path: '/update-my-keyboard-shortcuts', method: 'PUT' }, { path: '/update-my-socials', method: 'PUT' }, { path: '/update-my-quincy-email', method: 'PUT' }, { path: '/update-my-about', method: 'PUT' }, { path: '/update-my-honesty', method: 'PUT' }, { path: '/update-privacy-terms', method: 'PUT' }, { path: '/update-my-portfolio', method: 'PUT' } ]; endpoints.forEach(({ path, method }) => { test(`${method} ${path} returns 401 status code with error message`, async () => { const response = await superRequest(path, { method, setCookies }); expect(response.statusCode).toBe(401); }); }); });\n\ndescribe('isPictureWithProtocol', () => {\n    test('Valid protocol', () => {\n      expect(isPictureWithProtocol('https://www.example.com/')).toEqual(true);\n      expect(isPictureWithProtocol('http://www.example.com/')).toEqual(true);\n    });\n\ntest('Invalid protocol', () => {\n      expect(isPictureWithProtocol('htps://www.example.com/')).toEqual(false);\n      expect(isPictureWithProtocol('tp://www.example.com/')).toEqual(false);\n      expect(isPictureWithProtocol('www.example.com/')).toEqual(false);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 27,
    "total_chunks": 30
  },
  {
    "id": "cefe67cea4d47ca09ffc366d41808e6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "'PUT' }, { path: '/update-my-honesty', method: 'PUT' }, { path: '/update-privacy-terms', method: 'PUT' }, { path: '/update-my-portfolio', method: 'PUT' } ]; endpoints.forEach(({ path, method }) => { test(`${method} ${path} returns 401 status code with error message`, async () => { const response = await superRequest(path, { method, setCookies }); expect(response.statusCode).toBe(401); }); }); }); describe('isPictureWithProtocol', () => { test('Valid protocol', () => { expect(isPictureWithProtocol('https://www.example.com/')).toEqual(true); expect(isPictureWithProtocol('http://www.example.com/')).toEqual(true); }); test('Invalid protocol', () => { expect(isPictureWithProtocol('htps://www.example.com/')).toEqual(false); expect(isPictureWithProtocol('tp://www.example.com/')).toEqual(false); expect(isPictureWithProtocol('www.example.com/')).toEqual(false); }); }); });\n\ndescribe('getWaitMessage', () => {\n  const sec = 1000;\n  const min = 60 * 1000;\n  it.each([\n    {\n      sentAt: new Date(0),\n      now: new Date(0),\n      expected: 'Please wait 5 minutes to resend an authentication link.'\n    },\n    {\n      sentAt: new Date(0),\n      now: new Date(59 * sec),\n      expected: 'Please wait 5 minutes to resend an authentication link.'\n    },\n    {\n      sentAt: new Date(0),\n      now: new Date(4 * min),\n      expected: 'Please wait 1 minute to resend an authentication link.'\n    },\n    {\n      sentAt: new Date(0),\n      now: new Date(4 * min + 59 * sec),\n      expected: 'Please wait 1 minute to resend an authentication link.'\n    },\n    {\n      sentAt: new Date(0),\n      now: new Date(5 * min),\n      expected: null\n    }\n  ])(\n    `returns \"$expected\" when sentAt is $sentAt and now is $now`,\n    ({ sentAt, now, expected }) => {\n      expect(getWaitMessage({ sentAt, now })).toEqual(expected);\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 28,
    "total_chunks": 30
  },
  {
    "id": "9e3ef7aeb8a5c63f46c89415f23c02de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
    "source_type": "git_repo",
    "title": "settings.test",
    "content": "now: new Date(4 * min), expected: 'Please wait 1 minute to resend an authentication link.' }, { sentAt: new Date(0), now: new Date(4 * min + 59 * sec), expected: 'Please wait 1 minute to resend an authentication link.' }, { sentAt: new Date(0), now: new Date(5 * min), expected: null } ])( `returns \"$expected\" when sentAt is $sentAt and now is $now`, ({ sentAt, now, expected }) => { expect(getWaitMessage({ sentAt, now })).toEqual(expected); } );\n\nit('returns null when sentAt is null', () => {\n    expect(getWaitMessage({ sentAt: null, now: new Date(0) })).toBeNull();\n  });\n  it('uses the current time when now is not provided', () => {\n    expect(getWaitMessage({ sentAt: new Date() })).toEqual(\n      'Please wait 5 minutes to resend an authentication link.'\n    );\n  });\n});\n\ndescribe('validateSocialUrl', () => {\n  it.each(['githubProfile', 'linkedin', 'twitter'] as const)(\n    'accepts empty strings for %s',\n    social => {\n      expect(validateSocialUrl('', social)).toBe(true);\n    }\n  );\n\nit.each([\n    ['githubProfile', 'https://something.com/user'],\n    ['linkedin', 'https://www.x.com/in/username'],\n    ['twitter', 'https://www.toomanyexes.com/username']\n  ] as const)('rejects invalid urls for %s', (social, url) => {\n    expect(validateSocialUrl(url, social)).toBe(false);\n  });\n\nit.each([\n    ['githubProfile', 'https://something.github.com/user'],\n    ['linkedin', 'https://www.linkedin.com/in/username'],\n    ['twitter', 'https://twitter.com/username'],\n    ['twitter', 'https://x.com/username']\n  ] as const)('accepts valid urls for %s', (social, url) => {\n    expect(validateSocialUrl(url, social)).toBe(true);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 38985,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 29,
    "total_chunks": 30
  },
  {
    "id": "d10bff8912acb9da0b0c034e49c3c0db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport type { FastifyInstance } from 'fastify';\nimport { differenceInMinutes } from 'date-fns';\nimport validator from 'validator';\n\nimport { isValidUsername } from '../../../../shared/utils/validate';\nimport * as schemas from '../../schemas';\nimport { createAuthToken, isExpired } from '../../utils/tokens';\nimport { API_LOCATION } from '../../utils/env';\nimport { getRedirectParams } from '../../utils/redirection';\nimport { isRestricted } from '../helpers/is-restricted';\n\nconst { isEmail } = validator;\n\ntype WaitMesssageArgs = {\n  sentAt: Date | null;\n  now?: Date;\n};\n\n/**\n * Get a message to display to the user about how long they need to wait before\n * they can request an authentication link.\n *\n * @param param The parameters.\n * @param param.sentAt The date the last email was sent at.\n * @param param.now The current date.\n * @returns The message to display to the user.\n */\nexport function getWaitMessage({ sentAt, now = new Date() }: WaitMesssageArgs) {\n  const minutesLeft = getWaitPeriod({ sentAt, now });\n  if (minutesLeft <= 0) return null;\n\nconst timeToWait = `${minutesLeft} minute${minutesLeft > 1 ? 's' : ''}`;\n  return `Please wait ${timeToWait} to resend an authentication link.`;\n}\n\nfunction getWaitPeriod({ sentAt, now }: Required<WaitMesssageArgs>) {\n  if (sentAt == null) return 0;\n  return 5 - differenceInMinutes(now, sentAt);\n}\n\n/**\n * Validate an image url.\n *\n * @param picture The url to check.\n * @returns Whether the url is a picture with a valid protocol.\n */\nexport const isPictureWithProtocol = (picture?: string): boolean => {\n  if (!picture) return false;\n  try {\n    const url = new URL(picture);\n    return url.protocol == 'http:' || url.protocol == 'https:';\n  } catch {\n    return false;\n  }\n};\n\nconst ALLOWED_DOMAINS_MAP = {\n  githubProfile: ['github.com'],\n  linkedin: ['linkedin.com'],\n  twitter: ['twitter.com', 'x.com']\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 18
  },
  {
    "id": "c35f220be18a37044069d8f1a54aa8d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "sentAt); } /** * Validate an image url. * * @param picture The url to check. * @returns Whether the url is a picture with a valid protocol. */ export const isPictureWithProtocol = (picture?: string): boolean => { if (!picture) return false; try { const url = new URL(picture); return url.protocol == 'http:' || url.protocol == 'https:'; } catch { return false; } }; const ALLOWED_DOMAINS_MAP = { githubProfile: ['github.com'], linkedin: ['linkedin.com'], twitter: ['twitter.com', 'x.com'] };\n\n/**\n * Validate a social URL.\n *\n * @param socialUrl The URL to check.\n * @param key The key of the allowed socials and domains.\n * @returns Whether the URL is valid.\n */\nexport const validateSocialUrl = (\n  socialUrl: string,\n  key: keyof typeof ALLOWED_DOMAINS_MAP\n): boolean => {\n  if (!socialUrl) return true;\n\ntry {\n    const url = new URL(socialUrl);\n    const domains = ALLOWED_DOMAINS_MAP[key];\n    const domainAndTld = url.hostname.split('.').slice(-2).join('.');\n    return domains.includes(domainAndTld);\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Plugin for all endpoints related to user settings.\n *\n * @param fastify The Fastify instance.\n * @param _options Fastify options I guess?\n * @param done Callback to signal that the logic has completed.\n */\nexport const settingRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.setErrorHandler((error, request, reply) => {\n    const logger = fastify.log.child({ req: request });\n    if (error.validation) {\n      logger.warn({ validationError: error.validation });\n      void reply.code(400);\n      void reply.send({ message: 'flash.wrong-updating', type: 'danger' });\n    } else {\n      throw error;\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 1,
    "total_chunks": 18
  },
  {
    "id": "8bcbe0f56254583727fe7dfcff770077",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "to user settings. * * @param fastify The Fastify instance. * @param _options Fastify options I guess? * @param done Callback to signal that the logic has completed. */ export const settingRoutes: FastifyPluginCallbackTypebox = ( fastify, _options, done ) => { fastify.setErrorHandler((error, request, reply) => { const logger = fastify.log.child({ req: request }); if (error.validation) { logger.warn({ validationError: error.validation }); void reply.code(400); void reply.send({ message: 'flash.wrong-updating', type: 'danger' }); } else { throw error; } });\n\nfastify.put(\n    '/update-my-profileui',\n    {\n      schema: schemas.updateMyProfileUI\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            profileUI: {\n              isLocked: req.body.profileUI.isLocked,\n              showAbout: req.body.profileUI.showAbout,\n              showCerts: req.body.profileUI.showCerts,\n              showDonation: req.body.profileUI.showDonation,\n              showHeatMap: req.body.profileUI.showHeatMap,\n              showLocation: req.body.profileUI.showLocation,\n              showName: req.body.profileUI.showName,\n              showPoints: req.body.profileUI.showPoints,\n              showPortfolio: req.body.profileUI.showPortfolio,\n              showTimeLine: req.body.profileUI.showTimeLine\n            }\n          }\n        });\n\nreturn {\n          message: 'flash.privacy-updated',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error('Error updating profileUI');\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );\n\nfunction createUpdateEmailText({ email, id }: { email: string; id: string }) {\n    const encodedEmail = Buffer.from(email).toString('base64');\n    return `Please confirm this email address for freeCodeCamp.org:\n\n${API_LOCATION}/confirm-email?email=${encodedEmail}&token=${id}&emailChange=true\n\nHappy coding!",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 18
  },
  {
    "id": "302fb5dda3868a3530398f8afdfc6b39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "showDonation: req.body.profileUI.showDonation, showHeatMap: req.body.profileUI.showHeatMap, showLocation: req.body.profileUI.showLocation, showName: req.body.profileUI.showName, showPoints: req.body.profileUI.showPoints, showPortfolio: req.body.profileUI.showPortfolio, showTimeLine: req.body.profileUI.showTimeLine } } }); return { message: 'flash.privacy-updated', type: 'success' } as const; } catch (err) { logger.error('Error updating profileUI'); logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } ); function createUpdateEmailText({ email, id }: { email: string; id: string }) { const encodedEmail = Buffer.from(email).toString('base64'); return `Please confirm this email address for freeCodeCamp.org: ${API_LOCATION}/confirm-email?email=${encodedEmail}&token=${id}&emailChange=true Happy coding!\n\n- The freeCodeCamp.org Team\n`;\n  }\n\nfastify.put(\n    '/update-my-email',\n    {\n      schema: schemas.updateMyEmail,\n      // We need to customize the responses to validation failures:\n      attachValidation: true\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      if (req.validationError) {\n        logger.warn(`Invalid email ${req.body.email}`);\n        void reply.code(400);\n        return { message: 'Email format is invalid', type: 'danger' } as const;\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 3,
    "total_chunks": 18
  },
  {
    "id": "325e35a70f6fc6aa50e87ef339d02b79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "string }) { const encodedEmail = Buffer.from(email).toString('base64'); return `Please confirm this email address for freeCodeCamp.org: ${API_LOCATION}/confirm-email?email=${encodedEmail}&token=${id}&emailChange=true Happy coding! - The freeCodeCamp.org Team `; } fastify.put( '/update-my-email', { schema: schemas.updateMyEmail, // We need to customize the responses to validation failures: attachValidation: true }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); if (req.validationError) { logger.warn(`Invalid email ${req.body.email}`); void reply.code(400); return { message: 'Email format is invalid', type: 'danger' } as const; }\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n        where: { id: req.user?.id },\n        select: {\n          id: true,\n          email: true,\n          emailVerifyTTL: true,\n          newEmail: true,\n          emailVerified: true,\n          emailAuthLinkTTL: true\n        }\n      });\n      const newEmail = req.body.email.toLowerCase();\n      const currentEmailFormatted = user.email ? user.email.toLowerCase() : '';\n      const isVerifiedEmail = user.emailVerified;\n      const isOwnEmail = newEmail === currentEmailFormatted;\n      if (isOwnEmail && isVerifiedEmail) {\n        logger.warn(\n          'New email address is already associated with this account'\n        );\n        void reply.code(400);\n        return reply.send({\n          type: 'info',\n          message: `${newEmail} is already associated with this account.\nYou can update a new email address instead.`\n        });\n      }\n\nconst isResendUpdateToSameEmail =\n        newEmail === user.newEmail?.toLowerCase();\n      const isLinkSentWithinLimitTTL = getWaitMessage({\n        sentAt: user.emailVerifyTTL\n      });\n\nif (isResendUpdateToSameEmail && isLinkSentWithinLimitTTL) {\n        logger.warn(\n          'Email confirmation link has been sent within the last 5 minutes'\n        );\n        void reply.code(429);\n        return reply.send({\n          type: 'info',\n          message: `We have already sent an email confirmation request to ${newEmail}.\n${isLinkSentWithinLimitTTL}`\n        });\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 4,
    "total_chunks": 18
  },
  {
    "id": "1eb5d5d03414fc3202029af4f5648305",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "); void reply.code(400); return reply.send({ type: 'info', message: `${newEmail} is already associated with this account. You can update a new email address instead.` }); } const isResendUpdateToSameEmail = newEmail === user.newEmail?.toLowerCase(); const isLinkSentWithinLimitTTL = getWaitMessage({ sentAt: user.emailVerifyTTL }); if (isResendUpdateToSameEmail && isLinkSentWithinLimitTTL) { logger.warn( 'Email confirmation link has been sent within the last 5 minutes' ); void reply.code(429); return reply.send({ type: 'info', message: `We have already sent an email confirmation request to ${newEmail}. ${isLinkSentWithinLimitTTL}` }); }\n\nconst isEmailAlreadyTaken =\n        (await fastify.prisma.user.count({ where: { email: newEmail } })) > 0;\n\nif (isEmailAlreadyTaken && !isOwnEmail) {\n        logger.warn(\n          'New email address is already associated with another account'\n        );\n        void reply.code(400);\n        return reply.send({\n          type: 'info',\n          message: `${newEmail} is already associated with another account.`\n        });\n      }\n\n// ToDo(MVP): email the new email and wait user to confirm it, before we update the user schema.\n      try {\n        await fastify.prisma.user.update({\n          where: { id: user.id },\n          data: {\n            newEmail,\n            emailVerified: false,\n            emailVerifyTTL: new Date()\n          }\n        });\n\n// TODO: combine emailVerifyTTL and emailAuthLinkTTL? I'm not sure why\n        // we need emailVeriftyTTL given that the main thing we want is to\n        // restrict the rate of attempts and the emailAuthLinkTTL already does\n        // that.\n        const tooManyRequestsMessage = getWaitMessage({\n          sentAt: user.emailAuthLinkTTL\n        });\n\nif (tooManyRequestsMessage) {\n          logger.warn(\n            'Email confirmation link has been sent within the last 5 minutes'\n          );\n          void reply.code(429);\n          return reply.send({\n            type: 'info',\n            message: tooManyRequestsMessage\n          });\n        }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 5,
    "total_chunks": 18
  },
  {
    "id": "fd4a5dd69dc0c4ca6014691f33f1fc09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "emailVerified: false, emailVerifyTTL: new Date() } }); // TODO: combine emailVerifyTTL and emailAuthLinkTTL? I'm not sure why // we need emailVeriftyTTL given that the main thing we want is to // restrict the rate of attempts and the emailAuthLinkTTL already does // that. const tooManyRequestsMessage = getWaitMessage({ sentAt: user.emailAuthLinkTTL }); if (tooManyRequestsMessage) { logger.warn( 'Email confirmation link has been sent within the last 5 minutes' ); void reply.code(429); return reply.send({ type: 'info', message: tooManyRequestsMessage }); }\n\n// Update the emailAuthLinkTTL to ensure we don't send too many emails.\n        await fastify.prisma.user.update({\n          where: { id: user.id },\n          data: {\n            emailAuthLinkTTL: new Date()\n          }\n        });\n\n// The auth token is used to confirm that the user owns the email. If\n        // the user provides the correct id (by following the link we send\n        // them), then we can update the email.\n        const { id } = await fastify.prisma.authToken.create({\n          data: createAuthToken(user.id),\n          select: { id: true }\n        });\n\nawait fastify.sendEmail({\n          from: 'team@freecodecamp.org',\n          to: newEmail,\n          subject:\n            'Please confirm your updated email address for freeCodeCamp.org',\n          text: createUpdateEmailText({ email: newEmail, id })\n        });\n\nawait reply.send({\n          message:\n            'Check your email and click the link we sent you to confirm your new email address.',\n          type: 'info'\n        });\n      } catch (err) {\n        logger.error(`Error updating user ${user.id}'s email address`);\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        await reply.send({ message: 'flash.wrong-updating', type: 'danger' });\n      }\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 6,
    "total_chunks": 18
  },
  {
    "id": "893adf2ae957fc2bd074955efc921b88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "data: createAuthToken(user.id), select: { id: true } }); await fastify.sendEmail({ from: 'team@freecodecamp.org', to: newEmail, subject: 'Please confirm your updated email address for freeCodeCamp.org', text: createUpdateEmailText({ email: newEmail, id }) }); await reply.send({ message: 'Check your email and click the link we sent you to confirm your new email address.', type: 'info' }); } catch (err) { logger.error(`Error updating user ${user.id}'s email address`); logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); await reply.send({ message: 'flash.wrong-updating', type: 'danger' }); } } );\n\nfastify.put(\n    '/update-my-theme',\n    {\n      schema: schemas.updateMyTheme\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            theme: req.body.theme\n          }\n        });\n\nreturn {\n          message: 'flash.updated-themes',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(`Error updating user ${req.user?.id}'s theme`);\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );\n\nfastify.put(\n    '/update-my-socials',\n    {\n      schema: schemas.updateMySocials\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n\nconst socials = {\n        twitter: req.body.twitter,\n        githubProfile: req.body.githubProfile,\n        linkedin: req.body.linkedin,\n        website: req.body.website\n      };\n\nconst valid = (['twitter', 'githubProfile', 'linkedin'] as const).every(\n        key => validateSocialUrl(socials[key], key)\n      );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 7,
    "total_chunks": 18
  },
  {
    "id": "aee7a8f45ee24b1c2e6058441968cb41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "'flash.updated-themes', type: 'success' } as const; } catch (err) { logger.error(`Error updating user ${req.user?.id}'s theme`); logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } ); fastify.put( '/update-my-socials', { schema: schemas.updateMySocials }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); const socials = { twitter: req.body.twitter, githubProfile: req.body.githubProfile, linkedin: req.body.linkedin, website: req.body.website }; const valid = (['twitter', 'githubProfile', 'linkedin'] as const).every( key => validateSocialUrl(socials[key], key) );\n\nif (!valid) {\n        logger.warn({ socials }, `Invalid social URL`);\n        void reply.code(400);\n        return reply.send({\n          message: 'flash.wrong-updating',\n          type: 'danger'\n        });\n      }\n\ntry {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            website: socials.website,\n            twitter: socials.twitter,\n            githubProfile: socials.githubProfile,\n            linkedin: socials.linkedin\n          }\n        });\n\nreturn {\n          message: 'flash.updated-socials',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(`Error updating user ${req.user?.id}'s socials`);\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );\n\nfastify.put(\n    '/update-my-username',\n    {\n      schema: schemas.updateMyUsername,\n      attachValidation: true\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n\ntry {\n        const user = await fastify.prisma.user.findFirstOrThrow({\n          where: { id: req.user?.id }\n        });\n\nconst newUsernameDisplay = req.body.username.trim();\n        const oldUsernameDisplay = user.usernameDisplay?.trim();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 8,
    "total_chunks": 18
  },
  {
    "id": "4f4578c849cd89284b92f848a1224358",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "return { message: 'flash.updated-socials', type: 'success' } as const; } catch (err) { logger.error(`Error updating user ${req.user?.id}'s socials`); logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } ); fastify.put( '/update-my-username', { schema: schemas.updateMyUsername, attachValidation: true }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); try { const user = await fastify.prisma.user.findFirstOrThrow({ where: { id: req.user?.id } }); const newUsernameDisplay = req.body.username.trim(); const oldUsernameDisplay = user.usernameDisplay?.trim();\n\nconst newUsername = newUsernameDisplay.toLowerCase();\n        const oldUsername = user.username.toLowerCase();\n\nconst usernameUnchanged =\n          newUsername === oldUsername &&\n          newUsernameDisplay === oldUsernameDisplay;\n\nif (usernameUnchanged) {\n          logger.warn('Username is unchanged');\n          void reply.code(400);\n          return {\n            message: 'flash.username-used',\n            type: 'info'\n          } as const;\n        }\n\nif (req.validationError) {\n          logger.warn(`Bad request. Supplied username: ${req.body.username}`);\n          void reply.code(400);\n          return {\n            message: req.validationError.message,\n            type: 'info'\n          } as const;\n        }\n\nconst validation = isValidUsername(newUsername);\n\nif (!validation.valid) {\n          logger.warn(`Invalid username ${newUsername}. ${validation.error}`);\n          void reply.code(400);\n          return reply.send({\n            // TODO(Post-MVP): custom validation errors.\n            message: `Username ${newUsername} ${validation.error}`,\n            type: 'info'\n          });\n        }\n\nconst usernameTaken =\n          newUsername === oldUsername\n            ? false\n            : await fastify.prisma.user.count({\n                where: { username: newUsername }\n              });\n\nif (usernameTaken || isRestricted(newUsername)) {\n          logger.warn(`Username ${newUsername} is taken or restricted`);\n          void reply.code(400);\n          return reply.send({\n            message: 'flash.username-taken',\n            type: 'info'\n          });\n        }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 9,
    "total_chunks": 18
  },
  {
    "id": "2e4ba45cf1c4e8a00265d8f56c8607f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "return { message: req.validationError.message, type: 'info' } as const; } const validation = isValidUsername(newUsername); if (!validation.valid) { logger.warn(`Invalid username ${newUsername}. ${validation.error}`); void reply.code(400); return reply.send({ // TODO(Post-MVP): custom validation errors. message: `Username ${newUsername} ${validation.error}`, type: 'info' }); } const usernameTaken = newUsername === oldUsername ? false : await fastify.prisma.user.count({ where: { username: newUsername } }); if (usernameTaken || isRestricted(newUsername)) { logger.warn(`Username ${newUsername} is taken or restricted`); void reply.code(400); return reply.send({ message: 'flash.username-taken', type: 'info' }); }\n\nawait fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            username: newUsername,\n            usernameDisplay: newUsernameDisplay\n          }\n        });\n\nreturn reply.send({\n          message: 'flash.username-updated',\n          type: 'success',\n          variables: { username: newUsernameDisplay }\n        });\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        await reply.send({ message: 'flash.wrong-updating', type: 'danger' });\n      }\n    }\n  );\n\nfastify.put(\n    '/update-my-about',\n    {\n      schema: schemas.updateMyAbout\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      const hasProtocol = isPictureWithProtocol(req.body.picture);\n\ntry {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            about: req.body.about,\n            name: req.body.name,\n            location: req.body.location,\n            picture: hasProtocol ? req.body.picture : ''\n          }\n        });\n\nreturn {\n          message: 'flash.updated-about-me',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 10,
    "total_chunks": 18
  },
  {
    "id": "7c59ff235adef0922ffca97af2aef79b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "'/update-my-about', { schema: schemas.updateMyAbout }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); const hasProtocol = isPictureWithProtocol(req.body.picture); try { await fastify.prisma.user.update({ where: { id: req.user?.id }, data: { about: req.body.about, name: req.body.name, location: req.body.location, picture: hasProtocol ? req.body.picture : '' } }); return { message: 'flash.updated-about-me', type: 'success' } as const; } catch (err) { logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } );\n\nfastify.put(\n    '/update-my-keyboard-shortcuts',\n    {\n      schema: schemas.updateMyKeyboardShortcuts\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            keyboardShortcuts: req.body.keyboardShortcuts\n          }\n        });\n\nreturn {\n          message: 'flash.keyboard-shortcut-updated',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );\n\nfastify.put(\n    '/update-my-quincy-email',\n    {\n      schema: schemas.updateMyQuincyEmail\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            sendQuincyEmail: req.body.sendQuincyEmail\n          }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 11,
    "total_chunks": 18
  },
  {
    "id": "4e80ac2fab3479088a441b665bd38279",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "await fastify.prisma.user.update({ where: { id: req.user?.id }, data: { keyboardShortcuts: req.body.keyboardShortcuts } }); return { message: 'flash.keyboard-shortcut-updated', type: 'success' } as const; } catch (err) { logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } ); fastify.put( '/update-my-quincy-email', { schema: schemas.updateMyQuincyEmail }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); try { await fastify.prisma.user.update({ where: { id: req.user?.id }, data: { sendQuincyEmail: req.body.sendQuincyEmail } });\n\nreturn {\n          message: 'flash.subscribe-to-quincy-updated',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );\n\nfastify.put(\n    '/update-my-honesty',\n    {\n      schema: schemas.updateMyHonesty\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            isHonest: req.body.isHonest\n          }\n        });\n\nreturn {\n          message: 'buttons.accepted-honesty',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 12,
    "total_chunks": 18
  },
  {
    "id": "66a00ea6a8c9e3a363832e22b7e504ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } ); fastify.put( '/update-my-honesty', { schema: schemas.updateMyHonesty }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); try { await fastify.prisma.user.update({ where: { id: req.user?.id }, data: { isHonest: req.body.isHonest } }); return { message: 'buttons.accepted-honesty', type: 'success' } as const; } catch (err) { logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } );\n\nfastify.put(\n    '/update-privacy-terms',\n    {\n      schema: schemas.updateMyPrivacyTerms\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            acceptedPrivacyTerms: true,\n            sendQuincyEmail: req.body.quincyEmails\n          }\n        });\n\nreturn {\n          message: 'flash.privacy-updated',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 13,
    "total_chunks": 18
  },
  {
    "id": "a97baa80c72b839b2daa9c15cc7e621e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "{ message: 'flash.wrong-updating', type: 'danger' } as const; } } ); fastify.put( '/update-privacy-terms', { schema: schemas.updateMyPrivacyTerms }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); try { await fastify.prisma.user.update({ where: { id: req.user?.id }, data: { acceptedPrivacyTerms: true, sendQuincyEmail: req.body.quincyEmails } }); return { message: 'flash.privacy-updated', type: 'success' } as const; } catch (err) { logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } );\n\nfastify.put(\n    '/update-my-portfolio',\n    {\n      schema: schemas.updateMyPortfolio\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        // TODO(Post-MVP): make all properties required in the schema and use\n        // req.body.portfolio directly.\n        const portfolio = req.body.portfolio.map(\n          ({ id, title, url, description, image }) => ({\n            id: id ? id : '',\n            title: title ? title : '',\n            url: url ? url : '',\n            description: description ? description : '',\n            image: image ? image : ''\n          })\n        );\n        await fastify.prisma.user.update({\n          where: { id: req.user?.id },\n          data: {\n            portfolio\n          }\n        });\n\nreturn {\n          message: 'flash.portfolio-item-updated',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );\n\nfastify.put(\n    '/update-my-classroom-mode',\n    {\n      schema: schemas.updateMyClassroomMode\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      try {\n        const classroomMode = req.body.isClassroomAccount;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 14,
    "total_chunks": 18
  },
  {
    "id": "c4df85e1de502e39e4ac083b63a7bf10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": ": '', image: image ? image : '' }) ); await fastify.prisma.user.update({ where: { id: req.user?.id }, data: { portfolio } }); return { message: 'flash.portfolio-item-updated', type: 'success' } as const; } catch (err) { logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { message: 'flash.wrong-updating', type: 'danger' } as const; } } ); fastify.put( '/update-my-classroom-mode', { schema: schemas.updateMyClassroomMode }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); try { const classroomMode = req.body.isClassroomAccount;\n\nawait fastify.prisma.user.update({\n          where: { id: req.user!.id },\n          data: {\n            isClassroomAccount: classroomMode\n          }\n        });\n\nreturn {\n          message: 'flash.classroom-mode-updated',\n          type: 'success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(403);\n        return { message: 'flash.wrong-updating', type: 'danger' } as const;\n      }\n    }\n  );\n\ndone();\n};\n\n/**\n * Plugin for endpoints that redirect if the user is not authenticated.\n *\n * @param fastify The Fastify instance.\n * @param _options Options for the plugin.\n * @param done Callback to signal that the logic has completed.\n */\nexport const settingRedirectRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  const redirectMessage = {\n    type: 'danger',\n    content:\n      'Oops! Something went wrong. Please try again in a moment or contact support@freecodecamp.org if the error persists.'\n  } as const;\n\nconst expirationMessage = {\n    type: 'info',\n    content:\n      'The link to confirm your new email address has expired. Please try again.'\n  } as const;\n\nconst successMessage = {\n    type: 'success',\n    content: 'flash.email-valid'\n  } as const;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 15,
    "total_chunks": 18
  },
  {
    "id": "97cfcc612050f6a4b1012f4509a608ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "has completed. */ export const settingRedirectRoutes: FastifyPluginCallbackTypebox = ( fastify, _options, done ) => { const redirectMessage = { type: 'danger', content: 'Oops! Something went wrong. Please try again in a moment or contact support@freecodecamp.org if the error persists.' } as const; const expirationMessage = { type: 'info', content: 'The link to confirm your new email address has expired. Please try again.' } as const; const successMessage = { type: 'success', content: 'flash.email-valid' } as const;\n\nasync function updateEmail(\n    fastify: FastifyInstance,\n    { id, email }: { id: string; email: string }\n  ) {\n    await fastify.prisma.user.update({\n      where: { id },\n      data: {\n        email,\n        emailAuthLinkTTL: null,\n        emailVerified: true,\n        emailVerifyTTL: null,\n        newEmail: null\n      }\n    });\n  }\n\nasync function deleteAuthToken(\n    fastify: FastifyInstance,\n    { id }: { id: string }\n  ) {\n    await fastify.prisma.authToken.delete({\n      where: { id }\n    });\n  }\n\nfastify.get(\n    '/confirm-email',\n    {\n      schema: schemas.confirmEmail,\n      errorHandler(error, request, reply) {\n        const logger = fastify.log.child({ req: request });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          const { origin } = getRedirectParams(request);\n          void reply.redirectWithMessage(origin, redirectMessage);\n        } else {\n          fastify.errorHandler(error, request, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      const email = Buffer.from(req.query.email, 'base64').toString();\n\nconst { origin } = getRedirectParams(req);\n      if (!isEmail(email)) {\n        logger.warn(`Invalid email ${email}`);\n        return reply.redirectWithMessage(origin, redirectMessage);\n      }\n\nconst authToken = await fastify.prisma.authToken.findUnique({\n        where: { id: req.query.token }\n      });\n\nif (!authToken) {\n        logger.warn('No token found');\n        return reply.redirectWithMessage(origin, redirectMessage);\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 16,
    "total_chunks": 18
  },
  {
    "id": "37ea06282faafe57513d43a24ef5836c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
    "source_type": "git_repo",
    "title": "settings",
    "content": "validationError: error.validation }); const { origin } = getRedirectParams(request); void reply.redirectWithMessage(origin, redirectMessage); } else { fastify.errorHandler(error, request, reply); } } }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); const email = Buffer.from(req.query.email, 'base64').toString(); const { origin } = getRedirectParams(req); if (!isEmail(email)) { logger.warn(`Invalid email ${email}`); return reply.redirectWithMessage(origin, redirectMessage); } const authToken = await fastify.prisma.authToken.findUnique({ where: { id: req.query.token } }); if (!authToken) { logger.warn('No token found'); return reply.redirectWithMessage(origin, redirectMessage); }\n\n// TODO(Post-MVP): clean up expired auth tokens.\n      if (isExpired(authToken)) {\n        logger.info('Token expired');\n        return reply.redirectWithMessage(origin, expirationMessage);\n      }\n\n// TODO(Post-MVP): should this fail if it's not the currently signed in\n      // user?\n      const targetUser = await fastify.prisma.user.findUnique({\n        where: { id: authToken.userId }\n      });\n\nif (targetUser?.newEmail !== email) {\n        return reply.redirectWithMessage(origin, redirectMessage);\n      }\n\n// TODO(Post-MVP): clean up any other auth tokens for this user once\n      // the email is confirmed.\n      await Promise.all([\n        updateEmail(fastify, { id: targetUser.id, email }),\n        deleteAuthToken(fastify, { id: authToken.id })\n      ]);\n\nreturn reply.redirectWithMessage(origin, successMessage);\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 23496,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 17,
    "total_chunks": 18
  },
  {
    "id": "9215a27322786937b1ff5a4d887ead1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "import type { FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport { ObjectId } from 'mongodb';\nimport _ from 'lodash';\nimport { FastifyInstance, FastifyReply } from 'fastify';\nimport jwt from 'jsonwebtoken';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime/library';\n\nimport * as schemas from '../../schemas';\nimport * as examEnvironmentSchemas from '../../exam-environment/schemas';\nimport { createResetProperties } from '../../utils/create-user';\nimport { customNanoid } from '../../utils/ids';\nimport { encodeUserToken } from '../../utils/tokens';\nimport { trimTags } from '../../utils/validation';\nimport { generateReportEmail } from '../../utils/email-templates';\nimport { splitUser } from '../helpers/user-utils';\nimport {\n  normalizeChallenges,\n  normalizeFlags,\n  normalizeProfileUI,\n  normalizeSurveys,\n  normalizeTwitter,\n  removeNulls\n} from '../../utils/normalize';\nimport { mapErr, type UpdateReqType } from '../../utils';\nimport {\n  getCalendar,\n  getPoints,\n  ProgressTimestamp\n} from '../../utils/progress';\nimport { DEPLOYMENT_ENV, JWT_SECRET } from '../../utils/env';\nimport {\n  getExamAttemptHandler,\n  getExamAttemptsHandler\n} from '../../exam-environment/routes/exam-environment';\nimport { ERRORS } from '../../exam-environment/utils/errors';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 0,
    "total_chunks": 19
  },
  {
    "id": "d12b1c832076c2b7380e3b2ce4ef2b3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "{ customNanoid } from '../../utils/ids'; import { encodeUserToken } from '../../utils/tokens'; import { trimTags } from '../../utils/validation'; import { generateReportEmail } from '../../utils/email-templates'; import { splitUser } from '../helpers/user-utils'; import { normalizeChallenges, normalizeFlags, normalizeProfileUI, normalizeSurveys, normalizeTwitter, removeNulls } from '../../utils/normalize'; import { mapErr, type UpdateReqType } from '../../utils'; import { getCalendar, getPoints, ProgressTimestamp } from '../../utils/progress'; import { DEPLOYMENT_ENV, JWT_SECRET } from '../../utils/env'; import { getExamAttemptHandler, getExamAttemptsHandler } from '../../exam-environment/routes/exam-environment'; import { ERRORS } from '../../exam-environment/utils/errors';\n\n/**\n * Helper function to get the api url from the shared transcript link.\n * Example msTranscriptUrl: https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo.\n *\n * @param msTranscript Shared transcript link.\n * @returns Microsoft transcript api url.\n */\nexport function getMsTranscriptApiUrl(msTranscript: string) {\n  try {\n    const url = new URL(msTranscript);\n    const transcriptUrlRegex = /\\/transcript\\/([^/]+)\\/?/;\n    const id = transcriptUrlRegex.exec(url.pathname)?.[1];\n    if (!id) {\n      return { error: `Invalid transcript URL: ${msTranscript}`, data: null };\n    }\n    return {\n      error: null,\n      data: `https://learn.microsoft.com/api/profiles/transcript/share/${id}`\n    };\n  } catch (e) {\n    return {\n      error: `Invalid transcript URL: ${msTranscript}\\n${JSON.stringify(e)}`,\n      data: null\n    };\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 1,
    "total_chunks": 19
  },
  {
    "id": "312ac7f116e25171a43f51f411c7cb87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "link. * Example msTranscriptUrl: https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo. * * @param msTranscript Shared transcript link. * @returns Microsoft transcript api url. */ export function getMsTranscriptApiUrl(msTranscript: string) { try { const url = new URL(msTranscript); const transcriptUrlRegex = /\\/transcript\\/([^/]+)\\/?/; const id = transcriptUrlRegex.exec(url.pathname)?.[1]; if (!id) { return { error: `Invalid transcript URL: ${msTranscript}`, data: null }; } return { error: null, data: `https://learn.microsoft.com/api/profiles/transcript/share/${id}` }; } catch (e) { return { error: `Invalid transcript URL: ${msTranscript}\\n${JSON.stringify(e)}`, data: null }; } }\n\n/**\n * Wrapper for endpoints related to user account management,\n * such as account deletion.\n *\n * @param fastify The Fastify instance.\n * @param _options Fastify options I guess?\n * @param done Callback to signal that the logic has completed.\n */\nexport const userRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.post(\n    '/account/delete',\n    {\n      schema: schemas.deleteMyAccount\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(`User ${req.user?.id} requested account deletion`);\n      await fastify.prisma.userToken.deleteMany({\n        where: { userId: req.user!.id }\n      });\n      await fastify.prisma.msUsername.deleteMany({\n        where: { userId: req.user!.id }\n      });\n      await fastify.prisma.survey.deleteMany({\n        where: { userId: req.user!.id }\n      });\n      try {\n        await fastify.prisma.user.delete({\n          where: { id: req.user!.id }\n        });\n      } catch (err) {\n        if (\n          err instanceof PrismaClientKnownRequestError &&\n          err.code === 'P2025'\n        ) {\n          logger.warn(\n            err,\n            `User with id ${req.user?.id} not found for deletion.`\n          );\n        } else {\n          logger.error(err, 'Error deleting user account');\n          throw err;\n        }\n      }\n      reply.clearOurCookies();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 521,
    "chunk_index": 2,
    "total_chunks": 19
  },
  {
    "id": "a55a15fcfceef7ff494c95b110d154c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "requested account deletion`); await fastify.prisma.userToken.deleteMany({ where: { userId: req.user!.id } }); await fastify.prisma.msUsername.deleteMany({ where: { userId: req.user!.id } }); await fastify.prisma.survey.deleteMany({ where: { userId: req.user!.id } }); try { await fastify.prisma.user.delete({ where: { id: req.user!.id } }); } catch (err) { if ( err instanceof PrismaClientKnownRequestError && err.code === 'P2025' ) { logger.warn( err, `User with id ${req.user?.id} not found for deletion.` ); } else { logger.error(err, 'Error deleting user account'); throw err; } } reply.clearOurCookies();\n\nreturn {};\n    }\n  );\n\nfastify.post(\n    '/account/reset-progress',\n    {\n      schema: schemas.resetMyProgress\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(`User ${req.user?.id} requested progress reset`);\n      await fastify.prisma.userToken.deleteMany({\n        where: { userId: req.user!.id }\n      });\n      await fastify.prisma.msUsername.deleteMany({\n        where: { userId: req.user!.id }\n      });\n      await fastify.prisma.survey.deleteMany({\n        where: { userId: req.user!.id }\n      });\n      await fastify.prisma.user.update({\n        where: { id: req.user!.id },\n        data: createResetProperties()\n      });\n\nreturn {};\n    }\n  );\n  // TODO(Post-MVP): POST -> PUT\n  fastify.post('/user/user-token', async (req, reply) => {\n    const logger = fastify.log.child({ req, res: reply });\n    logger.info(`User ${req.user?.id} requested a new user token`);\n\nawait fastify.prisma.userToken.deleteMany({\n      where: { userId: req.user?.id }\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 3,
    "total_chunks": 19
  },
  {
    "id": "41b65c5ebac7d64038976b3a758c2406",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "${req.user?.id} requested progress reset`); await fastify.prisma.userToken.deleteMany({ where: { userId: req.user!.id } }); await fastify.prisma.msUsername.deleteMany({ where: { userId: req.user!.id } }); await fastify.prisma.survey.deleteMany({ where: { userId: req.user!.id } }); await fastify.prisma.user.update({ where: { id: req.user!.id }, data: createResetProperties() }); return {}; } ); // TODO(Post-MVP): POST -> PUT fastify.post('/user/user-token', async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); logger.info(`User ${req.user?.id} requested a new user token`); await fastify.prisma.userToken.deleteMany({ where: { userId: req.user?.id } });\n\nconst token = await fastify.prisma.userToken.create({\n      data: {\n        created: new Date(),\n        id: customNanoid(),\n        userId: req.user!.id,\n        // TODO(Post-MVP): expire after ttl has passed.\n        ttl: 77760000000 // 900 * 24 * 60 * 60 * 1000\n      }\n    });\n\nreturn {\n      userToken: encodeUserToken(token.id)\n    };\n  });\n\nfastify.delete(\n    '/user/user-token',\n    {\n      schema: schemas.deleteUserToken\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(`User ${req.user?.id} requested token deletion`);\n\nconst { count } = await fastify.prisma.userToken.deleteMany({\n        where: { userId: req.user?.id }\n      });\n\nif (count === 0) {\n        logger.warn('No userToken found for deletion');\n        void reply.code(404);\n        return {\n          message: 'userToken not found',\n          type: 'info'\n        } as const;\n      }\n      return { userToken: null };\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 4,
    "total_chunks": 19
  },
  {
    "id": "802afcfd08dc5969c3639ce5f7473c7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "} }); return { userToken: encodeUserToken(token.id) }; }); fastify.delete( '/user/user-token', { schema: schemas.deleteUserToken }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); logger.info(`User ${req.user?.id} requested token deletion`); const { count } = await fastify.prisma.userToken.deleteMany({ where: { userId: req.user?.id } }); if (count === 0) { logger.warn('No userToken found for deletion'); void reply.code(404); return { message: 'userToken not found', type: 'info' } as const; } return { userToken: null }; } );\n\nfastify.post(\n    '/user/report-user',\n    {\n      schema: schemas.reportUser,\n      preHandler: (req, _reply, done) => {\n        req.body.reportDescription = trimTags(req.body.reportDescription);\n        done();\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(`User ${req.user?.id} reported user ${req.body.username}`);\n\nconst user = await fastify.prisma.user.findUniqueOrThrow({\n        where: { id: req.user?.id }\n      });\n\nif (!user.email) {\n        logger.warn('User has no email');\n        void reply.code(403);\n        return reply.send({\n          type: 'danger',\n          message: 'flash.report-error'\n        });\n      }\n\nconst { username, reportDescription: report } = req.body;\n\n// TODO: `findUnique` once db migration forces unique usernames\n      const maybeReportedUsers = await mapErr(\n        fastify.prisma.user.findMany({\n          where: { username }\n        })\n      );\n\nif (maybeReportedUsers.hasError) {\n        logger.error(\n          { error: maybeReportedUsers.error, username },\n          'Error finding reported user.'\n        );\n        fastify.Sentry.captureException(maybeReportedUsers.error);\n        void reply.code(500);\n        return {\n          type: 'danger',\n          message: 'flash.generic-error'\n        } as const;\n      }\n\nconst reportedUsers = maybeReportedUsers.data;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 5,
    "total_chunks": 19
  },
  {
    "id": "6edaf79bbbd3e53d646d5ce4ffe10517",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "(!user.email) { logger.warn('User has no email'); void reply.code(403); return reply.send({ type: 'danger', message: 'flash.report-error' }); } const { username, reportDescription: report } = req.body; // TODO: `findUnique` once db migration forces unique usernames const maybeReportedUsers = await mapErr( fastify.prisma.user.findMany({ where: { username } }) ); if (maybeReportedUsers.hasError) { logger.error( { error: maybeReportedUsers.error, username }, 'Error finding reported user.' ); fastify.Sentry.captureException(maybeReportedUsers.error); void reply.code(500); return { type: 'danger', message: 'flash.generic-error' } as const; } const reportedUsers = maybeReportedUsers.data;\n\nif (reportedUsers.length !== 1) {\n        logger.warn({ username }, 'Reported user not found');\n        void reply.code(404);\n        return {\n          type: 'danger',\n          message: 'flash.report-error'\n        } as const;\n      }\n\nconst reportedUser = reportedUsers[0]!;\n\nawait fastify.sendEmail({\n        from: 'team@freecodecamp.org',\n        to: 'support@freecodecamp.org',\n        cc: user.email,\n        subject: `Abuse Report : Reporting ${reportedUser.username}'s profile.`,\n        text: generateReportEmail(user, reportedUser, report)\n      });\n\nreply.send({\n        type: 'info',\n        message: 'flash.report-sent',\n        variables: { email: user.email }\n      });\n    }\n  );\n\nfastify.delete(\n    '/user/ms-username',\n    {\n      schema: schemas.deleteMsUsername\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(`User ${req.user?.id} requested unlinking of msUsername`);\n\ntry {\n        await fastify.prisma.msUsername.deleteMany({\n          where: { userId: req.user?.id }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 6,
    "total_chunks": 19
  },
  {
    "id": "c07daa2acc10dc284fbe1c1c659db430",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "} as const; } const reportedUser = reportedUsers[0]!; await fastify.sendEmail({ from: 'team@freecodecamp.org', to: 'support@freecodecamp.org', cc: user.email, subject: `Abuse Report : Reporting ${reportedUser.username}'s profile.`, text: generateReportEmail(user, reportedUser, report) }); reply.send({ type: 'info', message: 'flash.report-sent', variables: { email: user.email } }); } ); fastify.delete( '/user/ms-username', { schema: schemas.deleteMsUsername }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); logger.info(`User ${req.user?.id} requested unlinking of msUsername`); try { await fastify.prisma.msUsername.deleteMany({ where: { userId: req.user?.id } });\n\n// TODO(Post-MVP): return a generic success message.\n        return { msUsername: null };\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        void reply.send({\n          message: 'flash.ms.transcript.unlink-err',\n          type: 'error'\n        });\n      }\n    }\n  );\n\nfastify.post(\n    '/user/ms-username',\n    {\n      schema: schemas.postMsUsername,\n      errorHandler(error, req, reply) {\n        const logger = fastify.log.child({ req, res: reply });\n        if (error.validation) {\n          logger.warn({ validationError: error.validation });\n          void reply.code(400).send({\n            message: 'flash.ms.transcript.link-err-1',\n            type: 'error'\n          });\n        } else {\n          fastify.errorHandler(error, req, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(\n        `User ${req.user?.id} requested linking of msUsername \"${req.body.msTranscriptUrl}\"`\n      );\n\ntry {\n        const user = await fastify.prisma.user.findUniqueOrThrow({\n          where: { id: req.user?.id }\n        });\n\nconst maybeTranscriptUrl = getMsTranscriptApiUrl(\n          req.body.msTranscriptUrl\n        );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 7,
    "total_chunks": 19
  },
  {
    "id": "97da3dfcb56a55158a9da93da1457ba4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "errorHandler(error, req, reply) { const logger = fastify.log.child({ req, res: reply }); if (error.validation) { logger.warn({ validationError: error.validation }); void reply.code(400).send({ message: 'flash.ms.transcript.link-err-1', type: 'error' }); } else { fastify.errorHandler(error, req, reply); } } }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); logger.info( `User ${req.user?.id} requested linking of msUsername \"${req.body.msTranscriptUrl}\"` ); try { const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id } }); const maybeTranscriptUrl = getMsTranscriptApiUrl( req.body.msTranscriptUrl );\n\nif (maybeTranscriptUrl.error !== null) {\n          logger.warn(\n            { error: maybeTranscriptUrl.error },\n            'Unable to parse Microsoft transcript URL'\n          );\n          return reply\n            .status(400)\n            .send({ type: 'error', message: 'flash.ms.transcript.link-err-1' });\n        }\n\nconst transcriptUrl = maybeTranscriptUrl.data;\n\nconst msApiRes = await fetch(transcriptUrl);\n\nif (!msApiRes.ok) {\n          logger.warn(\n            { status: msApiRes.status },\n            \"Unable to fetch user's Microsoft transcript\"\n          );\n          return reply\n            .status(404)\n            .send({ type: 'error', message: 'flash.ms.transcript.link-err-2' });\n        }\n\nconst { userName } = (await msApiRes.json()) as { userName: string };\n\nif (!userName) {\n          logger.warn('No userName found in msApiRes');\n          return reply.status(500).send({\n            type: 'error',\n            message: 'flash.ms.transcript.link-err-3'\n          });\n        }\n\n// TODO(Post-MVP): make msUsername unique, then we can simply try to\n        // create the record and catch the error.\n        const usernameUsed = !!(await fastify.prisma.msUsername.findFirst({\n          where: {\n            msUsername: userName\n          }\n        }));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 8,
    "total_chunks": 19
  },
  {
    "id": "058fb388fdfbb1402d17811c6eb7ad4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "}, \"Unable to fetch user's Microsoft transcript\" ); return reply .status(404) .send({ type: 'error', message: 'flash.ms.transcript.link-err-2' }); } const { userName } = (await msApiRes.json()) as { userName: string }; if (!userName) { logger.warn('No userName found in msApiRes'); return reply.status(500).send({ type: 'error', message: 'flash.ms.transcript.link-err-3' }); } // TODO(Post-MVP): make msUsername unique, then we can simply try to // create the record and catch the error. const usernameUsed = !!(await fastify.prisma.msUsername.findFirst({ where: { msUsername: userName } }));\n\nif (usernameUsed) {\n          logger.warn('msUsername already in use');\n          return reply.status(403).send({\n            type: 'error',\n            message: 'flash.ms.transcript.link-err-4'\n          });\n        }\n\n// TODO(Post-MVP): do we need to store tll in the database? We aren't\n        // storing the creation date, so we can't expire it.\n\n// 900 days in ms\n        const ttl = 900 * 24 * 60 * 60 * 1000;\n\n// TODO(Post-MVP): make userId unique and then we can upsert.\n\nawait fastify.prisma.msUsername.deleteMany({\n          where: { userId: user.id }\n        });\n\nawait fastify.prisma.msUsername.create({\n          data: {\n            msUsername: userName,\n            ttl,\n            userId: user.id\n          }\n        });\n\nreturn { msUsername: userName };\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        return reply.code(500).send({\n          type: 'error',\n          message: 'flash.ms.transcript.link-err-6'\n        });\n      }\n    }\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 9,
    "total_chunks": 19
  },
  {
    "id": "1485b49369aa2b718d8b48185d527962",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "storing the creation date, so we can't expire it. // 900 days in ms const ttl = 900 * 24 * 60 * 60 * 1000; // TODO(Post-MVP): make userId unique and then we can upsert. await fastify.prisma.msUsername.deleteMany({ where: { userId: user.id } }); await fastify.prisma.msUsername.create({ data: { msUsername: userName, ttl, userId: user.id } }); return { msUsername: userName }; } catch (err) { logger.error(err); fastify.Sentry.captureException(err); return reply.code(500).send({ type: 'error', message: 'flash.ms.transcript.link-err-6' }); } } );\n\nfastify.post(\n    '/user/submit-survey',\n    {\n      schema: schemas.submitSurvey,\n      errorHandler(error, request, reply) {\n        if (error.validation) {\n          void reply.code(400).send({\n            type: 'error',\n            message: 'flash.survey.err-1'\n          });\n        } else {\n          fastify.errorHandler(error, request, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      logger.info(`User ${req.user?.id} submitted a survey`);\n      try {\n        const user = await fastify.prisma.user.findUniqueOrThrow({\n          where: { id: req.user?.id }\n        });\n        const { surveyResults } = req.body;\n        const { title } = surveyResults;\n\nconst completedSurveys = await fastify.prisma.survey.findMany({\n          where: { userId: user.id }\n        });\n\nconst surveyAlreadyTaken = completedSurveys.some(\n          s => s.title === title\n        );\n        if (surveyAlreadyTaken) {\n          logger.warn('Survey already taken');\n          return reply.code(400).send({\n            type: 'error',\n            message: 'flash.survey.err-2'\n          });\n        }\n\nconst newSurvey = {\n          ...surveyResults,\n          userId: user.id\n        };\n\nawait fastify.prisma.survey.create({\n          data: newSurvey\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 10,
    "total_chunks": 19
  },
  {
    "id": "307b41fb6c97a5dd55d44aa1cdc80241",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "submitted a survey`); try { const user = await fastify.prisma.user.findUniqueOrThrow({ where: { id: req.user?.id } }); const { surveyResults } = req.body; const { title } = surveyResults; const completedSurveys = await fastify.prisma.survey.findMany({ where: { userId: user.id } }); const surveyAlreadyTaken = completedSurveys.some( s => s.title === title ); if (surveyAlreadyTaken) { logger.warn('Survey already taken'); return reply.code(400).send({ type: 'error', message: 'flash.survey.err-2' }); } const newSurvey = { ...surveyResults, userId: user.id }; await fastify.prisma.survey.create({ data: newSurvey });\n\nreturn {\n          type: 'success',\n          message: 'flash.survey.success'\n        } as const;\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void reply.code(500);\n        return {\n          type: 'error',\n          message: 'flash.survey.err-3'\n        } as const;\n      }\n    }\n  );\n\nfastify.post(\n    '/user/exam-environment/token',\n    {\n      schema: schemas.userExamEnvironmentToken\n    },\n    examEnvironmentTokenHandler\n  );\n\nfastify.get(\n    '/user/exam-environment/exam/attempts',\n    {\n      schema: examEnvironmentSchemas.examEnvironmentGetExamAttempts\n    },\n    getExamAttemptsHandler\n  );\n  fastify.get(\n    '/user/exam-environment/exam/attempt/:attemptId',\n    {\n      schema: examEnvironmentSchemas.examEnvironmentGetExamAttempt\n    },\n    getExamAttemptHandler\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 11,
    "total_chunks": 19
  },
  {
    "id": "20c22e61cd025c911f8baa4584588fed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "return reply.code(400).send({ type: 'error', message: 'flash.survey.err-2' }); } const newSurvey = { ...surveyResults, userId: user.id }; await fastify.prisma.survey.create({ data: newSurvey }); return { type: 'success', message: 'flash.survey.success' } as const; } catch (err) { logger.error(err); fastify.Sentry.captureException(err); void reply.code(500); return { type: 'error', message: 'flash.survey.err-3' } as const; } } ); fastify.post( '/user/exam-environment/token', { schema: schemas.userExamEnvironmentToken }, examEnvironmentTokenHandler ); fastify.get( '/user/exam-environment/exam/attempts', { schema: examEnvironmentSchemas.examEnvironmentGetExamAttempts }, getExamAttemptsHandler ); fastify.get( '/user/exam-environment/exam/attempt/:attemptId', { schema: examEnvironmentSchemas.examEnvironmentGetExamAttempt }, getExamAttemptHandler ); done(); };\n\n// eslint-disable-next-line jsdoc/require-param, jsdoc/require-returns\n/**\n * Generate a new authorization token for the given user, and invalidates any existing tokens.\n *\n * Requires the user to be authenticated.\n */\nasync function examEnvironmentTokenHandler(\n  this: FastifyInstance,\n  req: UpdateReqType<typeof schemas.userExamEnvironmentToken>,\n  reply: FastifyReply\n) {\n  const logger = this.log.child({ req });\n  logger.info(`User ${req.user?.id} requested a new exam environment token`);\n  const userId = req.user?.id;\n  if (!userId) {\n    throw new Error('Unreachable. User should be authenticated.');\n  }\n\n// In non-production environments, only staff are allowed to generate a token\n  if (\n    DEPLOYMENT_ENV !== 'org' &&\n    (!req.user?.email?.endsWith('@freecodecamp.org') ||\n      !req.user?.emailVerified)\n  ) {\n    logger.info(\n      `User not allowed to generate authorization token on ${DEPLOYMENT_ENV}.`\n    );\n    void reply.code(403);\n    return reply.send(\n      ERRORS.FCC_ERR_EXAM_ENVIRONMENT(\n        `User not allowed to generate authorization token in ${DEPLOYMENT_ENV} environment.`\n      )\n    );\n  }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 12,
    "total_chunks": 19
  },
  {
    "id": "51352b17b40c09667d5f24fb4e5ffa48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "}); logger.info(`User ${req.user?.id} requested a new exam environment token`); const userId = req.user?.id; if (!userId) { throw new Error('Unreachable. User should be authenticated.'); } // In non-production environments, only staff are allowed to generate a token if ( DEPLOYMENT_ENV !== 'org' && (!req.user?.email?.endsWith('@freecodecamp.org') || !req.user?.emailVerified) ) { logger.info( `User not allowed to generate authorization token on ${DEPLOYMENT_ENV}.` ); void reply.code(403); return reply.send( ERRORS.FCC_ERR_EXAM_ENVIRONMENT( `User not allowed to generate authorization token in ${DEPLOYMENT_ENV} environment.` ) ); }\n\n// Delete (invalidate) any existing tokens for the user.\n  await this.prisma.examEnvironmentAuthorizationToken.deleteMany({\n    where: {\n      userId\n    }\n  });\n\nconst ONE_YEAR_IN_MS = 365 * 24 * 60 * 60 * 1000;\n\nconst token = await this.prisma.examEnvironmentAuthorizationToken.create({\n    data: {\n      expireAt: new Date(Date.now() + ONE_YEAR_IN_MS),\n      userId\n    }\n  });\n\nconst examEnvironmentAuthorizationToken = jwt.sign(\n    { examEnvironmentAuthorizationToken: token.id },\n    JWT_SECRET\n  );\n\nvoid reply.code(201);\n  void reply.send({\n    examEnvironmentAuthorizationToken\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 297,
    "chunk_index": 13,
    "total_chunks": 19
  },
  {
    "id": "26805d208bde3973eb43e7fecebd4a39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "return reply.send( ERRORS.FCC_ERR_EXAM_ENVIRONMENT( `User not allowed to generate authorization token in ${DEPLOYMENT_ENV} environment.` ) ); } // Delete (invalidate) any existing tokens for the user. await this.prisma.examEnvironmentAuthorizationToken.deleteMany({ where: { userId } }); const ONE_YEAR_IN_MS = 365 * 24 * 60 * 60 * 1000; const token = await this.prisma.examEnvironmentAuthorizationToken.create({ data: { expireAt: new Date(Date.now() + ONE_YEAR_IN_MS), userId } }); const examEnvironmentAuthorizationToken = jwt.sign( { examEnvironmentAuthorizationToken: token.id }, JWT_SECRET ); void reply.code(201); void reply.send({ examEnvironmentAuthorizationToken }); }\n\n/**\n * Plugin containing GET routes for user account management. They are kept\n * separate because they do not require CSRF protection.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n */\nexport const userGetRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.get(\n    '/user/get-session-user',\n    {\n      schema: schemas.getSessionUser\n    },\n    async (req, res) => {\n      const logger = fastify.log.child({ req, res });\n      // This is one of the most requested routes. To avoid spamming the logs\n      // with this route, we'll log requests at the debug level.\n      logger.debug({ userId: req.user?.id });\n      try {\n        const userTokenP = fastify.prisma.userToken.findFirst({\n          where: { userId: req.user!.id }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 14,
    "total_chunks": 19
  },
  {
    "id": "95207343b45fbf58fd469c1f259d62e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "the logic has completed. */ export const userGetRoutes: FastifyPluginCallbackTypebox = ( fastify, _options, done ) => { fastify.get( '/user/get-session-user', { schema: schemas.getSessionUser }, async (req, res) => { const logger = fastify.log.child({ req, res }); // This is one of the most requested routes. To avoid spamming the logs // with this route, we'll log requests at the debug level. logger.debug({ userId: req.user?.id }); try { const userTokenP = fastify.prisma.userToken.findFirst({ where: { userId: req.user!.id } });\n\nconst userP = fastify.prisma.user.findUnique({\n          where: { id: req.user!.id },\n          select: {\n            about: true,\n            acceptedPrivacyTerms: true,\n            completedChallenges: true,\n            completedDailyCodingChallenges: true,\n            completedExams: true,\n            currentChallengeId: true,\n            quizAttempts: true,\n            email: true,\n            emailVerified: true,\n            githubProfile: true,\n            id: true,\n            is2018DataVisCert: true,\n            is2018FullStackCert: true,\n            isApisMicroservicesCert: true,\n            isBackEndCert: true,\n            isCheater: true,\n            isCollegeAlgebraPyCertV8: true,\n            isDataAnalysisPyCertV7: true,\n            isDataVisCert: true,\n            isDonating: true,\n            isFoundationalCSharpCertV8: true,\n            isFrontEndCert: true,\n            isFrontEndLibsCert: true,\n            isFullStackCert: true,\n            isHonest: true,\n            isInfosecCertV7: true,\n            isInfosecQaCert: true,\n            isJsAlgoDataStructCert: true,\n            isJsAlgoDataStructCertV8: true,\n            isMachineLearningPyCertV7: true,\n            isQaCertV7: true,\n            isRelationalDatabaseCertV8: true,\n            isRespWebDesignCert: true,\n            isSciCompPyCertV7: true,\n            keyboardShortcuts: true,\n            linkedin: true,\n            location: true,\n            name: true,\n            partiallyCompletedChallenges: true,\n            picture: true,\n            portfolio: true,\n            profileUI: true,\n            progressTimestamps: true,\n            savedChallenges: true,\n            sendQuincyEmail: true,\n            theme: true,\n            twitter: true,\n            username: true,\n            usernameDisplay: true,\n            website: true,\n            yearsTopContributor: true\n          }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 563,
    "chunk_index": 15,
    "total_chunks": 19
  },
  {
    "id": "f8491d8046caad53cd8732a86dcbcdcd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "isBackEndCert: true, isCheater: true, isCollegeAlgebraPyCertV8: true, isDataAnalysisPyCertV7: true, isDataVisCert: true, isDonating: true, isFoundationalCSharpCertV8: true, isFrontEndCert: true, isFrontEndLibsCert: true, isFullStackCert: true, isHonest: true, isInfosecCertV7: true, isInfosecQaCert: true, isJsAlgoDataStructCert: true, isJsAlgoDataStructCertV8: true, isMachineLearningPyCertV7: true, isQaCertV7: true, isRelationalDatabaseCertV8: true, isRespWebDesignCert: true, isSciCompPyCertV7: true, keyboardShortcuts: true, linkedin: true, location: true, name: true, partiallyCompletedChallenges: true, picture: true, portfolio: true, profileUI: true, progressTimestamps: true, savedChallenges: true, sendQuincyEmail: true, theme: true, twitter: true, username: true, usernameDisplay: true, website: true, yearsTopContributor: true } });\n\nconst completedSurveysP = fastify.prisma.survey.findMany({\n          where: { userId: req.user!.id }\n        });\n\nconst msUsernameP = fastify.prisma.msUsername.findFirst({\n          where: { userId: req.user?.id }\n        });\n\nconst [userToken, user, completedSurveys, msUsername] =\n          await Promise.all([\n            userTokenP,\n            userP,\n            completedSurveysP,\n            msUsernameP\n          ]);\n\nif (!user?.username) {\n          logger.error(`User ${req.user?.id} has no username`);\n          void res.code(500);\n          return { user: {}, result: '' };\n        }\n        // TODO: DRY this (the creation of the response body) and\n        // get-public-profile's response body creation.\n\nconst encodedToken = userToken\n          ? encodeUserToken(userToken.id)\n          : undefined;\n\nconst [flags, rest] = splitUser(user);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 16,
    "total_chunks": 19
  },
  {
    "id": "96f0f906bc9dbb9d0f2540057b475a9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "where: { userId: req.user!.id } }); const msUsernameP = fastify.prisma.msUsername.findFirst({ where: { userId: req.user?.id } }); const [userToken, user, completedSurveys, msUsername] = await Promise.all([ userTokenP, userP, completedSurveysP, msUsernameP ]); if (!user?.username) { logger.error(`User ${req.user?.id} has no username`); void res.code(500); return { user: {}, result: '' }; } // TODO: DRY this (the creation of the response body) and // get-public-profile's response body creation. const encodedToken = userToken ? encodeUserToken(userToken.id) : undefined; const [flags, rest] = splitUser(user);\n\nconst {\n          email,\n          emailVerified,\n          username,\n          usernameDisplay,\n          completedChallenges,\n          completedDailyCodingChallenges,\n          progressTimestamps,\n          twitter,\n          profileUI,\n          currentChallengeId,\n          location,\n          name,\n          theme,\n          ...publicUser\n        } = rest;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 17,
    "total_chunks": 19
  },
  {
    "id": "3113bd630b3a8674e10acd7958553a6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
    "source_type": "git_repo",
    "title": "user",
    "content": "completedSurveys, msUsername] = await Promise.all([ userTokenP, userP, completedSurveysP, msUsernameP ]); if (!user?.username) { logger.error(`User ${req.user?.id} has no username`); void res.code(500); return { user: {}, result: '' }; } // TODO: DRY this (the creation of the response body) and // get-public-profile's response body creation. const encodedToken = userToken ? encodeUserToken(userToken.id) : undefined; const [flags, rest] = splitUser(user); const { email, emailVerified, username, usernameDisplay, completedChallenges, completedDailyCodingChallenges, progressTimestamps, twitter, profileUI, currentChallengeId, location, name, theme, ...publicUser } = rest;\n\nawait res.send({\n          user: {\n            [username]: {\n              ...removeNulls(publicUser),\n              ...normalizeFlags(flags),\n              picture: publicUser.picture ?? '',\n              email: email ?? '',\n              currentChallengeId: currentChallengeId ?? '',\n              completedChallenges: normalizeChallenges(completedChallenges),\n              completedChallengeCount: completedChallenges.length,\n              completedDailyCodingChallenges,\n              // This assertion is necessary until the database is normalized.\n              calendar: getCalendar(\n                progressTimestamps as ProgressTimestamp[] | null\n              ),\n              emailVerified: !!emailVerified,\n              // This assertion is necessary until the database is normalized.\n              points: getPoints(\n                progressTimestamps as ProgressTimestamp[] | null\n              ),\n              profileUI: normalizeProfileUI(profileUI),\n              // TODO(Post-MVP) remove this and just use emailVerified\n              isEmailVerified: !!emailVerified,\n              joinDate: new ObjectId(user.id).getTimestamp().toISOString(),\n              location: location ?? '',\n              name: name ?? '',\n              theme: theme ?? 'default',\n              twitter: normalizeTwitter(twitter),\n              username,\n              usernameDisplay: usernameDisplay || username,\n              userToken: encodedToken,\n              completedSurveys: normalizeSurveys(completedSurveys),\n              msUsername: msUsername?.msUsername\n            }\n          },\n          result: user.username\n        });\n      } catch (err) {\n        logger.error(err);\n        fastify.Sentry.captureException(err);\n        void res.code(500);\n        return { user: {}, result: '' };\n      }\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 21794,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 18,
    "total_chunks": 19
  },
  {
    "id": "c592c06c1741cd579d6cb20127ea0ffb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth-dev.ts",
    "source_type": "git_repo",
    "title": "auth-dev",
    "content": "import type { FastifyPluginCallback } from 'fastify';\n\nimport { devAuth } from '../../plugins/auth-dev';\n\n/**\n * Route handler for development login.\n *\n * @deprecated\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin,\n * options)`.\n * @param done Callback to signal that the logic has completed.\n */\nexport const devAuthRoutes: FastifyPluginCallback = (\n  fastify,\n  _options,\n  done\n) => {\n  void fastify.register(devAuth);\n  done();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 506,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth-dev.ts",
      "source_type": "git_repo"
    },
    "token_count": 120,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "74bbb07d06ee6bbd4510f4779ef301d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.test.ts",
    "source_type": "git_repo",
    "title": "auth.test",
    "content": "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport {\n  setupServer,\n  superRequest,\n  createSuperRequest\n} from '../../../jest.utils';\nimport { AUTH0_DOMAIN } from '../../utils/env';\n\nconst mockedFetch = jest.fn();\njest.spyOn(globalThis, 'fetch').mockImplementation(mockedFetch);\n\nconst newUserEmail = 'a.n.random@user.com';\n\nconst mockAuth0NotOk = () => ({\n  ok: false\n});\n\nconst mockAuth0InvalidEmail = () => ({\n  ok: true,\n  json: () => ({ email: 'invalid-email' })\n});\n\nconst mockAuth0ValidEmail = () => ({\n  ok: true,\n  json: () => ({ email: newUserEmail })\n});\n\njest.mock('../../utils/env', () => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return {\n    ...jest.requireActual('../../utils/env'),\n    FCC_ENABLE_DEV_LOGIN_MODE: false\n  };\n});\n\ndescribe('auth0 routes', () => {\n  setupServer();\n  describe('GET /signin', () => {\n    it('should redirect to the auth0 login page', async () => {\n      const res = await superRequest('/signin', { method: 'GET' });\n\nexpect(res.status).toBe(302);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      const redirectUrl = new URL(res.headers.location);\n      expect(redirectUrl.host).toMatch(AUTH0_DOMAIN);\n      expect(redirectUrl.pathname).toBe('/authorize');\n    });\n  });\n\ndescribe('GET /mobile-login', () => {\n    let superGet: ReturnType<typeof createSuperRequest>;\n\nbeforeAll(() => {\n      superGet = createSuperRequest({ method: 'GET' });\n    });\n    beforeEach(async () => {\n      await fastifyTestInstance.prisma.user.deleteMany({\n        where: { email: newUserEmail }\n      });\n    });\n\nit('should return 401 if the authorization header is invalid', async () => {\n      mockedFetch.mockResolvedValueOnce(mockAuth0NotOk());\n      const res = await superGet('/mobile-login').set(\n        'Authorization',\n        'Bearer invalid-token'\n      );\n\nexpect(res.body).toStrictEqual({\n        type: 'danger',\n        message: 'We could not log you in, please try again in a moment.'\n      });\n      expect(res.status).toBe(401);\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4207,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1bc6abb7761c267db96b8c1c02817f1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.test.ts",
    "source_type": "git_repo",
    "title": "auth.test",
    "content": "}); }); describe('GET /mobile-login', () => { let superGet: ReturnType<typeof createSuperRequest>; beforeAll(() => { superGet = createSuperRequest({ method: 'GET' }); }); beforeEach(async () => { await fastifyTestInstance.prisma.user.deleteMany({ where: { email: newUserEmail } }); }); it('should return 401 if the authorization header is invalid', async () => { mockedFetch.mockResolvedValueOnce(mockAuth0NotOk()); const res = await superGet('/mobile-login').set( 'Authorization', 'Bearer invalid-token' ); expect(res.body).toStrictEqual({ type: 'danger', message: 'We could not log you in, please try again in a moment.' }); expect(res.status).toBe(401); });\n\nit('should return 400 if the email is not valid', async () => {\n      mockedFetch.mockResolvedValueOnce(mockAuth0InvalidEmail());\n      const res = await superGet('/mobile-login').set(\n        'Authorization',\n        'Bearer valid-token'\n      );\n\nexpect(res.body).toStrictEqual({\n        type: 'danger',\n        message: 'The email is incorrectly formatted'\n      });\n      expect(res.status).toBe(400);\n    });\n\nit('should set the jwt_access_token cookie if the authorization header is valid', async () => {\n      mockedFetch.mockResolvedValueOnce(mockAuth0ValidEmail());\n      const res = await superGet('/mobile-login').set(\n        'Authorization',\n        'Bearer valid-token'\n      );\n\nexpect(res.status).toBe(200);\n      expect(res.get('Set-Cookie')).toEqual(\n        expect.arrayContaining([expect.stringMatching(/jwt_access_token=/)])\n      );\n    });\n\nit('should create a user if they do not exist', async () => {\n      mockedFetch.mockResolvedValueOnce(mockAuth0ValidEmail());\n      const existingUserCount = await fastifyTestInstance.prisma.user.count();\n\nconst res = await superGet('/mobile-login').set(\n        'Authorization',\n        'Bearer valid-token'\n      );\n\nconst newUserCount = await fastifyTestInstance.prisma.user.count();\n\nexpect(existingUserCount).toBe(0);\n      expect(newUserCount).toBe(1);\n      expect(res.status).toBe(200);\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4207,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3d0aa0243807e7dc216d338d63880d07",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.test.ts",
    "source_type": "git_repo",
    "title": "auth.test",
    "content": "message: 'The email is incorrectly formatted' }); expect(res.status).toBe(400); }); it('should set the jwt_access_token cookie if the authorization header is valid', async () => { mockedFetch.mockResolvedValueOnce(mockAuth0ValidEmail()); const res = await superGet('/mobile-login').set( 'Authorization', 'Bearer valid-token' ); expect(res.status).toBe(200); expect(res.get('Set-Cookie')).toEqual( expect.arrayContaining([expect.stringMatching(/jwt_access_token=/)]) ); }); it('should create a user if they do not exist', async () => { mockedFetch.mockResolvedValueOnce(mockAuth0ValidEmail()); const existingUserCount = await fastifyTestInstance.prisma.user.count(); const res = await superGet('/mobile-login').set( 'Authorization', 'Bearer valid-token' ); const newUserCount = await fastifyTestInstance.prisma.user.count(); expect(existingUserCount).toBe(0); expect(newUserCount).toBe(1); expect(res.status).toBe(200); });\n\nit('should redirect to returnTo if already logged in', async () => {\n      mockedFetch.mockResolvedValueOnce(mockAuth0ValidEmail());\n      const firstRes = await superGet('/mobile-login').set(\n        'Authorization',\n        'Bearer valid-token'\n      );\n\nexpect(firstRes.status).toBe(200);\n\nconst res = await superRequest('/mobile-login', {\n        method: 'GET',\n        setCookies: firstRes.get('Set-Cookie')\n      })\n        .set('Authorization', 'Bearer does-not-matter')\n        .set('Referer', 'https://www.freecodecamp.org/back-home');\n\nexpect(res.status).toBe(302);\n      expect(res.headers.location).toBe(\n        'https://www.freecodecamp.org/back-home'\n      );\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4207,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "884d8441ac36fcd97496c448a5ceb5f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.ts",
    "source_type": "git_repo",
    "title": "auth",
    "content": "import type { FastifyPluginCallback, FastifyRequest } from 'fastify';\nimport isEmail from 'validator/lib/isEmail';\n\nimport { AUTH0_DOMAIN } from '../../utils/env';\nimport { auth0Client } from '../../plugins/auth0';\nimport { createAccessToken } from '../../utils/tokens';\nimport { findOrCreateUser } from '../helpers/auth-helpers';\n\nconst getEmailFromAuth0 = async (\n  req: FastifyRequest\n): Promise<string | null> => {\n  const auth0Res = await fetch(`https://${AUTH0_DOMAIN}/userinfo`, {\n    headers: {\n      Authorization: req.headers.authorization ?? ''\n    }\n  });\n\nif (!auth0Res.ok) return null;\n\n// For now, we assume the response is a JSON object. If not, we can't proceed\n  // and the only safe thing to do is to throw.\n  const { email } = (await auth0Res.json()) as { email?: string };\n  return typeof email === 'string' ? email : null;\n};\n\n/**\n * Route handler for Mobile authentication.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n *\n */\nexport const mobileAuth0Routes: FastifyPluginCallback = (\n  fastify,\n  _options,\n  done\n) => {\n  // TODO(Post-MVP): move this into the app, so that we add this hook once for\n  // all auth routes.\n  fastify.addHook('onRequest', fastify.redirectIfSignedIn);\n\nfastify.get('/mobile-login', async (req, reply) => {\n    const email = await getEmailFromAuth0(req);\n\nconst logger = fastify.log.child({ req, res: reply });\n\nlogger.info('Mobile app login attempt');\n\nif (!email) {\n      logger.error('Could not get email from Auth0 to log in');\n\nreturn reply.status(401).send({\n        message: 'We could not log you in, please try again in a moment.',\n        type: 'danger'\n      });\n    }\n    if (!isEmail(email)) {\n      logger.error('Email is incorrectly formatted for login');\n\nreturn reply.status(400).send({\n        message: 'The email is incorrectly formatted',\n        type: 'danger'\n      });\n    }\n\nconst { id } = await findOrCreateUser(fastify, email);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2733,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9ebe3a2e3c52174d795d1b3239b887a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.ts",
    "source_type": "git_repo",
    "title": "auth",
    "content": "email = await getEmailFromAuth0(req); const logger = fastify.log.child({ req, res: reply }); logger.info('Mobile app login attempt'); if (!email) { logger.error('Could not get email from Auth0 to log in'); return reply.status(401).send({ message: 'We could not log you in, please try again in a moment.', type: 'danger' }); } if (!isEmail(email)) { logger.error('Email is incorrectly formatted for login'); return reply.status(400).send({ message: 'The email is incorrectly formatted', type: 'danger' }); } const { id } = await findOrCreateUser(fastify, email);\n\nreply.setAccessTokenCookie(createAccessToken(id));\n  });\n\ndone();\n};\n\n/**\n * Route handler for authentication routes.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done Callback to signal that the logic has completed.\n */\nexport const authRoutes: FastifyPluginCallback = (fastify, _options, done) => {\n  // All routes are registered by the auth0 plugin, but we need an extra plugin\n  // (this one) to encapsulate the auth0 decorators. Otherwise auth0OAuth will\n  // be available globally.\n  void fastify.register(auth0Client);\n  done();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2733,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\auth.ts",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "6de26343a9f7f30dc5135115826e2aec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport jwt, { JwtPayload } from 'jsonwebtoken';\nimport { DailyCodingChallengeLanguage, type Prisma } from '@prisma/client';\nimport { ObjectId } from 'mongodb';\nimport _ from 'lodash';\n\nimport { createUserInput } from '../../utils/create-user';\nimport {\n  defaultUserId,\n  defaultUserEmail,\n  devLogin,\n  setupServer,\n  superRequest,\n  createSuperRequest,\n  defaultUsername,\n  resetDefaultUser\n} from '../../../jest.utils';\nimport { JWT_SECRET } from '../../utils/env';\nimport {\n  clearEnvExam,\n  seedEnvExam,\n  seedEnvExamAttempt,\n  seedExamEnvExamAuthToken\n} from '../../../__mocks__/exam-environment-exam';\nimport { getMsTranscriptApiUrl } from './user';\n\nconst mockedFetch = jest.fn();\njest.spyOn(globalThis, 'fetch').mockImplementation(mockedFetch);\n\nlet mockDeploymentEnv = 'dev';\njest.mock('../../utils/env', () => {\n  const actualEnv = jest.requireActual('../../utils/env');\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return {\n    ...actualEnv,\n    get DEPLOYMENT_ENV() {\n      return mockDeploymentEnv;\n    },\n    JWT_SECRET: actualEnv.JWT_SECRET\n  };\n}); // This is used to build a test user const testUserData: Prisma userCreateInput = {",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 0,
    "total_chunks": 40
  },
  {
    "id": "40c3b84809d9c4c059a09aaa70f15798",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "createSuperRequest, defaultUsername, resetDefaultUser } from '../../../jest.utils'; import { JWT_SECRET } from '../../utils/env'; import { clearEnvExam, seedEnvExam, seedEnvExamAttempt, seedExamEnvExamAuthToken } from '../../../__mocks__/exam-environment-exam'; import { getMsTranscriptApiUrl } from './user'; const mockedFetch = jest.fn(); jest.spyOn(globalThis, 'fetch').mockImplementation(mockedFetch); let mockDeploymentEnv = 'dev'; jest.mock('../../utils/env', () => { const actualEnv = jest.requireActual('../../utils/env'); // eslint-disable-next-line @typescript-eslint/no-unsafe-return return { ...actualEnv, get DEPLOYMENT_ENV() { return mockDeploymentEnv; }, JWT_SECRET: actualEnv.JWT_SECRET }; }); // This is used to build a test user const testUserData: Prisma userCreateInput = {createUserInput(defaultUserEmail),\n  username: 'foobar',\n  usernameDisplay: 'Foo Bar',\n  progressTimestamps: [1520002973119, 1520440323273],\n  completedChallenges: [\n    {\n      id: 'a6b0bb188d873cb2c8729495',\n      completedDate: 1520002973119,\n      solution: null,\n      challengeType: 5,\n      files: [\n        {\n          contents: 'test',\n          ext: 'js',\n          key: 'indexjs',\n          name: 'test',\n          path: 'path-test'\n        },\n        {\n          contents: 'test2',\n          ext: 'html',\n          key: 'html-test',\n          name: 'test2'\n        }\n      ]\n    },\n    {\n      id: 'a5229172f011153519423690',\n      completedDate: 1520440323273,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a5229172f011153519423692',\n      completedDate: 1520440323274,\n      githubLink: '',\n      challengeType: 5,\n      examResults: {\n        numberOfCorrectAnswers: 0,\n        numberOfQuestionsInExam: 0,\n        percentCorrect: 0,\n        passingPercent: 0,\n        passed: false,\n        examTimeInSeconds: 0\n      }\n    }\n  ],\n  completedDailyCodingChallenges: [\n    {\n      id: '5900f36e1000cf542c50fe80',\n      completedDate: 1742941672524,\n      languages: [\n        DailyCodingChallengeLanguage",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 536,
    "chunk_index": 1,
    "total_chunks": 40
  },
  {
    "id": "cb9567208ff758fbe168ba98860bf086",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "challengeType: 5, files: [ { contents: 'test', ext: 'js', key: 'indexjs', name: 'test', path: 'path-test' }, { contents: 'test2', ext: 'html', key: 'html-test', name: 'test2' } ] }, { id: 'a5229172f011153519423690', completedDate: 1520440323273, solution: null, challengeType: 5, files: [] }, { id: 'a5229172f011153519423692', completedDate: 1520440323274, githubLink: '', challengeType: 5, examResults: { numberOfCorrectAnswers: 0, numberOfQuestionsInExam: 0, percentCorrect: 0, passingPercent: 0, passed: false, examTimeInSeconds: 0 } } ], completedDailyCodingChallenges: [ { id: '5900f36e1000cf542c50fe80', completedDate: 1742941672524, languages: [ DailyCodingChallengeLanguagepython,\n        DailyCodingChallengeLanguage javascript\n      ]\n    }\n  ],\n  partiallyCompletedChallenges: [{ id: '123', completedDate: 123 }],\n  completedExams: [],\n  quizAttempts: [\n    {\n      challengeId: '66df3b712c41c499e9d31e5b',\n      quizId: '0',\n      timestamp: 1731924665902\n    }\n  ],\n  githubProfile: 'github com/foobar',\n  website: 'https://www freecodecamp org',\n  donationEmails: ['an@add ress'],\n  portfolio: [\n    {\n      description: 'A portfolio',\n      id: 'a6b0bb188d873cb2c8729495',\n      image: 'https://www freecodecamp org/cat png',\n      title: 'A portfolio',\n      url: 'https://www freecodecamp",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 2,
    "total_chunks": 40
  },
  {
    "id": "0327eafa8b05563177396019c318631f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "0, percentCorrect: 0, passingPercent: 0, passed: false, examTimeInSeconds: 0 } } ], completedDailyCodingChallenges: [ { id: '5900f36e1000cf542c50fe80', completedDate: 1742941672524, languages: [ DailyCodingChallengeLanguagepython, DailyCodingChallengeLanguage javascript ] } ], partiallyCompletedChallenges: [{ id: '123', completedDate: 123 }], completedExams: [], quizAttempts: [ { challengeId: '66df3b712c41c499e9d31e5b', quizId: '0', timestamp: 1731924665902 } ], githubProfile: 'github com/foobar', website: 'https://www freecodecamp org', donationEmails: ['an@add ress'], portfolio: [ { description: 'A portfolio', id: 'a6b0bb188d873cb2c8729495', image: 'https://www freecodecamp org/cat png', title: 'A portfolio', url: 'https://www freecodecamporg'\n    }\n  ],\n  savedChallenges: [\n    {\n      id: 'a6b0bb188d873cb2c8729495',\n      lastSavedDate: 123,\n      files: [\n        {\n          contents: 'test-contents',\n          ext: 'js',\n          history: ['indexjs'],\n          key: 'indexjs',\n          name: 'test-name'\n        }\n      ]\n    }\n  ],\n  yearsTopContributor: ['2018'],\n  twitter: '@foobar',\n  linkedin: 'linkedin com/foobar'\n};\n\nconst minimalUserData: Prisma.userCreateInput = {\n  about: 'I am a test user',\n  acceptedPrivacyTerms: true,\n  email: testUserData.email,\n  emailVerified: true,\n  externalId: '1234567890',\n  isDonating: false,\n  picture: 'https://www.freecodecamp.org/cat.png',\n  sendQuincyEmail: true,\n  username: 'testuser',\n  usernameDisplay: 'testuser',\n  unsubscribeId: '1234567890'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 3,
    "total_chunks": 40
  },
  {
    "id": "fc7881ffb376c4927d9fd1db35424f41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "'https://www freecodecamp org/cat png', title: 'A portfolio', url: 'https://www freecodecamporg' } ], savedChallenges: [ { id: 'a6b0bb188d873cb2c8729495', lastSavedDate: 123, files: [ { contents: 'test-contents', ext: 'js', history: ['indexjs'], key: 'indexjs', name: 'test-name' } ] } ], yearsTopContributor: ['2018'], twitter: '@foobar', linkedin: 'linkedin com/foobar' }; const minimalUserData: Prisma.userCreateInput = { about: 'I am a test user', acceptedPrivacyTerms: true, email: testUserData.email, emailVerified: true, externalId: '1234567890', isDonating: false, picture: 'https://www.freecodecamp.org/cat.png', sendQuincyEmail: true, username: 'testuser', usernameDisplay: 'testuser', unsubscribeId: '1234567890' };\n\nconst lockedProfileUI = {\n  isLocked: true,\n  showAbout: false,\n  showCerts: false,\n  showDonation: false,\n  showHeatMap: false,\n  showLocation: false,\n  showName: false,\n  showPoints: false,\n  showPortfolio: false,\n  showTimeLine: false\n};\n\n// These are not part of the schema, but are added to the user object by\n// get-session-user's handler\nconst computedProperties = {\n  calendar: {},\n  completedChallengeCount: 0,\n  isEmailVerified: minimalUserData.emailVerified,\n  points: 1,\n  // This is the default value if profileUI is missing. If individual properties\n  // are missing from the db, they will be omitted from the response.\n  profileUI: lockedProfileUI\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 4,
    "total_chunks": 40
  },
  {
    "id": "a22b33eefafcfcc38bcbaf35ac33363b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "false, showDonation: false, showHeatMap: false, showLocation: false, showName: false, showPoints: false, showPortfolio: false, showTimeLine: false }; // These are not part of the schema, but are added to the user object by // get-session-user's handler const computedProperties = { calendar: {}, completedChallengeCount: 0, isEmailVerified: minimalUserData.emailVerified, points: 1, // This is the default value if profileUI is missing. If individual properties // are missing from the db, they will be omitted from the response. profileUI: lockedProfileUI };\n\n// The following appears in get-session-user responses, but not\n// get-public-profile\nconst sessionOnlyData = {\n  currentChallengeId: testUserData.currentChallengeId,\n  email: testUserData.email,\n  emailVerified: testUserData.emailVerified,\n  isEmailVerified: testUserData.emailVerified,\n  sendQuincyEmail: testUserData.sendQuincyEmail,\n  theme: testUserData.theme,\n  keyboardShortcuts: testUserData.keyboardShortcuts,\n  completedChallengeCount: 3,\n  acceptedPrivacyTerms: testUserData.acceptedPrivacyTerms\n}; const publicUserData = {\n  about: testUserData about,\n  calendar: { 1520002973: 1, 1520440323: 1 },\n  // testUserData",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 5,
    "total_chunks": 40
  },
  {
    "id": "ab86852e452941e8452b851bd4f9179d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "the default value if profileUI is missing. If individual properties // are missing from the db, they will be omitted from the response. profileUI: lockedProfileUI }; // The following appears in get-session-user responses, but not // get-public-profile const sessionOnlyData = { currentChallengeId: testUserData.currentChallengeId, email: testUserData.email, emailVerified: testUserData.emailVerified, isEmailVerified: testUserData.emailVerified, sendQuincyEmail: testUserData.sendQuincyEmail, theme: testUserData.theme, keyboardShortcuts: testUserData.keyboardShortcuts, completedChallengeCount: 3, acceptedPrivacyTerms: testUserData.acceptedPrivacyTerms }; const publicUserData = { about: testUserData about, calendar: { 1520002973: 1, 1520440323: 1 }, // testUserDatacompletedChallenges, with nulls removed\n  completedChallenges: [\n    {\n      id: 'a6b0bb188d873cb2c8729495',\n      completedDate: 1520002973119,\n      challengeType: 5,\n      files: [\n        {\n          contents: 'test',\n          ext: 'js',\n          key: 'indexjs',\n          name: 'test',\n          path: 'path-test'\n        },\n        {\n          contents: 'test2',\n          ext: 'html',\n          key: 'html-test',\n          name: 'test2'\n        }\n      ]\n    },\n    {\n      id: 'a5229172f011153519423690',\n      completedDate: 1520440323273,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a5229172f011153519423692',\n      completedDate: 1520440323274,\n      githubLink: '',\n      challengeType: 5,\n      files: [],\n      examResults: {\n        numberOfCorrectAnswers: 0,\n        numberOfQuestionsInExam: 0,\n        percentCorrect: 0,\n        passingPercent: 0,\n        passed: false,\n        examTimeInSeconds: 0\n      }\n    }\n  ],\n  completedDailyCodingChallenges: [\n    {\n      id: '5900f36e1000cf542c50fe80',\n      completedDate: 1742941672524,\n      languages: [\n        DailyCodingChallengeLanguage python,\n        DailyCodingChallengeLanguage",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 6,
    "total_chunks": 40
  },
  {
    "id": "116f573328ea7e7265d1681e2452c75b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "files: [ { contents: 'test', ext: 'js', key: 'indexjs', name: 'test', path: 'path-test' }, { contents: 'test2', ext: 'html', key: 'html-test', name: 'test2' } ] }, { id: 'a5229172f011153519423690', completedDate: 1520440323273, challengeType: 5, files: [] }, { id: 'a5229172f011153519423692', completedDate: 1520440323274, githubLink: '', challengeType: 5, files: [], examResults: { numberOfCorrectAnswers: 0, numberOfQuestionsInExam: 0, percentCorrect: 0, passingPercent: 0, passed: false, examTimeInSeconds: 0 } } ], completedDailyCodingChallenges: [ { id: '5900f36e1000cf542c50fe80', completedDate: 1742941672524, languages: [ DailyCodingChallengeLanguage python, DailyCodingChallengeLanguagejavascript\n      ]\n    }\n  ],\n  completedExams: testUserData completedExams,\n  completedSurveys: [], // TODO: add surveys\n  quizAttempts: testUserData quizAttempts,\n  githubProfile: testUserData githubProfile,\n  is2018DataVisCert: testUserData is2018DataVisCert,\n  is2018FullStackCert: testUserData is2018FullStackCert, // TODO: should this be returned The client doesn't use it at the moment isApisMicroservicesCert: testUserData isApisMicroservicesCert,\n  isBackEndCert: testUserData isBackEndCert,\n  isCheater: testUserData isCheater,\n  isCollegeAlgebraPyCertV8: testUserData isCollegeAlgebraPyCertV8,\n  isDataAnalysisPyCertV7: testUserData isDataAnalysisPyCertV7,\n  isDataVisCert: testUserData isDataVisCert,\n  isDonating: testUserData isDonating,\n  isFoundationalCSharpCertV8: testUserData isFoundationalCSharpCertV8,\n  isFrontEndCert: testUserData isFrontEndCert,\n  isFrontEndLibsCert: testUserData isFrontEndLibsCert,\n  isFullStackCert: testUserData isFullStackCert,\n  isHonest: testUserData",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 7,
    "total_chunks": 40
  },
  {
    "id": "d470d11906c32fd48489fd2ab7c1112f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "DailyCodingChallengeLanguage python, DailyCodingChallengeLanguagejavascript ] } ], completedExams: testUserData completedExams, completedSurveys: [], // TODO: add surveys quizAttempts: testUserData quizAttempts, githubProfile: testUserData githubProfile, is2018DataVisCert: testUserData is2018DataVisCert, is2018FullStackCert: testUserData is2018FullStackCert, // TODO: should this be returned The client doesn't use it at the moment isApisMicroservicesCert: testUserData isApisMicroservicesCert, isBackEndCert: testUserData isBackEndCert, isCheater: testUserData isCheater, isCollegeAlgebraPyCertV8: testUserData isCollegeAlgebraPyCertV8, isDataAnalysisPyCertV7: testUserData isDataAnalysisPyCertV7, isDataVisCert: testUserData isDataVisCert, isDonating: testUserData isDonating, isFoundationalCSharpCertV8: testUserData isFoundationalCSharpCertV8, isFrontEndCert: testUserData isFrontEndCert, isFrontEndLibsCert: testUserData isFrontEndLibsCert, isFullStackCert: testUserData isFullStackCert, isHonest: testUserDataisHonest,\n  isInfosecCertV7: testUserData isInfosecCertV7,\n  isInfosecQaCert: testUserData isInfosecQaCert,\n  isJsAlgoDataStructCert: testUserData isJsAlgoDataStructCert,\n  isJsAlgoDataStructCertV8: testUserData isJsAlgoDataStructCertV8,\n  isMachineLearningPyCertV7: testUserData isMachineLearningPyCertV7,\n  isQaCertV7: testUserData isQaCertV7,\n  isRelationalDatabaseCertV8: testUserData isRelationalDatabaseCertV8,\n  isRespWebDesignCert: testUserData isRespWebDesignCert,\n  isSciCompPyCertV7: testUserData isSciCompPyCertV7,\n  linkedin: testUserData linkedin,\n  location: testUserData location,\n  name: testUserData name,\n  partiallyCompletedChallenges: [{ id: '123', completedDate: 123 }],\n  picture: testUserData picture,\n  points: 2,\n  portfolio: testUserData portfolio,\n  profileUI: testUserData",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 8,
    "total_chunks": 40
  },
  {
    "id": "a720f1a5692245f318eb8b42aedd3a9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "isDataAnalysisPyCertV7: testUserData isDataAnalysisPyCertV7, isDataVisCert: testUserData isDataVisCert, isDonating: testUserData isDonating, isFoundationalCSharpCertV8: testUserData isFoundationalCSharpCertV8, isFrontEndCert: testUserData isFrontEndCert, isFrontEndLibsCert: testUserData isFrontEndLibsCert, isFullStackCert: testUserData isFullStackCert, isHonest: testUserDataisHonest, isInfosecCertV7: testUserData isInfosecCertV7, isInfosecQaCert: testUserData isInfosecQaCert, isJsAlgoDataStructCert: testUserData isJsAlgoDataStructCert, isJsAlgoDataStructCertV8: testUserData isJsAlgoDataStructCertV8, isMachineLearningPyCertV7: testUserData isMachineLearningPyCertV7, isQaCertV7: testUserData isQaCertV7, isRelationalDatabaseCertV8: testUserData isRelationalDatabaseCertV8, isRespWebDesignCert: testUserData isRespWebDesignCert, isSciCompPyCertV7: testUserData isSciCompPyCertV7, linkedin: testUserData linkedin, location: testUserData location, name: testUserData name, partiallyCompletedChallenges: [{ id: '123', completedDate: 123 }], picture: testUserData picture, points: 2, portfolio: testUserData portfolio, profileUI: testUserDataprofileUI,\n  savedChallenges: testUserData savedChallenges,\n  twitter: 'https://twitter com/foobar',\n  username: testUserData username,\n  usernameDisplay: testUserData usernameDisplay,\n  website: testUserData website,\n  yearsTopContributor: testUserData yearsTopContributor\n};\n\n// This is (most of) what we expect to get back from the API. The remaining\n// properties are 'id' and 'joinDate', which are generated by the database.\n// We're currently filtering properties with null values, since the old api just\n// would not return those.\nconst sessionUserData = {\n  ...sessionOnlyData,\n  ...publicUserData\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 9,
    "total_chunks": 40
  },
  {
    "id": "0e5e9890acfc3e6736834bb279fbe13c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "testUserData portfolio, profileUI: testUserDataprofileUI, savedChallenges: testUserData savedChallenges, twitter: 'https://twitter com/foobar', username: testUserData username, usernameDisplay: testUserData usernameDisplay, website: testUserData website, yearsTopContributor: testUserData yearsTopContributor }; // This is (most of) what we expect to get back from the API. The remaining // properties are 'id' and 'joinDate', which are generated by the database. // We're currently filtering properties with null values, since the old api just // would not return those. const sessionUserData = { ...sessionOnlyData, ...publicUserData };\n\nconst baseProgressData = {\n  currentChallengeId: '',\n  isRespWebDesignCert: false,\n  is2018DataVisCert: false,\n  isFrontEndLibsCert: false,\n  isJsAlgoDataStructCert: false,\n  isApisMicroservicesCert: false,\n  isInfosecQaCert: false,\n  isQaCertV7: false,\n  isInfosecCertV7: false,\n  is2018FullStackCert: false,\n  isFrontEndCert: false,\n  isBackEndCert: false,\n  isDataVisCert: false,\n  isFullStackCert: false,\n  isSciCompPyCertV7: false,\n  isDataAnalysisPyCertV7: false,\n  isMachineLearningPyCertV7: false,\n  isRelationalDatabaseCertV8: false,\n  isCollegeAlgebraPyCertV8: false,\n  completedChallenges: [],\n  completedDailyCodingChallenges: [],\n  completedExams: [],\n  savedChallenges: [],\n  partiallyCompletedChallenges: [],\n  needsModeration: false\n};\n\nconst modifiedProgressData = {\n  ...baseProgressData,\n  currentChallengeId: 'hello there',\n  isRespWebDesignCert: true,\n  isJsAlgoDataStructCert: true,\n  isRelationalDatabaseCertV8: true,\n  needsModeration: true\n};\n\nconst userTokenId = 'dummy-id';\nconst otherUserId = 'aaaaaaaaaaaaaaaaaaaaaaaa';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 10,
    "total_chunks": 40
  },
  {
    "id": "78828c0c632198aeefd735eacc8cf5ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "currentChallengeId: '', isRespWebDesignCert: false, is2018DataVisCert: false, isFrontEndLibsCert: false, isJsAlgoDataStructCert: false, isApisMicroservicesCert: false, isInfosecQaCert: false, isQaCertV7: false, isInfosecCertV7: false, is2018FullStackCert: false, isFrontEndCert: false, isBackEndCert: false, isDataVisCert: false, isFullStackCert: false, isSciCompPyCertV7: false, isDataAnalysisPyCertV7: false, isMachineLearningPyCertV7: false, isRelationalDatabaseCertV8: false, isCollegeAlgebraPyCertV8: false, completedChallenges: [], completedDailyCodingChallenges: [], completedExams: [], savedChallenges: [], partiallyCompletedChallenges: [], needsModeration: false }; const modifiedProgressData = { ...baseProgressData, currentChallengeId: 'hello there', isRespWebDesignCert: true, isJsAlgoDataStructCert: true, isRelationalDatabaseCertV8: true, needsModeration: true }; const userTokenId = 'dummy-id'; const otherUserId = 'aaaaaaaaaaaaaaaaaaaaaaaa';\n\nconst msUsernameData = [\n  { msUsername: 'foobar', userId: defaultUserId, ttl: 123 },\n  { msUsername: 'foobar2', userId: defaultUserId, ttl: 123 },\n  { msUsername: 'foobar3', userId: otherUserId, ttl: 123 }\n];\n\nconst tokenData = [\n  { created: new Date(), id: '123', ttl: 1000, userId: defaultUserId },\n  { created: new Date(), id: '456', ttl: 1000, userId: defaultUserId },\n  { created: new Date(), id: '789', ttl: 1000, userId: otherUserId }\n];\n\nconst mockSurveyResults = {\n  title: 'Foundational C# with Microsoft Survey',\n  responses: [\n    {\n      question: 'Please describe your role:',\n      response: 'Beginner developer (less than 2 years experience)'\n    },\n    {\n      question:\n        'Prior to this course, how experienced were you with .NET and C#?',\n      response: 'Novice (no prior experience)'\n    }\n  ]\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 11,
    "total_chunks": 40
  },
  {
    "id": "a66c4f41ab8dedf0e85dc865b46a1011",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "1000, userId: defaultUserId }, { created: new Date(), id: '456', ttl: 1000, userId: defaultUserId }, { created: new Date(), id: '789', ttl: 1000, userId: otherUserId } ]; const mockSurveyResults = { title: 'Foundational C# with Microsoft Survey', responses: [ { question: 'Please describe your role:', response: 'Beginner developer (less than 2 years experience)' }, { question: 'Prior to this course, how experienced were you with .NET and C#?', response: 'Novice (no prior experience)' } ] };\n\ndescribe('userRoutes', () => {\n  setupServer();\n\ndescribe('Authenticated user', () => {\n    let superGet: ReturnType<typeof createSuperRequest>;\n    let superPost: ReturnType<typeof createSuperRequest>;\n    let superDelete: ReturnType<typeof createSuperRequest>;\n\nbeforeEach(async () => {\n      const setCookies = await devLogin();\n      superGet = createSuperRequest({ method: 'GET', setCookies });\n      superPost = createSuperRequest({ method: 'POST', setCookies });\n      superDelete = createSuperRequest({ method: 'DELETE', setCookies });\n    });\n\ndescribe('/account/delete', () => {\n      afterEach(async () => {\n        await fastifyTestInstance.prisma.userToken.deleteMany({\n          where: { OR: [{ userId: defaultUserId }, { userId: otherUserId }] }\n        });\n        await fastifyTestInstance.prisma.msUsername.deleteMany({\n          where: { OR: [{ userId: defaultUserId }, { userId: otherUserId }] }\n        });\n        await clearEnvExam();\n      });\n\ntest('POST returns 200 status code with empty object', async () => {\n        expect(await fastifyTestInstance.prisma.user.count()).toBe(1);\n        const response = await superPost('/account/delete');\n        const userCount = await fastifyTestInstance.prisma.user.count({\n          where: { email: testUserData.email }\n        });\n\nexpect(response.body).toStrictEqual({});\n        expect(response.status).toBe(200);\n        expect(userCount).toBe(0);\n      });\n\ntest('POST deletes Microsoft usernames associated with the user', async () => {\n        await fastifyTestInstance.prisma.msUsername.createMany({\n          data: msUsernameData\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 12,
    "total_chunks": 40
  },
  {
    "id": "b66cdeddd7794539ef2e71dd99c4ec4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "}, { userId: otherUserId }] } }); await fastifyTestInstance.prisma.msUsername.deleteMany({ where: { OR: [{ userId: defaultUserId }, { userId: otherUserId }] } }); await clearEnvExam(); }); test('POST returns 200 status code with empty object', async () => { expect(await fastifyTestInstance.prisma.user.count()).toBe(1); const response = await superPost('/account/delete'); const userCount = await fastifyTestInstance.prisma.user.count({ where: { email: testUserData.email } }); expect(response.body).toStrictEqual({}); expect(response.status).toBe(200); expect(userCount).toBe(0); }); test('POST deletes Microsoft usernames associated with the user', async () => { await fastifyTestInstance.prisma.msUsername.createMany({ data: msUsernameData });\n\nawait superPost('/account/delete');\n        expect(await fastifyTestInstance.prisma.msUsername.count()).toBe(1);\n      });\n\ntest('POST deletes userTokens associated with the user', async () => {\n        await fastifyTestInstance.prisma.userToken.createMany({\n          data: tokenData\n        });\n\nawait superPost('/account/delete');\n\nconst userTokens =\n          await fastifyTestInstance.prisma.userToken.findMany();\n        expect(userTokens).toHaveLength(1);\n        expect(userTokens[0]?.userId).toBe(otherUserId);\n      });\n\ntest(\"POST deletes all the user's cookies\", async () => {\n        const res = await superPost('/account/delete');\n\nconst setCookie = res.headers['set-cookie'] as string[];\n        expect(setCookie).toEqual(\n          expect.arrayContaining([\n            expect.stringMatching(\n              /^_csrf=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/\n            ),\n            expect.stringMatching(\n              /^csrf_token=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/\n            ),\n            expect.stringMatching(\n              /^jwt_access_token=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/\n            )\n          ])\n        );\n        expect(setCookie).toHaveLength(3);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 13,
    "total_chunks": 40
  },
  {
    "id": "52afa875a78bf59a44c9e3899ce2f486",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "{ await fastifyTestInstance.prisma.userToken.createMany({ data: tokenData }); await superPost('/account/delete'); const userTokens = await fastifyTestInstance.prisma.userToken.findMany(); expect(userTokens).toHaveLength(1); expect(userTokens[0]?.userId).toBe(otherUserId); }); test(\"POST deletes all the user's cookies\", async () => { const res = await superPost('/account/delete'); const setCookie = res.headers['set-cookie'] as string[]; expect(setCookie).toEqual( expect.arrayContaining([ expect.stringMatching( /^_csrf=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/ ), expect.stringMatching( /^csrf_token=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/ ), expect.stringMatching( /^jwt_access_token=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/ ) ]) ); expect(setCookie).toHaveLength(3); });\n\ntest(\"POST deletes all the user's exam attempts\", async () => {\n        await seedEnvExam();\n        await seedEnvExamAttempt();\n        const countBefore =\n          await fastifyTestInstance.prisma.examEnvironmentExamAttempt.count();\n        expect(countBefore).toBe(1);\n\nconst res = await superPost('/account/delete');\n\nconst countAfter =\n          await fastifyTestInstance.prisma.examEnvironmentExamAttempt.count();\n        expect(countAfter).toBe(0);\n        expect(res.status).toBe(200);\n      });\n\ntest(\"POST deletes all the user's exam tokens\", async () => {\n        await seedExamEnvExamAuthToken();\n        const countBefore =\n          await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.count();\n        expect(countBefore).toBe(1);\n\nconst res = await superPost('/account/delete');\n\nconst countAfter =\n          await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.count();\n        expect(countAfter).toBe(0);\n        expect(res.status).toBe(200);\n      });\n\ntest('handles concurrent requests to delete the same user', async () => {\n        const deletePromises = Array.from({ length: 2 }, () =>\n          superPost('/account/delete')\n        );\n\nconst responses = await Promise.all(deletePromises);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 14,
    "total_chunks": 40
  },
  {
    "id": "72f11d133584242c8c24638958852930",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "await fastifyTestInstance.prisma.examEnvironmentExamAttempt.count(); expect(countBefore).toBe(1); const res = await superPost('/account/delete'); const countAfter = await fastifyTestInstance.prisma.examEnvironmentExamAttempt.count(); expect(countAfter).toBe(0); expect(res.status).toBe(200); }); test(\"POST deletes all the user's exam tokens\", async () => { await seedExamEnvExamAuthToken(); const countBefore = await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.count(); expect(countBefore).toBe(1); const res = await superPost('/account/delete'); const countAfter = await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.count(); expect(countAfter).toBe(0); expect(res.status).toBe(200); }); test('handles concurrent requests to delete the same user', async () => { const deletePromises = Array.from({ length: 2 }, () => superPost('/account/delete') ); const responses = await Promise.all(deletePromises);\n\nconst userCount = await fastifyTestInstance.prisma.user.count({\n          where: { email: testUserData.email }\n        });\n        responses.forEach(response => {\n          expect(response.status).toBe(200);\n          expect(response.body).toStrictEqual({});\n        });\n        expect(userCount).toBe(0);\n      });\n\ntest(\"only deletes the logged in user's data\", async () => {\n        await fastifyTestInstance.prisma.user.create({\n          data: {\n            ...testUserData,\n            email: 'an.random@user'\n          }\n        });\n        expect(await fastifyTestInstance.prisma.user.count()).toBe(2);\n\nawait superPost('/account/delete');\n\nconst userCount = await fastifyTestInstance.prisma.user.count();\n        expect(userCount).toBe(1);\n      });\n\ntest('logs if it is asked to delete a non-existent user', async () => {\n        const spy = jest.spyOn(fastifyTestInstance.log, 'warn');\n\nconst deletePromises = Array.from({ length: 2 }, () =>\n          superPost('/account/delete')\n        );\n\nawait Promise.all(deletePromises);\n\nexpect(spy).toHaveBeenCalledTimes(1);\n        expect(spy.mock.calls[0]).toEqual(\n          expect.arrayContaining([\n            `User with id ${defaultUserId} not found for deletion.`\n          ])\n        );\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 15,
    "total_chunks": 40
  },
  {
    "id": "646879db6de63fe42a790f6045eef049",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "the logged in user's data\", async () => { await fastifyTestInstance.prisma.user.create({ data: { ...testUserData, email: 'an.random@user' } }); expect(await fastifyTestInstance.prisma.user.count()).toBe(2); await superPost('/account/delete'); const userCount = await fastifyTestInstance.prisma.user.count(); expect(userCount).toBe(1); }); test('logs if it is asked to delete a non-existent user', async () => { const spy = jest.spyOn(fastifyTestInstance.log, 'warn'); const deletePromises = Array.from({ length: 2 }, () => superPost('/account/delete') ); await Promise.all(deletePromises); expect(spy).toHaveBeenCalledTimes(1); expect(spy.mock.calls[0]).toEqual( expect.arrayContaining([ `User with id ${defaultUserId} not found for deletion.` ]) ); }); });\n\ndescribe('/account/reset-progress', () => {\n      afterEach(async () => {\n        await fastifyTestInstance.prisma.userToken.deleteMany({\n          where: { OR: [{ userId: defaultUserId }, { userId: otherUserId }] }\n        });\n        await fastifyTestInstance.prisma.msUsername.deleteMany({\n          where: { OR: [{ userId: defaultUserId }, { userId: otherUserId }] }\n        });\n      });\n      test('POST returns 200 status code with empty object', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: testUserData.email },\n          data: modifiedProgressData\n        });\n\nconst response = await superPost('/account/reset-progress');\n\nconst user = await fastifyTestInstance.prisma.user.findFirst({\n          where: { email: testUserData.email }\n        });\n\nexpect(response.body).toStrictEqual({});\n        expect(response.status).toBe(200);\n\nexpect(user?.progressTimestamps).toHaveLength(1);\n        expect(user).toMatchObject(baseProgressData);\n      });\n\ntest('POST deletes Microsoft usernames associated with the user', async () => {\n        await fastifyTestInstance.prisma.msUsername.createMany({\n          data: msUsernameData\n        });\n\nawait superPost('/account/reset-progress');\n\nexpect(await fastifyTestInstance.prisma.msUsername.count()).toBe(1);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 16,
    "total_chunks": 40
  },
  {
    "id": "d21e5a506adcda13b9dd744e450b81ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "[{ userId: defaultUserId }, { userId: otherUserId }] } }); }); test('POST returns 200 status code with empty object', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: testUserData.email }, data: modifiedProgressData }); const response = await superPost('/account/reset-progress'); const user = await fastifyTestInstance.prisma.user.findFirst({ where: { email: testUserData.email } }); expect(response.body).toStrictEqual({}); expect(response.status).toBe(200); expect(user?.progressTimestamps).toHaveLength(1); expect(user).toMatchObject(baseProgressData); }); test('POST deletes Microsoft usernames associated with the user', async () => { await fastifyTestInstance.prisma.msUsername.createMany({ data: msUsernameData }); await superPost('/account/reset-progress'); expect(await fastifyTestInstance.prisma.msUsername.count()).toBe(1); });\n\ntest('POST deletes userTokens associated with the user', async () => {\n        await fastifyTestInstance.prisma.userToken.createMany({\n          data: tokenData\n        });\n\nawait superPost('/account/reset-progress');\n\nconst userTokens =\n          await fastifyTestInstance.prisma.userToken.findMany();\n        expect(userTokens).toHaveLength(1);\n        expect(userTokens[0]?.userId).toBe(otherUserId);\n      });\n\ntest.todo('POST resets the user to the default state');\n    });\n\ndescribe('/user/user-token', () => {\n      beforeEach(async () => {\n        await fastifyTestInstance.prisma.userToken.create({\n          data: {\n            created: new Date(),\n            id: '123',\n            ttl: 1000,\n            userId: defaultUserId\n          }\n        });\n      });\n\nafterEach(async () => {\n        await fastifyTestInstance.prisma.userToken.deleteMany({\n          where: {\n            userId: defaultUserId\n          }\n        });\n      });\n\n// TODO(Post-MVP): consider using PUT and updating the logic to upsert\n      test('POST success response includes a JWT encoded string', async () => {\n        const response = await superPost('/user/user-token');\n\nconst userToken = response.body.userToken;\n        const decodedToken = jwt.decode(userToken);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 17,
    "total_chunks": 40
  },
  {
    "id": "3b80095a1a0f32287a51a7f4d4212b01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "default state'); }); describe('/user/user-token', () => { beforeEach(async () => { await fastifyTestInstance.prisma.userToken.create({ data: { created: new Date(), id: '123', ttl: 1000, userId: defaultUserId } }); }); afterEach(async () => { await fastifyTestInstance.prisma.userToken.deleteMany({ where: { userId: defaultUserId } }); }); // TODO(Post-MVP): consider using PUT and updating the logic to upsert test('POST success response includes a JWT encoded string', async () => { const response = await superPost('/user/user-token'); const userToken = response.body.userToken; const decodedToken = jwt.decode(userToken);\n\nexpect(response.body).toStrictEqual({ userToken: expect.any(String) });\n        expect(decodedToken).toStrictEqual({\n          userToken: expect.stringMatching(/^[a-zA-Z0-9]{64}$/),\n          iat: expect.any(Number)\n        });\n\nexpect(() => jwt.verify(userToken, 'wrong-secret')).toThrow();\n        expect(() => jwt.verify(userToken, JWT_SECRET)).not.toThrow();\n\n// TODO(Post-MVP): consider using 201 for new tokens.\n        expect(response.status).toBe(200);\n      });\n\ntest('POST responds with an encoded UserToken id', async () => {\n        const response = await superPost('/user/user-token');\n\nconst decodedToken = jwt.decode(response.body.userToken);\n        const userTokenId = (decodedToken as JwtPayload).userToken;\n\n// Verify that the token has been created.\n        await fastifyTestInstance.prisma.userToken.findUniqueOrThrow({\n          where: { id: userTokenId }\n        });\n\n// TODO(Post-MVP): consider using 201 for new tokens.\n        expect(response.status).toBe(200);\n      });\n\ntest('POST deletes old tokens when creating a new one', async () => {\n        const response = await superPost('/user/user-token');\n\nconst decodedToken = jwt.decode(response.body.userToken);\n        const userTokenId = (decodedToken as JwtPayload).userToken;\n\n// Verify that the token has been created.\n        await fastifyTestInstance.prisma.userToken.findUniqueOrThrow({\n          where: { id: userTokenId }\n        });\n\nawait superPost('/user/user-token');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 18,
    "total_chunks": 40
  },
  {
    "id": "144fbdf6736ee7f2abdc7b4fdc964b33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "= (decodedToken as JwtPayload).userToken; // Verify that the token has been created. await fastifyTestInstance.prisma.userToken.findUniqueOrThrow({ where: { id: userTokenId } }); // TODO(Post-MVP): consider using 201 for new tokens. expect(response.status).toBe(200); }); test('POST deletes old tokens when creating a new one', async () => { const response = await superPost('/user/user-token'); const decodedToken = jwt.decode(response.body.userToken); const userTokenId = (decodedToken as JwtPayload).userToken; // Verify that the token has been created. await fastifyTestInstance.prisma.userToken.findUniqueOrThrow({ where: { id: userTokenId } }); await superPost('/user/user-token');\n\n// Verify that the old token has been deleted.\n        expect(\n          await fastifyTestInstance.prisma.userToken.findUnique({\n            where: { id: userTokenId }\n          })\n        ).toBeNull();\n        expect(await fastifyTestInstance.prisma.userToken.count()).toBe(1);\n      });\n\ntest('DELETE returns 200 status with null userToken', async () => {\n        const response = await superDelete('/user/user-token');\n\nexpect(response.body).toStrictEqual({ userToken: null });\n        expect(response.status).toBe(200);\n        expect(await fastifyTestInstance.prisma.userToken.count()).toBe(0);\n      });\n\ntest('DELETEing a missing userToken returns 404 status with an error message', async () => {\n        await superDelete('/user/user-token');\n\nconst response = await superDelete('/user/user-token');\n\nexpect(response.body).toStrictEqual({\n          type: 'info',\n          message: 'userToken not found'\n        });\n        expect(response.status).toBe(404);\n      });\n    });\n\ndescribe('/user/get-user-session', () => {\n      beforeEach(async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: testUserData.email },\n          data: testUserData\n        });\n      });\n\nafterEach(async () => {\n        await fastifyTestInstance.prisma.userToken.deleteMany({\n          where: { id: userTokenId }\n        });\n        await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.deleteMany(\n          {\n            where: { userId: defaultUserId }\n          }\n        );\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 19,
    "total_chunks": 40
  },
  {
    "id": "bb82e6f46f2c83c1a8e3699fd1e1adc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "}); test('DELETEing a missing userToken returns 404 status with an error message', async () => { await superDelete('/user/user-token'); const response = await superDelete('/user/user-token'); expect(response.body).toStrictEqual({ type: 'info', message: 'userToken not found' }); expect(response.status).toBe(404); }); }); describe('/user/get-user-session', () => { beforeEach(async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: testUserData.email }, data: testUserData }); }); afterEach(async () => { await fastifyTestInstance.prisma.userToken.deleteMany({ where: { id: userTokenId } }); await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.deleteMany( { where: { userId: defaultUserId } } ); });\n\ntest('GET rejects with 500 status code if the username is missing', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: testUserData.email },\n          data: { username: '' }\n        });\n\nconst response = await superGet('/user/get-session-user');\n\nexpect(response.body).toStrictEqual({ user: {}, result: '' });\n        expect(response.statusCode).toBe(500);\n      });\n\n// This should help debugging, since this the route returns this if\n      // anything throws in the handler.\n      test('GET does not return the error response if the request is valid', async () => {\n        const response = await superGet('/user/get-session-user');\n\nexpect(response.body).not.toEqual({ user: {}, result: '' });\n      });\n\ntest('GET returns username as the result property', async () => {\n        const response = await superGet('/user/get-session-user');\n\nexpect(response.body).toMatchObject({\n          result: testUserData.username\n        });\n        expect(response.statusCode).toBe(200);\n      });\n\ntest('GET returns the public user object', async () => {\n        // TODO: This gets the user from the database so that we can verify the\n        // joinDate. It feels like there should be a better way to do this.\n        const testUser = await fastifyTestInstance?.prisma.user.findFirst({\n          where: { email: testUserData.email }\n        });\n        const publicUser = {\n          ...sessionUserData,\n          id: testUser?.id,\n          joinDate: new ObjectId(testUser?.id).getTimestamp().toISOString()\n        };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 20,
    "total_chunks": 40
  },
  {
    "id": "bd4c0487692e94b82cfef02cf3c0c0a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "async () => { const response = await superGet('/user/get-session-user'); expect(response.body).toMatchObject({ result: testUserData.username }); expect(response.statusCode).toBe(200); }); test('GET returns the public user object', async () => { // TODO: This gets the user from the database so that we can verify the // joinDate. It feels like there should be a better way to do this. const testUser = await fastifyTestInstance?.prisma.user.findFirst({ where: { email: testUserData.email } }); const publicUser = { ...sessionUserData, id: testUser?.id, joinDate: new ObjectId(testUser?.id).getTimestamp().toISOString() };\n\nconst response = await superGet('/user/get-session-user');\n        const {\n          user: { foobar }\n        } = response.body as unknown as {\n          user: { foobar: typeof publicUser };\n        };\n\nexpect(testUser).not.toBeNull();\n        expect(testUser?.id).not.toBeNull();\n        expect(foobar).toEqual(publicUser);\n      });\n\ntest('GET returns the userToken if it exists', async () => {\n        const tokenData = {\n          userId: defaultUserId,\n          ttl: 123,\n          id: userTokenId,\n          created: new Date()\n        };\n\nawait fastifyTestInstance.prisma.userToken.create({\n          data: tokenData\n        });\n\nconst tokens = await fastifyTestInstance.prisma.userToken.count();\n        expect(tokens).toBe(1);\n\nconst response = await superGet('/user/get-session-user');\n\nconst { userToken } = jwt.decode(\n          response.body.user.foobar.userToken\n        ) as { userToken: string };\n\nexpect(tokenData.id).toBe(userToken);\n      });\n\ntest('GET returns the msUsername if it exists', async () => {\n        await fastifyTestInstance.prisma.msUsername.create({\n          data: msUsernameData[0] as (typeof msUsernameData)[0]\n        });\n\nconst msUsernames = await fastifyTestInstance.prisma.msUsername.count();\n        expect(msUsernames).toBe(1);\n\nconst response = await superGet('/user/get-session-user');\n\nconst { msUsername } = response.body.user.foobar;\n\nexpect(msUsername).toBe(msUsernameData[0]?.msUsername);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 21,
    "total_chunks": 40
  },
  {
    "id": "bf4a668b3d446fa8d790bc2f46d4df3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "123, id: userTokenId, created: new Date() }; await fastifyTestInstance.prisma.userToken.create({ data: tokenData }); const tokens = await fastifyTestInstance.prisma.userToken.count(); expect(tokens).toBe(1); const response = await superGet('/user/get-session-user'); const { userToken } = jwt.decode( response.body.user.foobar.userToken ) as { userToken: string }; expect(tokenData.id).toBe(userToken); }); test('GET returns the msUsername if it exists', async () => { await fastifyTestInstance.prisma.msUsername.create({ data: msUsernameData[0] as (typeof msUsernameData)[0] }); const msUsernames = await fastifyTestInstance.prisma.msUsername.count(); expect(msUsernames).toBe(1); const response = await superGet('/user/get-session-user'); const { msUsername } = response.body.user.foobar; expect(msUsername).toBe(msUsernameData[0]?.msUsername); });\n\ntest('GET returns a minimal user when all optional properties are missing', async () => {\n        // To get a minimal test user we first delete the existing one...\n        await fastifyTestInstance.prisma.user.deleteMany({\n          where: {\n            email: minimalUserData.email\n          }\n        });\n        // ...then recreate it using only the properties that the schema\n        // requires. The alternative is to update, but that would require\n        // a lot of unsets (this is neater)\n        const testUser = await fastifyTestInstance.prisma.user.create({\n          data: minimalUserData\n        });\n\n// devLogin must not be used here since it overrides the user\n        const res = await superRequest('/signin', { method: 'GET' });\n        const setCookies = res.get('Set-Cookie');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 22,
    "total_chunks": 40
  },
  {
    "id": "26220cba002155636c6d8923dc1db448",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "first delete the existing one... await fastifyTestInstance.prisma.user.deleteMany({ where: { email: minimalUserData.email } }); // ...then recreate it using only the properties that the schema // requires. The alternative is to update, but that would require // a lot of unsets (this is neater) const testUser = await fastifyTestInstance.prisma.user.create({ data: minimalUserData }); // devLogin must not be used here since it overrides the user const res = await superRequest('/signin', { method: 'GET' }); const setCookies = res.get('Set-Cookie');\n\nconst publicUser = {\n          ..._.omit(minimalUserData, ['externalId', 'unsubscribeId']),\n          ...computedProperties,\n          id: testUser.id,\n          joinDate: new ObjectId(testUser.id).getTimestamp().toISOString(),\n          // the following properties are defaults provided if the field is\n          // missing in the user document.\n          currentChallengeId: '',\n          completedChallenges: [],\n          completedDailyCodingChallenges: [],\n          completedExams: [],\n          completedSurveys: [],\n          partiallyCompletedChallenges: [],\n          portfolio: [],\n          savedChallenges: [],\n          quizAttempts: [],\n          yearsTopContributor: [],\n          is2018DataVisCert: false,\n          is2018FullStackCert: false,\n          isApisMicroservicesCert: false,\n          isBackEndCert: false,\n          isCheater: false,\n          isCollegeAlgebraPyCertV8: false,\n          isDataAnalysisPyCertV7: false,\n          isDataVisCert: false,\n          isFoundationalCSharpCertV8: false,\n          isFrontEndCert: false,\n          isFrontEndLibsCert: false,\n          isFullStackCert: false,\n          isHonest: false,\n          isInfosecCertV7: false,\n          isInfosecQaCert: false,\n          isJsAlgoDataStructCert: false,\n          isJsAlgoDataStructCertV8: false,\n          isMachineLearningPyCertV7: false,\n          isQaCertV7: false,\n          isRelationalDatabaseCertV8: false,\n          isRespWebDesignCert: false,\n          isSciCompPyCertV7: false,\n          keyboardShortcuts: false,\n          location: '',\n          name: '',\n          theme: 'default'\n        };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 23,
    "total_chunks": 40
  },
  {
    "id": "64ee87caffbbf554a38bdcbf89f820ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "the user document. currentChallengeId: '', completedChallenges: [], completedDailyCodingChallenges: [], completedExams: [], completedSurveys: [], partiallyCompletedChallenges: [], portfolio: [], savedChallenges: [], quizAttempts: [], yearsTopContributor: [], is2018DataVisCert: false, is2018FullStackCert: false, isApisMicroservicesCert: false, isBackEndCert: false, isCheater: false, isCollegeAlgebraPyCertV8: false, isDataAnalysisPyCertV7: false, isDataVisCert: false, isFoundationalCSharpCertV8: false, isFrontEndCert: false, isFrontEndLibsCert: false, isFullStackCert: false, isHonest: false, isInfosecCertV7: false, isInfosecQaCert: false, isJsAlgoDataStructCert: false, isJsAlgoDataStructCertV8: false, isMachineLearningPyCertV7: false, isQaCertV7: false, isRelationalDatabaseCertV8: false, isRespWebDesignCert: false, isSciCompPyCertV7: false, keyboardShortcuts: false, location: '', name: '', theme: 'default' };\n\nconst response = await superRequest('/user/get-session-user', {\n          method: 'GET',\n          setCookies\n        });\n\nconst {\n          user: { testuser }\n        } = response.body as unknown as {\n          user: { testuser: typeof publicUser };\n        };\n\nexpect(testuser).toStrictEqual(publicUser);\n      });\n    });\n\ndescribe('/user/report-user', () => {\n      let sendEmailSpy: jest.SpyInstance;\n      beforeEach(() => {\n        sendEmailSpy = jest\n          .spyOn(fastifyTestInstance, 'sendEmail')\n          .mockImplementation(jest.fn());\n      });\n\nafterEach(async () => {\n        await resetDefaultUser();\n        jest.clearAllMocks();\n      });\n\ntest('POST returns 400 for empty username', async () => {\n        const response = await superPost('/user/report-user').send({\n          username: '',\n          reportDescription: 'Test Report'\n        });\n\nexpect(response.statusCode).toBe(404);\n        expect(response.body).toStrictEqual({\n          type: 'danger',\n          message: 'flash.report-error'\n        });\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 24,
    "total_chunks": 40
  },
  {
    "id": "9312100aaace31ae8316bd7eb8caeed7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "{ user: { testuser } } = response.body as unknown as { user: { testuser: typeof publicUser }; }; expect(testuser).toStrictEqual(publicUser); }); }); describe('/user/report-user', () => { let sendEmailSpy: jest.SpyInstance; beforeEach(() => { sendEmailSpy = jest .spyOn(fastifyTestInstance, 'sendEmail') .mockImplementation(jest.fn()); }); afterEach(async () => { await resetDefaultUser(); jest.clearAllMocks(); }); test('POST returns 400 for empty username', async () => { const response = await superPost('/user/report-user').send({ username: '', reportDescription: 'Test Report' }); expect(response.statusCode).toBe(404); expect(response.body).toStrictEqual({ type: 'danger', message: 'flash.report-error' }); });\n\ntest('POST returns 400 for empty report', async () => {\n        const response = await superPost('/user/report-user').send({\n          username: testUserData.username,\n          reportDescription: ''\n        });\n\nexpect(response.statusCode).toBe(400);\n      });\n\ntest('POST returns 403 for users with no email', async () => {\n        await fastifyTestInstance.prisma.user.updateMany({\n          where: { email: testUserData.email },\n          data: { email: null }\n        });\n\nconst response = await superPost('/user/report-user').send({\n          username: testUserData.username,\n          reportDescription: 'Test Report'\n        });\n\nexpect(response.statusCode).toBe(403);\n        expect(response.body).toStrictEqual({\n          type: 'danger',\n          message: 'flash.report-error'\n        });\n      });\n\ntest('POST sanitises report description', async () => {\n        await superPost('/user/report-user').send({\n          username: defaultUsername,\n          reportDescription:\n            '<script>const breath = \"loud\"</script>Luke, I am your father'\n        });\n\nexpect(sendEmailSpy).toHaveBeenCalledTimes(1);\n        expect(sendEmailSpy).toHaveBeenCalledWith(\n          expect.objectContaining({\n            text: expect.stringContaining(\n              'Report Details:\\n\\nLuke, I am your father'\n            )\n          })\n        );\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 25,
    "total_chunks": 40
  },
  {
    "id": "9b8b93d67f888f5571bf54aee49fbe27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "with no email', async () => { await fastifyTestInstance.prisma.user.updateMany({ where: { email: testUserData.email }, data: { email: null } }); const response = await superPost('/user/report-user').send({ username: testUserData.username, reportDescription: 'Test Report' }); expect(response.statusCode).toBe(403); expect(response.body).toStrictEqual({ type: 'danger', message: 'flash.report-error' }); }); test('POST sanitises report description', async () => { await superPost('/user/report-user').send({ username: defaultUsername, reportDescription: '<script>const breath = \"loud\"</script>Luke, I am your father' }); expect(sendEmailSpy).toHaveBeenCalledTimes(1); expect(sendEmailSpy).toHaveBeenCalledWith( expect.objectContaining({ text: expect.stringContaining( 'Report Details:\\n\\nLuke, I am your father' ) }) ); });\n\ntest('POST returns 200 status code with \"success\" message', async () => {\n        const testUser = await fastifyTestInstance.prisma.user.findFirstOrThrow(\n          {\n            where: { email: testUserData.email }\n          }\n        );\n        const response = await superPost('/user/report-user').send({\n          username: testUser.username,\n          reportDescription: 'Luke, I am your father'\n        });\n\nexpect(sendEmailSpy).toHaveBeenCalledTimes(1);\n        expect(sendEmailSpy).toHaveBeenCalledWith({\n          from: 'team@freecodecamp.org',\n          to: 'support@freecodecamp.org',\n          cc: 'foo@bar.com',\n          subject: `Abuse Report : Reporting ${testUser.username}'s profile.`,\n          text: `\nHello Team,\n\nThis is to report the profile of ${testUser.username}. ID: ${defaultUserId}.\n\nReport Details:\n\nLuke, I am your father\n\nReported by:\nID: ${testUser.id}\nUsername: ${testUser.username}\nName:\nEmail: foo@bar.com\n\nThanks and regards,\n`\n        });\n\nexpect(response.statusCode).toBe(200);\n        expect(response.body).toStrictEqual({\n          type: 'info',\n          message: 'flash.report-sent',\n          variables: { email: 'foo@bar.com' }\n        });\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 26,
    "total_chunks": 40
  },
  {
    "id": "24c981f6335ddbe09391b75c5a0113e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "= await superPost('/user/report-user').send({ username: testUser.username, reportDescription: 'Luke, I am your father' }); expect(sendEmailSpy).toHaveBeenCalledTimes(1); expect(sendEmailSpy).toHaveBeenCalledWith({ from: 'team@freecodecamp.org', to: 'support@freecodecamp.org', cc: 'foo@bar.com', subject: `Abuse Report : Reporting ${testUser.username}'s profile.`, text: ` Hello Team, This is to report the profile of ${testUser.username}. ID: ${defaultUserId}. Report Details: Luke, I am your father Reported by: ID: ${testUser.id} Username: ${testUser.username} Name: Email: foo@bar.com Thanks and regards, ` }); expect(response.statusCode).toBe(200); expect(response.body).toStrictEqual({ type: 'info', message: 'flash.report-sent', variables: { email: 'foo@bar.com' } }); }); });\n\ndescribe('/user/ms-username', () => {\n      describe('DELETE', () => {\n        afterEach(async () => {\n          await fastifyTestInstance.prisma.msUsername.deleteMany({\n            where: { userId: otherUserId }\n          });\n        });\n\ntest('deletes all Microsoft usernames associated with the user', async () => {\n          await fastifyTestInstance.prisma.msUsername.createMany({\n            data: [\n              { msUsername: 'foobar', userId: defaultUserId, ttl: 123 },\n              { msUsername: 'foobar2', userId: defaultUserId, ttl: 123 }\n            ]\n          });\n\nconst response = await superDelete('/user/ms-username');\n\nconst msUsernames =\n            await fastifyTestInstance.prisma.msUsername.count();\n\nexpect(msUsernames).toBe(0);\n          expect(response.body).toStrictEqual({ msUsername: null });\n          expect(response.statusCode).toBe(200);\n        });\n\ntest('does not delete Microsoft usernames associated with other users', async () => {\n          await fastifyTestInstance.prisma.msUsername.createMany({\n            data: [\n              { msUsername: 'foobar', userId: otherUserId, ttl: 123 },\n              { msUsername: 'foobar2', userId: defaultUserId, ttl: 123 }\n            ]\n          });\n\nawait superDelete('/user/ms-username');\n\nconst msUsernames =\n            await fastifyTestInstance.prisma.msUsername.count();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 27,
    "total_chunks": 40
  },
  {
    "id": "c7b44bf903abb76ebc8a4d5c76e441bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "msUsername: 'foobar', userId: defaultUserId, ttl: 123 }, { msUsername: 'foobar2', userId: defaultUserId, ttl: 123 } ] }); const response = await superDelete('/user/ms-username'); const msUsernames = await fastifyTestInstance.prisma.msUsername.count(); expect(msUsernames).toBe(0); expect(response.body).toStrictEqual({ msUsername: null }); expect(response.statusCode).toBe(200); }); test('does not delete Microsoft usernames associated with other users', async () => { await fastifyTestInstance.prisma.msUsername.createMany({ data: [ { msUsername: 'foobar', userId: otherUserId, ttl: 123 }, { msUsername: 'foobar2', userId: defaultUserId, ttl: 123 } ] }); await superDelete('/user/ms-username'); const msUsernames = await fastifyTestInstance.prisma.msUsername.count();\n\nexpect(msUsernames).toBe(1);\n        });\n      });\n\ndescribe('POST', () => {\n        beforeEach(() => {\n          mockedFetch.mockClear();\n        });\n        afterEach(async () => {\n          await fastifyTestInstance.prisma.msUsername.deleteMany({\n            where: {\n              OR: [\n                { userId: defaultUserId },\n                { userId: 'aaaaaaaaaaaaaaaaaaaaaaaa' }\n              ]\n            }\n          });\n        });\n\nit('handles missing transcript urls', async () => {\n          const response = await superPost('/user/ms-username');\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message: 'flash.ms.transcript.link-err-1'\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\nit('handles invalid transcript urls', async () => {\n          const response = await superPost('/user/ms-username').send({\n            msTranscriptUrl: 'https://www.example.com'\n          });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message: 'flash.ms.transcript.link-err-1'\n          });\n          expect(response.statusCode).toBe(400);\n        });\n\nit('handles the case that MS does not return a username', async () => {\n          mockedFetch.mockImplementationOnce(() =>\n            Promise.resolve({\n              ok: true,\n              json: () => Promise.resolve({})\n            })\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 28,
    "total_chunks": 40
  },
  {
    "id": "f73e192663f613507c18545613cc28eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "'aaaaaaaaaaaaaaaaaaaaaaaa' } ] } }); }); it('handles missing transcript urls', async () => { const response = await superPost('/user/ms-username'); expect(response.body).toStrictEqual({ type: 'error', message: 'flash.ms.transcript.link-err-1' }); expect(response.statusCode).toBe(400); }); it('handles invalid transcript urls', async () => { const response = await superPost('/user/ms-username').send({ msTranscriptUrl: 'https://www.example.com' }); expect(response.body).toStrictEqual({ type: 'error', message: 'flash.ms.transcript.link-err-1' }); expect(response.statusCode).toBe(400); }); it('handles the case that MS does not return a username', async () => { mockedFetch.mockImplementationOnce(() => Promise.resolve({ ok: true, json: () => Promise.resolve({}) }) );\n\nconst response = await superPost('/user/ms-username').send({\n            msTranscriptUrl:\n              'https://learn.microsoft.com/en-us/users/not/transcript/8u6ert43q1p'\n          });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message: 'flash.ms.transcript.link-err-3'\n          });\n          expect(response.statusCode).toBe(500);\n        });\n\nit('handles duplicate Microsoft usernames', async () => {\n          mockedFetch.mockImplementationOnce(() =>\n            Promise.resolve({\n              ok: true,\n              json: () =>\n                Promise.resolve({\n                  userName: 'foobar'\n                })\n            })\n          );\n\nawait fastifyTestInstance.prisma.msUsername.create({\n            data: {\n              msUsername: 'foobar',\n              userId: defaultUserId,\n              ttl: 77760000000\n            }\n          });\n\nconst response = await superPost('/user/ms-username').send({\n            msTranscriptUrl:\n              'https://learn.microsoft.com/en-us/users/mot01/transcript/8wert4'\n          });\n\nexpect(response.body).toStrictEqual({\n            type: 'error',\n            message: 'flash.ms.transcript.link-err-4'\n          });\n\nexpect(response.statusCode).toBe(403);\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 29,
    "total_chunks": 40
  },
  {
    "id": "eca9cc2f83acdc05c5090a573b50d675",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "=> Promise.resolve({ ok: true, json: () => Promise.resolve({}) }) ); const response = await superPost('/user/ms-username').send({ msTranscriptUrl: 'https://learn.microsoft.com/en-us/users/not/transcript/8u6ert43q1p' }); expect(response.body).toStrictEqual({ type: 'error', message: 'flash.ms.transcript.link-err-3' }); expect(response.statusCode).toBe(500); }); it('handles duplicate Microsoft usernames', async () => { mockedFetch.mockImplementationOnce(() => Promise.resolve({ ok: true, json: () => Promise.resolve({ userName: 'foobar' }) }) ); await fastifyTestInstance.prisma.msUsername.create({ data: { msUsername: 'foobar', userId: defaultUserId, ttl: 77760000000 } }); const response = await superPost('/user/ms-username').send({ msTranscriptUrl: 'https://learn.microsoft.com/en-us/users/mot01/transcript/8wert4' }); expect(response.body).toStrictEqual({ type: 'error', message: 'flash.ms.transcript.link-err-4' }); expect(response.statusCode).toBe(403); });\n\nit('returns the username on success', async () => {\n          const msUsername = 'ms-user';\n          mockedFetch.mockImplementationOnce(() =>\n            Promise.resolve({\n              ok: true,\n              json: () =>\n                Promise.resolve({\n                  userName: msUsername\n                })\n            })\n          );\n          const response = await superPost('/user/ms-username').send({\n            msTranscriptUrl:\n              'https://learn.microsoft.com/en-us/users/mot01/transcript/8ert43q'\n          });\n\nexpect(response.body).toStrictEqual({\n            msUsername\n          });\n          expect(response.statusCode).toBe(200);\n        });\n\nit('creates a record of the linked account', async () => {\n          const msUsername = 'super-user';\n          mockedFetch.mockImplementationOnce(() =>\n            Promise.resolve({\n              ok: true,\n              json: () =>\n                Promise.resolve({\n                  userName: msUsername\n                })\n            })\n          );\n\nawait superPost('/user/ms-username').send({\n            msTranscriptUrl:\n              'https://learn.microsoft.com/en-us/users/mot01/transcript/12345'\n          });\n\nconst linkedAccount =\n            await fastifyTestInstance.prisma.msUsername.findFirstOrThrow({\n              where: { msUsername }\n            });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 30,
    "total_chunks": 40
  },
  {
    "id": "d012ef0bfc6eea187bf9f826e3b5819c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "{ const msUsername = 'ms-user'; mockedFetch.mockImplementationOnce(() => Promise.resolve({ ok: true, json: () => Promise.resolve({ userName: msUsername }) }) ); const response = await superPost('/user/ms-username').send({ msTranscriptUrl: 'https://learn.microsoft.com/en-us/users/mot01/transcript/8ert43q' }); expect(response.body).toStrictEqual({ msUsername }); expect(response.statusCode).toBe(200); }); it('creates a record of the linked account', async () => { const msUsername = 'super-user'; mockedFetch.mockImplementationOnce(() => Promise.resolve({ ok: true, json: () => Promise.resolve({ userName: msUsername }) }) ); await superPost('/user/ms-username').send({ msTranscriptUrl: 'https://learn.microsoft.com/en-us/users/mot01/transcript/12345' }); const linkedAccount = await fastifyTestInstance.prisma.msUsername.findFirstOrThrow({ where: { msUsername } });\n\nexpect(linkedAccount).toStrictEqual({\n            id: expect.stringMatching(/^[a-f\\d]{24}$/),\n            userId: defaultUserId,\n            ttl: 77760000000,\n            msUsername\n          });\n        });\n\nit('removes any other accounts linked to the same user', async () => {\n          const msUsernameOne = 'super-user';\n          const msUsernameTwo = 'super-user-2';\n          mockedFetch\n            .mockImplementationOnce(() =>\n              Promise.resolve({\n                ok: true,\n                json: () =>\n                  Promise.resolve({\n                    userName: msUsernameOne\n                  })\n              })\n            )\n            .mockImplementationOnce(() =>\n              Promise.resolve({\n                ok: true,\n                json: () =>\n                  Promise.resolve({\n                    userName: msUsernameTwo\n                  })\n              })\n            );\n\nawait fastifyTestInstance.prisma.msUsername.create({\n            data: {\n              msUsername: 'dummy',\n              userId: 'aaaaaaaaaaaaaaaaaaaaaaaa',\n              ttl: 77760000000\n            }\n          });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 31,
    "total_chunks": 40
  },
  {
    "id": "efd213861dde93207994cc39f91d9663",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "{ msUsername } }); expect(linkedAccount).toStrictEqual({ id: expect.stringMatching(/^[a-f\\d]{24}$/), userId: defaultUserId, ttl: 77760000000, msUsername }); }); it('removes any other accounts linked to the same user', async () => { const msUsernameOne = 'super-user'; const msUsernameTwo = 'super-user-2'; mockedFetch .mockImplementationOnce(() => Promise.resolve({ ok: true, json: () => Promise.resolve({ userName: msUsernameOne }) }) ) .mockImplementationOnce(() => Promise.resolve({ ok: true, json: () => Promise.resolve({ userName: msUsernameTwo }) }) ); await fastifyTestInstance.prisma.msUsername.create({ data: { msUsername: 'dummy', userId: 'aaaaaaaaaaaaaaaaaaaaaaaa', ttl: 77760000000 } });\n\nawait superPost('/user/ms-username').send({\n            msTranscriptUrl:\n              'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo'\n          });\n          await superPost('/user/ms-username').send({\n            msTranscriptUrl:\n              'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo'\n          });\n\nconst linkedAccounts =\n            await fastifyTestInstance.prisma.msUsername.findMany({});\n\nexpect(linkedAccounts).toHaveLength(2);\n          expect(linkedAccounts[1]?.msUsername).toBe(msUsernameTwo);\n        });\n\nit('calls the Microsoft API with the correct url', async () => {\n          const msTranscriptUrl =\n            'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo';\n\nconst msTranscriptApiUrl =\n            'https://learn.microsoft.com/api/profiles/transcript/share/8u6awert43q1plo';\n\nawait superPost('/user/ms-username').send({\n            msTranscriptUrl\n          });\n\nexpect(mockedFetch).toHaveBeenCalledWith(msTranscriptApiUrl);\n        });\n      });\n    });\n\ndescribe('/user/submit-survey', () => {\n      afterEach(async () => {\n        await fastifyTestInstance.prisma.survey.deleteMany({\n          where: { userId: defaultUserId }\n        });\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 32,
    "total_chunks": 40
  },
  {
    "id": "6bf83ef4311738a75810f0792bd9f30c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "); await fastifyTestInstance.prisma.msUsername.create({ data: { msUsername: 'dummy', userId: 'aaaaaaaaaaaaaaaaaaaaaaaa', ttl: 77760000000 } }); await superPost('/user/ms-username').send({ msTranscriptUrl: 'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo' }); await superPost('/user/ms-username').send({ msTranscriptUrl: 'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo' }); const linkedAccounts = await fastifyTestInstance.prisma.msUsername.findMany({}); expect(linkedAccounts).toHaveLength(2); expect(linkedAccounts[1]?.msUsername).toBe(msUsernameTwo); }); it('calls the Microsoft API with the correct url', async () => { const msTranscriptUrl = 'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo'; const msTranscriptApiUrl = 'https://learn.microsoft.com/api/profiles/transcript/share/8u6awert43q1plo'; await superPost('/user/ms-username').send({ msTranscriptUrl }); expect(mockedFetch).toHaveBeenCalledWith(msTranscriptApiUrl); }); }); }); describe('/user/submit-survey', () => { afterEach(async () => { await fastifyTestInstance.prisma.survey.deleteMany({ where: { userId: defaultUserId } }); });\n\ntest('POST returns 400 for invalid survey title', async () => {\n        const response = await superPost('/user/submit-survey').send({\n          surveyResults: { ...mockSurveyResults, title: 'Invalid Survey' }\n        });\n\nexpect(response.statusCode).toBe(400);\n        expect(response.body).toStrictEqual({\n          type: 'error',\n          message: 'flash.survey.err-1'\n        });\n      });\n\ntest('POST returns 400 if user already submitted survey', async () => {\n        // Submit survey for first time\n        await superPost('/user/submit-survey').send({\n          surveyResults: mockSurveyResults\n        });\n\n// Submit same survey again to get failed response\n        const response = await superPost('/user/submit-survey').send({\n          surveyResults: mockSurveyResults\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 33,
    "total_chunks": 40
  },
  {
    "id": "774b1c3a087866f462f158694459bdca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "defaultUserId } }); }); test('POST returns 400 for invalid survey title', async () => { const response = await superPost('/user/submit-survey').send({ surveyResults: { ...mockSurveyResults, title: 'Invalid Survey' } }); expect(response.statusCode).toBe(400); expect(response.body).toStrictEqual({ type: 'error', message: 'flash.survey.err-1' }); }); test('POST returns 400 if user already submitted survey', async () => { // Submit survey for first time await superPost('/user/submit-survey').send({ surveyResults: mockSurveyResults }); // Submit same survey again to get failed response const response = await superPost('/user/submit-survey').send({ surveyResults: mockSurveyResults });\n\nexpect(response.statusCode).toBe(400);\n        expect(response.body).toStrictEqual({\n          type: 'error',\n          message: 'flash.survey.err-2'\n        });\n      });\n\ntest('POST returns 200 status code with \"success\" message', async () => {\n        const response = await superPost('/user/submit-survey').send({\n          surveyResults: mockSurveyResults\n        });\n\nexpect(response.statusCode).toBe(200);\n        expect(response.body).toStrictEqual({\n          type: 'success',\n          message: 'flash.survey.success'\n        });\n      });\n    });\n\ndescribe('/user/exam-environment/token', () => {\n      beforeEach(() => {\n        mockDeploymentEnv = 'org';\n      });\n\nafterAll(() => {\n        mockDeploymentEnv = 'dev';\n      });\n\nafterEach(async () => {\n        await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.deleteMany(\n          {\n            where: { userId: defaultUserId }\n          }\n        );\n      });\n\ntest('POST generates a new token if one does not exist', async () => {\n        const response = await superPost('/user/exam-environment/token');\n        const { examEnvironmentAuthorizationToken } = response.body;\n\nconst decodedToken = jwt.decode(examEnvironmentAuthorizationToken);\n\nexpect(decodedToken).toStrictEqual({\n          examEnvironmentAuthorizationToken:\n            expect.stringMatching(/^[a-z0-9]{24}$/),\n          iat: expect.any(Number)\n        });\n\nexpect(() =>\n          jwt.verify(examEnvironmentAuthorizationToken, 'wrong-secret')\n        ).toThrow();\n        expect(() =>\n          jwt.verify(examEnvironmentAuthorizationToken, JWT_SECRET)\n        ).not.toThrow();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 34,
    "total_chunks": 40
  },
  {
    "id": "ed5e5a0490578605d59bc331dd6bf049",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "=> { beforeEach(() => { mockDeploymentEnv = 'org'; }); afterAll(() => { mockDeploymentEnv = 'dev'; }); afterEach(async () => { await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.deleteMany( { where: { userId: defaultUserId } } ); }); test('POST generates a new token if one does not exist', async () => { const response = await superPost('/user/exam-environment/token'); const { examEnvironmentAuthorizationToken } = response.body; const decodedToken = jwt.decode(examEnvironmentAuthorizationToken); expect(decodedToken).toStrictEqual({ examEnvironmentAuthorizationToken: expect.stringMatching(/^[a-z0-9]{24}$/), iat: expect.any(Number) }); expect(() => jwt.verify(examEnvironmentAuthorizationToken, 'wrong-secret') ).toThrow(); expect(() => jwt.verify(examEnvironmentAuthorizationToken, JWT_SECRET) ).not.toThrow();\n\nexpect(response.status).toBe(201);\n      });\n\ntest('POST only allows for one token per user id', async () => {\n        const token =\n          await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.create(\n            {\n              data: {\n                userId: defaultUserId,\n                expireAt: new Date()\n              }\n            }\n          );\n\nconst response = await superPost('/user/exam-environment/token');\n\nconst { examEnvironmentAuthorizationToken } = response.body;\n\nconst decodedToken = jwt.decode(examEnvironmentAuthorizationToken);\n\nexpect(decodedToken).not.toHaveProperty(\n          'examEnvironmentAuthorizationToken',\n          token.id\n        );\n\nexpect(response.status).toBe(201);\n\nconst tokens =\n          await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.findMany(\n            {\n              where: { userId: defaultUserId }\n            }\n          );\n        expect(tokens).toHaveLength(1);\n      });\n\ntest('POST does not generate a new token in non-production environments for non-staff', async () => {\n        // Override deployment environment for this test\n        mockDeploymentEnv = 'dev';\n        const response = await superPost('/user/exam-environment/token');\n        expect(response.status).toBe(403);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 35,
    "total_chunks": 40
  },
  {
    "id": "47ca0cb15cdd61dafd5b52fdd6cd5dd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "userId: defaultUserId, expireAt: new Date() } } ); const response = await superPost('/user/exam-environment/token'); const { examEnvironmentAuthorizationToken } = response.body; const decodedToken = jwt.decode(examEnvironmentAuthorizationToken); expect(decodedToken).not.toHaveProperty( 'examEnvironmentAuthorizationToken', token.id ); expect(response.status).toBe(201); const tokens = await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.findMany( { where: { userId: defaultUserId } } ); expect(tokens).toHaveLength(1); }); test('POST does not generate a new token in non-production environments for non-staff', async () => { // Override deployment environment for this test mockDeploymentEnv = 'dev'; const response = await superPost('/user/exam-environment/token'); expect(response.status).toBe(403); });\n\ntest('POST does generate a new token in non-production environments for staff', async () => {\n        // Override deployment environment for this test\n        mockDeploymentEnv = 'dev';\n        await fastifyTestInstance.prisma.user.update({\n          where: {\n            id: defaultUserId\n          },\n          data: { email: 'camperbot@freecodecamp.org' }\n        });\n\nconst response = await superPost('/user/exam-environment/token');\n        const { examEnvironmentAuthorizationToken } = response.body;\n\nconst decodedToken = jwt.decode(examEnvironmentAuthorizationToken);\n\nexpect(decodedToken).toStrictEqual({\n          examEnvironmentAuthorizationToken:\n            expect.stringMatching(/^[a-z0-9]{24}$/),\n          iat: expect.any(Number)\n        });\n\nexpect(() =>\n          jwt.verify(examEnvironmentAuthorizationToken, 'wrong-secret')\n        ).toThrow();\n        expect(() =>\n          jwt.verify(examEnvironmentAuthorizationToken, JWT_SECRET)\n        ).not.toThrow();\n\nexpect(response.status).toBe(201);\n      });\n    });\n  });\n\ndescribe('Unauthenticated user', () => {\n    let setCookies: string[];\n    // Get the CSRF cookies from an unprotected route\n    beforeAll(async () => {\n      const res = await superRequest('/status/ping', { method: 'GET' });\n      setCookies = res.get('Set-Cookie');\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 36,
    "total_chunks": 40
  },
  {
    "id": "b937203ceba4794540689549ee28408c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "}, data: { email: 'camperbot@freecodecamp.org' } }); const response = await superPost('/user/exam-environment/token'); const { examEnvironmentAuthorizationToken } = response.body; const decodedToken = jwt.decode(examEnvironmentAuthorizationToken); expect(decodedToken).toStrictEqual({ examEnvironmentAuthorizationToken: expect.stringMatching(/^[a-z0-9]{24}$/), iat: expect.any(Number) }); expect(() => jwt.verify(examEnvironmentAuthorizationToken, 'wrong-secret') ).toThrow(); expect(() => jwt.verify(examEnvironmentAuthorizationToken, JWT_SECRET) ).not.toThrow(); expect(response.status).toBe(201); }); }); }); describe('Unauthenticated user', () => { let setCookies: string[]; // Get the CSRF cookies from an unprotected route beforeAll(async () => { const res = await superRequest('/status/ping', { method: 'GET' }); setCookies = res.get('Set-Cookie'); });\n\nconst endpoints: { path: string; method: 'GET' | 'POST' | 'DELETE' }[] = [\n      { path: '/account/delete', method: 'POST' },\n      { path: '/account/reset-progress', method: 'POST' },\n      { path: '/user/get-session-user', method: 'GET' },\n      { path: '/user/user-token', method: 'DELETE' },\n      { path: '/user/user-token', method: 'POST' },\n      { path: '/user/ms-username', method: 'DELETE' },\n      { path: '/user/report-user', method: 'POST' },\n      { path: '/user/ms-username', method: 'POST' },\n      { path: '/user/submit-survey', method: 'POST' }\n    ];\n\nendpoints.forEach(({ path, method }) => {\n      test(`${method} ${path} returns 401 status code with error message`, async () => {\n        const response = await superRequest(path, {\n          method,\n          setCookies\n        });\n        expect(response.statusCode).toBe(401);\n      });\n    });\n  });\n});\n\ndescribe('Microsoft helpers', () => {\n  describe('getMsTranscriptApiUrl', () => {\n    const expectedUrl =\n      'https://learn.microsoft.com/api/profiles/transcript/share/8u6awert43q1plo';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 37,
    "total_chunks": 40
  },
  {
    "id": "edc4b72a47a15ee4689e8d1c14127d14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "path: '/user/user-token', method: 'POST' }, { path: '/user/ms-username', method: 'DELETE' }, { path: '/user/report-user', method: 'POST' }, { path: '/user/ms-username', method: 'POST' }, { path: '/user/submit-survey', method: 'POST' } ]; endpoints.forEach(({ path, method }) => { test(`${method} ${path} returns 401 status code with error message`, async () => { const response = await superRequest(path, { method, setCookies }); expect(response.statusCode).toBe(401); }); }); }); }); describe('Microsoft helpers', () => { describe('getMsTranscriptApiUrl', () => { const expectedUrl = 'https://learn.microsoft.com/api/profiles/transcript/share/8u6awert43q1plo';\n\nconst urlWithoutSlash =\n      'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo';\n    const urlWithSlash = `${urlWithoutSlash}/`;\n    const urlWithQueryParams = `${urlWithoutSlash}?foo=bar`;\n    const urlWithQueryParamsAndSlash = `${urlWithSlash}?foo=bar`;\n\nit('should extract the transcript id from the url', () => {\n      expect(getMsTranscriptApiUrl(urlWithoutSlash)).toEqual({\n        error: null,\n        data: expectedUrl\n      });\n    });\n\nit('should handle trailing slashes', () => {\n      expect(getMsTranscriptApiUrl(urlWithSlash)).toEqual({\n        error: null,\n        data: expectedUrl\n      });\n    });\n\nit('should ignore query params', () => {\n      expect(getMsTranscriptApiUrl(urlWithQueryParams)).toEqual({\n        error: null,\n        data: expectedUrl\n      });\n      expect(getMsTranscriptApiUrl(urlWithQueryParamsAndSlash)).toEqual({\n        error: null,\n        data: expectedUrl\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 38,
    "total_chunks": 40
  },
  {
    "id": "e957403f63674f5fae24e30abccf4c4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
    "source_type": "git_repo",
    "title": "user.test",
    "content": "describe('getMsTranscriptApiUrl', () => { const expectedUrl = 'https://learn.microsoft.com/api/profiles/transcript/share/8u6awert43q1plo'; const urlWithoutSlash = 'https://learn.microsoft.com/en-us/users/mot01/transcript/8u6awert43q1plo'; const urlWithSlash = `${urlWithoutSlash}/`; const urlWithQueryParams = `${urlWithoutSlash}?foo=bar`; const urlWithQueryParamsAndSlash = `${urlWithSlash}?foo=bar`; it('should extract the transcript id from the url', () => { expect(getMsTranscriptApiUrl(urlWithoutSlash)).toEqual({ error: null, data: expectedUrl }); }); it('should handle trailing slashes', () => { expect(getMsTranscriptApiUrl(urlWithSlash)).toEqual({ error: null, data: expectedUrl }); }); it('should ignore query params', () => { expect(getMsTranscriptApiUrl(urlWithQueryParams)).toEqual({ error: null, data: expectedUrl }); expect(getMsTranscriptApiUrl(urlWithQueryParamsAndSlash)).toEqual({ error: null, data: expectedUrl }); });\n\nit('should return an error for invalid URLs', () => {\n      const validBadUrl = 'https://www.example.com/invalid-url';\n      expect(getMsTranscriptApiUrl(validBadUrl)).toEqual({\n        error: expect.any(String),\n        data: null\n      });\n      const invalidUrl = ' ';\n      expect(getMsTranscriptApiUrl(invalidUrl)).toEqual({\n        error: expect.any(String),\n        data: null\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 47348,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\protected\\user.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 39,
    "total_chunks": 40
  },
  {
    "id": "5383508218b3cdd5361ac74cb6b78096",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\n\nimport { find } from 'lodash';\nimport * as schemas from '../../schemas';\nimport {\n  certSlugTypeMap,\n  certTypeTitleMap,\n  certTypeIdMap,\n  completionHours,\n  oldDataVizId\n} from '../../../../shared/config/certification-settings';\nimport {\n  getFallbackFullStackDate,\n  isKnownCertSlug\n} from '../helpers/certificate-utils';\nimport { normalizeDate } from '../../utils/normalize';\n\n/**\n * Plugin for the unprotected certificate endpoints.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const unprotectedCertificateRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.get(\n    '/certificate/showCert/:username/:certSlug',\n    {\n      schema: schemas.certSlug\n    },\n    async (req, reply) => {\n      const logger = fastify.log.child({ req, res: reply });\n      const username = req.params.username.toLowerCase();\n      const certSlug = req.params.certSlug;\n\nif (!isKnownCertSlug(certSlug)) {\n        logger.warn(`Unknown certSlug: ${certSlug}`);\n        void reply.code(404);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.cert-not-found',\n              variables: { certSlug }\n            }\n          ]\n        });\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6704,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 332,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "6bcb5bf81d405fff44707f966cf2a22a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "@param done The callback to signal that the plugin is ready. */ export const unprotectedCertificateRoutes: FastifyPluginCallbackTypebox = ( fastify, _options, done ) => { fastify.get( '/certificate/showCert/:username/:certSlug', { schema: schemas.certSlug }, async (req, reply) => { const logger = fastify.log.child({ req, res: reply }); const username = req.params.username.toLowerCase(); const certSlug = req.params.certSlug; if (!isKnownCertSlug(certSlug)) { logger.warn(`Unknown certSlug: ${certSlug}`); void reply.code(404); return reply.send({ messages: [ { type: 'info', message: 'flash.cert-not-found', variables: { certSlug } } ] }); }\n\nconst certType = certSlugTypeMap[certSlug];\n      const certId = certTypeIdMap[certType];\n      const certTitle = certTypeTitleMap[certType];\n      const completionTime = completionHours[certType] || 300;\n      const user = await fastify.prisma.user.findFirst({\n        where: { username },\n        select: {\n          isBanned: true,\n          isCheater: true,\n          isFrontEndCert: true,\n          isBackEndCert: true,\n          isFullStackCert: true,\n          isRespWebDesignCert: true,\n          isFrontEndLibsCert: true,\n          isJsAlgoDataStructCert: true,\n          isJsAlgoDataStructCertV8: true,\n          isDataVisCert: true,\n          is2018DataVisCert: true,\n          isApisMicroservicesCert: true,\n          isInfosecQaCert: true,\n          isQaCertV7: true,\n          isInfosecCertV7: true,\n          isSciCompPyCertV7: true,\n          isDataAnalysisPyCertV7: true,\n          isMachineLearningPyCertV7: true,\n          isRelationalDatabaseCertV8: true,\n          isCollegeAlgebraPyCertV8: true,\n          isFoundationalCSharpCertV8: true,\n          isHonest: true,\n          username: true,\n          name: true,\n          completedChallenges: true,\n          profileUI: true\n        }\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6704,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "76a4cbd9a0bb0619a326b6b8c9414dee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "certTypeIdMap[certType]; const certTitle = certTypeTitleMap[certType]; const completionTime = completionHours[certType] || 300; const user = await fastify.prisma.user.findFirst({ where: { username }, select: { isBanned: true, isCheater: true, isFrontEndCert: true, isBackEndCert: true, isFullStackCert: true, isRespWebDesignCert: true, isFrontEndLibsCert: true, isJsAlgoDataStructCert: true, isJsAlgoDataStructCertV8: true, isDataVisCert: true, is2018DataVisCert: true, isApisMicroservicesCert: true, isInfosecQaCert: true, isQaCertV7: true, isInfosecCertV7: true, isSciCompPyCertV7: true, isDataAnalysisPyCertV7: true, isMachineLearningPyCertV7: true, isRelationalDatabaseCertV8: true, isCollegeAlgebraPyCertV8: true, isFoundationalCSharpCertV8: true, isHonest: true, username: true, name: true, completedChallenges: true, profileUI: true } });\n\nif (user === null) {\n        logger.info(`User ${username} not found.`);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.username-not-found',\n              variables: { username }\n            }\n          ]\n        });\n      }\n\nif (user.isCheater || user.isBanned) {\n        logger.info(`User ${username} is banned or a cheater.`);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.not-eligible'\n            }\n          ]\n        });\n      }\n\nif (!user.isHonest) {\n        logger.info(`User ${username} has not accepted honesty policy.`);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.not-honest',\n              variables: { username }\n            }\n          ]\n        });\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6704,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "8a8bb724330573208efe5b39ad8d95c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "=== null) { logger.info(`User ${username} not found.`); return reply.send({ messages: [ { type: 'info', message: 'flash.username-not-found', variables: { username } } ] }); } if (user.isCheater || user.isBanned) { logger.info(`User ${username} is banned or a cheater.`); return reply.send({ messages: [ { type: 'info', message: 'flash.not-eligible' } ] }); } if (!user.isHonest) { logger.info(`User ${username} has not accepted honesty policy.`); return reply.send({ messages: [ { type: 'info', message: 'flash.not-honest', variables: { username } } ] }); }\n\nif (user.profileUI?.isLocked) {\n        logger.info(`User ${username} has a locked profile.`);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.profile-private',\n              variables: { username }\n            }\n          ]\n        });\n      }\n\nif (!user.name) {\n        logger.info(`User ${username} has not added a name.`);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.add-name'\n            }\n          ]\n        });\n      }\n\nif (!user.profileUI?.showCerts) {\n        logger.info(`User ${username} has private certs.`);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.certs-private',\n              variables: { username }\n            }\n          ]\n        });\n      }\n\nif (!user.profileUI?.showTimeLine) {\n        logger.info(`User ${username} has private timeline.`);\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.timeline-private',\n              variables: { username }\n            }\n          ]\n        });\n      }\n\nif (!user[certType]) {\n        const cert = certTypeTitleMap[certType];\n        logger.info(\n          `User ${username} has not completed the ${cert} certification.`\n        );\n        return reply.send({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.user-not-certified',\n              variables: { username, cert }\n            }\n          ]\n        });\n      }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6704,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "b5e99fca323769c186c42322b438cd00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
    "source_type": "git_repo",
    "title": "certificate",
    "content": "reply.send({ messages: [ { type: 'info', message: 'flash.certs-private', variables: { username } } ] }); } if (!user.profileUI?.showTimeLine) { logger.info(`User ${username} has private timeline.`); return reply.send({ messages: [ { type: 'info', message: 'flash.timeline-private', variables: { username } } ] }); } if (!user[certType]) { const cert = certTypeTitleMap[certType]; logger.info( `User ${username} has not completed the ${cert} certification.` ); return reply.send({ messages: [ { type: 'info', message: 'flash.user-not-certified', variables: { username, cert } } ] }); }\n\nconst { completedChallenges } = user;\n      const certChallenge = find(\n        completedChallenges,\n        ({ id }) => certId === id\n      );\n\nlet { completedDate = Date.now() } = certChallenge || {};\n\n// the challenge id has been rotated for isDataVisCert\n      if (certType === 'isDataVisCert' && !certChallenge) {\n        const oldDataVisIdChall = find(\n          completedChallenges,\n          ({ id }) => oldDataVizId === id\n        );\n\nif (oldDataVisIdChall) {\n          completedDate = oldDataVisIdChall.completedDate || completedDate;\n        }\n      }\n\n// if fullcert is not found, return the latest completedDate\n      if (certType === 'isFullStackCert' && !certChallenge) {\n        completedDate = getFallbackFullStackDate(\n          completedChallenges,\n          completedDate\n        );\n      }\n\nconst { name } = user;\n\nif (!user.profileUI.showName) {\n        logger.info(`User ${username} has private name.`);\n        void reply.code(200);\n        return reply.send({\n          certSlug,\n          certTitle,\n          username,\n          date: normalizeDate(completedDate),\n          completionTime\n        });\n      }\n\nvoid reply.code(200);\n      return reply.send({\n        certSlug,\n        certTitle,\n        username,\n        name,\n        date: normalizeDate(completedDate),\n        completionTime\n      });\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6704,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "1f1756fee1c57e212b6f3978b83f36e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-endpoints.test.ts",
    "source_type": "git_repo",
    "title": "deprecated-endpoints.test",
    "content": "import request from 'supertest';\n\nimport { setupServer } from '../../../jest.utils';\nimport { endpoints } from './deprecated-endpoints';\n\ndescribe('Deprecated endpoints', () => {\n  setupServer();\n\nendpoints.forEach(([endpoint, method]) => {\n    test(`${method} ${endpoint} returns 410 status code with \"info\" message`, async () => {\n      const response = await request(fastifyTestInstance.server)[\n        method.toLowerCase() as 'get' | 'post'\n      ](endpoint);\n\nexpect(response.body).toStrictEqual({\n        message: {\n          type: 'info',\n          message: 'Please reload the app, this feature is no longer available.'\n        }\n      });\n      expect(response.status).toBe(410);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 715,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-endpoints.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 154,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fb3223bd292fb2479acd6ec71f60b409",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "import {\n  defaultUserEmail,\n  defaultUserId,\n  resetDefaultUser,\n  setupServer,\n  superRequest\n} from '../../../jest.utils';\nimport { getFallbackFullStackDate } from '../helpers/certificate-utils';\n\nconst DATE_NOW = Date.now();\n\ndescribe('certificate routes', () => {\n  setupServer();\n\ndescribe('Unauthenticated user', () => {\n    beforeAll(async () => {\n      await resetDefaultUser();\n\njest.useFakeTimers({\n        doNotFake: ['nextTick']\n      });\n      jest.setSystemTime(DATE_NOW);\n    });\n\nafterAll(() => {\n      jest.useRealTimers();\n    }); describe('GET /certificate/showCert/:username/:certSlug', () => {\n      beforeEach(async () => {\n        await fastifyTestInstance prisma user updateMany({\n          where: { email: defaultUserEmail },\n          data: {\n            username: 'foobar',\n            name: 'foobar',\n            isHonest: true,\n            isBanned: false,\n            isCheater: false,\n            profileUI: { isLocked: false, showCerts: true, showTimeLine: true }\n          }\n        });\n      });\n      test('should return user not found if the user cannot be found', async () => {\n        const response = await superRequest(\n          '/certificate/showCert/not-a-valid-user-name/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body) toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash username-not-found',\n              variables: { username: 'not-a-valid-user-name' }\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });\n      test('should ask user to add name if there is no name', async () => {\n        await fastifyTestInstance prisma user update({\n          where: { id: defaultUserId },\n          data: { name: null }\n        });\n        const response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body) toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash add-name'\n            }\n          ]\n        });\n        expect(response status)",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "a6b47afbe509d5b04007ceb4e1cd0762",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "{ type: 'info', message: 'flash username-not-found', variables: { username: 'not-a-valid-user-name' } } ] }); expect(response status) toBe(200); }); test('should ask user to add name if there is no name', async () => { await fastifyTestInstance prisma user update({ where: { id: defaultUserId }, data: { name: null } }); const response = await superRequest( '/certificate/showCert/foobar/javascript-algorithms-and-data-structures', { method: 'GET' } ); expect(response body) toEqual({ messages: [ { type: 'info', message: 'flash add-name' } ] }); expect(response status)toBe(200);\n      });\n      test('should return not eligible if user is banned', async () => {\n        await fastifyTestInstance prisma user update({\n          where: { id: defaultUserId },\n          data: { isBanned: true }\n        });\n        const response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body) toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash not-eligible'\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });\n      test('should return not eligible if user is cheater', async () => {\n        await fastifyTestInstance prisma user update({\n          where: { id: defaultUserId },\n          data: { isCheater: true }\n        });\n        const response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body) toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash not-eligible'\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });\n      test('should return not honest if user is not honest', async () => {\n        await fastifyTestInstance prisma user update({\n          where: { id: defaultUserId },\n          data: { isHonest: false }\n        });\n        const response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body)",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "0ec61735710db88b20ab38d764620718",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "{ isCheater: true } }); const response = await superRequest( '/certificate/showCert/foobar/javascript-algorithms-and-data-structures', { method: 'GET' } ); expect(response body) toEqual({ messages: [ { type: 'info', message: 'flash not-eligible' } ] }); expect(response status) toBe(200); }); test('should return not honest if user is not honest', async () => { await fastifyTestInstance prisma user update({ where: { id: defaultUserId }, data: { isHonest: false } }); const response = await superRequest( '/certificate/showCert/foobar/javascript-algorithms-and-data-structures', { method: 'GET' } ); expect(response body)toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash not-honest',\n              variables: { username: 'foobar' }\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });\n      test('should return profile private if profile is private', async () => {\n        await fastifyTestInstance prisma user update({\n          where: { id: defaultUserId },\n          data: {\n            // All properties need to be defined, as this op SETs `profileUI`\n            profileUI: { isLocked: true, showTimeLine: true, showCerts: true }\n          }\n        });\n        const response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body) toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash profile-private',\n              variables: { username: 'foobar' }\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });\n      test('should return certs private if certs are private', async () => {\n        await fastifyTestInstance prisma user update({\n          where: { id: defaultUserId },\n          data: {\n            profileUI: { showCerts: false, showTimeLine: true, isLocked: false }\n          }\n        });\n        const response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body) toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "52916e5049542ca615f3fdd98a570242",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "messages: [ { type: 'info', message: 'flash profile-private', variables: { username: 'foobar' } } ] }); expect(response status) toBe(200); }); test('should return certs private if certs are private', async () => { await fastifyTestInstance prisma user update({ where: { id: defaultUserId }, data: { profileUI: { showCerts: false, showTimeLine: true, isLocked: false } } }); const response = await superRequest( '/certificate/showCert/foobar/javascript-algorithms-and-data-structures', { method: 'GET' } ); expect(response body) toEqual({ messages: [ { type: 'info', message: 'flashcerts-private',\n              variables: { username: 'foobar' }\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });\n      test('should return timeline private if timeline is private', async () => {\n        await fastifyTestInstance prisma user update({\n          where: { id: defaultUserId },\n          data: {\n            profileUI: { showTimeLine: false, showCerts: true, isLocked: false }\n          }\n        });\n        const response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response body) toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash timeline-private',\n              variables: { username: 'foobar' }\n            }\n          ]\n        });\n        expect(response status) toBe(200);\n      });\n\ntest('should not return user full name if `showName` is `false`', async () => {\n        await fastifyTestInstance.prisma.user.update({\n          where: { id: defaultUserId },\n          data: {\n            profileUI: {\n              showTimeLine: true,\n              showCerts: true,\n              isLocked: false,\n              showName: false\n            },\n            isJsAlgoDataStructCert: true,\n            completedChallenges: [\n              {\n                id: '561abd10cb81ac38a17513bc', // Cert ID\n                completedDate: DATE_NOW\n              }\n            ]\n          }\n        });\n\nconst response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "15e82c882375d80459b52fd9cfef78f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "message: 'flash timeline-private', variables: { username: 'foobar' } } ] }); expect(response status) toBe(200); }); test('should not return user full name if `showName` is `false`', async () => { await fastifyTestInstance.prisma.user.update({ where: { id: defaultUserId }, data: { profileUI: { showTimeLine: true, showCerts: true, isLocked: false, showName: false }, isJsAlgoDataStructCert: true, completedChallenges: [ { id: '561abd10cb81ac38a17513bc', // Cert ID completedDate: DATE_NOW } ] } }); const response = await superRequest( '/certificate/showCert/foobar/javascript-algorithms-and-data-structures', { method: 'GET' } );\n\n// TODO: delete this assertion once there's only one status 200 response\n        expect(response.body).toHaveProperty('username', 'foobar');\n        expect(response.body).not.toHaveProperty('name');\n        expect(response.status).toBe(200);\n      });\n\ntest('should return user full name if `showName` is `true`', async () => {\n        await fastifyTestInstance.prisma.user.update({\n          where: { id: defaultUserId },\n          data: {\n            profileUI: {\n              showTimeLine: true,\n              showCerts: true,\n              isLocked: false,\n              showName: true\n            },\n            isJsAlgoDataStructCert: true,\n            completedChallenges: [\n              {\n                id: '561abd10cb81ac38a17513bc', // Cert ID\n                completedDate: DATE_NOW\n              }\n            ]\n          }\n        });\n\nconst response = await superRequest(\n          '/certificate/showCert/foobar/javascript-algorithms-and-data-structures',\n          {\n            method: 'GET'\n          }\n        );\n\nexpect(response.body).toHaveProperty('name', 'foobar');\n        expect(response.status).toBe(200);\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "c226a351470b2bcf65ebfc6cfa8ea3f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "once there's only one status 200 response expect(response.body).toHaveProperty('username', 'foobar'); expect(response.body).not.toHaveProperty('name'); expect(response.status).toBe(200); }); test('should return user full name if `showName` is `true`', async () => { await fastifyTestInstance.prisma.user.update({ where: { id: defaultUserId }, data: { profileUI: { showTimeLine: true, showCerts: true, isLocked: false, showName: true }, isJsAlgoDataStructCert: true, completedChallenges: [ { id: '561abd10cb81ac38a17513bc', // Cert ID completedDate: DATE_NOW } ] } }); const response = await superRequest( '/certificate/showCert/foobar/javascript-algorithms-and-data-structures', { method: 'GET' } ); expect(response.body).toHaveProperty('name', 'foobar'); expect(response.status).toBe(200); });\n\ntest('should return cert-not-found if there is no cert with that slug', async () => {\n        const response = await superRequest(\n          '/certificate/showCert/foobar/not-a-valid-cert-slug',\n          {\n            method: 'GET'\n          }\n        );\n        expect(response.body).toEqual({\n          messages: [\n            {\n              type: 'info',\n              message: 'flash.cert-not-found',\n              variables: { certSlug: 'not-a-valid-cert-slug' }\n            }\n          ]\n        });\n        expect(response.status).toBe(404);\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "cbbabf2c00ae49b79e9dfea0a22449d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "completedChallenges: [ { id: '561abd10cb81ac38a17513bc', // Cert ID completedDate: DATE_NOW } ] } }); const response = await superRequest( '/certificate/showCert/foobar/javascript-algorithms-and-data-structures', { method: 'GET' } ); expect(response.body).toHaveProperty('name', 'foobar'); expect(response.status).toBe(200); }); test('should return cert-not-found if there is no cert with that slug', async () => { const response = await superRequest( '/certificate/showCert/foobar/not-a-valid-cert-slug', { method: 'GET' } ); expect(response.body).toEqual({ messages: [ { type: 'info', message: 'flash.cert-not-found', variables: { certSlug: 'not-a-valid-cert-slug' } } ] }); expect(response.status).toBe(404); }); }); }); });\n\nconst fullStackChallenges = [\n  {\n    completedDate: 1585210952511,\n    id: '5a553ca864b52e1d8bceea14'\n  },\n  {\n    completedDate: 1585210952511,\n    id: '561add10cb82ac38a17513bc'\n  },\n  {\n    completedDate: 1588665778679,\n    id: '561acd10cb82ac38a17513bc'\n  },\n  {\n    completedDate: 1685210952511,\n    id: '561abd10cb81ac38a17513bc'\n  },\n  {\n    completedDate: 1585210952511,\n    id: '561add10cb82ac38a17523bc'\n  },\n  {\n    completedDate: 1588665778679,\n    id: '561add10cb82ac38a17213bc'\n  }\n];\n\ndescribe('helper functions', () => {\n  describe('getFallbackFullStackDate', () => {\n    it('should return the date of the latest completed challenge', () => {\n      expect(getFallbackFullStackDate(fullStackChallenges, 123)).toBe(\n        1685210952511\n      );\n    });\n\nit('should fall back to completedDate if no certifications are provided', () => {\n      expect(getFallbackFullStackDate([], 123)).toBe(123);\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "5a0539e153b34376212bcc8bc4c9066c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
    "source_type": "git_repo",
    "title": "certificate.test",
    "content": "id: '5a553ca864b52e1d8bceea14' }, { completedDate: 1585210952511, id: '561add10cb82ac38a17513bc' }, { completedDate: 1588665778679, id: '561acd10cb82ac38a17513bc' }, { completedDate: 1685210952511, id: '561abd10cb81ac38a17513bc' }, { completedDate: 1585210952511, id: '561add10cb82ac38a17523bc' }, { completedDate: 1588665778679, id: '561add10cb82ac38a17213bc' } ]; describe('helper functions', () => { describe('getFallbackFullStackDate', () => { it('should return the date of the latest completed challenge', () => { expect(getFallbackFullStackDate(fullStackChallenges, 123)).toBe( 1685210952511 ); }); it('should fall back to completedDate if no certifications are provided', () => { expect(getFallbackFullStackDate([], 123)).toBe(123); });\n\nit('should fall back to completedDate if none of the certifications have been completed', () => {\n      expect(\n        getFallbackFullStackDate([{ completedDate: 567, id: 'abc' }], 123)\n      ).toBe(123);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10400,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\certificate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "e1afc02b6f6dbb5f272e11c0fc6bd93b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-endpoints.ts",
    "source_type": "git_repo",
    "title": "deprecated-endpoints",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\n\nimport * as schemas from '../../schemas';\n\ntype Endpoints = [string, 'GET' | 'POST'][];\n\nexport const endpoints: Endpoints = [\n  ['/refetch-user-completed-challenges', 'POST'],\n  ['/certificate/verify-can-claim-cert', 'GET'],\n  ['/api/github', 'GET'],\n  ['/account', 'GET']\n];\n\n/**\n * Plugin for the deprecated endpoints. Instantiates a Fastify route for each\n * endpoint, returning a 410 status code and a message indicating that the user\n * should reload the app.\n *\n * These endpoints remain active until we can confirm that no requests are being\n * made to them.\n *\n * @param fastify The Fastify instance.\n * @param _options Fastify options I guess?\n * @param done Callback to signal that the logic has completed.\n */\nexport const deprecatedEndpoints: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  endpoints.forEach(([endpoint, method]) => {\n    fastify.route({\n      method,\n      url: endpoint,\n      schema: schemas.deprecatedEndpoints,\n      handler: async (_req, reply) => {\n        void reply.status(410);\n        return {\n          message: {\n            type: 'info',\n            message:\n              'Please reload the app, this feature is no longer available.'\n          }\n        } as const;\n      }\n    });\n  });\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1356,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-endpoints.ts",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b7af297aa0dab7d2b5ef9083962cffd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-unsubscribe.test.ts",
    "source_type": "git_repo",
    "title": "deprecated-unsubscribe.test",
    "content": "import { setupServer, superRequest } from '../../../jest.utils';\n\nimport { unsubscribeEndpoints } from './deprecated-unsubscribe';\n\nconst urlEncodedMessage =\n  '?messages=info%5B0%5D%3DWe%2520are%2520no%2520longer%2520able%2520to%2520process%2520this%2520unsubscription%2520request.%2520Please%2520go%2520to%2520your%2520settings%2520to%2520update%2520your%2520email%2520preferences';\n\ndescribe('Deprecated unsubscribeEndpoints', () => {\n  setupServer();\n\nunsubscribeEndpoints.forEach(([endpoint, method]) => {\n    test(`${method} ${endpoint} redirects to origin with \"info\" message`, async () => {\n      const response = await superRequest(endpoint, { method }).set(\n        'Referer',\n        'https://www.freecodecamp.org/settings'\n      );\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      expect(response.headers.location).toStrictEqual(\n        'https://www.freecodecamp.org' + urlEncodedMessage\n      );\n      expect(response.status).toBe(302);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1006,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-unsubscribe.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "41201ef938937904e029cbe3b042a389",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-unsubscribe.ts",
    "source_type": "git_repo",
    "title": "deprecated-unsubscribe",
    "content": "import { FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\n\nimport { getRedirectParams } from '../../utils/redirection';\n\ntype Endpoint = [string, 'GET' | 'POST'];\n\nexport const unsubscribeEndpoints: Endpoint[] = [\n  ['/u/:email', 'GET'],\n  ['/unsubscribe/:email', 'GET']\n];\n\n/**\n * Plugin for the deprecated unsubscribe endpoints. Each route returns a 302\n * redirect to the referer with a message explaining how to unsubscribe.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin,\n * options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const unsubscribeDeprecated: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  unsubscribeEndpoints.forEach(([endpoint, method]) => {\n    fastify.route({\n      method,\n      url: endpoint,\n      handler: async (req, reply) => {\n        const { origin } = getRedirectParams(req);\n        void reply.redirectWithMessage(origin, {\n          type: 'info',\n          content:\n            'We are no longer able to process this unsubscription request. ' +\n            'Please go to your settings to update your email preferences'\n        });\n      }\n    });\n  });\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1254,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\deprecated-unsubscribe.ts",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3e924fa648158d23501601cfc5892d19",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport Stripe from 'stripe';\n\nimport { STRIPE_SECRET_KEY } from '../../utils/env';\nimport {\n  donationSubscriptionConfig,\n  allStripeProductIdsArray\n} from '../../../../shared/config/donation-settings';\nimport * as schemas from '../../schemas';\nimport { inLastFiveMinutes } from '../../utils/validate-donation';\nimport { findOrCreateUser } from '../helpers/auth-helpers';\n\n/**\n * Plugin for public donation endpoints.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const chargeStripeRoute: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  // Stripe plugin\n  const stripe = new Stripe(STRIPE_SECRET_KEY, {\n    apiVersion: '2024-06-20',\n    typescript: true\n  });\n\nfastify.post(\n    '/donate/create-stripe-payment-intent',\n    {\n      schema: schemas.createStripePaymentIntent\n    },\n    async (req, reply) => {\n      const { email, name, amount, duration } = req.body;\n      const log = fastify.log.child({ req, email, amount, duration });\n      log.debug('Creating Stripe payment intent');\n\nif (!donationSubscriptionConfig.plans[duration].includes(amount)) {\n        void reply.code(400);\n        return {\n          error: 'The donation form had invalid values for this submission.'\n        } as const;\n      }\n\ntry {\n        const stripeCustomer = await stripe.customers.create({\n          email,\n          name\n        });\n\nconst stripeSubscription = await stripe.subscriptions.create({\n          customer: stripeCustomer.id,\n          items: [\n            {\n              plan: `${donationSubscriptionConfig.duration[duration]}-donation-${amount}`\n            }\n          ],\n          payment_behavior: 'default_incomplete',\n          payment_settings: { save_default_payment_method: 'on_subscription' },\n          expand: ['latest_invoice.payment_intent']\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6239,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8a54cace8bbf4b42d287046b7377e6a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "{ email, name, amount, duration } = req.body; const log = fastify.log.child({ req, email, amount, duration }); log.debug('Creating Stripe payment intent'); if (!donationSubscriptionConfig.plans[duration].includes(amount)) { void reply.code(400); return { error: 'The donation form had invalid values for this submission.' } as const; } try { const stripeCustomer = await stripe.customers.create({ email, name }); const stripeSubscription = await stripe.subscriptions.create({ customer: stripeCustomer.id, items: [ { plan: `${donationSubscriptionConfig.duration[duration]}-donation-${amount}` } ], payment_behavior: 'default_incomplete', payment_settings: { save_default_payment_method: 'on_subscription' }, expand: ['latest_invoice.payment_intent'] });\n\nif (\n          stripeSubscription.latest_invoice &&\n          typeof stripeSubscription.latest_invoice !== 'string' &&\n          stripeSubscription.latest_invoice.payment_intent &&\n          typeof stripeSubscription.latest_invoice.payment_intent !==\n            'string' &&\n          stripeSubscription.latest_invoice.payment_intent.client_secret !==\n            null\n        ) {\n          const clientSecret =\n            stripeSubscription.latest_invoice.payment_intent.client_secret;\n          log.info('Successfully created payment intent');\n          return reply.send({\n            subscriptionId: stripeSubscription.id,\n            clientSecret\n          });\n        } else {\n          throw new Error('Stripe payment intent client secret is missing');\n        }\n      } catch (error) {\n        log.error(error, 'Failed to create payment intent');\n        fastify.Sentry.captureException(error);\n        void reply.code(500);\n        return reply.send({\n          error: 'Donation failed due to a server error.'\n        });\n      }\n    }\n  );\n\nfastify.post(\n    '/donate/charge-stripe',\n    {\n      schema: schemas.chargeStripe\n    },\n    async (req, reply) => {\n      try {\n        const { email, amount, duration, subscriptionId } = req.body;\n        const log = fastify.log.child({\n          req,\n          email,\n          amount,\n          duration,\n          subscriptionId\n        });\n        log.debug('Processing Stripe charge');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6239,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "119e99e0611a9a22deb34703b49c74f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "}); } else { throw new Error('Stripe payment intent client secret is missing'); } } catch (error) { log.error(error, 'Failed to create payment intent'); fastify.Sentry.captureException(error); void reply.code(500); return reply.send({ error: 'Donation failed due to a server error.' }); } } ); fastify.post( '/donate/charge-stripe', { schema: schemas.chargeStripe }, async (req, reply) => { try { const { email, amount, duration, subscriptionId } = req.body; const log = fastify.log.child({ req, email, amount, duration, subscriptionId }); log.debug('Processing Stripe charge');\n\nconst subscription =\n          await stripe.subscriptions.retrieve(subscriptionId);\n        const isSubscriptionActive = subscription.status === 'active';\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        const productId = subscription.items.data[0]?.plan.product?.toString();\n        const isStartedRecently = inLastFiveMinutes(\n          subscription.current_period_start\n        );\n        const isProductIdValid =\n          productId && allStripeProductIdsArray.includes(productId);\n        const isValidCustomer = typeof subscription.customer === 'string';\n\nif (!isSubscriptionActive) {\n          log.warn('Invalid subscription status', {\n            status: subscription.status\n          });\n          throw new Error(\n            `Stripe subscription information is invalid: ${subscriptionId}`\n          );\n        }\n        if (!isProductIdValid) {\n          log.warn('Invalid product ID', { productId });\n          throw new Error(`Product ID is invalid: ${subscriptionId}`);\n        }\n        if (!isStartedRecently) {\n          log.warn('Subscription not recent', {\n            startTime: subscription.current_period_start\n          });\n          throw new Error(`Subscription is not recent: ${subscriptionId}`);\n        }\n        if (!isValidCustomer) {\n          log.warn('Invalid customer ID', {\n            customerId: subscription.customer\n          });\n          throw new Error(`Customer ID is invalid: ${subscriptionId}`);\n        }\n\nconst user = await findOrCreateUser(fastify, email);\n        log.debug('Found or created user', { userId: user.id });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6239,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "002bd59154751279a751209b70edcfb8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
    "source_type": "git_repo",
    "title": "donate",
    "content": "Error( `Stripe subscription information is invalid: ${subscriptionId}` ); } if (!isProductIdValid) { log.warn('Invalid product ID', { productId }); throw new Error(`Product ID is invalid: ${subscriptionId}`); } if (!isStartedRecently) { log.warn('Subscription not recent', { startTime: subscription.current_period_start }); throw new Error(`Subscription is not recent: ${subscriptionId}`); } if (!isValidCustomer) { log.warn('Invalid customer ID', { customerId: subscription.customer }); throw new Error(`Customer ID is invalid: ${subscriptionId}`); } const user = await findOrCreateUser(fastify, email); log.debug('Found or created user', { userId: user.id });\n\nconst donation = {\n          userId: user.id,\n          email,\n          amount,\n          duration,\n          provider: 'stripe',\n          subscriptionId,\n          customerId: subscription.customer as string,\n          // TODO(Post-MVP) migrate to startDate: new Date()\n          startDate: {\n            date: new Date().toISOString(),\n            when: new Date().toISOString().replace(/.$/, '+00:00')\n          }\n        };\n\nawait fastify.prisma.donation.create({\n          data: donation\n        });\n\nawait fastify.prisma.user.update({\n          where: { id: user.id },\n          data: {\n            isDonating: true\n          }\n        });\n        log.info('Successfully processed donation');\n\nreturn reply.send({\n          isDonating: true\n        });\n      } catch (error) {\n        fastify.log.error(error, 'Failed to process Stripe charge');\n        fastify.Sentry.captureException(error);\n        void reply.code(500);\n        return {\n          error: 'Donation failed due to a server error.'\n        } as const;\n      }\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6239,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.ts",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "de38268f15e0986eab23d7b5a0044e9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "import { setupServer, superRequest } from '../../../jest.utils';\n\nconst testEWalletEmail = 'baz@bar.com';\nconst testSubscriptionId = 'sub_test_id';\nconst testCustomerId = 'cust_test_id';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3746,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 44,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "bd4b52f22b6ef111878aa864ddd81a98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "import { setupServer, superRequest } from '../../../jest.utils';\n\nconst testEWalletEmail = 'baz@bar.com';\nconst testSubscriptionId = 'sub_test_id';\nconst testCustomerId = 'cust_test_id';\n\nconst sharedDonationReqBody = {\n  amount: 500,\n  duration: 'month'\n};\nconst chargeStripeReqBody = {\n  email: testEWalletEmail,\n  subscriptionId: 'sub_test_id',\n  ...sharedDonationReqBody\n};\nconst createStripePaymentIntentReqBody = {\n  email: testEWalletEmail,\n  name: 'Baz Bar',\n  token: { id: 'tok_123' },\n  ...sharedDonationReqBody\n};\nconst mockSubCreate = jest.fn();\nconst mockAttachPaymentMethod = jest.fn(() =>\n  Promise.resolve({\n    id: 'pm_1MqLiJLkdIwHu7ixUEgbFdYF',\n    object: 'payment_method'\n  })\n);\nconst mockCustomerCreate = jest.fn(() =>\n  Promise.resolve({\n    id: testCustomerId,\n    name: 'Jest_User',\n    currency: 'sgd',\n    description: 'Jest User Account created'\n  })\n);\nconst mockSubRetrieveObj = {\n  id: testSubscriptionId,\n  items: {\n    data: [\n      {\n        plan: {\n          product: 'prod_GD1GGbJsqQaupl'\n        }\n      }\n    ]\n  },\n  // 1 Jan 2040\n  current_period_start: Math.floor(Date.now() / 1000),\n  customer: testCustomerId,\n  status: 'active'\n};\nconst mockSubRetrieve = jest.fn(() => Promise.resolve(mockSubRetrieveObj));\nconst mockCheckoutSessionCreate = jest.fn(() =>\n  Promise.resolve({ id: 'checkout_session_id' })\n);\nconst mockCustomerUpdate = jest.fn();\nconst generateMockSubCreate = (status: string) => () =>\n  Promise.resolve({\n    id: testSubscriptionId,\n    latest_invoice: {\n      payment_intent: {\n        client_secret: 'superSecret',\n        status\n      }\n    }\n  });\njest.mock('stripe', () => {\n  return jest.fn().mockImplementation(() => {\n    return {\n      customers: {\n        create: mockCustomerCreate,\n        update: mockCustomerUpdate\n      },\n      paymentMethods: {\n        attach: mockAttachPaymentMethod\n      },\n      subscriptions: {\n        create: mockSubCreate,\n        retrieve: mockSubRetrieve\n      },\n      checkout: {\n        sessions: {\n          create: mockCheckoutSessionCreate\n        }\n      }\n    };\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3746,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 537,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "cf450961f53c3297828b8d21da2056cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "Promise.resolve(mockSubRetrieveObj)); const mockCheckoutSessionCreate = jest.fn(() => Promise.resolve({ id: 'checkout_session_id' }) ); const mockCustomerUpdate = jest.fn(); const generateMockSubCreate = (status: string) => () => Promise.resolve({ id: testSubscriptionId, latest_invoice: { payment_intent: { client_secret: 'superSecret', status } } }); jest.mock('stripe', () => { return jest.fn().mockImplementation(() => { return { customers: { create: mockCustomerCreate, update: mockCustomerUpdate }, paymentMethods: { attach: mockAttachPaymentMethod }, subscriptions: { create: mockSubCreate, retrieve: mockSubRetrieve }, checkout: { sessions: { create: mockCheckoutSessionCreate } } }; }); });\n\ndescribe('Donate', () => {\n  let setCookies: string[];\n  setupServer();\n\ndescribe('Unauthenticated User', () => {\n    // Get the CSRF cookies from an unprotected route\n    beforeAll(async () => {\n      const res = await superRequest('/status/ping', { method: 'GET' });\n      setCookies = res.get('Set-Cookie');\n    });\n\nconst endpoints: { path: string; method: 'POST' | 'PUT' }[] = [\n      { path: '/donate/add-donation', method: 'POST' },\n      { path: '/donate/charge-stripe-card', method: 'POST' },\n      { path: '/donate/update-stripe-card', method: 'PUT' }\n    ];\n\nendpoints.forEach(({ path, method }) => {\n      test(`${method} ${path} returns 401 status code with error message`, async () => {\n        const response = await superRequest(path, {\n          method,\n          setCookies\n        });\n        expect(response.statusCode).toBe(401);\n      });\n    });\n\ntest('POST /donate/create-stripe-payment-intent should return 200', async () => {\n      mockSubCreate.mockImplementationOnce(generateMockSubCreate('no-errors'));\n      const response = await superRequest(\n        '/donate/create-stripe-payment-intent',\n        {\n          method: 'POST',\n          setCookies\n        }\n      ).send(createStripePaymentIntentReqBody);\n      expect(response.status).toBe(200);\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3746,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ace1923ace8b6aa5c805686b13c145a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
    "source_type": "git_repo",
    "title": "donate.test",
    "content": "= [ { path: '/donate/add-donation', method: 'POST' }, { path: '/donate/charge-stripe-card', method: 'POST' }, { path: '/donate/update-stripe-card', method: 'PUT' } ]; endpoints.forEach(({ path, method }) => { test(`${method} ${path} returns 401 status code with error message`, async () => { const response = await superRequest(path, { method, setCookies }); expect(response.statusCode).toBe(401); }); }); test('POST /donate/create-stripe-payment-intent should return 200', async () => { mockSubCreate.mockImplementationOnce(generateMockSubCreate('no-errors')); const response = await superRequest( '/donate/create-stripe-payment-intent', { method: 'POST', setCookies } ).send(createStripePaymentIntentReqBody); expect(response.status).toBe(200); });\n\ntest('POST /donate/charge-stripe should return 200', async () => {\n      mockSubCreate.mockImplementationOnce(generateMockSubCreate('no-errors'));\n      const response = await superRequest('/donate/charge-stripe', {\n        method: 'POST',\n        setCookies\n      }).send(chargeStripeReqBody);\n      expect(response.status).toBe(200);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3746,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\donate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "839e153c36dc5ee690f379bbb892fb98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.ts",
    "source_type": "git_repo",
    "title": "email-subscription",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport * as schemas from '../../schemas';\nimport { getRedirectParams } from '../../utils/redirection';\n\n/**\n * Endpoints to set 'sendQuincyEmail' to true or false using 'unsubscribeId'.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin, options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const emailSubscribtionRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.get(\n    '/ue/:unsubscribeId',\n    {\n      schema: schemas.unsubscribe,\n      errorHandler(error, request, reply) {\n        if (error.validation) {\n          const { origin } = getRedirectParams(request);\n          void reply.code(302);\n          void reply.redirectWithMessage(origin, {\n            type: 'info',\n            content: 'We could not find an account to unsubscribe.'\n          });\n        } else {\n          fastify.errorHandler(error, request, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      try {\n        const { origin } = getRedirectParams(req);\n        const { unsubscribeId } = req.params;\n        const log = fastify.log.child({ req, unsubscribeId });\n\nconst unsubUsers = await fastify.prisma.user.findMany({\n          where: { unsubscribeId }\n        });\n\nif (!unsubUsers.length) {\n          log.warn('No users found for unsubscribe request');\n          void reply.code(302);\n          return reply.redirectWithMessage(origin, {\n            type: 'info',\n            content: 'We could not find an account to unsubscribe.'\n          });\n        }\n\nlog.info(`Found ${unsubUsers.length} user(s) to unsubscribe`);\n        const userUpdatePromises = unsubUsers.map(user =>\n          fastify.prisma.user.updateMany({\n            where: { email: user.email },\n            data: {\n              sendQuincyEmail: false\n            }\n          })\n        );\n\nawait Promise.all(userUpdatePromises);\n        log.info(\n          { emails: unsubUsers.map(u => u.email) },\n          'Successfully unsubscribed users from email.'\n        );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4813,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d9036e41360750096895ea5a964c32f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.ts",
    "source_type": "git_repo",
    "title": "email-subscription",
    "content": "}); const unsubUsers = await fastify.prisma.user.findMany({ where: { unsubscribeId } }); if (!unsubUsers.length) { log.warn('No users found for unsubscribe request'); void reply.code(302); return reply.redirectWithMessage(origin, { type: 'info', content: 'We could not find an account to unsubscribe.' }); } log.info(`Found ${unsubUsers.length} user(s) to unsubscribe`); const userUpdatePromises = unsubUsers.map(user => fastify.prisma.user.updateMany({ where: { email: user.email }, data: { sendQuincyEmail: false } }) ); await Promise.all(userUpdatePromises); log.info( { emails: unsubUsers.map(u => u.email) }, 'Successfully unsubscribed users from email.' );\n\nreturn reply.redirectWithMessage(\n          `${origin}/unsubscribed/${unsubscribeId}`,\n          {\n            type: 'success',\n            content: \"We've successfully updated your email preferences.\"\n          }\n        );\n      } catch (error) {\n        fastify.log.error(error, 'Failed to unsubscribe user from email');\n        fastify.Sentry.captureException(error);\n        void reply.code(302);\n        return reply.redirectWithMessage(origin, {\n          type: 'danger',\n          content: `Failed to unsubscribe user, please contact support at support@freecodecamp.org`\n        });\n      }\n    }\n  );\n\nfastify.get(\n    '/resubscribe/:unsubscribeId',\n    {\n      schema: schemas.resubscribe,\n      errorHandler(error, request, reply) {\n        if (error.validation) {\n          const { origin } = getRedirectParams(request);\n          void reply.code(302);\n          void reply.redirectWithMessage(origin, {\n            type: 'info',\n            content:\n              'We were unable to process this request, please check and try again.'\n          });\n        } else {\n          fastify.errorHandler(error, request, reply);\n        }\n      }\n    },\n    async (req, reply) => {\n      try {\n        const { origin } = getRedirectParams(req);\n        const { unsubscribeId } = req.params;\n        const log = fastify.log.child({ req, unsubscribeId });\n\nconst user = await fastify.prisma.user.findFirst({\n          where: { unsubscribeId }\n        });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4813,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.ts",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "459a96af0a830d100f83bd43ed811824",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.ts",
    "source_type": "git_repo",
    "title": "email-subscription",
    "content": "{ if (error.validation) { const { origin } = getRedirectParams(request); void reply.code(302); void reply.redirectWithMessage(origin, { type: 'info', content: 'We were unable to process this request, please check and try again.' }); } else { fastify.errorHandler(error, request, reply); } } }, async (req, reply) => { try { const { origin } = getRedirectParams(req); const { unsubscribeId } = req.params; const log = fastify.log.child({ req, unsubscribeId }); const user = await fastify.prisma.user.findFirst({ where: { unsubscribeId } });\n\nif (!user) {\n          log.warn('No user found for resubscribe request');\n          void reply.code(302);\n          return reply.redirectWithMessage(origin, {\n            type: 'info',\n            content: 'We could not find an account to resubscribe.'\n          });\n        }\n\nlog.info(`Found user ${user.id} to resubscribe`);\n        await fastify.prisma.user.update({\n          where: { id: user.id },\n          data: {\n            sendQuincyEmail: true\n          }\n        });\n        log.info(\n          `Successfully resubscribed user ${user.id} to email: ${user.email}`\n        );\n\nreturn reply.redirectWithMessage(origin, {\n          type: 'success',\n          content:\n            \"We've successfully updated your email preferences. Thank you for resubscribing.\"\n        });\n      } catch (error) {\n        fastify.log.error(error, 'Failed to resubscribe user to email');\n        fastify.Sentry.captureException(error);\n        void reply.code(302);\n        return reply.redirectWithMessage(origin, {\n          type: 'danger',\n          content: 'Something went wrong.'\n        });\n      }\n    }\n  );\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4813,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.ts",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "2367334ddc3dc33ac38f550f3d260ef7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "export * from './auth-dev';\nexport * from './auth';\nexport * from './certificate';\nexport * from './deprecated-endpoints';\nexport * from './deprecated-unsubscribe';\nexport * from './donate';\nexport * from './email-subscription';\nexport * from './signout';\nexport * from './status';\nexport * from './user';\nexport * from './sentry';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 332,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 76,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f401ba89d5d9bf5d7bd97af403288454",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\sentry.ts",
    "source_type": "git_repo",
    "title": "sentry",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\nimport { type FastifyInstance, type FastifyReply } from 'fastify';\n\nimport { UpdateReqType } from '../../utils';\nimport * as schemas from '../../schemas';\n\n/**\n * Plugin for Sentry-related endpoints.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin,\n * options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const sentryRoutes: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.post(\n    '/sentry/event',\n    {\n      schema: schemas.sentryPostEvent\n    },\n    postSentryEventHandler\n  );\n\ndone();\n};\n\nfunction postSentryEventHandler(\n  this: FastifyInstance,\n  req: UpdateReqType<typeof schemas.sentryPostEvent>,\n  _reply: FastifyReply\n) {\n  throw new Error(`Sentry Test: ${req.body.text}`);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 912,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\sentry.ts",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "50ecd01160912c9817c2c3396d402440",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\signout.test.ts",
    "source_type": "git_repo",
    "title": "signout.test",
    "content": "import { devLogin, setupServer, superRequest } from '../../../jest.utils';\nimport { HOME_LOCATION } from '../../utils/env';\n\ndescribe('GET /signout', () => {\n  setupServer();\n\nbeforeEach(async () => {\n    await devLogin();\n  });\n  it('should clear all the cookies', async () => {\n    const res = await superRequest('/signout', { method: 'GET' });\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const setCookie = res.headers['set-cookie'];\n    expect(setCookie).toEqual(\n      expect.arrayContaining([\n        expect.stringMatching(\n          /^jwt_access_token=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/\n        ),\n        expect.stringMatching(\n          /^csrf_token=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/\n        ),\n        expect.stringMatching(\n          /^_csrf=; Max-Age=0; Path=\\/; Expires=Thu, 01 Jan 1970 00:00:00 GMT/\n        )\n      ])\n    );\n    expect(setCookie).toHaveLength(3);\n  });\n\nit('should redirect to / on the client by default', async () => {\n    const res = await superRequest('/signout', { method: 'GET' });\n\n// TODO: separate the validation and normalization logic.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    expect(res.headers.location).toBe(`${HOME_LOCATION}/`);\n    expect(res.status).toBe(302);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1394,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\signout.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ac246a98fcb6cb401ddce9343af0adbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport type { Prisma } from '@prisma/client';\nimport { setupServer, superRequest } from '../../../jest.utils';\nimport { HOME_LOCATION } from '../../utils/env';\nimport { createUserInput } from '../../utils/create-user';\n\nconst urlEncodedInfoMessage1 =\n  '?messages=info%5B0%5D%3DWe%2520could%2520not%2520find%2520an%2520account%2520to%2520unsubscribe.';\nconst urlEncodedInfoMessage2 =\n  '?messages=info%5B0%5D%3DWe%2520were%2520unable%2520to%2520process%2520this%2520request%252C%2520please%2520check%2520and%2520try%2520again.';\nconst urlEncodedInfoMessage3 =\n  '?messages=info%5B0%5D%3DWe%2520could%2520not%2520find%2520an%2520account%2520to%2520resubscribe.';\nconst urlEncodedSuccessMessage1 =\n  '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.';\nconst urlEncodedSuccessMessage2 =\n  '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.%2520Thank%2520you%2520for%2520resubscribing.';\n\nconst unsubscribeId1 = 'abcde';\nconst unsubscribeId2 = 'abcdef';\nconst unsubscribeId3 = 'abcdefg';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "c5458fea2f979ad5df8f811d0597a5c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport type { Prisma } from '@prisma/client';\nimport { setupServer, superRequest } from '../../../jest.utils';\nimport { HOME_LOCATION } from '../../utils/env';\nimport { createUserInput } from '../../utils/create-user';\n\nconst urlEncodedInfoMessage1 =\n  '?messages=info%5B0%5D%3DWe%2520could%2520not%2520find%2520an%2520account%2520to%2520unsubscribe.';\nconst urlEncodedInfoMessage2 =\n  '?messages=info%5B0%5D%3DWe%2520were%2520unable%2520to%2520process%2520this%2520request%252C%2520please%2520check%2520and%2520try%2520again.';\nconst urlEncodedInfoMessage3 =\n  '?messages=info%5B0%5D%3DWe%2520could%2520not%2520find%2520an%2520account%2520to%2520resubscribe.';\nconst urlEncodedSuccessMessage1 =\n  '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.';\nconst urlEncodedSuccessMessage2 =\n  '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.%2520Thank%2520you%2520for%2520resubscribing.';\n\nconst unsubscribeId1 = 'abcde';\nconst unsubscribeId2 = 'abcdef';\nconst unsubscribeId3 = 'abcdefg';\n\nconst testUserData1: Prisma.userCreateInput[] = [\n  {\n    ...createUserInput('user1@freecodecamp.org'),\n    unsubscribeId: unsubscribeId1,\n    sendQuincyEmail: true\n  },\n  {\n    ...createUserInput('user1@freecodecamp.org'),\n    unsubscribeId: unsubscribeId2,\n    sendQuincyEmail: true\n  },\n  {\n    ...createUserInput('user2@freecodecamp.org'),\n    unsubscribeId: unsubscribeId2,\n    sendQuincyEmail: true\n  },\n  {\n    ...createUserInput('user3@freecodecamp.org'),\n    unsubscribeId: unsubscribeId3,\n    sendQuincyEmail: true\n  }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 531,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "0971f51f58c76defb447bc7e0911aa37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "HOME_LOCATION } from '../../utils/env'; import { createUserInput } from '../../utils/create-user'; const urlEncodedInfoMessage1 = '?messages=info%5B0%5D%3DWe%2520could%2520not%2520find%2520an%2520account%2520to%2520unsubscribe.'; const urlEncodedInfoMessage2 = '?messages=info%5B0%5D%3DWe%2520were%2520unable%2520to%2520process%2520this%2520request%252C%2520please%2520check%2520and%2520try%2520again.'; const urlEncodedInfoMessage3 = '?messages=info%5B0%5D%3DWe%2520could%2520not%2520find%2520an%2520account%2520to%2520resubscribe.'; const urlEncodedSuccessMessage1 = '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.'; const urlEncodedSuccessMessage2 = '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.%2520Thank%2520you%2520for%2520resubscribing.'; const unsubscribeId1 = 'abcde'; const unsubscribeId2 = 'abcdef'; const unsubscribeId3 = 'abcdefg'; const testUserData1: Prisma.userCreateInput[] = [ { ...createUserInput('user1@freecodecamp.org'), unsubscribeId: unsubscribeId1, sendQuincyEmail: true }, { ...createUserInput('user1@freecodecamp.org'), unsubscribeId: unsubscribeId2, sendQuincyEmail: true }, { ...createUserInput('user2@freecodecamp.org'), unsubscribeId: unsubscribeId2, sendQuincyEmail: true }, { ...createUserInput('user3@freecodecamp.org'), unsubscribeId: unsubscribeId3, sendQuincyEmail: true } ];\n\nconst testUserData2: Prisma.userCreateInput[] = [\n  {\n    ...createUserInput('user1@freecodecamp.org'),\n    unsubscribeId: unsubscribeId1,\n    sendQuincyEmail: false\n  },\n  {\n    ...createUserInput('user2@freecodecamp.org'),\n    unsubscribeId: unsubscribeId2,\n    sendQuincyEmail: false\n  },\n  {\n    ...createUserInput('user3@freecodecamp.org'),\n    unsubscribeId: unsubscribeId2,\n    sendQuincyEmail: false\n  }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 586,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "74689551081b69a7ccffb093611bda88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "urlEncodedSuccessMessage2 = '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.%2520Thank%2520you%2520for%2520resubscribing.'; const unsubscribeId1 = 'abcde'; const unsubscribeId2 = 'abcdef'; const unsubscribeId3 = 'abcdefg'; const testUserData1: Prisma.userCreateInput[] = [ { ...createUserInput('user1@freecodecamp.org'), unsubscribeId: unsubscribeId1, sendQuincyEmail: true }, { ...createUserInput('user1@freecodecamp.org'), unsubscribeId: unsubscribeId2, sendQuincyEmail: true }, { ...createUserInput('user2@freecodecamp.org'), unsubscribeId: unsubscribeId2, sendQuincyEmail: true }, { ...createUserInput('user3@freecodecamp.org'), unsubscribeId: unsubscribeId3, sendQuincyEmail: true } ]; const testUserData2: Prisma.userCreateInput[] = [ { ...createUserInput('user1@freecodecamp.org'), unsubscribeId: unsubscribeId1, sendQuincyEmail: false }, { ...createUserInput('user2@freecodecamp.org'), unsubscribeId: unsubscribeId2, sendQuincyEmail: false }, { ...createUserInput('user3@freecodecamp.org'), unsubscribeId: unsubscribeId2, sendQuincyEmail: false } ];\n\ndescribe('Email Subscription endpoints', () => {\n  setupServer();\n\ndescribe('GET /ue/:unsubscribeId', () => {\n    test('should 302 redirect with info message if no ID', async () => {\n      const response = await superRequest('/ue/', { method: 'GET' });\n      expect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}${urlEncodedInfoMessage1}`\n      );\n      expect(response.status).toBe(302);\n    });\n\ntest('should 302 redirect with info message if bad ID', async () => {\n      const response = await superRequest('/ue/54321edcba', { method: 'GET' });\n      expect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}${urlEncodedInfoMessage1}`\n      );\n      expect(response.status).toBe(302);\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "0e38f9acb3a7d90a76490466fa62dfc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "false }, { ...createUserInput('user3@freecodecamp.org'), unsubscribeId: unsubscribeId2, sendQuincyEmail: false } ]; describe('Email Subscription endpoints', () => { setupServer(); describe('GET /ue/:unsubscribeId', () => { test('should 302 redirect with info message if no ID', async () => { const response = await superRequest('/ue/', { method: 'GET' }); expect(response.headers.location).toStrictEqual( `${HOME_LOCATION}${urlEncodedInfoMessage1}` ); expect(response.status).toBe(302); }); test('should 302 redirect with info message if bad ID', async () => { const response = await superRequest('/ue/54321edcba', { method: 'GET' }); expect(response.headers.location).toStrictEqual( `${HOME_LOCATION}${urlEncodedInfoMessage1}` ); expect(response.status).toBe(302); });\n\ntest(\"1: should set 'sendQuincyEmail' to 'false' for users with matching email and 302 redirect with success message\", async () => {\n      await fastifyTestInstance.prisma.user.createMany({\n        data: testUserData1\n      });\n\nconst response = await superRequest(`/ue/${unsubscribeId1}`, {\n        method: 'GET'\n      });\n\nconst users = await fastifyTestInstance.prisma.user.findMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 },\n            { unsubscribeId: unsubscribeId3 }\n          ]\n        }\n      });\n\nexpect(users).toHaveLength(4);\n      users.forEach(user => {\n        if (['user1@freecodecamp.org'].includes(user.email!)) {\n          expect(user.sendQuincyEmail).toBe(false);\n        } else {\n          expect(user.sendQuincyEmail).toBe(true);\n        }\n      });\n\nexpect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}/unsubscribed/${unsubscribeId1}${urlEncodedSuccessMessage1}`\n      );\n\nexpect(response.status).toBe(302);\n      // TODO: If any assertions fail before this call, other tests will fail for no actual reason.\n      await fastifyTestInstance.prisma.user.deleteMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 },\n            { unsubscribeId: unsubscribeId3 }\n          ]\n        }\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "0d30642dec2fcdec69f650e944e593b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "where: { OR: [ { unsubscribeId: unsubscribeId1 }, { unsubscribeId: unsubscribeId2 }, { unsubscribeId: unsubscribeId3 } ] } }); expect(users).toHaveLength(4); users.forEach(user => { if (['user1@freecodecamp.org'].includes(user.email!)) { expect(user.sendQuincyEmail).toBe(false); } else { expect(user.sendQuincyEmail).toBe(true); } }); expect(response.headers.location).toStrictEqual( `${HOME_LOCATION}/unsubscribed/${unsubscribeId1}${urlEncodedSuccessMessage1}` ); expect(response.status).toBe(302); // TODO: If any assertions fail before this call, other tests will fail for no actual reason. await fastifyTestInstance.prisma.user.deleteMany({ where: { OR: [ { unsubscribeId: unsubscribeId1 }, { unsubscribeId: unsubscribeId2 }, { unsubscribeId: unsubscribeId3 } ] } }); });\n\ntest(\"2: should set 'sendQuincyEmail' to 'false' for all users with matching email and 302 redirect with success message\", async () => {\n      await fastifyTestInstance.prisma.user.createMany({\n        data: testUserData1\n      });\n\nconst response = await superRequest(`/ue/${unsubscribeId2}`, {\n        method: 'GET'\n      });\n\nconst users = await fastifyTestInstance.prisma.user.findMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 },\n            { unsubscribeId: unsubscribeId3 }\n          ]\n        }\n      });\n\nexpect(users).toHaveLength(4);\n      users.forEach(user => {\n        if (\n          ['user1@freecodecamp.org', 'user2@freecodecamp.org'].includes(\n            user.email!\n          )\n        ) {\n          expect(user.sendQuincyEmail).toBe(false);\n        } else {\n          expect(user.sendQuincyEmail).toBe(true);\n        }\n      });\n\nexpect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}/unsubscribed/${unsubscribeId2}${urlEncodedSuccessMessage1}`\n      );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "e038de377045ec67f94b711dc2c25412",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "for all users with matching email and 302 redirect with success message\", async () => { await fastifyTestInstance.prisma.user.createMany({ data: testUserData1 }); const response = await superRequest(`/ue/${unsubscribeId2}`, { method: 'GET' }); const users = await fastifyTestInstance.prisma.user.findMany({ where: { OR: [ { unsubscribeId: unsubscribeId1 }, { unsubscribeId: unsubscribeId2 }, { unsubscribeId: unsubscribeId3 } ] } }); expect(users).toHaveLength(4); users.forEach(user => { if ( ['user1@freecodecamp.org', 'user2@freecodecamp.org'].includes( user.email! ) ) { expect(user.sendQuincyEmail).toBe(false); } else { expect(user.sendQuincyEmail).toBe(true); } }); expect(response.headers.location).toStrictEqual( `${HOME_LOCATION}/unsubscribed/${unsubscribeId2}${urlEncodedSuccessMessage1}` );\n\nexpect(response.status).toBe(302);\n      // TODO: If any assertions fail before this call, other tests will fail for no actual reason.\n      await fastifyTestInstance.prisma.user.deleteMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 },\n            { unsubscribeId: unsubscribeId3 }\n          ]\n        }\n      });\n    });\n  });\n\ndescribe('GET /resubscribe/:unsubscribeId', () => {\n    test('should 302 redirect with info message if no ID', async () => {\n      const response = await superRequest('/resubscribe/', { method: 'GET' });\n      expect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}${urlEncodedInfoMessage2}`\n      );\n      expect(response.status).toBe(302);\n    });\n\ntest('should 302 redirect with info message if bad ID', async () => {\n      const response = await superRequest('/resubscribe/54321edcba', {\n        method: 'GET'\n      });\n      expect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}${urlEncodedInfoMessage3}`\n      );\n      expect(response.status).toBe(302);\n    });\n\ntest(\"should set 'sendQuincyEmail' to 'true' for user with matching ID and 302 redirect with success message\", async () => {\n      await fastifyTestInstance.prisma.user.createMany({\n        data: testUserData2\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "b09e6f2efc39ad3ef125f3ad7217fb99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "with info message if no ID', async () => { const response = await superRequest('/resubscribe/', { method: 'GET' }); expect(response.headers.location).toStrictEqual( `${HOME_LOCATION}${urlEncodedInfoMessage2}` ); expect(response.status).toBe(302); }); test('should 302 redirect with info message if bad ID', async () => { const response = await superRequest('/resubscribe/54321edcba', { method: 'GET' }); expect(response.headers.location).toStrictEqual( `${HOME_LOCATION}${urlEncodedInfoMessage3}` ); expect(response.status).toBe(302); }); test(\"should set 'sendQuincyEmail' to 'true' for user with matching ID and 302 redirect with success message\", async () => { await fastifyTestInstance.prisma.user.createMany({ data: testUserData2 });\n\nconst response = await superRequest(`/resubscribe/${unsubscribeId1}`, {\n        method: 'GET'\n      });\n\nconst users = await fastifyTestInstance.prisma.user.findMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 }\n          ]\n        }\n      });\n\nexpect(users).toHaveLength(3);\n      users.forEach(user => {\n        if (user.unsubscribeId === unsubscribeId1) {\n          expect(user.sendQuincyEmail).toBe(true);\n        } else {\n          expect(user.sendQuincyEmail).toBe(false);\n        }\n      });\n\nexpect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}${urlEncodedSuccessMessage2}`\n      );\n\nexpect(response.status).toBe(302);\n      await fastifyTestInstance.prisma.user.deleteMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 }\n          ]\n        }\n      });\n    });\n\ntest(\"should set 'sendQuincyEmail' to 'true' for first user with matching ID and 302 redirect with success message\", async () => {\n      await fastifyTestInstance.prisma.user.createMany({\n        data: testUserData2\n      });\n\nconst response = await superRequest(`/resubscribe/${unsubscribeId2}`, {\n        method: 'GET'\n      });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "1b6f68824df129c442978a07dcd57008",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
    "source_type": "git_repo",
    "title": "email-subscription.test",
    "content": "] } }); expect(users).toHaveLength(3); users.forEach(user => { if (user.unsubscribeId === unsubscribeId1) { expect(user.sendQuincyEmail).toBe(true); } else { expect(user.sendQuincyEmail).toBe(false); } }); expect(response.headers.location).toStrictEqual( `${HOME_LOCATION}${urlEncodedSuccessMessage2}` ); expect(response.status).toBe(302); await fastifyTestInstance.prisma.user.deleteMany({ where: { OR: [ { unsubscribeId: unsubscribeId1 }, { unsubscribeId: unsubscribeId2 } ] } }); }); test(\"should set 'sendQuincyEmail' to 'true' for first user with matching ID and 302 redirect with success message\", async () => { await fastifyTestInstance.prisma.user.createMany({ data: testUserData2 }); const response = await superRequest(`/resubscribe/${unsubscribeId2}`, { method: 'GET' });\n\nconst users = await fastifyTestInstance.prisma.user.findMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 }\n          ]\n        }\n      });\n\nexpect(users).toHaveLength(3);\n      users.forEach(user => {\n        if (user.email === 'user2@freecodecamp.org') {\n          expect(user.sendQuincyEmail).toBe(true);\n        } else {\n          expect(user.sendQuincyEmail).toBe(false);\n        }\n      });\n\nexpect(response.headers.location).toStrictEqual(\n        `${HOME_LOCATION}${urlEncodedSuccessMessage2}`\n      );\n\nexpect(response.status).toBe(302);\n      await fastifyTestInstance.prisma.user.deleteMany({\n        where: {\n          OR: [\n            { unsubscribeId: unsubscribeId1 },\n            { unsubscribeId: unsubscribeId2 }\n          ]\n        }\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8966,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\email-subscription.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "58324c33ae4bfa606e48e82b97e412c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\signout.ts",
    "source_type": "git_repo",
    "title": "signout",
    "content": "import type { FastifyPluginCallback } from 'fastify';\n\nimport { getRedirectParams } from '../../utils/redirection';\n\n/**\n * Route handler for signing out.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin,\n * options)`.\n * @param done Callback to signal that the logic has completed.\n */\nexport const signoutRoute: FastifyPluginCallback = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.get('/signout', async (req, reply) => {\n    const logger = fastify.log.child({ req, res: reply });\n\nvoid reply.clearOurCookies();\n    logger.info('User signed out');\n    const { returnTo } = getRedirectParams(req);\n    await reply.redirect(returnTo);\n  });\n  done();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 732,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\signout.ts",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0cca9ee3acaa753ec436feba1f07df32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\status.test.ts",
    "source_type": "git_repo",
    "title": "status.test",
    "content": "import { setupServer, superRequest } from '../../../jest.utils';\nimport { DEPLOYMENT_VERSION } from '../../utils/env';\n\ndescribe('/status', () => {\n  setupServer();\n\ntest('GET returns 200 status code with pong', async () => {\n    const response = await superRequest('/status/ping', {\n      method: 'GET'\n    });\n\nexpect(response.body).toStrictEqual({ msg: 'pong' });\n    expect(response.status).toBe(200);\n  });\n\ntest('GET returns 200 status code with version', async () => {\n    const response = await superRequest('/status/version', {\n      method: 'GET'\n    });\n\nexpect(response.body).toStrictEqual({ version: DEPLOYMENT_VERSION });\n    expect(response.status).toBe(200);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 697,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\status.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 157,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f43c8211cdd364f7a56876f68bad8b37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\src\\routes\\public\\status.ts",
    "source_type": "git_repo",
    "title": "status",
    "content": "import { type FastifyPluginCallbackTypebox } from '@fastify/type-provider-typebox';\n\nimport { DEPLOYMENT_VERSION } from '../../utils/env';\n\n/**\n * Plugin for the health check endpoint.\n *\n * @param fastify The Fastify instance.\n * @param _options Options passed to the plugin via `fastify.register(plugin,\n * options)`.\n * @param done The callback to signal that the plugin is ready.\n */\nexport const statusRoute: FastifyPluginCallbackTypebox = (\n  fastify,\n  _options,\n  done\n) => {\n  fastify.get('/status/ping', async (req, res) => {\n    fastify.log.child({ req, res }).debug('Replying to ping');\n    return { msg: 'pong' };\n  });\n\nfastify.get('/status/version', async (req, res) => {\n    fastify.log.child({ req, res }).debug('Sending version');\n    return { version: DEPLOYMENT_VERSION };\n  });\n\ndone();\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 815,
      "relative_path": "git_repos\\freeCodeCamp\\api\\src\\routes\\public\\status.ts",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "35b175149c2dd3ee5070c245e6a7e4eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{\n  \"responsive-web-design\": {\n    \"title\": \"Адаптивний вебдизайн (застаріла версія)\",\n    \"intro\": [\n      \"У сертифікації «Адаптивний вебдизайн» ви вивчите мови, які розробники використовують для створення вебсторінок: HTML (мова розмітки гіпертексту) для вмісту та CSS (каскадні таблиці стилів) для дизайну \",\n      \"Спочатку ви створите застосунок із фотографіями котів, аби вивчити основи HTML та CSS Пізніше ви опануєте сучасні методи (серед яких змінні CSS) завдяки створенню пінгвіна, а також опануєте найкращі практики доступності, побудувавши вебформу \",\n      \"Ви також дізнаєтеся, як конструювати вебсайти, які відповідають різним розмірам екранів, створивши Twitter Card за допомогою Flexbox, а ще складний макет блогу з CSS Grid \"\n    ],\n    \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та темні режими) можуть втручатися в тести",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 0,
    "total_chunks": 619
  },
  {
    "id": "f9adbde97008f251d3278cafddd374b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Спочатку ви створите застосунок із фотографіями котів, аби вивчити основи HTML та CSS Пізніше ви опануєте сучасні методи (серед яких змінні CSS) завдяки створенню пінгвіна, а також опануєте найкращі практики доступності, побудувавши вебформу \", \"Ви також дізнаєтеся, як конструювати вебсайти, які відповідають різним розмірам екранів, створивши Twitter Card за допомогою Flexbox, а ще складний макет блогу з CSS Grid \" ], \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та темні режими) можуть втручатися в тестиЯкщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють вміст або макет сторінок під час виконання курсу \",\n    \"blocks\": {\n      \"basic-html-and-html5\": {\n        \"title\": \"Основи HTML та HTML5\",\n        \"intro\": [\n          \"HTML — це мова розмітки, яка використовує спеціальний синтаксис або примітки для опису структури вебсторінки чи браузера",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 619
  },
  {
    "id": "ce71f1024543667e7662bedfcb1b2733",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "за допомогою Flexbox, а ще складний макет блогу з CSS Grid \" ], \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та темні режими) можуть втручатися в тестиЯкщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють вміст або макет сторінок під час виконання курсу \", \"blocks\": { \"basic-html-and-html5\": { \"title\": \"Основи HTML та HTML5\", \"intro\": [ \"HTML — це мова розмітки, яка використовує спеціальний синтаксис або примітки для опису структури вебсторінки чи браузераЕлементи HTML зазвичай мають початковий та кінцевий теги, які оточують вміст та надають йому значення Наприклад, різні елементи можуть описати текст як заголовок, абзац або елемент списку \",\n          \"У цьому курсі ви створите застосунок із фотографіями котів, щоб опанувати застосування деяких з найпоширеніших елементів HTML (головних блоків будь-якої вебсторінки)",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 2,
    "total_chunks": 619
  },
  {
    "id": "ca0d74113a8690791a41ffb1562116ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"blocks\": { \"basic-html-and-html5\": { \"title\": \"Основи HTML та HTML5\", \"intro\": [ \"HTML — це мова розмітки, яка використовує спеціальний синтаксис або примітки для опису структури вебсторінки чи браузераЕлементи HTML зазвичай мають початковий та кінцевий теги, які оточують вміст та надають йому значення Наприклад, різні елементи можуть описати текст як заголовок, абзац або елемент списку \", \"У цьому курсі ви створите застосунок із фотографіями котів, щоб опанувати застосування деяких з найпоширеніших елементів HTML (головних блоків будь-якої вебсторінки)\"\n        ]\n      },\n      \"basic-css\": {\n        \"title\": \"Основи CSS\",\n        \"intro\": [\n          \"CSS, або каскадні таблиці стилів, повідомляють браузеру як показати текст та інший вміст, який ви написали в HTML За допомогою CSS ви можете регулювати колір, шрифт, розмір, відстань і багато інших аспектів елементів HTML \",\n          \"І зараз, коли ви описали структуру свого застосунку, стилізуйте його за допомогою CSS",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 3,
    "total_chunks": 619
  },
  {
    "id": "fba42363ac63310ee4af3d9ce7c0be98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "курсі ви створите застосунок із фотографіями котів, щоб опанувати застосування деяких з найпоширеніших елементів HTML (головних блоків будь-якої вебсторінки)\" ] }, \"basic-css\": { \"title\": \"Основи CSS\", \"intro\": [ \"CSS, або каскадні таблиці стилів, повідомляють браузеру як показати текст та інший вміст, який ви написали в HTML За допомогою CSS ви можете регулювати колір, шрифт, розмір, відстань і багато інших аспектів елементів HTML \", \"І зараз, коли ви описали структуру свого застосунку, стилізуйте його за допомогою CSS\"\n        ]\n      },\n      \"applied-visual-design\": {\n        \"title\": \"Прикладний візуальний дизайн\",\n        \"intro\": [\n          \"Візуальний дизайн — це поєднання типографії, кольорознавства, графіки, анімації, макетів сторінок і багато чого іншого, аби допомогти вам передати своє унікальне повідомлення \",\n          \"У цьому курсі ви навчитеся застосовувати усі ці елементи візуального дизайну для своїх вебсайтів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 4,
    "total_chunks": 619
  },
  {
    "id": "ecf89f6de042457b02e7ec78ac536b1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "допомогою CSS ви можете регулювати колір, шрифт, розмір, відстань і багато інших аспектів елементів HTML \", \"І зараз, коли ви описали структуру свого застосунку, стилізуйте його за допомогою CSS\" ] }, \"applied-visual-design\": { \"title\": \"Прикладний візуальний дизайн\", \"intro\": [ \"Візуальний дизайн — це поєднання типографії, кольорознавства, графіки, анімації, макетів сторінок і багато чого іншого, аби допомогти вам передати своє унікальне повідомлення \", \"У цьому курсі ви навчитеся застосовувати усі ці елементи візуального дизайну для своїх вебсайтів\"\n        ]\n      },\n      \"applied-accessibility\": {\n        \"title\": \"Прикладна доступність\",\n        \"intro\": [\n          \"У процесі веброзробки спеціальні можливості посилаються на вміст сайту та інтерфейс користувача, який широка аудиторія зможе розпізнати, з яким зможе взаємодіяти та за допомогою якого зможе зорієнтуватися на сайті",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 5,
    "total_chunks": 619
  },
  {
    "id": "a19d27d29491bf4ebf30527835f6b1a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "[ \"Візуальний дизайн — це поєднання типографії, кольорознавства, графіки, анімації, макетів сторінок і багато чого іншого, аби допомогти вам передати своє унікальне повідомлення \", \"У цьому курсі ви навчитеся застосовувати усі ці елементи візуального дизайну для своїх вебсайтів\" ] }, \"applied-accessibility\": { \"title\": \"Прикладна доступність\", \"intro\": [ \"У процесі веброзробки спеціальні можливості посилаються на вміст сайту та інтерфейс користувача, який широка аудиторія зможе розпізнати, з яким зможе взаємодіяти та за допомогою якого зможе зорієнтуватися на сайтіУ цю аудиторію також входять люди із зоровими, слуховими, руховими та когнітивними розладами \",\n          \"У цьому курсі ви дізнаєтеся найкращі практики для створення вебсайтів, які доступні кожному",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 6,
    "total_chunks": 619
  },
  {
    "id": "0bc67fbfdd67ed5d12a76e7e1f20df5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "курсі ви навчитеся застосовувати усі ці елементи візуального дизайну для своїх вебсайтів\" ] }, \"applied-accessibility\": { \"title\": \"Прикладна доступність\", \"intro\": [ \"У процесі веброзробки спеціальні можливості посилаються на вміст сайту та інтерфейс користувача, який широка аудиторія зможе розпізнати, з яким зможе взаємодіяти та за допомогою якого зможе зорієнтуватися на сайтіУ цю аудиторію також входять люди із зоровими, слуховими, руховими та когнітивними розладами \", \"У цьому курсі ви дізнаєтеся найкращі практики для створення вебсайтів, які доступні кожному\"\n        ]\n      },\n      \"responsive-web-design-principles\": {\n        \"title\": \"Принципи адаптивного вебдизайну\",\n        \"intro\": [\n          \"Підключитися до мережі можна з багатьох пристроїв різних форм і розмірів Адаптивний вебдизайн — це проєктування гнучких вебсайтів, які пристосовуються до різних розмірів, орієнтацій та розширення екранів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 7,
    "total_chunks": 619
  },
  {
    "id": "30601e94e6ca8fd5403ddf872e44868d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розпізнати, з яким зможе взаємодіяти та за допомогою якого зможе зорієнтуватися на сайтіУ цю аудиторію також входять люди із зоровими, слуховими, руховими та когнітивними розладами \", \"У цьому курсі ви дізнаєтеся найкращі практики для створення вебсайтів, які доступні кожному\" ] }, \"responsive-web-design-principles\": { \"title\": \"Принципи адаптивного вебдизайну\", \"intro\": [ \"Підключитися до мережі можна з багатьох пристроїв різних форм і розмірів Адаптивний вебдизайн — це проєктування гнучких вебсайтів, які пристосовуються до різних розмірів, орієнтацій та розширення екранів\",\n          \"У цьому курсі ви дізнаєтеся як використовувати CSS, аби ваші вебсайти мали гарний вигляд, незалежно від того, на якому пристрої вони відтворені",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 8,
    "total_chunks": 619
  },
  {
    "id": "0ada3249f35ee10c6a1dfce3ffb02ae0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та когнітивними розладами \", \"У цьому курсі ви дізнаєтеся найкращі практики для створення вебсайтів, які доступні кожному\" ] }, \"responsive-web-design-principles\": { \"title\": \"Принципи адаптивного вебдизайну\", \"intro\": [ \"Підключитися до мережі можна з багатьох пристроїв різних форм і розмірів Адаптивний вебдизайн — це проєктування гнучких вебсайтів, які пристосовуються до різних розмірів, орієнтацій та розширення екранів\", \"У цьому курсі ви дізнаєтеся як використовувати CSS, аби ваші вебсайти мали гарний вигляд, незалежно від того, на якому пристрої вони відтворені\"\n        ]\n      },\n      \"css-flexbox\": {\n        \"title\": \"CSS Flexbox\",\n        \"intro\": [\n          \"Flexbox — це потужний режим розмітки, який підтримується практично на всіх пристроях і який було введено з останньою версією CSS, CSS3",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 9,
    "total_chunks": 619
  },
  {
    "id": "218a67c0888bfafa46e73e0c6c21d956",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "можна з багатьох пристроїв різних форм і розмірів Адаптивний вебдизайн — це проєктування гнучких вебсайтів, які пристосовуються до різних розмірів, орієнтацій та розширення екранів\", \"У цьому курсі ви дізнаєтеся як використовувати CSS, аби ваші вебсайти мали гарний вигляд, незалежно від того, на якому пристрої вони відтворені\" ] }, \"css-flexbox\": { \"title\": \"CSS Flexbox\", \"intro\": [ \"Flexbox — це потужний режим розмітки, який підтримується практично на всіх пристроях і який було введено з останньою версією CSS, CSS3За допомогою flexbox набагато легше відцентровувати елементи сторінки та створювати функціональні інтерфейси користувачів, які автоматично зменшуються та розширяються \",\n          \"У цьому курсі ви дізнаєтеся про складові flexbox та функціональної розмітки, коли створюватимете Twitter card",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 10,
    "total_chunks": 619
  },
  {
    "id": "e21d6482347d8fe3255770aa19e499a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ваші вебсайти мали гарний вигляд, незалежно від того, на якому пристрої вони відтворені\" ] }, \"css-flexbox\": { \"title\": \"CSS Flexbox\", \"intro\": [ \"Flexbox — це потужний режим розмітки, який підтримується практично на всіх пристроях і який було введено з останньою версією CSS, CSS3За допомогою flexbox набагато легше відцентровувати елементи сторінки та створювати функціональні інтерфейси користувачів, які автоматично зменшуються та розширяються \", \"У цьому курсі ви дізнаєтеся про складові flexbox та функціональної розмітки, коли створюватимете Twitter card\"\n        ]\n      },\n      \"css-grid\": {\n        \"title\": \"CSS Grid\",\n        \"intro\": [\n          \"CSS grid — це новіший режим розмітки, за допомогою якого можна легко створювати складну адаптивну композицію Він перетворює елемент HTML у сітку і допомагає розмістити дочірні елементи будь-де на екрані \",\n          \"У цьому курсі ви вивчите основи CSS Grid, створюючи різні складні композиції, в тому числі макет блогу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 11,
    "total_chunks": 619
  },
  {
    "id": "d30d3ca2e93c05d4393f6500bc8bccfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "зменшуються та розширяються \", \"У цьому курсі ви дізнаєтеся про складові flexbox та функціональної розмітки, коли створюватимете Twitter card\" ] }, \"css-grid\": { \"title\": \"CSS Grid\", \"intro\": [ \"CSS grid — це новіший режим розмітки, за допомогою якого можна легко створювати складну адаптивну композицію Він перетворює елемент HTML у сітку і допомагає розмістити дочірні елементи будь-де на екрані \", \"У цьому курсі ви вивчите основи CSS Grid, створюючи різні складні композиції, в тому числі макет блогу\"\n        ]\n      }\n    }\n  },\n  \"2022/responsive-web-design\": {\n    \"title\": \"Адаптивний вебдизайн\",\n    \"intro\": [\n      \"В сертифікації «Адаптивний вебдизайн» ви вивчите мови, які розробники використовують для створення вебсторінок: HTML (мова розмітки гіпертексту) для вмісту та CSS (каскадні таблиці стилів) для дизайну \",\n      \"Спочатку ви створите застосунок із фотографіями котів, аби вивчити основи HTML та CSS",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 12,
    "total_chunks": 619
  },
  {
    "id": "af228e5d6ea1d5d0d336f93edbe30827",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "допомагає розмістити дочірні елементи будь-де на екрані \", \"У цьому курсі ви вивчите основи CSS Grid, створюючи різні складні композиції, в тому числі макет блогу\" ] } } }, \"2022/responsive-web-design\": { \"title\": \"Адаптивний вебдизайн\", \"intro\": [ \"В сертифікації «Адаптивний вебдизайн» ви вивчите мови, які розробники використовують для створення вебсторінок: HTML (мова розмітки гіпертексту) для вмісту та CSS (каскадні таблиці стилів) для дизайну \", \"Спочатку ви створите застосунок із фотографіями котів, аби вивчити основи HTML та CSSПізніше ви опануєте сучасні методи, такі як змінні CSS, завдяки створенню пінгвіна, а також створите вікторину, щоб опанувати доступність \",\n      \"Наостанок ви дізнаєтеся, як створити вебсторінки, які реагують на зміну розміру екрану, створивши фотогалерею за допомогою Flexbox і макет журналу з CSS Grid",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 13,
    "total_chunks": 619
  },
  {
    "id": "3fcf5dc98e4bf14192d426822cce3229",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "мови, які розробники використовують для створення вебсторінок: HTML (мова розмітки гіпертексту) для вмісту та CSS (каскадні таблиці стилів) для дизайну \", \"Спочатку ви створите застосунок із фотографіями котів, аби вивчити основи HTML та CSSПізніше ви опануєте сучасні методи, такі як змінні CSS, завдяки створенню пінгвіна, а також створите вікторину, щоб опанувати доступність \", \"Наостанок ви дізнаєтеся, як створити вебсторінки, які реагують на зміну розміру екрану, створивши фотогалерею за допомогою Flexbox і макет журналу з CSS Grid\"\n    ],\n    \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та темні режими) можуть втручатися в тести Якщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють вміст або макет сторінок під час виконання курсу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 14,
    "total_chunks": 619
  },
  {
    "id": "a508d83cbfba61a2cf22f897b9545b50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "сучасні методи, такі як змінні CSS, завдяки створенню пінгвіна, а також створите вікторину, щоб опанувати доступність \", \"Наостанок ви дізнаєтеся, як створити вебсторінки, які реагують на зміну розміру екрану, створивши фотогалерею за допомогою Flexbox і макет журналу з CSS Grid\" ], \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та темні режими) можуть втручатися в тести Якщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють вміст або макет сторінок під час виконання курсу\",\n    \"blocks\": {\n      \"build-a-tribute-page-project\": {\n        \"title\": \"Пам’ятна сторінка\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите пам’ятну сторінку на тему за власним вибором",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 15,
    "total_chunks": 619
  },
  {
    "id": "798091b40255b149597daae9d47df388",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "створивши фотогалерею за допомогою Flexbox і макет журналу з CSS Grid\" ], \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та темні режими) можуть втручатися в тести Якщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють вміст або макет сторінок під час виконання курсу\", \"blocks\": { \"build-a-tribute-page-project\": { \"title\": \"Пам’ятна сторінка\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите пам’ятну сторінку на тему за власним вибором\"\n        ]\n      },\n      \"build-a-personal-portfolio-webpage-project\": {\n        \"title\": \"Вебсторінка персонального портфоліо\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите вебсторінку персонального портфоліо \"\n        ]\n      },\n      \"build-a-product-landing-page-project\": {\n        \"title\": \"Посадкова сторінка продукту\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 16,
    "total_chunks": 619
  },
  {
    "id": "c955258689a3f4a56804df2de85e74ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "час виконання курсу\", \"blocks\": { \"build-a-tribute-page-project\": { \"title\": \"Пам’ятна сторінка\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите пам’ятну сторінку на тему за власним вибором\" ] }, \"build-a-personal-portfolio-webpage-project\": { \"title\": \"Вебсторінка персонального портфоліо\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите вебсторінку персонального портфоліо \" ] }, \"build-a-product-landing-page-project\": { \"title\": \"Посадкова сторінка продукту\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\",\n          \"У цьому проєкті ви створите посадкову сторінку продукту, щоб збути продукт за власним вибором \"\n        ]\n      },\n      \"build-a-survey-form-project\": {\n        \"title\": \"Форма для опитування\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите форму для опитування, щоб зібрати дані своїх користувачів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 17,
    "total_chunks": 619
  },
  {
    "id": "0d0a58bb707ea3d60851ad90eb219c8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "щоб отримати сертифікацію \", \"У цьому проєкті ви створите вебсторінку персонального портфоліо \" ] }, \"build-a-product-landing-page-project\": { \"title\": \"Посадкова сторінка продукту\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\", \"У цьому проєкті ви створите посадкову сторінку продукту, щоб збути продукт за власним вибором \" ] }, \"build-a-survey-form-project\": { \"title\": \"Форма для опитування\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите форму для опитування, щоб зібрати дані своїх користувачів\"\n        ]\n      },\n      \"build-a-technical-documentation-page-project\": {\n        \"title\": \"Сторінка технічної документації\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите сторінку технічної документації, яка служитиме інструкцією або довідником",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 18,
    "total_chunks": 619
  },
  {
    "id": "6143598c8267ca9993c9f8f40fbf63d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цьому проєкті ви створите посадкову сторінку продукту, щоб збути продукт за власним вибором \" ] }, \"build-a-survey-form-project\": { \"title\": \"Форма для опитування\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите форму для опитування, щоб зібрати дані своїх користувачів\" ] }, \"build-a-technical-documentation-page-project\": { \"title\": \"Сторінка технічної документації\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите сторінку технічної документації, яка служитиме інструкцією або довідником\"\n        ]\n      },\n      \"learn-html-by-building-a-cat-photo-app\": {\n        \"title\": \"Вивчіть HTML, створивши застосунок з котами\",\n        \"intro\": [\n          \"Теги HTML надають вебсторінці структуру Ви можете використовувати теги HTML, щоб додати фотографії, кнопки та інші елементи до своєї вебсторінки \",\n          \"У цьому курсі ви вивчите найпоширеніші теги HTML, створивши власний застосунок з фотографіями котів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 19,
    "total_chunks": 619
  },
  {
    "id": "5e1acde4cee27b20c439988ecccb9262",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Сторінка технічної документації\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите сторінку технічної документації, яка служитиме інструкцією або довідником\" ] }, \"learn-html-by-building-a-cat-photo-app\": { \"title\": \"Вивчіть HTML, створивши застосунок з котами\", \"intro\": [ \"Теги HTML надають вебсторінці структуру Ви можете використовувати теги HTML, щоб додати фотографії, кнопки та інші елементи до своєї вебсторінки \", \"У цьому курсі ви вивчите найпоширеніші теги HTML, створивши власний застосунок з фотографіями котів\"\n        ]\n      },\n      \"learn-basic-css-by-building-a-cafe-menu\": {\n        \"title\": \"Вивчіть основи CSS, створивши меню для кафе\",\n        \"intro\": [\n          \"CSS повідомляє браузеру, як зображати вашу вебсторінку Ви можете використовувати CSS, щоб встановити колір, шрифт, розмір та інші властивості елементів HTML \",\n          \"У цьому курсі ви вивчите CSS, розробивши дизайн меню для вебсторінки кафе",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 20,
    "total_chunks": 619
  },
  {
    "id": "25735e721ac5802a700d2d93bd3d902b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "використовувати теги HTML, щоб додати фотографії, кнопки та інші елементи до своєї вебсторінки \", \"У цьому курсі ви вивчите найпоширеніші теги HTML, створивши власний застосунок з фотографіями котів\" ] }, \"learn-basic-css-by-building-a-cafe-menu\": { \"title\": \"Вивчіть основи CSS, створивши меню для кафе\", \"intro\": [ \"CSS повідомляє браузеру, як зображати вашу вебсторінку Ви можете використовувати CSS, щоб встановити колір, шрифт, розмір та інші властивості елементів HTML \", \"У цьому курсі ви вивчите CSS, розробивши дизайн меню для вебсторінки кафе\"\n        ]\n      },\n      \"learn-the-css-box-model-by-building-a-rothko-painting\": {\n        \"title\": \"Вивчіть блокову модель CSS, створивши картину Ротко\",\n        \"intro\": [\n          \"Кожен елемент HTML є своїм власним блоком із власним простором та краєм Це називається блоковою моделлю \",\n          \"У цьому курсі ви використовуватимете CSS та блокову модель, щоб створити власну картину в стилі Ротко",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 21,
    "total_chunks": 619
  },
  {
    "id": "62924f46d5ac3ce2e1854394e33a85b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "вашу вебсторінку Ви можете використовувати CSS, щоб встановити колір, шрифт, розмір та інші властивості елементів HTML \", \"У цьому курсі ви вивчите CSS, розробивши дизайн меню для вебсторінки кафе\" ] }, \"learn-the-css-box-model-by-building-a-rothko-painting\": { \"title\": \"Вивчіть блокову модель CSS, створивши картину Ротко\", \"intro\": [ \"Кожен елемент HTML є своїм власним блоком із власним простором та краєм Це називається блоковою моделлю \", \"У цьому курсі ви використовуватимете CSS та блокову модель, щоб створити власну картину в стилі Ротко\"\n        ]\n      },\n      \"learn-css-variables-by-building-a-city-skyline\": {\n        \"title\": \"Вивчіть змінні CSS, створивши панораму міста\",\n        \"intro\": [\n          \"Змінні CSS допомагають організувати стилі та повторно використовувати їх \",\n          \"У цьому курсі ви побудуєте панораму міста Ви дізнаєтеся, як налаштувати змінні CSS для того, щоб повторно використовувати їх, коли забажаєте",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 22,
    "total_chunks": 619
  },
  {
    "id": "31e0f52b617137900335c5106a1e6b92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "елемент HTML є своїм власним блоком із власним простором та краєм Це називається блоковою моделлю \", \"У цьому курсі ви використовуватимете CSS та блокову модель, щоб створити власну картину в стилі Ротко\" ] }, \"learn-css-variables-by-building-a-city-skyline\": { \"title\": \"Вивчіть змінні CSS, створивши панораму міста\", \"intro\": [ \"Змінні CSS допомагають організувати стилі та повторно використовувати їх \", \"У цьому курсі ви побудуєте панораму міста Ви дізнаєтеся, як налаштувати змінні CSS для того, щоб повторно використовувати їх, коли забажаєте\"\n        ]\n      },\n      \"learn-html-forms-by-building-a-registration-form\": {\n        \"title\": \"Вивчіть форми HTML, створивши реєстраційну форму\",\n        \"intro\": [\n          \"Ви можете використовувати форми HTML для збору інформації від людей, які відвідують вашу вебсторінку \",\n          \"У цьому курсі ви вивчите форми HTML, створивши реєстраційну форму",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 23,
    "total_chunks": 619
  },
  {
    "id": "ca8e8d71f3a12a5a25d968013b738e76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "змінні CSS, створивши панораму міста\", \"intro\": [ \"Змінні CSS допомагають організувати стилі та повторно використовувати їх \", \"У цьому курсі ви побудуєте панораму міста Ви дізнаєтеся, як налаштувати змінні CSS для того, щоб повторно використовувати їх, коли забажаєте\" ] }, \"learn-html-forms-by-building-a-registration-form\": { \"title\": \"Вивчіть форми HTML, створивши реєстраційну форму\", \"intro\": [ \"Ви можете використовувати форми HTML для збору інформації від людей, які відвідують вашу вебсторінку \", \"У цьому курсі ви вивчите форми HTML, створивши реєстраційну формуВи дізнаєтеся, як керувати типами даних, які люди можуть вводити у вашу форму, і деякі нові інструменти CSS для стилізації своєї сторінки \"\n        ]\n      },\n      \"learn-accessibility-by-building-a-quiz\": {\n        \"title\": \"Вивчіть доступність, створивши вікторину\",\n        \"intro\": [\n          \"Доступність полегшує користування вашою вебсторінкою для всіх людей, навіть для людей з порушеннями",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 24,
    "total_chunks": 619
  },
  {
    "id": "ec7d83c9169bd1e9ce17c4cf113386b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "створивши реєстраційну форму\", \"intro\": [ \"Ви можете використовувати форми HTML для збору інформації від людей, які відвідують вашу вебсторінку \", \"У цьому курсі ви вивчите форми HTML, створивши реєстраційну формуВи дізнаєтеся, як керувати типами даних, які люди можуть вводити у вашу форму, і деякі нові інструменти CSS для стилізації своєї сторінки \" ] }, \"learn-accessibility-by-building-a-quiz\": { \"title\": \"Вивчіть доступність, створивши вікторину\", \"intro\": [ \"Доступність полегшує користування вашою вебсторінкою для всіх людей, навіть для людей з порушеннями\",\n          \"У цьому курсі ви створите вебсторінку вікторини Ви дізнаєтеся про інструменти доступності, серед яких комбінації клавіш, атрибути ARIA та найкращі поради щодо дизайну",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 25,
    "total_chunks": 619
  },
  {
    "id": "ad308a4ee532783c7c8fdc5ed2d6a02b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви вивчите форми HTML, створивши реєстраційну формуВи дізнаєтеся, як керувати типами даних, які люди можуть вводити у вашу форму, і деякі нові інструменти CSS для стилізації своєї сторінки \" ] }, \"learn-accessibility-by-building-a-quiz\": { \"title\": \"Вивчіть доступність, створивши вікторину\", \"intro\": [ \"Доступність полегшує користування вашою вебсторінкою для всіх людей, навіть для людей з порушеннями\", \"У цьому курсі ви створите вебсторінку вікторини Ви дізнаєтеся про інструменти доступності, серед яких комбінації клавіш, атрибути ARIA та найкращі поради щодо дизайну\"\n        ]\n      },\n      \"learn-intermediate-css-by-building-a-picasso-painting\": {\n        \"title\": \"Вивчіть перехідний CSS, створивши картину Пікассо\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтеся, як використовувати деякі техніки перехідного CSS, кодуючи власну вебсторінку з картиною Пікассо Ви дізнаєтеся про іконки SVG, позиціювання CSS та пригадаєте інші навички CSS, яких ви навчилися",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 26,
    "total_chunks": 619
  },
  {
    "id": "a87d47b976882666c6260af79b3c7eff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "для всіх людей, навіть для людей з порушеннями\", \"У цьому курсі ви створите вебсторінку вікторини Ви дізнаєтеся про інструменти доступності, серед яких комбінації клавіш, атрибути ARIA та найкращі поради щодо дизайну\" ] }, \"learn-intermediate-css-by-building-a-picasso-painting\": { \"title\": \"Вивчіть перехідний CSS, створивши картину Пікассо\", \"intro\": [ \"У цьому курсі ви дізнаєтеся, як використовувати деякі техніки перехідного CSS, кодуючи власну вебсторінку з картиною Пікассо Ви дізнаєтеся про іконки SVG, позиціювання CSS та пригадаєте інші навички CSS, яких ви навчилися\"\n        ]\n      },\n      \"learn-responsive-web-design-by-building-a-piano\": {\n        \"title\": \"Вивчіть адаптивний вебдизайн, створивши піаніно\",\n        \"intro\": [\n          \"Адаптивний дизайн каже вашій вебсторінці, як вона має виглядати на екранах різного розміру \",\n          \"У цьому курсі ви будете використовувати CSS та адаптивний дизайн, щоб створити піаніно",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 27,
    "total_chunks": 619
  },
  {
    "id": "ed60a0cf1bed7186fc6bfe035938c56c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "створивши картину Пікассо\", \"intro\": [ \"У цьому курсі ви дізнаєтеся, як використовувати деякі техніки перехідного CSS, кодуючи власну вебсторінку з картиною Пікассо Ви дізнаєтеся про іконки SVG, позиціювання CSS та пригадаєте інші навички CSS, яких ви навчилися\" ] }, \"learn-responsive-web-design-by-building-a-piano\": { \"title\": \"Вивчіть адаптивний вебдизайн, створивши піаніно\", \"intro\": [ \"Адаптивний дизайн каже вашій вебсторінці, як вона має виглядати на екранах різного розміру \", \"У цьому курсі ви будете використовувати CSS та адаптивний дизайн, щоб створити піаніноДо того ж ви більше дізнаєтесь про медіазапити та псевдоселектори \"\n        ]\n      },\n      \"learn-css-flexbox-by-building-a-photo-gallery\": {\n        \"title\": \"Вивчіть CSS Flexbox, створивши фотогалерею\",\n        \"intro\": [\n          \"Flexbox допомагає створити вебсторінку, яка матиме хороший вигляд на екрані будь-якого розміру",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 28,
    "total_chunks": 619
  },
  {
    "id": "fa7e320496e3c73a47251a4b983bb7ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "яких ви навчилися\" ] }, \"learn-responsive-web-design-by-building-a-piano\": { \"title\": \"Вивчіть адаптивний вебдизайн, створивши піаніно\", \"intro\": [ \"Адаптивний дизайн каже вашій вебсторінці, як вона має виглядати на екранах різного розміру \", \"У цьому курсі ви будете використовувати CSS та адаптивний дизайн, щоб створити піаніноДо того ж ви більше дізнаєтесь про медіазапити та псевдоселектори \" ] }, \"learn-css-flexbox-by-building-a-photo-gallery\": { \"title\": \"Вивчіть CSS Flexbox, створивши фотогалерею\", \"intro\": [ \"Flexbox допомагає створити вебсторінку, яка матиме хороший вигляд на екрані будь-якого розміру\",\n          \"У цьому курсі ви використовуватимете Flexbox для створення адаптивної вебсторінки фотогалереї \"\n        ]\n      },\n      \"learn-css-grid-by-building-a-magazine\": {\n        \"title\": \"Вивчіть CSS Grid, створивши журнал\",\n        \"intro\": [\n          \"CSS Grid дає вам можливість керувати рядками та стовпчиками своєї вебсторінки \",\n          \"У цьому курсі ви створите журнальну статтю",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 29,
    "total_chunks": 619
  },
  {
    "id": "b0166d1c056daf768105f09a16fe0141",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ж ви більше дізнаєтесь про медіазапити та псевдоселектори \" ] }, \"learn-css-flexbox-by-building-a-photo-gallery\": { \"title\": \"Вивчіть CSS Flexbox, створивши фотогалерею\", \"intro\": [ \"Flexbox допомагає створити вебсторінку, яка матиме хороший вигляд на екрані будь-якого розміру\", \"У цьому курсі ви використовуватимете Flexbox для створення адаптивної вебсторінки фотогалереї \" ] }, \"learn-css-grid-by-building-a-magazine\": { \"title\": \"Вивчіть CSS Grid, створивши журнал\", \"intro\": [ \"CSS Grid дає вам можливість керувати рядками та стовпчиками своєї вебсторінки \", \"У цьому курсі ви створите журнальну статтюВи дізнаєтеся, як використовувати CSS Grid, включно з рядками та стовпчиками сітки \"\n        ]\n      },\n      \"learn-typography-by-building-a-nutrition-label\": {\n        \"title\": \"Вивчіть типографію, створивши етикетку\",\n        \"intro\": [\n          \"Типографія — це мистецтво стилізації тексту, щоб його було легко читати та він відповідав своєму призначенню",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 30,
    "total_chunks": 619
  },
  {
    "id": "0542816cb0fc43375f361c796246f807",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "для створення адаптивної вебсторінки фотогалереї \" ] }, \"learn-css-grid-by-building-a-magazine\": { \"title\": \"Вивчіть CSS Grid, створивши журнал\", \"intro\": [ \"CSS Grid дає вам можливість керувати рядками та стовпчиками своєї вебсторінки \", \"У цьому курсі ви створите журнальну статтюВи дізнаєтеся, як використовувати CSS Grid, включно з рядками та стовпчиками сітки \" ] }, \"learn-typography-by-building-a-nutrition-label\": { \"title\": \"Вивчіть типографію, створивши етикетку\", \"intro\": [ \"Типографія — це мистецтво стилізації тексту, щоб його було легко читати та він відповідав своєму призначенню\",\n          \"У цьому курсі ви використовуватимете типографію, щоб створити вебсторінку з харчовою етикеткою Ви дізнаєтеся, як стилізувати текст, регулювати висоту рядка та позиціювати текст за допомогою CSS",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 31,
    "total_chunks": 619
  },
  {
    "id": "dbd86861becdd2e15ef89165aa01d518",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "стовпчиками своєї вебсторінки \", \"У цьому курсі ви створите журнальну статтюВи дізнаєтеся, як використовувати CSS Grid, включно з рядками та стовпчиками сітки \" ] }, \"learn-typography-by-building-a-nutrition-label\": { \"title\": \"Вивчіть типографію, створивши етикетку\", \"intro\": [ \"Типографія — це мистецтво стилізації тексту, щоб його було легко читати та він відповідав своєму призначенню\", \"У цьому курсі ви використовуватимете типографію, щоб створити вебсторінку з харчовою етикеткою Ви дізнаєтеся, як стилізувати текст, регулювати висоту рядка та позиціювати текст за допомогою CSS\"\n        ]\n      },\n      \"learn-css-transforms-by-building-a-penguin\": {\n        \"title\": \"Вивчіть трансформації CSS, створивши пінгвіна\",\n        \"intro\": [\n          \"Ви можете трансформувати елементи HTML, щоб створити привабливий дизайн, який привертає увагу читача Ви можете використовувати трансформації, щоб обертати елементи, масштабувати їх тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 32,
    "total_chunks": 619
  },
  {
    "id": "b62a7e2bef1ee1460def681796ac5bfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "— це мистецтво стилізації тексту, щоб його було легко читати та він відповідав своєму призначенню\", \"У цьому курсі ви використовуватимете типографію, щоб створити вебсторінку з харчовою етикеткою Ви дізнаєтеся, як стилізувати текст, регулювати висоту рядка та позиціювати текст за допомогою CSS\" ] }, \"learn-css-transforms-by-building-a-penguin\": { \"title\": \"Вивчіть трансформації CSS, створивши пінгвіна\", \"intro\": [ \"Ви можете трансформувати елементи HTML, щоб створити привабливий дизайн, який привертає увагу читача Ви можете використовувати трансформації, щоб обертати елементи, масштабувати їх тощо\",\n          \"У цьому курсі ви побудуєте пінгвіна Ви будете використовувати трансформації CSS, щоб позиціювати та змінювати розмір частин свого пінгвіна, створювати фон та анімувати роботу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 33,
    "total_chunks": 619
  },
  {
    "id": "2e55c9353c0ed6a3537beafe957677b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з харчовою етикеткою Ви дізнаєтеся, як стилізувати текст, регулювати висоту рядка та позиціювати текст за допомогою CSS\" ] }, \"learn-css-transforms-by-building-a-penguin\": { \"title\": \"Вивчіть трансформації CSS, створивши пінгвіна\", \"intro\": [ \"Ви можете трансформувати елементи HTML, щоб створити привабливий дизайн, який привертає увагу читача Ви можете використовувати трансформації, щоб обертати елементи, масштабувати їх тощо\", \"У цьому курсі ви побудуєте пінгвіна Ви будете використовувати трансформації CSS, щоб позиціювати та змінювати розмір частин свого пінгвіна, створювати фон та анімувати роботу\"\n        ]\n      },\n      \"learn-css-animation-by-building-a-ferris-wheel\": {\n        \"title\": \"Вивчіть анімацію CSS, створивши оглядове колесо\",\n        \"intro\": [\n          \"Ви можете використовувати анімацію CSS, щоб привернути увагу до певних розділів вебсторінки та зробити її більш привабливою \",\n          \"У цьому курсі ви побудуєте оглядове колесо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 34,
    "total_chunks": 619
  },
  {
    "id": "8dd02c31ebbc52c02058cc24943f0eaa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "який привертає увагу читача Ви можете використовувати трансформації, щоб обертати елементи, масштабувати їх тощо\", \"У цьому курсі ви побудуєте пінгвіна Ви будете використовувати трансформації CSS, щоб позиціювати та змінювати розмір частин свого пінгвіна, створювати фон та анімувати роботу\" ] }, \"learn-css-animation-by-building-a-ferris-wheel\": { \"title\": \"Вивчіть анімацію CSS, створивши оглядове колесо\", \"intro\": [ \"Ви можете використовувати анімацію CSS, щоб привернути увагу до певних розділів вебсторінки та зробити її більш привабливою \", \"У цьому курсі ви побудуєте оглядове колесоВи дізнаєтеся, як використовувати CSS для анімації елементів, трансформації та регулювання швидкості",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 35,
    "total_chunks": 619
  },
  {
    "id": "8e5afe943fc3abc8a3fa2c1398ad1670",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "масштабувати їх тощо\", \"У цьому курсі ви побудуєте пінгвіна Ви будете використовувати трансформації CSS, щоб позиціювати та змінювати розмір частин свого пінгвіна, створювати фон та анімувати роботу\" ] }, \"learn-css-animation-by-building-a-ferris-wheel\": { \"title\": \"Вивчіть анімацію CSS, створивши оглядове колесо\", \"intro\": [ \"Ви можете використовувати анімацію CSS, щоб привернути увагу до певних розділів вебсторінки та зробити її більш привабливою \", \"У цьому курсі ви побудуєте оглядове колесоВи дізнаєтеся, як використовувати CSS для анімації елементів, трансформації та регулювання швидкості\"\n        ]\n      },\n      \"learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet\": {\n        \"title\": \"Вивчіть більше про псевдоселектори CSS, створивши бухгалтерський баланс\",\n        \"intro\": [\n          \"Ви можете використовувати псевдоселектори CSS, щоб змінити певні елементи HTML",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 36,
    "total_chunks": 619
  },
  {
    "id": "37ad4facaf25cbd76a50571e54c6d094",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "анімувати роботу\" ] }, \"learn-css-animation-by-building-a-ferris-wheel\": { \"title\": \"Вивчіть анімацію CSS, створивши оглядове колесо\", \"intro\": [ \"Ви можете використовувати анімацію CSS, щоб привернути увагу до певних розділів вебсторінки та зробити її більш привабливою \", \"У цьому курсі ви побудуєте оглядове колесоВи дізнаєтеся, як використовувати CSS для анімації елементів, трансформації та регулювання швидкості\" ] }, \"learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet\": { \"title\": \"Вивчіть більше про псевдоселектори CSS, створивши бухгалтерський баланс\", \"intro\": [ \"Ви можете використовувати псевдоселектори CSS, щоб змінити певні елементи HTML\",\n          \"У цьому курсі ви побудуєте бухгалтерський баланс за допомогою псевдоселекторів Ви дізнаєтеся як змінити стиль елемента, коли ви наводите на нього курсор, та запускати інші події на своїй вебсторінці",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 37,
    "total_chunks": 619
  },
  {
    "id": "948eef7bd1df4f11b8c0fd9953f3c99a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "її більш привабливою \", \"У цьому курсі ви побудуєте оглядове колесоВи дізнаєтеся, як використовувати CSS для анімації елементів, трансформації та регулювання швидкості\" ] }, \"learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet\": { \"title\": \"Вивчіть більше про псевдоселектори CSS, створивши бухгалтерський баланс\", \"intro\": [ \"Ви можете використовувати псевдоселектори CSS, щоб змінити певні елементи HTML\", \"У цьому курсі ви побудуєте бухгалтерський баланс за допомогою псевдоселекторів Ви дізнаєтеся як змінити стиль елемента, коли ви наводите на нього курсор, та запускати інші події на своїй вебсторінці\"\n        ]\n      },\n      \"learn-css-colors-by-building-a-set-of-colored-markers\": {\n        \"title\": \"Вивчіть кольори CSS, створивши набір кольорових маркерів\",\n        \"intro\": [\n          \"Вибір правильних кольорів для вебсторінки може значно покращити естетичне вподобання читачів \",\n          \"У цьому курсі ви створите набір кольорових маркерів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 38,
    "total_chunks": 619
  },
  {
    "id": "9833f70f7a392c01a95e11201d1a3afd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "баланс\", \"intro\": [ \"Ви можете використовувати псевдоселектори CSS, щоб змінити певні елементи HTML\", \"У цьому курсі ви побудуєте бухгалтерський баланс за допомогою псевдоселекторів Ви дізнаєтеся як змінити стиль елемента, коли ви наводите на нього курсор, та запускати інші події на своїй вебсторінці\" ] }, \"learn-css-colors-by-building-a-set-of-colored-markers\": { \"title\": \"Вивчіть кольори CSS, створивши набір кольорових маркерів\", \"intro\": [ \"Вибір правильних кольорів для вебсторінки може значно покращити естетичне вподобання читачів \", \"У цьому курсі ви створите набір кольорових маркерівВи дізнаєтесь про різні способи встановлення значень кольорів та як поєднувати кольори між собою",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 39,
    "total_chunks": 619
  },
  {
    "id": "e2ee354cfab2a54f1eda6d7abf02e21a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У цьому курсі ви побудуєте бухгалтерський баланс за допомогою псевдоселекторів Ви дізнаєтеся як змінити стиль елемента, коли ви наводите на нього курсор, та запускати інші події на своїй вебсторінці\" ] }, \"learn-css-colors-by-building-a-set-of-colored-markers\": { \"title\": \"Вивчіть кольори CSS, створивши набір кольорових маркерів\", \"intro\": [ \"Вибір правильних кольорів для вебсторінки може значно покращити естетичне вподобання читачів \", \"У цьому курсі ви створите набір кольорових маркерівВи дізнаєтесь про різні способи встановлення значень кольорів та як поєднувати кольори між собою\"\n        ]\n      },\n      \"learn-intermediate-css-by-building-a-cat-painting\": {\n        \"title\": \"Вивчіть перехідний CSS, створивши малюнок кота\",\n        \"intro\": [\n          \"Позиціювання CSS важливо опанувати для того, щоб створювати візуально привабливі та адаптивні вебмакети\",\n          \"У цьому курсі ви створите малюнок кота",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 40,
    "total_chunks": 619
  },
  {
    "id": "c3764e4190479c5ef99bf8ccc5654348",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"title\": \"Вивчіть кольори CSS, створивши набір кольорових маркерів\", \"intro\": [ \"Вибір правильних кольорів для вебсторінки може значно покращити естетичне вподобання читачів \", \"У цьому курсі ви створите набір кольорових маркерівВи дізнаєтесь про різні способи встановлення значень кольорів та як поєднувати кольори між собою\" ] }, \"learn-intermediate-css-by-building-a-cat-painting\": { \"title\": \"Вивчіть перехідний CSS, створивши малюнок кота\", \"intro\": [ \"Позиціювання CSS важливо опанувати для того, щоб створювати візуально привабливі та адаптивні вебмакети\", \"У цьому курсі ви створите малюнок котаВи дізнаєтесь, як працювати з абсолютним позиціюванням, властивістю z-index та властивістю transform \"\n        ]\n      }\n    }\n  },\n  \"javascript-algorithms-and-data-structures\": {\n    \"title\": \"Алгоритми JavaScript та структури даних (застаріла версія)\",\n    \"intro\": [\n      \"Якщо HTML та CSS відповідають за вміст і стилізацію сторінки, то JavaScript робить її інтерактивною",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 41,
    "total_chunks": 619
  },
  {
    "id": "a603331253f66bdacfba683015413deb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "] }, \"learn-intermediate-css-by-building-a-cat-painting\": { \"title\": \"Вивчіть перехідний CSS, створивши малюнок кота\", \"intro\": [ \"Позиціювання CSS важливо опанувати для того, щоб створювати візуально привабливі та адаптивні вебмакети\", \"У цьому курсі ви створите малюнок котаВи дізнаєтесь, як працювати з абсолютним позиціюванням, властивістю z-index та властивістю transform \" ] } } }, \"javascript-algorithms-and-data-structures\": { \"title\": \"Алгоритми JavaScript та структури даних (застаріла версія)\", \"intro\": [ \"Якщо HTML та CSS відповідають за вміст і стилізацію сторінки, то JavaScript робить її інтерактивноюУ сертифікації «Алгоритми JavaScript та структури даних» ви вивчите основи JavaScript, включно зі змінними, масивами, об’єктами, циклами та функціями",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 42,
    "total_chunks": 619
  },
  {
    "id": "40a6c4e7bf44749a81e86168ecae7c1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "того, щоб створювати візуально привабливі та адаптивні вебмакети\", \"У цьому курсі ви створите малюнок котаВи дізнаєтесь, як працювати з абсолютним позиціюванням, властивістю z-index та властивістю transform \" ] } } }, \"javascript-algorithms-and-data-structures\": { \"title\": \"Алгоритми JavaScript та структури даних (застаріла версія)\", \"intro\": [ \"Якщо HTML та CSS відповідають за вміст і стилізацію сторінки, то JavaScript робить її інтерактивноюУ сертифікації «Алгоритми JavaScript та структури даних» ви вивчите основи JavaScript, включно зі змінними, масивами, об’єктами, циклами та функціями\",\n      \"Як тільки ви вивчите основи, ви почнете застосовувати ці знання, створюючи алгоритми, щоб уміло маніпулювати рядками, факторизувати числа, і навіть зможете обчислити орбіту міжнародної космічної станції",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 43,
    "total_chunks": 619
  },
  {
    "id": "be803731bcbf34be803dcd65ce5e1202",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\" ] } } }, \"javascript-algorithms-and-data-structures\": { \"title\": \"Алгоритми JavaScript та структури даних (застаріла версія)\", \"intro\": [ \"Якщо HTML та CSS відповідають за вміст і стилізацію сторінки, то JavaScript робить її інтерактивноюУ сертифікації «Алгоритми JavaScript та структури даних» ви вивчите основи JavaScript, включно зі змінними, масивами, об’єктами, циклами та функціями\", \"Як тільки ви вивчите основи, ви почнете застосовувати ці знання, створюючи алгоритми, щоб уміло маніпулювати рядками, факторизувати числа, і навіть зможете обчислити орбіту міжнародної космічної станції\",\n      \"Крім того, ви також вивчите два важливих стилі або парадигми в програмуванні: об’єктноорієнтоване програмування (ООП) та функційне програмування (ФП) \"\n    ],\n    \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та скриптів) можуть втручатися в тести",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 44,
    "total_chunks": 619
  },
  {
    "id": "20be8338531aa2f42a384403090bca6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та структури даних» ви вивчите основи JavaScript, включно зі змінними, масивами, об’єктами, циклами та функціями\", \"Як тільки ви вивчите основи, ви почнете застосовувати ці знання, створюючи алгоритми, щоб уміло маніпулювати рядками, факторизувати числа, і навіть зможете обчислити орбіту міжнародної космічної станції\", \"Крім того, ви також вивчите два важливих стилі або парадигми в програмуванні: об’єктноорієнтоване програмування (ООП) та функційне програмування (ФП) \" ], \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та скриптів) можуть втручатися в тестиЯкщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють або блокують вміст сторінок під час виконання курсу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 45,
    "total_chunks": 619
  },
  {
    "id": "58ee262500a7f2f233f6a9a746144a79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "основи, ви почнете застосовувати ці знання, створюючи алгоритми, щоб уміло маніпулювати рядками, факторизувати числа, і навіть зможете обчислити орбіту міжнародної космічної станції\", \"Крім того, ви також вивчите два важливих стилі або парадигми в програмуванні: об’єктноорієнтоване програмування (ООП) та функційне програмування (ФП) \" ], \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та скриптів) можуть втручатися в тестиЯкщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють або блокують вміст сторінок під час виконання курсу\",\n    \"blocks\": {\n      \"basic-javascript\": {\n        \"title\": \"Основи JavaScript\",\n        \"intro\": [\n          \"JavaScript — це скриптова мова, яка використовується для того, аби зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 46,
    "total_chunks": 619
  },
  {
    "id": "6c3e5882287b2020fbe5c685129f85d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "програмування (ФП) \" ], \"note\": \"Примітка: деякі розширення браузера (як блокувальники реклами та скриптів) можуть втручатися в тестиЯкщо ви зіткнулися з подібними проблемами, ми рекомендуємо вимкнути розширення, які змінюють або блокують вміст сторінок під час виконання курсу\", \"blocks\": { \"basic-javascript\": { \"title\": \"Основи JavaScript\", \"intro\": [ \"JavaScript — це скриптова мова, яка використовується для того, аби зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\",\n          \"У цьому курсі ви вивчите головні поняття програмування в JavaScript Ви почнете з простих структур даних, таких як числа та рядки Далі ви почнете роботу з масивами, об’єктами, функціями, циклами, умовними конструкціями тощо \"\n        ]\n      },\n      \"es6\": {\n        \"title\": \"ES6\",\n        \"intro\": [\n          \"ECMAScript, або ES — це стандартизована версія JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 47,
    "total_chunks": 619
  },
  {
    "id": "a6986f3e57173f9584613899030b9994",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "мова, яка використовується для того, аби зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\", \"У цьому курсі ви вивчите головні поняття програмування в JavaScript Ви почнете з простих структур даних, таких як числа та рядки Далі ви почнете роботу з масивами, об’єктами, функціями, циклами, умовними конструкціями тощо \" ] }, \"es6\": { \"title\": \"ES6\", \"intro\": [ \"ECMAScript, або ES — це стандартизована версія JavaScriptОскільки більшість браузерів дотримуються цих стандартів, ECMAScript та JavaScript є взаємозамінними \",\n          \"Більша частина JavaScript (про яку ви вже дізналися) була в ES5 (ECMAScript 5), який утвердили у 2009 році Поки ви все ще маєте можливість писати програми в ES5, JavaScript постійно розвивається і там щорічно вводяться нові функції \",\n          \"ES6, який випустили у 2015 році, додав багато нових потужних функцій до цієї мови",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 48,
    "total_chunks": 619
  },
  {
    "id": "f0c1d9b23e48fb8480bb09bff0aeee99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"ES6\", \"intro\": [ \"ECMAScript, або ES — це стандартизована версія JavaScriptОскільки більшість браузерів дотримуються цих стандартів, ECMAScript та JavaScript є взаємозамінними \", \"Більша частина JavaScript (про яку ви вже дізналися) була в ES5 (ECMAScript 5), який утвердили у 2009 році Поки ви все ще маєте можливість писати програми в ES5, JavaScript постійно розвивається і там щорічно вводяться нові функції \", \"ES6, який випустили у 2015 році, додав багато нових потужних функцій до цієї мовиУ курсі ви вивчите нові особливості, серед яких стрілкові функції, деструкція, класи, проміси та модулі \"\n        ]\n      },\n      \"regular-expressions\": {\n        \"title\": \"Регулярні вирази\",\n        \"intro\": [\n          \"Регулярні вирази (відомі як «regex» або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текст",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 49,
    "total_chunks": 619
  },
  {
    "id": "bb76b25ac95eb3faf92a1d75c10e4c18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "році Поки ви все ще маєте можливість писати програми в ES5, JavaScript постійно розвивається і там щорічно вводяться нові функції \", \"ES6, який випустили у 2015 році, додав багато нових потужних функцій до цієї мовиУ курсі ви вивчите нові особливості, серед яких стрілкові функції, деструкція, класи, проміси та модулі \" ] }, \"regular-expressions\": { \"title\": \"Регулярні вирази\", \"intro\": [ \"Регулярні вирази (відомі як «regex» або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текстРегулярні вирази дуже важливі, але їх важко читати, оскільки у них використовуються спеціальні символи для створення складніших, гнучкіших поєднань \",\n          \"У цьому курсі ви дізнаєтеся як використовувати спеціальні символи, групи захоплення, позитивні та негативні перевірки та інші техніки, аби текст відповідав бажаному",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 50,
    "total_chunks": 619
  },
  {
    "id": "2180564b50a4639a5047a05296c3d96d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "яких стрілкові функції, деструкція, класи, проміси та модулі \" ] }, \"regular-expressions\": { \"title\": \"Регулярні вирази\", \"intro\": [ \"Регулярні вирази (відомі як «regex» або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текстРегулярні вирази дуже важливі, але їх важко читати, оскільки у них використовуються спеціальні символи для створення складніших, гнучкіших поєднань \", \"У цьому курсі ви дізнаєтеся як використовувати спеціальні символи, групи захоплення, позитивні та негативні перевірки та інші техніки, аби текст відповідав бажаному\"\n        ]\n      },\n      \"debugging\": {\n        \"title\": \"Налагодження програм\",\n        \"intro\": [\n          \"Налагодження програм — це процес перевірки коду на наявність помилок та їх виправлення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 51,
    "total_chunks": 619
  },
  {
    "id": "e1c4ffbc6492d76adaa8018aad7edb37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "«regex» або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текстРегулярні вирази дуже важливі, але їх важко читати, оскільки у них використовуються спеціальні символи для створення складніших, гнучкіших поєднань \", \"У цьому курсі ви дізнаєтеся як використовувати спеціальні символи, групи захоплення, позитивні та негативні перевірки та інші техніки, аби текст відповідав бажаному\" ] }, \"debugging\": { \"title\": \"Налагодження програм\", \"intro\": [ \"Налагодження програм — це процес перевірки коду на наявність помилок та їх виправлення\",\n          \"Помилки в коді, як правило, розподіляють на три категорії: синтаксичні, які заважають вашій програмі працювати; помилки середовища виконання, коли ваш код поводиться непередбачувано; або логічні, коли ваш код не виконує свою функцію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 52,
    "total_chunks": 619
  },
  {
    "id": "146da354a1594cf01b8369d196b037a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У цьому курсі ви дізнаєтеся як використовувати спеціальні символи, групи захоплення, позитивні та негативні перевірки та інші техніки, аби текст відповідав бажаному\" ] }, \"debugging\": { \"title\": \"Налагодження програм\", \"intro\": [ \"Налагодження програм — це процес перевірки коду на наявність помилок та їх виправлення\", \"Помилки в коді, як правило, розподіляють на три категорії: синтаксичні, які заважають вашій програмі працювати; помилки середовища виконання, коли ваш код поводиться непередбачувано; або логічні, коли ваш код не виконує свою функцію\",\n          \"У цьому курсі ви дізнаєтеся як використовувати консоль JavaScript, аби налагодити програми та уникнути розповсюджених помилок \"\n        ]\n      },\n      \"basic-data-structures\": {\n        \"title\": \"Основи структур даних\",\n        \"intro\": [\n          \"Багатьома способами можна зберегти дані та отримати до них доступ Ви вже знаєте деякі загальні структури даних JavaScript — масиви та об’єкти",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 53,
    "total_chunks": 619
  },
  {
    "id": "ac6e10fc2f67f7035c113a4b8a516c11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розподіляють на три категорії: синтаксичні, які заважають вашій програмі працювати; помилки середовища виконання, коли ваш код поводиться непередбачувано; або логічні, коли ваш код не виконує свою функцію\", \"У цьому курсі ви дізнаєтеся як використовувати консоль JavaScript, аби налагодити програми та уникнути розповсюджених помилок \" ] }, \"basic-data-structures\": { \"title\": \"Основи структур даних\", \"intro\": [ \"Багатьома способами можна зберегти дані та отримати до них доступ Ви вже знаєте деякі загальні структури даних JavaScript — масиви та об’єкти\",\n          \"У курсі «Основи структур даних» ви дізнаєтеся більше про різницю між масивами та об’єктами, та в яких ситуаціях вони використовуються Ви також дізнаєтеся як використовувати корисні методи JS, такі як <code>splice()</code> та <code>Object keys()</code>, аби отримати доступ до даних та маніпулювати ними",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 54,
    "total_chunks": 619
  },
  {
    "id": "ca18d49948c6216de7bfe1236a98a3ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "помилок \" ] }, \"basic-data-structures\": { \"title\": \"Основи структур даних\", \"intro\": [ \"Багатьома способами можна зберегти дані та отримати до них доступ Ви вже знаєте деякі загальні структури даних JavaScript — масиви та об’єкти\", \"У курсі «Основи структур даних» ви дізнаєтеся більше про різницю між масивами та об’єктами, та в яких ситуаціях вони використовуються Ви також дізнаєтеся як використовувати корисні методи JS, такі як <code>splice()</code> та <code>Object keys()</code>, аби отримати доступ до даних та маніпулювати ними\"\n        ]\n      },\n      \"basic-algorithm-scripting\": {\n        \"title\": \"Основи написання алгоритмів\",\n        \"intro\": [\n          \"Алгоритм — це ряд покрокових інструкцій, які описують як щось робити \",\n          \"Написання успішного алгоритму допомагає розбити задачу на менші частини та гарно подумати над тим, як вирішити кожну частину за допомогою коду",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 55,
    "total_chunks": 619
  },
  {
    "id": "5659318060491aa2a0bb4c84c7c26c71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "різницю між масивами та об’єктами, та в яких ситуаціях вони використовуються Ви також дізнаєтеся як використовувати корисні методи JS, такі як <code>splice()</code> та <code>Object keys()</code>, аби отримати доступ до даних та маніпулювати ними\" ] }, \"basic-algorithm-scripting\": { \"title\": \"Основи написання алгоритмів\", \"intro\": [ \"Алгоритм — це ряд покрокових інструкцій, які описують як щось робити \", \"Написання успішного алгоритму допомагає розбити задачу на менші частини та гарно подумати над тим, як вирішити кожну частину за допомогою коду\",\n          \"У цьому курсі ви вивчите основи алгоритмічного мислення, пишучи алгоритми, які роблять усе: від перетворення температур до користування складними 2D масивами \"\n        ]\n      },\n      \"object-oriented-programming\": {\n        \"title\": \"Об’єктноорієнтоване програмування\",\n        \"intro\": [\n          \"ООП, або об’єктноорієнтоване програмування — це один з основних підходів до процесу розробки програмного забезпечення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 56,
    "total_chunks": 619
  },
  {
    "id": "cbdf0f2d1e148b839fa09a203b108339",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ряд покрокових інструкцій, які описують як щось робити \", \"Написання успішного алгоритму допомагає розбити задачу на менші частини та гарно подумати над тим, як вирішити кожну частину за допомогою коду\", \"У цьому курсі ви вивчите основи алгоритмічного мислення, пишучи алгоритми, які роблять усе: від перетворення температур до користування складними 2D масивами \" ] }, \"object-oriented-programming\": { \"title\": \"Об’єктноорієнтоване програмування\", \"intro\": [ \"ООП, або об’єктноорієнтоване програмування — це один з основних підходів до процесу розробки програмного забезпеченняОб’єкти та класи в ООП впорядковують код для опису будь-чого і того, що воно виконує \",\n          \"У цьому курсі ви вивчите основні принципи ООП в JavaScript, включно з ключовим словом <code>this</code>, прототипами ланцюгів, конструкторами та наслідуванням",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 57,
    "total_chunks": 619
  },
  {
    "id": "e711a10f45b5570f4159fc124ebb3ca1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "основи алгоритмічного мислення, пишучи алгоритми, які роблять усе: від перетворення температур до користування складними 2D масивами \" ] }, \"object-oriented-programming\": { \"title\": \"Об’єктноорієнтоване програмування\", \"intro\": [ \"ООП, або об’єктноорієнтоване програмування — це один з основних підходів до процесу розробки програмного забезпеченняОб’єкти та класи в ООП впорядковують код для опису будь-чого і того, що воно виконує \", \"У цьому курсі ви вивчите основні принципи ООП в JavaScript, включно з ключовим словом <code>this</code>, прототипами ланцюгів, конструкторами та наслідуванням\"\n        ]\n      },\n      \"functional-programming\": {\n        \"title\": \"Функційне програмування\",\n        \"intro\": [\n          \"Функційне програмування — це ще один популярний підхід до розробки програмного забезпечення У функційному програмуванні код впорядкований у менші, прості функції, які можна об’єднувати для створення складних програм",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 58,
    "total_chunks": 619
  },
  {
    "id": "33d33b75c6eac8849945faae6f7440d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "процесу розробки програмного забезпеченняОб’єкти та класи в ООП впорядковують код для опису будь-чого і того, що воно виконує \", \"У цьому курсі ви вивчите основні принципи ООП в JavaScript, включно з ключовим словом <code>this</code>, прототипами ланцюгів, конструкторами та наслідуванням\" ] }, \"functional-programming\": { \"title\": \"Функційне програмування\", \"intro\": [ \"Функційне програмування — це ще один популярний підхід до розробки програмного забезпечення У функційному програмуванні код впорядкований у менші, прості функції, які можна об’єднувати для створення складних програм\",\n          \"У цьому курсі ви вивчите основні поняття функційного програмування, включно з чистими функціями, як уникнути мутацій і як писати чистіший код за допомогою методів, таких як <code> map()</code> і <code> filter()</code>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 59,
    "total_chunks": 619
  },
  {
    "id": "2b705e2696a27573bead5a7f8ee2fb5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ключовим словом <code>this</code>, прототипами ланцюгів, конструкторами та наслідуванням\" ] }, \"functional-programming\": { \"title\": \"Функційне програмування\", \"intro\": [ \"Функційне програмування — це ще один популярний підхід до розробки програмного забезпечення У функційному програмуванні код впорядкований у менші, прості функції, які можна об’єднувати для створення складних програм\", \"У цьому курсі ви вивчите основні поняття функційного програмування, включно з чистими функціями, як уникнути мутацій і як писати чистіший код за допомогою методів, таких як <code> map()</code> і <code> filter()</code>\"\n        ]\n      },\n      \"intermediate-algorithm-scripting\": {\n        \"title\": \"Написання алгоритмів середньої складності\",\n        \"intro\": [\n          \"Тепер, коли ви знаєте основи алгоритмічного мислення, разом з ООП та функційним програмуванням, перевірте свої вміння у написанні алгоритмів середньої складності",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 60,
    "total_chunks": 619
  },
  {
    "id": "022f5dbf2681d887a971d1bb7878f1e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "код впорядкований у менші, прості функції, які можна об’єднувати для створення складних програм\", \"У цьому курсі ви вивчите основні поняття функційного програмування, включно з чистими функціями, як уникнути мутацій і як писати чистіший код за допомогою методів, таких як <code> map()</code> і <code> filter()</code>\" ] }, \"intermediate-algorithm-scripting\": { \"title\": \"Написання алгоритмів середньої складності\", \"intro\": [ \"Тепер, коли ви знаєте основи алгоритмічного мислення, разом з ООП та функційним програмуванням, перевірте свої вміння у написанні алгоритмів середньої складності\"\n        ]\n      },\n      \"javascript-algorithms-and-data-structures-projects\": {\n        \"title\": \"Проєкти «Алгоритми JavaScript та структури даних»\",\n        \"intro\": [\n          \"Тепер настав час випробувати свої навички роботи з JavaScript на практиці Ці проєкти подібні до тестів з написання алгоритмів, які ви вже робили, але складніші \",\n          \"Виконайте п’ять проєктів JavaScript, аби отримати сертифікацію «Алгоритми JavaScript та структури даних»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 61,
    "total_chunks": 619
  },
  {
    "id": "fb8de7dde0143f37e0f99d9cbf31d881",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "середньої складності\", \"intro\": [ \"Тепер, коли ви знаєте основи алгоритмічного мислення, разом з ООП та функційним програмуванням, перевірте свої вміння у написанні алгоритмів середньої складності\" ] }, \"javascript-algorithms-and-data-structures-projects\": { \"title\": \"Проєкти «Алгоритми JavaScript та структури даних»\", \"intro\": [ \"Тепер настав час випробувати свої навички роботи з JavaScript на практиці Ці проєкти подібні до тестів з написання алгоритмів, які ви вже робили, але складніші \", \"Виконайте п’ять проєктів JavaScript, аби отримати сертифікацію «Алгоритми JavaScript та структури даних»\"\n        ]\n      }\n    }\n  },\n  \"javascript-algorithms-and-data-structures-v8\": {\n    \"title\": \"Алгоритми та структури даних JavaScript\",\n    \"intro\": [\n      \"Розробники використовують HTML та CSS, щоб контролювати вміст та стилізувати сторінку, а JavaScript — щоб зробити цю сторінку інтерактивною",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 62,
    "total_chunks": 619
  },
  {
    "id": "d3e5a89c4d105eefd9643641ae142b6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та структури даних»\", \"intro\": [ \"Тепер настав час випробувати свої навички роботи з JavaScript на практиці Ці проєкти подібні до тестів з написання алгоритмів, які ви вже робили, але складніші \", \"Виконайте п’ять проєктів JavaScript, аби отримати сертифікацію «Алгоритми JavaScript та структури даних»\" ] } } }, \"javascript-algorithms-and-data-structures-v8\": { \"title\": \"Алгоритми та структури даних JavaScript\", \"intro\": [ \"Розробники використовують HTML та CSS, щоб контролювати вміст та стилізувати сторінку, а JavaScript — щоб зробити цю сторінку інтерактивною\",\n      \"У сертифікації «Алгоритми JavaScript та структури даних» ви вивчите основи JavaScript, включно зі змінними, масивами, об’єктами, циклами, функціями, об’єктною моделлю документа та багато іншого \",\n      \"Ви також вивчите об’єктноорієнтоване програмування, функціональне програмування, алгоритмічне мислення, способи роботи з локальним сховищем і отримання даних з API",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 63,
    "total_chunks": 619
  },
  {
    "id": "a8c9194be02794e92ccc4922d7f3d5a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "} } }, \"javascript-algorithms-and-data-structures-v8\": { \"title\": \"Алгоритми та структури даних JavaScript\", \"intro\": [ \"Розробники використовують HTML та CSS, щоб контролювати вміст та стилізувати сторінку, а JavaScript — щоб зробити цю сторінку інтерактивною\", \"У сертифікації «Алгоритми JavaScript та структури даних» ви вивчите основи JavaScript, включно зі змінними, масивами, об’єктами, циклами, функціями, об’єктною моделлю документа та багато іншого \", \"Ви також вивчите об’єктноорієнтоване програмування, функціональне програмування, алгоритмічне мислення, способи роботи з локальним сховищем і отримання даних з API\"\n    ],\n    \"note\": \"Примітка: деякі розширення браузера (наприклад, блокувальники реклами та скриптів) можуть втручатися в тести Якщо ви зіткнулися з подібною проблемою, ми рекомендуємо вимкнути розширення, які змінюють або блокують вміст сторінок під час виконання курсу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 64,
    "total_chunks": 619
  },
  {
    "id": "e27c0c51bb3a6c27ba11ef5655d6124e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "JavaScript та структури даних» ви вивчите основи JavaScript, включно зі змінними, масивами, об’єктами, циклами, функціями, об’єктною моделлю документа та багато іншого \", \"Ви також вивчите об’єктноорієнтоване програмування, функціональне програмування, алгоритмічне мислення, способи роботи з локальним сховищем і отримання даних з API\" ], \"note\": \"Примітка: деякі розширення браузера (наприклад, блокувальники реклами та скриптів) можуть втручатися в тести Якщо ви зіткнулися з подібною проблемою, ми рекомендуємо вимкнути розширення, які змінюють або блокують вміст сторінок під час виконання курсу\",\n    \"blocks\": {\n      \"build-an-rpg-creature-search-app-project\": {\n        \"title\": \"Проєкт «Створіть RPG-застосунок для пошуку істот»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите RPG-застосунок з пошуком істот",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 65,
    "total_chunks": 619
  },
  {
    "id": "67b7a5157fd710de8dd965f929e145d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "мислення, способи роботи з локальним сховищем і отримання даних з API\" ], \"note\": \"Примітка: деякі розширення браузера (наприклад, блокувальники реклами та скриптів) можуть втручатися в тести Якщо ви зіткнулися з подібною проблемою, ми рекомендуємо вимкнути розширення, які змінюють або блокують вміст сторінок під час виконання курсу\", \"blocks\": { \"build-an-rpg-creature-search-app-project\": { \"title\": \"Проєкт «Створіть RPG-застосунок для пошуку істот»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите RPG-застосунок з пошуком істот\"\n        ]\n      },\n      \"build-a-cash-register-project\": {\n        \"title\": \"Проєкт «Створіть касовий апарат»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите вебзастосунок касового апарату",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 66,
    "total_chunks": 619
  },
  {
    "id": "0d519b7adc8e284b851a479294dbb035",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви зіткнулися з подібною проблемою, ми рекомендуємо вимкнути розширення, які змінюють або блокують вміст сторінок під час виконання курсу\", \"blocks\": { \"build-an-rpg-creature-search-app-project\": { \"title\": \"Проєкт «Створіть RPG-застосунок для пошуку істот»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите RPG-застосунок з пошуком істот\" ] }, \"build-a-cash-register-project\": { \"title\": \"Проєкт «Створіть касовий апарат»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите вебзастосунок касового апарату\"\n        ]\n      },\n      \"build-a-palindrome-checker-project\": {\n        \"title\": \"Проєкт «Створіть перевірку паліндрома»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите застосунок, який перевіряє, чи дане слово є паліндромом",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 67,
    "total_chunks": 619
  },
  {
    "id": "6b24fc4a74770a63f82a60c49b150c49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите RPG-застосунок з пошуком істот\" ] }, \"build-a-cash-register-project\": { \"title\": \"Проєкт «Створіть касовий апарат»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите вебзастосунок касового апарату\" ] }, \"build-a-palindrome-checker-project\": { \"title\": \"Проєкт «Створіть перевірку паліндрома»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите застосунок, який перевіряє, чи дане слово є паліндромом\"\n        ]\n      },\n      \"build-a-roman-numeral-converter-project\": {\n        \"title\": \"Проєкт «Створіть конвертер римських чисел»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите застосунок, який конвертує цілі числа в римські",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 68,
    "total_chunks": 619
  },
  {
    "id": "5e75554459a0faa54f81d96081d81241",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "щоб отримати сертифікацію \", \"У цьому проєкті ви створите вебзастосунок касового апарату\" ] }, \"build-a-palindrome-checker-project\": { \"title\": \"Проєкт «Створіть перевірку паліндрома»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите застосунок, який перевіряє, чи дане слово є паліндромом\" ] }, \"build-a-roman-numeral-converter-project\": { \"title\": \"Проєкт «Створіть конвертер римських чисел»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите застосунок, який конвертує цілі числа в римські\"\n        ]\n      },\n      \"build-a-telephone-number-validator-project\": {\n        \"title\": \"Проєкт «Створіть валідатор мобільного номера»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви створите застосунок, який перевіряє, чи мобільний номер є дійсним номером США",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 69,
    "total_chunks": 619
  },
  {
    "id": "a945d64904aa5e0e7aab8690718edf17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "створите застосунок, який перевіряє, чи дане слово є паліндромом\" ] }, \"build-a-roman-numeral-converter-project\": { \"title\": \"Проєкт «Створіть конвертер римських чисел»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите застосунок, який конвертує цілі числа в римські\" ] }, \"build-a-telephone-number-validator-project\": { \"title\": \"Проєкт «Створіть валідатор мобільного номера»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите застосунок, який перевіряє, чи мобільний номер є дійсним номером США\"\n        ]\n      },\n      \"learn-basic-javascript-by-building-a-role-playing-game\": {\n        \"title\": \"Вивчіть основи JavaScript, створивши рольову гру\",\n        \"intro\": [\n          \"JavaScript — це потужна скриптова мова, яку використовують, щоб зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 70,
    "total_chunks": 619
  },
  {
    "id": "6f99acaceb3a168f943fe9fc0cec865c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"build-a-telephone-number-validator-project\": { \"title\": \"Проєкт «Створіть валідатор мобільного номера»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви створите застосунок, який перевіряє, чи мобільний номер є дійсним номером США\" ] }, \"learn-basic-javascript-by-building-a-role-playing-game\": { \"title\": \"Вивчіть основи JavaScript, створивши рольову гру\", \"intro\": [ \"JavaScript — це потужна скриптова мова, яку використовують, щоб зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\",\n          \"У цьому практичному проєкті ви вивчите основні поняття програмування на JavaScript, створивши власну рольову гру Ви навчитеся працювати з масивами, рядками, об’єктами, функціями, циклами, інструкціями <code>if/else</code> тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 71,
    "total_chunks": 619
  },
  {
    "id": "85c1cd35fd73986afae7e57169d93450",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "чи мобільний номер є дійсним номером США\" ] }, \"learn-basic-javascript-by-building-a-role-playing-game\": { \"title\": \"Вивчіть основи JavaScript, створивши рольову гру\", \"intro\": [ \"JavaScript — це потужна скриптова мова, яку використовують, щоб зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\", \"У цьому практичному проєкті ви вивчите основні поняття програмування на JavaScript, створивши власну рольову гру Ви навчитеся працювати з масивами, рядками, об’єктами, функціями, циклами, інструкціями <code>if/else</code> тощо\"\n        ]\n      },\n      \"learn-form-validation-by-building-a-calorie-counter\": {\n        \"title\": \"Вивчіть валідацію форм, створивши лічильник калорій\",\n        \"intro\": [\n          \"Іноді при створенні вебзастосунків потрібно працювати з введенням користувача",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 72,
    "total_chunks": 619
  },
  {
    "id": "c69ef63da1c48e6475c83a20fae16112",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "це потужна скриптова мова, яку використовують, щоб зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\", \"У цьому практичному проєкті ви вивчите основні поняття програмування на JavaScript, створивши власну рольову гру Ви навчитеся працювати з масивами, рядками, об’єктами, функціями, циклами, інструкціями <code>if/else</code> тощо\" ] }, \"learn-form-validation-by-building-a-calorie-counter\": { \"title\": \"Вивчіть валідацію форм, створивши лічильник калорій\", \"intro\": [ \"Іноді при створенні вебзастосунків потрібно працювати з введенням користувачаУ цьому проєкті з підрахунку калорій ви навчитеся обробляти введення користувача, виконувати обчислення на основі цього введення та динамічно оновлювати інтерфейс для відтворення результатів \",\n          \"У цьому практичному проєкті ви вивчите основні регулярні вирази, шаблонні літерали, метод <code>addEventListener()</code> та багато іншого",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 73,
    "total_chunks": 619
  },
  {
    "id": "b4c3078e0084039f7675f661bccc8b15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "рольову гру Ви навчитеся працювати з масивами, рядками, об’єктами, функціями, циклами, інструкціями <code>if/else</code> тощо\" ] }, \"learn-form-validation-by-building-a-calorie-counter\": { \"title\": \"Вивчіть валідацію форм, створивши лічильник калорій\", \"intro\": [ \"Іноді при створенні вебзастосунків потрібно працювати з введенням користувачаУ цьому проєкті з підрахунку калорій ви навчитеся обробляти введення користувача, виконувати обчислення на основі цього введення та динамічно оновлювати інтерфейс для відтворення результатів \", \"У цьому практичному проєкті ви вивчите основні регулярні вирази, шаблонні літерали, метод <code>addEventListener()</code> та багато іншого\"\n        ]\n      },\n      \"learn-functional-programming-by-building-a-spreadsheet\": {\n        \"title\": \"Вивчіть функційне програмування, створивши електронну таблицю\",\n        \"intro\": [\n          \"Функційне програмування — це популярний підхід до розробки програмного забезпечення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 74,
    "total_chunks": 619
  },
  {
    "id": "dc28866a1707a54139f3bf495268fd35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "лічильник калорій\", \"intro\": [ \"Іноді при створенні вебзастосунків потрібно працювати з введенням користувачаУ цьому проєкті з підрахунку калорій ви навчитеся обробляти введення користувача, виконувати обчислення на основі цього введення та динамічно оновлювати інтерфейс для відтворення результатів \", \"У цьому практичному проєкті ви вивчите основні регулярні вирази, шаблонні літерали, метод <code>addEventListener()</code> та багато іншого\" ] }, \"learn-functional-programming-by-building-a-spreadsheet\": { \"title\": \"Вивчіть функційне програмування, створивши електронну таблицю\", \"intro\": [ \"Функційне програмування — це популярний підхід до розробки програмного забезпеченняУ функційному програмуванні код впорядкований у менші функції, які можна об’єднати для створення складних програм",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 75,
    "total_chunks": 619
  },
  {
    "id": "7e5772c754b8925328048d711a01572d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "проєкті з підрахунку калорій ви навчитеся обробляти введення користувача, виконувати обчислення на основі цього введення та динамічно оновлювати інтерфейс для відтворення результатів \", \"У цьому практичному проєкті ви вивчите основні регулярні вирази, шаблонні літерали, метод <code>addEventListener()</code> та багато іншого\" ] }, \"learn-functional-programming-by-building-a-spreadsheet\": { \"title\": \"Вивчіть функційне програмування, створивши електронну таблицю\", \"intro\": [ \"Функційне програмування — це популярний підхід до розробки програмного забезпеченняУ функційному програмуванні код впорядкований у менші функції, які можна об’єднати для створення складних програм\",\n          \"У цьому проєкті зі створення застосунку з таблицями ви дізнаєтесь про парсинг та обчислення математичних виразів, реалізацію функцій таблиць, обробку посилань на комірки та створення інтерактивних вебінтерфейсів Ви дізнаєтесь, як динамічно оновити сторінку на основі введення користувача",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 76,
    "total_chunks": 619
  },
  {
    "id": "98ded5b9dbfa157731b9f9f23860b779",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "багато іншого\" ] }, \"learn-functional-programming-by-building-a-spreadsheet\": { \"title\": \"Вивчіть функційне програмування, створивши електронну таблицю\", \"intro\": [ \"Функційне програмування — це популярний підхід до розробки програмного забезпеченняУ функційному програмуванні код впорядкований у менші функції, які можна об’єднати для створення складних програм\", \"У цьому проєкті зі створення застосунку з таблицями ви дізнаєтесь про парсинг та обчислення математичних виразів, реалізацію функцій таблиць, обробку посилань на комірки та створення інтерактивних вебінтерфейсів Ви дізнаєтесь, як динамічно оновити сторінку на основі введення користувача\",\n          \"У цьому проєкті охоплено різні поняття, серед яких методи <code>map()</code>, <code>find()</code> й <code>includes()</code> та функція <code>parseInt()</code>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 77,
    "total_chunks": 619
  },
  {
    "id": "8acf0c2f41c1af2d995579208c19e391",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "програмування — це популярний підхід до розробки програмного забезпеченняУ функційному програмуванні код впорядкований у менші функції, які можна об’єднати для створення складних програм\", \"У цьому проєкті зі створення застосунку з таблицями ви дізнаєтесь про парсинг та обчислення математичних виразів, реалізацію функцій таблиць, обробку посилань на комірки та створення інтерактивних вебінтерфейсів Ви дізнаєтесь, як динамічно оновити сторінку на основі введення користувача\", \"У цьому проєкті охоплено різні поняття, серед яких методи <code>map()</code>, <code>find()</code> й <code>includes()</code> та функція <code>parseInt()</code>\"\n        ]\n      },\n      \"learn-modern-javascript-methods-by-building-football-team-cards\": {\n        \"title\": \"Вивчіть сучасні методи JavaScript, створивши карточки футбольних команд\",\n        \"intro\": [\n          \"Один із загальних аспектів створення вебзастосунків — обробка наборів даних та виведення інформації на екран",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 78,
    "total_chunks": 619
  },
  {
    "id": "de53bff3c80dab1f523ac9ef6e1d192a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "таблицями ви дізнаєтесь про парсинг та обчислення математичних виразів, реалізацію функцій таблиць, обробку посилань на комірки та створення інтерактивних вебінтерфейсів Ви дізнаєтесь, як динамічно оновити сторінку на основі введення користувача\", \"У цьому проєкті охоплено різні поняття, серед яких методи <code>map()</code>, <code>find()</code> й <code>includes()</code> та функція <code>parseInt()</code>\" ] }, \"learn-modern-javascript-methods-by-building-football-team-cards\": { \"title\": \"Вивчіть сучасні методи JavaScript, створивши карточки футбольних команд\", \"intro\": [ \"Один із загальних аспектів створення вебзастосунків — обробка наборів даних та виведення інформації на екранУ проєкті з картками спортивних команд ви дізнаєтесь, як працювати з маніпулюванням DOM, деструктуризацією об’єктів, обробкою подій та фільтрацією даних \",\n          \"Цей проєкт охоплює різні поняття, серед яких параметри за замовчуванням та <code>Object",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 79,
    "total_chunks": 619
  },
  {
    "id": "6cf3ed1b1314cef75657f03a2faab05c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "проєкті охоплено різні поняття, серед яких методи <code>map()</code>, <code>find()</code> й <code>includes()</code> та функція <code>parseInt()</code>\" ] }, \"learn-modern-javascript-methods-by-building-football-team-cards\": { \"title\": \"Вивчіть сучасні методи JavaScript, створивши карточки футбольних команд\", \"intro\": [ \"Один із загальних аспектів створення вебзастосунків — обробка наборів даних та виведення інформації на екранУ проєкті з картками спортивних команд ви дізнаєтесь, як працювати з маніпулюванням DOM, деструктуризацією об’єктів, обробкою подій та фільтрацією даних \", \"Цей проєкт охоплює різні поняття, серед яких параметри за замовчуванням та <code>Objectfreeze()</code>, а також допоможе закріпити ваші знання з інструкції <code>switch</code> і методу <code>map()</code>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 80,
    "total_chunks": 619
  },
  {
    "id": "1ed7d1eece8deafc4e7659e6d6dade5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "функція <code>parseInt()</code>\" ] }, \"learn-modern-javascript-methods-by-building-football-team-cards\": { \"title\": \"Вивчіть сучасні методи JavaScript, створивши карточки футбольних команд\", \"intro\": [ \"Один із загальних аспектів створення вебзастосунків — обробка наборів даних та виведення інформації на екранУ проєкті з картками спортивних команд ви дізнаєтесь, як працювати з маніпулюванням DOM, деструктуризацією об’єктів, обробкою подій та фільтрацією даних \", \"Цей проєкт охоплює різні поняття, серед яких параметри за замовчуванням та <code>Objectfreeze()</code>, а також допоможе закріпити ваші знання з інструкції <code>switch</code> і методу <code>map()</code>\"\n        ]\n      },\n      \"learn-advanced-array-methods-by-building-a-statistics-calculator\": {\n        \"title\": \"Вивчіть передові методи масиву, створивши статистичний калькулятор\",\n        \"intro\": [\n          \"Ви розвиваєте навички володіння JavaScript, а отже потрібно розібратись з методами маніпулювання масивами, серед яких <code>map()</code>, <code>reduce()</code> та <code>filter()</code>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 81,
    "total_chunks": 619
  },
  {
    "id": "049f076d74a66d6d437c179e3df81824",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з картками спортивних команд ви дізнаєтесь, як працювати з маніпулюванням DOM, деструктуризацією об’єктів, обробкою подій та фільтрацією даних \", \"Цей проєкт охоплює різні поняття, серед яких параметри за замовчуванням та <code>Objectfreeze()</code>, а також допоможе закріпити ваші знання з інструкції <code>switch</code> і методу <code>map()</code>\" ] }, \"learn-advanced-array-methods-by-building-a-statistics-calculator\": { \"title\": \"Вивчіть передові методи масиву, створивши статистичний калькулятор\", \"intro\": [ \"Ви розвиваєте навички володіння JavaScript, а отже потрібно розібратись з методами маніпулювання масивами, серед яких <code>map()</code>, <code>reduce()</code> та <code>filter()</code>\",\n          \"У цьому проєкті зі створення статистичного калькулятора ви здобудете досвід роботи з введення користувача, маніпулювання DOM та ланцюжкових методів, виконуючи статистичні обчислення середнього значення, медіани, моди, дисперсії та стандартного відхилення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 82,
    "total_chunks": 619
  },
  {
    "id": "0b734ea48e7859a86da8ade718f79767",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "<code>Objectfreeze()</code>, а також допоможе закріпити ваші знання з інструкції <code>switch</code> і методу <code>map()</code>\" ] }, \"learn-advanced-array-methods-by-building-a-statistics-calculator\": { \"title\": \"Вивчіть передові методи масиву, створивши статистичний калькулятор\", \"intro\": [ \"Ви розвиваєте навички володіння JavaScript, а отже потрібно розібратись з методами маніпулювання масивами, серед яких <code>map()</code>, <code>reduce()</code> та <code>filter()</code>\", \"У цьому проєкті зі створення статистичного калькулятора ви здобудете досвід роботи з введення користувача, маніпулювання DOM та ланцюжкових методів, виконуючи статистичні обчислення середнього значення, медіани, моди, дисперсії та стандартного відхилення\"\n        ]\n      },\n      \"learn-basic-oop-by-building-a-shopping-cart\": {\n        \"title\": \"Вивчіть основи ООП, створивши список покупок\",\n        \"intro\": [\n          \"ООП, або об’єктноорієнтоване програмування — це один з основних підходів до процесу розробки програмного забезпечення Розробники використовують об’єкти та класи, щоб впорядкувати код в ООП",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 83,
    "total_chunks": 619
  },
  {
    "id": "86151af22fd339621a8ececc7098a9e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "маніпулювання масивами, серед яких <code>map()</code>, <code>reduce()</code> та <code>filter()</code>\", \"У цьому проєкті зі створення статистичного калькулятора ви здобудете досвід роботи з введення користувача, маніпулювання DOM та ланцюжкових методів, виконуючи статистичні обчислення середнього значення, медіани, моди, дисперсії та стандартного відхилення\" ] }, \"learn-basic-oop-by-building-a-shopping-cart\": { \"title\": \"Вивчіть основи ООП, створивши список покупок\", \"intro\": [ \"ООП, або об’єктноорієнтоване програмування — це один з основних підходів до процесу розробки програмного забезпечення Розробники використовують об’єкти та класи, щоб впорядкувати код в ООП\",\n          \"У цьому проєкті зі списком покупок ви дізнаєтесь, як визначити класи та використати їх Ви створите екземпляри класу та впровадите методи для маніпуляцій даними \",\n          \"Цей проєкт охопить такі поняття, як тернарний оператор, оператор розширення, ключове слово <code>this</code> та інше",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 84,
    "total_chunks": 619
  },
  {
    "id": "a1a59295f3dc1c1fdd63e761ce7492ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"learn-basic-oop-by-building-a-shopping-cart\": { \"title\": \"Вивчіть основи ООП, створивши список покупок\", \"intro\": [ \"ООП, або об’єктноорієнтоване програмування — це один з основних підходів до процесу розробки програмного забезпечення Розробники використовують об’єкти та класи, щоб впорядкувати код в ООП\", \"У цьому проєкті зі списком покупок ви дізнаєтесь, як визначити класи та використати їх Ви створите екземпляри класу та впровадите методи для маніпуляцій даними \", \"Цей проєкт охопить такі поняття, як тернарний оператор, оператор розширення, ключове слово <code>this</code> та інше\"\n        ]\n      },\n      \"learn-fetch-and-promises-by-building-an-fcc-authors-page\": {\n        \"title\": \"Вивчіть фетч та проміси, створивши сторінку автора fCC\",\n        \"intro\": [\n          \"Один із загальних аспектів веброзробки, якого потрібно навчитись — отримувати дані від зовнішнього API, а потім працювати з асинхронним JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 85,
    "total_chunks": 619
  },
  {
    "id": "dd1dd63b81683da11fbab42a355c5517",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ООП\", \"У цьому проєкті зі списком покупок ви дізнаєтесь, як визначити класи та використати їх Ви створите екземпляри класу та впровадите методи для маніпуляцій даними \", \"Цей проєкт охопить такі поняття, як тернарний оператор, оператор розширення, ключове слово <code>this</code> та інше\" ] }, \"learn-fetch-and-promises-by-building-an-fcc-authors-page\": { \"title\": \"Вивчіть фетч та проміси, створивши сторінку автора fCC\", \"intro\": [ \"Один із загальних аспектів веброзробки, якого потрібно навчитись — отримувати дані від зовнішнього API, а потім працювати з асинхронним JavaScript\",\n          \"Цей проєкт зі сторінкою авторів freeCodeCamp покаже, як використовувати метод fetch, а потім оновити DOM, щоб відтворити отримані дані \",\n          \"Цей проєкт також навчить, як робити навігацію даних, щоб ви могли завантажувати результати партіями",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 86,
    "total_chunks": 619
  },
  {
    "id": "eac926610d9213a1ea05c0ede6d54a89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "оператор розширення, ключове слово <code>this</code> та інше\" ] }, \"learn-fetch-and-promises-by-building-an-fcc-authors-page\": { \"title\": \"Вивчіть фетч та проміси, створивши сторінку автора fCC\", \"intro\": [ \"Один із загальних аспектів веброзробки, якого потрібно навчитись — отримувати дані від зовнішнього API, а потім працювати з асинхронним JavaScript\", \"Цей проєкт зі сторінкою авторів freeCodeCamp покаже, як використовувати метод fetch, а потім оновити DOM, щоб відтворити отримані дані \", \"Цей проєкт також навчить, як робити навігацію даних, щоб ви могли завантажувати результати партіями\"\n        ]\n      },\n      \"learn-regular-expressions-by-building-a-spam-filter\": {\n        \"title\": \"Вивчіть регулярні вирази, створивши спам-фільтр\",\n        \"intro\": [\n          \"Регулярні вирази (відомі як «regex» або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текст Регулярні вирази надзвичайно потужні, але їх важко зрозуміти, оскільки у них використовуються спеціальні символи",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 87,
    "total_chunks": 619
  },
  {
    "id": "c4210135e27dd8495d95793aed827ad7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "проєкт зі сторінкою авторів freeCodeCamp покаже, як використовувати метод fetch, а потім оновити DOM, щоб відтворити отримані дані \", \"Цей проєкт також навчить, як робити навігацію даних, щоб ви могли завантажувати результати партіями\" ] }, \"learn-regular-expressions-by-building-a-spam-filter\": { \"title\": \"Вивчіть регулярні вирази, створивши спам-фільтр\", \"intro\": [ \"Регулярні вирази (відомі як «regex» або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текст Регулярні вирази надзвичайно потужні, але їх важко зрозуміти, оскільки у них використовуються спеціальні символи\",\n          \"У цьому проєкті з фільтрування спаму ви дізнаєтеся про групи захоплення, позитивні та негативні перевірки, а також інші техніки, щоб текст відповідав бажаному",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 88,
    "total_chunks": 619
  },
  {
    "id": "0b8933434f151140cd48f12284aa369a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "як робити навігацію даних, щоб ви могли завантажувати результати партіями\" ] }, \"learn-regular-expressions-by-building-a-spam-filter\": { \"title\": \"Вивчіть регулярні вирази, створивши спам-фільтр\", \"intro\": [ \"Регулярні вирази (відомі як «regex» або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текст Регулярні вирази надзвичайно потужні, але їх важко зрозуміти, оскільки у них використовуються спеціальні символи\", \"У цьому проєкті з фільтрування спаму ви дізнаєтеся про групи захоплення, позитивні та негативні перевірки, а також інші техніки, щоб текст відповідав бажаному\"\n        ]\n      },\n      \"learn-basic-algorithmic-thinking-by-building-a-number-sorter\": {\n        \"title\": \"Вивчіть базове алгоритмічне мислення, створивши сортувальник чисел\",\n        \"intro\": [\n          \"У галузі комп’ютерних наук існують основні алгоритми сортування, які всі розробники повинні вивчити",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 89,
    "total_chunks": 619
  },
  {
    "id": "783db47f8ea9325f48036da6e7ceacca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "або «regexp») — шаблони, які допомагають програмістам поєднувати, шукати та замінювати текст Регулярні вирази надзвичайно потужні, але їх важко зрозуміти, оскільки у них використовуються спеціальні символи\", \"У цьому проєкті з фільтрування спаму ви дізнаєтеся про групи захоплення, позитивні та негативні перевірки, а також інші техніки, щоб текст відповідав бажаному\" ] }, \"learn-basic-algorithmic-thinking-by-building-a-number-sorter\": { \"title\": \"Вивчіть базове алгоритмічне мислення, створивши сортувальник чисел\", \"intro\": [ \"У галузі комп’ютерних наук існують основні алгоритми сортування, які всі розробники повинні вивчитиУ цьому проєкті з сортування чисел ви навчитеся реалізовувати та візуалізувати різні алгоритми сортування, серед яких сортування бульбашкою, сортування вибором та сортування вставками з використанням JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 90,
    "total_chunks": 619
  },
  {
    "id": "fdd28ba1934613c89d565a8dd38e5c41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "символи\", \"У цьому проєкті з фільтрування спаму ви дізнаєтеся про групи захоплення, позитивні та негативні перевірки, а також інші техніки, щоб текст відповідав бажаному\" ] }, \"learn-basic-algorithmic-thinking-by-building-a-number-sorter\": { \"title\": \"Вивчіть базове алгоритмічне мислення, створивши сортувальник чисел\", \"intro\": [ \"У галузі комп’ютерних наук існують основні алгоритми сортування, які всі розробники повинні вивчитиУ цьому проєкті з сортування чисел ви навчитеся реалізовувати та візуалізувати різні алгоритми сортування, серед яких сортування бульбашкою, сортування вибором та сортування вставками з використанням JavaScript\",\n          \"Цей проєкт допоможе зрозуміти основні поняття за цими алгоритмами та як їх можна застосувати для сортування числових даних у вебзастосунках",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 91,
    "total_chunks": 619
  },
  {
    "id": "0f2449acf160913b3b1e045707aa7184",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "щоб текст відповідав бажаному\" ] }, \"learn-basic-algorithmic-thinking-by-building-a-number-sorter\": { \"title\": \"Вивчіть базове алгоритмічне мислення, створивши сортувальник чисел\", \"intro\": [ \"У галузі комп’ютерних наук існують основні алгоритми сортування, які всі розробники повинні вивчитиУ цьому проєкті з сортування чисел ви навчитеся реалізовувати та візуалізувати різні алгоритми сортування, серед яких сортування бульбашкою, сортування вибором та сортування вставками з використанням JavaScript\", \"Цей проєкт допоможе зрозуміти основні поняття за цими алгоритмами та як їх можна застосувати для сортування числових даних у вебзастосунках\"\n        ]\n      },\n      \"review-algorithmic-thinking-by-building-a-dice-game\": {\n        \"title\": \"Повторіть алгоритмічне мислення, створивши гру з кубиками\",\n        \"intro\": [\n          \"Алгоритмічне мислення передбачає здатність розбивати складні завдання на чітко визначені кроки",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 92,
    "total_chunks": 619
  },
  {
    "id": "947dd54bf4fa58006a17c5eaaae25b86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "сортування, які всі розробники повинні вивчитиУ цьому проєкті з сортування чисел ви навчитеся реалізовувати та візуалізувати різні алгоритми сортування, серед яких сортування бульбашкою, сортування вибором та сортування вставками з використанням JavaScript\", \"Цей проєкт допоможе зрозуміти основні поняття за цими алгоритмами та як їх можна застосувати для сортування числових даних у вебзастосунках\" ] }, \"review-algorithmic-thinking-by-building-a-dice-game\": { \"title\": \"Повторіть алгоритмічне мислення, створивши гру з кубиками\", \"intro\": [ \"Алгоритмічне мислення передбачає здатність розбивати складні завдання на чітко визначені кроки\",\n          \"У проєкті зі створення гри з кубиками ви дізнаєтесь, як керувати станом гри та реалізуєте логіку гри, щоб викидати кубики, зберігати бали й застосовувати правила для різних комбінацій",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 93,
    "total_chunks": 619
  },
  {
    "id": "922b84a72f9393fc27cfb5d1366336a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з використанням JavaScript\", \"Цей проєкт допоможе зрозуміти основні поняття за цими алгоритмами та як їх можна застосувати для сортування числових даних у вебзастосунках\" ] }, \"review-algorithmic-thinking-by-building-a-dice-game\": { \"title\": \"Повторіть алгоритмічне мислення, створивши гру з кубиками\", \"intro\": [ \"Алгоритмічне мислення передбачає здатність розбивати складні завдання на чітко визначені кроки\", \"У проєкті зі створення гри з кубиками ви дізнаєтесь, як керувати станом гри та реалізуєте логіку гри, щоб викидати кубики, зберігати бали й застосовувати правила для різних комбінацій\",\n          \"Цей проєкт охоплює обробку подій, маніпулювання масивами, умовну логіку та динамічне оновлення інтерфейсу користувача на основі стану гри",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 94,
    "total_chunks": 619
  },
  {
    "id": "0b9bf1f83730ac7730022c9d82aceaf0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "сортування числових даних у вебзастосунках\" ] }, \"review-algorithmic-thinking-by-building-a-dice-game\": { \"title\": \"Повторіть алгоритмічне мислення, створивши гру з кубиками\", \"intro\": [ \"Алгоритмічне мислення передбачає здатність розбивати складні завдання на чітко визначені кроки\", \"У проєкті зі створення гри з кубиками ви дізнаєтесь, як керувати станом гри та реалізуєте логіку гри, щоб викидати кубики, зберігати бали й застосовувати правила для різних комбінацій\", \"Цей проєкт охоплює обробку подій, маніпулювання масивами, умовну логіку та динамічне оновлення інтерфейсу користувача на основі стану гри\"\n        ]\n      },\n      \"learn-intermediate-oop-by-building-a-platformer-game\": {\n        \"title\": \"Вивчіть проміжне ООП, створивши платформну гру\",\n        \"intro\": [\n          \"Створення ігор — чудовий спосіб засвоїти основні принципи програмування, ще й під час здобуття інтерактивного ігрового досвіду",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 95,
    "total_chunks": 619
  },
  {
    "id": "6acf78f978dcc5f7d9eb8e7def7a27b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У проєкті зі створення гри з кубиками ви дізнаєтесь, як керувати станом гри та реалізуєте логіку гри, щоб викидати кубики, зберігати бали й застосовувати правила для різних комбінацій\", \"Цей проєкт охоплює обробку подій, маніпулювання масивами, умовну логіку та динамічне оновлення інтерфейсу користувача на основі стану гри\" ] }, \"learn-intermediate-oop-by-building-a-platformer-game\": { \"title\": \"Вивчіть проміжне ООП, створивши платформну гру\", \"intro\": [ \"Створення ігор — чудовий спосіб засвоїти основні принципи програмування, ще й під час здобуття інтерактивного ігрового досвіду\",\n          \"У проєкті зі створення платформної гри ви продовжите вивчати класи, об’єкти, успадкування та інкапсуляцію Ви також навчитеся ефективно проєктувати та організовувати елементи гри, отримаєте уявлення про розв’язання проблем та можливість повторного використання коду",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 96,
    "total_chunks": 619
  },
  {
    "id": "8d277c3185638c77c100fab070511a8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "маніпулювання масивами, умовну логіку та динамічне оновлення інтерфейсу користувача на основі стану гри\" ] }, \"learn-intermediate-oop-by-building-a-platformer-game\": { \"title\": \"Вивчіть проміжне ООП, створивши платформну гру\", \"intro\": [ \"Створення ігор — чудовий спосіб засвоїти основні принципи програмування, ще й під час здобуття інтерактивного ігрового досвіду\", \"У проєкті зі створення платформної гри ви продовжите вивчати класи, об’єкти, успадкування та інкапсуляцію Ви також навчитеся ефективно проєктувати та організовувати елементи гри, отримаєте уявлення про розв’язання проблем та можливість повторного використання коду\"\n        ]\n      },\n      \"learn-localstorage-by-building-a-todo-app\": {\n        \"title\": \"Вивчіть localStorage, створивши застосунок зі списком справ\",\n        \"intro\": [\n          \"Локальне сховище — це функція вебпереглядача, яка дозволяє вебзастосункам зберігати пари ключ-значення в браузері користувача",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 97,
    "total_chunks": 619
  },
  {
    "id": "1a0cc64085f6ff554043415223832018",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "чудовий спосіб засвоїти основні принципи програмування, ще й під час здобуття інтерактивного ігрового досвіду\", \"У проєкті зі створення платформної гри ви продовжите вивчати класи, об’єкти, успадкування та інкапсуляцію Ви також навчитеся ефективно проєктувати та організовувати елементи гри, отримаєте уявлення про розв’язання проблем та можливість повторного використання коду\" ] }, \"learn-localstorage-by-building-a-todo-app\": { \"title\": \"Вивчіть localStorage, створивши застосунок зі списком справ\", \"intro\": [ \"Локальне сховище — це функція вебпереглядача, яка дозволяє вебзастосункам зберігати пари ключ-значення в браузері користувачаВоно також дозволяє зберігати дані протягом одного сеансу та використовувати їх в наступному",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 98,
    "total_chunks": 619
  },
  {
    "id": "81d34f2f8755526815fe5fa8b968b8c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ігрового досвіду\", \"У проєкті зі створення платформної гри ви продовжите вивчати класи, об’єкти, успадкування та інкапсуляцію Ви також навчитеся ефективно проєктувати та організовувати елементи гри, отримаєте уявлення про розв’язання проблем та можливість повторного використання коду\" ] }, \"learn-localstorage-by-building-a-todo-app\": { \"title\": \"Вивчіть localStorage, створивши застосунок зі списком справ\", \"intro\": [ \"Локальне сховище — це функція вебпереглядача, яка дозволяє вебзастосункам зберігати пари ключ-значення в браузері користувачаВоно також дозволяє зберігати дані протягом одного сеансу та використовувати їх в наступному\",\n          \"У цьому застосунку для списку справ ви навчитеся обробляти введення форми, управляти локальним сховищем, виконувати операції CRUD (створення, читання, оновлення, видалення) на завданнях, реалізовувати слухачів подій та перемикати елементи інтерфейсу користувача",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 99,
    "total_chunks": 619
  },
  {
    "id": "04b933c5b80c3df878b0e7bb60362bc2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "можливість повторного використання коду\" ] }, \"learn-localstorage-by-building-a-todo-app\": { \"title\": \"Вивчіть localStorage, створивши застосунок зі списком справ\", \"intro\": [ \"Локальне сховище — це функція вебпереглядача, яка дозволяє вебзастосункам зберігати пари ключ-значення в браузері користувачаВоно також дозволяє зберігати дані протягом одного сеансу та використовувати їх в наступному\", \"У цьому застосунку для списку справ ви навчитеся обробляти введення форми, управляти локальним сховищем, виконувати операції CRUD (створення, читання, оновлення, видалення) на завданнях, реалізовувати слухачів подій та перемикати елементи інтерфейсу користувача\"\n        ]\n      },\n      \"learn-the-date-object-by-building-a-date-formatter\": {\n        \"title\": \"Вивчіть об’єкт Date, створивши форматувальник дат\",\n        \"intro\": [\n          \"При роботі з датами в JavaScript ви можете зіткнутися з викликами, оскільки доведеться орієнтуватися у різних методах, форматах і часових поясах",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 100,
    "total_chunks": 619
  },
  {
    "id": "a34b9a9e8d00bd59883fa3f21cc2c0e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "дозволяє зберігати дані протягом одного сеансу та використовувати їх в наступному\", \"У цьому застосунку для списку справ ви навчитеся обробляти введення форми, управляти локальним сховищем, виконувати операції CRUD (створення, читання, оновлення, видалення) на завданнях, реалізовувати слухачів подій та перемикати елементи інтерфейсу користувача\" ] }, \"learn-the-date-object-by-building-a-date-formatter\": { \"title\": \"Вивчіть об’єкт Date, створивши форматувальник дат\", \"intro\": [ \"При роботі з датами в JavaScript ви можете зіткнутися з викликами, оскільки доведеться орієнтуватися у різних методах, форматах і часових поясахУ цьому проєкті ви дізнаєтесь, як працювати з об’єктом Date в JavaScript, включно з його методами та властивостями, а також навчитеся форматувати дати \",\n          \"Цей проєкт охоплює такі поняття, як методи <code>getDate()</code>, <code>getMonth()</code> та <code>getFullYear()</code>",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 101,
    "total_chunks": 619
  },
  {
    "id": "e37e3a8696d84a8ed8a42e60b1ee04a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "реалізовувати слухачів подій та перемикати елементи інтерфейсу користувача\" ] }, \"learn-the-date-object-by-building-a-date-formatter\": { \"title\": \"Вивчіть об’єкт Date, створивши форматувальник дат\", \"intro\": [ \"При роботі з датами в JavaScript ви можете зіткнутися з викликами, оскільки доведеться орієнтуватися у різних методах, форматах і часових поясахУ цьому проєкті ви дізнаєтесь, як працювати з об’єктом Date в JavaScript, включно з його методами та властивостями, а також навчитеся форматувати дати \", \"Цей проєкт охоплює такі поняття, як методи <code>getDate()</code>, <code>getMonth()</code> та <code>getFullYear()</code>\"\n        ]\n      },\n      \"learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard\": {\n        \"title\": \"Вивчіть асинхронне програмування, створивши таблицю лідерів форуму fCC\",\n        \"intro\": [\n          \"JavaScript — це асинхронна мова програмування Цей проєкт допоможе розібратись з асинхронними поняттями Ви створите власну таблицю лідерів форуму freeCodeCamp \",\n          \"Цей проєкт охопить Fetch API, проміси, Async/Await та інструкцію try catch",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 102,
    "total_chunks": 619
  },
  {
    "id": "fb28923a2fdb9c6e665ce2c1a5e61b08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "працювати з об’єктом Date в JavaScript, включно з його методами та властивостями, а також навчитеся форматувати дати \", \"Цей проєкт охоплює такі поняття, як методи <code>getDate()</code>, <code>getMonth()</code> та <code>getFullYear()</code>\" ] }, \"learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard\": { \"title\": \"Вивчіть асинхронне програмування, створивши таблицю лідерів форуму fCC\", \"intro\": [ \"JavaScript — це асинхронна мова програмування Цей проєкт допоможе розібратись з асинхронними поняттями Ви створите власну таблицю лідерів форуму freeCodeCamp \", \"Цей проєкт охопить Fetch API, проміси, Async/Await та інструкцію try catch\"\n        ]\n      },\n      \"learn-basic-string-and-array-methods-by-building-a-music-player\": {\n        \"title\": \"Вивчіть базові методи рядка та масиву, створивши музичний програвач\",\n        \"intro\": [\n          \"Тепер вивчимо основні методи рядка та масиву, серед яких <code>find()</code>, <code>forEach()</code>, <code>map()</code> та <code>join()</code> Ці методи відіграють важливу роль для розробки динамічних вебзастосунків \",\n          \"У цьому проєкті ви створите MP3-плеєр за допомогою HTML, CSS та JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 103,
    "total_chunks": 619
  },
  {
    "id": "225ace756ad647734c6969aa3a7ef8a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "допоможе розібратись з асинхронними поняттями Ви створите власну таблицю лідерів форуму freeCodeCamp \", \"Цей проєкт охопить Fetch API, проміси, Async/Await та інструкцію try catch\" ] }, \"learn-basic-string-and-array-methods-by-building-a-music-player\": { \"title\": \"Вивчіть базові методи рядка та масиву, створивши музичний програвач\", \"intro\": [ \"Тепер вивчимо основні методи рядка та масиву, серед яких <code>find()</code>, <code>forEach()</code>, <code>map()</code> та <code>join()</code> Ці методи відіграють важливу роль для розробки динамічних вебзастосунків \", \"У цьому проєкті ви створите MP3-плеєр за допомогою HTML, CSS та JavaScriptЦей проєкт охоплює ключові поняття, серед яких обробка відтворення аудіо, управління плейлистом, реалізація функцій програвання, паузи, наступної пісні та перемішування Ви навіть дізнаєтесь, як динамічно оновити інтерфейс користувача на основі поточної пісні",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 104,
    "total_chunks": 619
  },
  {
    "id": "65addbef8cce2efe135b0667a83aab57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "методи рядка та масиву, створивши музичний програвач\", \"intro\": [ \"Тепер вивчимо основні методи рядка та масиву, серед яких <code>find()</code>, <code>forEach()</code>, <code>map()</code> та <code>join()</code> Ці методи відіграють важливу роль для розробки динамічних вебзастосунків \", \"У цьому проєкті ви створите MP3-плеєр за допомогою HTML, CSS та JavaScriptЦей проєкт охоплює ключові поняття, серед яких обробка відтворення аудіо, управління плейлистом, реалізація функцій програвання, паузи, наступної пісні та перемішування Ви навіть дізнаєтесь, як динамічно оновити інтерфейс користувача на основі поточної пісні\"\n        ]\n      },\n      \"learn-recursion-by-building-a-decimal-to-binary-converter\": {\n        \"title\": \"Вивчіть рекурсію, створивши конвертер десяткових чисел в бінарні\",\n        \"intro\": [\n          \"Рекурсія — це таке поняття в програмуванні, коли функція викликає сама себе Це може перетворити складне завдання на декілька менших простіших завдань, допоки вони не стануть зрозумілими",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 105,
    "total_chunks": 619
  },
  {
    "id": "9ace7d3e04a37cc7bed7db850d4db6ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "CSS та JavaScriptЦей проєкт охоплює ключові поняття, серед яких обробка відтворення аудіо, управління плейлистом, реалізація функцій програвання, паузи, наступної пісні та перемішування Ви навіть дізнаєтесь, як динамічно оновити інтерфейс користувача на основі поточної пісні\" ] }, \"learn-recursion-by-building-a-decimal-to-binary-converter\": { \"title\": \"Вивчіть рекурсію, створивши конвертер десяткових чисел в бінарні\", \"intro\": [ \"Рекурсія — це таке поняття в програмуванні, коли функція викликає сама себе Це може перетворити складне завдання на декілька менших простіших завдань, допоки вони не стануть зрозумілими\",\n          \"У цьому проєкті ви побудуєте конвертер десяткових чисел в бінарні за допомогою JavaScript Ви вивчите основні поняття рекурсії, дослідите стек викликів та побудуєте візуальне представлення процесу рекурсії через анімацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 106,
    "total_chunks": 619
  },
  {
    "id": "a3f31f3009b871362994116206a0f1e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "користувача на основі поточної пісні\" ] }, \"learn-recursion-by-building-a-decimal-to-binary-converter\": { \"title\": \"Вивчіть рекурсію, створивши конвертер десяткових чисел в бінарні\", \"intro\": [ \"Рекурсія — це таке поняття в програмуванні, коли функція викликає сама себе Це може перетворити складне завдання на декілька менших простіших завдань, допоки вони не стануть зрозумілими\", \"У цьому проєкті ви побудуєте конвертер десяткових чисел в бінарні за допомогою JavaScript Ви вивчите основні поняття рекурсії, дослідите стек викликів та побудуєте візуальне представлення процесу рекурсії через анімацію\"\n        ]\n      },\n      \"learn-introductory-javascript-by-building-a-pyramid-generator\": {\n        \"title\": \"Вивчіть основи JavaScript, створивши генератор пірамід\",\n        \"intro\": [\n          \"JavaScript — це потужна скриптова мова, яку використовують, щоб зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 107,
    "total_chunks": 619
  },
  {
    "id": "621b12c358ca9d4f116326318826e224",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "допоки вони не стануть зрозумілими\", \"У цьому проєкті ви побудуєте конвертер десяткових чисел в бінарні за допомогою JavaScript Ви вивчите основні поняття рекурсії, дослідите стек викликів та побудуєте візуальне представлення процесу рекурсії через анімацію\" ] }, \"learn-introductory-javascript-by-building-a-pyramid-generator\": { \"title\": \"Вивчіть основи JavaScript, створивши генератор пірамід\", \"intro\": [ \"JavaScript — це потужна скриптова мова, яку використовують, щоб зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\",\n          \"У цьому практичному проєкті ви вивчите основні поняття програмування на JavaScript, створивши власний генератор пірамід Ви навчитеся працювати з масивами, рядками, функціями, циклами, інструкціями <code>if/else</code> тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 108,
    "total_chunks": 619
  },
  {
    "id": "4660cb74add55fb6dd53ddbc95242a9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та побудуєте візуальне представлення процесу рекурсії через анімацію\" ] }, \"learn-introductory-javascript-by-building-a-pyramid-generator\": { \"title\": \"Вивчіть основи JavaScript, створивши генератор пірамід\", \"intro\": [ \"JavaScript — це потужна скриптова мова, яку використовують, щоб зробити вебсайти інтерактивними Це одна з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\", \"У цьому практичному проєкті ви вивчите основні поняття програмування на JavaScript, створивши власний генератор пірамід Ви навчитеся працювати з масивами, рядками, функціями, циклами, інструкціями <code>if/else</code> тощо\"\n        ]\n      },\n      \"review-js-fundamentals-by-building-a-gradebook-app\": {\n        \"title\": \"Повторіть основи JavaScript, створивши журнал з оцінками\",\n        \"intro\": [\n          \"У цьому мініпроєкті ви зможете повторити основи JavaScript, серед яких функції, змінні, інструкції та багато іншого, створивши застосунок з журналом оцінювання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 109,
    "total_chunks": 619
  },
  {
    "id": "92e1f146e75c2d80bc982270b19e3e21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з основних технологій в мережі (разом з HTML та CSS), яка підтримується всіма сучасними браузерами\", \"У цьому практичному проєкті ви вивчите основні поняття програмування на JavaScript, створивши власний генератор пірамід Ви навчитеся працювати з масивами, рядками, функціями, циклами, інструкціями <code>if/else</code> тощо\" ] }, \"review-js-fundamentals-by-building-a-gradebook-app\": { \"title\": \"Повторіть основи JavaScript, створивши журнал з оцінками\", \"intro\": [ \"У цьому мініпроєкті ви зможете повторити основи JavaScript, серед яких функції, змінні, інструкції та багато іншого, створивши застосунок з журналом оцінювання\",\n          \"Це дозволить розв’язувати невеликі проблеми та краще розуміти базові поняття \"\n        ]\n      },\n      \"learn-basic-debugging-by-building-a-random-background-color-changer\": {\n        \"title\": \"Вивчіть базове налагодження, створивши перемикач фонового кольору\",\n        \"intro\": [\n          \"Налагодження програм — це процес перевірки коду на наявність помилок та їх виправлення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 110,
    "total_chunks": 619
  },
  {
    "id": "1c996421958d15a49c4e43d2fc8ac5df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "інструкціями <code>if/else</code> тощо\" ] }, \"review-js-fundamentals-by-building-a-gradebook-app\": { \"title\": \"Повторіть основи JavaScript, створивши журнал з оцінками\", \"intro\": [ \"У цьому мініпроєкті ви зможете повторити основи JavaScript, серед яких функції, змінні, інструкції та багато іншого, створивши застосунок з журналом оцінювання\", \"Це дозволить розв’язувати невеликі проблеми та краще розуміти базові поняття \" ] }, \"learn-basic-debugging-by-building-a-random-background-color-changer\": { \"title\": \"Вивчіть базове налагодження, створивши перемикач фонового кольору\", \"intro\": [ \"Налагодження програм — це процес перевірки коду на наявність помилок та їх виправлення\",\n          \"У цьому проєкті ви допоможете CamperBot побудувати перемикач фонового кольору, а також допоможете йому знаходити та налагоджувати помилки",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 111,
    "total_chunks": 619
  },
  {
    "id": "9bb9066bb789486063d4ccbc8c133de8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цьому мініпроєкті ви зможете повторити основи JavaScript, серед яких функції, змінні, інструкції та багато іншого, створивши застосунок з журналом оцінювання\", \"Це дозволить розв’язувати невеликі проблеми та краще розуміти базові поняття \" ] }, \"learn-basic-debugging-by-building-a-random-background-color-changer\": { \"title\": \"Вивчіть базове налагодження, створивши перемикач фонового кольору\", \"intro\": [ \"Налагодження програм — це процес перевірки коду на наявність помилок та їх виправлення\", \"У цьому проєкті ви допоможете CamperBot побудувати перемикач фонового кольору, а також допоможете йому знаходити та налагоджувати помилки\"\n        ]\n      },\n      \"review-dom-manipulation-by-building-a-rock-paper-scissors-game\": {\n        \"title\": \"Повторіть маніпуляцію DOM, створивши гру «Камінь, ножиці, папір»\",\n        \"intro\": [\n          \"У попередніх проєктах ви навчились працювати з базовою маніпуляцією DOM Тепер настав час це все повторити, створивши гру «Камінь, ножиці, папір»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 112,
    "total_chunks": 619
  },
  {
    "id": "409f56bd6233c79113a0983984ece5ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Вивчіть базове налагодження, створивши перемикач фонового кольору\", \"intro\": [ \"Налагодження програм — це процес перевірки коду на наявність помилок та їх виправлення\", \"У цьому проєкті ви допоможете CamperBot побудувати перемикач фонового кольору, а також допоможете йому знаходити та налагоджувати помилки\" ] }, \"review-dom-manipulation-by-building-a-rock-paper-scissors-game\": { \"title\": \"Повторіть маніпуляцію DOM, створивши гру «Камінь, ножиці, папір»\", \"intro\": [ \"У попередніх проєктах ви навчились працювати з базовою маніпуляцією DOM Тепер настав час це все повторити, створивши гру «Камінь, ножиці, папір»\",\n          \"У цьому мініпроєкті ви пригадаєте інструкції, функції, <code>getElementById</code> та багато іншого Це дозволить розв’язувати невеликі проблеми та краще розуміти базові поняття",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 113,
    "total_chunks": 619
  },
  {
    "id": "e7e0d51969aca56642b04feec1333be6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "виправлення\", \"У цьому проєкті ви допоможете CamperBot побудувати перемикач фонового кольору, а також допоможете йому знаходити та налагоджувати помилки\" ] }, \"review-dom-manipulation-by-building-a-rock-paper-scissors-game\": { \"title\": \"Повторіть маніпуляцію DOM, створивши гру «Камінь, ножиці, папір»\", \"intro\": [ \"У попередніх проєктах ви навчились працювати з базовою маніпуляцією DOM Тепер настав час це все повторити, створивши гру «Камінь, ножиці, папір»\", \"У цьому мініпроєкті ви пригадаєте інструкції, функції, <code>getElementById</code> та багато іншого Це дозволить розв’язувати невеликі проблеми та краще розуміти базові поняття\"\n        ]\n      }\n    }\n  },\n  \"front-end-development-libraries\": {\n    \"title\": \"Бібліотеки Front End\",\n    \"intro\": [\n      \"Тепер, коли ви вже знайомі з HTML, CSS та JavaScript, піднімімо ваш рівень навичок, вивчаючи декілька найбільш популярних бібліотек верстки в галузі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 114,
    "total_chunks": 619
  },
  {
    "id": "93684384387f90b372b9d8de01462354",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У попередніх проєктах ви навчились працювати з базовою маніпуляцією DOM Тепер настав час це все повторити, створивши гру «Камінь, ножиці, папір»\", \"У цьому мініпроєкті ви пригадаєте інструкції, функції, <code>getElementById</code> та багато іншого Це дозволить розв’язувати невеликі проблеми та краще розуміти базові поняття\" ] } } }, \"front-end-development-libraries\": { \"title\": \"Бібліотеки Front End\", \"intro\": [ \"Тепер, коли ви вже знайомі з HTML, CSS та JavaScript, піднімімо ваш рівень навичок, вивчаючи декілька найбільш популярних бібліотек верстки в галузі\",\n      \"У сертифікації «Бібліотеки Front End» ви навчитеся швидко стилізувати свій сайт за допомогою Bootstrap Також ви навчитеся покращувати свої стилі CSS та розширювати їх за допомогою Sass \",\n      \"Згодом ви розробите кошик для покупок та інші застосунки, щоб навчитися створювати потужні односторінкові застосунки (SPAs) з React та Redux",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 115,
    "total_chunks": 619
  },
  {
    "id": "258cd53a580a0ff7ff824ee8c0f60b9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"title\": \"Бібліотеки Front End\", \"intro\": [ \"Тепер, коли ви вже знайомі з HTML, CSS та JavaScript, піднімімо ваш рівень навичок, вивчаючи декілька найбільш популярних бібліотек верстки в галузі\", \"У сертифікації «Бібліотеки Front End» ви навчитеся швидко стилізувати свій сайт за допомогою Bootstrap Також ви навчитеся покращувати свої стилі CSS та розширювати їх за допомогою Sass \", \"Згодом ви розробите кошик для покупок та інші застосунки, щоб навчитися створювати потужні односторінкові застосунки (SPAs) з React та Redux\"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"bootstrap\": {\n        \"title\": \"Bootstrap\",\n        \"intro\": [\n          \"Bootstrap — це front end каркас, створений для проєктування адаптивних вебсторінок та застосунків Для веброзробки цей фреймворк використовує принцип Mobile First та включає попередньо інтегровані стилі, класи CSS і деякі функціональності JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 116,
    "total_chunks": 619
  },
  {
    "id": "ed22871948a4b2aa7f0e2f03d0debb6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви навчитеся покращувати свої стилі CSS та розширювати їх за допомогою Sass \", \"Згодом ви розробите кошик для покупок та інші застосунки, щоб навчитися створювати потужні односторінкові застосунки (SPAs) з React та Redux\" ], \"note\": \"\", \"blocks\": { \"bootstrap\": { \"title\": \"Bootstrap\", \"intro\": [ \"Bootstrap — це front end каркас, створений для проєктування адаптивних вебсторінок та застосунків Для веброзробки цей фреймворк використовує принцип Mobile First та включає попередньо інтегровані стилі, класи CSS і деякі функціональності JavaScript\",\n          \"Під час цього курсу ви навчитеся створювати адаптивні вебсайти за допомогою Bootstrap та використовувати готові шаблони для стилізації кнопок, зображень, форм, навігації та інших поширених елементів \"\n        ]\n      },\n      \"jquery\": {\n        \"title\": \"jQuery\",\n        \"intro\": [\n          \"jQuery — одна з найпопулярніших у світі бібліотек JavaScript \",\n          \"До її запуску у 2006 році, кожний браузер використовував JavaScript по-своєму",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 117,
    "total_chunks": 619
  },
  {
    "id": "3c662546f8c2f3347fa4fc22ab4ef56e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "застосунків Для веброзробки цей фреймворк використовує принцип Mobile First та включає попередньо інтегровані стилі, класи CSS і деякі функціональності JavaScript\", \"Під час цього курсу ви навчитеся створювати адаптивні вебсайти за допомогою Bootstrap та використовувати готові шаблони для стилізації кнопок, зображень, форм, навігації та інших поширених елементів \" ] }, \"jquery\": { \"title\": \"jQuery\", \"intro\": [ \"jQuery — одна з найпопулярніших у світі бібліотек JavaScript \", \"До її запуску у 2006 році, кожний браузер використовував JavaScript по-своємуjQuery спростила роботу з JavaScript для користувачів, а також забезпечила кросбраузерність створених кодів \",\n          \"Під час цього курсу ви навчитеся використовувати jQuery для виділення, вилучення, копіювання та редагування різних елементів на сторінці",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 118,
    "total_chunks": 619
  },
  {
    "id": "7c23be7f383497918e71f2ccf80abdf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Bootstrap та використовувати готові шаблони для стилізації кнопок, зображень, форм, навігації та інших поширених елементів \" ] }, \"jquery\": { \"title\": \"jQuery\", \"intro\": [ \"jQuery — одна з найпопулярніших у світі бібліотек JavaScript \", \"До її запуску у 2006 році, кожний браузер використовував JavaScript по-своємуjQuery спростила роботу з JavaScript для користувачів, а також забезпечила кросбраузерність створених кодів \", \"Під час цього курсу ви навчитеся використовувати jQuery для виділення, вилучення, копіювання та редагування різних елементів на сторінці\"\n        ]\n      },\n      \"sass\": {\n        \"title\": \"SASS\",\n        \"intro\": [\n          \"Sass, або «Syntactically Awesome StyleSheets» — це мовне розширення CSS, що містить функції, яких немає у базовому CSS, і тим самим допомагає спростити створення таблиць стилів для ваших проєктів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 119,
    "total_chunks": 619
  },
  {
    "id": "757f7fd02ce5655cebb9107f7d743568",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "у 2006 році, кожний браузер використовував JavaScript по-своємуjQuery спростила роботу з JavaScript для користувачів, а також забезпечила кросбраузерність створених кодів \", \"Під час цього курсу ви навчитеся використовувати jQuery для виділення, вилучення, копіювання та редагування різних елементів на сторінці\" ] }, \"sass\": { \"title\": \"SASS\", \"intro\": [ \"Sass, або «Syntactically Awesome StyleSheets» — це мовне розширення CSS, що містить функції, яких немає у базовому CSS, і тим самим допомагає спростити створення таблиць стилів для ваших проєктів\",\n          \"У цьому курсі ви навчитеся зберігати дані у змінних, вкладати CSS, створювати багаторазові стилі за допомогою міксин, додавати умовні конструкції та цикли до своїх стилів тощо \"\n        ]\n      },\n      \"react\": {\n        \"title\": \"React\",\n        \"intro\": [\n          \"React — це популярна бібліотека JavaScript для створення багаторазових компонентних користувацьких інтерфейсів для вебсторінок або застосунків",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 120,
    "total_chunks": 619
  },
  {
    "id": "83bbe39f35c1cfcbe32598e08f9e420e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "StyleSheets» — це мовне розширення CSS, що містить функції, яких немає у базовому CSS, і тим самим допомагає спростити створення таблиць стилів для ваших проєктів\", \"У цьому курсі ви навчитеся зберігати дані у змінних, вкладати CSS, створювати багаторазові стилі за допомогою міксин, додавати умовні конструкції та цикли до своїх стилів тощо \" ] }, \"react\": { \"title\": \"React\", \"intro\": [ \"React — це популярна бібліотека JavaScript для створення багаторазових компонентних користувацьких інтерфейсів для вебсторінок або застосунків\",\n          \"React поєднує HTML з функціями JavaScript, формуючи власну мову розмітки під назвою JSX React також дозволяє легко керувати потоком даних у всьому застосунку \",\n          \"У цьому курсі ви навчитеся створювати різні компоненти React, керувати даними за допомогою пропсів, а також застосовувати різні методи життєвого циклу, такі як <code>componentDidMount</code> тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 121,
    "total_chunks": 619
  },
  {
    "id": "6edf7c56ff66759ddd0966ba4722866d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "стилів тощо \" ] }, \"react\": { \"title\": \"React\", \"intro\": [ \"React — це популярна бібліотека JavaScript для створення багаторазових компонентних користувацьких інтерфейсів для вебсторінок або застосунків\", \"React поєднує HTML з функціями JavaScript, формуючи власну мову розмітки під назвою JSX React також дозволяє легко керувати потоком даних у всьому застосунку \", \"У цьому курсі ви навчитеся створювати різні компоненти React, керувати даними за допомогою пропсів, а також застосовувати різні методи життєвого циклу, такі як <code>componentDidMount</code> тощо\"\n        ]\n      },\n      \"redux\": {\n        \"title\": \"Redux\",\n        \"intro\": [\n          \"Зі збільшенням розмірів та кількості застосунків, керувати спільними даними стає все складніше Redux називають «відкритою JS бібліотекою призначеною для управління станом програм JavaScript», яка забезпечує належну роботу ваших програм і спрощує тестування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 122,
    "total_chunks": 619
  },
  {
    "id": "3ebacb470969416b0b1b22e04a1e02cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "React також дозволяє легко керувати потоком даних у всьому застосунку \", \"У цьому курсі ви навчитеся створювати різні компоненти React, керувати даними за допомогою пропсів, а також застосовувати різні методи життєвого циклу, такі як <code>componentDidMount</code> тощо\" ] }, \"redux\": { \"title\": \"Redux\", \"intro\": [ \"Зі збільшенням розмірів та кількості застосунків, керувати спільними даними стає все складніше Redux називають «відкритою JS бібліотекою призначеною для управління станом програм JavaScript», яка забезпечує належну роботу ваших програм і спрощує тестування\",\n          \"Хоча ви можете використовувати його з будь-якою іншою бібліотекою, ми лише коротко розповімо про Redux, а тоді об’єднаємо його з React у наступному наборі курсів \",\n          \"Під час цього курсу ви вивчите базову інформацію про сховища, дії, редуктори та проміжне програмне забезпечення Redux для керування даними у своєму застосунку",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 123,
    "total_chunks": 619
  },
  {
    "id": "e3a2577fe3085b45c6be8850d07e0cef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "застосунків, керувати спільними даними стає все складніше Redux називають «відкритою JS бібліотекою призначеною для управління станом програм JavaScript», яка забезпечує належну роботу ваших програм і спрощує тестування\", \"Хоча ви можете використовувати його з будь-якою іншою бібліотекою, ми лише коротко розповімо про Redux, а тоді об’єднаємо його з React у наступному наборі курсів \", \"Під час цього курсу ви вивчите базову інформацію про сховища, дії, редуктори та проміжне програмне забезпечення Redux для керування даними у своєму застосунку\"\n        ]\n      },\n      \"react-and-redux\": {\n        \"title\": \"React та Redux\",\n        \"intro\": [\n          \"React часто використовують разом із Redux, і не дарма Redux і React створив один програміст, який хотів зробити процес передачі даних між компонентами простішим \",\n          \"Тепер коли ви вже навчились керувати загальними даними за допомогою Redux, ви можете виконувати дії в React",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 124,
    "total_chunks": 619
  },
  {
    "id": "db990555511a9b3c9a0b9c758dcfaddc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\", \"Під час цього курсу ви вивчите базову інформацію про сховища, дії, редуктори та проміжне програмне забезпечення Redux для керування даними у своєму застосунку\" ] }, \"react-and-redux\": { \"title\": \"React та Redux\", \"intro\": [ \"React часто використовують разом із Redux, і не дарма Redux і React створив один програміст, який хотів зробити процес передачі даних між компонентами простішим \", \"Тепер коли ви вже навчились керувати загальними даними за допомогою Redux, ви можете виконувати дії в ReactНа курсах React і Redux, ви навчитесь будувати компонент React і дізнаєтесь, як локально керувати станом на рівні компонента, та й у цілому застосунку, за допомогою Redux \"\n        ]\n      },\n      \"front-end-development-libraries-projects\": {\n        \"title\": \"Проєкти «Бібліотеки Front End»\",\n        \"intro\": [\n          \"Прийшов час протестувати ваші навички роботи з бібліотеками front end розробки Використайте Bootstrap, jQuery, Sass, React та Redux, аби створити 5 проєктів, які перевірять ваші знання з усього, що ви вивчили дотепер",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 125,
    "total_chunks": 619
  },
  {
    "id": "854cd692beb1e98083ac1b93dbeac5c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви можете виконувати дії в ReactНа курсах React і Redux, ви навчитесь будувати компонент React і дізнаєтесь, як локально керувати станом на рівні компонента, та й у цілому застосунку, за допомогою Redux \" ] }, \"front-end-development-libraries-projects\": { \"title\": \"Проєкти «Бібліотеки Front End»\", \"intro\": [ \"Прийшов час протестувати ваші навички роботи з бібліотеками front end розробки Використайте Bootstrap, jQuery, Sass, React та Redux, аби створити 5 проєктів, які перевірять ваші знання з усього, що ви вивчили дотепер\",\n          \"Виконайте п’ять проєктів та отримайте сертифікацію «Бібліотеки Front End» \"\n        ]\n      }\n    }\n  },\n  \"data-visualization\": {\n    \"title\": \"Візуалізація даних\",\n    \"intro\": [\n      \"Дані повсюди, але це не означає, що більшість з них без форми чи контексту \",\n      \"У сертифікації «Візуалізація даних» ви створите діаграми, графіки та карти, що показують різні типи даних, за допомогою бібліотеки D3 js",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 126,
    "total_chunks": 619
  },
  {
    "id": "acd2e5e71308d7e35a6a409df8f10930",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Bootstrap, jQuery, Sass, React та Redux, аби створити 5 проєктів, які перевірять ваші знання з усього, що ви вивчили дотепер\", \"Виконайте п’ять проєктів та отримайте сертифікацію «Бібліотеки Front End» \" ] } } }, \"data-visualization\": { \"title\": \"Візуалізація даних\", \"intro\": [ \"Дані повсюди, але це не означає, що більшість з них без форми чи контексту \", \"У сертифікації «Візуалізація даних» ви створите діаграми, графіки та карти, що показують різні типи даних, за допомогою бібліотеки D3 js\",\n      \"Ви також дізнаєтесь про JSON (JavaScript Object Notation) та як працювати з даними онлайн, користуючись API (Application Programing Interface) \"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"data-visualization-with-d3\": {\n        \"title\": \"Візуалізація даних з D3\",\n        \"intro\": [\n          \"D3, або D3 js, розшифровується як «Data Driven Documents» Це бібліотека JavaScript для створення функціональної та інтерактивної візуалізації даних у браузері",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 127,
    "total_chunks": 619
  },
  {
    "id": "be5032464fd465b6dc6a390f879aeea1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\", \"У сертифікації «Візуалізація даних» ви створите діаграми, графіки та карти, що показують різні типи даних, за допомогою бібліотеки D3 js\", \"Ви також дізнаєтесь про JSON (JavaScript Object Notation) та як працювати з даними онлайн, користуючись API (Application Programing Interface) \" ], \"note\": \"\", \"blocks\": { \"data-visualization-with-d3\": { \"title\": \"Візуалізація даних з D3\", \"intro\": [ \"D3, або D3 js, розшифровується як «Data Driven Documents» Це бібліотека JavaScript для створення функціональної та інтерактивної візуалізації даних у браузері\",\n          \"D3 створено для роботи з поширеними вебстандартами, а саме: HTML, CSS і SVG (масштабована векторна графіка) \",\n          \"D3 підтримує багато різних форматів даних Тому, використовуючи її потужні вбудовані методи, ви можете перетворити ці дані у різні діаграми, графіки та карти",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 128,
    "total_chunks": 619
  },
  {
    "id": "1f641dbae91faf8e25ef8c39f90776a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\" ], \"note\": \"\", \"blocks\": { \"data-visualization-with-d3\": { \"title\": \"Візуалізація даних з D3\", \"intro\": [ \"D3, або D3 js, розшифровується як «Data Driven Documents» Це бібліотека JavaScript для створення функціональної та інтерактивної візуалізації даних у браузері\", \"D3 створено для роботи з поширеними вебстандартами, а саме: HTML, CSS і SVG (масштабована векторна графіка) \", \"D3 підтримує багато різних форматів даних Тому, використовуючи її потужні вбудовані методи, ви можете перетворити ці дані у різні діаграми, графіки та карти\",\n          \"У курсі «Візуалізація даних з D3» ви навчитеся працювати з даними, аби створювати різні діаграми, графіки, елементи наведення та інші складові частини, аби створити динамічну та принадну візуалізацію даних",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 129,
    "total_chunks": 619
  },
  {
    "id": "56b7fdf13655f68f222e9dcb5c07265a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "функціональної та інтерактивної візуалізації даних у браузері\", \"D3 створено для роботи з поширеними вебстандартами, а саме: HTML, CSS і SVG (масштабована векторна графіка) \", \"D3 підтримує багато різних форматів даних Тому, використовуючи її потужні вбудовані методи, ви можете перетворити ці дані у різні діаграми, графіки та карти\", \"У курсі «Візуалізація даних з D3» ви навчитеся працювати з даними, аби створювати різні діаграми, графіки, елементи наведення та інші складові частини, аби створити динамічну та принадну візуалізацію даних\"\n        ]\n      },\n      \"json-apis-and-ajax\": {\n        \"title\": \"JSON API та AJAX\",\n        \"intro\": [\n          \"Так само як інтерфейс користувача (UI) допомагає людям користуватися програмами, API (Application Programming Interfaces) також допомагає програмам взаємодіяти між собою API — це інструменти, які використовуються комп’ютерами для комунікування один з одним, і, частково, для надсилання та отримання даних",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 130,
    "total_chunks": 619
  },
  {
    "id": "5b061eaaea921f86876edcc35073b872",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "даних з D3» ви навчитеся працювати з даними, аби створювати різні діаграми, графіки, елементи наведення та інші складові частини, аби створити динамічну та принадну візуалізацію даних\" ] }, \"json-apis-and-ajax\": { \"title\": \"JSON API та AJAX\", \"intro\": [ \"Так само як інтерфейс користувача (UI) допомагає людям користуватися програмами, API (Application Programming Interfaces) також допомагає програмам взаємодіяти між собою API — це інструменти, які використовуються комп’ютерами для комунікування один з одним, і, частково, для надсилання та отримання даних\",\n          \"Програмісти часто використовують AJAX (Asynchronous JavaScript and XML) при роботі з API AJAX належить до групи технологій, які роблять асинхронні запити до сервера для передачі даних, а потім завантажують будь-які отримані дані до сторінки І дані, що були передані між браузером і сервером, часто мають формат JSON (JavaScript Object Notation) \",\n          \"Цей курс навчить вас основ роботи з API та різними технологіями AJAX в браузері",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 131,
    "total_chunks": 619
  },
  {
    "id": "2be9b081709e873f810a163b10ea632e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "комунікування один з одним, і, частково, для надсилання та отримання даних\", \"Програмісти часто використовують AJAX (Asynchronous JavaScript and XML) при роботі з API AJAX належить до групи технологій, які роблять асинхронні запити до сервера для передачі даних, а потім завантажують будь-які отримані дані до сторінки І дані, що були передані між браузером і сервером, часто мають формат JSON (JavaScript Object Notation) \", \"Цей курс навчить вас основ роботи з API та різними технологіями AJAX в браузері\"\n        ]\n      },\n      \"data-visualization-projects\": {\n        \"title\": \"Проєкти «Візуалізація даних»\",\n        \"intro\": [\n          \"Ви дізналися як працювати з технологіями D3, APIs та AJAX, тому перевірте свої навички завдяки тесту з п’яти проєктів візуалізації даних \",\n          \"У цих проєктах вам потрібно буде отримати й проаналізувати набір даних, тоді використати D3 для створення різної візуалізації даних Завершіть усі проєкти, аби отримати сертифікацію «Візуалізація даних»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 132,
    "total_chunks": 619
  },
  {
    "id": "e07b507c4ea199e896abbef5c82e6d2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Object Notation) \", \"Цей курс навчить вас основ роботи з API та різними технологіями AJAX в браузері\" ] }, \"data-visualization-projects\": { \"title\": \"Проєкти «Візуалізація даних»\", \"intro\": [ \"Ви дізналися як працювати з технологіями D3, APIs та AJAX, тому перевірте свої навички завдяки тесту з п’яти проєктів візуалізації даних \", \"У цих проєктах вам потрібно буде отримати й проаналізувати набір даних, тоді використати D3 для створення різної візуалізації даних Завершіть усі проєкти, аби отримати сертифікацію «Візуалізація даних»\"\n        ]\n      }\n    }\n  },\n  \"relational-database\": {\n    \"title\": \"Реляційна база даних\",\n    \"intro\": [\n      \"У цих курсах ви використовуватимете реальні інструменти розробника та програмне забезпечення, включно з VS Code, PostgreSQL та командним рядком Linux / Unix для завершення інтерактивних уроків і створення проєктів \",\n      \"Ці курси починаються з основних команд Bash",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 133,
    "total_chunks": 619
  },
  {
    "id": "cbaf41d99a58fb7c5a33dd69334ca6a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У цих проєктах вам потрібно буде отримати й проаналізувати набір даних, тоді використати D3 для створення різної візуалізації даних Завершіть усі проєкти, аби отримати сертифікацію «Візуалізація даних»\" ] } } }, \"relational-database\": { \"title\": \"Реляційна база даних\", \"intro\": [ \"У цих курсах ви використовуватимете реальні інструменти розробника та програмне забезпечення, включно з VS Code, PostgreSQL та командним рядком Linux / Unix для завершення інтерактивних уроків і створення проєктів \", \"Ці курси починаються з основних команд BashЗа допомогою терміналу ви навчитеся усього необхідного (від навігації та маніпуляції файловою системою, написання скрипту в Bash до просунутого використання) \",\n      \"Далі ви навчитеся створювати та використовувати реляційну базу даних з PostgreSQL (система керування базами даних) та SQL (мова баз даних) \",\n      \"Зрештою, ви дізнаєтеся про Git, систему контролю версій, важливий інструмент кожного розробника",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 134,
    "total_chunks": 619
  },
  {
    "id": "b7726b10953e6e84b986d5079042dced",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Code, PostgreSQL та командним рядком Linux / Unix для завершення інтерактивних уроків і створення проєктів \", \"Ці курси починаються з основних команд BashЗа допомогою терміналу ви навчитеся усього необхідного (від навігації та маніпуляції файловою системою, написання скрипту в Bash до просунутого використання) \", \"Далі ви навчитеся створювати та використовувати реляційну базу даних з PostgreSQL (система керування базами даних) та SQL (мова баз даних) \", \"Зрештою, ви дізнаєтеся про Git, систему контролю версій, важливий інструмент кожного розробника\"\n    ],\n    \"blocks\": {\n      \"build-a-celestial-bodies-database-project\": {\n        \"title\": \"База даних «Небесні тіла»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви побудуєте базу даних небесних тіл, використовуючи PostgreSQL \"\n        ]\n      },\n      \"build-a-number-guessing-game-project\": {\n        \"title\": \"Гра «Вгадай число»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 135,
    "total_chunks": 619
  },
  {
    "id": "ddccd56ab298672c386e47681aadde53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "реляційну базу даних з PostgreSQL (система керування базами даних) та SQL (мова баз даних) \", \"Зрештою, ви дізнаєтеся про Git, систему контролю версій, важливий інструмент кожного розробника\" ], \"blocks\": { \"build-a-celestial-bodies-database-project\": { \"title\": \"База даних «Небесні тіла»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте базу даних небесних тіл, використовуючи PostgreSQL \" ] }, \"build-a-number-guessing-game-project\": { \"title\": \"Гра «Вгадай число»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\",\n          \"У цьому проєкті ви використовуватимете сценарії Bash, PostgreSQL та Git, щоб створити гру з вгадуванням чисел, яка запускається в терміналі та зберігає інформацію користувача \"\n        ]\n      },\n      \"build-a-periodic-table-database-project\": {\n        \"title\": \"База даних «Періодична таблиця»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 136,
    "total_chunks": 619
  },
  {
    "id": "b2679a58c5f72a869795987fbecbc476",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте базу даних небесних тіл, використовуючи PostgreSQL \" ] }, \"build-a-number-guessing-game-project\": { \"title\": \"Гра «Вгадай число»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\", \"У цьому проєкті ви використовуватимете сценарії Bash, PostgreSQL та Git, щоб створити гру з вгадуванням чисел, яка запускається в терміналі та зберігає інформацію користувача \" ] }, \"build-a-periodic-table-database-project\": { \"title\": \"База даних «Періодична таблиця»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\",\n          \"У цьому проєкті ви створите Bash-скрипт, щоб отримати інформацію про хімічні елементи з бази даних періодичної таблиці \"\n        ]\n      },\n      \"build-a-salon-appointment-scheduler-project\": {\n        \"title\": \"Планувальник «Записи в салоні»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 137,
    "total_chunks": 619
  },
  {
    "id": "6f8d1d0435d6722e36de9cb232558e8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви використовуватимете сценарії Bash, PostgreSQL та Git, щоб створити гру з вгадуванням чисел, яка запускається в терміналі та зберігає інформацію користувача \" ] }, \"build-a-periodic-table-database-project\": { \"title\": \"База даних «Періодична таблиця»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\", \"У цьому проєкті ви створите Bash-скрипт, щоб отримати інформацію про хімічні елементи з бази даних періодичної таблиці \" ] }, \"build-a-salon-appointment-scheduler-project\": { \"title\": \"Планувальник «Записи в салоні»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\",\n          \"У цьому проєкті ви створите інтерактивну програму Bash, яка використовує PostgreSQL для відстеження клієнтів і зустрічей у вашому салоні \"\n        ]\n      },\n      \"build-a-world-cup-database-project\": {\n        \"title\": \"База даних «Чемпіонат світу»\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 138,
    "total_chunks": 619
  },
  {
    "id": "0364d636526cd100bb5a6daf83529b81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "отримати сертифікацію\", \"У цьому проєкті ви створите Bash-скрипт, щоб отримати інформацію про хімічні елементи з бази даних періодичної таблиці \" ] }, \"build-a-salon-appointment-scheduler-project\": { \"title\": \"Планувальник «Записи в салоні»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\", \"У цьому проєкті ви створите інтерактивну програму Bash, яка використовує PostgreSQL для відстеження клієнтів і зустрічей у вашому салоні \" ] }, \"build-a-world-cup-database-project\": { \"title\": \"База даних «Чемпіонат світу»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\",\n          \"У цьому проєкті ви створите скрипт Bash, який вводить інформацію з ігор чемпіонату світу в PostgreSQL, а потім запитує базу даних для отримання статистики \"\n        ]\n      },\n      \"learn-advanced-bash-by-building-a-kitty-ipsum-translator\": {\n        \"title\": \"Вивчіть прогресивний Bash, створивши перекладач Kitty Ipsum\",\n        \"intro\": [\n          \"У командах Bash більше, ніж ви могли собі уявити",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 139,
    "total_chunks": 619
  },
  {
    "id": "580aa734d0158d4b5d4737d2ec3a6495",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "PostgreSQL для відстеження клієнтів і зустрічей у вашому салоні \" ] }, \"build-a-world-cup-database-project\": { \"title\": \"База даних «Чемпіонат світу»\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію\", \"У цьому проєкті ви створите скрипт Bash, який вводить інформацію з ігор чемпіонату світу в PostgreSQL, а потім запитує базу даних для отримання статистики \" ] }, \"learn-advanced-bash-by-building-a-kitty-ipsum-translator\": { \"title\": \"Вивчіть прогресивний Bash, створивши перекладач Kitty Ipsum\", \"intro\": [ \"У командах Bash більше, ніж ви могли собі уявити\",\n          \"У цьому курсі з 140 уроків ви дізнаєтеся про деякі складніші команди, а також детально дізнаєтеся як вони працюють \"\n        ]\n      },\n      \"learn-bash-and-sql-by-building-a-bike-rental-shop\": {\n        \"title\": \"Вивчіть Bash та SQL, створивши магазин прокату велосипедів\",\n        \"intro\": [\n          \"У цьому курсі з 210 уроків ви створите інтерактивну програму Bash, яка зберігатиме інформацію про оренду для вашого магазину прокату велосипедів, використовуючи PostgreSQL",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 140,
    "total_chunks": 619
  },
  {
    "id": "846a43c7d5402854d6359f4043ff9595",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Вивчіть прогресивний Bash, створивши перекладач Kitty Ipsum\", \"intro\": [ \"У командах Bash більше, ніж ви могли собі уявити\", \"У цьому курсі з 140 уроків ви дізнаєтеся про деякі складніші команди, а також детально дізнаєтеся як вони працюють \" ] }, \"learn-bash-and-sql-by-building-a-bike-rental-shop\": { \"title\": \"Вивчіть Bash та SQL, створивши магазин прокату велосипедів\", \"intro\": [ \"У цьому курсі з 210 уроків ви створите інтерактивну програму Bash, яка зберігатиме інформацію про оренду для вашого магазину прокату велосипедів, використовуючи PostgreSQL\"\n        ]\n      },\n      \"learn-bash-by-building-a-boilerplate\": {\n        \"title\": \"Вивчіть Bash, створивши шаблонний код\",\n        \"intro\": [\n          \"Термінал дозволяє відправляти текстові команди на ваш комп’ютер, які можуть маніпулювати файловою системою, запускати програми, автоматизувати завдання та багато іншого \",\n          \"У цьому курсі з 170 уроків ви вивчите команди терміналу, створивши шаблонний код вебсайту, використовуючи лише командний рядок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 141,
    "total_chunks": 619
  },
  {
    "id": "4252a38236bdbf15047313cfac221fbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"intro\": [ \"У цьому курсі з 210 уроків ви створите інтерактивну програму Bash, яка зберігатиме інформацію про оренду для вашого магазину прокату велосипедів, використовуючи PostgreSQL\" ] }, \"learn-bash-by-building-a-boilerplate\": { \"title\": \"Вивчіть Bash, створивши шаблонний код\", \"intro\": [ \"Термінал дозволяє відправляти текстові команди на ваш комп’ютер, які можуть маніпулювати файловою системою, запускати програми, автоматизувати завдання та багато іншого \", \"У цьому курсі з 170 уроків ви вивчите команди терміналу, створивши шаблонний код вебсайту, використовуючи лише командний рядок\"\n        ]\n      },\n      \"learn-bash-scripting-by-building-five-programs\": {\n        \"title\": \"Вивчіть скрипт Bash, створивши п’ять програм\",\n        \"intro\": [\n          \"Скрипти Bash поєднують команди терміналу та логіку в програми, які можуть виконувати або автоматизувати завдання та багато іншого \",\n          \"У цьому курсі з 220 уроків ви вивчите більше про команди терміналу та як їх використовувати в скриптах Bash, створивши п’ять невеликих програм",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 142,
    "total_chunks": 619
  },
  {
    "id": "2eb7a8aa628b1b55695ce8437000d184",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "багато іншого \", \"У цьому курсі з 170 уроків ви вивчите команди терміналу, створивши шаблонний код вебсайту, використовуючи лише командний рядок\" ] }, \"learn-bash-scripting-by-building-five-programs\": { \"title\": \"Вивчіть скрипт Bash, створивши п’ять програм\", \"intro\": [ \"Скрипти Bash поєднують команди терміналу та логіку в програми, які можуть виконувати або автоматизувати завдання та багато іншого \", \"У цьому курсі з 220 уроків ви вивчите більше про команди терміналу та як їх використовувати в скриптах Bash, створивши п’ять невеликих програм\"\n        ]\n      },\n      \"learn-git-by-building-an-sql-reference-object\": {\n        \"title\": \"Вивчіть Git, створивши об’єкт SQL\",\n        \"intro\": [\n          \"Git — це система контролю версій, яка відстежує усі зміни, внесені вами до свого коду \",\n          \"У цьому курсі з 240 уроків ви вивчите як Git відстежує ваш код, створюючи об’єкт, що містить часто використовувані команди SQL",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 143,
    "total_chunks": 619
  },
  {
    "id": "12d0486c20810476c97dc07f44d69fd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та багато іншого \", \"У цьому курсі з 220 уроків ви вивчите більше про команди терміналу та як їх використовувати в скриптах Bash, створивши п’ять невеликих програм\" ] }, \"learn-git-by-building-an-sql-reference-object\": { \"title\": \"Вивчіть Git, створивши об’єкт SQL\", \"intro\": [ \"Git — це система контролю версій, яка відстежує усі зміни, внесені вами до свого коду \", \"У цьому курсі з 240 уроків ви вивчите як Git відстежує ваш код, створюючи об’єкт, що містить часто використовувані команди SQL\"\n        ]\n      },\n      \"learn-nano-by-building-a-castle\": {\n        \"title\": \"Вивчіть Nano, створивши замок\",\n        \"intro\": [\n          \"Nano — це програма, яка дозволяє редагувати файли одразу в терміналі \",\n          \"У цьому курсі з 40 уроків ви вивчите як редагувати файли в терміналі за допомогою Nano під час будівництва замку",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 144,
    "total_chunks": 619
  },
  {
    "id": "c9c9b3500bf388e3ec6de65cd2a25a7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "контролю версій, яка відстежує усі зміни, внесені вами до свого коду \", \"У цьому курсі з 240 уроків ви вивчите як Git відстежує ваш код, створюючи об’єкт, що містить часто використовувані команди SQL\" ] }, \"learn-nano-by-building-a-castle\": { \"title\": \"Вивчіть Nano, створивши замок\", \"intro\": [ \"Nano — це програма, яка дозволяє редагувати файли одразу в терміналі \", \"У цьому курсі з 40 уроків ви вивчите як редагувати файли в терміналі за допомогою Nano під час будівництва замку\"\n        ]\n      },\n      \"learn-relational-databases-by-building-a-database-of-video-game-characters\": {\n        \"title\": \"Вивчіть реляційні бази даних, створивши базу даних з персонажами відеоігор\",\n        \"intro\": [\n          \"Реляційна база даних організовує дані в таблиці, які пов’язані між собою через спорідненість \",\n          \"У цьому курсі зі 165 уроків ви вивчите основи реляційної бази даних, створивши базу даних PostgreSQL, наповнену персонажами з відеоігор",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 145,
    "total_chunks": 619
  },
  {
    "id": "5799a5457a9ee74a886b47ae595aab65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "файли одразу в терміналі \", \"У цьому курсі з 40 уроків ви вивчите як редагувати файли в терміналі за допомогою Nano під час будівництва замку\" ] }, \"learn-relational-databases-by-building-a-database-of-video-game-characters\": { \"title\": \"Вивчіть реляційні бази даних, створивши базу даних з персонажами відеоігор\", \"intro\": [ \"Реляційна база даних організовує дані в таблиці, які пов’язані між собою через спорідненість \", \"У цьому курсі зі 165 уроків ви вивчите основи реляційної бази даних, створивши базу даних PostgreSQL, наповнену персонажами з відеоігор\"\n        ]\n      },\n      \"learn-sql-by-building-a-student-database-part-1\": {\n        \"title\": \"Вивчіть SQL, створивши студентську базу даних (частина 1)\",\n        \"intro\": [\n          \"SQL, або Structured Query Language (мова структурованих запитів) — це мова для спілкування з реляційною базою даних \",\n          \"В цьому курсі з 140 уроків ви створите скрипт Bash, який використовує SQL для введення інформації про ваших студентів з науки про дані в PostgreSQL",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 146,
    "total_chunks": 619
  },
  {
    "id": "d193b04d1991a4a601844ab11bc94e2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "курсі зі 165 уроків ви вивчите основи реляційної бази даних, створивши базу даних PostgreSQL, наповнену персонажами з відеоігор\" ] }, \"learn-sql-by-building-a-student-database-part-1\": { \"title\": \"Вивчіть SQL, створивши студентську базу даних (частина 1)\", \"intro\": [ \"SQL, або Structured Query Language (мова структурованих запитів) — це мова для спілкування з реляційною базою даних \", \"В цьому курсі з 140 уроків ви створите скрипт Bash, який використовує SQL для введення інформації про ваших студентів з науки про дані в PostgreSQL\"\n        ]\n      },\n      \"learn-sql-by-building-a-student-database-part-2\": {\n        \"title\": \"Вивчіть SQL, створивши студентську базу даних (частина 2)\",\n        \"intro\": [\n          \"Команди об’єднання SQL використовуються, щоб поєднати інформацію з кількох таблиць у реляційній базі даних\",\n          \"У цьому курсі з 140 уроків ви завершите свою базу даних студентів, глибше занурившись в команди SQL",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 147,
    "total_chunks": 619
  },
  {
    "id": "ed37bc65f7584c21ddb5668d22e691dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з реляційною базою даних \", \"В цьому курсі з 140 уроків ви створите скрипт Bash, який використовує SQL для введення інформації про ваших студентів з науки про дані в PostgreSQL\" ] }, \"learn-sql-by-building-a-student-database-part-2\": { \"title\": \"Вивчіть SQL, створивши студентську базу даних (частина 2)\", \"intro\": [ \"Команди об’єднання SQL використовуються, щоб поєднати інформацію з кількох таблиць у реляційній базі даних\", \"У цьому курсі з 140 уроків ви завершите свою базу даних студентів, глибше занурившись в команди SQL\"\n        ]\n      }\n    }\n  },\n  \"back-end-development-and-apis\": {\n    \"title\": \"Розробка Back End та API\",\n    \"intro\": [\n      \"До цього моменту ви використовували JavaScript тільки для front end, аби зробити вебсторінку інтерактивнішою, розв’язати завдання з алгоритмами, або створити SPA Але JavaScript можна використовувати й у back end, або на сервері, для створення цілих вебзастосунків",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 148,
    "total_chunks": 619
  },
  {
    "id": "3c3a87d65615411baa72dbee2d46ebc2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "поєднати інформацію з кількох таблиць у реляційній базі даних\", \"У цьому курсі з 140 уроків ви завершите свою базу даних студентів, глибше занурившись в команди SQL\" ] } } }, \"back-end-development-and-apis\": { \"title\": \"Розробка Back End та API\", \"intro\": [ \"До цього моменту ви використовували JavaScript тільки для front end, аби зробити вебсторінку інтерактивнішою, розв’язати завдання з алгоритмами, або створити SPA Але JavaScript можна використовувати й у back end, або на сервері, для створення цілих вебзастосунків\",\n      \"Сьогодні один із найпопулярніших способів створення застосунків — за допомогою мікрослужб, які є маленькими модульними застосунками та разом формують єдине ціле \",\n      \"У сертифікації «Розробка Back End та API» ви навчитеся писати back end програми за допомогою Node js та npm Ви також створите вебзастосунок за допомогою фреймворку Express та мікрослужбу для пошуку людей за допомогою MongoDB і бібліотеки Mongoose",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 149,
    "total_chunks": 619
  },
  {
    "id": "39fa91812c15d7872e1ba1637a34595f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "SPA Але JavaScript можна використовувати й у back end, або на сервері, для створення цілих вебзастосунків\", \"Сьогодні один із найпопулярніших способів створення застосунків — за допомогою мікрослужб, які є маленькими модульними застосунками та разом формують єдине ціле \", \"У сертифікації «Розробка Back End та API» ви навчитеся писати back end програми за допомогою Node js та npm Ви також створите вебзастосунок за допомогою фреймворку Express та мікрослужбу для пошуку людей за допомогою MongoDB і бібліотеки Mongoose\"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"managing-packages-with-npm\": {\n        \"title\": \"Керування пакетами з NPM\",\n        \"intro\": [\n          \"npm (Node Package Manager) — це інструмент командного рядка для встановлення, створення та поширення пакетів коду JavaScript, написаного для Node js На npm знаходиться багато пакетів з відкритим вихідним кодом, тому спершу ретельно їх вивчіть, щоб вам не довелося виправляти помилки під час роботи з даними чи отримання даних з API \",\n          \"У цьому курсі ви вивчите основи використання npm, включно з тим як працювати із <code>package",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 150,
    "total_chunks": 619
  },
  {
    "id": "05d29039441a55dfbe409d4441b1f69a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"managing-packages-with-npm\": { \"title\": \"Керування пакетами з NPM\", \"intro\": [ \"npm (Node Package Manager) — це інструмент командного рядка для встановлення, створення та поширення пакетів коду JavaScript, написаного для Node js На npm знаходиться багато пакетів з відкритим вихідним кодом, тому спершу ретельно їх вивчіть, щоб вам не довелося виправляти помилки під час роботи з даними чи отримання даних з API \", \"У цьому курсі ви вивчите основи використання npm, включно з тим як працювати із <code>packagejson</code> та як керувати встановленими залежностями \"\n        ]\n      },\n      \"basic-node-and-express\": {\n        \"title\": \"Основи Node та Express\",\n        \"intro\": [\n          \"Node js — це середовище виконання JavaScript, що дозволяє розробникам писати back end (серверні) програми в JavaScript Node js має кілька вбудованих модулів (маленьких незалежних програм), які допомагають з цим Деякі з основних модулів містять HTTP, який працює на зразок сервера, і файлову систему (модуль для читання і редагування файлів)",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 151,
    "total_chunks": 619
  },
  {
    "id": "ff1a37a3c9eaa492ac1f7bc212182beb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "використання npm, включно з тим як працювати із <code>packagejson</code> та як керувати встановленими залежностями \" ] }, \"basic-node-and-express\": { \"title\": \"Основи Node та Express\", \"intro\": [ \"Node js — це середовище виконання JavaScript, що дозволяє розробникам писати back end (серверні) програми в JavaScript Node js має кілька вбудованих модулів (маленьких незалежних програм), які допомагають з цим Деякі з основних модулів містять HTTP, який працює на зразок сервера, і файлову систему (модуль для читання і редагування файлів)\",\n          \"В останній групі курсів ви навчилися встановлювати та керувати пакетами npm, які є скупченнями менших модулів Ці пакети можуть допомогти вам створити більші, складніші застосунки \",\n          \"Express — це спрощений фреймворк вебзастосунків та один з найбільш популярних пакетів на npm",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 152,
    "total_chunks": 619
  },
  {
    "id": "9e60010d0e31a2a82cfff66b4bed505d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "програми в JavaScript Node js має кілька вбудованих модулів (маленьких незалежних програм), які допомагають з цим Деякі з основних модулів містять HTTP, який працює на зразок сервера, і файлову систему (модуль для читання і редагування файлів)\", \"В останній групі курсів ви навчилися встановлювати та керувати пакетами npm, які є скупченнями менших модулів Ці пакети можуть допомогти вам створити більші, складніші застосунки \", \"Express — це спрощений фреймворк вебзастосунків та один з найбільш популярних пакетів на npmExpress значно полегшує створення сервера та керування маршрутизацією вашого застосунку, що відповідає за такі речі, як перенаправлення людей до потрібної сторінки, коли вони відвідують певну кінцеву точку (наприклад, <pre>/blog</pre>) \",\n          \"У цьому курсі ви дізнаєтесь основи Node та Express, включно з тим, як створювати сервер, обслуговувати різні файли та обробляти різні запити з браузера",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 153,
    "total_chunks": 619
  },
  {
    "id": "826129d2fb4912ab2a1525fb8fb63163",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "пакети можуть допомогти вам створити більші, складніші застосунки \", \"Express — це спрощений фреймворк вебзастосунків та один з найбільш популярних пакетів на npmExpress значно полегшує створення сервера та керування маршрутизацією вашого застосунку, що відповідає за такі речі, як перенаправлення людей до потрібної сторінки, коли вони відвідують певну кінцеву точку (наприклад, <pre>/blog</pre>) \", \"У цьому курсі ви дізнаєтесь основи Node та Express, включно з тим, як створювати сервер, обслуговувати різні файли та обробляти різні запити з браузера\"\n        ]\n      },\n      \"mongodb-and-mongoose\": {\n        \"title\": \"MongoDB та Mongoose\",\n        \"intro\": [\n          \"MongoDB — це програма бази даних, яка зберігає JSON документи (чи записи), які ви можете використати у своєму застосунку На відміну від SQL, іншого типу бази даних, MongoDB — це нереляційна, або «NoSQL» база даних",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 154,
    "total_chunks": 619
  },
  {
    "id": "9afcb5d1d3d0f2e9ffdd378d79b3ba3d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "відвідують певну кінцеву точку (наприклад, <pre>/blog</pre>) \", \"У цьому курсі ви дізнаєтесь основи Node та Express, включно з тим, як створювати сервер, обслуговувати різні файли та обробляти різні запити з браузера\" ] }, \"mongodb-and-mongoose\": { \"title\": \"MongoDB та Mongoose\", \"intro\": [ \"MongoDB — це програма бази даних, яка зберігає JSON документи (чи записи), які ви можете використати у своєму застосунку На відміну від SQL, іншого типу бази даних, MongoDB — це нереляційна, або «NoSQL» база данихЦе означає, що MongoDB зберігає усі збірні дані в межах одного запису, замість того, щоб тримати їх у багатьох попередньо налаштованих таблицях, як у базі даних SQL \",\n          \"Moongoose — це популярний пакет npm для взаємодії з MongoDB З Moongoose ви можете використовувати прості об’єкти JavaScript замість JSON, що полегшує роботу із MongoDB Він також дозволяє створити нарис документів під назвою «схеми», щоб ви ненароком не зберегли хибний тип даних та не спричинили помилок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 155,
    "total_chunks": 619
  },
  {
    "id": "bd92ff2f3482cdb98bf89f31c4db2860",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "«NoSQL» база данихЦе означає, що MongoDB зберігає усі збірні дані в межах одного запису, замість того, щоб тримати їх у багатьох попередньо налаштованих таблицях, як у базі даних SQL \", \"Moongoose — це популярний пакет npm для взаємодії з MongoDB З Moongoose ви можете використовувати прості об’єкти JavaScript замість JSON, що полегшує роботу із MongoDB Він також дозволяє створити нарис документів під назвою «схеми», щоб ви ненароком не зберегли хибний тип даних та не спричинили помилок\",\n          \"На курсах MongoDB та Mongoose ви вивчите основи роботи із постійними даними, враховуючи налаштування моделі, збереження, видалення та пошук документів у базі даних \"\n        ]\n      },\n      \"back-end-development-and-apis-projects\": {\n        \"title\": \"Проєкти «Розробка Back End та API»\",\n        \"intro\": [\n          \"Раніше ви мали справу з API, але тепер, коли ви знайомі із nmp, Node, Express, Mongo DB та Mongoose, прийшов час створити щось власне",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 156,
    "total_chunks": 619
  },
  {
    "id": "865b3fe2c7bd6fe56108f2819b8e6ec9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "під назвою «схеми», щоб ви ненароком не зберегли хибний тип даних та не спричинили помилок\", \"На курсах MongoDB та Mongoose ви вивчите основи роботи із постійними даними, враховуючи налаштування моделі, збереження, видалення та пошук документів у базі даних \" ] }, \"back-end-development-and-apis-projects\": { \"title\": \"Проєкти «Розробка Back End та API»\", \"intro\": [ \"Раніше ви мали справу з API, але тепер, коли ви знайомі із nmp, Node, Express, Mongo DB та Mongoose, прийшов час створити щось власнеЗастосуйте усі отримані знання, щоб створити 5 окремих мікрослужб, які є меншими застосунками з обмеженими можливостями \",\n          \"Створивши їх, ви матимете 5 крутих мікрослужб API, якими можна похвалитися перед друзями, рідними чи потенційними роботодавцями О, а ще новеньку сертифікацію «Розробка Back End та API»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 157,
    "total_chunks": 619
  },
  {
    "id": "619247f3bd692f6b79b4923cb4dcc362",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"title\": \"Проєкти «Розробка Back End та API»\", \"intro\": [ \"Раніше ви мали справу з API, але тепер, коли ви знайомі із nmp, Node, Express, Mongo DB та Mongoose, прийшов час створити щось власнеЗастосуйте усі отримані знання, щоб створити 5 окремих мікрослужб, які є меншими застосунками з обмеженими можливостями \", \"Створивши їх, ви матимете 5 крутих мікрослужб API, якими можна похвалитися перед друзями, рідними чи потенційними роботодавцями О, а ще новеньку сертифікацію «Розробка Back End та API»\"\n        ]\n      }\n    }\n  },\n  \"quality-assurance\": {\n    \"title\": \"Забезпечення якості\",\n    \"intro\": [\n      \"Оскільки ваші програми чи вебзастосунки стають складнішими, ви захочете протестувати їх, щоб переконатися, що нові зміни не порушують початкові функції \",\n      \"У сертифікації «Забезпечення якості» ви дізнаєтесь як писати тести з Chai, щоб переконатись, що ваші застосунки працюють так, як ви очікуєте",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 158,
    "total_chunks": 619
  },
  {
    "id": "94b130146820f7fef67c29b792d0e9af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "5 крутих мікрослужб API, якими можна похвалитися перед друзями, рідними чи потенційними роботодавцями О, а ще новеньку сертифікацію «Розробка Back End та API»\" ] } } }, \"quality-assurance\": { \"title\": \"Забезпечення якості\", \"intro\": [ \"Оскільки ваші програми чи вебзастосунки стають складнішими, ви захочете протестувати їх, щоб переконатися, що нові зміни не порушують початкові функції \", \"У сертифікації «Забезпечення якості» ви дізнаєтесь як писати тести з Chai, щоб переконатись, що ваші застосунки працюють так, як ви очікуєте\",\n      \"Потім ви створите застосунок чату, щоб вивчити розширені концепції Node та Express Ви також будете використовувати Pug як шаблонізатор, Passport для автентифікації та Socket io для комунікування в режимі реального часу між сервером та підключеними клієнтами",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 159,
    "total_chunks": 619
  },
  {
    "id": "2894991b61c4edd2786139e75f454ac2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "програми чи вебзастосунки стають складнішими, ви захочете протестувати їх, щоб переконатися, що нові зміни не порушують початкові функції \", \"У сертифікації «Забезпечення якості» ви дізнаєтесь як писати тести з Chai, щоб переконатись, що ваші застосунки працюють так, як ви очікуєте\", \"Потім ви створите застосунок чату, щоб вивчити розширені концепції Node та Express Ви також будете використовувати Pug як шаблонізатор, Passport для автентифікації та Socket io для комунікування в режимі реального часу між сервером та підключеними клієнтами\"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"quality-assurance-and-testing-with-chai\": {\n        \"title\": \"Забезпечення якості та тестування з Chai\",\n        \"intro\": [\n          \"Chai — це бібліотека тестування JavaScript, яка допомагає переконатись, що після внесення змін до коду ваша програма досі поводиться так, як ви очікуєте",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 160,
    "total_chunks": 619
  },
  {
    "id": "ad84c9bd8b1fc932a5528cd8aa5fb869",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "очікуєте\", \"Потім ви створите застосунок чату, щоб вивчити розширені концепції Node та Express Ви також будете використовувати Pug як шаблонізатор, Passport для автентифікації та Socket io для комунікування в режимі реального часу між сервером та підключеними клієнтами\" ], \"note\": \"\", \"blocks\": { \"quality-assurance-and-testing-with-chai\": { \"title\": \"Забезпечення якості та тестування з Chai\", \"intro\": [ \"Chai — це бібліотека тестування JavaScript, яка допомагає переконатись, що після внесення змін до коду ваша програма досі поводиться так, як ви очікуєте\",\n          \"Використовуючи Chai, ви зможете писати тести, які описують ваші програмні вимоги, та бачити чи ваш застосунок відповідає їм \",\n          \"У цьому курсі ви дізнаєтесь про припущення, глибоку рівність, правдивість, тестування API та інші основи тестування програм JavaScript \"\n        ]\n      },\n      \"advanced-node-and-express\": {\n        \"title\": \"Просунутий Node та Express\",\n        \"intro\": [\n          \"Настав час глибоко зануритися у Node js та Express js, створивши застосунок чату із системою входу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 161,
    "total_chunks": 619
  },
  {
    "id": "1f92d8c2bfb470c8bbcf328dd0bbfc5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "змін до коду ваша програма досі поводиться так, як ви очікуєте\", \"Використовуючи Chai, ви зможете писати тести, які описують ваші програмні вимоги, та бачити чи ваш застосунок відповідає їм \", \"У цьому курсі ви дізнаєтесь про припущення, глибоку рівність, правдивість, тестування API та інші основи тестування програм JavaScript \" ] }, \"advanced-node-and-express\": { \"title\": \"Просунутий Node та Express\", \"intro\": [ \"Настав час глибоко зануритися у Node js та Express js, створивши застосунок чату із системою входу\",\n          \"Щоб безпечно впровадити систему входу, вам потрібно буде дізнатися про автентифікацію Це акт перевірки особи або процесу \",\n          \"У цьому курсі ви дізнаєтесь, як використовувати Passport для управління автентифікацією, Pug для створення шаблонів багаторазового використання для швидкого створення інтерфейсу та вебсокети для комунікування в реальному часі між клієнтами та сервером",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 162,
    "total_chunks": 619
  },
  {
    "id": "4a5a6a3f610750a04a08bd2246011a47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"advanced-node-and-express\": { \"title\": \"Просунутий Node та Express\", \"intro\": [ \"Настав час глибоко зануритися у Node js та Express js, створивши застосунок чату із системою входу\", \"Щоб безпечно впровадити систему входу, вам потрібно буде дізнатися про автентифікацію Це акт перевірки особи або процесу \", \"У цьому курсі ви дізнаєтесь, як використовувати Passport для управління автентифікацією, Pug для створення шаблонів багаторазового використання для швидкого створення інтерфейсу та вебсокети для комунікування в реальному часі між клієнтами та сервером\"\n        ]\n      },\n      \"quality-assurance-projects\": {\n        \"title\": \"Проєкти «Забезпечення якості»\",\n        \"intro\": [\n          \"Тепер, коли ви добре розбираєтесь у frond end та back end, настав час застосувати всі навички та концепції, які ви вивчили до цього моменту Ви створите 5 різних вебзастосунків і напишете тести для кожного, щоб переконатися чи вони працюють і обробляють всі можливі сценарії",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 163,
    "total_chunks": 619
  },
  {
    "id": "93d0855e2cdb74c2f56863a42ce7266d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "автентифікацією, Pug для створення шаблонів багаторазового використання для швидкого створення інтерфейсу та вебсокети для комунікування в реальному часі між клієнтами та сервером\" ] }, \"quality-assurance-projects\": { \"title\": \"Проєкти «Забезпечення якості»\", \"intro\": [ \"Тепер, коли ви добре розбираєтесь у frond end та back end, настав час застосувати всі навички та концепції, які ви вивчили до цього моменту Ви створите 5 різних вебзастосунків і напишете тести для кожного, щоб переконатися чи вони працюють і обробляють всі можливі сценарії\",\n          \"Після завершення цих проєктів із забезпечення якості у вас буде ще 5 проєктів, а також нова сертифікація, якою можна похвалитись у портфоліо \"\n        ]\n      }\n    }\n  },\n  \"scientific-computing-with-python\": {\n    \"title\": \"Наукові обчислення з Python\",\n    \"intro\": [\n      \"Навчальна програма «Наукові обчислення з Python» допоможе отримати навички аналізу та маніпулювання даними за допомогою Python — потужної та універсальної мови програмування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 164,
    "total_chunks": 619
  },
  {
    "id": "5caaef636dba22fe4de73171c6ba4389",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "5 різних вебзастосунків і напишете тести для кожного, щоб переконатися чи вони працюють і обробляють всі можливі сценарії\", \"Після завершення цих проєктів із забезпечення якості у вас буде ще 5 проєктів, а також нова сертифікація, якою можна похвалитись у портфоліо \" ] } } }, \"scientific-computing-with-python\": { \"title\": \"Наукові обчислення з Python\", \"intro\": [ \"Навчальна програма «Наукові обчислення з Python» допоможе отримати навички аналізу та маніпулювання даними за допомогою Python — потужної та універсальної мови програмуванняВи вивчите ключові поняття, серед яких структури даних, алгоритми, об’єктноорієнтоване програмування, а також як виконувати складні обчислення за допомогою різноманітних інструментів \",\n      \"Цей комплексний курс ознайомить вас з основами наукових обчислень, включно зі структурами даних та алгоритмами",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 165,
    "total_chunks": 619
  },
  {
    "id": "22d6df1699c36d1a6d0754830567346e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "можна похвалитись у портфоліо \" ] } } }, \"scientific-computing-with-python\": { \"title\": \"Наукові обчислення з Python\", \"intro\": [ \"Навчальна програма «Наукові обчислення з Python» допоможе отримати навички аналізу та маніпулювання даними за допомогою Python — потужної та універсальної мови програмуванняВи вивчите ключові поняття, серед яких структури даних, алгоритми, об’єктноорієнтоване програмування, а також як виконувати складні обчислення за допомогою різноманітних інструментів \", \"Цей комплексний курс ознайомить вас з основами наукових обчислень, включно зі структурами даних та алгоритмами\"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"learn-string-manipulation-by-building-a-cipher\": {\n        \"title\": \"Вивчіть маніпуляцію рядками, створивши шифр\",\n        \"intro\": [\n          \"Python — це потужна та популярна мова програмування, яку широко використовують для науки про дані, візуалізації даних, веброзробки, розробки ігор, машинного навчання та багатьох інших галузей",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 166,
    "total_chunks": 619
  },
  {
    "id": "e01b5355acbdb4242aedf2b3253b0634",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ключові поняття, серед яких структури даних, алгоритми, об’єктноорієнтоване програмування, а також як виконувати складні обчислення за допомогою різноманітних інструментів \", \"Цей комплексний курс ознайомить вас з основами наукових обчислень, включно зі структурами даних та алгоритмами\" ], \"note\": \"\", \"blocks\": { \"learn-string-manipulation-by-building-a-cipher\": { \"title\": \"Вивчіть маніпуляцію рядками, створивши шифр\", \"intro\": [ \"Python — це потужна та популярна мова програмування, яку широко використовують для науки про дані, візуалізації даних, веброзробки, розробки ігор, машинного навчання та багатьох інших галузей\",\n          \"У цьому проєкті ви ознайомитеся з основними поняттями програмування на Python, серед яких змінні, функції, цикли та умовні інструкції Ви використаєте їх для написання своїх перших програм",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 167,
    "total_chunks": 619
  },
  {
    "id": "d0817d25551f1a9e011a8faddacf7392",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "наукових обчислень, включно зі структурами даних та алгоритмами\" ], \"note\": \"\", \"blocks\": { \"learn-string-manipulation-by-building-a-cipher\": { \"title\": \"Вивчіть маніпуляцію рядками, створивши шифр\", \"intro\": [ \"Python — це потужна та популярна мова програмування, яку широко використовують для науки про дані, візуалізації даних, веброзробки, розробки ігор, машинного навчання та багатьох інших галузей\", \"У цьому проєкті ви ознайомитеся з основними поняттями програмування на Python, серед яких змінні, функції, цикли та умовні інструкції Ви використаєте їх для написання своїх перших програм\"\n        ]\n      },\n      \"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm\": {\n        \"title\": \"Навчіться працювати з числами та рядками, імплементувавши алгоритм Луна\",\n        \"intro\": [\n          \"Алгоритм Луна широко використовується для перевірки помилок у різних програмах (наприклад, щоб перевірити номер кредитної картки)",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 168,
    "total_chunks": 619
  },
  {
    "id": "32dfdb5a39d64b652cfba85a36e03abd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "широко використовують для науки про дані, візуалізації даних, веброзробки, розробки ігор, машинного навчання та багатьох інших галузей\", \"У цьому проєкті ви ознайомитеся з основними поняттями програмування на Python, серед яких змінні, функції, цикли та умовні інструкції Ви використаєте їх для написання своїх перших програм\" ] }, \"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm\": { \"title\": \"Навчіться працювати з числами та рядками, імплементувавши алгоритм Луна\", \"intro\": [ \"Алгоритм Луна широко використовується для перевірки помилок у різних програмах (наприклад, щоб перевірити номер кредитної картки)\",\n          \"Створивши цей проєкт, ви отримаєте досвід роботи з чисельними обчисленнями та маніпулюванням рядками",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 169,
    "total_chunks": 619
  },
  {
    "id": "0e0aeb05ed24baebcf310c6d3809359d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та багатьох інших галузей\", \"У цьому проєкті ви ознайомитеся з основними поняттями програмування на Python, серед яких змінні, функції, цикли та умовні інструкції Ви використаєте їх для написання своїх перших програм\" ] }, \"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm\": { \"title\": \"Навчіться працювати з числами та рядками, імплементувавши алгоритм Луна\", \"intro\": [ \"Алгоритм Луна широко використовується для перевірки помилок у різних програмах (наприклад, щоб перевірити номер кредитної картки)\", \"Створивши цей проєкт, ви отримаєте досвід роботи з чисельними обчисленнями та маніпулюванням рядками\"\n        ]\n      },\n      \"learn-list-comprehension-by-building-a-case-converter-program\": {\n        \"title\": \"Вивчіть спискові вирази Python, створивши програму для зміни регістру\",\n        \"intro\": [\n          \"Спискові вирази — це спосіб створення нового списку Python з ітерабельних типів (списків, кортежів і рядків) без використання циклу for або методу списку append()",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 170,
    "total_chunks": 619
  },
  {
    "id": "2ca87f1d954f26b57b3b1106f15978a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та рядками, імплементувавши алгоритм Луна\", \"intro\": [ \"Алгоритм Луна широко використовується для перевірки помилок у різних програмах (наприклад, щоб перевірити номер кредитної картки)\", \"Створивши цей проєкт, ви отримаєте досвід роботи з чисельними обчисленнями та маніпулюванням рядками\" ] }, \"learn-list-comprehension-by-building-a-case-converter-program\": { \"title\": \"Вивчіть спискові вирази Python, створивши програму для зміни регістру\", \"intro\": [ \"Спискові вирази — це спосіб створення нового списку Python з ітерабельних типів (списків, кортежів і рядків) без використання циклу for або методу списку append()\",\n          \"У цьому проєкті ви напишете програму, яка приймає рядок у верхньому або нижньому верблюдячому регістрі, а потім перетворює його у зміїний регістр \",\n          \"Проєкт складається з двох етапів: спочатку ви використаєте цикл for, щоб імплементувати програму Потім ви дізнаєтесь, як використовувати спискові вирази замість циклу, щоб отримати ті ж результати",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 171,
    "total_chunks": 619
  },
  {
    "id": "825ad9db12052e5410fe2555aab79a72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"intro\": [ \"Спискові вирази — це спосіб створення нового списку Python з ітерабельних типів (списків, кортежів і рядків) без використання циклу for або методу списку append()\", \"У цьому проєкті ви напишете програму, яка приймає рядок у верхньому або нижньому верблюдячому регістрі, а потім перетворює його у зміїний регістр \", \"Проєкт складається з двох етапів: спочатку ви використаєте цикл for, щоб імплементувати програму Потім ви дізнаєтесь, як використовувати спискові вирази замість циклу, щоб отримати ті ж результати\"\n        ]\n      },\n      \"learn-regular-expressions-by-building-a-password-generator\": {\n        \"title\": \"Вивчіть регулярні вирази, створивши генератор паролів\",\n        \"intro\": [\n          \"Модуль Python — це файл, який містить набір інструкцій та визначень, які можна використати у коді \",\n          \"У цьому проєкті ви навчитеся імпортувати модулі зі стандартної бібліотеки Python Також ви дізнаєтесь, як використовувати регулярні вирази, створивши власну програму для генерації паролів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 172,
    "total_chunks": 619
  },
  {
    "id": "0857c5f32fcda477731c83417315804c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "спочатку ви використаєте цикл for, щоб імплементувати програму Потім ви дізнаєтесь, як використовувати спискові вирази замість циклу, щоб отримати ті ж результати\" ] }, \"learn-regular-expressions-by-building-a-password-generator\": { \"title\": \"Вивчіть регулярні вирази, створивши генератор паролів\", \"intro\": [ \"Модуль Python — це файл, який містить набір інструкцій та визначень, які можна використати у коді \", \"У цьому проєкті ви навчитеся імпортувати модулі зі стандартної бібліотеки Python Також ви дізнаєтесь, як використовувати регулярні вирази, створивши власну програму для генерації паролів\"\n        ]\n      },\n      \"learn-algorithm-design-by-building-a-shortest-path-algorithm\": {\n        \"title\": \"Вивчіть алгоритмічний дизайн, створивши алгоритм найкоротшого шляху\",\n        \"intro\": [\n          \"Алгоритми — це покрокові процедури, які розробники використовують для виконання розрахунків та розв’язання обчислювальних задач",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 173,
    "total_chunks": 619
  },
  {
    "id": "e0b79ec878d80a3c9ed648d1323ed23b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "вирази, створивши генератор паролів\", \"intro\": [ \"Модуль Python — це файл, який містить набір інструкцій та визначень, які можна використати у коді \", \"У цьому проєкті ви навчитеся імпортувати модулі зі стандартної бібліотеки Python Також ви дізнаєтесь, як використовувати регулярні вирази, створивши власну програму для генерації паролів\" ] }, \"learn-algorithm-design-by-building-a-shortest-path-algorithm\": { \"title\": \"Вивчіть алгоритмічний дизайн, створивши алгоритм найкоротшого шляху\", \"intro\": [ \"Алгоритми — це покрокові процедури, які розробники використовують для виконання розрахунків та розв’язання обчислювальних задач\",\n          \"У цьому проєкті ви дізнаєтеся, як використовувати функції, цикли, умовні інструкції та словникові вирази, щоб імплементувати алгоритм найкоротшого шляху",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 174,
    "total_chunks": 619
  },
  {
    "id": "617ec36a3dc8369fc80ce160af4c1a79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "використати у коді \", \"У цьому проєкті ви навчитеся імпортувати модулі зі стандартної бібліотеки Python Також ви дізнаєтесь, як використовувати регулярні вирази, створивши власну програму для генерації паролів\" ] }, \"learn-algorithm-design-by-building-a-shortest-path-algorithm\": { \"title\": \"Вивчіть алгоритмічний дизайн, створивши алгоритм найкоротшого шляху\", \"intro\": [ \"Алгоритми — це покрокові процедури, які розробники використовують для виконання розрахунків та розв’язання обчислювальних задач\", \"У цьому проєкті ви дізнаєтеся, як використовувати функції, цикли, умовні інструкції та словникові вирази, щоб імплементувати алгоритм найкоротшого шляху\"\n        ]\n      },\n      \"learn-recursion-by-solving-the-tower-of-hanoi-puzzle\": {\n        \"title\": \"Вивчіть рекурсію, розгадавши головоломку Ханойської вежі\",\n        \"intro\": [\n          \"Рекурсія — це підхід до програмування, який дозволяє розв’язати обчислювальні задачі за допомогою невеликої кількості коду",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 175,
    "total_chunks": 619
  },
  {
    "id": "ee5e2a3afe1dd02204e4690ec0f387ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"learn-algorithm-design-by-building-a-shortest-path-algorithm\": { \"title\": \"Вивчіть алгоритмічний дизайн, створивши алгоритм найкоротшого шляху\", \"intro\": [ \"Алгоритми — це покрокові процедури, які розробники використовують для виконання розрахунків та розв’язання обчислювальних задач\", \"У цьому проєкті ви дізнаєтеся, як використовувати функції, цикли, умовні інструкції та словникові вирази, щоб імплементувати алгоритм найкоротшого шляху\" ] }, \"learn-recursion-by-solving-the-tower-of-hanoi-puzzle\": { \"title\": \"Вивчіть рекурсію, розгадавши головоломку Ханойської вежі\", \"intro\": [ \"Рекурсія — це підхід до програмування, який дозволяє розв’язати обчислювальні задачі за допомогою невеликої кількості коду\",\n          \"У цьому проєкті ви почнете з підходу на основі циклів, щоб розв’язати математичну головоломку Ханойської вежі Потім ви дізнаєтеся, як імплементувати рекурсивний розв’язок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 176,
    "total_chunks": 619
  },
  {
    "id": "6a46182219db7abdaecb839c80af1367",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розрахунків та розв’язання обчислювальних задач\", \"У цьому проєкті ви дізнаєтеся, як використовувати функції, цикли, умовні інструкції та словникові вирази, щоб імплементувати алгоритм найкоротшого шляху\" ] }, \"learn-recursion-by-solving-the-tower-of-hanoi-puzzle\": { \"title\": \"Вивчіть рекурсію, розгадавши головоломку Ханойської вежі\", \"intro\": [ \"Рекурсія — це підхід до програмування, який дозволяє розв’язати обчислювальні задачі за допомогою невеликої кількості коду\", \"У цьому проєкті ви почнете з підходу на основі циклів, щоб розв’язати математичну головоломку Ханойської вежі Потім ви дізнаєтеся, як імплементувати рекурсивний розв’язок\"\n        ]\n      },\n      \"learn-data-structures-by-building-the-merge-sort-algorithm\": {\n        \"title\": \"Вивчіть структури даних, створивши алгоритм сортування злиттям\",\n        \"intro\": [\n          \"Алгоритм сортування злиттям — це алгоритм сортування, заснований на принципі «розділяй і володарюй»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 177,
    "total_chunks": 619
  },
  {
    "id": "65002b10bd6625b1295bb5930695dd45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Вивчіть рекурсію, розгадавши головоломку Ханойської вежі\", \"intro\": [ \"Рекурсія — це підхід до програмування, який дозволяє розв’язати обчислювальні задачі за допомогою невеликої кількості коду\", \"У цьому проєкті ви почнете з підходу на основі циклів, щоб розв’язати математичну головоломку Ханойської вежі Потім ви дізнаєтеся, як імплементувати рекурсивний розв’язок\" ] }, \"learn-data-structures-by-building-the-merge-sort-algorithm\": { \"title\": \"Вивчіть структури даних, створивши алгоритм сортування злиттям\", \"intro\": [ \"Алгоритм сортування злиттям — це алгоритм сортування, заснований на принципі «розділяй і володарюй»\",\n          \"У цьому проєкті ви навчитеся взаємодіяти зі структурами даних, сортуючи список випадкових чисел за допомогою алгоритму сортування злиттям",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 178,
    "total_chunks": 619
  },
  {
    "id": "ba5708b76db3633df5ad830adb6387d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розв’язати обчислювальні задачі за допомогою невеликої кількості коду\", \"У цьому проєкті ви почнете з підходу на основі циклів, щоб розв’язати математичну головоломку Ханойської вежі Потім ви дізнаєтеся, як імплементувати рекурсивний розв’язок\" ] }, \"learn-data-structures-by-building-the-merge-sort-algorithm\": { \"title\": \"Вивчіть структури даних, створивши алгоритм сортування злиттям\", \"intro\": [ \"Алгоритм сортування злиттям — це алгоритм сортування, заснований на принципі «розділяй і володарюй»\", \"У цьому проєкті ви навчитеся взаємодіяти зі структурами даних, сортуючи список випадкових чисел за допомогою алгоритму сортування злиттям\"\n        ]\n      },\n      \"learn-classes-and-objects-by-building-a-sudoku-solver\": {\n        \"title\": \"Вивчіть класи та об’єкти, створивши розв’язувач судоку\",\n        \"intro\": [\n          \"Класи та об’єкти є важливими поняттями програмування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 179,
    "total_chunks": 619
  },
  {
    "id": "c253725e51d9681078fa639e5e48f78a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "головоломку Ханойської вежі Потім ви дізнаєтеся, як імплементувати рекурсивний розв’язок\" ] }, \"learn-data-structures-by-building-the-merge-sort-algorithm\": { \"title\": \"Вивчіть структури даних, створивши алгоритм сортування злиттям\", \"intro\": [ \"Алгоритм сортування злиттям — це алгоритм сортування, заснований на принципі «розділяй і володарюй»\", \"У цьому проєкті ви навчитеся взаємодіяти зі структурами даних, сортуючи список випадкових чисел за допомогою алгоритму сортування злиттям\" ] }, \"learn-classes-and-objects-by-building-a-sudoku-solver\": { \"title\": \"Вивчіть класи та об’єкти, створивши розв’язувач судоку\", \"intro\": [ \"Класи та об’єкти є важливими поняттями програмуванняЦі інструменти об’єктноорієнтованого програмування допомагають розробникам з модульністю коду, абстракцією та читабельністю, а також сприяють повторному використанню",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 180,
    "total_chunks": 619
  },
  {
    "id": "c29e7a9a29e2209044d8a619aa679926",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "структури даних, створивши алгоритм сортування злиттям\", \"intro\": [ \"Алгоритм сортування злиттям — це алгоритм сортування, заснований на принципі «розділяй і володарюй»\", \"У цьому проєкті ви навчитеся взаємодіяти зі структурами даних, сортуючи список випадкових чисел за допомогою алгоритму сортування злиттям\" ] }, \"learn-classes-and-objects-by-building-a-sudoku-solver\": { \"title\": \"Вивчіть класи та об’єкти, створивши розв’язувач судоку\", \"intro\": [ \"Класи та об’єкти є важливими поняттями програмуванняЦі інструменти об’єктноорієнтованого програмування допомагають розробникам з модульністю коду, абстракцією та читабельністю, а також сприяють повторному використанню\",\n          \"У цьому проєкті з розв’язувачем судоку ви дізнаєтесь, як використовувати класи та об’єкти, щоб створити сітку судоку та вирішити цю головоломку",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 181,
    "total_chunks": 619
  },
  {
    "id": "28ff28aea5be0e3ca39e87af5bd42739",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У цьому проєкті ви навчитеся взаємодіяти зі структурами даних, сортуючи список випадкових чисел за допомогою алгоритму сортування злиттям\" ] }, \"learn-classes-and-objects-by-building-a-sudoku-solver\": { \"title\": \"Вивчіть класи та об’єкти, створивши розв’язувач судоку\", \"intro\": [ \"Класи та об’єкти є важливими поняттями програмуванняЦі інструменти об’єктноорієнтованого програмування допомагають розробникам з модульністю коду, абстракцією та читабельністю, а також сприяють повторному використанню\", \"У цьому проєкті з розв’язувачем судоку ви дізнаєтесь, як використовувати класи та об’єкти, щоб створити сітку судоку та вирішити цю головоломку\"\n        ]\n      },\n      \"learn-tree-traversal-by-building-a-binary-search-tree\": {\n        \"title\": \"Вивчіть обхід дерева, створивши бінарне дерево пошуку\",\n        \"intro\": [\n          \"Бінарне дерево пошуку — це поширена структура даних, де дані впорядковані ієрархічно",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 182,
    "total_chunks": 619
  },
  {
    "id": "c6d3db33086c773305fff4e02bdc7bda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "об’єкти, створивши розв’язувач судоку\", \"intro\": [ \"Класи та об’єкти є важливими поняттями програмуванняЦі інструменти об’єктноорієнтованого програмування допомагають розробникам з модульністю коду, абстракцією та читабельністю, а також сприяють повторному використанню\", \"У цьому проєкті з розв’язувачем судоку ви дізнаєтесь, як використовувати класи та об’єкти, щоб створити сітку судоку та вирішити цю головоломку\" ] }, \"learn-tree-traversal-by-building-a-binary-search-tree\": { \"title\": \"Вивчіть обхід дерева, створивши бінарне дерево пошуку\", \"intro\": [ \"Бінарне дерево пошуку — це поширена структура даних, де дані впорядковані ієрархічно\",\n          \"У цьому проєкті ви дізнаєтесь, як сконструювати власне бінарне дерево пошуку і виконати серединний обхід Також ви ознайомитеся з ключовими операціями (наприклад, вставка, пошук та видалення)",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 183,
    "total_chunks": 619
  },
  {
    "id": "b9cd87ccda34fa010aae9e640dd23bfe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "сприяють повторному використанню\", \"У цьому проєкті з розв’язувачем судоку ви дізнаєтесь, як використовувати класи та об’єкти, щоб створити сітку судоку та вирішити цю головоломку\" ] }, \"learn-tree-traversal-by-building-a-binary-search-tree\": { \"title\": \"Вивчіть обхід дерева, створивши бінарне дерево пошуку\", \"intro\": [ \"Бінарне дерево пошуку — це поширена структура даних, де дані впорядковані ієрархічно\", \"У цьому проєкті ви дізнаєтесь, як сконструювати власне бінарне дерево пошуку і виконати серединний обхід Також ви ознайомитеся з ключовими операціями (наприклад, вставка, пошук та видалення)\"\n        ]\n      },\n      \"learn-lambda-functions-by-building-an-expense-tracker\": {\n        \"title\": \"Вивчіть лямбда-функції, створивши трекер витрат\",\n        \"intro\": [\n          \"Завдяки лямбда-функціям можна написати невеликі одноразові функції у своєму коді \",\n          \"У цьому проєкті ви дослідите потужність лямбда-функцій, створивши трекер витрат",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 184,
    "total_chunks": 619
  },
  {
    "id": "c2c46e661483a1dfff32307c18cfec66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "бінарне дерево пошуку\", \"intro\": [ \"Бінарне дерево пошуку — це поширена структура даних, де дані впорядковані ієрархічно\", \"У цьому проєкті ви дізнаєтесь, як сконструювати власне бінарне дерево пошуку і виконати серединний обхід Також ви ознайомитеся з ключовими операціями (наприклад, вставка, пошук та видалення)\" ] }, \"learn-lambda-functions-by-building-an-expense-tracker\": { \"title\": \"Вивчіть лямбда-функції, створивши трекер витрат\", \"intro\": [ \"Завдяки лямбда-функціям можна написати невеликі одноразові функції у своєму коді \", \"У цьому проєкті ви дослідите потужність лямбда-функцій, створивши трекер витратКінцевий застосунок продемонструє, як можна використовувати лямбда-функції для ефективних і оптимізованих операцій \"\n        ]\n      },\n      \"build-an-arithmetic-formatter-project\": {\n        \"title\": \"Проєкт «Створіть арифметичний форматор»\",\n        \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 185,
    "total_chunks": 619
  },
  {
    "id": "6b896c4c48ca4701c2f90b8750230298",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "виконати серединний обхід Також ви ознайомитеся з ключовими операціями (наприклад, вставка, пошук та видалення)\" ] }, \"learn-lambda-functions-by-building-an-expense-tracker\": { \"title\": \"Вивчіть лямбда-функції, створивши трекер витрат\", \"intro\": [ \"Завдяки лямбда-функціям можна написати невеликі одноразові функції у своєму коді \", \"У цьому проєкті ви дослідите потужність лямбда-функцій, створивши трекер витратКінцевий застосунок продемонструє, як можна використовувати лямбда-функції для ефективних і оптимізованих операцій \" ] }, \"build-an-arithmetic-formatter-project\": { \"title\": \"Проєкт «Створіть арифметичний форматор»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"]\n      },\n      \"build-a-time-calculator-project\": {\n        \"title\": \"Проєкт «Створіть калькулятор часу»\",\n        \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 186,
    "total_chunks": 619
  },
  {
    "id": "14c8b21d40362daf1db5d8d2f86185e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"learn-lambda-functions-by-building-an-expense-tracker\": { \"title\": \"Вивчіть лямбда-функції, створивши трекер витрат\", \"intro\": [ \"Завдяки лямбда-функціям можна написати невеликі одноразові функції у своєму коді \", \"У цьому проєкті ви дослідите потужність лямбда-функцій, створивши трекер витратКінцевий застосунок продемонструє, як можна використовувати лямбда-функції для ефективних і оптимізованих операцій \" ] }, \"build-an-arithmetic-formatter-project\": { \"title\": \"Проєкт «Створіть арифметичний форматор»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-time-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор часу»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"]\n      },\n      \"build-a-budget-app-project\": {\n        \"title\": \"Проєкт «Створіть застосунок для ведення бюджету»\",\n        \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 187,
    "total_chunks": 619
  },
  {
    "id": "327fa9b52d8b1f26fcb10d8bdfc99602",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "своєму коді \", \"У цьому проєкті ви дослідите потужність лямбда-функцій, створивши трекер витратКінцевий застосунок продемонструє, як можна використовувати лямбда-функції для ефективних і оптимізованих операцій \" ] }, \"build-an-arithmetic-formatter-project\": { \"title\": \"Проєкт «Створіть арифметичний форматор»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-time-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор часу»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-budget-app-project\": { \"title\": \"Проєкт «Створіть застосунок для ведення бюджету»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"]\n      },\n      \"build-a-polygon-area-calculator-project\": {\n        \"title\": \"Проєкт «Створіть калькулятор площі багатокутника»\",\n        \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 188,
    "total_chunks": 619
  },
  {
    "id": "368a41ac7da0cb645e39df7cfee921d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "використовувати лямбда-функції для ефективних і оптимізованих операцій \" ] }, \"build-an-arithmetic-formatter-project\": { \"title\": \"Проєкт «Створіть арифметичний форматор»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-time-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор часу»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-budget-app-project\": { \"title\": \"Проєкт «Створіть застосунок для ведення бюджету»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-polygon-area-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор площі багатокутника»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"]\n      },\n      \"build-a-probability-calculator-project\": {\n        \"title\": \"Проєкт «Створіть калькулятор вірогідностей»\",\n        \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 189,
    "total_chunks": 619
  },
  {
    "id": "7db7af183280b561bf8cac968d153393",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "форматор»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-time-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор часу»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-budget-app-project\": { \"title\": \"Проєкт «Створіть застосунок для ведення бюджету»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-polygon-area-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор площі багатокутника»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-probability-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор вірогідностей»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"]\n      },\n      \"learn-interfaces-by-building-an-equation-solver\": {\n        \"title\": \"Вивчіть інтерфейси, створивши розв’язувач рівнянь\",\n        \"intro\": [\n          \"Абстрактні класи дозволяють визначити формальні інтерфейси — а саме об’єкти, які виступають як шаблони для класів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 190,
    "total_chunks": 619
  },
  {
    "id": "9bcdbe9a92a8b3ce37029acc76b70d2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Проєкт «Створіть застосунок для ведення бюджету»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-polygon-area-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор площі багатокутника»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-probability-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор вірогідностей»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"learn-interfaces-by-building-an-equation-solver\": { \"title\": \"Вивчіть інтерфейси, створивши розв’язувач рівнянь\", \"intro\": [ \"Абстрактні класи дозволяють визначити формальні інтерфейси — а саме об’єкти, які виступають як шаблони для класів\",\n          \"У цьому проєкті ви дізнаєтесь, як реалізувати інтерфейс у Python, створивши просту програму для розв’язку рівнянь",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 191,
    "total_chunks": 619
  },
  {
    "id": "b4c63adea486d3ac39dfbcdb0c892a32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"build-a-polygon-area-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор площі багатокутника»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"build-a-probability-calculator-project\": { \"title\": \"Проєкт «Створіть калькулятор вірогідностей»\", \"intro\": [\"Цей проєкт потрібно виконати, щоб отримати сертифікацію\"] }, \"learn-interfaces-by-building-an-equation-solver\": { \"title\": \"Вивчіть інтерфейси, створивши розв’язувач рівнянь\", \"intro\": [ \"Абстрактні класи дозволяють визначити формальні інтерфейси — а саме об’єкти, які виступають як шаблони для класів\", \"У цьому проєкті ви дізнаєтесь, як реалізувати інтерфейс у Python, створивши просту програму для розв’язку рівнянь\"\n        ]\n      },\n      \"learn-special-methods-by-building-a-vector-space\": {\n        \"title\": \"Вивчіть спеціальні методи, створивши векторний простір\",\n        \"intro\": [\n          \"Спеціальні методи в Python викликаються у відповідь на конкретні операції та дозволяють налаштувати поведінку об’єктів у деталізований й ефективний спосіб",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 192,
    "total_chunks": 619
  },
  {
    "id": "798d6b5c2bc37926a43f82e4f799b685",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"learn-interfaces-by-building-an-equation-solver\": { \"title\": \"Вивчіть інтерфейси, створивши розв’язувач рівнянь\", \"intro\": [ \"Абстрактні класи дозволяють визначити формальні інтерфейси — а саме об’єкти, які виступають як шаблони для класів\", \"У цьому проєкті ви дізнаєтесь, як реалізувати інтерфейс у Python, створивши просту програму для розв’язку рівнянь\" ] }, \"learn-special-methods-by-building-a-vector-space\": { \"title\": \"Вивчіть спеціальні методи, створивши векторний простір\", \"intro\": [ \"Спеціальні методи в Python викликаються у відповідь на конкретні операції та дозволяють налаштувати поведінку об’єктів у деталізований й ефективний спосіб\",\n          \"У цьому проєкті ви дослідите деякі з найпоширеніших спеціальних методів, вивчаючи вектори через створення векторного простору",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 193,
    "total_chunks": 619
  },
  {
    "id": "992257ca5c57b4a7b2c54c2b71bb18c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "інтерфейси — а саме об’єкти, які виступають як шаблони для класів\", \"У цьому проєкті ви дізнаєтесь, як реалізувати інтерфейс у Python, створивши просту програму для розв’язку рівнянь\" ] }, \"learn-special-methods-by-building-a-vector-space\": { \"title\": \"Вивчіть спеціальні методи, створивши векторний простір\", \"intro\": [ \"Спеціальні методи в Python викликаються у відповідь на конкретні операції та дозволяють налаштувати поведінку об’єктів у деталізований й ефективний спосіб\", \"У цьому проєкті ви дослідите деякі з найпоширеніших спеціальних методів, вивчаючи вектори через створення векторного простору\"\n        ]\n      },\n      \"learn-encapsulation-by-building-a-projectile-trajectory-calculator\": {\n        \"title\": \"Вивчіть інкапсуляцію, створивши калькулятор траєкторії налітної частинки\",\n        \"intro\": [\n          \"Інкапсуляція — це основний принцип ООП, що базується на написанні коду, який обмежує прямий доступ до даних",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 194,
    "total_chunks": 619
  },
  {
    "id": "724b66d0cda01a046526e2593715f047",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"title\": \"Вивчіть спеціальні методи, створивши векторний простір\", \"intro\": [ \"Спеціальні методи в Python викликаються у відповідь на конкретні операції та дозволяють налаштувати поведінку об’єктів у деталізований й ефективний спосіб\", \"У цьому проєкті ви дослідите деякі з найпоширеніших спеціальних методів, вивчаючи вектори через створення векторного простору\" ] }, \"learn-encapsulation-by-building-a-projectile-trajectory-calculator\": { \"title\": \"Вивчіть інкапсуляцію, створивши калькулятор траєкторії налітної частинки\", \"intro\": [ \"Інкапсуляція — це основний принцип ООП, що базується на написанні коду, який обмежує прямий доступ до даних\",\n          \"У цьому проєкті ви відкриєте нові поняття, пов’язані з інкапсуляцією, серед яких гетери, сетери та спотворення імен, і використовуватимете їх разом з тим, що вже вивчили, щоб створити програму, яка обчислює траєкторію налітної частинки",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 195,
    "total_chunks": 619
  },
  {
    "id": "22728e352cac559b9f43fd509172d2d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "деякі з найпоширеніших спеціальних методів, вивчаючи вектори через створення векторного простору\" ] }, \"learn-encapsulation-by-building-a-projectile-trajectory-calculator\": { \"title\": \"Вивчіть інкапсуляцію, створивши калькулятор траєкторії налітної частинки\", \"intro\": [ \"Інкапсуляція — це основний принцип ООП, що базується на написанні коду, який обмежує прямий доступ до даних\", \"У цьому проєкті ви відкриєте нові поняття, пов’язані з інкапсуляцією, серед яких гетери, сетери та спотворення імен, і використовуватимете їх разом з тим, що вже вивчили, щоб створити програму, яка обчислює траєкторію налітної частинки\"\n        ]\n      },\n      \"learn-the-bisection-method-by-finding-the-square-root-of-a-number\": {\n        \"title\": \"Вивчіть метод бісекції, знайшовши квадратний корінь числа\",\n        \"intro\": [\n          \"Числові методи використовують для наближеного розв‘язку математичних задач, які важко або неможливо розв’язати аналітично",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 196,
    "total_chunks": 619
  },
  {
    "id": "7119debc1d7915fa24905bc550dc3094",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "основний принцип ООП, що базується на написанні коду, який обмежує прямий доступ до даних\", \"У цьому проєкті ви відкриєте нові поняття, пов’язані з інкапсуляцією, серед яких гетери, сетери та спотворення імен, і використовуватимете їх разом з тим, що вже вивчили, щоб створити програму, яка обчислює траєкторію налітної частинки\" ] }, \"learn-the-bisection-method-by-finding-the-square-root-of-a-number\": { \"title\": \"Вивчіть метод бісекції, знайшовши квадратний корінь числа\", \"intro\": [ \"Числові методи використовують для наближеного розв‘язку математичних задач, які важко або неможливо розв’язати аналітично\",\n          \"У цьому проєкті ви дізнаєтесь про числовий метод бісекції, щоб знайти квадратний корінь числа, поступово звужуючи можливий діапазон його значень \"\n        ]\n      }\n    }\n  },\n  \"data-analysis-with-python\": {\n    \"title\": \"Аналіз даних з Python\",\n    \"intro\": [\n      \"Аналіз даних існує вже давно",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 197,
    "total_chunks": 619
  },
  {
    "id": "e5cc1fedee26ff9833e384a256581b5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "вивчили, щоб створити програму, яка обчислює траєкторію налітної частинки\" ] }, \"learn-the-bisection-method-by-finding-the-square-root-of-a-number\": { \"title\": \"Вивчіть метод бісекції, знайшовши квадратний корінь числа\", \"intro\": [ \"Числові методи використовують для наближеного розв‘язку математичних задач, які важко або неможливо розв’язати аналітично\", \"У цьому проєкті ви дізнаєтесь про числовий метод бісекції, щоб знайти квадратний корінь числа, поступово звужуючи можливий діапазон його значень \" ] } } }, \"data-analysis-with-python\": { \"title\": \"Аналіз даних з Python\", \"intro\": [ \"Аналіз даних існує вже давноАле ще кілька років тому розробники практикували його за допомогою дорогих інструментів із закритим кодом, таких як Tableau Але нещодавно Python, SQL та інші відкриті бібліотеки назавжди змінили аналіз даних \",\n      \"У сертифікації «Аналіз даних з Python» ви дізнаєтесь про основи аналізу даних за допомогою Python",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 198,
    "total_chunks": 619
  },
  {
    "id": "9f84e348a93ff256959c106108fb129a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "бісекції, щоб знайти квадратний корінь числа, поступово звужуючи можливий діапазон його значень \" ] } } }, \"data-analysis-with-python\": { \"title\": \"Аналіз даних з Python\", \"intro\": [ \"Аналіз даних існує вже давноАле ще кілька років тому розробники практикували його за допомогою дорогих інструментів із закритим кодом, таких як Tableau Але нещодавно Python, SQL та інші відкриті бібліотеки назавжди змінили аналіз даних \", \"У сертифікації «Аналіз даних з Python» ви дізнаєтесь про основи аналізу даних за допомогою PythonНаприкінці цієї сертифікації ви будете знати, як читати дані з таких джерел, як CSV та SQL, і як використовувати бібліотеки, такі як Numpy, Pandas, Matplotlib та Seaborn для обробки та візуалізації даних \"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"data-analysis-with-python-course\": {\n        \"title\": \"Аналіз даних з Python\",\n        \"intro\": [\n          \"У цих комплексних відеокурсах, створених Сантьяго Басульто, ви дізнаєтесь про весь процес аналізу даних",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 199,
    "total_chunks": 619
  },
  {
    "id": "9d3d422094677300900499c18827020b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\", \"У сертифікації «Аналіз даних з Python» ви дізнаєтесь про основи аналізу даних за допомогою PythonНаприкінці цієї сертифікації ви будете знати, як читати дані з таких джерел, як CSV та SQL, і як використовувати бібліотеки, такі як Numpy, Pandas, Matplotlib та Seaborn для обробки та візуалізації даних \" ], \"note\": \"\", \"blocks\": { \"data-analysis-with-python-course\": { \"title\": \"Аналіз даних з Python\", \"intro\": [ \"У цих комплексних відеокурсах, створених Сантьяго Басульто, ви дізнаєтесь про весь процес аналізу данихВи будете зчитувати дані з різних джерел (CSV, SQL, Excel), обробляти ці дані за допомогою NumPy та Pandas і візуалізовувати їх за допомогою Matplotlib та Seaborn \",\n          \"Крім того, ми включили детальний курс по Jupyter Notebook та короткий довідник з Python, щоб оновити ваші навички програмування \"\n        ]\n      },\n      \"numpy\": {\n        \"title\": \"Numpy\",\n        \"intro\": [\n          \"Вивчіть основи бібліотеки NumPy у наступному відеокурсі, створеному Кейтом Галлі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 200,
    "total_chunks": 619
  },
  {
    "id": "148b05d0a55048f0904e22c633609cf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "комплексних відеокурсах, створених Сантьяго Басульто, ви дізнаєтесь про весь процес аналізу данихВи будете зчитувати дані з різних джерел (CSV, SQL, Excel), обробляти ці дані за допомогою NumPy та Pandas і візуалізовувати їх за допомогою Matplotlib та Seaborn \", \"Крім того, ми включили детальний курс по Jupyter Notebook та короткий довідник з Python, щоб оновити ваші навички програмування \" ] }, \"numpy\": { \"title\": \"Numpy\", \"intro\": [ \"Вивчіть основи бібліотеки NumPy у наступному відеокурсі, створеному Кейтом Галлі\",\n          \"У цьому курсі ви дізнаєтесь, як працює NumPy і як він порівнюється із вбудованими списками Python Ви також дізнаєтесь, як писати код з NumPy, індексувати, змінювати форму, застосовувати статистику та багато іншого \"\n        ]\n      },\n      \"data-analysis-with-python-projects\": {\n        \"title\": \"Проєкти «Аналіз даних з Python»\",\n        \"intro\": [\n          \"Існує багато способів аналізу даних за допомогою Python",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 201,
    "total_chunks": 619
  },
  {
    "id": "94872a837c006bf91721cced700105e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "оновити ваші навички програмування \" ] }, \"numpy\": { \"title\": \"Numpy\", \"intro\": [ \"Вивчіть основи бібліотеки NumPy у наступному відеокурсі, створеному Кейтом Галлі\", \"У цьому курсі ви дізнаєтесь, як працює NumPy і як він порівнюється із вбудованими списками Python Ви також дізнаєтесь, як писати код з NumPy, індексувати, змінювати форму, застосовувати статистику та багато іншого \" ] }, \"data-analysis-with-python-projects\": { \"title\": \"Проєкти «Аналіз даних з Python»\", \"intro\": [ \"Існує багато способів аналізу даних за допомогою PythonЗавершивши ці проєкти, ви продемонструєте, що володієте хорошими фундаментальними знаннями аналізу даних, використовуючи Python \",\n          \"Завершіть всі проєкти, щоб отримати сертифікацію «Аналіз даних з Python»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 202,
    "total_chunks": 619
  },
  {
    "id": "62c8f4ecf283a247f7a6593ba9bfd4ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цьому курсі ви дізнаєтесь, як працює NumPy і як він порівнюється із вбудованими списками Python Ви також дізнаєтесь, як писати код з NumPy, індексувати, змінювати форму, застосовувати статистику та багато іншого \" ] }, \"data-analysis-with-python-projects\": { \"title\": \"Проєкти «Аналіз даних з Python»\", \"intro\": [ \"Існує багато способів аналізу даних за допомогою PythonЗавершивши ці проєкти, ви продемонструєте, що володієте хорошими фундаментальними знаннями аналізу даних, використовуючи Python \", \"Завершіть всі проєкти, щоб отримати сертифікацію «Аналіз даних з Python»\"\n        ]\n      }\n    }\n  },\n  \"information-security\": {\n    \"title\": \"Інформаційна безпека\",\n    \"intro\": [\n      \"Завдяки всьому, що ми робимо в Інтернеті, величезна кількість конфіденційної інформації знаходиться в зоні ризику: електронні адреси, паролі, номери телефонів тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 203,
    "total_chunks": 619
  },
  {
    "id": "49e64eb0d3c275390f507e774a6f78b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "] }, \"data-analysis-with-python-projects\": { \"title\": \"Проєкти «Аналіз даних з Python»\", \"intro\": [ \"Існує багато способів аналізу даних за допомогою PythonЗавершивши ці проєкти, ви продемонструєте, що володієте хорошими фундаментальними знаннями аналізу даних, використовуючи Python \", \"Завершіть всі проєкти, щоб отримати сертифікацію «Аналіз даних з Python»\" ] } } }, \"information-security\": { \"title\": \"Інформаційна безпека\", \"intro\": [ \"Завдяки всьому, що ми робимо в Інтернеті, величезна кількість конфіденційної інформації знаходиться в зоні ризику: електронні адреси, паролі, номери телефонів тощо\",\n      \"Завдяки сертифікації «Інформаційна безпека» ви створите безпечний вебзастосунок за допомогою HelmetJS, щоб вивчити основи захисту інформації людей в Інтернеті \",\n      \"Ви також створите TCP client, а ще Nmap і сканер портів у Python Це допоможе вам вивчити основи тесту на проникнення — важливого компоненту надійної інформаційної безпеки",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 204,
    "total_chunks": 619
  },
  {
    "id": "0c2802305097270d2b24bb2c598573a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"information-security\": { \"title\": \"Інформаційна безпека\", \"intro\": [ \"Завдяки всьому, що ми робимо в Інтернеті, величезна кількість конфіденційної інформації знаходиться в зоні ризику: електронні адреси, паролі, номери телефонів тощо\", \"Завдяки сертифікації «Інформаційна безпека» ви створите безпечний вебзастосунок за допомогою HelmetJS, щоб вивчити основи захисту інформації людей в Інтернеті \", \"Ви також створите TCP client, а ще Nmap і сканер портів у Python Це допоможе вам вивчити основи тесту на проникнення — важливого компоненту надійної інформаційної безпеки\"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"information-security-with-helmetjs\": {\n        \"title\": \"Інформаційна безпека з HelmetJS\",\n        \"intro\": [\n          \"Цей курс програмування зосереджений на HelmetJS, типі проміжного програмного забезпечення для застосунків на основі Express, яке автоматично встановлює заголовки HTTP Таким чином, він може запобігти випадковому передаванню конфіденційної інформації між сервером та клієнтом",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 205,
    "total_chunks": 619
  },
  {
    "id": "302049ee12a3539f071278417228a137",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Інтернеті \", \"Ви також створите TCP client, а ще Nmap і сканер портів у Python Це допоможе вам вивчити основи тесту на проникнення — важливого компоненту надійної інформаційної безпеки\" ], \"note\": \"\", \"blocks\": { \"information-security-with-helmetjs\": { \"title\": \"Інформаційна безпека з HelmetJS\", \"intro\": [ \"Цей курс програмування зосереджений на HelmetJS, типі проміжного програмного забезпечення для застосунків на основі Express, яке автоматично встановлює заголовки HTTP Таким чином, він може запобігти випадковому передаванню конфіденційної інформації між сервером та клієнтом\",\n          \"Завершення курсів допоможе вам зрозуміти, як захистити свій сайт від зловмисної поведінки \"\n        ]\n      },\n      \"python-for-penetration-testing\": {\n        \"title\": \"Python для тесту на проникнення\",\n        \"intro\": [\n          \"Ці відеокурси навчать вас тесту на проникнення за допомогою Python Також відомий як пен тест (pen test), тест на проникнення — це змодельована атака на систему задля перевірки на вразливі місця",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 206,
    "total_chunks": 619
  },
  {
    "id": "2b4b87a8cd81b834b261a2b732d65597",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "основі Express, яке автоматично встановлює заголовки HTTP Таким чином, він може запобігти випадковому передаванню конфіденційної інформації між сервером та клієнтом\", \"Завершення курсів допоможе вам зрозуміти, як захистити свій сайт від зловмисної поведінки \" ] }, \"python-for-penetration-testing\": { \"title\": \"Python для тесту на проникнення\", \"intro\": [ \"Ці відеокурси навчать вас тесту на проникнення за допомогою Python Також відомий як пен тест (pen test), тест на проникнення — це змодельована атака на систему задля перевірки на вразливі місця\",\n          \"У цьому курсі ви дізнаєтеся про сокети, створите TCP сервер та клієнт, створите Nmap сканер і інші інструменти та техніки, які пен тестувальники використовують щоденно \"\n        ]\n      },\n      \"information-security-projects\": {\n        \"title\": \"Проєкти «Інформаційна безпека»\",\n        \"intro\": [\n          \"Настав час перевірити ваші навички з інформаційної безпеки на практиці",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 207,
    "total_chunks": 619
  },
  {
    "id": "5a2c0ab752a4177289730feaa448d2e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "відеокурси навчать вас тесту на проникнення за допомогою Python Також відомий як пен тест (pen test), тест на проникнення — це змодельована атака на систему задля перевірки на вразливі місця\", \"У цьому курсі ви дізнаєтеся про сокети, створите TCP сервер та клієнт, створите Nmap сканер і інші інструменти та техніки, які пен тестувальники використовують щоденно \" ] }, \"information-security-projects\": { \"title\": \"Проєкти «Інформаційна безпека»\", \"intro\": [ \"Настав час перевірити ваші навички з інформаційної безпеки на практиціЦі проєкти дадуть вам шанс застосувати всі набуті вміння, вивчені правила та поняття з інформаційної безпеки \",\n          \"Коли ви закінчите, у вас буде достатньо проєктів з інформаційної безпеки за плечима, разом з сертифікацією, якою ви можете похизуватись перед друзям, сім’єю та роботодавцями",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 208,
    "total_chunks": 619
  },
  {
    "id": "6d4b366a48a0d00cb420bb8caa1f5c7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "клієнт, створите Nmap сканер і інші інструменти та техніки, які пен тестувальники використовують щоденно \" ] }, \"information-security-projects\": { \"title\": \"Проєкти «Інформаційна безпека»\", \"intro\": [ \"Настав час перевірити ваші навички з інформаційної безпеки на практиціЦі проєкти дадуть вам шанс застосувати всі набуті вміння, вивчені правила та поняття з інформаційної безпеки \", \"Коли ви закінчите, у вас буде достатньо проєктів з інформаційної безпеки за плечима, разом з сертифікацією, якою ви можете похизуватись перед друзям, сім’єю та роботодавцями\"\n        ]\n      }\n    }\n  },\n  \"machine-learning-with-python\": {\n    \"title\": \"Машинне навчання з Python\",\n    \"intro\": [\n      \"Машинне навчання має багато практичних застосунків, які ви можете використовувати у своїх проєктах чи роботі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 209,
    "total_chunks": 619
  },
  {
    "id": "3de376b856c840e84282e01795399d10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ваші навички з інформаційної безпеки на практиціЦі проєкти дадуть вам шанс застосувати всі набуті вміння, вивчені правила та поняття з інформаційної безпеки \", \"Коли ви закінчите, у вас буде достатньо проєктів з інформаційної безпеки за плечима, разом з сертифікацією, якою ви можете похизуватись перед друзям, сім’єю та роботодавцями\" ] } } }, \"machine-learning-with-python\": { \"title\": \"Машинне навчання з Python\", \"intro\": [ \"Машинне навчання має багато практичних застосунків, які ви можете використовувати у своїх проєктах чи роботі\",\n      \"У сертифікації «Машинне навчання з Python» ви використовуватимете фреймворк TensorFlow, аби створити декілька нейронних мереж і вивчити складніші техніки, серед яких обробка природної мови й навчання з підкріпленням \",\n      \"Також ви зануритеся у нейронні мережі та вивчите правила, за якими працюють глибокі, рекурентні та згорткові нейронні мережі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 210,
    "total_chunks": 619
  },
  {
    "id": "b314ad38fe1065390df56e90f812c62e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "роботодавцями\" ] } } }, \"machine-learning-with-python\": { \"title\": \"Машинне навчання з Python\", \"intro\": [ \"Машинне навчання має багато практичних застосунків, які ви можете використовувати у своїх проєктах чи роботі\", \"У сертифікації «Машинне навчання з Python» ви використовуватимете фреймворк TensorFlow, аби створити декілька нейронних мереж і вивчити складніші техніки, серед яких обробка природної мови й навчання з підкріпленням \", \"Також ви зануритеся у нейронні мережі та вивчите правила, за якими працюють глибокі, рекурентні та згорткові нейронні мережі\"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"tensorflow\": {\n        \"title\": \"TensorFlow\",\n        \"intro\": [\n          \"Tensorflow — це фреймворк з відкритим вихідним кодом, що полегшує використання машинного навчання та нейронних мереж \",\n          \"Наступний відеокурс був створений Тімом Рущіцею, також відомим як «Tech With Tim» Він допоможе зрозуміти TensorFlow і деякі з його потужних можливостей",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 211,
    "total_chunks": 619
  },
  {
    "id": "cc08d46837d47f3560c7f036980d7d77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "обробка природної мови й навчання з підкріпленням \", \"Також ви зануритеся у нейронні мережі та вивчите правила, за якими працюють глибокі, рекурентні та згорткові нейронні мережі\" ], \"note\": \"\", \"blocks\": { \"tensorflow\": { \"title\": \"TensorFlow\", \"intro\": [ \"Tensorflow — це фреймворк з відкритим вихідним кодом, що полегшує використання машинного навчання та нейронних мереж \", \"Наступний відеокурс був створений Тімом Рущіцею, також відомим як «Tech With Tim» Він допоможе зрозуміти TensorFlow і деякі з його потужних можливостей\"\n        ]\n      },\n      \"how-neural-networks-work\": {\n        \"title\": \"Як працюють нейронні мережі\",\n        \"intro\": [\n          \"Нейронні мережі лежать в основі того, що ми зараз називаємо штучним інтелектом Але їх, як правило, складно зрозуміти Особливо початківцям у галузі машинного навчання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 212,
    "total_chunks": 619
  },
  {
    "id": "1bb3220c7e8c25f29c85d9de29279d5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"intro\": [ \"Tensorflow — це фреймворк з відкритим вихідним кодом, що полегшує використання машинного навчання та нейронних мереж \", \"Наступний відеокурс був створений Тімом Рущіцею, також відомим як «Tech With Tim» Він допоможе зрозуміти TensorFlow і деякі з його потужних можливостей\" ] }, \"how-neural-networks-work\": { \"title\": \"Як працюють нейронні мережі\", \"intro\": [ \"Нейронні мережі лежать в основі того, що ми зараз називаємо штучним інтелектом Але їх, як правило, складно зрозуміти Особливо початківцям у галузі машинного навчання\",\n          \"Навіть якщо ви вперше зіштовхуєтеся з нейронними мережами, ці відеокурси Брендона Рорера навчать вас орієнтуватися у їхніх поняттях та підрахунках \"\n        ]\n      },\n      \"machine-learning-with-python-projects\": {\n        \"title\": \"Проєкти «Машинне навчання з Python»\",\n        \"intro\": [\n          \"Машинне навчання може бути дуже корисним",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 213,
    "total_chunks": 619
  },
  {
    "id": "90bbe5f1f560599588bac35fe889a4ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "потужних можливостей\" ] }, \"how-neural-networks-work\": { \"title\": \"Як працюють нейронні мережі\", \"intro\": [ \"Нейронні мережі лежать в основі того, що ми зараз називаємо штучним інтелектом Але їх, як правило, складно зрозуміти Особливо початківцям у галузі машинного навчання\", \"Навіть якщо ви вперше зіштовхуєтеся з нейронними мережами, ці відеокурси Брендона Рорера навчать вас орієнтуватися у їхніх поняттях та підрахунках \" ] }, \"machine-learning-with-python-projects\": { \"title\": \"Проєкти «Машинне навчання з Python»\", \"intro\": [ \"Машинне навчання може бути дуже кориснимЗавершивши ці безоплатні складні проєкти з програмування, ви покажете, що маєте базові знання з машинного навчання й отримаєте сертифікацію «Машинне навчання з Python» \"\n        ]\n      }\n    }\n  },\n  \"college-algebra-with-python\": {\n    \"title\": \"Алгебра з Python\",\n    \"intro\": [\n      \"Цей курс розроблений як односеместровий курс коледжу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 214,
    "total_chunks": 619
  },
  {
    "id": "206cff1a61484c67208d5da67f95eb7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з нейронними мережами, ці відеокурси Брендона Рорера навчать вас орієнтуватися у їхніх поняттях та підрахунках \" ] }, \"machine-learning-with-python-projects\": { \"title\": \"Проєкти «Машинне навчання з Python»\", \"intro\": [ \"Машинне навчання може бути дуже кориснимЗавершивши ці безоплатні складні проєкти з програмування, ви покажете, що маєте базові знання з машинного навчання й отримаєте сертифікацію «Машинне навчання з Python» \" ] } } }, \"college-algebra-with-python\": { \"title\": \"Алгебра з Python\", \"intro\": [ \"Цей курс розроблений як односеместровий курс коледжуВін складається з навчальних відео та блокнотів Google Colaboratory, за якими потрібно слідкувати протягом інтерактивів, завдань та проєктів \",\n      \"Під час проходження кожної частини курсу ви повністю зрозумієте алгебру та навчитесь писати код Python, який розв’язуватиме приклади \",\n      \"Протягом курсу ви також побудуєте блокнот Algebra Colab, який зможете використовувати як власний калькулятор",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 215,
    "total_chunks": 619
  },
  {
    "id": "10748ec47519e0190b34f3e464b09240",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "сертифікацію «Машинне навчання з Python» \" ] } } }, \"college-algebra-with-python\": { \"title\": \"Алгебра з Python\", \"intro\": [ \"Цей курс розроблений як односеместровий курс коледжуВін складається з навчальних відео та блокнотів Google Colaboratory, за якими потрібно слідкувати протягом інтерактивів, завдань та проєктів \", \"Під час проходження кожної частини курсу ви повністю зрозумієте алгебру та навчитесь писати код Python, який розв’язуватиме приклади \", \"Протягом курсу ви також побудуєте блокнот Algebra Colab, який зможете використовувати як власний калькуляторЦей курс (та код, який ви напишете) надасть вам основу, щоб краще зрозуміти математику та науку про дані \"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"learn-ratios-and-proportions\": {\n        \"title\": \"Вивчіть співвідношення та пропорції\",\n        \"intro\": [\n          \"Тут починається ваша подорож Ви дізнаєтесь, як налаштувати Colab Notebook, який може запускати код Python",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 216,
    "total_chunks": 619
  },
  {
    "id": "1e4b50f522303ad8254e66914187c0ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "частини курсу ви повністю зрозумієте алгебру та навчитесь писати код Python, який розв’язуватиме приклади \", \"Протягом курсу ви також побудуєте блокнот Algebra Colab, який зможете використовувати як власний калькуляторЦей курс (та код, який ви напишете) надасть вам основу, щоб краще зрозуміти математику та науку про дані \" ], \"note\": \"\", \"blocks\": { \"learn-ratios-and-proportions\": { \"title\": \"Вивчіть співвідношення та пропорції\", \"intro\": [ \"Тут починається ваша подорож Ви дізнаєтесь, як налаштувати Colab Notebook, який може запускати код PythonПотім ви використовуватимете блокнот, щоб за допомогою відео вивчити співвідношення та пропорції з Python \"\n        ]\n      },\n      \"learn-how-to-solve-for-x\": {\n        \"title\": \"Вивчіть, як знайти Х\",\n        \"intro\": [\n          \"Ця тема фокусуватиметься на знаходженні невідомого числа (часто називається «х»), використовуючи алгебраїчні вирази та код Python",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 217,
    "total_chunks": 619
  },
  {
    "id": "8fcec82fc0a2b4b568d555c7bcb851d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "математику та науку про дані \" ], \"note\": \"\", \"blocks\": { \"learn-ratios-and-proportions\": { \"title\": \"Вивчіть співвідношення та пропорції\", \"intro\": [ \"Тут починається ваша подорож Ви дізнаєтесь, як налаштувати Colab Notebook, який може запускати код PythonПотім ви використовуватимете блокнот, щоб за допомогою відео вивчити співвідношення та пропорції з Python \" ] }, \"learn-how-to-solve-for-x\": { \"title\": \"Вивчіть, як знайти Х\", \"intro\": [ \"Ця тема фокусуватиметься на знаходженні невідомого числа (часто називається «х»), використовуючи алгебраїчні вирази та код Python\"\n        ]\n      },\n      \"learn-fractions-and-decimals\": {\n        \"title\": \"Вивчіть дроби та десяткові числа\",\n        \"intro\": [\n          \"Ця тема зосереджуватиметься на перетворенні десяткових чисел у дроби та відсотки \"\n        ]\n      },\n      \"learn-functions-and-graphing\": {\n        \"title\": \"Вивчіть функції та графіки\",\n        \"intro\": [\"Ця тема навчить вас математичних функцій",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 218,
    "total_chunks": 619
  },
  {
    "id": "2c9427a4580736937a9d3f5418302d71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "допомогою відео вивчити співвідношення та пропорції з Python \" ] }, \"learn-how-to-solve-for-x\": { \"title\": \"Вивчіть, як знайти Х\", \"intro\": [ \"Ця тема фокусуватиметься на знаходженні невідомого числа (часто називається «х»), використовуючи алгебраїчні вирази та код Python\" ] }, \"learn-fractions-and-decimals\": { \"title\": \"Вивчіть дроби та десяткові числа\", \"intro\": [ \"Ця тема зосереджуватиметься на перетворенні десяткових чисел у дроби та відсотки \" ] }, \"learn-functions-and-graphing\": { \"title\": \"Вивчіть функції та графіки\", \"intro\": [\"Ця тема навчить вас математичних функцій\"]\n      },\n      \"learn-linear-functions\": {\n        \"title\": \"Вивчіть лінійні функції\",\n        \"intro\": [\n          \"Ця тема покаже, як знайти рівняння прямої, що проходить через дві задані точки \"\n        ]\n      },\n      \"learn-common-factors-and-square-roots\": {\n        \"title\": \"Вивчіть спільні множники та квадратні корені\",\n        \"intro\": [\n          \"У цій темі ви навчитесь знаходити спільні множники та скорочувати їх",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 219,
    "total_chunks": 619
  },
  {
    "id": "0fdcacae664d5d5006645898886cfead",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "[ \"Ця тема зосереджуватиметься на перетворенні десяткових чисел у дроби та відсотки \" ] }, \"learn-functions-and-graphing\": { \"title\": \"Вивчіть функції та графіки\", \"intro\": [\"Ця тема навчить вас математичних функцій\"] }, \"learn-linear-functions\": { \"title\": \"Вивчіть лінійні функції\", \"intro\": [ \"Ця тема покаже, як знайти рівняння прямої, що проходить через дві задані точки \" ] }, \"learn-common-factors-and-square-roots\": { \"title\": \"Вивчіть спільні множники та квадратні корені\", \"intro\": [ \"У цій темі ви навчитесь знаходити спільні множники та скорочувати їхЦе буде корисно при спрощенні дробів та розкладанні квадратних коренів \"\n        ]\n      },\n      \"build-a-multi-function-calculator-project\": {\n        \"title\": \"Багатофункціональний калькулятор\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви побудуєте багатофункціональний калькулятор",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 220,
    "total_chunks": 619
  },
  {
    "id": "03fe4b36921497bd12da0d7c8a85b1e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "лінійні функції\", \"intro\": [ \"Ця тема покаже, як знайти рівняння прямої, що проходить через дві задані точки \" ] }, \"learn-common-factors-and-square-roots\": { \"title\": \"Вивчіть спільні множники та квадратні корені\", \"intro\": [ \"У цій темі ви навчитесь знаходити спільні множники та скорочувати їхЦе буде корисно при спрощенні дробів та розкладанні квадратних коренів \" ] }, \"build-a-multi-function-calculator-project\": { \"title\": \"Багатофункціональний калькулятор\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте багатофункціональний калькулятор\"\n        ]\n      },\n      \"learn-how-to-graph-systems-of-equations\": {\n        \"title\": \"Вивчіть, як побудувати графік системи рівнянь\",\n        \"intro\": [\n          \"Ця тема фокусуватиметься на побудові графіку з двома рівняннями на одній координатній площині, де можна побачити перетин ліній",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 221,
    "total_chunks": 619
  },
  {
    "id": "1e8017a2b15ceaf0955122a4156c05f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У цій темі ви навчитесь знаходити спільні множники та скорочувати їхЦе буде корисно при спрощенні дробів та розкладанні квадратних коренів \" ] }, \"build-a-multi-function-calculator-project\": { \"title\": \"Багатофункціональний калькулятор\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте багатофункціональний калькулятор\" ] }, \"learn-how-to-graph-systems-of-equations\": { \"title\": \"Вивчіть, як побудувати графік системи рівнянь\", \"intro\": [ \"Ця тема фокусуватиметься на побудові графіку з двома рівняннями на одній координатній площині, де можна побачити перетин ліній\"\n        ]\n      },\n      \"learn-how-to-solve-systems-of-equations\": {\n        \"title\": \"Вивчіть, як розв’язувати системи рівнянь\",\n        \"intro\": [\n          \"У цій темі ви навчитесь розв’язувати систему з двох рівнянь (з двома змінними) без графіка Ви побачите, як можна розкласти рівняння та розв’язати задану змінну в Python",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 222,
    "total_chunks": 619
  },
  {
    "id": "efaffbf6239f226f3ee95e7d7bb1c964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цьому проєкті ви побудуєте багатофункціональний калькулятор\" ] }, \"learn-how-to-graph-systems-of-equations\": { \"title\": \"Вивчіть, як побудувати графік системи рівнянь\", \"intro\": [ \"Ця тема фокусуватиметься на побудові графіку з двома рівняннями на одній координатній площині, де можна побачити перетин ліній\" ] }, \"learn-how-to-solve-systems-of-equations\": { \"title\": \"Вивчіть, як розв’язувати системи рівнянь\", \"intro\": [ \"У цій темі ви навчитесь розв’язувати систему з двох рівнянь (з двома змінними) без графіка Ви побачите, як можна розкласти рівняння та розв’язати задану змінну в PythonПісля цього ви зможете розв’язувати та будувати графік системи за допомогою одного блоку коду \"\n        ]\n      },\n      \"learn-applications-of-linear-systems\": {\n        \"title\": \"Дізнайтесь про прикладне застосування лінійних систем\",\n        \"intro\": [\n          \"У цій темі ви побачите, як можна використовувати вивчену алгебру для розв’язку завдань, пов’язаних з реальним світом",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 223,
    "total_chunks": 619
  },
  {
    "id": "9700da18a27dfafe08eea438bb464a32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розв’язувати системи рівнянь\", \"intro\": [ \"У цій темі ви навчитесь розв’язувати систему з двох рівнянь (з двома змінними) без графіка Ви побачите, як можна розкласти рівняння та розв’язати задану змінну в PythonПісля цього ви зможете розв’язувати та будувати графік системи за допомогою одного блоку коду \" ] }, \"learn-applications-of-linear-systems\": { \"title\": \"Дізнайтесь про прикладне застосування лінійних систем\", \"intro\": [ \"У цій темі ви побачите, як можна використовувати вивчену алгебру для розв’язку завдань, пов’язаних з реальним світом\"\n        ]\n      },\n      \"learn-quadratic-equations\": {\n        \"title\": \"Вивчіть квадратні рівняння\",\n        \"intro\": [\n          \"Ця тема виходить за межі лінійних рівнянь і зосереджується на піднесенні до степеня та побудові параболи Ви навчитеся знаходити ключові точки на параболах і розв’язувати квадратні рівняння",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 224,
    "total_chunks": 619
  },
  {
    "id": "6124bae422e83260a21c2c56a4042ec9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "будувати графік системи за допомогою одного блоку коду \" ] }, \"learn-applications-of-linear-systems\": { \"title\": \"Дізнайтесь про прикладне застосування лінійних систем\", \"intro\": [ \"У цій темі ви побачите, як можна використовувати вивчену алгебру для розв’язку завдань, пов’язаних з реальним світом\" ] }, \"learn-quadratic-equations\": { \"title\": \"Вивчіть квадратні рівняння\", \"intro\": [ \"Ця тема виходить за межі лінійних рівнянь і зосереджується на піднесенні до степеня та побудові параболи Ви навчитеся знаходити ключові точки на параболах і розв’язувати квадратні рівняння\"\n        ]\n      },\n      \"build-a-graphing-calculator-project\": {\n        \"title\": \"Графічний калькулятор\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви побудуєте графічний калькулятор",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 225,
    "total_chunks": 619
  },
  {
    "id": "e3be3604ed75072d2005f255fa2147d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "темі ви побачите, як можна використовувати вивчену алгебру для розв’язку завдань, пов’язаних з реальним світом\" ] }, \"learn-quadratic-equations\": { \"title\": \"Вивчіть квадратні рівняння\", \"intro\": [ \"Ця тема виходить за межі лінійних рівнянь і зосереджується на піднесенні до степеня та побудові параболи Ви навчитеся знаходити ключові точки на параболах і розв’язувати квадратні рівняння\" ] }, \"build-a-graphing-calculator-project\": { \"title\": \"Графічний калькулятор\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте графічний калькулятор\"\n        ]\n      },\n      \"learn-parent-graphs-and-polynomials\": {\n        \"title\": \"Вивчіть батьківські графіки та многочлени\",\n        \"intro\": [\n          \"Ця тема покаже багато різних видів «батьківських» графіків, тобто базових шаблонів, з яких створюються складніші графіки Многочлени — це математичні вирази з декількома елементами, тобто складнішими членами",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 226,
    "total_chunks": 619
  },
  {
    "id": "0823d5d718291c7cf94ec7f34763ccba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "побудові параболи Ви навчитеся знаходити ключові точки на параболах і розв’язувати квадратні рівняння\" ] }, \"build-a-graphing-calculator-project\": { \"title\": \"Графічний калькулятор\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте графічний калькулятор\" ] }, \"learn-parent-graphs-and-polynomials\": { \"title\": \"Вивчіть батьківські графіки та многочлени\", \"intro\": [ \"Ця тема покаже багато різних видів «батьківських» графіків, тобто базових шаблонів, з яких створюються складніші графіки Многочлени — це математичні вирази з декількома елементами, тобто складнішими членамиВи побачите, як ці графіки виглядають, як їх змінити та як зробити це за допомогою Python \"\n        ]\n      },\n      \"build-three-math-games-project\": {\n        \"title\": \"Три математичні ігри\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви побудуєте три математичні ігри",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 227,
    "total_chunks": 619
  },
  {
    "id": "a02040e8ba0c02b14613d5ba53abe408",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Вивчіть батьківські графіки та многочлени\", \"intro\": [ \"Ця тема покаже багато різних видів «батьківських» графіків, тобто базових шаблонів, з яких створюються складніші графіки Многочлени — це математичні вирази з декількома елементами, тобто складнішими членамиВи побачите, як ці графіки виглядають, як їх змінити та як зробити це за допомогою Python \" ] }, \"build-three-math-games-project\": { \"title\": \"Три математичні ігри\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте три математичні ігри\"\n        ]\n      },\n      \"learn-business-applications-of-college-algebra\": {\n        \"title\": \"Дізнайтесь про прикладне застосування алгебри у бізнесі\",\n        \"intro\": [\n          \"Ця тема покаже, як застосувати навички розв’язання та побудови графіків, щоб знайти витрати, дохід та прибуток Ви напишете код, який створюватиме криву попиту з двох точок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 228,
    "total_chunks": 619
  },
  {
    "id": "74019bb7b61bb63e4d0df12fcd964bdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "їх змінити та як зробити це за допомогою Python \" ] }, \"build-three-math-games-project\": { \"title\": \"Три математичні ігри\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте три математичні ігри\" ] }, \"learn-business-applications-of-college-algebra\": { \"title\": \"Дізнайтесь про прикладне застосування алгебри у бізнесі\", \"intro\": [ \"Ця тема покаже, як застосувати навички розв’язання та побудови графіків, щоб знайти витрати, дохід та прибуток Ви напишете код, який створюватиме криву попиту з двох точокВи побачите, як ціна впливає на графік прибутку і те, як взаємодіють усі рівняння \"\n        ]\n      },\n      \"learn-simple-and-compound-interest\": {\n        \"title\": \"Вивчіть прості та складні відсотки\",\n        \"intro\": [\n          \"Ця тема покаже, як розрахувати відсотки, сплату позики та прогнозний розрахунок інвестицій Ви побачите математичні формули та перетворите їх у код",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 229,
    "total_chunks": 619
  },
  {
    "id": "3d69cf604c39dafa7ff82f3d61d7bf1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "бізнесі\", \"intro\": [ \"Ця тема покаже, як застосувати навички розв’язання та побудови графіків, щоб знайти витрати, дохід та прибуток Ви напишете код, який створюватиме криву попиту з двох точокВи побачите, як ціна впливає на графік прибутку і те, як взаємодіють усі рівняння \" ] }, \"learn-simple-and-compound-interest\": { \"title\": \"Вивчіть прості та складні відсотки\", \"intro\": [ \"Ця тема покаже, як розрахувати відсотки, сплату позики та прогнозний розрахунок інвестицій Ви побачите математичні формули та перетворите їх у кодОскільки ці формули зазвичай складні, корисно мати код і лише змінювати значення \"\n        ]\n      },\n      \"learn-exponents-and-logarithms\": {\n        \"title\": \"Вивчіть піднесення до степеня та логарифми\",\n        \"intro\": [\n          \"Ця тема покаже, що піднесення до степеня та логарифми є оберненими функціями, які можна використовувати для різного застосування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 230,
    "total_chunks": 619
  },
  {
    "id": "d768ff7188e0f3c94a23b4d73a50d411",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "] }, \"learn-simple-and-compound-interest\": { \"title\": \"Вивчіть прості та складні відсотки\", \"intro\": [ \"Ця тема покаже, як розрахувати відсотки, сплату позики та прогнозний розрахунок інвестицій Ви побачите математичні формули та перетворите їх у кодОскільки ці формули зазвичай складні, корисно мати код і лише змінювати значення \" ] }, \"learn-exponents-and-logarithms\": { \"title\": \"Вивчіть піднесення до степеня та логарифми\", \"intro\": [ \"Ця тема покаже, що піднесення до степеня та логарифми є оберненими функціями, які можна використовувати для різного застосування\"\n        ]\n      },\n      \"build-a-financial-calculator-project\": {\n        \"title\": \"Фінансовий калькулятор\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви побудуєте фінансовий калькулятор \"\n        ]\n      },\n      \"college-algebra-with-python-conclusion\": {\n        \"title\": \"Алгебра з Python: висновок\",\n        \"intro\": [\n          \"Це остання тема даного курсу Поглянемо, як ви можете поєднати знання з математики та Python із зовнішніми даними",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 231,
    "total_chunks": 619
  },
  {
    "id": "cf9471bea24948ae7f0840329b356b29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та логарифми\", \"intro\": [ \"Ця тема покаже, що піднесення до степеня та логарифми є оберненими функціями, які можна використовувати для різного застосування\" ] }, \"build-a-financial-calculator-project\": { \"title\": \"Фінансовий калькулятор\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте фінансовий калькулятор \" ] }, \"college-algebra-with-python-conclusion\": { \"title\": \"Алгебра з Python: висновок\", \"intro\": [ \"Це остання тема даного курсу Поглянемо, як ви можете поєднати знання з математики та Python із зовнішніми даними\"\n        ]\n      },\n      \"build-a-data-graph-explorer-project\": {\n        \"title\": \"Дослідник графіку даних\",\n        \"intro\": [\n          \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \",\n          \"У цьому проєкті ви побудуєте дослідник графіку даних \"\n        ]\n      }\n    }\n  },\n  \"python-for-everybody\": {\n    \"title\": \"Python для всіх (застаріла версія)\",\n    \"intro\": [\n      \"Python — одна з найпопулярніших гнучких мов програмування на сьогодні",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 232,
    "total_chunks": 619
  },
  {
    "id": "f1c12715c7fce9f74b6f866688abe12c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"title\": \"Алгебра з Python: висновок\", \"intro\": [ \"Це остання тема даного курсу Поглянемо, як ви можете поєднати знання з математики та Python із зовнішніми даними\" ] }, \"build-a-data-graph-explorer-project\": { \"title\": \"Дослідник графіку даних\", \"intro\": [ \"Цей проєкт потрібно виконати, щоб отримати сертифікацію \", \"У цьому проєкті ви побудуєте дослідник графіку даних \" ] } } }, \"python-for-everybody\": { \"title\": \"Python для всіх (застаріла версія)\", \"intro\": [ \"Python — одна з найпопулярніших гнучких мов програмування на сьогодніВи можете використовувати її для всього: від базових скриптів до машинного навчання \"\n    ],\n    \"note\": \"\",\n    \"blocks\": {\n      \"python-for-everybody\": {\n        \"title\": \"Python для всіх\",\n        \"intro\": [\n          \"Python для всіх — це безоплатна серія відеокурсів, яка вчить основам використання Python 3 \",\n          \"Курси були створені Чарльзом Северансом (також відомим як Dr Chuck)",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 233,
    "total_chunks": 619
  },
  {
    "id": "0574853557b5f29c0945543d89ca5c95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "даних \" ] } } }, \"python-for-everybody\": { \"title\": \"Python для всіх (застаріла версія)\", \"intro\": [ \"Python — одна з найпопулярніших гнучких мов програмування на сьогодніВи можете використовувати її для всього: від базових скриптів до машинного навчання \" ], \"note\": \"\", \"blocks\": { \"python-for-everybody\": { \"title\": \"Python для всіх\", \"intro\": [ \"Python для всіх — це безоплатна серія відеокурсів, яка вчить основам використання Python 3 \", \"Курси були створені Чарльзом Северансом (також відомим як Dr Chuck)Він є професором школи інформації університету Мічигану, де викладає різні технологічні курси, включно з програмуванням, дизайном баз даних та веброзробкою \"\n        ]\n      }\n    }\n  },\n  \"coding-interview-prep\": {\n    \"title\": \"Підготовка до співбесіди з програмування\",\n    \"intro\": [\n      \"Шукаєте безоплатні вправи з програмування, щоб підготуватися до наступної співбесіди Ми про це подбали \",\n      \"Цей розділ містить завдання з програмування, які перевіряють ваші знання алгоритмів, структур даних і математики",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 234,
    "total_chunks": 619
  },
  {
    "id": "42dee9d51b884045bfee25af4d233d9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "3 \", \"Курси були створені Чарльзом Северансом (також відомим як Dr Chuck)Він є професором школи інформації університету Мічигану, де викладає різні технологічні курси, включно з програмуванням, дизайном баз даних та веброзробкою \" ] } } }, \"coding-interview-prep\": { \"title\": \"Підготовка до співбесіди з програмування\", \"intro\": [ \"Шукаєте безоплатні вправи з програмування, щоб підготуватися до наступної співбесіди Ми про це подбали \", \"Цей розділ містить завдання з програмування, які перевіряють ваші знання алгоритмів, структур даних і математикиТут також є декілька проєктів, які ви можете використати для зміцнення навичок або просто додати їх до свого портфоліо \",\n      \"Тут містяться матеріали з <a href=\\\"https://www wikipedia org/\\\" target=\\\"_blank\\\">вікіпедії</a>, які дозволені ліцензією <a href=\\\"https://creativecommons org/licenses/by-sa/4 0/\\\" target=\\\"_blank\\\">Creative Commons Attribution-ShareAlike License 4 0</a> Оригінальний вміст міг бути змінений та адаптований",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 235,
    "total_chunks": 619
  },
  {
    "id": "4ea449a40c61e5eeeb783b3cf3a1593e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "вправи з програмування, щоб підготуватися до наступної співбесіди Ми про це подбали \", \"Цей розділ містить завдання з програмування, які перевіряють ваші знання алгоритмів, структур даних і математикиТут також є декілька проєктів, які ви можете використати для зміцнення навичок або просто додати їх до свого портфоліо \", \"Тут містяться матеріали з <a href=\\\"https://www wikipedia org/\\\" target=\\\"_blank\\\">вікіпедії</a>, які дозволені ліцензією <a href=\\\"https://creativecommons org/licenses/by-sa/4 0/\\\" target=\\\"_blank\\\">Creative Commons Attribution-ShareAlike License 4 0</a> Оригінальний вміст міг бути змінений та адаптованийДля перегляду оригінальної версії та інших деталей відвідайте оригінальну сторінку на <a href=\\\"https://www wikipedia org/\\\" target\\\"_blank\\\">вікіпедії</a> \"\n    ],\n    \"note\": \"Проєкт Ейлера та Rosetta Code переміщені в окремі курси Поверніться до навчальної програми, щоб побачити перелік всіх курсів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 236,
    "total_chunks": 619
  },
  {
    "id": "90e27cee94c4d93308e8177eb27992f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "для зміцнення навичок або просто додати їх до свого портфоліо \", \"Тут містяться матеріали з <a href=\\\"https://www wikipedia org/\\\" target=\\\"_blank\\\">вікіпедії</a>, які дозволені ліцензією <a href=\\\"https://creativecommons org/licenses/by-sa/4 0/\\\" target=\\\"_blank\\\">Creative Commons Attribution-ShareAlike License 4 0</a> Оригінальний вміст міг бути змінений та адаптованийДля перегляду оригінальної версії та інших деталей відвідайте оригінальну сторінку на <a href=\\\"https://www wikipedia org/\\\" target\\\"_blank\\\">вікіпедії</a> \" ], \"note\": \"Проєкт Ейлера та Rosetta Code переміщені в окремі курси Поверніться до навчальної програми, щоб побачити перелік всіх курсів\",\n    \"blocks\": {\n      \"algorithms\": {\n        \"title\": \"Алгоритми\",\n        \"intro\": [\n          \"Ці безоплатні вправи з програмування навчать вас загальних алгоритмів, з якими ви скоріш за все зіткнетеся в житті Це чудова можливість вдосконалити як логіку, так і програмувальні навички \",\n          \"Подібні алгоритми часто використовують на співбесідах, щоб перевірити навички кандидатів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 237,
    "total_chunks": 619
  },
  {
    "id": "94a3f44332d2d21d8e1872cb8f32bd16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "оригінальну сторінку на <a href=\\\"https://www wikipedia org/\\\" target\\\"_blank\\\">вікіпедії</a> \" ], \"note\": \"Проєкт Ейлера та Rosetta Code переміщені в окремі курси Поверніться до навчальної програми, щоб побачити перелік всіх курсів\", \"blocks\": { \"algorithms\": { \"title\": \"Алгоритми\", \"intro\": [ \"Ці безоплатні вправи з програмування навчать вас загальних алгоритмів, з якими ви скоріш за все зіткнетеся в житті Це чудова можливість вдосконалити як логіку, так і програмувальні навички \", \"Подібні алгоритми часто використовують на співбесідах, щоб перевірити навички кандидатівМи чітко пояснимо, як саме функціонують різноманітні алгоритми, щоб ви могли підібрати рішення до кожного \",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \"\n        ]\n      },\n      \"data-structures\": {\n        \"title\": \"Структура даних\",\n        \"intro\": [\n          \"Ці безплатні курси програмування спрямовані на те, щоб допомогти вам у роботі з численними структурами даних, з якими ви ще не стикалися",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 238,
    "total_chunks": 619
  },
  {
    "id": "7ca96220c65745a3728c6ea29b5cc573",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Це чудова можливість вдосконалити як логіку, так і програмувальні навички \", \"Подібні алгоритми часто використовують на співбесідах, щоб перевірити навички кандидатівМи чітко пояснимо, як саме функціонують різноманітні алгоритми, щоб ви могли підібрати рішення до кожного \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"data-structures\": { \"title\": \"Структура даних\", \"intro\": [ \"Ці безплатні курси програмування спрямовані на те, щоб допомогти вам у роботі з численними структурами даних, з якими ви ще не стикалися\",\n          \"Під час роботи з цими курсами, ви вивчите кожний тип структур даних та реалізуєте алгоритми, щоб зрозуміти їх краще \",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \"\n        ]\n      },\n      \"take-home-projects\": {\n        \"title\": \"Проєкти на самостійне опрацювання\",\n        \"intro\": [\n          \"Люди завжди нервують на співбесідах з програмування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 239,
    "total_chunks": 619
  },
  {
    "id": "9a2c5c197d9720909c0879dfdd41da6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"data-structures\": { \"title\": \"Структура даних\", \"intro\": [ \"Ці безплатні курси програмування спрямовані на те, щоб допомогти вам у роботі з численними структурами даних, з якими ви ще не стикалися\", \"Під час роботи з цими курсами, ви вивчите кожний тип структур даних та реалізуєте алгоритми, щоб зрозуміти їх краще \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"take-home-projects\": { \"title\": \"Проєкти на самостійне опрацювання\", \"intro\": [ \"Люди завжди нервують на співбесідах з програмуванняІноді, замість інтерв’ю, кандидатам можуть запропонувати створити проєкт вдома Співбесіди такого типу часто передбачають виконання великого обсягу роботи, однак якнайкраще показують роботодавцям ваші здібності \",\n          \"Попрактикуйтеся створювати запропоновані нами проєкти Не поспішайте, добре над ними попрацюйте та додайте до свого резюме чи портфоліо, щоб вразити потенційних роботодавців",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 240,
    "total_chunks": 619
  },
  {
    "id": "311779384d791b3e4a28a1cc4293aa68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "їх краще \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"take-home-projects\": { \"title\": \"Проєкти на самостійне опрацювання\", \"intro\": [ \"Люди завжди нервують на співбесідах з програмуванняІноді, замість інтерв’ю, кандидатам можуть запропонувати створити проєкт вдома Співбесіди такого типу часто передбачають виконання великого обсягу роботи, однак якнайкраще показують роботодавцям ваші здібності \", \"Попрактикуйтеся створювати запропоновані нами проєкти Не поспішайте, добре над ними попрацюйте та додайте до свого резюме чи портфоліо, щоб вразити потенційних роботодавців\"\n        ]\n      }\n    }\n  },\n  \"the-odin-project\": {\n    \"title\": \"Проєкт «Odin»: версія freeCodeCamp\",\n    \"intro\": [\n      \"Проєкт «Odin» був створений розробником Еріком Траутманом у 2013 році Протягом років з’явилася відкрита спільнота, яка доглядає за проєктом та розширює його",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 241,
    "total_chunks": 619
  },
  {
    "id": "32cd1de22bc856433127c41f7ba8888b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "створити проєкт вдома Співбесіди такого типу часто передбачають виконання великого обсягу роботи, однак якнайкраще показують роботодавцям ваші здібності \", \"Попрактикуйтеся створювати запропоновані нами проєкти Не поспішайте, добре над ними попрацюйте та додайте до свого резюме чи портфоліо, щоб вразити потенційних роботодавців\" ] } } }, \"the-odin-project\": { \"title\": \"Проєкт «Odin»: версія freeCodeCamp\", \"intro\": [ \"Проєкт «Odin» був створений розробником Еріком Траутманом у 2013 році Протягом років з’явилася відкрита спільнота, яка доглядає за проєктом та розширює його\",\n      \"freeCodeCamp розширив відкриту навчальну програму, щоб зробити її інтерактивною у браузері Проєкт міститиме тести, щоб оцінити ваш код та переконатись, що ви зрозуміли основні поняття \",\n      \"Якщо ви хочете отримати оригінальний досвід налаштування проєкту на локальному комп’ютері, див",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 242,
    "total_chunks": 619
  },
  {
    "id": "bde4d5ad5d97b041089f45a08b53054b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "вразити потенційних роботодавців\" ] } } }, \"the-odin-project\": { \"title\": \"Проєкт «Odin»: версія freeCodeCamp\", \"intro\": [ \"Проєкт «Odin» був створений розробником Еріком Траутманом у 2013 році Протягом років з’явилася відкрита спільнота, яка доглядає за проєктом та розширює його\", \"freeCodeCamp розширив відкриту навчальну програму, щоб зробити її інтерактивною у браузері Проєкт міститиме тести, щоб оцінити ваш код та переконатись, що ви зрозуміли основні поняття \", \"Якщо ви хочете отримати оригінальний досвід налаштування проєкту на локальному комп’ютері, дивпершоджерело проєкту на <a href='https://www theodinproject com/' target='_blank' rel='noopener noreferrer nofollow'>The Odin Project</a> Велика подяка спільноті проєкту «Odin» за підтримку цього цінного навчального ресурсу для розробників з усього світу \",\n      \"Цей курс неофіційний та не підтримується The Odin Project",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 243,
    "total_chunks": 619
  },
  {
    "id": "4d94303bf795006dfc0ff5696c16488d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"freeCodeCamp розширив відкриту навчальну програму, щоб зробити її інтерактивною у браузері Проєкт міститиме тести, щоб оцінити ваш код та переконатись, що ви зрозуміли основні поняття \", \"Якщо ви хочете отримати оригінальний досвід налаштування проєкту на локальному комп’ютері, дивпершоджерело проєкту на <a href='https://www theodinproject com/' target='_blank' rel='noopener noreferrer nofollow'>The Odin Project</a> Велика подяка спільноті проєкту «Odin» за підтримку цього цінного навчального ресурсу для розробників з усього світу \", \"Цей курс неофіційний та не підтримується The Odin ProjectДо навчальної програми проєкту було внесено зміни, а весь навчальний матеріал курсу підлягає ліцензуванню <a href='https://creativecommons org/licenses/by-nc-sa/4 0/' target='_blank' rel='noopener noreferrer nofollow'>CC-BY-SA-NC 4 0</a>\",\n      \"<a href='https://creativecommons org/licenses/by-nc-sa/4 0/deed' target='_blank' rel='noopener noreferrer nofollow'>&copy; Проєкт «Odin»</a>\",\n      \"Цей курс містить матеріал з <a href='https://javascript info/' target='_blank' rel='noopener noreferrer nofollow'>JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 244,
    "total_chunks": 619
  },
  {
    "id": "e597636a3b58f3710f9c03ea5659ae11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "rel='noopener noreferrer nofollow'>The Odin Project</a> Велика подяка спільноті проєкту «Odin» за підтримку цього цінного навчального ресурсу для розробників з усього світу \", \"Цей курс неофіційний та не підтримується The Odin ProjectДо навчальної програми проєкту було внесено зміни, а весь навчальний матеріал курсу підлягає ліцензуванню <a href='https://creativecommons org/licenses/by-nc-sa/4 0/' target='_blank' rel='noopener noreferrer nofollow'>CC-BY-SA-NC 4 0</a>\", \"<a href='https://creativecommons org/licenses/by-nc-sa/4 0/deed' target='_blank' rel='noopener noreferrer nofollow'>&copy; Проєкт «Odin»</a>\", \"Цей курс містить матеріал з <a href='https://javascript info/' target='_blank' rel='noopener noreferrer nofollow'>JavaScriptinfo</a>, що підлягає ліцензуванню <a href='https://creativecommons org/licenses/by-nc-sa/4 0/' target='_blank' rel='noopener noreferrer nofollow'>CC-BY-NC-SA 4 0</a> \"\n    ],\n    \"blocks\": {\n      \"top-learn-html-foundations\": {\n        \"title\": \"Вивчіть основи HTML\",\n        \"intro\": [\n          \"Вивчіть основи HTML за допомогою цього курсу Від структурування вебсторінок до розуміння семантичних тегів, ви побудуєте міцну основу для створення організованого та доступного контенту в мережі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 245,
    "total_chunks": 619
  },
  {
    "id": "c3fdd4f5e13cca96230156f6836d1946",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "nofollow'>CC-BY-SA-NC 4 0</a>\", \"<a href='https://creativecommons org/licenses/by-nc-sa/4 0/deed' target='_blank' rel='noopener noreferrer nofollow'>&copy; Проєкт «Odin»</a>\", \"Цей курс містить матеріал з <a href='https://javascript info/' target='_blank' rel='noopener noreferrer nofollow'>JavaScriptinfo</a>, що підлягає ліцензуванню <a href='https://creativecommons org/licenses/by-nc-sa/4 0/' target='_blank' rel='noopener noreferrer nofollow'>CC-BY-NC-SA 4 0</a> \" ], \"blocks\": { \"top-learn-html-foundations\": { \"title\": \"Вивчіть основи HTML\", \"intro\": [ \"Вивчіть основи HTML за допомогою цього курсу Від структурування вебсторінок до розуміння семантичних тегів, ви побудуєте міцну основу для створення організованого та доступного контенту в мережі\"\n        ]\n      },\n      \"top-working-with-text\": {\n        \"title\": \"Робота з текстом\",\n        \"intro\": [\n          \"Дізнайтесь про складнощі роботи з текстом у веброзробці Вивчіть форматування, маніпулювання та презентацію тексту, щоб покращити свої навички у створенні вебконтенту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 246,
    "total_chunks": 619
  },
  {
    "id": "df488aec147e03d9197aafaf478b3907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "0/' target='_blank' rel='noopener noreferrer nofollow'>CC-BY-NC-SA 4 0</a> \" ], \"blocks\": { \"top-learn-html-foundations\": { \"title\": \"Вивчіть основи HTML\", \"intro\": [ \"Вивчіть основи HTML за допомогою цього курсу Від структурування вебсторінок до розуміння семантичних тегів, ви побудуєте міцну основу для створення організованого та доступного контенту в мережі\" ] }, \"top-working-with-text\": { \"title\": \"Робота з текстом\", \"intro\": [ \"Дізнайтесь про складнощі роботи з текстом у веброзробці Вивчіть форматування, маніпулювання та презентацію тексту, щоб покращити свої навички у створенні вебконтенту\"\n        ]\n      },\n      \"top-links-and-images\": {\n        \"title\": \"Посилання та зображення\",\n        \"intro\": [\n          \"Дізнайтеся, як використовувати посилання та зображення у вебпроєктах Цей курс охоплює основи створення посилань та вбудовування зображень, щоб зробити вебсайт більш інтерактивним та візуально привабливим",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 247,
    "total_chunks": 619
  },
  {
    "id": "2db221e5323c9ca3bdd7cf1ad98c2d63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "міцну основу для створення організованого та доступного контенту в мережі\" ] }, \"top-working-with-text\": { \"title\": \"Робота з текстом\", \"intro\": [ \"Дізнайтесь про складнощі роботи з текстом у веброзробці Вивчіть форматування, маніпулювання та презентацію тексту, щоб покращити свої навички у створенні вебконтенту\" ] }, \"top-links-and-images\": { \"title\": \"Посилання та зображення\", \"intro\": [ \"Дізнайтеся, як використовувати посилання та зображення у вебпроєктах Цей курс охоплює основи створення посилань та вбудовування зображень, щоб зробити вебсайт більш інтерактивним та візуально привабливим\"\n        ]\n      },\n      \"top-build-a-recipe-project\": {\n        \"title\": \"Вивчіть основи HTML, побудувавши сторінку з рецептами\",\n        \"intro\": [\n          \"Використайте свої навички HTML, створивши сторінку з рецептами Цей практичний проєкт дозволяє застосувати отримані знання та створити функціональну вебсторінку, закріпивши ключові поняття розробки HTML",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 248,
    "total_chunks": 619
  },
  {
    "id": "d8f5897a44cefa1d28a8353e47d26839",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "у створенні вебконтенту\" ] }, \"top-links-and-images\": { \"title\": \"Посилання та зображення\", \"intro\": [ \"Дізнайтеся, як використовувати посилання та зображення у вебпроєктах Цей курс охоплює основи створення посилань та вбудовування зображень, щоб зробити вебсайт більш інтерактивним та візуально привабливим\" ] }, \"top-build-a-recipe-project\": { \"title\": \"Вивчіть основи HTML, побудувавши сторінку з рецептами\", \"intro\": [ \"Використайте свої навички HTML, створивши сторінку з рецептами Цей практичний проєкт дозволяє застосувати отримані знання та створити функціональну вебсторінку, закріпивши ключові поняття розробки HTML\"\n        ]\n      },\n      \"top-learn-css-foundations\": {\n        \"title\": \"Вивчіть основи CSS\",\n        \"intro\": [\n          \"Зануртеся у світ каскадних таблиць стилів (CSS) та дізнайтесь, як стилізувати елементи HTML Вивчіть властивості стилізації, селектори та макети, щоб оживити вебсторінки",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 249,
    "total_chunks": 619
  },
  {
    "id": "dc395c5d97b714c448fadd186c1463e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "вебсайт більш інтерактивним та візуально привабливим\" ] }, \"top-build-a-recipe-project\": { \"title\": \"Вивчіть основи HTML, побудувавши сторінку з рецептами\", \"intro\": [ \"Використайте свої навички HTML, створивши сторінку з рецептами Цей практичний проєкт дозволяє застосувати отримані знання та створити функціональну вебсторінку, закріпивши ключові поняття розробки HTML\" ] }, \"top-learn-css-foundations\": { \"title\": \"Вивчіть основи CSS\", \"intro\": [ \"Зануртеся у світ каскадних таблиць стилів (CSS) та дізнайтесь, як стилізувати елементи HTML Вивчіть властивості стилізації, селектори та макети, щоб оживити вебсторінки\"\n        ]\n      },\n      \"top-learn-css-foundations-projects\": {\n        \"title\": \"Проєкти «Вивчіть основи CSS»\",\n        \"intro\": [\n          \"Розвиньте свої навички CSS, працюючи над практичними проєктами Цей курс надає практичний досвід застосування CSS для створення адаптивних дизайнів для реальних сценаріїв",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 250,
    "total_chunks": 619
  },
  {
    "id": "a86a6bab540d119677fed847f19b589e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "отримані знання та створити функціональну вебсторінку, закріпивши ключові поняття розробки HTML\" ] }, \"top-learn-css-foundations\": { \"title\": \"Вивчіть основи CSS\", \"intro\": [ \"Зануртеся у світ каскадних таблиць стилів (CSS) та дізнайтесь, як стилізувати елементи HTML Вивчіть властивості стилізації, селектори та макети, щоб оживити вебсторінки\" ] }, \"top-learn-css-foundations-projects\": { \"title\": \"Проєкти «Вивчіть основи CSS»\", \"intro\": [ \"Розвиньте свої навички CSS, працюючи над практичними проєктами Цей курс надає практичний досвід застосування CSS для створення адаптивних дизайнів для реальних сценаріїв\"\n        ]\n      },\n      \"top-learn-css-specificity\": {\n        \"title\": \"Вивчіть специфічність CSS\",\n        \"intro\": [\n          \"Дослідіть специфічність CSS та отримайте краще розуміння того, як застосовувати стилі до елементів HTML Цей курс навчає правил CSS, що допоможе написати ефективні та націлені стилі для вебсторінок",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 251,
    "total_chunks": 619
  },
  {
    "id": "f14b9752900ac678d6fc3a15261bbe6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та макети, щоб оживити вебсторінки\" ] }, \"top-learn-css-foundations-projects\": { \"title\": \"Проєкти «Вивчіть основи CSS»\", \"intro\": [ \"Розвиньте свої навички CSS, працюючи над практичними проєктами Цей курс надає практичний досвід застосування CSS для створення адаптивних дизайнів для реальних сценаріїв\" ] }, \"top-learn-css-specificity\": { \"title\": \"Вивчіть специфічність CSS\", \"intro\": [ \"Дослідіть специфічність CSS та отримайте краще розуміння того, як застосовувати стилі до елементів HTML Цей курс навчає правил CSS, що допоможе написати ефективні та націлені стилі для вебсторінок\"\n        ]\n      },\n      \"top-the-box-model\": {\n        \"title\": \"Вивчіть блокову модель\",\n        \"intro\": [\n          \"Вивчіть блокову модель CSS завдяки цьому курсу Дізнайтесь, як відтворюються елементи, та навчіться маніпулювати простором, кордонами та відступами, щоб досягти бажаного макету та дизайну",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 252,
    "total_chunks": 619
  },
  {
    "id": "3b2685a963348f813e95e1c38f6d385b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "дизайнів для реальних сценаріїв\" ] }, \"top-learn-css-specificity\": { \"title\": \"Вивчіть специфічність CSS\", \"intro\": [ \"Дослідіть специфічність CSS та отримайте краще розуміння того, як застосовувати стилі до елементів HTML Цей курс навчає правил CSS, що допоможе написати ефективні та націлені стилі для вебсторінок\" ] }, \"top-the-box-model\": { \"title\": \"Вивчіть блокову модель\", \"intro\": [ \"Вивчіть блокову модель CSS завдяки цьому курсу Дізнайтесь, як відтворюються елементи, та навчіться маніпулювати простором, кордонами та відступами, щоб досягти бажаного макету та дизайну\"\n        ]\n      },\n      \"top-introduction-to-flexbox\": {\n        \"title\": \"Вступ до Flexbox\",\n        \"intro\": [\n          \"Відкрийте для себе потужність Flexbox — моделі макету, яка спрощує проєктування гнучких та адаптивних вебмакетів Навчіться створювати динамічні та адаптивні структури сторінок з легкістю",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 253,
    "total_chunks": 619
  },
  {
    "id": "9ec23886ca0128484fdf0b08e67e02e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "допоможе написати ефективні та націлені стилі для вебсторінок\" ] }, \"top-the-box-model\": { \"title\": \"Вивчіть блокову модель\", \"intro\": [ \"Вивчіть блокову модель CSS завдяки цьому курсу Дізнайтесь, як відтворюються елементи, та навчіться маніпулювати простором, кордонами та відступами, щоб досягти бажаного макету та дизайну\" ] }, \"top-introduction-to-flexbox\": { \"title\": \"Вступ до Flexbox\", \"intro\": [ \"Відкрийте для себе потужність Flexbox — моделі макету, яка спрощує проєктування гнучких та адаптивних вебмакетів Навчіться створювати динамічні та адаптивні структури сторінок з легкістю\"\n        ]\n      },\n      \"top-learn-block-and-inline\": {\n        \"title\": \"Вивчіть блокові та рядкові елементи\",\n        \"intro\": [\n          \"Дослідіть відмінності між блоковими та рядковими елементами в HTML та CSS Цей курс надасть уявлення про те, як такі відтворення впливають на макет та поведінку, що дозволить вам приймати обґрунтовані рішення у дизайні",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 254,
    "total_chunks": 619
  },
  {
    "id": "f1eb182dd9e22fb0bcc725401db782b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Вступ до Flexbox\", \"intro\": [ \"Відкрийте для себе потужність Flexbox — моделі макету, яка спрощує проєктування гнучких та адаптивних вебмакетів Навчіться створювати динамічні та адаптивні структури сторінок з легкістю\" ] }, \"top-learn-block-and-inline\": { \"title\": \"Вивчіть блокові та рядкові елементи\", \"intro\": [ \"Дослідіть відмінності між блоковими та рядковими елементами в HTML та CSS Цей курс надасть уявлення про те, як такі відтворення впливають на макет та поведінку, що дозволить вам приймати обґрунтовані рішення у дизайні\"\n        ]\n      },\n      \"top-learn-variables-and-operators\": {\n        \"title\": \"Вивчіть змінні та оператори\",\n        \"intro\": [\n          \"Почніть знайомство з JavaScript зі змінних та операторів Цей курс охоплює основи програмування на JavaScript, включно з типами даних, операторами та оголошенням змінних \"\n        ]\n      },\n      \"top-learn-data-types-and-conditionals\": {\n        \"title\": \"Вивчіть типи даних та умови\",\n        \"intro\": [\n          \"Дізнайтесь про типи даних та умовні інструкції в JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 255,
    "total_chunks": 619
  },
  {
    "id": "6e358bb4693f4ede81c485a303612325",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "надасть уявлення про те, як такі відтворення впливають на макет та поведінку, що дозволить вам приймати обґрунтовані рішення у дизайні\" ] }, \"top-learn-variables-and-operators\": { \"title\": \"Вивчіть змінні та оператори\", \"intro\": [ \"Почніть знайомство з JavaScript зі змінних та операторів Цей курс охоплює основи програмування на JavaScript, включно з типами даних, операторами та оголошенням змінних \" ] }, \"top-learn-data-types-and-conditionals\": { \"title\": \"Вивчіть типи даних та умови\", \"intro\": [ \"Дізнайтесь про типи даних та умовні інструкції в JavaScript\"\n        ]\n      },\n      \"top-learn-function-basics\": {\n        \"title\": \"Вивчіть основи функцій\",\n        \"intro\": [\"Дізнайтесь про функції в JavaScript \"]\n      },\n      \"top-basic-function-projects\": {\n        \"title\": \"Проєкти «Базові функції»\",\n        \"intro\": [\n          \"Випробуйте свої навички по JavaScript, побудувавши базові функції \"\n        ]\n      },\n      \"top-learn-arrays-and-loops\": {\n        \"title\": \"Вивчіть масиви та цикли\",\n        \"intro\": [\"Дізнайтесь про масиви та цикли в JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 256,
    "total_chunks": 619
  },
  {
    "id": "b8d5f8e205df2cd063990fee1f31a95d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "операторами та оголошенням змінних \" ] }, \"top-learn-data-types-and-conditionals\": { \"title\": \"Вивчіть типи даних та умови\", \"intro\": [ \"Дізнайтесь про типи даних та умовні інструкції в JavaScript\" ] }, \"top-learn-function-basics\": { \"title\": \"Вивчіть основи функцій\", \"intro\": [\"Дізнайтесь про функції в JavaScript \"] }, \"top-basic-function-projects\": { \"title\": \"Проєкти «Базові функції»\", \"intro\": [ \"Випробуйте свої навички по JavaScript, побудувавши базові функції \" ] }, \"top-learn-arrays-and-loops\": { \"title\": \"Вивчіть масиви та цикли\", \"intro\": [\"Дізнайтесь про масиви та цикли в JavaScript\"]\n      },\n      \"top-learn-to-solve-problems-and-understand-errors\": {\n        \"title\": \"Навчіться розв’язувати проблеми та розуміти помилки\",\n        \"intro\": [\n          \"Дізнайтесь, як розв’язувати проблеми та розуміти помилки в JavaScript \"\n        ]\n      },\n      \"top-build-a-rock-paper-scissors-game\": {\n        \"title\": \"Створіть гру «Камінь-ножиці-папір»\",\n        \"intro\": [\n          \"Випробуйте свої навички по JavaScript, побудувавши гру «Камінь-ножиці-папір»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 257,
    "total_chunks": 619
  },
  {
    "id": "98b4990fc3a1cad231ea2e99289aaf0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"] }, \"top-basic-function-projects\": { \"title\": \"Проєкти «Базові функції»\", \"intro\": [ \"Випробуйте свої навички по JavaScript, побудувавши базові функції \" ] }, \"top-learn-arrays-and-loops\": { \"title\": \"Вивчіть масиви та цикли\", \"intro\": [\"Дізнайтесь про масиви та цикли в JavaScript\"] }, \"top-learn-to-solve-problems-and-understand-errors\": { \"title\": \"Навчіться розв’язувати проблеми та розуміти помилки\", \"intro\": [ \"Дізнайтесь, як розв’язувати проблеми та розуміти помилки в JavaScript \" ] }, \"top-build-a-rock-paper-scissors-game\": { \"title\": \"Створіть гру «Камінь-ножиці-папір»\", \"intro\": [ \"Випробуйте свої навички по JavaScript, побудувавши гру «Камінь-ножиці-папір»\"\n        ]\n      }\n    }\n  },\n  \"project-euler\": {\n    \"title\": \"Проєкт Ейлера\",\n    \"intro\": [\n      \"Виконайте завдання з програмування з архівів проєкту Ейлера Вони удосконалять ваші алгоритмічні та математичні знання \",\n      \"Тут є завдання різної складності, а для багатьох здобуття досвіду полягає в індуктивному методі навчання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 258,
    "total_chunks": 619
  },
  {
    "id": "f3f2c544f560fea51f75e13d5b39ffda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "проблеми та розуміти помилки\", \"intro\": [ \"Дізнайтесь, як розв’язувати проблеми та розуміти помилки в JavaScript \" ] }, \"top-build-a-rock-paper-scissors-game\": { \"title\": \"Створіть гру «Камінь-ножиці-папір»\", \"intro\": [ \"Випробуйте свої навички по JavaScript, побудувавши гру «Камінь-ножиці-папір»\" ] } } }, \"project-euler\": { \"title\": \"Проєкт Ейлера\", \"intro\": [ \"Виконайте завдання з програмування з архівів проєкту Ейлера Вони удосконалять ваші алгоритмічні та математичні знання \", \"Тут є завдання різної складності, а для багатьох здобуття досвіду полягає в індуктивному методі навчанняТобто вирішення одного завдання прояснить нову концепцію та дозволить вирішити раніше незрозуміле завдання Чи під силу вам вирішити кожне \"\n    ],\n    \"blocks\": {\n      \"project-euler-problems-1-to-100\": {\n        \"title\": \"Проєкт Ейлера",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 259,
    "total_chunks": 619
  },
  {
    "id": "0900bb5e6967a0c5856758feeb05f88a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "свої навички по JavaScript, побудувавши гру «Камінь-ножиці-папір»\" ] } } }, \"project-euler\": { \"title\": \"Проєкт Ейлера\", \"intro\": [ \"Виконайте завдання з програмування з архівів проєкту Ейлера Вони удосконалять ваші алгоритмічні та математичні знання \", \"Тут є завдання різної складності, а для багатьох здобуття досвіду полягає в індуктивному методі навчанняТобто вирішення одного завдання прояснить нову концепцію та дозволить вирішити раніше незрозуміле завдання Чи під силу вам вирішити кожне \" ], \"blocks\": { \"project-euler-problems-1-to-100\": { \"title\": \"Проєкт ЕйлераЗавдання 1-100\",\n        \"intro\": [\n          \"У першому наборі завдань ви використовуватимете послідовність Фібоначчі, теорему про розподіл простих чисел та комбінаторику, щоб написати алгоритми для розв’язку завдань \",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \"\n        ]\n      },\n      \"project-euler-problems-101-to-200\": {\n        \"title\": \"Проєкт Ейлера",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 260,
    "total_chunks": 619
  },
  {
    "id": "6d0a3b3b13b121482c20c7116bb30789",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "багатьох здобуття досвіду полягає в індуктивному методі навчанняТобто вирішення одного завдання прояснить нову концепцію та дозволить вирішити раніше незрозуміле завдання Чи під силу вам вирішити кожне \" ], \"blocks\": { \"project-euler-problems-1-to-100\": { \"title\": \"Проєкт ЕйлераЗавдання 1-100\", \"intro\": [ \"У першому наборі завдань ви використовуватимете послідовність Фібоначчі, теорему про розподіл простих чисел та комбінаторику, щоб написати алгоритми для розв’язку завдань \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-101-to-200\": { \"title\": \"Проєкт ЕйлераЗавдання 101-200\",\n        \"intro\": [\n          \"У цьому наборі завдань ви закріпите знання з першої частини курсу та використовуватимете обчислення вектора, трикутник Паскаля й алгоритм RSA, щоб розв’язати завдання \",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \"\n        ]\n      },\n      \"project-euler-problems-201-to-300\": {\n        \"title\": \"Проєкт Ейлера",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 261,
    "total_chunks": 619
  },
  {
    "id": "61ea12dd0554269a656fb79d388c0424",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "використовуватимете послідовність Фібоначчі, теорему про розподіл простих чисел та комбінаторику, щоб написати алгоритми для розв’язку завдань \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-101-to-200\": { \"title\": \"Проєкт ЕйлераЗавдання 101-200\", \"intro\": [ \"У цьому наборі завдань ви закріпите знання з першої частини курсу та використовуватимете обчислення вектора, трикутник Паскаля й алгоритм RSA, щоб розв’язати завдання \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-201-to-300\": { \"title\": \"Проєкт ЕйлераЗавдання 201-300\",\n        \"intro\": [\n          \"У цьому наборі завдань ви продовжите розвивати навички з попередніх завдань та використовуватимете біном Ньютона, числа Гемінґа й послідовність Коллатца \",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \"\n        ]\n      },\n      \"project-euler-problems-301-to-400\": {\n        \"title\": \"Проєкт Ейлера",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 262,
    "total_chunks": 619
  },
  {
    "id": "fcf6ecc85883fbf24fcf6b6f34008925",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви закріпите знання з першої частини курсу та використовуватимете обчислення вектора, трикутник Паскаля й алгоритм RSA, щоб розв’язати завдання \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-201-to-300\": { \"title\": \"Проєкт ЕйлераЗавдання 201-300\", \"intro\": [ \"У цьому наборі завдань ви продовжите розвивати навички з попередніх завдань та використовуватимете біном Ньютона, числа Гемінґа й послідовність Коллатца \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-301-to-400\": { \"title\": \"Проєкт ЕйлераЗавдання 301-400\",\n        \"intro\": [\n          \"Тут ви продовжите працювати над своїми навичками, використовуючи комбінаторну теорію ігор, бітові операції та послідовність Ґоломба \",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \"\n        ]\n      },\n      \"project-euler-problems-401-to-480\": {\n        \"title\": \"Проєкт Ейлера",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 263,
    "total_chunks": 619
  },
  {
    "id": "8ba25df88363f2e117eb2b5da34d2d47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "201-300\", \"intro\": [ \"У цьому наборі завдань ви продовжите розвивати навички з попередніх завдань та використовуватимете біном Ньютона, числа Гемінґа й послідовність Коллатца \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-301-to-400\": { \"title\": \"Проєкт ЕйлераЗавдання 301-400\", \"intro\": [ \"Тут ви продовжите працювати над своїми навичками, використовуючи комбінаторну теорію ігор, бітові операції та послідовність Ґоломба \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-401-to-480\": { \"title\": \"Проєкт ЕйлераЗавдання 401-480\",\n        \"intro\": [\n          \"У кінцевому наборі завдань ви підкреслите свої знання та використовуватимете унітарні дільники, програму Капрекара та багато іншого, щоб розв’язати складні завдання \",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 264,
    "total_chunks": 619
  },
  {
    "id": "7f8e37a2f145a4f4339a58170b54ddff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "] }, \"project-euler-problems-301-to-400\": { \"title\": \"Проєкт ЕйлераЗавдання 301-400\", \"intro\": [ \"Тут ви продовжите працювати над своїми навичками, використовуючи комбінаторну теорію ігор, бітові операції та послідовність Ґоломба \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] }, \"project-euler-problems-401-to-480\": { \"title\": \"Проєкт ЕйлераЗавдання 401-480\", \"intro\": [ \"У кінцевому наборі завдань ви підкреслите свої знання та використовуватимете унітарні дільники, програму Капрекара та багато іншого, щоб розв’язати складні завдання \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript\"\n        ]\n      }\n    }\n  },\n  \"foundational-c-sharp-with-microsoft\": {\n    \"title\": \"Безоплатна сертифікація «Основи C# з Microsoft»\",\n    \"intro\": [\n      \"Цей курс пропонує всебічне знайомство з мовою програмування C#, розглядаючи основні поняття, синтаксис та практичне застосування у розробці програмного забезпечення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 265,
    "total_chunks": 619
  },
  {
    "id": "5e0c9dbb3caa1e9c77014ac89fbb7300",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\" ] }, \"project-euler-problems-401-to-480\": { \"title\": \"Проєкт ЕйлераЗавдання 401-480\", \"intro\": [ \"У кінцевому наборі завдань ви підкреслите свої знання та використовуватимете унітарні дільники, програму Капрекара та багато іншого, щоб розв’язати складні завдання \", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript\" ] } } }, \"foundational-c-sharp-with-microsoft\": { \"title\": \"Безоплатна сертифікація «Основи C# з Microsoft»\", \"intro\": [ \"Цей курс пропонує всебічне знайомство з мовою програмування C#, розглядаючи основні поняття, синтаксис та практичне застосування у розробці програмного забезпечення\",\n      \"Завдяки практичним вправам та проєктам ви вивчите основи C#, включно зі змінними, типами даних, структурами керування та принципами об’єктноорієнтованого програмування \",\n      \"Після завершення курсу ви отримаєте практичні навички та знання, необхідні для впевненого використання C# при побудові застосунків",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 266,
    "total_chunks": 619
  },
  {
    "id": "d5295f56cb06880fbc0e976dc36d75d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "лише на JavaScript\" ] } } }, \"foundational-c-sharp-with-microsoft\": { \"title\": \"Безоплатна сертифікація «Основи C# з Microsoft»\", \"intro\": [ \"Цей курс пропонує всебічне знайомство з мовою програмування C#, розглядаючи основні поняття, синтаксис та практичне застосування у розробці програмного забезпечення\", \"Завдяки практичним вправам та проєктам ви вивчите основи C#, включно зі змінними, типами даних, структурами керування та принципами об’єктноорієнтованого програмування \", \"Після завершення курсу ви отримаєте практичні навички та знання, необхідні для впевненого використання C# при побудові застосунків\"\n    ],\n    \"note\": \"Кожен розділ має трофей, пов’язаний з розділом, та який ви маєте отримати на навчальній платформі Microsoft Після здобуття кожного трофею, їх потрібно підтвердити на freeCodeCamp Після цього ви зможете скласти екзамен з сертифікації",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 267,
    "total_chunks": 619
  },
  {
    "id": "ede7cfcd2fa09bdfc150b3bfb53bad7a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розробці програмного забезпечення\", \"Завдяки практичним вправам та проєктам ви вивчите основи C#, включно зі змінними, типами даних, структурами керування та принципами об’єктноорієнтованого програмування \", \"Після завершення курсу ви отримаєте практичні навички та знання, необхідні для впевненого використання C# при побудові застосунків\" ], \"note\": \"Кожен розділ має трофей, пов’язаний з розділом, та який ви маєте отримати на навчальній платформі Microsoft Після здобуття кожного трофею, їх потрібно підтвердити на freeCodeCamp Після цього ви зможете скласти екзамен з сертифікації\",\n    \"blocks\": {\n      \"write-your-first-code-using-c-sharp\": {\n        \"title\": \"Написання першого коду за допомогою C#\",\n        \"intro\": [\n          \"Розпочніть подорож із написання коду на C# Завдяки основам та синтаксису мови ви отримаєте хорошу базу, створивши підґрунтя для своїх пригод з програмування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 268,
    "total_chunks": 619
  },
  {
    "id": "0d5c9132d77ee07a8461d65ab47c2dd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "використання C# при побудові застосунків\" ], \"note\": \"Кожен розділ має трофей, пов’язаний з розділом, та який ви маєте отримати на навчальній платформі Microsoft Після здобуття кожного трофею, їх потрібно підтвердити на freeCodeCamp Після цього ви зможете скласти екзамен з сертифікації\", \"blocks\": { \"write-your-first-code-using-c-sharp\": { \"title\": \"Написання першого коду за допомогою C#\", \"intro\": [ \"Розпочніть подорож із написання коду на C# Завдяки основам та синтаксису мови ви отримаєте хорошу базу, створивши підґрунтя для своїх пригод з програмування\"\n        ]\n      },\n      \"create-and-run-simple-c-sharp-console-applications\": {\n        \"title\": \"Створення та запуск простих консольних застосунків C#\",\n        \"intro\": [\n          \"Опануйте мистецтво створення та запуску звичайних консольних застосунків C# Пориньте у світ консольного програмування, де ви отримаєте практичний досвід та побачите свій код у дії",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 269,
    "total_chunks": 619
  },
  {
    "id": "ea303b246616fd9cadd4a117ed2a40ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "сертифікації\", \"blocks\": { \"write-your-first-code-using-c-sharp\": { \"title\": \"Написання першого коду за допомогою C#\", \"intro\": [ \"Розпочніть подорож із написання коду на C# Завдяки основам та синтаксису мови ви отримаєте хорошу базу, створивши підґрунтя для своїх пригод з програмування\" ] }, \"create-and-run-simple-c-sharp-console-applications\": { \"title\": \"Створення та запуск простих консольних застосунків C#\", \"intro\": [ \"Опануйте мистецтво створення та запуску звичайних консольних застосунків C# Пориньте у світ консольного програмування, де ви отримаєте практичний досвід та побачите свій код у дії\"\n        ]\n      },\n      \"add-logic-to-c-sharp-console-applications\": {\n        \"title\": \"Додавання логіки до консольних застосунків C#\",\n        \"intro\": [\n          \"Розблокуйте потужність логіки у консольних застосунках C# Дізнайтесь, як додати логіку та прийняття рішень до свого коду, що дозволить застосункам робити динамічний вибір та реагувати на різні сценарії",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 270,
    "total_chunks": 619
  },
  {
    "id": "ab79bbb2488b3924e216e51f28eac2a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"title\": \"Створення та запуск простих консольних застосунків C#\", \"intro\": [ \"Опануйте мистецтво створення та запуску звичайних консольних застосунків C# Пориньте у світ консольного програмування, де ви отримаєте практичний досвід та побачите свій код у дії\" ] }, \"add-logic-to-c-sharp-console-applications\": { \"title\": \"Додавання логіки до консольних застосунків C#\", \"intro\": [ \"Розблокуйте потужність логіки у консольних застосунках C# Дізнайтесь, як додати логіку та прийняття рішень до свого коду, що дозволить застосункам робити динамічний вибір та реагувати на різні сценарії\"\n        ]\n      },\n      \"work-with-variable-data-in-c-sharp-console-applications\": {\n        \"title\": \"Робота з даними змінних в консольних застосунках C#\",\n        \"intro\": [\n          \"Дізнайтесь більше про дані змінних у консольних застосунках C# Приборкайте можливість зберігати та маніпулювати різними типами даних, серед яких числа й текст, ознайомившись з основними поняттями змінних та обробки даних",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 271,
    "total_chunks": 619
  },
  {
    "id": "c6f0aae51b4a13d2414ee283a0169e50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "C#\", \"intro\": [ \"Розблокуйте потужність логіки у консольних застосунках C# Дізнайтесь, як додати логіку та прийняття рішень до свого коду, що дозволить застосункам робити динамічний вибір та реагувати на різні сценарії\" ] }, \"work-with-variable-data-in-c-sharp-console-applications\": { \"title\": \"Робота з даними змінних в консольних застосунках C#\", \"intro\": [ \"Дізнайтесь більше про дані змінних у консольних застосунках C# Приборкайте можливість зберігати та маніпулювати різними типами даних, серед яких числа й текст, ознайомившись з основними поняттями змінних та обробки даних\"\n        ]\n      },\n      \"create-methods-in-c-sharp-console-applications\": {\n        \"title\": \"Створення методів в консольних застосунках C#\",\n        \"intro\": [\n          \"Перенесіть власні консольні застосунки C# на новий рівень, опанувавши мистецтво створення методів Дізнайтесь, як організувати та модуляризувати свій код, зробивши його слухнянішим та ефективнішим",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 272,
    "total_chunks": 619
  },
  {
    "id": "4204a5add1b019b2842a08e1da404ab4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з даними змінних в консольних застосунках C#\", \"intro\": [ \"Дізнайтесь більше про дані змінних у консольних застосунках C# Приборкайте можливість зберігати та маніпулювати різними типами даних, серед яких числа й текст, ознайомившись з основними поняттями змінних та обробки даних\" ] }, \"create-methods-in-c-sharp-console-applications\": { \"title\": \"Створення методів в консольних застосунках C#\", \"intro\": [ \"Перенесіть власні консольні застосунки C# на новий рівень, опанувавши мистецтво створення методів Дізнайтесь, як організувати та модуляризувати свій код, зробивши його слухнянішим та ефективнішим\"\n        ]\n      },\n      \"debug-c-sharp-console-applications\": {\n        \"title\": \"Налагодження консольних застосунків C#\",\n        \"intro\": [\n          \"Вдоскональте свої навички з усунення неполадок у консольних застосунках C# Отримайте можливість визначити та розв’язати проблеми у своєму коді, забезпечуючи безперебійну роботу програм та бажані результати",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 273,
    "total_chunks": 619
  },
  {
    "id": "8cdc508dc0f9cc865ab373ba3a60ab8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "обробки даних\" ] }, \"create-methods-in-c-sharp-console-applications\": { \"title\": \"Створення методів в консольних застосунках C#\", \"intro\": [ \"Перенесіть власні консольні застосунки C# на новий рівень, опанувавши мистецтво створення методів Дізнайтесь, як організувати та модуляризувати свій код, зробивши його слухнянішим та ефективнішим\" ] }, \"debug-c-sharp-console-applications\": { \"title\": \"Налагодження консольних застосунків C#\", \"intro\": [ \"Вдоскональте свої навички з усунення неполадок у консольних застосунках C# Отримайте можливість визначити та розв’язати проблеми у своєму коді, забезпечуючи безперебійну роботу програм та бажані результати\"\n        ]\n      },\n      \"foundational-c-sharp-with-microsoft-certification-exam\": {\n        \"title\": \"Екзамен з сертифікації «Основи C# з Microsoft»\",\n        \"intro\": [\n          \"Використайте набуті знання, щоб скласти екзамен та отримати сертифікацію «Основи C# з Microsoft»\"\n        ]\n      }\n    }\n  },\n  \"a2-english-for-developers\": {\n    \"title\": \"Сертифікація «Англійська мова A2 для розробників» (бета)\",\n    \"intro\": [\n      \"У цьому курсі з вивчення англійської мови для розробників ви опануєте основи англійської комунікації",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 560,
    "chunk_index": 274,
    "total_chunks": 619
  },
  {
    "id": "d4e9b157489e10b93d3089923c6c925d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "консольних застосунках C# Отримайте можливість визначити та розв’язати проблеми у своєму коді, забезпечуючи безперебійну роботу програм та бажані результати\" ] }, \"foundational-c-sharp-with-microsoft-certification-exam\": { \"title\": \"Екзамен з сертифікації «Основи C# з Microsoft»\", \"intro\": [ \"Використайте набуті знання, щоб скласти екзамен та отримати сертифікацію «Основи C# з Microsoft»\" ] } } }, \"a2-english-for-developers\": { \"title\": \"Сертифікація «Англійська мова A2 для розробників» (бета)\", \"intro\": [ \"У цьому курсі з вивчення англійської мови для розробників ви опануєте основи англійської комунікаціїКурс створено відповідно до загальноєвропейських рекомендацій з мовної освіти рівня A2 (CEFR) Ми зосередилися на словниковому запасі, що є особливо корисним для розробників \",\n      \"Перша частина допоможе освоїти граматику та використання англійської мови",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 275,
    "total_chunks": 619
  },
  {
    "id": "b5d3558b927513ba5e474729d2903231",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "[ \"Використайте набуті знання, щоб скласти екзамен та отримати сертифікацію «Основи C# з Microsoft»\" ] } } }, \"a2-english-for-developers\": { \"title\": \"Сертифікація «Англійська мова A2 для розробників» (бета)\", \"intro\": [ \"У цьому курсі з вивчення англійської мови для розробників ви опануєте основи англійської комунікаціїКурс створено відповідно до загальноєвропейських рекомендацій з мовної освіти рівня A2 (CEFR) Ми зосередилися на словниковому запасі, що є особливо корисним для розробників \", \"Перша частина допоможе освоїти граматику та використання англійської мовиВи виконаєте багато практичних вправ, дізнавшись основи (наприклад, представлення себе, проведення коротких розмов і обговорення роботи) \",\n      \"У другій частині ви практикуватимете словниковий запас, специфічний для розробки програмного забезпечення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 276,
    "total_chunks": 619
  },
  {
    "id": "a4011496b5d030fcafe22210543cbc93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"intro\": [ \"У цьому курсі з вивчення англійської мови для розробників ви опануєте основи англійської комунікаціїКурс створено відповідно до загальноєвропейських рекомендацій з мовної освіти рівня A2 (CEFR) Ми зосередилися на словниковому запасі, що є особливо корисним для розробників \", \"Перша частина допоможе освоїти граматику та використання англійської мовиВи виконаєте багато практичних вправ, дізнавшись основи (наприклад, представлення себе, проведення коротких розмов і обговорення роботи) \", \"У другій частині ви практикуватимете словниковий запас, специфічний для розробки програмного забезпеченняВи навчитеся описувати код, обговорювати технологічні тенденції та брати участь у зустрічах \",\n      \"Весь курс рівня A2 складається з 105 різних діалогів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 277,
    "total_chunks": 619
  },
  {
    "id": "889ee0ec9fe6cb0ca31fb04df175c19e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з мовної освіти рівня A2 (CEFR) Ми зосередилися на словниковому запасі, що є особливо корисним для розробників \", \"Перша частина допоможе освоїти граматику та використання англійської мовиВи виконаєте багато практичних вправ, дізнавшись основи (наприклад, представлення себе, проведення коротких розмов і обговорення роботи) \", \"У другій частині ви практикуватимете словниковий запас, специфічний для розробки програмного забезпеченняВи навчитеся описувати код, обговорювати технологічні тенденції та брати участь у зустрічах \", \"Весь курс рівня A2 складається з 105 різних діалогівКожен з них створений для того, щоб розширити ваш словниковий запас та підвищити впевненість під час спілкування в професійному середовищі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 278,
    "total_chunks": 619
  },
  {
    "id": "7f358531aa207c6f58d8cc1912827af7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "частина допоможе освоїти граматику та використання англійської мовиВи виконаєте багато практичних вправ, дізнавшись основи (наприклад, представлення себе, проведення коротких розмов і обговорення роботи) \", \"У другій частині ви практикуватимете словниковий запас, специфічний для розробки програмного забезпеченняВи навчитеся описувати код, обговорювати технологічні тенденції та брати участь у зустрічах \", \"Весь курс рівня A2 складається з 105 різних діалогівКожен з них створений для того, щоб розширити ваш словниковий запас та підвищити впевненість під час спілкування в професійному середовищі\"\n    ],\n    \"blocks\": {\n      \"learn-greetings-in-your-first-day-at-the-office\": {\n        \"title\": \"Дізнайтесь про привітання в офісі першого робочого дня\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся поширених висловів для ситуацій, з якими можете зіткнутись у перший робочий день",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 279,
    "total_chunks": 619
  },
  {
    "id": "537036366520f8eeddb5c812abd1c6a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розробки програмного забезпеченняВи навчитеся описувати код, обговорювати технологічні тенденції та брати участь у зустрічах \", \"Весь курс рівня A2 складається з 105 різних діалогівКожен з них створений для того, щоб розширити ваш словниковий запас та підвищити впевненість під час спілкування в професійному середовищі\" ], \"blocks\": { \"learn-greetings-in-your-first-day-at-the-office\": { \"title\": \"Дізнайтесь про привітання в офісі першого робочого дня\", \"intro\": [ \"У цьому курсі ви навчитеся поширених висловів для ситуацій, з якими можете зіткнутись у перший робочий деньВи дізнаєтесь про представлення, знайомство з іншими людьми, спілкування під час перерви та отримання картки доступу \"\n        ]\n      },\n      \"learn-introductions-in-an-online-team-meeting\": {\n        \"title\": \"Дізнайтесь про знайомство на онлайн-зустрічі\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся представляти себе, а також вказувати свою професію та ділитися цілями на групових зустрічах",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 280,
    "total_chunks": 619
  },
  {
    "id": "e5685b7b8f99cbd2a4a57133fa1d5cc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"learn-greetings-in-your-first-day-at-the-office\": { \"title\": \"Дізнайтесь про привітання в офісі першого робочого дня\", \"intro\": [ \"У цьому курсі ви навчитеся поширених висловів для ситуацій, з якими можете зіткнутись у перший робочий деньВи дізнаєтесь про представлення, знайомство з іншими людьми, спілкування під час перерви та отримання картки доступу \" ] }, \"learn-introductions-in-an-online-team-meeting\": { \"title\": \"Дізнайтесь про знайомство на онлайн-зустрічі\", \"intro\": [ \"У цьому курсі ви навчитеся представляти себе, а також вказувати свою професію та ділитися цілями на групових зустрічах\"\n        ]\n      },\n      \"learn-conversation-starters-in-the-break-room\": {\n        \"title\": \"Дізнайтесь про початок розмови в кімнаті відпочинку\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся розпочинати розмову в неформальних обставинах Ви також дізнаєтеся, як говорити про свої хобі та особисті риси, і навіть навчитеся запитувати про місця у місті",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 281,
    "total_chunks": 619
  },
  {
    "id": "223c3fb6952549502781957d67a4bfed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "картки доступу \" ] }, \"learn-introductions-in-an-online-team-meeting\": { \"title\": \"Дізнайтесь про знайомство на онлайн-зустрічі\", \"intro\": [ \"У цьому курсі ви навчитеся представляти себе, а також вказувати свою професію та ділитися цілями на групових зустрічах\" ] }, \"learn-conversation-starters-in-the-break-room\": { \"title\": \"Дізнайтесь про початок розмови в кімнаті відпочинку\", \"intro\": [ \"У цьому курсі ви навчитеся розпочинати розмову в неформальних обставинах Ви також дізнаєтеся, як говорити про свої хобі та особисті риси, і навіть навчитеся запитувати про місця у місті\"\n        ]\n      },\n      \"learn-how-to-talk-about-a-typical-workday-and-tasks\": {\n        \"title\": \"Дізнайтесь, як говорити про типовий робочий день та завдання\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь розповідати про свій робочий день і завдання, які виконуєте на роботі, а також як ділитися ними з іншими Основний акцент зроблено на структурах, які використовують для опису діяльності, а також на словниковому запасі, пов’язаному з завданнями",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 282,
    "total_chunks": 619
  },
  {
    "id": "9b771d67aafb7f9aaf5eae91eb88c6a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Ви також дізнаєтеся, як говорити про свої хобі та особисті риси, і навіть навчитеся запитувати про місця у місті\" ] }, \"learn-how-to-talk-about-a-typical-workday-and-tasks\": { \"title\": \"Дізнайтесь, як говорити про типовий робочий день та завдання\", \"intro\": [ \"У цьому курсі ви навчитесь розповідати про свій робочий день і завдання, які виконуєте на роботі, а також як ділитися ними з іншими Основний акцент зроблено на структурах, які використовують для опису діяльності, а також на словниковому запасі, пов’язаному з завданнями\"\n        ]\n      },\n      \"learn-how-to-discuss-your-morning-or-evening-routine\": {\n        \"title\": \"Дізнайтесь, як обговорювати ранкову або вечірню рутину\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь розповідати про свою щоденну рутину та ділитися нею з іншими Основний акцент зроблено на структурах, які використовують для опису рутини, а також на словниковому запасі, пов’язаному з щоденними завданнями",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 283,
    "total_chunks": 619
  },
  {
    "id": "4fc43fa73980afe855242e70fe634aab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "виконуєте на роботі, а також як ділитися ними з іншими Основний акцент зроблено на структурах, які використовують для опису діяльності, а також на словниковому запасі, пов’язаному з завданнями\" ] }, \"learn-how-to-discuss-your-morning-or-evening-routine\": { \"title\": \"Дізнайтесь, як обговорювати ранкову або вечірню рутину\", \"intro\": [ \"У цьому курсі ви навчитесь розповідати про свою щоденну рутину та ділитися нею з іншими Основний акцент зроблено на структурах, які використовують для опису рутини, а також на словниковому запасі, пов’язаному з щоденними завданнями\"\n        ]\n      },\n      \"learn-how-to-describe-your-current-project\": {\n        \"title\": \"Дізнайтесь, як описувати поточний проєкт\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь розповідати про проєкти, в яких ви берете участь, та як інформувати інших про свою участь Основний акцент зроблено на структурах, які використовують для інформування, а також на пов’язаному словниковому запасі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 284,
    "total_chunks": 619
  },
  {
    "id": "e0f567f9bd753339ded646a73cf2ab7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розповідати про свою щоденну рутину та ділитися нею з іншими Основний акцент зроблено на структурах, які використовують для опису рутини, а також на словниковому запасі, пов’язаному з щоденними завданнями\" ] }, \"learn-how-to-describe-your-current-project\": { \"title\": \"Дізнайтесь, як описувати поточний проєкт\", \"intro\": [ \"У цьому курсі ви навчитесь розповідати про проєкти, в яких ви берете участь, та як інформувати інших про свою участь Основний акцент зроблено на структурах, які використовують для інформування, а також на пов’язаному словниковому запасі\"\n        ]\n      },\n      \"learn-how-to-ask-and-share-about-educational-and-professional-background\": {\n        \"title\": \"Дізнайтесь, як запитувати та розповідати про освіту і досвід роботи\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як запитувати про освіту та досвід роботи іншої людини, а також навчитесь ділитися інформацією про власний досвід",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 285,
    "total_chunks": 619
  },
  {
    "id": "75538082354b9b4cfed65c64375704b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"intro\": [ \"У цьому курсі ви навчитесь розповідати про проєкти, в яких ви берете участь, та як інформувати інших про свою участь Основний акцент зроблено на структурах, які використовують для інформування, а також на пов’язаному словниковому запасі\" ] }, \"learn-how-to-ask-and-share-about-educational-and-professional-background\": { \"title\": \"Дізнайтесь, як запитувати та розповідати про освіту і досвід роботи\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як запитувати про освіту та досвід роботи іншої людини, а також навчитесь ділитися інформацією про власний досвід\"\n        ]\n      },\n      \"learn-how-to-talk-about-hobbies-and-interests\": {\n        \"title\": \"Дізнайтесь, як говорити про хобі та захоплення\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь говорити про хобі та речі, які вас цікавлять Ви також дізнаєтесь, як запитувати про захоплення інших людей та як запропонувати їм скласти компанію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 286,
    "total_chunks": 619
  },
  {
    "id": "eb75ebc06ac7ec2f67fe0acb18d738b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Дізнайтесь, як запитувати та розповідати про освіту і досвід роботи\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як запитувати про освіту та досвід роботи іншої людини, а також навчитесь ділитися інформацією про власний досвід\" ] }, \"learn-how-to-talk-about-hobbies-and-interests\": { \"title\": \"Дізнайтесь, як говорити про хобі та захоплення\", \"intro\": [ \"У цьому курсі ви навчитесь говорити про хобі та речі, які вас цікавлять Ви також дізнаєтесь, як запитувати про захоплення інших людей та як запропонувати їм скласти компанію\"\n        ]\n      },\n      \"learn-how-to-discuss-roles-and-responsibilies\": {\n        \"title\": \"Дізнайтесь, як обговорювати посади та обов’язки\",\n        \"intro\": [\n          \"У цьому курсі ви обговорюватимете посади та обов’язки людей в компанії й поза нею Ви дізнаєтеся, як запитувати про посади та обов’язки, а також як ділитися власною інформацією на цю тему",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 287,
    "total_chunks": 619
  },
  {
    "id": "b4f15666060b8060a3015238a1346e34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "та захоплення\", \"intro\": [ \"У цьому курсі ви навчитесь говорити про хобі та речі, які вас цікавлять Ви також дізнаєтесь, як запитувати про захоплення інших людей та як запропонувати їм скласти компанію\" ] }, \"learn-how-to-discuss-roles-and-responsibilies\": { \"title\": \"Дізнайтесь, як обговорювати посади та обов’язки\", \"intro\": [ \"У цьому курсі ви обговорюватимете посади та обов’язки людей в компанії й поза нею Ви дізнаєтеся, як запитувати про посади та обов’язки, а також як ділитися власною інформацією на цю тему\"\n        ]\n      },\n      \"learn-how-to-have-a-conversation-about-preferences-and-motivations\": {\n        \"title\": \"Дізнайтесь, як говорити про вподобання та вмотивованість\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як запитувати про мотивацію в особистому і професійному житті, як відповідати на такі запитання та як обговорювати вподобання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 288,
    "total_chunks": 619
  },
  {
    "id": "bd6770ec90eb29fb27ff999aa2f1d741",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Дізнайтесь, як обговорювати посади та обов’язки\", \"intro\": [ \"У цьому курсі ви обговорюватимете посади та обов’язки людей в компанії й поза нею Ви дізнаєтеся, як запитувати про посади та обов’язки, а також як ділитися власною інформацією на цю тему\" ] }, \"learn-how-to-have-a-conversation-about-preferences-and-motivations\": { \"title\": \"Дізнайтесь, як говорити про вподобання та вмотивованість\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як запитувати про мотивацію в особистому і професійному житті, як відповідати на такі запитання та як обговорювати вподобання\"\n        ]\n      },\n      \"learn-how-to-discuss-popular-trends-in-technology\": {\n        \"title\": \"Дізнайтесь, як обговорювати технологічні тренди\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся обговорювати технології, про які зараз всі говорять",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 289,
    "total_chunks": 619
  },
  {
    "id": "f3ce8293f8519e0785609d93108d27af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "як запитувати про посади та обов’язки, а також як ділитися власною інформацією на цю тему\" ] }, \"learn-how-to-have-a-conversation-about-preferences-and-motivations\": { \"title\": \"Дізнайтесь, як говорити про вподобання та вмотивованість\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як запитувати про мотивацію в особистому і професійному житті, як відповідати на такі запитання та як обговорювати вподобання\" ] }, \"learn-how-to-discuss-popular-trends-in-technology\": { \"title\": \"Дізнайтесь, як обговорювати технологічні тренди\", \"intro\": [ \"У цьому курсі ви навчитеся обговорювати технології, про які зараз всі говорять\"\n        ]\n      },\n      \"learn-how-to-clarify-information-in-different-interactions\": {\n        \"title\": \"Дізнайтесь, як уточнити інформацію в різних ситуаціях\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся перевіряти інформацію та правильно просити уточнення, якщо щось не зрозуміло",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 290,
    "total_chunks": 619
  },
  {
    "id": "c004ed742075b31f07beef3b3504bfd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У цьому курсі ви дізнаєтесь, як запитувати про мотивацію в особистому і професійному житті, як відповідати на такі запитання та як обговорювати вподобання\" ] }, \"learn-how-to-discuss-popular-trends-in-technology\": { \"title\": \"Дізнайтесь, як обговорювати технологічні тренди\", \"intro\": [ \"У цьому курсі ви навчитеся обговорювати технології, про які зараз всі говорять\" ] }, \"learn-how-to-clarify-information-in-different-interactions\": { \"title\": \"Дізнайтесь, як уточнити інформацію в різних ситуаціях\", \"intro\": [ \"У цьому курсі ви навчитеся перевіряти інформацію та правильно просити уточнення, якщо щось не зрозуміло\"\n        ]\n      },\n      \"learn-how-to-use-basic-programming-vocabulary-in-conversations\": {\n        \"title\": \"Дізнайтесь, як використовувати базові слова з програмування\",\n        \"intro\": [\n          \"Цей курс ознайомить вас з основною термінологією, пов’язаною з програмуванням Ви навчитесь ставити запитання щодо основних понять програмування",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 291,
    "total_chunks": 619
  },
  {
    "id": "95cc44357e23529897568df7f4df2280",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "тренди\", \"intro\": [ \"У цьому курсі ви навчитеся обговорювати технології, про які зараз всі говорять\" ] }, \"learn-how-to-clarify-information-in-different-interactions\": { \"title\": \"Дізнайтесь, як уточнити інформацію в різних ситуаціях\", \"intro\": [ \"У цьому курсі ви навчитеся перевіряти інформацію та правильно просити уточнення, якщо щось не зрозуміло\" ] }, \"learn-how-to-use-basic-programming-vocabulary-in-conversations\": { \"title\": \"Дізнайтесь, як використовувати базові слова з програмування\", \"intro\": [ \"Цей курс ознайомить вас з основною термінологією, пов’язаною з програмуванням Ви навчитесь ставити запитання щодо основних понять програмування\"\n        ]\n      },\n      \"learn-how-to-use-code-related-concepts-and-terms\": {\n        \"title\": \"Дізнайтесь, як використовувати поняття та терміни з програмування\",\n        \"intro\": [\n          \"У цьому курсі ви ознайомитесь з термінами, пов’язаними з програмуванням, і навчитесь використовувати їх у розмові",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 292,
    "total_chunks": 619
  },
  {
    "id": "a3c2ad49d2afba9c6821fdbe607c5834",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "курсі ви навчитеся перевіряти інформацію та правильно просити уточнення, якщо щось не зрозуміло\" ] }, \"learn-how-to-use-basic-programming-vocabulary-in-conversations\": { \"title\": \"Дізнайтесь, як використовувати базові слова з програмування\", \"intro\": [ \"Цей курс ознайомить вас з основною термінологією, пов’язаною з програмуванням Ви навчитесь ставити запитання щодо основних понять програмування\" ] }, \"learn-how-to-use-code-related-concepts-and-terms\": { \"title\": \"Дізнайтесь, як використовувати поняття та терміни з програмування\", \"intro\": [ \"У цьому курсі ви ознайомитесь з термінами, пов’язаними з програмуванням, і навчитесь використовувати їх у розмові\"\n        ]\n      },\n      \"learn-how-to-discuss-tech-trends-and-updates\": {\n        \"title\": \"Дізнайтесь, як обговорювати технологічні тренди та оновлення\",\n        \"intro\": [\n          \"У цьому курсі ви ознайомитесь з деякими останніми трендами у світі технологій і навчитесь обговорювати їх англійською мовою",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 293,
    "total_chunks": 619
  },
  {
    "id": "3c15db2843d0ad96b09d3bf4d1edc3fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "основною термінологією, пов’язаною з програмуванням Ви навчитесь ставити запитання щодо основних понять програмування\" ] }, \"learn-how-to-use-code-related-concepts-and-terms\": { \"title\": \"Дізнайтесь, як використовувати поняття та терміни з програмування\", \"intro\": [ \"У цьому курсі ви ознайомитесь з термінами, пов’язаними з програмуванням, і навчитесь використовувати їх у розмові\" ] }, \"learn-how-to-discuss-tech-trends-and-updates\": { \"title\": \"Дізнайтесь, як обговорювати технологічні тренди та оновлення\", \"intro\": [ \"У цьому курсі ви ознайомитесь з деякими останніми трендами у світі технологій і навчитесь обговорювати їх англійською мовою\"\n        ]\n      },\n      \"learn-how-to-help-a-coworker-troubleshoot-on-github\": {\n        \"title\": \"Дізнайтесь, як допомогти колезі розв’язати проблему на GitHub\",\n        \"intro\": [\n          \"У цьому курсі ви вивчите вирази, пов’язані із проханням про допомогу у колеги, а також тим, як запропонувати свою допомогу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 294,
    "total_chunks": 619
  },
  {
    "id": "45f4202c20278399d7540b046c931967",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "пов’язаними з програмуванням, і навчитесь використовувати їх у розмові\" ] }, \"learn-how-to-discuss-tech-trends-and-updates\": { \"title\": \"Дізнайтесь, як обговорювати технологічні тренди та оновлення\", \"intro\": [ \"У цьому курсі ви ознайомитесь з деякими останніми трендами у світі технологій і навчитесь обговорювати їх англійською мовою\" ] }, \"learn-how-to-help-a-coworker-troubleshoot-on-github\": { \"title\": \"Дізнайтесь, як допомогти колезі розв’язати проблему на GitHub\", \"intro\": [ \"У цьому курсі ви вивчите вирази, пов’язані із проханням про допомогу у колеги, а також тим, як запропонувати свою допомогу\"\n        ]\n      },\n      \"learn-how-to-share-your-progress-in-weekly-stand-up-meetings\": {\n        \"title\": \"Дізнайтесь, як ділитись своїм прогресом на щотижневій зустрічі\",\n        \"intro\": [\n          \"Цей курс покаже, як говорити про свої проєкти в контексті того, що ви вже зробили та що виконуєте зараз",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 295,
    "total_chunks": 619
  },
  {
    "id": "506c5d44fc5517232b543709d535aecd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "технологій і навчитесь обговорювати їх англійською мовою\" ] }, \"learn-how-to-help-a-coworker-troubleshoot-on-github\": { \"title\": \"Дізнайтесь, як допомогти колезі розв’язати проблему на GitHub\", \"intro\": [ \"У цьому курсі ви вивчите вирази, пов’язані із проханням про допомогу у колеги, а також тим, як запропонувати свою допомогу\" ] }, \"learn-how-to-share-your-progress-in-weekly-stand-up-meetings\": { \"title\": \"Дізнайтесь, як ділитись своїм прогресом на щотижневій зустрічі\", \"intro\": [ \"Цей курс покаже, як говорити про свої проєкти в контексті того, що ви вже зробили та що виконуєте зараз\"\n        ]\n      },\n      \"learn-how-to-ask-for-clarification-on-code-understanding\": {\n        \"title\": \"Дізнайтесь, як просити роз’яснення коду\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як ставити запитання, щоб уточнити те, що не зовсім зрозуміле у коді",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 296,
    "total_chunks": 619
  },
  {
    "id": "bc994dd1fd0bc3d04339356327b09a2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "із проханням про допомогу у колеги, а також тим, як запропонувати свою допомогу\" ] }, \"learn-how-to-share-your-progress-in-weekly-stand-up-meetings\": { \"title\": \"Дізнайтесь, як ділитись своїм прогресом на щотижневій зустрічі\", \"intro\": [ \"Цей курс покаже, як говорити про свої проєкти в контексті того, що ви вже зробили та що виконуєте зараз\" ] }, \"learn-how-to-ask-for-clarification-on-code-understanding\": { \"title\": \"Дізнайтесь, як просити роз’яснення коду\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як ставити запитання, щоб уточнити те, що не зовсім зрозуміле у коді\"\n        ]\n      },\n      \"learn-how-to-document-code-for-a-project\": {\n        \"title\": \"Дізнайтесь, як документувати код проєкту\",\n        \"intro\": [\n          \"Цей курс ознайомить вас з виразами, пов’язаними із документацією коду \"\n        ]\n      },\n      \"learn-how-to-read-and-understand-code-documentation\": {\n        \"title\": \"Дізнайтесь, як читати та розуміти документацію\",\n        \"intro\": [\n          \"У цьому курсі ще більше виразів, пов’язаних із документацією коду, а також декілька порад, як розуміти його",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 297,
    "total_chunks": 619
  },
  {
    "id": "86cdcb8d882176ae68f8552eb1f00834",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "як просити роз’яснення коду\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як ставити запитання, щоб уточнити те, що не зовсім зрозуміле у коді\" ] }, \"learn-how-to-document-code-for-a-project\": { \"title\": \"Дізнайтесь, як документувати код проєкту\", \"intro\": [ \"Цей курс ознайомить вас з виразами, пов’язаними із документацією коду \" ] }, \"learn-how-to-read-and-understand-code-documentation\": { \"title\": \"Дізнайтесь, як читати та розуміти документацію\", \"intro\": [ \"У цьому курсі ще більше виразів, пов’язаних із документацією коду, а також декілька порад, як розуміти його\"\n        ]\n      },\n      \"learn-how-to-analyze-code-documentation\": {\n        \"title\": \"Дізнайтесь, як аналізувати документацію\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як правильно читати документацію та аналізувати її \"\n        ]\n      },\n      \"learn-how-to-share-progress-and-accomplishments\": {\n        \"title\": \"Дізнайтесь, як ділитись прогресом та досягненнями\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь ділитись прогресом та досягненнями зі своїми колегами",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 298,
    "total_chunks": 619
  },
  {
    "id": "2eaaa0c9170be9bb99775d1709f6dc0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Дізнайтесь, як читати та розуміти документацію\", \"intro\": [ \"У цьому курсі ще більше виразів, пов’язаних із документацією коду, а також декілька порад, як розуміти його\" ] }, \"learn-how-to-analyze-code-documentation\": { \"title\": \"Дізнайтесь, як аналізувати документацію\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як правильно читати документацію та аналізувати її \" ] }, \"learn-how-to-share-progress-and-accomplishments\": { \"title\": \"Дізнайтесь, як ділитись прогресом та досягненнями\", \"intro\": [ \"У цьому курсі ви навчитесь ділитись прогресом та досягненнями зі своїми колегами\"\n        ]\n      },\n      \"learn-how-to-talk-about-updates-and-plans-for-tasks-and-projects\": {\n        \"title\": \"Дізнайтесь, як говорити про оновлення та плани щодо завдань і проєктів\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як говорити про останні досягнення проєктів та про свої плани",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 299,
    "total_chunks": 619
  },
  {
    "id": "bd4b20375532cb419546126c78a537cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "як аналізувати документацію\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як правильно читати документацію та аналізувати її \" ] }, \"learn-how-to-share-progress-and-accomplishments\": { \"title\": \"Дізнайтесь, як ділитись прогресом та досягненнями\", \"intro\": [ \"У цьому курсі ви навчитесь ділитись прогресом та досягненнями зі своїми колегами\" ] }, \"learn-how-to-talk-about-updates-and-plans-for-tasks-and-projects\": { \"title\": \"Дізнайтесь, як говорити про оновлення та плани щодо завдань і проєктів\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як говорити про останні досягнення проєктів та про свої плани\"\n        ]\n      },\n      \"learn-how-to-express-agreement-or-disagreement\": {\n        \"title\": \"Дізнайтесь, як погоджуватись та не погоджуватись\",\n        \"intro\": [\n          \"Цей курс навчить, як погоджуватись та не погоджуватись з твердженнями інших",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 300,
    "total_chunks": 619
  },
  {
    "id": "3059dd5c58aa8a3573c255b1d006a05a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "як ділитись прогресом та досягненнями\", \"intro\": [ \"У цьому курсі ви навчитесь ділитись прогресом та досягненнями зі своїми колегами\" ] }, \"learn-how-to-talk-about-updates-and-plans-for-tasks-and-projects\": { \"title\": \"Дізнайтесь, як говорити про оновлення та плани щодо завдань і проєктів\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як говорити про останні досягнення проєктів та про свої плани\" ] }, \"learn-how-to-express-agreement-or-disagreement\": { \"title\": \"Дізнайтесь, як погоджуватись та не погоджуватись\", \"intro\": [ \"Цей курс навчить, як погоджуватись та не погоджуватись з твердженнями інших\"\n        ]\n      },\n      \"learn-how-to-offer-technical-support-and-guidance\": {\n        \"title\": \"Дізнайтесь, як надавати технічну підтримку та супровід\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як пропонувати свою допомогу по технічних питаннях",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 301,
    "total_chunks": 619
  },
  {
    "id": "cec5789dae92635364460ca851ad2c7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "говорити про оновлення та плани щодо завдань і проєктів\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як говорити про останні досягнення проєктів та про свої плани\" ] }, \"learn-how-to-express-agreement-or-disagreement\": { \"title\": \"Дізнайтесь, як погоджуватись та не погоджуватись\", \"intro\": [ \"Цей курс навчить, як погоджуватись та не погоджуватись з твердженнями інших\" ] }, \"learn-how-to-offer-technical-support-and-guidance\": { \"title\": \"Дізнайтесь, як надавати технічну підтримку та супровід\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як пропонувати свою допомогу по технічних питаннях\"\n        ]\n      },\n      \"learn-how-to-request-and-receive-guidance\": {\n        \"title\": \"Дізнайтесь, як запитувати та отримувати супровід\",\n        \"intro\": [\n          \"Цей курс роз’яснить, як просити допомоги від колеги, коли це потрібно",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 302,
    "total_chunks": 619
  },
  {
    "id": "8dcedd4d06735e3f220ac8ce80a778e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "свої плани\" ] }, \"learn-how-to-express-agreement-or-disagreement\": { \"title\": \"Дізнайтесь, як погоджуватись та не погоджуватись\", \"intro\": [ \"Цей курс навчить, як погоджуватись та не погоджуватись з твердженнями інших\" ] }, \"learn-how-to-offer-technical-support-and-guidance\": { \"title\": \"Дізнайтесь, як надавати технічну підтримку та супровід\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як пропонувати свою допомогу по технічних питаннях\" ] }, \"learn-how-to-request-and-receive-guidance\": { \"title\": \"Дізнайтесь, як запитувати та отримувати супровід\", \"intro\": [ \"Цей курс роз’яснить, як просити допомоги від колеги, коли це потрібно\"\n        ]\n      },\n      \"learn-how-to-provide-explanations-when-helping-others\": {\n        \"title\": \"Дізнайтесь, як надавати пояснення при допомозі іншим\",\n        \"intro\": [\n          \"Цей курс ознайомить з тим, як правильно надавати пояснення іншим людям",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 303,
    "total_chunks": 619
  },
  {
    "id": "58a47d0b35ad13fb84f1d66f9f52f4a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "інших\" ] }, \"learn-how-to-offer-technical-support-and-guidance\": { \"title\": \"Дізнайтесь, як надавати технічну підтримку та супровід\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як пропонувати свою допомогу по технічних питаннях\" ] }, \"learn-how-to-request-and-receive-guidance\": { \"title\": \"Дізнайтесь, як запитувати та отримувати супровід\", \"intro\": [ \"Цей курс роз’яснить, як просити допомоги від колеги, коли це потрібно\" ] }, \"learn-how-to-provide-explanations-when-helping-others\": { \"title\": \"Дізнайтесь, як надавати пояснення при допомозі іншим\", \"intro\": [ \"Цей курс ознайомить з тим, як правильно надавати пояснення іншим людям\"\n        ]\n      },\n      \"a2-english-for-developers-certification-exam\": {\n        \"title\": \"Екзамен з сертифікації «Англійська мова A2 для розробників»\",\n        \"intro\": [\n          \"Це обов’язковий екзамен, щоб отримати сертифікацію «Англійська мова A2 для розробників»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 304,
    "total_chunks": 619
  },
  {
    "id": "8e3b3085e93bf90b0ffb609fcc831ba5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "питаннях\" ] }, \"learn-how-to-request-and-receive-guidance\": { \"title\": \"Дізнайтесь, як запитувати та отримувати супровід\", \"intro\": [ \"Цей курс роз’яснить, як просити допомоги від колеги, коли це потрібно\" ] }, \"learn-how-to-provide-explanations-when-helping-others\": { \"title\": \"Дізнайтесь, як надавати пояснення при допомозі іншим\", \"intro\": [ \"Цей курс ознайомить з тим, як правильно надавати пояснення іншим людям\" ] }, \"a2-english-for-developers-certification-exam\": { \"title\": \"Екзамен з сертифікації «Англійська мова A2 для розробників»\", \"intro\": [ \"Це обов’язковий екзамен, щоб отримати сертифікацію «Англійська мова A2 для розробників»\"\n        ]\n      }\n    }\n  },\n  \"b1-english-for-developers\": {\n    \"title\": \"Сертифікація «Англійська мова B1 для розробників» (бета)\",\n    \"intro\": [\n      \"У цьому курсі з вивчення англійської мови для розробників ви опануєте основи англійської комунікації",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 305,
    "total_chunks": 619
  },
  {
    "id": "e89dbada7441b42e24841840940787ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Дізнайтесь, як надавати пояснення при допомозі іншим\", \"intro\": [ \"Цей курс ознайомить з тим, як правильно надавати пояснення іншим людям\" ] }, \"a2-english-for-developers-certification-exam\": { \"title\": \"Екзамен з сертифікації «Англійська мова A2 для розробників»\", \"intro\": [ \"Це обов’язковий екзамен, щоб отримати сертифікацію «Англійська мова A2 для розробників»\" ] } } }, \"b1-english-for-developers\": { \"title\": \"Сертифікація «Англійська мова B1 для розробників» (бета)\", \"intro\": [ \"У цьому курсі з вивчення англійської мови для розробників ви опануєте основи англійської комунікаціїКурс створено відповідно до загальноєвропейських рекомендацій з мовної освіти рівня B1 (CEFR) Ми зосередилися на словниковому запасі, що є особливо корисним для розробників \",\n      \"Курс допоможе зміцнити базові знання, одночасно ознайомлюючи із більш складною граматикою та використанням",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 306,
    "total_chunks": 619
  },
  {
    "id": "363d67e3a4fa30640c94b8b27f35b1fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "обов’язковий екзамен, щоб отримати сертифікацію «Англійська мова A2 для розробників»\" ] } } }, \"b1-english-for-developers\": { \"title\": \"Сертифікація «Англійська мова B1 для розробників» (бета)\", \"intro\": [ \"У цьому курсі з вивчення англійської мови для розробників ви опануєте основи англійської комунікаціїКурс створено відповідно до загальноєвропейських рекомендацій з мовної освіти рівня B1 (CEFR) Ми зосередилися на словниковому запасі, що є особливо корисним для розробників \", \"Курс допоможе зміцнити базові знання, одночасно ознайомлюючи із більш складною граматикою та використаннямВи навчитесь описувати місця та речі, ділитися досвідом і впевнено використовувати часи, серед яких теперішній доконаний та простий майбутній А також отримаєте практичні поради: як вести розмову, ділитись думкою та висловлювати згоду чи незгоду",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 307,
    "total_chunks": 619
  },
  {
    "id": "7f7882c2ba3af47179fa7424f04a970b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "для розробників ви опануєте основи англійської комунікаціїКурс створено відповідно до загальноєвропейських рекомендацій з мовної освіти рівня B1 (CEFR) Ми зосередилися на словниковому запасі, що є особливо корисним для розробників \", \"Курс допоможе зміцнити базові знання, одночасно ознайомлюючи із більш складною граматикою та використаннямВи навчитесь описувати місця та речі, ділитися досвідом і впевнено використовувати часи, серед яких теперішній доконаний та простий майбутній А також отримаєте практичні поради: як вести розмову, ділитись думкою та висловлювати згоду чи незгоду\",\n      \"Основний фокус на застосуванні цих навичок у професійній та технологічній галузях Ви будете практикувати словниковий запас і фрази, важливі для розробників: як описувати код, брати участь у зустрічах і обговорювати технологічні тенденції",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 308,
    "total_chunks": 619
  },
  {
    "id": "850338238421ca890518a56d8d841a0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "зміцнити базові знання, одночасно ознайомлюючи із більш складною граматикою та використаннямВи навчитесь описувати місця та речі, ділитися досвідом і впевнено використовувати часи, серед яких теперішній доконаний та простий майбутній А також отримаєте практичні поради: як вести розмову, ділитись думкою та висловлювати згоду чи незгоду\", \"Основний фокус на застосуванні цих навичок у професійній та технологічній галузях Ви будете практикувати словниковий запас і фрази, важливі для розробників: як описувати код, брати участь у зустрічах і обговорювати технологічні тенденціїДо складніших тем належать умовні речення, порівняльні конструкції та підтримка розмови, щоб підготувати вас до реальних взаємодій у технологічній індустрії \",\n      \"Весь курс рівня B1 складається з 73 різних діалогів",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 309,
    "total_chunks": 619
  },
  {
    "id": "fb17bb73c76244a0db87fc9b20a8fc9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "А також отримаєте практичні поради: як вести розмову, ділитись думкою та висловлювати згоду чи незгоду\", \"Основний фокус на застосуванні цих навичок у професійній та технологічній галузях Ви будете практикувати словниковий запас і фрази, важливі для розробників: як описувати код, брати участь у зустрічах і обговорювати технологічні тенденціїДо складніших тем належать умовні речення, порівняльні конструкції та підтримка розмови, щоб підготувати вас до реальних взаємодій у технологічній індустрії \", \"Весь курс рівня B1 складається з 73 різних діалогівКожен з них створений для того, щоб розширити ваш словниковий запас та підвищити впевненість під час спілкування в професійному середовищі \"\n    ],\n    \"blocks\": {\n      \"learn-how-to-describe-places-and-events\": {\n        \"title\": \"Дізнайтесь, як описувати місця і події\",\n        \"intro\": [\"У цьому курсі ви навчитеся говорити про місця та події",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 310,
    "total_chunks": 619
  },
  {
    "id": "58957ede0019b0fa7f8fc8daa65ee019",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "і обговорювати технологічні тенденціїДо складніших тем належать умовні речення, порівняльні конструкції та підтримка розмови, щоб підготувати вас до реальних взаємодій у технологічній індустрії \", \"Весь курс рівня B1 складається з 73 різних діалогівКожен з них створений для того, щоб розширити ваш словниковий запас та підвищити впевненість під час спілкування в професійному середовищі \" ], \"blocks\": { \"learn-how-to-describe-places-and-events\": { \"title\": \"Дізнайтесь, як описувати місця і події\", \"intro\": [\"У цьому курсі ви навчитеся говорити про місця та події\"]\n      },\n      \"learn-how-to-talk-about-past-experiences\": {\n        \"title\": \"Дізнайтесь, як говорити про досвід\",\n        \"intro\": [\"У цьому курсі ви навчитеся ділитись власним досвідом \"]\n      },\n      \"learn-how-to-talk-about-past-activities\": {\n        \"title\": \"Дізнайтесь, як говорити про дії з минулого\",\n        \"intro\": [\"У цьому курсі ви навчитеся говорити про речі, які зробили",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 311,
    "total_chunks": 619
  },
  {
    "id": "1c5a6b9005f305bdc972caca86eaec71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "словниковий запас та підвищити впевненість під час спілкування в професійному середовищі \" ], \"blocks\": { \"learn-how-to-describe-places-and-events\": { \"title\": \"Дізнайтесь, як описувати місця і події\", \"intro\": [\"У цьому курсі ви навчитеся говорити про місця та події\"] }, \"learn-how-to-talk-about-past-experiences\": { \"title\": \"Дізнайтесь, як говорити про досвід\", \"intro\": [\"У цьому курсі ви навчитеся ділитись власним досвідом \"] }, \"learn-how-to-talk-about-past-activities\": { \"title\": \"Дізнайтесь, як говорити про дії з минулого\", \"intro\": [\"У цьому курсі ви навчитеся говорити про речі, які зробили\"]\n      },\n      \"learn-present-perfect-while-talking-about-accessibility\": {\n        \"title\": \"Дізнайтесь про теперішній доконаний час, говорячи про доступність\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся використовувати теперішній доконаний час і трішки дізнаєтесь про доступність",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 312,
    "total_chunks": 619
  },
  {
    "id": "c1986f55ca8ce3a4f00b19fa5295f907",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви навчитеся говорити про місця та події\"] }, \"learn-how-to-talk-about-past-experiences\": { \"title\": \"Дізнайтесь, як говорити про досвід\", \"intro\": [\"У цьому курсі ви навчитеся ділитись власним досвідом \"] }, \"learn-how-to-talk-about-past-activities\": { \"title\": \"Дізнайтесь, як говорити про дії з минулого\", \"intro\": [\"У цьому курсі ви навчитеся говорити про речі, які зробили\"] }, \"learn-present-perfect-while-talking-about-accessibility\": { \"title\": \"Дізнайтесь про теперішній доконаний час, говорячи про доступність\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати теперішній доконаний час і трішки дізнаєтесь про доступність\"\n        ]\n      },\n      \"learn-how-to-plan-future-events\": {\n        \"title\": \"Дізнайтесь, як планувати майбутні події\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся використовувати майбутній час, щоб планувати різні події",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 313,
    "total_chunks": 619
  },
  {
    "id": "24c45706adc0665fb1ab1b15b0914dbf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "досвідом \"] }, \"learn-how-to-talk-about-past-activities\": { \"title\": \"Дізнайтесь, як говорити про дії з минулого\", \"intro\": [\"У цьому курсі ви навчитеся говорити про речі, які зробили\"] }, \"learn-present-perfect-while-talking-about-accessibility\": { \"title\": \"Дізнайтесь про теперішній доконаний час, говорячи про доступність\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати теперішній доконаний час і трішки дізнаєтесь про доступність\" ] }, \"learn-how-to-plan-future-events\": { \"title\": \"Дізнайтесь, як планувати майбутні події\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати майбутній час, щоб планувати різні події\"\n        ]\n      },\n      \"learn-future-continuous-while-describing-actions\": {\n        \"title\": \"Дізнайтесь про майбутній тривалий час, описуючи дії\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся використовувати майбутній тривалий час та описувати дії, які будуть виконані",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 314,
    "total_chunks": 619
  },
  {
    "id": "90d2d82ead59719308b6063df4ad3872",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "про теперішній доконаний час, говорячи про доступність\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати теперішній доконаний час і трішки дізнаєтесь про доступність\" ] }, \"learn-how-to-plan-future-events\": { \"title\": \"Дізнайтесь, як планувати майбутні події\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати майбутній час, щоб планувати різні події\" ] }, \"learn-future-continuous-while-describing-actions\": { \"title\": \"Дізнайтесь про майбутній тривалий час, описуючи дії\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати майбутній тривалий час та описувати дії, які будуть виконані\"\n        ]\n      },\n      \"learn-how-to-use-conditionals\": {\n        \"title\": \"Дізнайтесь, як використовувати умовні речення\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь використовувати умовні речення, щоб описувати уявні ситуації, які залежать від певних умов",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 315,
    "total_chunks": 619
  },
  {
    "id": "0fb90adaa6dfe229c7b630e70407e85a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "як планувати майбутні події\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати майбутній час, щоб планувати різні події\" ] }, \"learn-future-continuous-while-describing-actions\": { \"title\": \"Дізнайтесь про майбутній тривалий час, описуючи дії\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати майбутній тривалий час та описувати дії, які будуть виконані\" ] }, \"learn-how-to-use-conditionals\": { \"title\": \"Дізнайтесь, як використовувати умовні речення\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати умовні речення, щоб описувати уявні ситуації, які залежать від певних умов\"\n        ]\n      },\n      \"learn-how-to-share-feedback\": {\n        \"title\": \"Дізнайтесь, як ділитись фідбеком\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як ділитись зворотним зв’язком щодо роботи, підкреслюючи сильні сторони і моменти для покращення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 316,
    "total_chunks": 619
  },
  {
    "id": "f73dbd57bf8995332e184ea685087ffa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "дії\", \"intro\": [ \"У цьому курсі ви навчитеся використовувати майбутній тривалий час та описувати дії, які будуть виконані\" ] }, \"learn-how-to-use-conditionals\": { \"title\": \"Дізнайтесь, як використовувати умовні речення\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати умовні речення, щоб описувати уявні ситуації, які залежать від певних умов\" ] }, \"learn-how-to-share-feedback\": { \"title\": \"Дізнайтесь, як ділитись фідбеком\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як ділитись зворотним зв’язком щодо роботи, підкреслюючи сильні сторони і моменти для покращення\"\n        ]\n      },\n      \"learn-how-to-share-your-opinion\": {\n        \"title\": \"Дізнайтесь, як ділитись своєю думкою\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як ділитись своїми ідеями і емоціями під час дискусії",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 317,
    "total_chunks": 619
  },
  {
    "id": "1e031a62a06d85cc6d011f81f3a185b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "умовні речення\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати умовні речення, щоб описувати уявні ситуації, які залежать від певних умов\" ] }, \"learn-how-to-share-feedback\": { \"title\": \"Дізнайтесь, як ділитись фідбеком\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як ділитись зворотним зв’язком щодо роботи, підкреслюючи сильні сторони і моменти для покращення\" ] }, \"learn-how-to-share-your-opinion\": { \"title\": \"Дізнайтесь, як ділитись своєю думкою\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як ділитись своїми ідеями і емоціями під час дискусії\"\n        ]\n      },\n      \"learn-how-to-express-agreement\": {\n        \"title\": \"Дізнайтесь, як виражати згоду\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь виражати згоду в будь-якій ситуації на роботі \"\n        ]\n      },\n      \"learn-how-to-express-disagreement\": {\n        \"title\": \"Дізнайтесь, як виражати незгоду\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь виражати незгоду в будь-якій ситуації на роботі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 318,
    "total_chunks": 619
  },
  {
    "id": "c90c5c94f2ef38bb09d45a1a600dfe09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "моменти для покращення\" ] }, \"learn-how-to-share-your-opinion\": { \"title\": \"Дізнайтесь, як ділитись своєю думкою\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як ділитись своїми ідеями і емоціями під час дискусії\" ] }, \"learn-how-to-express-agreement\": { \"title\": \"Дізнайтесь, як виражати згоду\", \"intro\": [ \"У цьому курсі ви навчитесь виражати згоду в будь-якій ситуації на роботі \" ] }, \"learn-how-to-express-disagreement\": { \"title\": \"Дізнайтесь, як виражати незгоду\", \"intro\": [ \"У цьому курсі ви навчитесь виражати незгоду в будь-якій ситуації на роботі\"\n        ]\n      },\n      \"learn-how-to-express-concerns\": {\n        \"title\": \"Дізнайтесь, як виражати занепокоєння\",\n        \"intro\": [\n          \"У цьому курсі ви навчитеся ділитись переживаннями щодо своїх проєктів і завдань",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 319,
    "total_chunks": 619
  },
  {
    "id": "4bc4773566e007087d41f27f3a7258d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ідеями і емоціями під час дискусії\" ] }, \"learn-how-to-express-agreement\": { \"title\": \"Дізнайтесь, як виражати згоду\", \"intro\": [ \"У цьому курсі ви навчитесь виражати згоду в будь-якій ситуації на роботі \" ] }, \"learn-how-to-express-disagreement\": { \"title\": \"Дізнайтесь, як виражати незгоду\", \"intro\": [ \"У цьому курсі ви навчитесь виражати незгоду в будь-якій ситуації на роботі\" ] }, \"learn-how-to-express-concerns\": { \"title\": \"Дізнайтесь, як виражати занепокоєння\", \"intro\": [ \"У цьому курсі ви навчитеся ділитись переживаннями щодо своїх проєктів і завдань\"\n        ]\n      },\n      \"learn-how-to-express-decisions-based-on-comparisons\": {\n        \"title\": \"Дізнайтесь, як виражати вибір на основі порівняння\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як порівнювати інструменти або компанії за допомогою таких слів, як better, faster та the best Також ви практикуватимете дружні розмови, де висловлюють думку та приймають рішення",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 320,
    "total_chunks": 619
  },
  {
    "id": "060c2c8e42ed0b1a7bf14c1ea3ed9128",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "навчитесь виражати незгоду в будь-якій ситуації на роботі\" ] }, \"learn-how-to-express-concerns\": { \"title\": \"Дізнайтесь, як виражати занепокоєння\", \"intro\": [ \"У цьому курсі ви навчитеся ділитись переживаннями щодо своїх проєктів і завдань\" ] }, \"learn-how-to-express-decisions-based-on-comparisons\": { \"title\": \"Дізнайтесь, як виражати вибір на основі порівняння\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як порівнювати інструменти або компанії за допомогою таких слів, як better, faster та the best Також ви практикуватимете дружні розмови, де висловлюють думку та приймають рішення\"\n        ]\n      },\n      \"learn-how-to-use-modal-verbs\": {\n        \"title\": \"Дізнайтесь, як використовувати модальні дієслова\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь говорити про правила, а також описувати необхідні дії та можливий розвиток подій Ви також попрактикуєтесь ставити запитання, чітко відповідати на них та надавати корисні деталі до своїх ідей",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 321,
    "total_chunks": 619
  },
  {
    "id": "e58951bc7c45df91e6507393eadef3b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"У цьому курсі ви дізнаєтесь, як порівнювати інструменти або компанії за допомогою таких слів, як better, faster та the best Також ви практикуватимете дружні розмови, де висловлюють думку та приймають рішення\" ] }, \"learn-how-to-use-modal-verbs\": { \"title\": \"Дізнайтесь, як використовувати модальні дієслова\", \"intro\": [ \"У цьому курсі ви навчитесь говорити про правила, а також описувати необхідні дії та можливий розвиток подій Ви також попрактикуєтесь ставити запитання, чітко відповідати на них та надавати корисні деталі до своїх ідей\"\n        ]\n      },\n      \"learn-how-to-manage-a-conversation\": {\n        \"title\": \"Дізнайтесь, як керувати бесідою\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як керувати розмовою на роботі (наприклад, як продовжити розмову після перерви, ввічливо змінити тему або перервати за необхідності) Ви також попрактикуєте корисні вирази, які роблять розмову чіткою, дружньою та структурованою",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 322,
    "total_chunks": 619
  },
  {
    "id": "1802507fcd40428f9559a227a998a09e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви навчитесь говорити про правила, а також описувати необхідні дії та можливий розвиток подій Ви також попрактикуєтесь ставити запитання, чітко відповідати на них та надавати корисні деталі до своїх ідей\" ] }, \"learn-how-to-manage-a-conversation\": { \"title\": \"Дізнайтесь, як керувати бесідою\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як керувати розмовою на роботі (наприклад, як продовжити розмову після перерви, ввічливо змінити тему або перервати за необхідності) Ви також попрактикуєте корисні вирази, які роблять розмову чіткою, дружньою та структурованою\"\n        ]\n      },\n      \"learn-how-to-clarify-misunderstandings\": {\n        \"title\": \"Дізнайтесь, як уточнити непорозуміння\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як запитувати й давати пояснення, коли щось не зрозуміло, завдяки ввічливим запитанням та корисним відповідям",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 323,
    "total_chunks": 619
  },
  {
    "id": "3d301c28f9361c46ffc5d8088df36af8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"learn-how-to-manage-a-conversation\": { \"title\": \"Дізнайтесь, як керувати бесідою\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як керувати розмовою на роботі (наприклад, як продовжити розмову після перерви, ввічливо змінити тему або перервати за необхідності) Ви також попрактикуєте корисні вирази, які роблять розмову чіткою, дружньою та структурованою\" ] }, \"learn-how-to-clarify-misunderstandings\": { \"title\": \"Дізнайтесь, як уточнити непорозуміння\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як запитувати й давати пояснення, коли щось не зрозуміло, завдяки ввічливим запитанням та корисним відповідямВи також вгадуватимете значення нових слів, описуватимете проблеми та виправлятимете непорозуміння в дружній і професійній манері",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 324,
    "total_chunks": 619
  },
  {
    "id": "dbe94d11d5771a1c61651e716e27ba56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "як керувати розмовою на роботі (наприклад, як продовжити розмову після перерви, ввічливо змінити тему або перервати за необхідності) Ви також попрактикуєте корисні вирази, які роблять розмову чіткою, дружньою та структурованою\" ] }, \"learn-how-to-clarify-misunderstandings\": { \"title\": \"Дізнайтесь, як уточнити непорозуміння\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як запитувати й давати пояснення, коли щось не зрозуміло, завдяки ввічливим запитанням та корисним відповідямВи також вгадуватимете значення нових слів, описуватимете проблеми та виправлятимете непорозуміння в дружній і професійній манері\"\n        ]\n      },\n      \"learn-about-speculation-and-requests\": {\n        \"title\": \"Дізнайтесь про припущення та запити\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як говорити про події, які мали або могли трапитися в минулому, а також як ділитись пропозиціями і робити ввічливі запити",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 325,
    "total_chunks": 619
  },
  {
    "id": "d30a9384079581644f9a4bb1829e95fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "уточнити непорозуміння\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як запитувати й давати пояснення, коли щось не зрозуміло, завдяки ввічливим запитанням та корисним відповідямВи також вгадуватимете значення нових слів, описуватимете проблеми та виправлятимете непорозуміння в дружній і професійній манері\" ] }, \"learn-about-speculation-and-requests\": { \"title\": \"Дізнайтесь про припущення та запити\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як говорити про події, які мали або могли трапитися в минулому, а також як ділитись пропозиціями і робити ввічливі запитиВи також будете використовувати вирази, які допомагають дізнатись причину проблеми і розв’язати її \"\n        ]\n      },\n      \"learn-about-adverbial-phrases\": {\n        \"title\": \"Дізнайтесь про прислівникові звороти\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як використовувати вирази, що дають більше інформації про те, коли, де, як часто або наскільки щось відбувається",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 326,
    "total_chunks": 619
  },
  {
    "id": "23f515c1e0c13949485492176fe8b693",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "припущення та запити\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як говорити про події, які мали або могли трапитися в минулому, а також як ділитись пропозиціями і робити ввічливі запитиВи також будете використовувати вирази, які допомагають дізнатись причину проблеми і розв’язати її \" ] }, \"learn-about-adverbial-phrases\": { \"title\": \"Дізнайтесь про прислівникові звороти\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як використовувати вирази, що дають більше інформації про те, коли, де, як часто або наскільки щось відбуваєтьсяВи також будете використовувати ці вирази для опису завдань, обговорення планів та пояснення результатів у щоденній роботі \"\n        ]\n      },\n      \"learn-how-to-use-adjectives-in-conversations\": {\n        \"title\": \"Дізнайтесь, як використовувати прикметники\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь використовувати прикметники, щоб чітко описувати речі, порівнювати можливі варіанти та підкреслювати важливі деталі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 327,
    "total_chunks": 619
  },
  {
    "id": "d4542586b3b394621a7a93baa761b84c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Дізнайтесь про прислівникові звороти\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як використовувати вирази, що дають більше інформації про те, коли, де, як часто або наскільки щось відбуваєтьсяВи також будете використовувати ці вирази для опису завдань, обговорення планів та пояснення результатів у щоденній роботі \" ] }, \"learn-how-to-use-adjectives-in-conversations\": { \"title\": \"Дізнайтесь, як використовувати прикметники\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати прикметники, щоб чітко описувати речі, порівнювати можливі варіанти та підкреслювати важливі деталіВи також дізнаєтесь, як зробити свої ідеї сильнішими та більш переконливими",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 328,
    "total_chunks": 619
  },
  {
    "id": "8b247456f6b45f8fffcb687602c37e74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "курсі ви дізнаєтесь, як використовувати вирази, що дають більше інформації про те, коли, де, як часто або наскільки щось відбуваєтьсяВи також будете використовувати ці вирази для опису завдань, обговорення планів та пояснення результатів у щоденній роботі \" ] }, \"learn-how-to-use-adjectives-in-conversations\": { \"title\": \"Дізнайтесь, як використовувати прикметники\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати прикметники, щоб чітко описувати речі, порівнювати можливі варіанти та підкреслювати важливі деталіВи також дізнаєтесь, як зробити свої ідеї сильнішими та більш переконливими\"\n        ]\n      },\n      \"learn-determiners-and-advanced-use-of-articles\": {\n        \"title\": \"Дізнайтесь про означальні слова та поглиблене використання артиклів\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь використовувати означальні слова, щоб ділитись чіткою інформацією про кількість, вибір і класифікацію",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 329,
    "total_chunks": 619
  },
  {
    "id": "fc013c06cb45fee69b1316fb775db02b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "результатів у щоденній роботі \" ] }, \"learn-how-to-use-adjectives-in-conversations\": { \"title\": \"Дізнайтесь, як використовувати прикметники\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати прикметники, щоб чітко описувати речі, порівнювати можливі варіанти та підкреслювати важливі деталіВи також дізнаєтесь, як зробити свої ідеї сильнішими та більш переконливими\" ] }, \"learn-determiners-and-advanced-use-of-articles\": { \"title\": \"Дізнайтесь про означальні слова та поглиблене використання артиклів\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати означальні слова, щоб ділитись чіткою інформацією про кількість, вибір і класифікаціюВи також розглянете артиклі у складнішому контексті, особливо в професійних розмовах про планування, завдання та ресурси",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 330,
    "total_chunks": 619
  },
  {
    "id": "17d0a429df2ae8f144f43053405ed6e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "[ \"У цьому курсі ви навчитесь використовувати прикметники, щоб чітко описувати речі, порівнювати можливі варіанти та підкреслювати важливі деталіВи також дізнаєтесь, як зробити свої ідеї сильнішими та більш переконливими\" ] }, \"learn-determiners-and-advanced-use-of-articles\": { \"title\": \"Дізнайтесь про означальні слова та поглиблене використання артиклів\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати означальні слова, щоб ділитись чіткою інформацією про кількість, вибір і класифікаціюВи також розглянете артиклі у складнішому контексті, особливо в професійних розмовах про планування, завдання та ресурси\"\n        ]\n      },\n      \"learn-how-to-use-reported-speech\": {\n        \"title\": \"Дізнайтесь, як використовувати непряму мову\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь чітко звітувати про те, що сказав хтось інший",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 331,
    "total_chunks": 619
  },
  {
    "id": "cd98b8c0c3c853076c9421125015c5bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "сильнішими та більш переконливими\" ] }, \"learn-determiners-and-advanced-use-of-articles\": { \"title\": \"Дізнайтесь про означальні слова та поглиблене використання артиклів\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати означальні слова, щоб ділитись чіткою інформацією про кількість, вибір і класифікаціюВи також розглянете артиклі у складнішому контексті, особливо в професійних розмовах про планування, завдання та ресурси\" ] }, \"learn-how-to-use-reported-speech\": { \"title\": \"Дізнайтесь, як використовувати непряму мову\", \"intro\": [ \"У цьому курсі ви навчитесь чітко звітувати про те, що сказав хтось іншийВи також будете практикувати різні часи дієслів та структури речень для обміну зворотним зв’язком, пояснення ситуацій і обговорення минулих подій в професійних розмовах",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 332,
    "total_chunks": 619
  },
  {
    "id": "25694c53fdbc4d1a95451c5e3afa2936",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви навчитесь використовувати означальні слова, щоб ділитись чіткою інформацією про кількість, вибір і класифікаціюВи також розглянете артиклі у складнішому контексті, особливо в професійних розмовах про планування, завдання та ресурси\" ] }, \"learn-how-to-use-reported-speech\": { \"title\": \"Дізнайтесь, як використовувати непряму мову\", \"intro\": [ \"У цьому курсі ви навчитесь чітко звітувати про те, що сказав хтось іншийВи також будете практикувати різні часи дієслів та структури речень для обміну зворотним зв’язком, пояснення ситуацій і обговорення минулих подій в професійних розмовах\"\n        ]\n      },\n      \"learn-how-to-use-prepositions-according-to-context\": {\n        \"title\": \"Дізнайтесь, як використовувати прийменники відповідно до контексту\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь використовувати прийменники, щоб чітко описувати час, місце та напрям у щоденних робочих ситуаціях",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 333,
    "total_chunks": 619
  },
  {
    "id": "2f4a559f7c42e4f2f488a634d173b546",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Дізнайтесь, як використовувати непряму мову\", \"intro\": [ \"У цьому курсі ви навчитесь чітко звітувати про те, що сказав хтось іншийВи також будете практикувати різні часи дієслів та структури речень для обміну зворотним зв’язком, пояснення ситуацій і обговорення минулих подій в професійних розмовах\" ] }, \"learn-how-to-use-prepositions-according-to-context\": { \"title\": \"Дізнайтесь, як використовувати прийменники відповідно до контексту\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати прийменники, щоб чітко описувати час, місце та напрям у щоденних робочих ситуаціяхВи також будете говорити про графіки, давати вказівки та пояснювати, де знаходяться люди чи речі \"\n        ]\n      },\n      \"learn-how-to-talk-about-numbers-with-a-coworker\": {\n        \"title\": \"Дізнайтесь, як говорити про числа з колегою\",\n        \"intro\": [\n          \"У цьому курсі ви дізнаєтесь, як вживати числа, щоб говорити про завдання, графіки, бюджети та ресурси на робочому місці",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 334,
    "total_chunks": 619
  },
  {
    "id": "bcf70910920be7a7d82d7537d67630ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"title\": \"Дізнайтесь, як використовувати прийменники відповідно до контексту\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати прийменники, щоб чітко описувати час, місце та напрям у щоденних робочих ситуаціяхВи також будете говорити про графіки, давати вказівки та пояснювати, де знаходяться люди чи речі \" ] }, \"learn-how-to-talk-about-numbers-with-a-coworker\": { \"title\": \"Дізнайтесь, як говорити про числа з колегою\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як вживати числа, щоб говорити про завдання, графіки, бюджети та ресурси на робочому місціВи ознайомитесь з кількісними і порядковими числами, відсотками і дробами, щоб упорядковувати роботу, пояснювати прогрес й ділитись оновленнями щодо інвентаризації чи фінансування зі своєю командою",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 335,
    "total_chunks": 619
  },
  {
    "id": "75f0137e773ececf2ff37894b3120850",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "у щоденних робочих ситуаціяхВи також будете говорити про графіки, давати вказівки та пояснювати, де знаходяться люди чи речі \" ] }, \"learn-how-to-talk-about-numbers-with-a-coworker\": { \"title\": \"Дізнайтесь, як говорити про числа з колегою\", \"intro\": [ \"У цьому курсі ви дізнаєтесь, як вживати числа, щоб говорити про завдання, графіки, бюджети та ресурси на робочому місціВи ознайомитесь з кількісними і порядковими числами, відсотками і дробами, щоб упорядковувати роботу, пояснювати прогрес й ділитись оновленнями щодо інвентаризації чи фінансування зі своєю командою\"\n        ]\n      },\n      \"learn-common-phrasal-verbs-and-idioms\": {\n        \"title\": \"Дізнайтесь про найпоширеніші фразові дієслова та ідіоми\",\n        \"intro\": [\n          \"У цьому курсі ви навчитесь використовувати поширені фразові дієслова та ідіоми, щоб звучати природніше й впевненіше на роботі",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 336,
    "total_chunks": 619
  },
  {
    "id": "abdc1d53f4695dbe850bfd76a5b3f5f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "[ \"У цьому курсі ви дізнаєтесь, як вживати числа, щоб говорити про завдання, графіки, бюджети та ресурси на робочому місціВи ознайомитесь з кількісними і порядковими числами, відсотками і дробами, щоб упорядковувати роботу, пояснювати прогрес й ділитись оновленнями щодо інвентаризації чи фінансування зі своєю командою\" ] }, \"learn-common-phrasal-verbs-and-idioms\": { \"title\": \"Дізнайтесь про найпоширеніші фразові дієслова та ідіоми\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати поширені фразові дієслова та ідіоми, щоб звучати природніше й впевненіше на роботіВи будете використовувати різні вирази, щоб висловлювати думки, робити пропозиції, організовувати зустрічі та обговорювати завдання в щоденних робочих розмовах",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 337,
    "total_chunks": 619
  },
  {
    "id": "9b926d031477e06ee25aed88d390be0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "робочому місціВи ознайомитесь з кількісними і порядковими числами, відсотками і дробами, щоб упорядковувати роботу, пояснювати прогрес й ділитись оновленнями щодо інвентаризації чи фінансування зі своєю командою\" ] }, \"learn-common-phrasal-verbs-and-idioms\": { \"title\": \"Дізнайтесь про найпоширеніші фразові дієслова та ідіоми\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати поширені фразові дієслова та ідіоми, щоб звучати природніше й впевненіше на роботіВи будете використовувати різні вирази, щоб висловлювати думки, робити пропозиції, організовувати зустрічі та обговорювати завдання в щоденних робочих розмовах\"\n        ]\n      }\n    }\n  },\n  \"rosetta-code\": {\n    \"title\": \"Rosetta Code\",\n    \"intro\": [\n      \"Розвиньте свої навички творчого підходу до розв’язання проблем за допомогою завдань з базової бібліотеки Rosetta Code",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 338,
    "total_chunks": 619
  },
  {
    "id": "aaf187f90942c5b8620560eab51c5b58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "}, \"learn-common-phrasal-verbs-and-idioms\": { \"title\": \"Дізнайтесь про найпоширеніші фразові дієслова та ідіоми\", \"intro\": [ \"У цьому курсі ви навчитесь використовувати поширені фразові дієслова та ідіоми, щоб звучати природніше й впевненіше на роботіВи будете використовувати різні вирази, щоб висловлювати думки, робити пропозиції, організовувати зустрічі та обговорювати завдання в щоденних робочих розмовах\" ] } } }, \"rosetta-code\": { \"title\": \"Rosetta Code\", \"intro\": [ \"Розвиньте свої навички творчого підходу до розв’язання проблем за допомогою завдань з базової бібліотеки Rosetta Code\",\n      \"Ці завдання можуть виявитися важкими, але вони підштовхнуть ваше логічне мислення до нових висот \",\n      \"<a href='https://rosettacode org/wiki/Rosetta_Code' target='_blank' rel='noopener noreferrer nofollow'>Атрибут: Rosetta Code</a>\"\n    ],\n    \"blocks\": {\n      \"rosetta-code-challenges\": {\n        \"title\": \"Завдання з «Rosetta Code»\",\n        \"intro\": [\n          \"Перелік завдань з «Rosetta Code»",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 339,
    "total_chunks": 619
  },
  {
    "id": "9d7db7682904d347ab4c1d086b1b8405",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "зустрічі та обговорювати завдання в щоденних робочих розмовах\" ] } } }, \"rosetta-code\": { \"title\": \"Rosetta Code\", \"intro\": [ \"Розвиньте свої навички творчого підходу до розв’язання проблем за допомогою завдань з базової бібліотеки Rosetta Code\", \"Ці завдання можуть виявитися важкими, але вони підштовхнуть ваше логічне мислення до нових висот \", \"<a href='https://rosettacode org/wiki/Rosetta_Code' target='_blank' rel='noopener noreferrer nofollow'>Атрибут: Rosetta Code</a>\" ], \"blocks\": { \"rosetta-code-challenges\": { \"title\": \"Завдання з «Rosetta Code»\", \"intro\": [ \"Перелік завдань з «Rosetta Code»\",\n          \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \"\n        ]\n      }\n    }\n  },\n  \"full-stack-developer\": {\n    \"title\": \"Навчальна програма «Сертифікований Full Stack розробник»\",\n    \"intro\": [\n      \"Цей курс надає комплексний шлях, щоб стати сертифікованим Full Stack розробником У ньому охоплено всі технології, необхідні для створення сучасних масштабованих програм від початку до кінця",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 340,
    "total_chunks": 619
  },
  {
    "id": "eb17220703f180716cc91d04ff9efa1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"<a href='https://rosettacode org/wiki/Rosetta_Code' target='_blank' rel='noopener noreferrer nofollow'>Атрибут: Rosetta Code</a>\" ], \"blocks\": { \"rosetta-code-challenges\": { \"title\": \"Завдання з «Rosetta Code»\", \"intro\": [ \"Перелік завдань з «Rosetta Code»\", \"ПРИМІТКА: ці завдання підтримують розв’язок лише на JavaScript \" ] } } }, \"full-stack-developer\": { \"title\": \"Навчальна програма «Сертифікований Full Stack розробник»\", \"intro\": [ \"Цей курс надає комплексний шлях, щоб стати сертифікованим Full Stack розробником У ньому охоплено всі технології, необхідні для створення сучасних масштабованих програм від початку до кінця\",\n      \"Завдяки поєднанню інтерактивних уроків, практичних завдань та реальних проєктів, ви опануєте як Front End, так і Back End Ви працюватимете з HTML, CSS і JavaScript для створення адаптивних інтерфейсів, досліджуватимете React і TypeScript для створення складних вебзастосунків та навчитеся керувати даними за допомогою реляційних баз даних На стороні Back End ви використовуватимете Git, Npm, Node js і Python для створення потужних серверних рішень",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 341,
    "total_chunks": 619
  },
  {
    "id": "036955273dd9a348879525f9365b9289",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "охоплено всі технології, необхідні для створення сучасних масштабованих програм від початку до кінця\", \"Завдяки поєднанню інтерактивних уроків, практичних завдань та реальних проєктів, ви опануєте як Front End, так і Back End Ви працюватимете з HTML, CSS і JavaScript для створення адаптивних інтерфейсів, досліджуватимете React і TypeScript для створення складних вебзастосунків та навчитеся керувати даними за допомогою реляційних баз даних На стороні Back End ви використовуватимете Git, Npm, Node js і Python для створення потужних серверних рішень\",\n      \"Наприкінці курсу ви отримаєте практичні навички та досвід, які дозволять впевнено розробляти повноцінні вебзастосунки, що підготує вас до успішної кар’єри Full Stack розробника \",\n      \"Для отримання цієї сертифікації потрібно багато часу і зусиль",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 342,
    "total_chunks": 619
  },
  {
    "id": "c8b65af837cdb40076b936af1b151e7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з HTML, CSS і JavaScript для створення адаптивних інтерфейсів, досліджуватимете React і TypeScript для створення складних вебзастосунків та навчитеся керувати даними за допомогою реляційних баз даних На стороні Back End ви використовуватимете Git, Npm, Node js і Python для створення потужних серверних рішень\", \"Наприкінці курсу ви отримаєте практичні навички та досвід, які дозволять впевнено розробляти повноцінні вебзастосунки, що підготує вас до успішної кар’єри Full Stack розробника \", \"Для отримання цієї сертифікації потрібно багато часу і зусильЯкщо ви розпочнете зараз, то будете готові до решти матеріалу і кінцевого екзамену як тільки ми опублікуємо їх протягом найближчих місяців",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 343,
    "total_chunks": 619
  },
  {
    "id": "a5b60a4a6ff94dc0b0363a3574c51a01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "даними за допомогою реляційних баз даних На стороні Back End ви використовуватимете Git, Npm, Node js і Python для створення потужних серверних рішень\", \"Наприкінці курсу ви отримаєте практичні навички та досвід, які дозволять впевнено розробляти повноцінні вебзастосунки, що підготує вас до успішної кар’єри Full Stack розробника \", \"Для отримання цієї сертифікації потрібно багато часу і зусильЯкщо ви розпочнете зараз, то будете готові до решти матеріалу і кінцевого екзамену як тільки ми опублікуємо їх протягом найближчих місяців\"\n    ],\n    \"chapters\": {\n      \"html\": \"HTML\",\n      \"css\": \"CSS\",\n      \"javascript\": \"JavaScript\",\n      \"frontend-libraries\": \"Бібліотеки для Front End\",\n      \"relational-databases\": \"Реляційні бази даних\",\n      \"backend-javascript\": \"Back End JavaScript\",\n      \"python\": \"Python\",\n      \"career\": \"Кар’єра\"\n    },\n    \"modules\": {\n      \"basic-html\": \"Основи HTML\",\n      \"semantic-html\": \"Семантичний HTML\",\n      \"html-forms-and-tables\": \"Форми та таблиці\",\n      \"html-and-accessibility\": \"Доступність\",\n      \"review-html\": \"Повторення HTML\",\n      \"exam-html\": \"Екзамен «HTML»\",\n      \"computer-basics\": \"Основи комп’ютера\",\n      \"basic-css\": \"Основи CSS\",\n      \"design-for-developers\": \"Дизайн\",\n      \"absolute-and-relative-units\": \"Відносні та абсолютні одиниці\",\n      \"pseudo-classes-and-elements\": \"Псевдокласи й псевдоелементи\",\n      \"css-colors\": \"Кольори\",\n      \"styling-forms\": \"Стилізація форм\",\n      \"css-box-model\": \"Блокова модель\",\n      \"css-flexbox\": \"Flexbox\",\n      \"css-typography\": \"Типографія\",\n      \"css-and-accessibility\": \"Доступність\",\n      \"attribute-selectors\": \"Селектори атрибутів\",\n      \"css-positioning\": \"Позиціювання\",\n      \"responsive-design\": \"Адаптивний дизайн\",\n      \"css-variables\": \"Змінні\",\n      \"css-grid\": \"Сітка\",\n      \"css-animations\": \"Анімації\",\n      \"review-css\": \"Повторення CSS\",\n      \"exam-css\": \"Екзамен «CSS»\",\n      \"code-editors\": \"Редактори коду\",\n      \"javascript-variables-and-strings\": \"Змінні та рядки\",\n      \"javascript-booleans-and-numbers\": \"Булеві значення та числа\",\n      \"javascript-functions\": \"Функції\",\n      \"javascript-arrays\": \"Масиви\",\n      \"javascript-objects\": \"Об’єкти\",\n      \"javascript-loops\": \"Цикли\",\n      \"review-javascript-fundamentals\": \"Повторення основ JavaScript\",\n      \"higher-order-functions-and-callbacks\": \"Функції вищого порядку та зворотного виклику\",\n      \"dom-manipulation-and-events\": \"Маніпуляція DOM та події Click в JavaScript\",\n      \"js-a11y\": \"JavaScript та доступність\",\n      \"debugging-javascript\": \"Налагодження\",\n      \"basic-regex\": \"Основи регулярних виразів\",\n      \"form-validation\": \"Валідація форм\",\n      \"javascript-dates\": \"Дати\",\n      \"audio-and-video-events\": \"Аудіо- та відеоподії\",\n      \"maps-and-sets\": \"Map та set\",\n      \"localstorage-and-crud-operations\": \"localStorage та операції CRUD\",\n      \"classes-and-the-this-keyword\": \"Класи\",\n      \"recursion\": \"Рекурсія\",\n      \"functional-programming\": \"Функціональне програмування\",\n      \"asynchronous-javascript\": \"Асинхронний JavaScript\",\n      \"review-javascript\": \"Повторення JavaScript\",\n      \"exam-javascript\": \"Екзамен «JavaScript»\",\n      \"react-fundamentals\": \"Основи React\",\n      \"react-state-hooks-and-routing\": \"Стани, хуки та маршрутизація в React\",\n      \"performance\": \"Продуктивність\",\n      \"testing\": \"Тестування\",\n      \"css-libraries-and-frameworks\": \"Бібліотеки та фреймворки CSS\",\n      \"typescript-fundamentals\": \"Основи TypeScript\",\n      \"review-front-end-libraries\": \"Повторення бібліотек для Front End\",\n      \"exam-front-end-libraries\": \"Екзамен «Бібліотеки для Front End»\",\n      \"python-basics\": \"Основи Python\",\n      \"python-loops-and-sequences\": \"Цикли та послідовності\",\n      \"python-dictionaries-and-sets\": \"Словники та набори\",\n      \"python-error-handling\": \"Обробка помилок\",\n      \"python-classes-and-objects\": \"Класи та об’єкти\",\n      \"python-object-oriented-programming\": \"Об’єктноорієнтоване програмування (ООП)\",\n      \"python-linear-data-structures\": \"Лінійні структури даних\",\n      \"python-algorithms\": \"Алгоритми\",\n      \"python-graphs-and-trees\": \"Графи та дерева\",\n      \"python-dynamic-programming\": \"Динамічне програмування\",\n      \"review-python\": \"Повторення Python\",\n      \"exam-python\": \"Екзамен «Python»\",\n      \"bash-fundamentals\": \"Основи Bash\",\n      \"relational-databases\": \"Реляційні бази даних\",\n      \"bash-scripting\": \"Скрипти Bash\",\n      \"sql-and-bash\": \"SQL та Bash\",\n      \"git\": \"Git\",\n      \"introduction-to-nodejs\": \"Вступ до Node",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 1722,
    "chunk_index": 344,
    "total_chunks": 619
  },
  {
    "id": "358c7db2f0ff545df124f954f5eabe8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"typescript-fundamentals\": \"Основи TypeScript\", \"review-front-end-libraries\": \"Повторення бібліотек для Front End\", \"exam-front-end-libraries\": \"Екзамен «Бібліотеки для Front End»\", \"python-basics\": \"Основи Python\", \"python-loops-and-sequences\": \"Цикли та послідовності\", \"python-dictionaries-and-sets\": \"Словники та набори\", \"python-error-handling\": \"Обробка помилок\", \"python-classes-and-objects\": \"Класи та об’єкти\", \"python-object-oriented-programming\": \"Об’єктноорієнтоване програмування (ООП)\", \"python-linear-data-structures\": \"Лінійні структури даних\", \"python-algorithms\": \"Алгоритми\", \"python-graphs-and-trees\": \"Графи та дерева\", \"python-dynamic-programming\": \"Динамічне програмування\", \"review-python\": \"Повторення Python\", \"exam-python\": \"Екзамен «Python»\", \"bash-fundamentals\": \"Основи Bash\", \"relational-databases\": \"Реляційні бази даних\", \"bash-scripting\": \"Скрипти Bash\", \"sql-and-bash\": \"SQL та Bash\", \"git\": \"Git\", \"introduction-to-nodejs\": \"Вступ до Nodejs\",\n      \"nodejs-core-libraries\": \"Основні бібліотеки Node",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 345,
    "total_chunks": 619
  },
  {
    "id": "689d5062282cc3527039f57959a0cf27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"Повторення бібліотек для Front End\", \"exam-front-end-libraries\": \"Екзамен «Бібліотеки для Front End»\", \"python-basics\": \"Основи Python\", \"python-loops-and-sequences\": \"Цикли та послідовності\", \"python-dictionaries-and-sets\": \"Словники та набори\", \"python-error-handling\": \"Обробка помилок\", \"python-classes-and-objects\": \"Класи та об’єкти\", \"python-object-oriented-programming\": \"Об’єктноорієнтоване програмування (ООП)\", \"python-linear-data-structures\": \"Лінійні структури даних\", \"python-algorithms\": \"Алгоритми\", \"python-graphs-and-trees\": \"Графи та дерева\", \"python-dynamic-programming\": \"Динамічне програмування\", \"review-python\": \"Повторення Python\", \"exam-python\": \"Екзамен «Python»\", \"bash-fundamentals\": \"Основи Bash\", \"relational-databases\": \"Реляційні бази даних\", \"bash-scripting\": \"Скрипти Bash\", \"sql-and-bash\": \"SQL та Bash\", \"git\": \"Git\", \"introduction-to-nodejs\": \"Вступ до Nodejs\", \"nodejs-core-libraries\": \"Основні бібліотеки Nodejs\",\n      \"node-package-manager\": \"Node Package Manager\",\n      \"http-and-the-web-standards-model\": \"HTTP та модель вебстандартів\",\n      \"rest-api-and-web-services\": \"REST API та вебсервіси\",\n      \"introduction-to-express\": \"Вступ до Express\",\n      \"express-middleware\": \"Проміжне програмне забезпечення Express\",\n      \"error-handling-in-express\": \"Обробка помилок в Express\",\n      \"websockets\": \"WebSockets\",\n      \"node-and-sql\": \"Node та SQL\",\n      \"security-and-privacy\": \"Безпека та приватність\",\n      \"authentication\": \"Автентифікація\",\n      \"tooling-and-deployment\": \"Інструменти та розгортання\",\n      \"how-to-get-a-developer-job\": \"Як знайти роботу розробнику\",\n      \"capstone-project\": \"Фінальний проєкт\",\n      \"certified-full-stack-developer-exam\": \"Екзамен «Сертифікований Full Stack розробник»\"\n    },\n    \"module-intros\": {\n      \"js-a11y\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви навчитесь працювати з атрибутами aria-expanded, aria-live та aria-controls в застосунках HTML, CSS і JavaScript",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 754,
    "chunk_index": 346,
    "total_chunks": 619
  },
  {
    "id": "97b2811ba5a28f1692041952b6809a3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "API та вебсервіси\", \"introduction-to-express\": \"Вступ до Express\", \"express-middleware\": \"Проміжне програмне забезпечення Express\", \"error-handling-in-express\": \"Обробка помилок в Express\", \"websockets\": \"WebSockets\", \"node-and-sql\": \"Node та SQL\", \"security-and-privacy\": \"Безпека та приватність\", \"authentication\": \"Автентифікація\", \"tooling-and-deployment\": \"Інструменти та розгортання\", \"how-to-get-a-developer-job\": \"Як знайти роботу розробнику\", \"capstone-project\": \"Фінальний проєкт\", \"certified-full-stack-developer-exam\": \"Екзамен «Сертифікований Full Stack розробник»\" }, \"module-intros\": { \"js-a11y\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви навчитесь працювати з атрибутами aria-expanded, aria-live та aria-controls в застосунках HTML, CSS і JavaScript\"\n        ]\n      },\n      \"css-libraries-and-frameworks\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з бібліотеками, фреймворками і препроцесорами CSS, включно з Tailwind CSS, Bootstrap та Sass Ви побудуєте різні компоненти за допомогою Tailwind CSS і перевірите отримані знання, виконавши короткий тест",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 347,
    "total_chunks": 619
  },
  {
    "id": "c292dc3e64b81119902989eeacf4a17e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "«Сертифікований Full Stack розробник»\" }, \"module-intros\": { \"js-a11y\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви навчитесь працювати з атрибутами aria-expanded, aria-live та aria-controls в застосунках HTML, CSS і JavaScript\" ] }, \"css-libraries-and-frameworks\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви ознайомитесь з бібліотеками, фреймворками і препроцесорами CSS, включно з Tailwind CSS, Bootstrap та Sass Ви побудуєте різні компоненти за допомогою Tailwind CSS і перевірите отримані знання, виконавши короткий тест\"\n        ]\n      },\n      \"typescript-fundamentals\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з TypeScript — розширеною версією JavaScript, яка дозволяє додавати статичну типізацію до JavaScript-коду Ви виконаєте декілька практичних занять і лабораторних робіт, де застосуєте узагальнення, звуження типів, TSX і багато іншого А потім перевірите отримані знання з основ TypeScript, пройшовши короткий тест",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 348,
    "total_chunks": 619
  },
  {
    "id": "f557d2e6e1794a5fc1cece9624aab82e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Tailwind CSS, Bootstrap та Sass Ви побудуєте різні компоненти за допомогою Tailwind CSS і перевірите отримані знання, виконавши короткий тест\" ] }, \"typescript-fundamentals\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви ознайомитесь з TypeScript — розширеною версією JavaScript, яка дозволяє додавати статичну типізацію до JavaScript-коду Ви виконаєте декілька практичних занять і лабораторних робіт, де застосуєте узагальнення, звуження типів, TSX і багато іншого А потім перевірите отримані знання з основ TypeScript, пройшовши короткий тест\"\n        ]\n      },\n      \"python-basics\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з мовою Python, яку використовують в багатьох галузях (зокрема в інформатиці, машинному навчанні, веброзробці, скриптуванні й автоматизації, вбудованих системах, IoT тощо) Ви застосуєте основи Python в практичному занятті і лабораторній роботі, а також виконаєте короткий тест",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 349,
    "total_chunks": 619
  },
  {
    "id": "19182cabc046bb485db6b0e13d36e661",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "практичних занять і лабораторних робіт, де застосуєте узагальнення, звуження типів, TSX і багато іншого А потім перевірите отримані знання з основ TypeScript, пройшовши короткий тест\" ] }, \"python-basics\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви ознайомитесь з мовою Python, яку використовують в багатьох галузях (зокрема в інформатиці, машинному навчанні, веброзробці, скриптуванні й автоматизації, вбудованих системах, IoT тощо) Ви застосуєте основи Python в практичному занятті і лабораторній роботі, а також виконаєте короткий тест\"\n        ]\n      },\n      \"python-loops-and-sequences\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви навчитесь працювати зі списками, кортежами, лямбда-функціями, циклами і багато іншим Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 350,
    "total_chunks": 619
  },
  {
    "id": "c1a3d9763675a772209ade042113c152",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "Python, яку використовують в багатьох галузях (зокрема в інформатиці, машинному навчанні, веброзробці, скриптуванні й автоматизації, вбудованих системах, IoT тощо) Ви застосуєте основи Python в практичному занятті і лабораторній роботі, а також виконаєте короткий тест\" ] }, \"python-loops-and-sequences\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви навчитесь працювати зі списками, кортежами, лямбда-функціями, циклами і багато іншим Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-dictionaries-and-sets\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь зі словниками, наборами і стандартною бібліотекою Python Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 351,
    "total_chunks": 619
  },
  {
    "id": "069cf3dbdbc0b7563ceca7f2429cd263",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цієї осені\", \"intro\": [ \"У цьому модулі ви навчитесь працювати зі списками, кортежами, лямбда-функціями, циклами і багато іншим Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-dictionaries-and-sets\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви ознайомитесь зі словниками, наборами і стандартною бібліотекою Python Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-error-handling\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про поширені повідомлення з помилками, хороші способи їх налагодження і обробку винятків Ви застосуєте ці поняття в лабораторній роботі, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 352,
    "total_chunks": 619
  },
  {
    "id": "bdadf807ee88e26609bb13f8db4dc4d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цієї осені\", \"intro\": [ \"У цьому модулі ви ознайомитесь зі словниками, наборами і стандартною бібліотекою Python Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-error-handling\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про поширені повідомлення з помилками, хороші способи їх налагодження і обробку винятків Ви застосуєте ці поняття в лабораторній роботі, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-classes-and-objects\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви навчитесь працювати з класами, методами, атрибутами і властивостями Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 353,
    "total_chunks": 619
  },
  {
    "id": "52c1de4bf6f64d0ad95db0a42c38776b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цієї осені\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про поширені повідомлення з помилками, хороші способи їх налагодження і обробку винятків Ви застосуєте ці поняття в лабораторній роботі, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-classes-and-objects\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви навчитесь працювати з класами, методами, атрибутами і властивостями Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-object-oriented-programming\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про деякі поняття об’єктноорієнтованого програмування, серед яких інкапсуляція, успадкування і поліморфізм Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 354,
    "total_chunks": 619
  },
  {
    "id": "c8fd1b1bc480cd091dc6564500f70e30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"intro\": [ \"У цьому модулі ви навчитесь працювати з класами, методами, атрибутами і властивостями Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-object-oriented-programming\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про деякі поняття об’єктноорієнтованого програмування, серед яких інкапсуляція, успадкування і поліморфізм Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-linear-data-structures\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про структури даних, до яких належать стеки, зв’язані списки і багато іншого Ви застосуєте ці поняття в практичному занятті і лабораторній роботі, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 355,
    "total_chunks": 619
  },
  {
    "id": "fb73b8c26bf2ecf6028023fa197b70a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "ви дізнаєтесь про деякі поняття об’єктноорієнтованого програмування, серед яких інкапсуляція, успадкування і поліморфізм Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-linear-data-structures\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про структури даних, до яких належать стеки, зв’язані списки і багато іншого Ви застосуєте ці поняття в практичному занятті і лабораторній роботі, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-algorithms\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про поширені алгоритми, до яких належать бінарний пошук, сортування злиттям, сортування вибором і багато іншого Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 356,
    "total_chunks": 619
  },
  {
    "id": "281b0572398e49d72ffab1308b7df2d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "даних, до яких належать стеки, зв’язані списки і багато іншого Ви застосуєте ці поняття в практичному занятті і лабораторній роботі, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-algorithms\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про поширені алгоритми, до яких належать бінарний пошук, сортування злиттям, сортування вибором і багато іншого Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-graphs-and-trees\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про графи в інформатиці, а також про списки суміжності, дерева і багато іншого Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 357,
    "total_chunks": 619
  },
  {
    "id": "fe9435a4efc6a468af55f67a47a96af1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "до яких належать бінарний пошук, сортування злиттям, сортування вибором і багато іншого Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-graphs-and-trees\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про графи в інформатиці, а також про списки суміжності, дерева і багато іншого Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"python-dynamic-programming\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про динамічне програмування і застосуєте ці знання на практиці, виконавши лабораторну роботу із послідовністю Фібоначчі Потім ви пройдете короткий тест, щоб перевірити отримані знання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 358,
    "total_chunks": 619
  },
  {
    "id": "b22a54e9569fb996f6ec921d56c315d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "[ \"У цьому модулі ви дізнаєтесь про графи в інформатиці, а також про списки суміжності, дерева і багато іншого Ви застосуєте ці поняття в практичних заняттях і лабораторних роботах, а також перевірите отримані знання за допомогою тесту\" ] }, \"python-dynamic-programming\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про динамічне програмування і застосуєте ці знання на практиці, виконавши лабораторну роботу із послідовністю Фібоначчі Потім ви пройдете короткий тест, щоб перевірити отримані знання\"\n        ]\n      },\n      \"bash-fundamentals\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про командний рядок та поширені команди Bash Потім ви виконаєте практичне заняття і перевірите отримані знання завдяки короткому тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 359,
    "total_chunks": 619
  },
  {
    "id": "3d980c7b0b0e18f0746df043b0cb0067",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "за допомогою тесту\" ] }, \"python-dynamic-programming\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про динамічне програмування і застосуєте ці знання на практиці, виконавши лабораторну роботу із послідовністю Фібоначчі Потім ви пройдете короткий тест, щоб перевірити отримані знання\" ] }, \"bash-fundamentals\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про командний рядок та поширені команди Bash Потім ви виконаєте практичне заняття і перевірите отримані знання завдяки короткому тесту\"\n        ]\n      },\n      \"relational-databases\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь, як працювати з реляційними базами даних, які зберігають дані як колекції в таблицях Зокрема, ви ознайомитесь з додаванням і переглядом даних таблиці, первинними і зовнішніми ключами в SQL тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 360,
    "total_chunks": 619
  },
  {
    "id": "99f771d8296dfa9d2ee9892a84ce9595",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"bash-fundamentals\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про командний рядок та поширені команди Bash Потім ви виконаєте практичне заняття і перевірите отримані знання завдяки короткому тесту\" ] }, \"relational-databases\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь, як працювати з реляційними базами даних, які зберігають дані як колекції в таблицях Зокрема, ви ознайомитесь з додаванням і переглядом даних таблиці, первинними і зовнішніми ключами в SQL тощоПотім ви виконаєте практичне заняття і лабораторну роботу, а також перевірите отримані знання за допомогою тесту \"\n        ]\n      },\n      \"bash-scripting\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про скрипти bash і застосуєте ці навички на практиці, створивши п’ять програм А завдяки тесту перевірите отримані знання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 361,
    "total_chunks": 619
  },
  {
    "id": "97465feac5f721cfea174b6132fe941a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з реляційними базами даних, які зберігають дані як колекції в таблицях Зокрема, ви ознайомитесь з додаванням і переглядом даних таблиці, первинними і зовнішніми ключами в SQL тощоПотім ви виконаєте практичне заняття і лабораторну роботу, а також перевірите отримані знання за допомогою тесту \" ] }, \"bash-scripting\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про скрипти bash і застосуєте ці навички на практиці, створивши п’ять програм А завдяки тесту перевірите отримані знання\"\n        ]\n      },\n      \"sql-and-bash\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про нормалізацію, SQL-ін’єкцію та проблему N+1 Потім ви застосуєте SQL і Bash на практиці, виконавши декілька практичних занять і лабораторних робіт А завдяки тесту перевірите отримані знання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 362,
    "total_chunks": 619
  },
  {
    "id": "cd85deeea90463dd80d8cba0d37ca178",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\" ] }, \"bash-scripting\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про скрипти bash і застосуєте ці навички на практиці, створивши п’ять програм А завдяки тесту перевірите отримані знання\" ] }, \"sql-and-bash\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про нормалізацію, SQL-ін’єкцію та проблему N+1 Потім ви застосуєте SQL і Bash на практиці, виконавши декілька практичних занять і лабораторних робіт А завдяки тесту перевірите отримані знання\"\n        ]\n      },\n      \"git\": {\n        \"note\": \"Очікуйте цієї зими\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь, як використовувати Git, Nano та GitHub Потім ви перейдете до практичної частини з Git, де виконаєте декілька практичних занять і лабораторних робіт А завдяки тесту перевірите отримані знання \"\n        ]\n      },\n      \"introduction-to-nodejs\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з Node",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 363,
    "total_chunks": 619
  },
  {
    "id": "042fb0893857edf76d218d2446caccac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "практиці, виконавши декілька практичних занять і лабораторних робіт А завдяки тесту перевірите отримані знання\" ] }, \"git\": { \"note\": \"Очікуйте цієї зими\", \"intro\": [ \"У цьому модулі ви дізнаєтесь, як використовувати Git, Nano та GitHub Потім ви перейдете до практичної частини з Git, де виконаєте декілька практичних занять і лабораторних робіт А завдяки тесту перевірите отримані знання \" ] }, \"introduction-to-nodejs\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з Nodejs — середовищем виконання JavaScript, яке дозволяє створювати бекендні застосунки за допомогою JavaScript Потім ви виконаєте невеличке практичне заняття і перевірите отримані знання за допомогою тесту \"\n        ]\n      },\n      \"nodejs-core-libraries\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з поширеними бібліотеками Node js, до яких належать fs, os, path та інші",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 364,
    "total_chunks": 619
  },
  {
    "id": "584417043ff07a923744575e6c1bcfee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "отримані знання \" ] }, \"introduction-to-nodejs\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з Nodejs — середовищем виконання JavaScript, яке дозволяє створювати бекендні застосунки за допомогою JavaScript Потім ви виконаєте невеличке практичне заняття і перевірите отримані знання за допомогою тесту \" ] }, \"nodejs-core-libraries\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з поширеними бібліотеками Node js, до яких належать fs, os, path та іншіПотім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту \"\n        ]\n      },\n      \"node-package-manager\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з Node Package Manager, який розробники використовують для керування залежностями і скриптами проєкту Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 365,
    "total_chunks": 619
  },
  {
    "id": "0f3111abedd7a8a4ba60d1a4a73bd795",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з поширеними бібліотеками Node js, до яких належать fs, os, path та іншіПотім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту \" ] }, \"node-package-manager\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з Node Package Manager, який розробники використовують для керування залежностями і скриптами проєкту Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"http-and-the-web-standards-model\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про HTTP та інші важливі поняття (зокрема про модель системи запит-відповідь, поширені коди стану, DNS, TCP/IP тощо) Потім ви застосуєте ці навички на практиці, створивши власний вебсервер, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 366,
    "total_chunks": 619
  },
  {
    "id": "aa7c7c11a8354bfc6fce7da17143e39e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "розробники використовують для керування залежностями і скриптами проєкту Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту\" ] }, \"http-and-the-web-standards-model\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про HTTP та інші важливі поняття (зокрема про модель системи запит-відповідь, поширені коди стану, DNS, TCP/IP тощо) Потім ви застосуєте ці навички на практиці, створивши власний вебсервер, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"rest-api-and-web-services\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про REST API (Representational State Transfer Application Programming Interface) і принципи роботи мікросервісів А потім пройдете короткий тест, щоб перевірити отримані знання \"\n        ]\n      },\n      \"introduction-to-express\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з Express",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 367,
    "total_chunks": 619
  },
  {
    "id": "bd764d433ee52cb2e689b3375b12c6f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "тощо) Потім ви застосуєте ці навички на практиці, створивши власний вебсервер, а також перевірите отримані знання за допомогою тесту\" ] }, \"rest-api-and-web-services\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про REST API (Representational State Transfer Application Programming Interface) і принципи роботи мікросервісів А потім пройдете короткий тест, щоб перевірити отримані знання \" ] }, \"introduction-to-express\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з Expressjs — фреймворком, який використовують для створення RESTful API Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту \"\n        ]\n      },\n      \"express-middleware\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про проміжне програмне забезпечення в Express js, яке обробляє запити та відповіді між клієнтом і сервером",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 368,
    "total_chunks": 619
  },
  {
    "id": "bb0c8629bc68366eeb0150759158fa49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "] }, \"introduction-to-express\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з Expressjs — фреймворком, який використовують для створення RESTful API Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту \" ] }, \"express-middleware\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про проміжне програмне забезпечення в Express js, яке обробляє запити та відповіді між клієнтом і серверомПотім ви перейдете до практичного заняття і лабораторної роботи, а також перевірите отримані знання за допомогою тесту \"\n        ]\n      },\n      \"error-handling-in-express\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про обробку помилок, налагодження і перевірку справності в Express js Потім ви застосуєте ці навички в лабораторній роботі, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 369,
    "total_chunks": 619
  },
  {
    "id": "88a734dcd8d29e7b0d99856ee216fed3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "дізнаєтесь про проміжне програмне забезпечення в Express js, яке обробляє запити та відповіді між клієнтом і серверомПотім ви перейдете до практичного заняття і лабораторної роботи, а також перевірите отримані знання за допомогою тесту \" ] }, \"error-handling-in-express\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про обробку помилок, налагодження і перевірку справності в Express js Потім ви застосуєте ці навички в лабораторній роботі, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"websockets\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви ознайомитесь з Websocket — протоколом, який використовують для спілкування між клієнтом і сервером в режимі реального часу Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 370,
    "total_chunks": 619
  },
  {
    "id": "eecf33ebe28a607c3be414e17a397b7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "дізнаєтесь про обробку помилок, налагодження і перевірку справності в Express js Потім ви застосуєте ці навички в лабораторній роботі, а також перевірите отримані знання за допомогою тесту\" ] }, \"websockets\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з Websocket — протоколом, який використовують для спілкування між клієнтом і сервером в режимі реального часу Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"node-and-sql\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви застосуєте Node і SQL на практиці, створивши пару застосунків А потім пройдете короткий тест, щоб перевірити отримані знання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 371,
    "total_chunks": 619
  },
  {
    "id": "696a126efdc23179915f880c6868f927",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви ознайомитесь з Websocket — протоколом, який використовують для спілкування між клієнтом і сервером в режимі реального часу Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту\" ] }, \"node-and-sql\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви застосуєте Node і SQL на практиці, створивши пару застосунків А потім пройдете короткий тест, щоб перевірити отримані знання\"\n        ]\n      },\n      \"security-and-privacy\": {\n        \"note\": \"Очікуйте цієї осені\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про різницю між безпекою і приватністю, а також ознайомитесь з різними поняттями (включно з CSP, Permissions Policy, PII, CORS і багато іншим) Потім ви пройдете короткий тест, щоб перевірити отримані знання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 372,
    "total_chunks": 619
  },
  {
    "id": "091a0fc1f0ca5662426a8c483ab7ace1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви застосуєте Node і SQL на практиці, створивши пару застосунків А потім пройдете короткий тест, щоб перевірити отримані знання\" ] }, \"security-and-privacy\": { \"note\": \"Очікуйте цієї осені\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про різницю між безпекою і приватністю, а також ознайомитесь з різними поняттями (включно з CSP, Permissions Policy, PII, CORS і багато іншим) Потім ви пройдете короткий тест, щоб перевірити отримані знання\"\n        ]\n      },\n      \"authentication\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про принципи роботи автентифікації у вебзастосунках та інші важливі поняття (JWT, CSRF, Passport, Helmet, криптографія, шифрування тощо) Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 373,
    "total_chunks": 619
  },
  {
    "id": "65998a14597fe0eed54f2ce171294f94",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "приватністю, а також ознайомитесь з різними поняттями (включно з CSP, Permissions Policy, PII, CORS і багато іншим) Потім ви пройдете короткий тест, щоб перевірити отримані знання\" ] }, \"authentication\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про принципи роботи автентифікації у вебзастосунках та інші важливі поняття (JWT, CSRF, Passport, Helmet, криптографія, шифрування тощо) Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту\"\n        ]\n      },\n      \"tooling-and-deployment\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі ви дізнаєтесь про поширені інструменти для розгортання фулстекових програм А потім пройдете короткий тест, щоб перевірити отримані знання",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 374,
    "total_chunks": 619
  },
  {
    "id": "8147d384e16fc400b6eb0347b45564a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про принципи роботи автентифікації у вебзастосунках та інші важливі поняття (JWT, CSRF, Passport, Helmet, криптографія, шифрування тощо) Потім ви перейдете до практичних занять і лабораторних робіт, а також перевірите отримані знання за допомогою тесту\" ] }, \"tooling-and-deployment\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про поширені інструменти для розгортання фулстекових програм А потім пройдете короткий тест, щоб перевірити отримані знання\"\n        ]\n      },\n      \"how-to-get-a-developer-job\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"У цьому модулі Квінсі Ларсон (засновник і вчитель freeCodeCamp) поділиться тим, як розпочати кар’єру в IT Квінсі розкаже про резюме, портфоліо, ринок праці, підготовку до співбесіди та багато іншого",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 375,
    "total_chunks": 619
  },
  {
    "id": "d1f9a34efb7c9a48b8a1fc3d3602fb5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "знання за допомогою тесту\" ] }, \"tooling-and-deployment\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі ви дізнаєтесь про поширені інструменти для розгортання фулстекових програм А потім пройдете короткий тест, щоб перевірити отримані знання\" ] }, \"how-to-get-a-developer-job\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"У цьому модулі Квінсі Ларсон (засновник і вчитель freeCodeCamp) поділиться тим, як розпочати кар’єру в IT Квінсі розкаже про резюме, портфоліо, ринок праці, підготовку до співбесіди та багато іншого\"\n        ]\n      },\n      \"capstone-project\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"Чудова можливість створити повнофункціональний застосунок, використавши всі знання, отримані протягом сертифікації \"\n        ]\n      },\n      \"certified-full-stack-developer-exam\": {\n        \"note\": \"Очікуйте наприкінці 2026 року\",\n        \"intro\": [\n          \"Екзамен містить 90 запитань, які перевірять ваші знання з вивченого матеріалу",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 376,
    "total_chunks": 619
  },
  {
    "id": "33ba04ff361604fdf4a48f4a9706fd8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"intro\": [ \"У цьому модулі Квінсі Ларсон (засновник і вчитель freeCodeCamp) поділиться тим, як розпочати кар’єру в IT Квінсі розкаже про резюме, портфоліо, ринок праці, підготовку до співбесіди та багато іншого\" ] }, \"capstone-project\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"Чудова можливість створити повнофункціональний застосунок, використавши всі знання, отримані протягом сертифікації \" ] }, \"certified-full-stack-developer-exam\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"Екзамен містить 90 запитань, які перевірять ваші знання з вивченого матеріалу\"\n        ]\n      }\n    },\n    \"blocks\": {\n      \"workshop-curriculum-outline\": {\n        \"title\": \"Створіть навчальний план\",\n        \"intro\": [\n          \"Вітаємо на freeCodeCamp \",\n          \"У цьому практичному занятті ви ознайомитесь з HTML та програмуванням Ви дізнаєтесь про деякі елементи: заголовки та абзаци",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 377,
    "total_chunks": 619
  },
  {
    "id": "7de256bcedef08716b461ae4f206a54f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "\"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"Чудова можливість створити повнофункціональний застосунок, використавши всі знання, отримані протягом сертифікації \" ] }, \"certified-full-stack-developer-exam\": { \"note\": \"Очікуйте наприкінці 2026 року\", \"intro\": [ \"Екзамен містить 90 запитань, які перевірять ваші знання з вивченого матеріалу\" ] } }, \"blocks\": { \"workshop-curriculum-outline\": { \"title\": \"Створіть навчальний план\", \"intro\": [ \"Вітаємо на freeCodeCamp \", \"У цьому практичному занятті ви ознайомитесь з HTML та програмуванням Ви дізнаєтесь про деякі елементи: заголовки та абзаци\"\n        ]\n      },\n      \"lecture-welcome-to-freecodecamp\": {\n        \"title\": \"Привітальне повідомлення від Квінсі Ларсона\",\n        \"intro\": [\n          \"Послухайте Квінсі Ларсона — засновника і вчителя freeCodeCamp \",\n          \"Квінсі привітає вас на платформі і розкаже, як працює сертифікація Він також поділиться тим, як вчитись ефективніше",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 378,
    "total_chunks": 619
  },
  {
    "id": "dfd073e483b8bd83a68f626a7caec964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "з вивченого матеріалу\" ] } }, \"blocks\": { \"workshop-curriculum-outline\": { \"title\": \"Створіть навчальний план\", \"intro\": [ \"Вітаємо на freeCodeCamp \", \"У цьому практичному занятті ви ознайомитесь з HTML та програмуванням Ви дізнаєтесь про деякі елементи: заголовки та абзаци\" ] }, \"lecture-welcome-to-freecodecamp\": { \"title\": \"Привітальне повідомлення від Квінсі Ларсона\", \"intro\": [ \"Послухайте Квінсі Ларсона — засновника і вчителя freeCodeCamp \", \"Квінсі привітає вас на платформі і розкаже, як працює сертифікація Він також поділиться тим, як вчитись ефективніше\"\n        ]\n      },\n      \"lab-debug-camperbots-profile-page\": {\n        \"title\": \"Налагодьте профіль Кемпербота\",\n        \"intro\": [\n          \"Кемпербот також вчиться програмувати і потребує допомоги з HTML \",\n          \"У цій лабораторній роботі ви допоможете Кемперботу знайти і розв’язати помилки в коді \"\n        ]\n      },\n      \"lecture-understanding-html-attributes\": {\n        \"title\": \"Знайомство з HTML-атрибутами\",\n        \"intro\": [\n          \"In these lectures, you will learn more about HTML (HyperText Markup Language), a markup language for creating web pages",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 379,
    "total_chunks": 619
  },
  {
    "id": "6aa517ebf91ad1cb65109ac17d49f69a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "платформі і розкаже, як працює сертифікація Він також поділиться тим, як вчитись ефективніше\" ] }, \"lab-debug-camperbots-profile-page\": { \"title\": \"Налагодьте профіль Кемпербота\", \"intro\": [ \"Кемпербот також вчиться програмувати і потребує допомоги з HTML \", \"У цій лабораторній роботі ви допоможете Кемперботу знайти і розв’язати помилки в коді \" ] }, \"lecture-understanding-html-attributes\": { \"title\": \"Знайомство з HTML-атрибутами\", \"intro\": [ \"In these lectures, you will learn more about HTML (HyperText Markup Language), a markup language for creating web pages\",\n          \"Ви дізнаєтесь, яку роль відіграє HTML у мережі, а також ознайомитесь з його атрибутами \"\n        ]\n      },\n      \"lab-debug-pet-adoption-page\": {\n        \"title\": \"Налагодьте сторінку притулку для тварин\",\n        \"intro\": [\n          \"У цій лабораторній роботі вам потрібно знайти і виправити помилки на сторінці притулку для тварин \"\n        ]\n      },\n      \"lecture-understanding-the-html-boilerplate\": {\n        \"title\": \"Знайомство з шаблонним HTML-кодом\",\n        \"intro\": [\n          \"У цих відеолекціях ви дізнаєтесь про шаблонний код для HTML",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 380,
    "total_chunks": 619
  },
  {
    "id": "b676520c065379fc07c6bd7174a3bf2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "about HTML (HyperText Markup Language), a markup language for creating web pages\", \"Ви дізнаєтесь, яку роль відіграє HTML у мережі, а також ознайомитесь з його атрибутами \" ] }, \"lab-debug-pet-adoption-page\": { \"title\": \"Налагодьте сторінку притулку для тварин\", \"intro\": [ \"У цій лабораторній роботі вам потрібно знайти і виправити помилки на сторінці притулку для тварин \" ] }, \"lecture-understanding-the-html-boilerplate\": { \"title\": \"Знайомство з шаблонним HTML-кодом\", \"intro\": [ \"У цих відеолекціях ви дізнаєтесь про шаблонний код для HTML\",\n          \"Ви навчитесь працювати з елементами <code>link</code>, <code>meta</code> та іншими \"\n        ]\n      },\n      \"workshop-cat-photo-app\": {\n        \"title\": \"Створіть застосунок із фото котів\",\n        \"intro\": [\n          \"HTML розшифровується як «мова розмітки гіпертексту» та представляє вміст і структуру вебсторінки \",\n          \"У цьому практичному занятті ви дізнаєтесь, як працювати з базовими елементами HTML, серед яких заголовки, абзаци, зображення, посилання та списки",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 381,
    "total_chunks": 619
  },
  {
    "id": "a956d40735afcb2b60116e84302dc7e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "] }, \"lecture-understanding-the-html-boilerplate\": { \"title\": \"Знайомство з шаблонним HTML-кодом\", \"intro\": [ \"У цих відеолекціях ви дізнаєтесь про шаблонний код для HTML\", \"Ви навчитесь працювати з елементами <code>link</code>, <code>meta</code> та іншими \" ] }, \"workshop-cat-photo-app\": { \"title\": \"Створіть застосунок із фото котів\", \"intro\": [ \"HTML розшифровується як «мова розмітки гіпертексту» та представляє вміст і структуру вебсторінки \", \"У цьому практичному занятті ви дізнаєтесь, як працювати з базовими елементами HTML, серед яких заголовки, абзаци, зображення, посилання та списки\"\n        ]\n      },\n      \"lab-recipe-page\": {\n        \"title\": \"Створіть сторінку з рецептом\",\n        \"intro\": [\n          \"У цій лабораторній роботі ви пригадаєте основи HTML, створивши вебсторінку з улюбленим рецептом Ви створите шаблонний код HTML і будете працювати із заголовками, списками, зображеннями тощо",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 382,
    "total_chunks": 619
  },
  {
    "id": "db8f399b412266e96f16007c27f6d3c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "застосунок із фото котів\", \"intro\": [ \"HTML розшифровується як «мова розмітки гіпертексту» та представляє вміст і структуру вебсторінки \", \"У цьому практичному занятті ви дізнаєтесь, як працювати з базовими елементами HTML, серед яких заголовки, абзаци, зображення, посилання та списки\" ] }, \"lab-recipe-page\": { \"title\": \"Створіть сторінку з рецептом\", \"intro\": [ \"У цій лабораторній роботі ви пригадаєте основи HTML, створивши вебсторінку з улюбленим рецептом Ви створите шаблонний код HTML і будете працювати із заголовками, списками, зображеннями тощо\"\n        ]\n      },\n      \"lecture-html-fundamentals\": {\n        \"title\": \"Основи HTML\",\n        \"intro\": [\n          \"In these lectures, you will learn about HTML fundamentals like the <code>div</code> element, the <code>id</code> and <code>class</code> attributes, the HTML boilerplate, HTML entities, and more \"\n        ]\n      },\n      \"lab-travel-agency-page\": {\n        \"title\": \"Створіть сторінку туристичної агенції\",\n        \"intro\": [\n          \"У цій лабораторній роботі ви пригадаєте основи HTML, створивши вебсторінку для туристичної агенції",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 383,
    "total_chunks": 619
  },
  {
    "id": "e28099a2b0bbf5a02e40e30b24a11e20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "вебсторінку з улюбленим рецептом Ви створите шаблонний код HTML і будете працювати із заголовками, списками, зображеннями тощо\" ] }, \"lecture-html-fundamentals\": { \"title\": \"Основи HTML\", \"intro\": [ \"In these lectures, you will learn about HTML fundamentals like the <code>div</code> element, the <code>id</code> and <code>class</code> attributes, the HTML boilerplate, HTML entities, and more \" ] }, \"lab-travel-agency-page\": { \"title\": \"Створіть сторінку туристичної агенції\", \"intro\": [ \"У цій лабораторній роботі ви пригадаєте основи HTML, створивши вебсторінку для туристичної агенціїВи будете працювати із зображеннями, елементом <code>figure</code>, елементом <code>figcaption</code>, елементом <code>anchor</code> тощо \"\n        ]\n      },\n      \"lecture-working-with-audio-and-video-elements\": {\n        \"title\": \"Робота з елементами audio та video\",\n        \"intro\": [\n          \"У цих відеолекціях ви дізнаєтесь, як працювати з елементами <code>audio</code> та <code>video</code> \"\n        ]\n      },\n      \"lecture-working-with-images-and-svgs\": {\n        \"title\": \"Робота із зображеннями та SVG\",\n        \"intro\": [\n          \"У цих відеолекціях ви навчитесь працювати з SVG та дізнаєтесь про способи оптимізації зображень",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 384,
    "total_chunks": 619
  },
  {
    "id": "87bfd599504408cfd42550144f764b4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "цій лабораторній роботі ви пригадаєте основи HTML, створивши вебсторінку для туристичної агенціїВи будете працювати із зображеннями, елементом <code>figure</code>, елементом <code>figcaption</code>, елементом <code>anchor</code> тощо \" ] }, \"lecture-working-with-audio-and-video-elements\": { \"title\": \"Робота з елементами audio та video\", \"intro\": [ \"У цих відеолекціях ви дізнаєтесь, як працювати з елементами <code>audio</code> та <code>video</code> \" ] }, \"lecture-working-with-images-and-svgs\": { \"title\": \"Робота із зображеннями та SVG\", \"intro\": [ \"У цих відеолекціях ви навчитесь працювати з SVG та дізнаєтесь про способи оптимізації зображень\"\n        ]\n      },\n      \"workshop-build-a-heart-icon\": {\n        \"title\": \"Build a Heart Icon\",\n        \"intro\": [\n          \"In this workshop, you will practice working with SVGs by building a heart icon\"\n        ]\n      },\n      \"lecture-working-with-media\": {\n        \"title\": \"Робота з елементом iframe\",\n        \"intro\": [\n          \"У цих відеолекціях ви навчитесь працювати з елементом <code>iframe</code>, який використовують для додавання зовнішнього сайту на вебсторінку",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 385,
    "total_chunks": 619
  },
  {
    "id": "35278588ca148c85e6a02988a09cb44f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
    "source_type": "git_repo",
    "title": "intro",
    "content": "{ \"title\": \"Робота із зображеннями та SVG\", \"intro\": [ \"У цих відеолекціях ви навчитесь працювати з SVG та дізнаєтесь про способи оптимізації зображень\" ] }, \"workshop-build-a-heart-icon\": { \"title\": \"Build a Heart Icon\", \"intro\": [ \"In this workshop, you will practice working with SVGs by building a heart icon\" ] }, \"lecture-working-with-media\": { \"title\": \"Робота з елементом iframe\", \"intro\": [ \"У цих відеолекціях ви навчитесь працювати з елементом <code>iframe</code>, який використовують для додавання зовнішнього сайту на вебсторінку\"\n        ]\n      },\n      \"lab-video-compilation-page\": {\n        \"title\": \"Створіть сторінку із відео\",\n        \"intro\": [\n          \"У цій лабораторній роботі ви створите сторінку із відео Ви зможете попрацювати з елементом <code>iframe</code> \"\n        ]\n      },\n      \"lecture-working-with-links\": {\n        \"title\": \"Робота з посиланнями\",\n        \"intro\": [\n          \"In these lectures, you will learn about links, the <code>target</code> attribute, different link states, absolute, and relative paths, and more \"\n        ]\n      },\n      \"review-basic-html\": {\n        \"title\": \"Повторення основ HTML\",\n        \"intro\": [\n          \"Перш ніж перейти до тесту «Основи HTML», повторіть основні поняття",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 389054,
      "relative_path": "git_repos\\freeCodeCamp\\client\\i18n\\locales\\ukrainian\\intro.json",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 386,
    "total_chunks": 619
  }
]