[
  {
    "id": "fb900ac015ff2dfcf40060a10ad14243",
    "source_file": "corpus\\git_repos\\free-programming-books\\_config.yml",
    "source_type": "git_repo",
    "title": "_config",
    "content": "# [Name of visual theme]\n#theme: jekyll-theme-minimal\nremote_theme: pages-themes/minimal@v0.2.0\n\n# [Conversion]\nmarkdown: kramdown\n\n# [Used rubygem plugins]\nplugins:\n  - jekyll-remote-theme\n  - jemoji\n  - jekyll-relative-links\n\nrelative_links:\n  enabled: true\n  collections: true\n\ninclude:\n  - CONTRIBUTING.md\n  - LICENSE.md\n  - CODE_OF_CONDUCT.md",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 371,
      "relative_path": "git_repos\\free-programming-books\\_config.yml",
      "source_type": "git_repo"
    },
    "token_count": 104,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0b188067db10737a519669cbcaa6e815",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.gitpod.yml",
    "source_type": "git_repo",
    "title": ".gitpod",
    "content": "image: ghcr.io/freecodecamp/gitpod:latest\nports:\n  - port: 27017 # mongodb\n    onOpen: ignore\n  - port: 8000 # client\n    onOpen: notify\n    visibility: public\n  - port: 9228 # node debug\n    onOpen: ignore\n  - port: 3000 # api\n    onOpen: ignore\n    visibility: public\n  - port: 9229 # node debug\n    onOpen: ignore\n  - port: 9230 # client node debug\n    onOpen: ignore\n  - port: 3200 # challenge editor api\n    visibility: public\n  - port: 3300 # challenge editor client\n    visibility: public\n  - port: 8025 # MailHog\n    visibility: public\n    onOpen: ignore\n  - port: 1025 # MailHog\n    onOpen: ignore\n  - port: 9323 # Playwright\n    visibility: public\n    onOpen: ignore\n\ntasks:\n  - before: |\n      echo '\n      export COOKIE_DOMAIN=.gitpod.io\n      export HOME_LOCATION=$(gp url 8000)\n      export API_LOCATION=$(gp url 3000)\n      export CHALLENGE_EDITOR_API_LOCATION=$(gp url 3200)\n      export CHALLENGE_EDITOR_CLIENT_LOCATION=$(gp url 3300)\n      export CHALLENGE_EDITOR_LEARN_CLIENT_LOCATION=$(gp url 8000)\n      ' >> ~/.bashrc;\n      exit;\n\n- name: db\n    # starting mongod in background, so it doesn't block prebuilds\n    before: >\n      cd api/tools &&\n      docker compose up -d",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 2165,
      "relative_path": "git_repos\\freeCodeCamp\\.gitpod.yml",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8942b3a8eda0b0976e5365a1d9e3480b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.gitpod.yml",
    "source_type": "git_repo",
    "title": ".gitpod",
    "content": "# MailHog visibility: public onOpen: ignore - port: 1025 # MailHog onOpen: ignore - port: 9323 # Playwright visibility: public onOpen: ignore tasks: - before: | echo ' export COOKIE_DOMAIN=.gitpod.io export HOME_LOCATION=$(gp url 8000) export API_LOCATION=$(gp url 3000) export CHALLENGE_EDITOR_API_LOCATION=$(gp url 3200) export CHALLENGE_EDITOR_CLIENT_LOCATION=$(gp url 3300) export CHALLENGE_EDITOR_LEARN_CLIENT_LOCATION=$(gp url 8000) ' >> ~/.bashrc; exit; - name: db # starting mongod in background, so it doesn't block prebuilds before: > cd api/tools && docker compose up -d\n\n- name: server\n    before: export COOKIE_DOMAIN=.gitpod.io && export HOME_LOCATION=$(gp url 8000) && export API_LOCATION=$(gp url 3000)\n    # init is not executed for prebuilt workspaces and restarts,\n    # so we should put all the heavy initialization here\n    init: >\n      cp sample.env .env &&\n      pnpm install &&\n      gp sync-done pnpm-install &&\n      pnpm run build:curriculum &&\n      gp ports await 27017\n    command: >\n      pnpm run seed &&\n      mongosh --eval \"db.fsyncLock(); db.fsyncUnlock()\" &&\n      gp ports await 27017 &&\n      cd api &&\n      pnpm run develop\n\n- name: client\n    before: export HOME_LOCATION=$(gp url 8000) && export API_LOCATION=$(gp url 3000)\n    init: >\n      cd ./client &&\n      gp sync-await pnpm-install &&\n      cd ..\n    command: >\n      gp ports await 3000 &&\n      pnpm run develop:client -- -H '0.0.0.0'\n    openMode: split-right\n\nvscode:\n  extensions:\n    - dbaeumer.vscode-eslint\n    - esbenp.prettier-vscode",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 2165,
      "relative_path": "git_repos\\freeCodeCamp\\.gitpod.yml",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f02e730130ddbe4c3ab537afdc607b80",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.lintstagedrc.js",
    "source_type": "git_repo",
    "title": ".lintstagedrc",
    "content": "const { ESLint } = require('eslint');\n\nconst cli = new ESLint();\n\n// This lets us abort if we've already run a stage for all files\nconst completedStages = new Set();\n\n// if a lot of files are changed, it's faster to run prettier/eslint on the\n// whole project than to run them on each file separately\nmodule.exports = {\n  '*.(js|ts|tsx)': async files => {\n    if (completedStages.has('js')) return [];\n\nconst ignoredIds = await Promise.all(\n      files.map(file => cli.isPathIgnored(file))\n    );\n    const lintableFiles = files.filter((_, i) => !ignoredIds[i]);\n    if (files.length > 10) {\n      completedStages.add('js');\n      return ['eslint --max-warnings=0 --cache --fix .', 'prettier --write .'];\n    } else {\n      return [\n        'eslint --max-warnings=0 --cache --fix ' + lintableFiles.join(' '),\n        ...files.map(filename => `prettier --write '${filename}'`)\n      ];\n    }\n  },\n  '*.!(js|ts|tsx|css)': files => {\n    if (completedStages.has('not-js')) return [];\n\nif (files.length > 10) {\n      completedStages.add('not-js');\n      return 'prettier --write .';\n    } else {\n      return files.map(\n        filename => `prettier --write --ignore-unknown '${filename}'`\n      );\n    }\n  },\n\n'./curriculum/challenges/**/*.md': files => {\n    if (completedStages.has('markdown')) return [];\n\nif (files.length > 10) {\n      completedStages.add('markdown');\n      return 'pnpm run lint:challenges';\n    } else {\n      return files.map(\n        filename => `node ./tools/scripts/lint/index.js '${filename}'`\n      );\n    }\n  },\n\n'*.css': files => {\n    if (completedStages.has('css')) return [];\n\nif (files.length > 10) {\n      completedStages.add('css');\n      return 'stylelint --fix ./**/*.css';\n    } else {\n      return files.map(filename => `stylelint --fix '${filename}'`);\n    }\n  }\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1825,
      "relative_path": "git_repos\\freeCodeCamp\\.lintstagedrc.js",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6ac0eac622a60dbcc936b99e628a4620",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.stylelintrc.json",
    "source_type": "git_repo",
    "title": ".stylelintrc",
    "content": "{\n  \"rules\": {\n    \"no-invalid-double-slash-comments\": true,\n    \"no-duplicate-selectors\": true,\n    \"font-family-no-duplicate-names\": true,\n    \"declaration-block-no-shorthand-property-overrides\": true,\n    \"declaration-block-no-duplicate-custom-properties\": true,\n    \"declaration-block-no-duplicate-properties\": [\n      true,\n      {\n        \"ignore\": [\"consecutive-duplicates-with-different-values\"]\n      }\n    ],\n    \"comment-no-empty\": true,\n    \"color-no-invalid-hex\": true,\n    \"block-no-empty\": true,\n    \"shorthand-property-no-redundant-values\": true,\n    \"keyframe-declaration-no-important\": true,\n    \"no-duplicate-at-import-rules\": true,\n    \"named-grid-areas-no-invalid\": true,\n    \"no-invalid-position-at-import-rule\": true\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 746,
      "relative_path": "git_repos\\freeCodeCamp\\.stylelintrc.json",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "13b4d17fda754767d56546ee6452edf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\babel.config.js",
    "source_type": "git_repo",
    "title": "babel.config",
    "content": "module.exports = {\n  babelrcRoots: ['./client']\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 51,
      "relative_path": "git_repos\\freeCodeCamp\\babel.config.js",
      "source_type": "git_repo"
    },
    "token_count": 14,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "703adcb071a1f6be1c39167f4750c9a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "CODE_OF_CONDUCT",
    "content": "Our Code of Conduct is available here: https://www.freecodecamp.org/code-of-conduct/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 89,
      "relative_path": "git_repos\\freeCodeCamp\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 21,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b1ca06a35c5c1ff9448724569a90e1c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "CONTRIBUTING",
    "content": "Our contributing docs are available here: https://contribute.freecodecamp.org.\nLooking to edit these docs? Read this document first.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 210,
      "relative_path": "git_repos\\freeCodeCamp\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 28,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6b0dbf151081f3456c020f9401a8a7e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\docker-compose.yml",
    "source_type": "git_repo",
    "title": "docker-compose",
    "content": "services:\n  mongo:\n    image: mongo\n    ports:\n      - '27017:27017'\n    command: mongod --replSet rs0\n  setup:\n    image: mongo\n    depends_on:\n      - mongo\n    restart: on-failure\n    entrypoint: [\n        'bash',\n        '-c',\n        # This will try to initiate the replica set, until it succeeds twice (i.e. until the replica set is already initialized)\n        'mongosh --host mongo:27017 --eval ''try {rs.initiate();} catch (err) { if(err.codeName !== \"AlreadyInitialized\") throw err };'''\n      ]\n  mailhog:\n    restart: unless-stopped\n    image: mailhog/mailhog\n    ports:\n      - '1025:1025'\n      - '8025:8025'\n  api:\n    restart: unless-stopped\n    depends_on:\n      - mongo\n      - mailhog\n    image: fcc-api\n    env_file:\n      - .env\n    environment:\n      # The api cannot connect to mongodb or mailhog via localhost from inside the\n      # container, so we have to override these variables.\n      - MONGOHQ_URL=mongodb://mongo:27017/freecodecamp?directConnection=true\n      - MAILHOG_HOST=mailhog\n      - HOST=0.0.0.0\n    ports:\n      - '3000:3000'",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 1067,
      "relative_path": "git_repos\\freeCodeCamp\\docker-compose.yml",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "aa56dc1016a908727baf65300c128bd1",
    "source_file": "corpus\\git_repos\\free-programming-books\\README.md",
    "source_type": "git_repo",
    "title": "List of Free Learning Resources In Many Languages",
    "content": "List of Free Learning Resources In Many Languages\n[ [Awesome](https://cdn rawgit com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge svg)](https://github com/sindresorhus/awesome)\n[ [License: CC BY 4 0](https://img shields io/badge/License-CC%20BY%204 0-lightgrey svg)](https://creativecommons org/licenses/by/4 0/)\n[ [Hacktoberfest 2023 stats](https://img shields io/github/hacktoberfest/2023/EbookFoundation/free-programming-books label=Hacktoberfest+2023)](https://github com/EbookFoundation/free-programming-books/pulls q=is%3Apr+is%3Amerged+created%3A2023-10-01 2023-10-31)\nSearch the list at https://ebookfoundation github io/free-programming-books-search/ This page is available as an easy-to-read website Access it by clicking on Intro\nThis list was originally a clone of StackOverflow - List of Freely Available Programming Books with contributions from Karan Bhangui and George Stocker The list was moved to GitHub by Victor Felder for collaborative updating and maintenance It has grown to become one of GitHub's most popular repositories [ [GitHub repo forks](https://img shields io/github/forks/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Forks)](https://github com/EbookFoundation/free-programming-books/network)\n[ [GitHub repo stars](https://img shields io/github/stars/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Stars)](https://github com/EbookFoundation/free-programming-books/stargazers)\n[ [GitHub repo contributors](https://img shields io/github/contributors-anon/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Contributors)](https://github com/EbookFoundation/free-programming-books/graphs/contributors)\n[ [GitHub org sponsors](https://img shields io/github/sponsors/EbookFoundation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15924,
      "relative_path": "git_repos\\free-programming-books\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "2387b200163bc7a3897a4110a8348b27",
    "source_file": "corpus\\git_repos\\free-programming-books\\README.md",
    "source_type": "git_repo",
    "title": "List of Free Learning Resources In Many Languages",
    "content": "was originally a clone of StackOverflow - List of Freely Available Programming Books with contributions from Karan Bhangui and George Stocker The list was moved to GitHub by Victor Felder for collaborative updating and maintenance It has grown to become one of GitHub's most popular repositories [ [GitHub repo forks](https://img shields io/github/forks/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Forks)](https://github com/EbookFoundation/free-programming-books/network) [ [GitHub repo stars](https://img shields io/github/stars/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Stars)](https://github com/EbookFoundation/free-programming-books/stargazers) [ [GitHub repo contributors](https://img shields io/github/contributors-anon/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Contributors)](https://github com/EbookFoundation/free-programming-books/graphs/contributors) [ [GitHub org sponsors](https://img shields io/github/sponsors/EbookFoundationstyle=flat&logo=github&logoColor=whitesmoke&label=Sponsors)](https://github com/sponsors/EbookFoundation)\n[ [GitHub repo watchers](https://img shields io/github/watchers/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Watchers)](https://github com/EbookFoundation/free-programming-books/watchers)\n[ [GitHub repo size](https://img shields io/github/repo-size/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=whitesmoke&label=Repo%20Size)](https://github com/EbookFoundation/free-programming-books/archive/refs/heads/main zip)\nThe Free Ebook Foundation now administers the repo, a not-for-profit organization devoted to promoting the creation, distribution, archiving, and sustainability of free ebooks Donations to the Free Ebook Foundation are tax-deductible in the US How To Contribute\nPlease read CONTRIBUTING If you're new to GitHub, welcome Remember to abide by our adapted from  Code of Conduct too (translations also available) Click on these badges to see how you might be able to help:\n[",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15924,
      "relative_path": "git_repos\\free-programming-books\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "7ed43e12a82b599953feba4ff40ffaa4",
    "source_file": "corpus\\git_repos\\free-programming-books\\README.md",
    "source_type": "git_repo",
    "title": "List of Free Learning Resources In Many Languages",
    "content": "com/EbookFoundation/free-programming-books/archive/refs/heads/main zip) The Free Ebook Foundation now administers the repo, a not-for-profit organization devoted to promoting the creation, distribution, archiving, and sustainability of free ebooks Donations to the Free Ebook Foundation are tax-deductible in the US How To Contribute Please read CONTRIBUTING If you're new to GitHub, welcome Remember to abide by our adapted from Code of Conduct too (translations also available) Click on these badges to see how you might be able to help: [[GitHub repo Issues](https://img shields io/github/issues/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=red&label=Issues)](https://github com/EbookFoundation/free-programming-books/issues)\n[ [GitHub repo Good Issues for newbies](https://img shields io/github/issues/EbookFoundation/free-programming-books/good%20first%20issue style=flat&logo=github&logoColor=green&label=Good%20First%20issues)](https://github com/EbookFoundation/free-programming-books/issues q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n[ [GitHub Help Wanted issues](https://img shields io/github/issues/EbookFoundation/free-programming-books/help%20wanted style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20issues)](https://github com/EbookFoundation/free-programming-books/issues q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)\n[ [GitHub repo PRs](https://img shields io/github/issues-pr/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=orange&label=PRs)](https://github com/EbookFoundation/free-programming-books/pulls)\n[ [GitHub repo Merged PRs](https://img shields io/github/issues-search/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=green&label=Merged%20PRs&query=is%3Amerged)](https://github com/EbookFoundation/free-programming-books/pulls q=is%3Apr+is%3Amerged)\n[ [GitHub Help Wanted PRs](https://img shields",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15924,
      "relative_path": "git_repos\\free-programming-books\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "15070fba7b540d6f29b5983efc83719b",
    "source_file": "corpus\\git_repos\\free-programming-books\\README.md",
    "source_type": "git_repo",
    "title": "List of Free Learning Resources In Many Languages",
    "content": "our adapted from Code of Conduct too (translations also available) Click on these badges to see how you might be able to help: [[GitHub repo Issues](https://img shields io/github/issues/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=red&label=Issues)](https://github com/EbookFoundation/free-programming-books/issues) [ [GitHub repo Good Issues for newbies](https://img shields io/github/issues/EbookFoundation/free-programming-books/good%20first%20issue style=flat&logo=github&logoColor=green&label=Good%20First%20issues)](https://github com/EbookFoundation/free-programming-books/issues q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) [ [GitHub Help Wanted issues](https://img shields io/github/issues/EbookFoundation/free-programming-books/help%20wanted style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20issues)](https://github com/EbookFoundation/free-programming-books/issues q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) [ [GitHub repo PRs](https://img shields io/github/issues-pr/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=orange&label=PRs)](https://github com/EbookFoundation/free-programming-books/pulls) [ [GitHub repo Merged PRs](https://img shields io/github/issues-search/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=green&label=Merged%20PRs&query=is%3Amerged)](https://github com/EbookFoundation/free-programming-books/pulls q=is%3Apr+is%3Amerged) [ [GitHub Help Wanted PRs](https://img shieldsio/github/issues-pr/EbookFoundation/free-programming-books/help%20wanted style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20PRs)](https://github com/EbookFoundation/free-programming-books/pulls",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15924,
      "relative_path": "git_repos\\free-programming-books\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "fd6289a03c8f641bae61881cea74550a",
    "source_file": "corpus\\git_repos\\free-programming-books\\README.md",
    "source_type": "git_repo",
    "title": "List of Free Learning Resources In Many Languages",
    "content": "from Code of Conduct too (translations also available) Click on these badges to see how you might be able to help: [[GitHub repo Issues](https://img shields io/github/issues/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=red&label=Issues)](https://github com/EbookFoundation/free-programming-books/issues) [ [GitHub repo Good Issues for newbies](https://img shields io/github/issues/EbookFoundation/free-programming-books/good%20first%20issue style=flat&logo=github&logoColor=green&label=Good%20First%20issues)](https://github com/EbookFoundation/free-programming-books/issues q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) [ [GitHub Help Wanted issues](https://img shields io/github/issues/EbookFoundation/free-programming-books/help%20wanted style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20issues)](https://github com/EbookFoundation/free-programming-books/issues q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) [ [GitHub repo PRs](https://img shields io/github/issues-pr/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=orange&label=PRs)](https://github com/EbookFoundation/free-programming-books/pulls) [ [GitHub repo Merged PRs](https://img shields io/github/issues-search/EbookFoundation/free-programming-books style=flat&logo=github&logoColor=green&label=Merged%20PRs&query=is%3Amerged)](https://github com/EbookFoundation/free-programming-books/pulls q=is%3Apr+is%3Amerged) [ [GitHub Help Wanted PRs](https://img shieldsio/github/issues-pr/EbookFoundation/free-programming-books/help%20wanted style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20PRs)](https://github com/EbookFoundation/free-programming-books/pullsq=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)\nHow To Share\nShare on Facebook\nShare on LinkedIn\nShare on Mastodon/Fediverse\nShare on Telegram\nShare on 𝕏 (Twitter)\nResources\nThis project lists books and other resources grouped by genres:\nBooks\nEnglish, By Programming Language\nEnglish, By Subject\nOther Languages\nArabic / al arabiya / العربية\nArmenian / Հայերեն\nAzerbaijani / Азәрбајҹан дили / آذربايجانجا ديلي\nBengali / বাংলা\nBulgarian / български\nBurmese / မြန်မာဘာသာ\nChinese / 中文\nCzech / čeština / český jazyk\nCatalan / catalan/ català\nDanish / dansk\nDutch / Nederlands\nEstonian / eesti keel\nFinnish / suomi / suomen kieli\nFrench / français\nGerman / Deutsch\nGreek / ελληνικά\nHebrew / עברית\nHindi / हिन्दी\nHungarian / magyar / magyar nyelv\nIndonesian / Bahasa Indonesia\nItalian / italiano\nJapanese / 日本語\nKorean / 한국어\nLatvian / Latviešu\nMalayalam / മലയാളം\nNorwegian / Norsk\nPersian / Farsi (Iran) / فارسى\nPolish / polski / język polski / polszczyzna\nPortuguese (Brazil)\nPortuguese (Portugal)\nRomanian (Romania) / limba română / român\nRussian / Русский язык\nSerbian / српски језик / srpski jezik\nSlovak / slovenčina\nSpanish / español / castellano\nSwedish / Svenska\nTamil / தமிழ்\nTelugu / తెలుగు\nThai / ไทย\nTurkish / Türkçe\nUkrainian / Українська\nVietnamese / Tiếng Việt\nCheat Sheets\nAll Languages\nFree Online Courses\nArabic / al arabiya / العربية\nBengali / বাংলা\nBulgarian / български\nBurmese / မြန်မာဘာသာ\nChinese / 中文\nEnglish\nFinnish / suomi / suomen kieli\nFrench / français\nGerman / Deutsch\nGreek / ελληνικά\nHebrew / עברית\nHindi / हिंदी\nIndonesian / Bahasa Indonesia\nItalian / italiano\nJapanese / 日本語\nKannada/ಕನ್ನಡ\nKazakh / қазақша\nKhmer / ភាសាខ្មែរ\nKorean / 한국어\nMalayalam / മലയാളം\nMarathi / मराठी\nNepali / नेपाली\nNorwegian / Norsk\nPersian / Farsi (Iran) / فارسى\nPolish / polski / język polski / polszczyzna\nPortuguese (Brazil)\nPortuguese (Portugal)\nRussian / Русский язык\nSinhala / සිංහල\nSpanish / español / castellano\nSwedish / svenska\nTamil / தமிழ்\nTelugu / తెలుగు\nThai / ภาษาไทย\nTurkish / Türkçe\nUkrainian / Українська\nUrdu / اردو\nVietnamese / Tiếng Việt\nInteractive Programming Resources\nChinese / 中文\nEnglish\nGerman / Deutsch\nJapanese / 日本語\nRussian / Русский язык\nProblem Sets and Competitive Programming\nProblem Sets\nPodcast - Screencast\nFree Podcasts and Screencasts:\nArabic / al Arabiya / العربية\nBurmese / မြန်မာဘာသာ\nChinese / 中文\nCzech / čeština / český jazyk\nDutch / Nederlands\nEnglish\nFinnish / Suomi\nFrench / français\nGerman / Deutsch\nHebrew / עברית\nIndonesian / Bahasa Indonesia\nPersian / Farsi (Iran) / فارسى\nPolish / polski / język polski / polszczyzna\nPortuguese (Brazil)\nPortuguese (Portugal)\nRussian / Русский язык\nSinhala / සිංහල\nSpanish / español / castellano\nSwedish / Svenska\nTurkish / Türkçe\nUkrainian / Українська\nProgramming Playgrounds\nWrite, compile, and run your code within a browser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15924,
      "relative_path": "git_repos\\free-programming-books\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1724,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "bb32ad2a50820e0df69f534e00049a3a",
    "source_file": "corpus\\git_repos\\free-programming-books\\README.md",
    "source_type": "git_repo",
    "title": "List of Free Learning Resources In Many Languages",
    "content": "Czech / čeština / český jazyk Dutch / Nederlands English Finnish / Suomi French / français German / Deutsch Hebrew / עברית Indonesian / Bahasa Indonesia Persian / Farsi (Iran) / فارسى Polish / polski / język polski / polszczyzna Portuguese (Brazil) Portuguese (Portugal) Russian / Русский язык Sinhala / සිංහල Spanish / español / castellano Swedish / Svenska Turkish / Türkçe Ukrainian / Українська Programming Playgrounds Write, compile, and run your code within a browserTry it out Chinese / 中文\nEnglish\nGerman / Deutsch\nTranslations\nVolunteers have translated many of our Contributing, How-to, and Code of Conduct documents into languages covered by our lists English\nCode of Conduct\nContributing\nHow-to More languages You might notice that there are some missing translations here - perhaps you would like to help out by contributing a translation License\nEach file included in this repository is licensed under the CC BY License",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15924,
      "relative_path": "git_repos\\free-programming-books\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "fb8b7848866e4709e18ce9092863be85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\jest.setup.js",
    "source_type": "git_repo",
    "title": "jest.setup",
    "content": "import '@testing-library/jest-dom';",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 36,
      "relative_path": "git_repos\\freeCodeCamp\\jest.setup.js",
      "source_type": "git_repo"
    },
    "token_count": 8,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9a88a995d03ae970e77c0c8f611bff26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\jest.config.js",
    "source_type": "git_repo",
    "title": "jest.config",
    "content": "module.exports = {\n  testPathIgnorePatterns: ['/node_modules/', 'api/', 'e2e/'],\n  moduleNameMapper: {\n    '\\\\.(jpg|jpeg|png|svg|woff|woff2)$':\n      '<rootDir>/client/src/__mocks__/file-mock.ts',\n    // Plain CSS - match css files that don't end with\n    // '.module.css' https://regex101.com/r/VzwrKH/4\n    '^(?!.*\\\\.module\\\\.css$).*\\\\.css$':\n      '<rootDir>/client/src/__mocks__/style-mock.ts',\n    // CSS Modules - match files that end with 'module.css'\n    '\\\\.module\\\\.css$': 'identity-obj-proxy',\n    '^lodash-es$': 'lodash'\n  },\n  globals: {\n    __PATH_PREFIX__: ''\n  },\n  verbose: true,\n  transform: {\n    '^.+\\\\.[jt]sx?$': '<rootDir>/jest.transform.js'\n  },\n  roots: ['.', './client'],\n  transformIgnorePatterns: ['node_modules/.pnpm/(?!(nanoid|uuid)@)'],\n  setupFilesAfterEnv: ['./jest.setup.js'],\n  testEnvironment: 'jsdom',\n  watchPathIgnorePatterns: ['<rootDir>/__fixtures__.*']\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 897,
      "relative_path": "git_repos\\freeCodeCamp\\jest.config.js",
      "source_type": "git_repo"
    },
    "token_count": 270,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b151b0f790f739dc9c386cb7cb1d03a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\jest.transform.js",
    "source_type": "git_repo",
    "title": "jest.transform",
    "content": "const babelOptions = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        targets: {\n          node: 18\n        }\n      }\n    ],\n    '@babel/react',\n    '@babel/preset-typescript'\n  ]\n};\n\n// TODO: is there a way to do this without a separate transform? i.e. can we\n// just use the existing config?\nmodule.exports = require('babel-jest').default.createTransformer(babelOptions);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 389,
      "relative_path": "git_repos\\freeCodeCamp\\jest.transform.js",
      "source_type": "git_repo"
    },
    "token_count": 96,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9c4890a587b4cb77a984f3c2b504884f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\LICENSE.md",
    "source_type": "git_repo",
    "title": "LICENSE",
    "content": "BSD 3-Clause License\nCopyright (c) 2025, freeCodeCamp.\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1513,
      "relative_path": "git_repos\\freeCodeCamp\\LICENSE.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "61c6a8360e55cc3b3b274cfbb0d64c65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\playwright.config.ts",
    "source_type": "git_repo",
    "title": "playwright.config",
    "content": "import path from 'path';\nimport { config as dotenvConfig } from 'dotenv';\nimport { defineConfig, devices } from '@playwright/test';\n\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\nconst envPath = path.resolve(__dirname, '.env');\ndotenvConfig({ path: envPath });\n/**\n * See https://playwright.dev/docs/test-configuration.\n */\nexport default defineConfig({\n  testDir: 'e2e',\n  /* Run tests in files in parallel */\n  fullyParallel: false,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: 1,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: [['html', { outputFolder: 'playwright/reporter' }]],\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  timeout: 15 * 1000,\n  outputDir: 'playwright/test-results',\n\nuse: {\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    baseURL: process.env.HOME_LOCATION || 'http://127.0.0.1:8000',\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: 'on-first-retry',\n    storageState: 'playwright/.auth/certified-user.json',\n    /* Use custom test attribute */\n    testIdAttribute: 'data-playwright-test-label',\n    screenshot: 'only-on-failure'\n  },\n\n/* Configure projects for major browsers */\n  projects: [\n    {\n      name: 'setup',\n      testMatch: 'global-setup.ts'\n    },\n\n{\n      name: 'chromium',\n      use: { ...devices['Desktop Chrome'] },\n      dependencies: ['setup']\n    },\n\n{\n      name: 'firefox',\n      use: { ...devices['Desktop Firefox'] },\n      dependencies: ['setup']\n    },\n\n{\n      name: 'webkit',\n      use: { ...devices['Desktop Safari'] },\n      dependencies: ['setup']\n    },",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2863,
      "relative_path": "git_repos\\freeCodeCamp\\playwright.config.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "47e613d762917ce8228c92d1417ead5e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\playwright.config.ts",
    "source_type": "git_repo",
    "title": "playwright.config",
    "content": "|| 'http://127.0.0.1:8000', /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */ trace: 'on-first-retry', storageState: 'playwright/.auth/certified-user.json', /* Use custom test attribute */ testIdAttribute: 'data-playwright-test-label', screenshot: 'only-on-failure' }, /* Configure projects for major browsers */ projects: [ { name: 'setup', testMatch: 'global-setup.ts' }, { name: 'chromium', use: { ...devices['Desktop Chrome'] }, dependencies: ['setup'] }, { name: 'firefox', use: { ...devices['Desktop Firefox'] }, dependencies: ['setup'] }, { name: 'webkit', use: { ...devices['Desktop Safari'] }, dependencies: ['setup'] },\n\n/* Test against mobile viewports. */\n    {\n      name: 'Mobile Chrome',\n      use: { ...devices['Pixel 5'] },\n      dependencies: ['setup']\n    },\n    {\n      name: 'Mobile Safari',\n      use: { ...devices['iPhone 12'] },\n      dependencies: ['setup']\n    }\n    /* Uncomment the blocks out if you want to enable the mentioned features */\n    /* ====================================================== */\n    /* Test against branded browsers. */\n    // {\n    //   name: 'Microsoft Edge',\n    //   use: { ...devices['Desktop Edge'], channel: 'msedge' }\n    // },\n    // {\n    //   name: 'Google Chrome',\n    //   use: { ...devices['Desktop Chrome'], channel: 'chrome' }\n    // }\n  ],\n\n/* Some tests make the api send emails, so we need mailhog to catch them */\n  webServer: {\n    command: 'docker run -d -p 1025:1025 -p 8025:8025 mailhog/mailhog',\n    port: 1025,\n    reuseExistingServer: true,\n    timeout: 180000\n  }\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2863,
      "relative_path": "git_repos\\freeCodeCamp\\playwright.config.ts",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a40fd09c2ca2c2579ba8060a1b5d4606",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "Guia Completo de Dashboard Financeiro\nIntrodução\nUm dashboard financeiro é uma ferramenta visual que centraliza e apresenta as principais métricas financeiras de uma empresa de forma intuitiva e em tempo real Esta documentação fornece um guia completo para implementação de dashboards financeiros eficazes Componentes Essenciais\n1 Cards de Métricas (KPIs Principais)\nReceitas\nDescrição: Valor total de vendas em período específico\nFórmula: Receitas = Valor total de vendas de produtos ou serviços\nExemplo: R$ 100 000 em vendas no último mês\nVisualização: Card destacado com valor e variação percentual\nDespesas\nDescrição: Gastos operacionais totais\nFórmula: Despesas = Gasto total com operação\nCategorias: Custos fixos, variáveis, administrativos\nVisualização: Breakdown por categoria em gráfico de pizza\nResultado Financeiro\nDescrição: Lucro ou prejuízo do período\nFórmula: Resultado = Receitas - Despesas\nExemplo: R$ 50 000 receitas - R$ 30 000 despesas = R$ 20 000 lucro\nVisualização: Card com indicador visual (verde/vermelho)\nLucratividade\nDescrição: Capacidade de gerar lucro em relação às receitas\nFórmula: Lucratividade = (Resultado / Receitas) × 100\nExemplo: (R$ 20 000 / R$ 50 000) × 100 = 40%\nVisualização: Gauge ou barra de progresso\nMargem de Contribuição\nDescrição: Análise de rentabilidade por produto/serviço\nFórmula: Margem = (Receita - Custos Variáveis) / Receita × 100\nUso: Identificar produtos mais rentáveis\nROI (Retorno sobre Investimento)\nDescrição: Eficiência dos investimentos realizados\nFórmula: ROI = (Ganho - Investimento) / Investimento × 100\nVisualização: Comparação entre diferentes investimentos\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "665729f4f1cfaf39e87894e9c3dccb43",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "Fórmula: Lucratividade = (Resultado / Receitas) × 100 Exemplo: (R$ 20 000 / R$ 50 000) × 100 = 40% Visualização: Gauge ou barra de progresso Margem de Contribuição Descrição: Análise de rentabilidade por produto/serviço Fórmula: Margem = (Receita - Custos Variáveis) / Receita × 100 Uso: Identificar produtos mais rentáveis ROI (Retorno sobre Investimento) Descrição: Eficiência dos investimentos realizados Fórmula: ROI = (Ganho - Investimento) / Investimento × 100 Visualização: Comparação entre diferentes investimentos 2Indicadores de Liquidez\nContas a Receber\nDescrição: Valores pendentes de clientes\nMétricas: Total, vencidas, por vencer\nVisualização: Tabela com status e prazos\nContas a Pagar\nDescrição: Obrigações financeiras da empresa\nMétricas: Total, vencidas, por vencer, por fornecedor\nAlertas: Notificações para vencimentos próximos\nCapital de Giro\nDescrição: Recursos disponíveis para operação diária\nFórmula: Capital de Giro = Ativo Circulante - Passivo Circulante\nImportância: Indica capacidade de honrar compromissos\nFluxo de Caixa\nDescrição: Entradas e saídas de recursos\nTipos: Operacional, investimento, financiamento\nVisualização: Gráfico de linha temporal\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 358,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "05962ce4ba8ae368b0ff0e51e930d583",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "clientes Métricas: Total, vencidas, por vencer Visualização: Tabela com status e prazos Contas a Pagar Descrição: Obrigações financeiras da empresa Métricas: Total, vencidas, por vencer, por fornecedor Alertas: Notificações para vencimentos próximos Capital de Giro Descrição: Recursos disponíveis para operação diária Fórmula: Capital de Giro = Ativo Circulante - Passivo Circulante Importância: Indica capacidade de honrar compromissos Fluxo de Caixa Descrição: Entradas e saídas de recursos Tipos: Operacional, investimento, financiamento Visualização: Gráfico de linha temporal 3Gráficos e Visualizações\nGráficos de Linha\nUso: Evolução temporal de receitas, despesas, lucro\nPeríodo: Diário, semanal, mensal, anual\nRecursos: Zoom, filtros, comparação de períodos\nGráficos de Barras\nUso: Comparação entre períodos ou categorias\nExemplos: Receitas por mês, despesas por categoria\nInteratividade: Drill-down para detalhes\nGráficos de Pizza\nUso: Distribuição percentual de custos ou receitas\nCategorias: Por departamento, produto, região\nRecursos: Legendas interativas, tooltips\nIndicadores de Progresso\nUso: Metas vs realizado\nVisualização: Barras de progresso, gauges\nCores: Verde (meta atingida), amarelo (atenção), vermelho (abaixo)\nFuncionalidades Essenciais\n1 Monitoramento em Tempo Real\n```javascript\n// Exemplo de atualização em tempo real\nfunction updateDashboard() {\nfetch('/api/financial-metrics') then(response => response json()) then(data => {\nupdateMetricCards(data metrics);\nupdateCharts(data chartData);\ncheckAlerts(data alerts);\n});\n}\n// Atualização automática a cada 30 segundos\nsetInterval(updateDashboard, 30000);\n```\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 457,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "9864b69f7806e06ffef408d891378a73",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "ou receitas Categorias: Por departamento, produto, região Recursos: Legendas interativas, tooltips Indicadores de Progresso Uso: Metas vs realizado Visualização: Barras de progresso, gauges Cores: Verde (meta atingida), amarelo (atenção), vermelho (abaixo) Funcionalidades Essenciais 1 Monitoramento em Tempo Real ```javascript // Exemplo de atualização em tempo real function updateDashboard() { fetch('/api/financial-metrics') then(response => response json()) then(data => { updateMetricCards(data metrics); updateCharts(data chartData); checkAlerts(data alerts); }); } // Atualização automática a cada 30 segundos setInterval(updateDashboard, 30000); ``` 2Sistema de Alertas\n```javascript\n// Configuração de alertas\nconst alertRules = {\ncashFlow: { threshold: 10000, type: 'minimum' },\nprofitMargin: { threshold: 15, type: 'percentage' },\noverdueReceivables: { threshold: 30, type: 'days' }\n};\nfunction checkAlerts(data) {\nif (data cashFlow < alertRules cashFlow threshold) {\nshowAlert('Fluxo de caixa baixo ', 'warning');\n}\n}\n```\n3 Filtros e Drill-down\n```javascript\n// Sistema de filtros\nfunction applyFilters(filters) {\nconst params = new URLSearchParams({\nstartDate: filters startDate,\nendDate: filters endDate,\ncategory: filters category,\ndepartment: filters department\n});\nfetch(`/api/financial-data ${params}`) then(response => response json()) then(data => refreshDashboard(data));\n}\n```\nEstrutura HTML do Dashboard\n```html\nDashboard Financeiro\nDashboard Financeiro\nHoje\nEsta Semana\nEste Mês\nEste Trimestre\nEste Ano\nReceitas\nR$ 0\n+0%\nDespesas\nR$ 0\n+0%\nLucro\nR$ 0\n+0%\nMargem\n0%\n+0%\nEvolução Financeira\nDistribuição de Despesas\nTransações Recentes\nData\nDescrição\nCategoria\nValor\nStatus\n```\nCSS para Estilização\n```css\n/ dashboard css /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 474,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "6e9ae3c2430cae901e1e37d77b34ad65",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "startDate, endDate: filters endDate, category: filters category, department: filters department }); fetch(`/api/financial-data ${params}`) then(response => response json()) then(data => refreshDashboard(data)); } ``` Estrutura HTML do Dashboard ```html Dashboard Financeiro Dashboard Financeiro Hoje Esta Semana Este Mês Este Trimestre Este Ano Receitas R$ 0 +0% Despesas R$ 0 +0% Lucro R$ 0 +0% Margem 0% +0% Evolução Financeira Distribuição de Despesas Transações Recentes Data Descrição Categoria Valor Status ``` CSS para Estilização ```css / dashboard css /dashboard-header {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 1rem 2rem;\nbackground: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\ncolor: white;\nbox-shadow: 0 2px 10px rgba(0,0,0,0 1);\n} metrics-grid {\ndisplay: grid;\ngrid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\ngap: 1 5rem;\npadding: 2rem;\n} metric-card {\nbackground: white;\nborder-radius: 12px;\npadding: 1 5rem;\nbox-shadow: 0 4px 15px rgba(0,0,0,0 1);\nborder-left: 4px solid #667eea;\ntransition: transform 0 2s ease;\n} metric-card:hover {\ntransform: translateY(-2px);\nbox-shadow: 0 6px 20px rgba(0,0,0,0 15);\n} metric-card h3 {\nmargin: 0 0 0 5rem 0;\ncolor: #666;\nfont-size: 0 9rem;\ntext-transform: uppercase;\nletter-spacing: 0 5px;\n} metric-value {\nfont-size: 2rem;\nfont-weight: bold;\ncolor: #333;\nmargin-bottom: 0 5rem;\n} metric-change {\nfont-size: 0 9rem;\nfont-weight: 600;\n} metric-change positive {\ncolor: #27ae60;\n} metric-change negative {\ncolor: #e74c3c;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 481,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "53d668429ff649895e5fc5c884e90212",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "15px rgba(0,0,0,0 1); border-left: 4px solid #667eea; transition: transform 0 2s ease; } metric-card:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(0,0,0,0 15); } metric-card h3 { margin: 0 0 0 5rem 0; color: #666; font-size: 0 9rem; text-transform: uppercase; letter-spacing: 0 5px; } metric-value { font-size: 2rem; font-weight: bold; color: #333; margin-bottom: 0 5rem; } metric-change { font-size: 0 9rem; font-weight: 600; } metric-change positive { color: #27ae60; } metric-change negative { color: #e74c3c; }charts-section {\ndisplay: grid;\ngrid-template-columns: 2fr 1fr;\ngap: 2rem;\npadding: 0 2rem 2rem;\n} chart-container {\nbackground: white;\nborder-radius: 12px;\npadding: 1 5rem;\nbox-shadow: 0 4px 15px rgba(0,0,0,0 1);\n} transactions-section {\nmargin: 0 2rem 2rem;\nbackground: white;\nborder-radius: 12px;\npadding: 1 5rem;\nbox-shadow: 0 4px 15px rgba(0,0,0,0 1);\n} transactions-table {\nwidth: 100%;\nborder-collapse: collapse;\nmargin-top: 1rem;\n} transactions-table th, transactions-table td {\npadding: 0 75rem;\ntext-align: left;\nborder-bottom: 1px solid #eee;\n} transactions-table th {\nbackground: #f8f9fa;\nfont-weight: 600;\ncolor: #333;\n}\n@media (max-width: 768px) { metrics-grid {\ngrid-template-columns: 1fr;\npadding: 1rem;\n} charts-section {\ngrid-template-columns: 1fr;\npadding: 0 1rem 1rem;\n} dashboard-header {\nflex-direction: column;\ngap: 1rem;\ntext-align: center;\n}\n}\n```\nJavaScript para Funcionalidade\n```javascript\n// dashboard",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "3203a142fdc5e08ae5a1457937cd5a77",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "4px 15px rgba(0,0,0,0 1); } transactions-table { width: 100%; border-collapse: collapse; margin-top: 1rem; } transactions-table th, transactions-table td { padding: 0 75rem; text-align: left; border-bottom: 1px solid #eee; } transactions-table th { background: #f8f9fa; font-weight: 600; color: #333; } @media (max-width: 768px) { metrics-grid { grid-template-columns: 1fr; padding: 1rem; } charts-section { grid-template-columns: 1fr; padding: 0 1rem 1rem; } dashboard-header { flex-direction: column; gap: 1rem; text-align: center; } } ``` JavaScript para Funcionalidade ```javascript // dashboardjs\nclass FinancialDashboard {\nconstructor() {\nthis apiBase = '/api/financial';\nthis charts = {};\nthis init();\n}\nasync init() {\nawait this loadInitialData();\nthis setupEventListeners();\nthis startAutoRefresh();\n}\nasync loadInitialData() {\ntry {\nconst response = await fetch(`${this apiBase}/dashboard-data`);\nconst data = await response json();\nthis updateMetrics(data metrics);\nthis updateCharts(data charts);\nthis updateTransactions(data transactions);\n} catch (error) {\nconsole error('Erro ao carregar dados:', error);\n}\n}\nupdateMetrics(metrics) {\ndocument getElementById('revenue-value') textContent =\nthis formatCurrency(metrics revenue);\ndocument getElementById('expenses-value') textContent =\nthis formatCurrency(metrics expenses);\ndocument getElementById('profit-value') textContent =\nthis formatCurrency(metrics profit);\ndocument getElementById('margin-value') textContent =\n`${metrics margin toFixed(1)}%`;\n// Atualizar indicadores de mudança\nthis updateChangeIndicators(metrics changes);\n}\nupdateChangeIndicators(changes) {\nObject keys(changes) forEach(key => {\nconst element = document getElementById(`${key}-change`);\nconst value = changes[key];\nelement textContent = `${value > 0 '+' : ''}${value toFixed(1)}%`;\nelement className = `metric-change ${value >= 0 'positive' : 'negative'}`;\n});\n}\nformatCurrency(value) {\nreturn new Intl NumberFormat('pt-BR', {\nstyle: 'currency',\ncurrency: 'BRL'\n}) format(value);\n}\nsetupEventListeners() {\ndocument getElementById('periodFilter')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 502,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "6397778f2eea7afbd86f5420e3e02d58",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "= this formatCurrency(metrics profit); document getElementById('margin-value') textContent = `${metrics margin toFixed(1)}%`; // Atualizar indicadores de mudança this updateChangeIndicators(metrics changes); } updateChangeIndicators(changes) { Object keys(changes) forEach(key => { const element = document getElementById(`${key}-change`); const value = changes[key]; element textContent = `${value > 0 '+' : ''}${value toFixed(1)}%`; element className = `metric-change ${value >= 0 'positive' : 'negative'}`; }); } formatCurrency(value) { return new Intl NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }) format(value); } setupEventListeners() { document getElementById('periodFilter')addEventListener('change', (e) => {\nthis changePeriod(e target value);\n});\n}\nasync changePeriod(period) {\nconst response = await fetch(`${this apiBase}/dashboard-data period=${period}`);\nconst data = await response json();\nthis updateMetrics(data metrics);\nthis updateCharts(data charts);\nthis updateTransactions(data transactions);\n}\nstartAutoRefresh() {\nsetInterval(() => {\nthis loadInitialData();\n}, 30000); // Atualiza a cada 30 segundos\n}\n}\n// Inicializar dashboard quando a página carregar\ndocument addEventListener('DOMContentLoaded', () => {\nnew FinancialDashboard();\n});\n```\nAPI Backend (Node js/Express)\n```javascript\n// routes/financial js\nconst express = require('express');\nconst router = express Router();\n// Endpoint principal do dashboard\nrouter get('/dashboard-data', async (req, res) => {\ntry {\nconst period = req query period || 'month';\nconst metrics = await calculateMetrics(period);\nconst charts = await getChartData(period);\nconst transactions = await getRecentTransactions(period);\nres json({\nmetrics,\ncharts,\ntransactions,\nlastUpdated: new Date() toISOString()\n});\n} catch (error) {\nres status(500) json({ error: error message });\n}\n});\nasync function calculateMetrics(period) {\n// Lógica para calcular métricas baseada no período\nconst revenue = await getTotalRevenue(period);\nconst expenses = await getTotalExpenses(period);\nconst profit = revenue - expenses;\nconst margin = revenue > 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 468,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "9577ce68ef5591b5114313425551ab04",
    "source_file": "corpus\\documentation\\financial_dashboard_guide.md",
    "source_type": "documentation",
    "title": "Dashboard Financeiro",
    "content": "query period || 'month'; const metrics = await calculateMetrics(period); const charts = await getChartData(period); const transactions = await getRecentTransactions(period); res json({ metrics, charts, transactions, lastUpdated: new Date() toISOString() }); } catch (error) { res status(500) json({ error: error message }); } }); async function calculateMetrics(period) { // Lógica para calcular métricas baseada no período const revenue = await getTotalRevenue(period); const expenses = await getTotalExpenses(period); const profit = revenue - expenses; const margin = revenue > 0(profit / revenue) * 100 : 0;\n// Calcular mudanças em relação ao período anterior\nconst previousMetrics = await getPreviousPeriodMetrics(period);\nconst changes = {\nrevenue: calculatePercentageChange(revenue, previousMetrics revenue),\nexpenses: calculatePercentageChange(expenses, previousMetrics expenses),\nprofit: calculatePercentageChange(profit, previousMetrics profit),\nmargin: margin - previousMetrics margin\n};\nreturn {\nrevenue,\nexpenses,\nprofit,\nmargin,\nchanges\n};\n}\nfunction calculatePercentageChange(current, previous) {\nif (previous === 0) return current > 0 100 : 0;\nreturn ((current - previous) / previous) * 100;\n}\nmodule exports = router;\n```\nMelhores Práticas\n1 Performance\nCache de dados frequentemente acessados\nLazy loading para gráficos complexos\nPaginação em tabelas grandes\nCompressão de dados da API\n2 Usabilidade\nInterface responsiva para mobile\nTooltips explicativos\nAtalhos de teclado\nModo escuro/claro\n3 Segurança\nAutenticação robusta\nControle de acesso por perfil\nLogs de auditoria\nCriptografia de dados sensíveis\n4 Acessibilidade\nContraste adequado\nNavegação por teclado\nLeitores de tela\nTextos alternativos\nConclusão\nEste guia fornece uma base sólida para implementação de dashboards financeiros completos e funcionais A estrutura modular permite customização conforme necessidades específicas de cada organização Recursos Adicionais\nChart js para gráficos interativos\nD3 js para visualizações avançadas\nReact/Vue js para interfaces reativas\nNode js/Python para backend\nPostgreSQL/MongoDB para persistência",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15660,
      "relative_path": "documentation\\financial_dashboard_guide.md",
      "source_type": "documentation"
    },
    "token_count": 495,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "4fda0f7aa66e7acdb40ea4cea58c9a81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\pnpm-workspace.yaml",
    "source_type": "git_repo",
    "title": "pnpm-workspace",
    "content": "packages:\n  - 'api'\n  - 'client'\n  - 'curriculum'\n  - 'shared'\n  - 'tools/challenge-editor/api'\n  - 'tools/challenge-editor/client'\n  - 'tools/challenge-helper-scripts'\n  - 'tools/challenge-parser'\n  - 'tools/client-plugins/*'\n  - 'tools/crowdin'\n  - 'tools/daily-challenges'\n  - 'tools/scripts/build'\n  - 'tools/scripts/seed'\n  - 'tools/scripts/seed-exams'",
    "metadata": {
      "file_extension": ".yaml",
      "file_type": "yaml",
      "file_size": 358,
      "relative_path": "git_repos\\freeCodeCamp\\pnpm-workspace.yaml",
      "source_type": "git_repo"
    },
    "token_count": 108,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c1967dc81489b52c85bc6eb6d0ad5f02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/freecodecamp\",\n  \"version\": \"0 0 1\",\n  \"description\": \"The freeCodeCamp org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=22\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github com/freeCodeCamp/freeCodeCamp git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp org>\",\n  \"main\": \"none\",\n  \"scripts\": {\n    \"audit-challenges\": \"pnpm run create:shared && tsx tools/challenge-auditor/index ts\",\n    \"analyze-bundle\": \"webpack-bundle-analyzer\",\n    \"prebuild\": \"npm-run-all create:shared\",\n    \"build\": \"npm-run-all -p build:*\",\n    \"build-workers\": \"cd /client && pnpm run prebuild\",\n    \"build:client\": \"cd /client && pnpm run build\",\n    \"build:curriculum\": \"cd /curriculum && pnpm run build\",\n    \"build:api\": \"cd /api && pnpm run build\",\n    \"challenge-editor\": \"npm-run-all -p challenge-editor:*\",\n    \"challenge-editor:client\": \"cd /tools/challenge-editor/client && pnpm start\",\n    \"challenge-editor:server\": \"cd /tools/challenge-editor/api && pnpm start\",\n    \"clean\": \"npm-run-all -p clean:client clean:api clean:curriculum --serial clean:packages\",\n    \"clean-and-develop\": \"pnpm run clean && pnpm install && pnpm run develop\",\n    \"clean:api\": \"cd api && pnpm clean\",\n    \"clean:client\": \"cd /client && pnpm run clean\",\n    \"clean:curriculum\": \"rm -rf /shared/config/curriculum json\",\n    \"clean:packages\": \"find",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "42d8a56e362a6fe17bfcb788b77f8263",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "\"build:client\": \"cd /client && pnpm run build\", \"build:curriculum\": \"cd /curriculum && pnpm run build\", \"build:api\": \"cd /api && pnpm run build\", \"challenge-editor\": \"npm-run-all -p challenge-editor:*\", \"challenge-editor:client\": \"cd /tools/challenge-editor/client && pnpm start\", \"challenge-editor:server\": \"cd /tools/challenge-editor/api && pnpm start\", \"clean\": \"npm-run-all -p clean:client clean:api clean:curriculum --serial clean:packages\", \"clean-and-develop\": \"pnpm run clean && pnpm install && pnpm run develop\", \"clean:api\": \"cd api && pnpm clean\", \"clean:client\": \"cd /client && pnpm run clean\", \"clean:curriculum\": \"rm -rf /shared/config/curriculum json\", \"clean:packages\": \"find-name 'node_modules' -type d -prune -exec rm -rf '{}' +\",\n    \"create:shared\": \"tsc -p shared\",\n    \"create-new-project\": \"cd /tools/challenge-helper-scripts/ && pnpm run create-project\",\n    \"create-new-language-block\": \"cd /tools/challenge-helper-scripts/ && pnpm run create-language-block\",\n    \"create-new-quiz\": \"cd /tools/challenge-helper-scripts/ && pnpm run create-quiz\",\n    \"predevelop\": \"npm-run-all -p create:shared -s build:curriculum\",\n    \"develop\": \"npm-run-all -p develop:*\",\n    \"develop:client\": \"cd /client && pnpm run develop\",\n    \"develop:api\": \"cd /api && pnpm run develop\",\n    \"format\": \"run-s format:eslint format:prettier\",\n    \"format:eslint\": \"eslint --fix\",\n    \"format:prettier\": \"prettier --write \",\n    \"i18n-sync\": \"tsx /tools/scripts/sync-i18n",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "224f7309d2c20318dedf6f7f7d751354",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "/shared/config/curriculum json\", \"clean:packages\": \"find-name 'node_modules' -type d -prune -exec rm -rf '{}' +\", \"create:shared\": \"tsc -p shared\", \"create-new-project\": \"cd /tools/challenge-helper-scripts/ && pnpm run create-project\", \"create-new-language-block\": \"cd /tools/challenge-helper-scripts/ && pnpm run create-language-block\", \"create-new-quiz\": \"cd /tools/challenge-helper-scripts/ && pnpm run create-quiz\", \"predevelop\": \"npm-run-all -p create:shared -s build:curriculum\", \"develop\": \"npm-run-all -p develop:*\", \"develop:client\": \"cd /client && pnpm run develop\", \"develop:api\": \"cd /api && pnpm run develop\", \"format\": \"run-s format:eslint format:prettier\", \"format:eslint\": \"eslint --fix\", \"format:prettier\": \"prettier --write \", \"i18n-sync\": \"tsx /tools/scripts/sync-i18nts\",\n    \"knip\": \"npx -y knip@5 --include files\",\n    \"knip:all\": \"npx -y knip@5 \",\n    \"prelint\": \"pnpm run -F=client predevelop\",\n    \"lint\": \"NODE_OPTIONS=\\\"--max-old-space-size=7168\\\" npm-run-all create:shared -p lint:*\",\n    \"lint:challenges\": \"cd /curriculum && pnpm run lint\",\n    \"lint:js\": \"eslint --cache --max-warnings 0 \",\n    \"lint:ts\": \"tsc && tsc -p shared && tsc -p api && tsc -p client\",\n    \"lint:prettier\": \"prettier --list-different \",\n    \"lint:css\": \"stylelint '**/* css'\",\n    \"preseed\": \"npm-run-all create:shared\",\n    \"playwright:install-build-tools\": \"npx playwright install --with-deps\",\n    \"rename-challenges\": \"tsx tools/challenge-helper-scripts/rename-challenge-files ts\",\n    \"seed\": \"pnpm seed:surveys && pnpm seed:exams && DEBUG=fcc:* node",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "9723f292feb3dcb603371ed6a26b2380",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "-y knip@5 --include files\", \"knip:all\": \"npx -y knip@5 \", \"prelint\": \"pnpm run -F=client predevelop\", \"lint\": \"NODE_OPTIONS=\\\"--max-old-space-size=7168\\\" npm-run-all create:shared -p lint:*\", \"lint:challenges\": \"cd /curriculum && pnpm run lint\", \"lint:js\": \"eslint --cache --max-warnings 0 \", \"lint:ts\": \"tsc && tsc -p shared && tsc -p api && tsc -p client\", \"lint:prettier\": \"prettier --list-different \", \"lint:css\": \"stylelint '**/* css'\", \"preseed\": \"npm-run-all create:shared\", \"playwright:install-build-tools\": \"npx playwright install --with-deps\", \"rename-challenges\": \"tsx tools/challenge-helper-scripts/rename-challenge-files ts\", \"seed\": \"pnpm seed:surveys && pnpm seed:exams && DEBUG=fcc:* node/tools/scripts/seed/seed-demo-user\",\n    \"seed:certified-user\": \"pnpm seed:surveys && pnpm seed:exams && pnpm seed:ms-username && DEBUG=fcc:* node /tools/scripts/seed/seed-demo-user --certified-user\",\n    \"seed:exams\": \"DEBUG=fcc:* node tools/scripts/seed-exams/create-exams\",\n    \"seed:env-exam\": \"cd api && pnpm run seed:env-exam\",\n    \"seed:surveys\": \"DEBUG=fcc:* node /tools/scripts/seed/seed-surveys\",\n    \"seed:ms-username\": \"DEBUG=fcc:* node /tools/scripts/seed/seed-ms-username\",\n    \"serve:client\": \"cd /client && pnpm run serve\",\n    \"serve:client-ci\": \"cd /client && pnpm run serve-ci\",\n    \"start\": \"npm-run-all create:shared -p develop:server serve:client\",\n    \"test\": \"NODE_OPTIONS='--max-old-space-size=7168' run-s create:shared build:curriculum build-workers test:*\",\n    \"test:source\": \"jest\",\n    \"test:api\": \"cd api && jest --force-exit\",\n    \"test:curriculum\": \"cd",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "d30a089b66dec72c0e6a34309f46638f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "&& pnpm seed:exams && DEBUG=fcc:* node/tools/scripts/seed/seed-demo-user\", \"seed:certified-user\": \"pnpm seed:surveys && pnpm seed:exams && pnpm seed:ms-username && DEBUG=fcc:* node /tools/scripts/seed/seed-demo-user --certified-user\", \"seed:exams\": \"DEBUG=fcc:* node tools/scripts/seed-exams/create-exams\", \"seed:env-exam\": \"cd api && pnpm run seed:env-exam\", \"seed:surveys\": \"DEBUG=fcc:* node /tools/scripts/seed/seed-surveys\", \"seed:ms-username\": \"DEBUG=fcc:* node /tools/scripts/seed/seed-ms-username\", \"serve:client\": \"cd /client && pnpm run serve\", \"serve:client-ci\": \"cd /client && pnpm run serve-ci\", \"start\": \"npm-run-all create:shared -p develop:server serve:client\", \"test\": \"NODE_OPTIONS='--max-old-space-size=7168' run-s create:shared build:curriculum build-workers test:*\", \"test:source\": \"jest\", \"test:api\": \"cd api && jest --force-exit\", \"test:curriculum\": \"cd/curriculum && pnpm test\",\n    \"test-curriculum-full-output\": \"cd /curriculum && pnpm run test:full-output\",\n    \"test-client\": \"jest client\",\n    \"test-config\": \"jest config\",\n    \"test-curriculum-js\": \"jest curriculum\",\n    \"test-tools\": \"jest tools\",\n    \"test-utils\": \"jest utils\",\n    \"prepare\": \"husky\",\n    \"playwright:run\": \"playwright test\",\n    \"playwright:watch\": \"playwright test --ui-port=0\"\n  },\n  \"dependencies\": {\n    \"dotenv\": \"16 4 5\"\n  },\n  \"devDependencies\": {\n    \"@babel/eslint-parser\": \"7 26 5\",\n    \"@babel/preset-react\": \"7 26 3\",\n    \"@eslint/compat\": \"^1 2 6\",\n    \"@eslint/eslintrc\": \"^3 2 0\",\n    \"@eslint/js\": \"^9 19 0\",\n    \"@playwright/test\": \"^1 47 1\",\n    \"@testing-library/dom\": \"10 4 0\",\n    \"@testing-library/jest-dom\": \"6 6",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 517,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "4b80b5d22762649e048a8ab3a2e9f7be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "\"cd/curriculum && pnpm test\", \"test-curriculum-full-output\": \"cd /curriculum && pnpm run test:full-output\", \"test-client\": \"jest client\", \"test-config\": \"jest config\", \"test-curriculum-js\": \"jest curriculum\", \"test-tools\": \"jest tools\", \"test-utils\": \"jest utils\", \"prepare\": \"husky\", \"playwright:run\": \"playwright test\", \"playwright:watch\": \"playwright test --ui-port=0\" }, \"dependencies\": { \"dotenv\": \"16 4 5\" }, \"devDependencies\": { \"@babel/eslint-parser\": \"7 26 5\", \"@babel/preset-react\": \"7 26 3\", \"@eslint/compat\": \"^1 2 6\", \"@eslint/eslintrc\": \"^3 2 0\", \"@eslint/js\": \"^9 19 0\", \"@playwright/test\": \"^1 47 1\", \"@testing-library/dom\": \"10 4 0\", \"@testing-library/jest-dom\": \"6 63\",\n    \"@types/jest\": \"29 5 12\",\n    \"@types/lodash\": \"4 14 202\",\n    \"@types/node\": \"20 12 8\",\n    \"@types/testing-library__jest-dom\": \"^5 14 5\",\n    \"@typescript-eslint/eslint-plugin\": \"8 24 0\",\n    \"@typescript-eslint/parser\": \"8 23 0\",\n    \"babel-jest\": \"29 7 0\",\n    \"eslint\": \"9 19 0\",\n    \"eslint-config-prettier\": \"10 0 1\",\n    \"eslint-import-resolver-typescript\": \"^3 5 5\",\n    \"eslint-plugin-filenames-simple\": \"0 9 0\",\n    \"eslint-plugin-import\": \"2 31 0\",\n    \"eslint-plugin-jest-dom\": \"5 5 0\",\n    \"eslint-plugin-jsdoc\": \"48 2 1\",\n    \"eslint-plugin-jsx-a11y\": \"6 10 2\",\n    \"eslint-plugin-no-only-tests\": \"3 1 0\",\n    \"eslint-plugin-react\": \"7 37 4\",\n    \"eslint-plugin-react-hooks\": \"4 6 0\",\n    \"eslint-plugin-testing-library\": \"7 1 1\",\n    \"globals\": \"^15 14 0\",\n    \"husky\": \"9 0 11\",\n    \"identity-obj-proxy\": \"^3 0 0\",\n    \"jest\": \"29 7",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 539,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "7225ea9e16c8220d6771bb170a201433",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "5\", \"@typescript-eslint/eslint-plugin\": \"8 24 0\", \"@typescript-eslint/parser\": \"8 23 0\", \"babel-jest\": \"29 7 0\", \"eslint\": \"9 19 0\", \"eslint-config-prettier\": \"10 0 1\", \"eslint-import-resolver-typescript\": \"^3 5 5\", \"eslint-plugin-filenames-simple\": \"0 9 0\", \"eslint-plugin-import\": \"2 31 0\", \"eslint-plugin-jest-dom\": \"5 5 0\", \"eslint-plugin-jsdoc\": \"48 2 1\", \"eslint-plugin-jsx-a11y\": \"6 10 2\", \"eslint-plugin-no-only-tests\": \"3 1 0\", \"eslint-plugin-react\": \"7 37 4\", \"eslint-plugin-react-hooks\": \"4 6 0\", \"eslint-plugin-testing-library\": \"7 1 1\", \"globals\": \"^15 14 0\", \"husky\": \"9 0 11\", \"identity-obj-proxy\": \"^3 0 0\", \"jest\": \"29 70\",\n    \"jest-environment-jsdom\": \"29 7 0\",\n    \"js-yaml\": \"3 14 1\",\n    \"lint-staged\": \"^13 1 0\",\n    \"lodash\": \"4 17 21\",\n    \"markdownlint\": \"0 33 0\",\n    \"npm-run-all2\": \"5 0 2\",\n    \"prettier\": \"3 2 5\",\n    \"prismjs\": \"1 29 0\",\n    \"stylelint\": \"16 14 1\",\n    \"tsx\": \"4 19 1\",\n    \"typescript\": \"5 7 3\",\n    \"typescript-eslint\": \"^8 23 0\",\n    \"webpack-bundle-analyzer\": \"4 10 1\",\n    \"yargs\": \"17 7 2\"\n  },\n  \"packageManager\": \"pnpm@10 11 0+sha512",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "78fa3ea89482b956dee877fa07ae7e15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "\"globals\": \"^15 14 0\", \"husky\": \"9 0 11\", \"identity-obj-proxy\": \"^3 0 0\", \"jest\": \"29 70\", \"jest-environment-jsdom\": \"29 7 0\", \"js-yaml\": \"3 14 1\", \"lint-staged\": \"^13 1 0\", \"lodash\": \"4 17 21\", \"markdownlint\": \"0 33 0\", \"npm-run-all2\": \"5 0 2\", \"prettier\": \"3 2 5\", \"prismjs\": \"1 29 0\", \"stylelint\": \"16 14 1\", \"tsx\": \"4 19 1\", \"typescript\": \"5 7 3\", \"typescript-eslint\": \"^8 23 0\", \"webpack-bundle-analyzer\": \"4 10 1\", \"yargs\": \"17 7 2\" }, \"packageManager\": \"pnpm@10 11 0+sha5126540583f41cc5f628eb3d9773ecee802f4f9ef9923cc45b69890fb47991d4b092964694ec3a4f738a420c918a333062c8b925d312f42e4f0c263eb603551f977\",\n  \"pnpm\": {\n    \"peerDependencyRules\": {\n      \"allowedVersions\": {\n        \"react-scrollable-anchor>react\": \"17\",\n        \"react-scrollable-anchor>react-dom\": \"17\"\n      }\n    },\n    \"onlyBuiltDependencies\": [\n      \"@freecodecamp/ui\",\n      \"@prisma/client\",\n      \"@prisma/engines\",\n      \"core-js\",\n      \"ejs\",\n      \"es5-ext\",\n      \"esbuild\",\n      \"gatsby\",\n      \"gatsby-cli\",\n      \"gatsby-telemetry\",\n      \"lmdb\",\n      \"msgpackr-extract\",\n      \"msw\",\n      \"nodemon\",\n      \"prisma\",\n      \"puppeteer\",\n      \"sharp\"\n    ]\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6830,
      "relative_path": "git_repos\\freeCodeCamp\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "455262e6ed325ae65265f3f5294b640a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\renovate.json",
    "source_type": "git_repo",
    "title": "renovate",
    "content": "{\n  \"enabled\": false\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 23,
      "relative_path": "git_repos\\freeCodeCamp\\renovate.json",
      "source_type": "git_repo"
    },
    "token_count": 8,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "88629ed3467191ae1789309d43e60fb7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tsconfig-base.json",
    "source_type": "git_repo",
    "title": "tsconfig-base",
    "content": "{\n  \"compilerOptions\": {\n    \"lib\": [\"WebWorker\", \"DOM\", \"DOM.Iterable\"],\n    \"target\": \"es2020\",\n    \"module\": \"es2020\",\n    \"moduleResolution\": \"node\",\n    \"allowJs\": true,\n    \"jsx\": \"react\",\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"esModuleInterop\": true,\n    \"experimentalDecorators\": true,\n    \"emitDecoratorMetadata\": true,\n    \"noEmit\": true,\n    \"resolveJsonModule\": true,\n    \"skipLibCheck\": true,\n    \"types\": [\"node\", \"jest\"]\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 474,
      "relative_path": "git_repos\\freeCodeCamp\\tsconfig-base.json",
      "source_type": "git_repo"
    },
    "token_count": 142,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "37eadc7408bb92729eb98228a065344b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "freeCodeCamp org's open-source codebase and curriculum\nfreeCodeCamp org is a friendly community where you can learn to code for free It is run by a donor-supported 501(c)(3) charity to help millions of busy adults transition into tech Our community has already helped more than 100,000 people get their first developer job Our full-stack web development and machine learning curriculum is completely free and self-paced We have thousands of interactive coding challenges to help you expand your skills Table of Contents\nCertifications\nThe Learning Platform\nReporting Bugs and Issues\nReporting Security Issues and Responsible Disclosure\nContributing\nPlatform, Build and Deployment Status\nLicense\nCertifications\nfreeCodeCamp org offers several free developer certifications Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects We estimate that each certification will take a beginner programmer around 300 hours to earn Each of these 50 projects in the freeCodeCamp org curriculum has its own agile user stories and automated tests These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it You can pull in these test suites through freeCodeCamp's CDN This means you can build these projects on websites like CodePen and Replit - or even on your local computer's development environment Once you've earned a certification, you will always have it You will always be able to link to it from your LinkedIn or resume And when your prospective employers or freelance clients click that link, they'll see a verified certification specific to you The one exception to this is if we discover violations of our Academic Honesty Policy When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people Here are our twelve core certifications:\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32110,
      "relative_path": "git_repos\\freeCodeCamp\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "0bf2bb2eaa433e94465f148565daef6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "when your prospective employers or freelance clients click that link, they'll see a verified certification specific to you The one exception to this is if we discover violations of our Academic Honesty Policy When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people Here are our twelve core certifications: 1Responsive Web Design Certification\nLearn HTML by Building a Cat Photo App\nLearn Basic CSS by Building a Cafe Menu\nLearn CSS Colors by Building a Set of Colored Markers\nLearn HTML Forms by Building a Registration Form\nLearn the CSS Box Model by Building a Rothko Painting\nLearn CSS Flexbox by Building a Photo Gallery\nLearn Typography by Building a Nutrition Label\nLearn Accessibility by Building a Quiz\nLearn More About CSS Pseudo Selectors by Building A Balance Sheet\nLearn Intermediate CSS by Building a Cat Painting\nLearn Responsive Web Design by Building a Piano\nLearn CSS Variables by Building a City Skyline\nLearn CSS Grid by Building a Magazine\nLearn CSS Transforms by Building a Penguin\nLearn CSS Animations by Building a Ferris Wheel\nProjects: Survey Form, Tribute Page, Technical Documentation Page, Product Landing Page, Personal Portfolio Webpage\n2 JavaScript Algorithms and Data Structures Certification\nLearn Introductory JavaScript by Building a Pyramid Generator\nLearn Basic JavaScript by Building a Role Playing Game\nLearn Form Validation by Building a Calorie Counter\nLearn Basic String and Array Methods by Building a Music Player\nLearn the Date Object by Building a Date Formatter\nLearn Modern JavaScript Methods By Building Football Team Cards\nLearn localStorage by Building a Todo App\nLearn Recursion by Building a Decimal to Binary Converter\nLearn Basic Algorithmic Thinking by Building a Number Sorter\nLearn Advanced Array Methods by Building a Statistics Calculator\nLearn Functional Programming by Building a Spreadsheet\nLearn Regular Expressions by Building a Spam Filter\nLearn Basic OOP by Building a Shopping Cart\nLearn Intermediate OOP by Building a Platformer Game\nLearn Intermediate Algorithmic Thinking by Building a Dice Game\nLearn Fetch and Promises By Building an fCC Authors Page\nLearn Asynchronous Programming by Building an fCC Forum Leaderboard\nProjects: Palindrome Checker, Roman Numeral Converter, Telephone Number Validator, Cash Register, RPG Creature Search App\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32110,
      "relative_path": "git_repos\\freeCodeCamp\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "ae19e93a6862cf35b48fe6281e74c78b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "Calculator Learn Functional Programming by Building a Spreadsheet Learn Regular Expressions by Building a Spam Filter Learn Basic OOP by Building a Shopping Cart Learn Intermediate OOP by Building a Platformer Game Learn Intermediate Algorithmic Thinking by Building a Dice Game Learn Fetch and Promises By Building an fCC Authors Page Learn Asynchronous Programming by Building an fCC Forum Leaderboard Projects: Palindrome Checker, Roman Numeral Converter, Telephone Number Validator, Cash Register, RPG Creature Search App 3Front End Libraries Certification\nBootstrap\njQuery\nSass\nReact\nRedux\nReact and Redux\nProjects: Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, 25 + 5 Clock\n4 Data Visualization Certification\nData Visualization with D3\nJSON APIs and Ajax\nProjects: Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram\n5 Relational Database\nLearn Bash by Building a Boilerplate\nLearn Relational Databases by Building a Database of Video Game Characters\nLearn Bash Scripting by Building Five Programs\nLearn SQL by Building a Student Database: Part 1\nLearn SQL by Building a Student Database: Part 2\nLearn Advanced Bash by Building a Kitty Ipsum Translator\nLearn Bash and SQL by Building a Bike Rental Shop\nLearn Nano by Building a Castle\nLearn Git by Building an SQL Reference Object\nProjects: Salon Appointment Scheduler, Celestial Bodies Database, Periodic Table Database, Number Guessing Game, World Cup Database\n6 Back End Development and APIs Certification\nManaging Packages with Npm\nBasic Node and Express\nMongoDB and Mongoose\nProjects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice\n7 Quality Assurance Certification\nQuality Assurance and Testing with Chai\nAdvanced Node and Express\nProjects: Metric-Imperial Converter, Issue Tracker, Personal Library, Sudoku Solver, American British Translator\n8",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32110,
      "relative_path": "git_repos\\freeCodeCamp\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "eca1e7b880e3271c5920dc89b9f62ba0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "Reference Object Projects: Salon Appointment Scheduler, Celestial Bodies Database, Periodic Table Database, Number Guessing Game, World Cup Database 6 Back End Development and APIs Certification Managing Packages with Npm Basic Node and Express MongoDB and Mongoose Projects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice 7 Quality Assurance Certification Quality Assurance and Testing with Chai Advanced Node and Express Projects: Metric-Imperial Converter, Issue Tracker, Personal Library, Sudoku Solver, American British Translator 8Scientific Computing with Python Certification\nLearn String Manipulation by Building a Cipher\nLearn How to Work with Numbers and Strings by Implementing the Luhn Algorithm\nLearn Lambda Functions by Building an Expense Tracker\nLearn List Comprehension by Building a Case Converter Program\nLearn the Bisection Method by Finding the Square Root of a Number\nLearn Regular Expressions by Building a Password Generator\nLearn Algorithm Design by Building a Shortest Path Algorithm\nLearn Recursion by Solving the Tower of Hanoi Puzzle\nLearn Data Structures by Building the Merge Sort Algorithm\nLearn Classes and Objects by Building a Sudoku Solver\nLearn Tree Traversal by Building a Binary Search Tree\nLearn Special Methods by Building a Vector Space\nProjects: Arithmetic Formatter, Time Calculator, Budget App, Polygon Area Calculator, Probability Calculator\n9 Data Analysis with Python Certification\nData Analysis with Python Course\nNumPy\nProjects: Mean-Variance-Standard Deviation Calculator, Demographic Data Analyzer, Medical Data Visualizer, Page View Time Series Visualizer, Sea Level Predictor\n10 Information Security Certification\nInformation Security with HelmetJS\nPython for Penetration Testing\nProjects: Stock Price Checker, Anonymous Message Board, Port Scanner, SHA-1 Password Cracker, Secure Real Time Multiplayer Game\n11 Machine Learning with Python Certification\nTensorFlow\nHow Neural Networks Work\nProjects: Rock Paper Scissors, Cat and Dog Image Classifier, Book Recommendation Engine using KNN, Linear Regression Health Costs Calculator, Neural Network SMS Text Classifier\n12",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32110,
      "relative_path": "git_repos\\freeCodeCamp\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5742b3e102c60892f0bd4bf71eb1c1e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "Medical Data Visualizer, Page View Time Series Visualizer, Sea Level Predictor 10 Information Security Certification Information Security with HelmetJS Python for Penetration Testing Projects: Stock Price Checker, Anonymous Message Board, Port Scanner, SHA-1 Password Cracker, Secure Real Time Multiplayer Game 11 Machine Learning with Python Certification TensorFlow How Neural Networks Work Projects: Rock Paper Scissors, Cat and Dog Image Classifier, Book Recommendation Engine using KNN, Linear Regression Health Costs Calculator, Neural Network SMS Text Classifier 12College Algebra with Python\nLearn Ratios and Proportions\nLearn How to Solve for X\nLearn Fractions and Decimals\nLearn Functions and Graphing\nLearn Linear Functions\nLearn Common Factors and Square Roots\nLearn How to Graph Systems of Equations\nLearn How to Solve Systems of Equations\nLearn Applications of Linear Systems\nLearn Quadratic Equations\nLearn Parent Graphs and Polynomials\nLearn Business Applications of College Algebra\nLearn Simple and Compound Interest\nLearn Exponents and Logarithms\nCollege Algebra with Python: Conclusion\nProjects: Multi-Function Calculator, Graphing Calculator, Three Math Games, Financial Calculator, Data Graph Explorer\nLegacy Full Stack Development Certification\nOnce you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you'll be able to claim your freeCodeCamp org Full Stack Development Certification This distinction signifies that you've completed around 1,800 hours of coding with a wide range of web development tools Legacy Certifications\nWe also have 4 legacy certifications dating back to our 2015 curriculum, which are still available All of the required projects for these legacy certifications will remain available on freeCodeCamp org Legacy Front End Development Certification\nLegacy Data Visualization Certification\nLegacy Back End Development Certification\nLegacy Information Security and Quality Assurance Certification\nFree professional certifications\n(New) Foundational C# with Microsoft\nWrite Your First Code Using C#\nCreate and Run Simple C# Console Applications\nAdd Logic to C# Console Applications\nWork with Variable Data in C# Console Applications\nCreate Methods in C# Console Applications\nDebug C# Console Applications\nExam: Foundational C# with Microsoft Certification Exam\nThe Learning Platform\nThis code is running live at freeCodeCamp org Our community also has:\nA forum where you can usually get programming help or project feedback within hours",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32110,
      "relative_path": "git_repos\\freeCodeCamp\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "2383978611a10b5bd1dc40ac106ea785",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "C# with Microsoft Write Your First Code Using C# Create and Run Simple C# Console Applications Add Logic to C# Console Applications Work with Variable Data in C# Console Applications Create Methods in C# Console Applications Debug C# Console Applications Exam: Foundational C# with Microsoft Certification Exam The Learning Platform This code is running live at freeCodeCamp org Our community also has: A forum where you can usually get programming help or project feedback within hoursA YouTube channel with free courses on Python, SQL, Android, and a wide variety of other technologies A technical publication with thousands of programming tutorials and articles about mathematics and computer science A Discord server where you can hang out and talk with developers and people who are learning to code Join the community here Reporting Bugs and Issues\nIf you think you've found a bug, first read the how to report a bug article and follow its instructions If you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue Be sure to include as much information as possible so we can reproduce the bug Reporting Security Issues and Responsible Disclosure\nWe appreciate responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users Read our security policy and follow these steps to report a vulnerability Contributing\nThe freeCodeCamp org community is possible thanks to thousands of kind volunteers like you We welcome all contributions to the community and are excited to welcome you aboard Please follow these steps to contribute Recent Contributions:\nLicense\nCopyright © 2025 freeCodeCamp org\nThe content of this repository is bound by the following licenses:\nThe computer software is licensed under the BSD-3-Clause license The learning resources in the /curriculum directory including their subdirectories thereon are copyright © 2025 freeCodeCamp org",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32110,
      "relative_path": "git_repos\\freeCodeCamp\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "e3b964417596a9074d43c8391d025b16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tsconfig.json",
    "source_type": "git_repo",
    "title": "tsconfig",
    "content": "{\n  \"include\": [\n    \"curriculum/*.test.ts\",\n    \"e2e/**/*.ts\",\n    \"tools/challenge-auditor/index.ts\",\n    \"tools/challenge-editor/**/*\",\n    \"tools/challenge-helper-scripts/**/*.ts\",\n    \"tools/scripts/**/*.ts\",\n    \"tools/daily-challenges/**/*.ts\"\n  ],\n  \"extends\": \"./tsconfig-base.json\"\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 294,
      "relative_path": "git_repos\\freeCodeCamp\\tsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 82,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5c03a2e2ed488d137d9bf43b60de3ca",
    "source_file": "corpus\\git_repos\\odin-project\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "The Odin Project Curriculum Contributing Guide",
    "content": "The Odin Project Curriculum Contributing Guide\nThank you for expressing interest in contributing to The Odin Project (TOP) curriculum Before continuing through this guide, be sure you've read our general contributing guide, as it contains information that is important for all of our repos This contributing guide assumes you have followed the instructions in our general contributing guide to fork and clone our curriculum repo Table of Contents\nHow to Contribute\nCurriculum Linting\nHow to Contribute\nThere are 2 main ways you can contribute to our curriculum:\nIf you're new to contributing to open-source, only need to edit 1 file, or if you just want to make a really quick pull request (PR), you can click the \"Improve this lesson on GitHub\" link found at the end of each lesson This will open the lesson file in its \"edit\" mode, allowing you to make any edits and submit a PR all through GitHub If you're more experienced with contributing or need to edit more than 1 file, you can follow our instructions on setting up a local clone from our general contributing guide You should also read the sections that follow on how to open a PR Regardless of the way you choose to open a PR, while working on an existing or a new lesson you must follow our Layout Style Guide to ensure the layout and formatting is consistent across our curriculum Before submitting a PR for any lesson, you must also use our Lesson Preview Tool to ensure the lesson Markdown is correctly formatted and rendering properly Curriculum Linting\nTo help enforce the layout specified in our layout style guide, we use markdownlint Whenever a PR is opened or has updates made to it, a workflow will run to check any files changed in the PR against common rules as well as custom rules specific to TOP To make the workflow easier, we also strongly suggest that users who have a local clone run this linter locally before committing any changes There are 2 ways you can do so:\nInstall the Markdownlint VSCode Plugin This plugin will automatically pick up our markdownlint configuration and flag issues with a squiggly underline Install the markdownlint-cli2 dependency This will require you to have installed Node, which we cover in our Foundations path Simply run npm install within the directory of your curriculum clone and you can run one of our npm scripts to easily lint or fix files Note that running these scripts without a supplied file path will result in help documentation being output to the terminal Lint a file: npm run lint -- \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7814,
      "relative_path": "git_repos\\odin-project\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ae953de524e64cede00931dd7e7d8fd9",
    "source_file": "corpus\\git_repos\\odin-project\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "The Odin Project Curriculum Contributing Guide",
    "content": "a squiggly underline Install the markdownlint-cli2 dependency This will require you to have installed Node, which we cover in our Foundations path Simply run npm install within the directory of your curriculum clone and you can run one of our npm scripts to easily lint or fix files Note that running these scripts without a supplied file path will result in help documentation being output to the terminal Lint a file: npm run lint -- \"/path/to/file\"\nAutofix a file: npm run fix -- \" /path/to/file\"\n[ IMPORTANT]\nnpm scripts always run from the root of the curriculum repo (the same location as this file and package json) Therefore, you must provide the full lesson/project file path relative to the repo root, even if your terminal is inside a subdirectory (such as the same directory as the lesson file) [ TIP]\nIn some cases, you may need to run a fix script more than once to catch and fix all fixable errors This typically occurs when a line has multiple errors affecting the same parts and fix actions collide, so Markdownlint only applies some of the fixes [ NOTE]\nWith either of these two methods, keep in mind that not all issues that get flagged will have an autofix available Some rules require fixes that are more dependent on context and cannot - and should not - be automatically fixed, such as our custom rule TOP001 for descriptive link text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7814,
      "relative_path": "git_repos\\odin-project\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "367209595c95c759486d1799a02835cc",
    "source_file": "corpus\\git_repos\\odin-project\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "The Odin Project Curriculum Contributing Guide",
    "content": "occurs when a line has multiple errors affecting the same parts and fix actions collide, so Markdownlint only applies some of the fixes [ NOTE] With either of these two methods, keep in mind that not all issues that get flagged will have an autofix available Some rules require fixes that are more dependent on context and cannot - and should not - be automatically fixed, such as our custom rule TOP001 for descriptive link textThe following markdownlint rules are at least partially fixable via the appropriate fix:* script:\nMD004 ul-style\nMD005 list-indent\nMD007 ul-indent\nMD009 no-trailing-spaces\nMD010 no-hard-tabs\nMD011 no-reversed-links\nMD012 no-multiple-blanks\nMD014 commands-show-output\nMD018 no-missing-space-atx\nMD019 no-multiple-space-atx\nMD022 blanks-around-headings\nMD023 headings-start-left\nMD026 no-trailing-punctuation\nMD027 no-multiple-space-blockquote\nMD028 no-blanks-blockquote\nMD030 list-marker-space\nMD031 blanks-around-fences\nMD032 blanks-around-lists\nMD037 no-space-in-emphasis\nMD038 no-space-in-code\nMD039 no-space-in-links\nMD044 proper-names\nMD047 single-trailing-newline\nMD049 emphasis-style\nMD050 strong-style\nMD053 link-image-reference-definitions\nTOP002 no-code-in-headings\nTOP003 default-section-content\nTOP005 blanks-around-multiline-html-tags\nTOP006 full-fenced-code-language\nTOP007 use-markdown-links\nTOP008 use-backticks-for-fenced-code-blocks\nTOP010 use-lazy-numbering\nTOP011 heading-indentation\nTOP012 note-box-headings",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7814,
      "relative_path": "git_repos\\odin-project\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f9e2138d3bf1049783286c1b6fd376ef",
    "source_file": "corpus\\git_repos\\odin-project\\legal_terms_of_use.md",
    "source_type": "git_repo",
    "title": "legal_terms_of_use",
    "content": "Our terms of use are located here: https://www.theodinproject.com/terms_of_use",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 80,
      "relative_path": "git_repos\\odin-project\\legal_terms_of_use.md",
      "source_type": "git_repo"
    },
    "token_count": 19,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0ea22bc42b9562a2825ef168d5d626c6",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "Awesome-opensource-apps\nAn awesome curated list of open source crafted web & mobile applications - Learn, Fork, Contribute & Most Importantly Enjoy You want to develop an app, write tests for a feature or implement a feature and you don't know how to go about it, there might just be one app/repository here with the solution to your problem Even if you are just a developer, manager or co-founder looking for a sample app to demo or test your ideas, it might just be right here Table of Contents\nLaravel\nRails\nRuby\nDjango\nAndroid\nMeteor\nReactJS\nReactNative\nVueJS\nFirebase\nAmber\nC#\nElectron\nC++\nLaravel\n| Name | Description | Link |\n|------|-------------|------|\n| AbuseIO | Abuse Management for network operators | https://abuse io |\n| Admin Architect | Administration Framework Active Admin for Laravel | http://adminarchitect com |\n| Akaunting | Free and Online Accounting Software | https://akaunting com |\n| Laracom | FREE E-Commerce Software | https://laracom net |\n| Invoice Ninja | Invoice Generation System | https://www invoiceninja com |\n| Koel | A personal music streaming server that works | http://koel phanan net |\n| Faveo | Helpdesk Ticketing System | http://www faveohelpdesk com |\n| Timegrid |  Online Reservation Platform | https://demo timegrid io |\n| Laravel io | Laravel Community Portal | http://laravel io |\n| Laravel Tricks | Laravel Tips and Tricks | http://laravel-tricks com |\n| Attendize | Ticket selling and event management platform | https://www attendize com |\n| Laraadmin | CRM for quickstart Admin based applications | http://laraadmin com |\n| Larasites | Showcasing the best websites made with Laravel & Lumen | https://www larasites com |\n| Openlaravel | A collection of open source projects built using Laravel | http://openlaravel com |\n| Flarum | Delightfully simple forum software | http://flarum org |\n| WinterCMS | CMS platform built on Laravel | https://wintercms com/ |\n| PyroCMS | PHP CMS | https://www pyrocms com |\n| LavaliteCMS | CMS built on Laravel 5 2 | http://www lavalite",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "4a2079c7bf6b8525fff8b83ab7c7c9ba",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "| Showcasing the best websites made with Laravel & Lumen | https://www larasites com | | Openlaravel | A collection of open source projects built using Laravel | http://openlaravel com | | Flarum | Delightfully simple forum software | http://flarum org | | WinterCMS | CMS platform built on Laravel | https://wintercms com/ | | PyroCMS | PHP CMS | https://www pyrocms com | | LavaliteCMS | CMS built on Laravel 5 2 | http://www lavaliteorg |\n| AsgardCMS | A modular multilingual CMS built with Laravel 5 | http://asgardcms com |\n| WardRobeCMS | A minimal blogging application | http://wardrobecms com |\n| KodiCMS | The CMS built on Laravel 5 2 | http://laravel kodicms ru |\n| MicroweberCMS | Drag and Drop CMS and online shop | https://microweber com |\n| BoostrapCMS | A PHP CMS powered by Laravel 5 and Sentry | |\n| TypiCMS | Multilingual and modular CMS built with Laravel 5 2 | |\n| FullyCMS | Multi Language Content Management System | |\n| FlarepointCRM |  Self-hosted CRM platform built with Laravel 5 | |\n| Quarx | A CMS for Laravel Apps | |\n| Oez | Lightweight Blogging CMS | |\n| Airflix | A near-netflix Clone  | |\n| Antvel | Laravel eCommerce | http://antvel com |\n| LaraShop | A Simple PHP Shop CMS | http://it-toys com |\n| 92five | Self-hosted Project Management App | http://92fiveapp com |\n| Deployer | A free and open source deployment tool | http://phpdeployment org |\n| Paperwork | OpenSource note-taking & archiving alternative to Evernote, Microsoft OneNote & Google Keep | http://paperwork rocks |\n| Podcastwala | Podcast System | |\n| Laravel Snippets | A repository of useful code snippets for Laravel PHP framework | |\n| Freelancer Notes | Freelancer Notes | |\n| Critter | Mini-twitter-like app | http://demos maxoffsky com/critter |\n| PHPhub | Chinese PHP Community | http://phphub org |\n| Cachet | Open Source Status Page System | https://cachethq",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "66ef6696b22b8a127dd39d82198990e6",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "note-taking & archiving alternative to Evernote, Microsoft OneNote & Google Keep | http://paperwork rocks | | Podcastwala | Podcast System | | | Laravel Snippets | A repository of useful code snippets for Laravel PHP framework | | | Freelancer Notes | Freelancer Notes | | | Critter | Mini-twitter-like app | http://demos maxoffsky com/critter | | PHPhub | Chinese PHP Community | http://phphub org | | Cachet | Open Source Status Page System | https://cachethqio |\n| Ribbbon | A project management system for Artisans | |\n| Scrumwala | Your very own Scrum/Agile web app for personal use | |\n| SnipeIT | IT Asset/license Management System | http://snipeitapp com |\n| Neontsunami | Personal Website and blog | http://www neontsunami com |\n| Nahid co | Personal Portfolio and blog project | http://nahid co |\n| Laramap | A Map of Laravel Developers | https://laramap com |\n| Learn Party | A Dead Simple Learning Management System | https://learn-party herokuapp com |\n| Techademia | Organize Your Youtube Videos to Learn | http://techademia herokuapp com |\n| BookStack | A platform to create documentation/wiki content | https://www bookstackapp com |\n| Gruik | An open-source markdown note-taking web app | http://gruik io |\n| Laravel com | Official Website and Documentation of Laravel | https://laravel com |\n| Katana | Laravel static site/blog generator with markdown support |  |\n| CoasterCMS | Coaster CMS Project | http://www coastercms org |\n| Statamic | Flat File CMS | https://statamic com |\n| Larasocial | A Social Network Application | http://larasocial info |\n| Aimeos | Ecommerce package for high performance online shops | https://aimeos org/Laravel |\n| Gitamin | A self-hosted git repository management software | http://gitamin com |\n| Vuedo | Vuedo is blog platform, built with Laravel and Vue js | https://vuejsfeed com |\n| Condor |  Service monitor that watches diverse statuses, and elegantly reports every drift | https://condor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "4835f242a08aef3ce2667521917e0b01",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "CMS | https://statamic com | | Larasocial | A Social Network Application | http://larasocial info | | Aimeos | Ecommerce package for high performance online shops | https://aimeos org/Laravel | | Gitamin | A self-hosted git repository management software | http://gitamin com | | Vuedo | Vuedo is blog platform, built with Laravel and Vue js | https://vuejsfeed com | | Condor | Service monitor that watches diverse statuses, and elegantly reports every drift | https://condorrocks |\n| DevTv |  DevTv is your online Video Subscription Platform | http://dev-tv herokuapp com |\n| SЁCU | SЁCU is a service to create password protected self-destructing data packages and anonymous chat-rooms | https://secu su/ |\n| Confomo |  A service that facilitates meeting Twitter friends at conferences | |\n| File Manager |  A File manager (for CKEditor and TinyMCE) with multi-users support | |\n| FlyMyShop |  An e-commerce platform for online merchants | https://flymyshop com |\n| Laravel GitScrum | GitScrum is a project to help developer team | |\n| MIT-2014-2015-YEARBOOK |  E-YearBook for 2014/2015 UNILAG MIT students  | http://unilagmitfaces ml | |\n| Despark's igniCMS |  Easy to use featherlight CMS, which provides you with a shortcut to bootstrapping the backend of PHP (Laravel), MySQL based projects | https://despark com/ |\n| Voten | Voten co is a real-time social bookmarking platform for the 21st century| https://voten co |\n| Handesk |  A Powerful Laravel Help Desk and Lead Management App | |\n| Multitrust |  Latest roles and permission for multi-auth or single-auth | https://hellolaravel org/mk/multitrust/ |\n| Unifiedtransform |  A School Management Software | https://changeweb github io/Unifiedtransform/ | |\n| Tinre |  A fast and powerful URL Shortener built with Laravel, VueJS, and Tailwind CSS | https://github com/devpri/tinre | |\n| Taskord |  Get things done socially with community of makers | https://taskord",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "9b4622c5a2f03c8bfc2b4b62eb5a71de",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "| Handesk | A Powerful Laravel Help Desk and Lead Management App | | | Multitrust | Latest roles and permission for multi-auth or single-auth | https://hellolaravel org/mk/multitrust/ | | Unifiedtransform | A School Management Software | https://changeweb github io/Unifiedtransform/ | | | Tinre | A fast and powerful URL Shortener built with Laravel, VueJS, and Tailwind CSS | https://github com/devpri/tinre | | | Taskord | Get things done socially with community of makers | https://taskordcom | |\nRails\n| Name | Description | Link |\n|------|-------------|------|\n| Helpy | Mobile First Helpdesk Application | http://helpy io |\n| Coderwall | Professional network for Software | engineers - https://coderwall com |\n| Sharetribe | A Marketplace Platform | https://www sharetribe com |\n| Spina | A beautiful CMS for Rails Developers | http://www spinacms com |\n| Loomio |  Make decisions together | https://www loomio org |\n| Rails port of OpenstreetMap | Open Street Map | http://www openstreetmap org |\n| Help | Small help request system | |\n| OpenSourceBilling | Beautiful Simple Billing Software | http://opensourcebilling org |\n| Hours | Time registration that doesn't suck | https://happyhours io |\n| OpenProject | Project Management System | https://www openproject org |\n| Huginn | Agent system that perform tasks online for you | |\n| Discourse | A Platform for Community Discussion | http://www discourse org |\n| Squash | Collection of tools that helps developers find and kill bugs | http://squash io |\n| Eventx | Event Management System without Hassle | http://www eventtx com |\n| Fulcrum | Agile Project Management Tool | http://wholemeal co nz/projects/fulcrum html |\n| Spree | E-commerce Solution | http://spreecommerce com |\n| RedMine | Project Management Application | http://www redmine org |\n| Diaspora | Distributed Social Network | https://diasporafoundation org |\n| SprintApp | Time tracking and Project Management App | http://www sprintapp com |\n| Copycopter | A service for editing the copy text of a Rails application | http://copycopter com |\n| Cartes io API | Free, anonymous, and live maps for anyone and everything",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "8100ea51620dd1459322aac314779c27",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "| Spree | E-commerce Solution | http://spreecommerce com | | RedMine | Project Management Application | http://www redmine org | | Diaspora | Distributed Social Network | https://diasporafoundation org | | SprintApp | Time tracking and Project Management App | http://www sprintapp com | | Copycopter | A service for editing the copy text of a Rails application | http://copycopter com | | Cartes io API | Free, anonymous, and live maps for anyone and everything| https://app cartes io |\nRuby\n| Name | Description | Link |\n|------|-------------|------|\n| Lazylead | Self-hosted application that allows automate (without admin access) daily actions with ticketing systems (Jira, GitHub, Trello) like tickets fields verification, email notifications by JQL/GQL, meeting requests to your (or teammates) calendar | https://github com/dgroup/lazylead |\nDjango\n| Name | Description | Link |\n|------|-------------|------|\n| Shoop | E-commerce Platform | https://shoop io |\n| Django-CMS | Easy to use and developer friendly CMS | http://www django-cms org |\n| Django-fiber | A simple, user-friendly CMS for all your Django projects | http://ridethepony org |\n| Feincms | A Django-based CMS with a focus on extensibility and concise code | http://www feincms org |\n| Mezzanine | CMS framework for Django | http://mezzanine jupo org |\n| Wagtail | A Django content management system focused on flexibility and user experience | http://wagtail io |\n| Django-leonardo | CMS for everyone, easy to deploy and scale, robust modular system with many packages | https://www leonardo-cms org |\n| Mayan EDMS | Django based document management system with OCR, indexing, full text searching, previewing and more | https://www mayan-edms com/ |\n| Django-shop | A Django based shop system | https://django-shop readthedocs io/en/latest/index html|\n| Django Project | Official Django Website and Documentation | https://www djangoproject",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "1d0a976f231647298a036294ab4b376f",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "user experience | http://wagtail io | | Django-leonardo | CMS for everyone, easy to deploy and scale, robust modular system with many packages | https://www leonardo-cms org | | Mayan EDMS | Django based document management system with OCR, indexing, full text searching, previewing and more | https://www mayan-edms com/ | | Django-shop | A Django based shop system | https://django-shop readthedocs io/en/latest/index html| | Django Project | Official Django Website and Documentation | https://www djangoprojectcom/|\n| Travel Mate Server | Django based document management system with OCR, indexing, full text searching, previewing and more | App on PlayStore |\nAndroid\n| Name | Description | Link |\n|------|-------------|------|\n| Plaid | An app that showcases Material Design | https://play google com/store/apps/details id=io plaidapp |\n| Google I/O Scheduler | Offcial Android app for Google I/O | https://play google com/store/apps/details id=com google samples apps iosched |\n| Project Frisbee | All GDG content in one place | https://play google com/store/apps/details id=org gdg frisbee android |\n| Wallsplash | Wallsplash is the cutting edge wallpaper app for your device | https://play google com/store/apps/details id=com mikepenz unsplash |\n| Easy Diary | This is a diary application optimized to user experience | https://play google com/store/apps/details id=me blog korn123 easydiary |\n| Easy Photo Map | Easy Photo Map is a photomap application that displays the location of the photo on the map using the location information included in the photo | https://play google com/store/apps/details id=me blog korn123 easyphotomap |\n| Easy Password | A password manager using a single lock pattern for various type passwords management | https://play google com/store/apps/details id=io github hanjoongcho easypassword |\n| Applozic Chat App | Open source Android Chat SDK / Messaging SDK that lets you add real time chat and in-app messaging in your mobile (android, iOS) applications and website | https://play google com/store/apps/details id=com applozic messenger |\n| InstaGrabber | Open source alternative Instagram client | https://instagrabber austinhuang",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "bc6c11d66ca09e08f0bc3135a4a50909",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "| Easy Password | A password manager using a single lock pattern for various type passwords management | https://play google com/store/apps/details id=io github hanjoongcho easypassword | | Applozic Chat App | Open source Android Chat SDK / Messaging SDK that lets you add real time chat and in-app messaging in your mobile (android, iOS) applications and website | https://play google com/store/apps/details id=com applozic messenger | | InstaGrabber | Open source alternative Instagram client | https://instagrabber austinhuangme |\n| Simple Random Stock | A simple application that will randomly select stocks for you | https://play google com/store/apps/details id=com willchan simple_random_stock |\nMeteor\n| Name | Description | Link |\n|------|-------------|------|\n| Rocket Chat | A web chat platform | https://rocket chat |\n| ColourCode | An online colour code app | http://www colourco de |\n| ReactionCommerce | A JavaScript Ecommerce App | https://reactioncommerce com |\n| CoderMania | An E-Learning Platform | http://www codermania com |\n| Telescope | Lauch Sites Easily | http://www telescopeapp org |\n| titra| An open source project time-tracking app | https://titra io/ |\n| Loop Pulse | Data Analysis Platform | http://www looppulse com |\n| Wekan| The open-source Trello-like kanban | https://wekan io/ |\nReactJS\n| Name | Description | Link |\n|------|-------------|------|\n| Filestash | A Dropbox like file manager built in React | https://filestash app |\n| microapps-donation | A single page application that allows people to donate money | https://microapp-donation herokuapp com |\n| Feednext | A central source of object reviewing | https://feednext io |\n| docue | Document Management System With React Frontend | https://docue herokuapp com |\n|MERNMAP | An interactive map for MERN(MongoDB, ExpressJS, ReactJS, NodeJS) Stack Developers | http://mernmap herokuapp com |\n| Cerebro | One-input productivity booster | http://www cerebroapp com |\n| Itsquiz-wall | Isomorphic \"Quiz Wall\" for itsquiz com | https://itsquiz com |\n| SoundRedux - SoundCloud Client | Isomorphic \"Quiz Wall\" for itsquiz",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "b8d88a07098bdc968ddbe0705aebaaf2",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "A central source of object reviewing | https://feednext io | | docue | Document Management System With React Frontend | https://docue herokuapp com | |MERNMAP | An interactive map for MERN(MongoDB, ExpressJS, ReactJS, NodeJS) Stack Developers | http://mernmap herokuapp com | | Cerebro | One-input productivity booster | http://www cerebroapp com | | Itsquiz-wall | Isomorphic \"Quiz Wall\" for itsquiz com | https://itsquiz com | | SoundRedux - SoundCloud Client | Isomorphic \"Quiz Wall\" for itsquizcom | https://soundredux io |\n| React-Powered Hacker News Client | React-Powered Hacker News Client | https://react-hn appspot com |\n| Calypso | The new JavaScript- and API-powered WordPress com | https://developer wordpress com/calypso |\n| Trello tribute | A clone of Trello with React and Phoenix | https://phoenix-trello herokuapp com |\n| In-Browser Playground | A playground for in-browser interpreters Built with React/Redux | http://fatiherikli github io/fil |\n| Spectacle | A React library for Deck/Slide Presentations | http://stack formidable com/spectacle |\n| Google Map Clustering | A Google Map Clustering Example | http://istarkov github io/google-map-clustering-example |\n| Kitematic | Visual Docker Container Management on Mac & Windows | https://github com/docker/kitematic |\n| Perseus | Perseus is Khan Academy's new exercise question editor and renderer | http://khan github io/perseus |\n| Favesound-redux | The SoundCloud Client in React + Redux made with passion | http://www robinwieruch de/the-soundcloud-client-in-react-redux |\n| How to GraphQL | The Fullstack Tutorial for GraphQL | https://www howtographql com |\n| Picatic - Ticketing Selling | Ticketing widget built with create-react-app | http://developer picatic com/ |\n| Github Desktop | Git client on Mac & Windows | https://desktop github com |\n| Dnote | A simple command line notebook with a web interface | https://www getdnote com |\n| react-handsontable | A React wrapper for the the Handsontable spreadsheet component | https://handsontable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "9afc76df10562a02e8fda1d6fc81729b",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "How to GraphQL | The Fullstack Tutorial for GraphQL | https://www howtographql com | | Picatic - Ticketing Selling | Ticketing widget built with create-react-app | http://developer picatic com/ | | Github Desktop | Git client on Mac & Windows | https://desktop github com | | Dnote | A simple command line notebook with a web interface | https://www getdnote com | | react-handsontable | A React wrapper for the the Handsontable spreadsheet component | https://handsontablecom |   |   |   |\n| React Admin | Download Free React Templates by WrapPixel | https://www wrappixel com/ |\n| PopCritic | Movies Reviewed by people, for people | https://popcritic web app/ |   |   |   |\n| React Admin Templates | Download Best Free and Premium React Templates from AdminMart | https://adminmart com/ |\n| Unbroken | Unbroken - A React-based Progressive Web App for strength & cardio tracking, based on the Tactical Barbell books | https://unbroken-app com/ |\nReact Native\n| Name | Description | Link |\n|------|-------------|------|\n| Yahoo Finance | iOS's Stocks App clone written in React Native for demo purpose (available both iOS and Android) Data is pulled from Yahoo Finance | App on Play Store |\n| Pokemon Go Clone | Pokemon Go in React Native | Demo|\n| BBC News | An unofficial basic implementation of the BBC News app built using React Native | |\n| FC Barca App | FC Barcelona in React Native | Demo |\n| AirBnb Clone | An Airbnb Clone in React Native | Demo |\n| Assemblies |A developer-focused Meetup clone built with React Native | |\n| 21mobile | Cinema 21 movie schedule app built with react native, graphql, redux | 21mobile sonnylab com |\n| Dribbble | Dribbble app built with React Native | |\n| Whatsapp Clone | Whatsapp Clone app built with React Native | Demo |\n| London React | React Native app for the London React Meetup | |\n| Snapchat Clone| SnapChat clone written with React Native | Demo |\n| Civis Face| An app for exploring facial recognition using react-native, AWS Rekognition, and AWS Polly",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "5e4b7b6d44a4c372467180f0de10f9d4",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "react native, graphql, redux | 21mobile sonnylab com | | Dribbble | Dribbble app built with React Native | | | Whatsapp Clone | Whatsapp Clone app built with React Native | Demo | | London React | React Native app for the London React Meetup | | | Snapchat Clone| SnapChat clone written with React Native | Demo | | Civis Face| An app for exploring facial recognition using react-native, AWS Rekognition, and AWS Polly| Demo |\n| Standard Notes | A simple and private notes app | App on Play Store |\n| Ulangi | A flashcard app to learn language with different learning methods | App on Play Store |\nVueJS\n| Name | Description | Link |\n|------|-------------|------|\n| Attendant | Laravel Valet GUI - An app to monitor your sites running on Valet Packaged with Electron |\n| vue-music163| A Vue js app for music| |\n| vue-handsontable-official | Vue js wrappers for the Handsontable and Handsontable Pro spreadsheet components | https://handsontable com  |   |\n| VueJs Admin | Download Free VueJs Templates by WrapPixel | https://www wrappixel com/ |\n| VueJs Admin Templates | Download Best Free and Premium VueJs Templates from AdminMart | https://adminmart com/ |\nFirebase\n| Name | Description | Link |\n|------|-------------|------|\n| Friendlychat | Firebase codelab for building a cross-platform chat app | |\n| Friendlypix | FriendlyPix is a cross-platform Firebase example app | |\n| Firefeed | Firefeed is a web app that lets users post small messages called sparks to their feed | |\n| Fun Retro | Fun Retro is a distributed retrospective app that is easy and simple to use | |\n| PriceTrack | API / Website for E-commerce price tracking Built with Firebase functions and Firebase Hosting | |\nAmber\n| Name | Description | Link |\n|------|-------------|------|\n| Crystal ANN | Web site to announce new Crystal projects, blog posts, updates and other work activities | https://crystal-ann com |\nC\n| Name | Description | Link |\n|------|-------------|------|\n| MySQL Database Library | C# tool for seamless MySQL connection and CRUD operations | https://medium",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "fa97118dffa2fbe70cd5fb3e717058c0",
    "source_file": "corpus\\git_repos\\awesome-opensource-apps\\README.md",
    "source_type": "git_repo",
    "title": "Awesome-opensource-apps",
    "content": "| | PriceTrack | API / Website for E-commerce price tracking Built with Firebase functions and Firebase Hosting | | Amber | Name | Description | Link | |------|-------------|------| | Crystal ANN | Web site to announce new Crystal projects, blog posts, updates and other work activities | https://crystal-ann com | C | Name | Description | Link | |------|-------------|------| | MySQL Database Library | C# tool for seamless MySQL connection and CRUD operations | https://mediumcom/@franklinezeji/mysql-database-library-for-c-developers-4bec985dc009 |\n| Libation | Audible Audiobook manager and library | https://github com/rmcrackan/Libation |\nElectron\n| Name | Description | Link |\n|------|-------------|------|\n| ExifCleaner | Cross platform desktop app to remove exif metadata from images | https://exifcleaner com\n| Lavendel | Cross platform desktop app >2 5kb containing a cute timer | https://github com/timo-cmd/Lavendel\nC++\n| Name | Description | Link |\n|------|-------------|------|\n| SumatraPDF | Open source PDF, eBook (epub, mobi), comic book (cbz/cbr), DjVu, XPS, CHM, image viewer for Windows | https://github com/sumatrapdfreader/sumatrapdf\nGo\n| Name | Description | Link |\n|------|-------------|------|\n| Kopia | Fast and secure open-source backup/restore tool that allows you to create encrypted snapshots of your data and save the snapshots to remote or cloud storage of choice | https://github com/kopia/kopia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31804,
      "relative_path": "git_repos\\awesome-opensource-apps\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "e7a16d6f330110624b2cb034309b43f9",
    "source_file": "corpus\\git_repos\\odin-project\\license.md",
    "source_type": "git_repo",
    "title": "License",
    "content": "License\nThis curriculum is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\nIt basically means you can do whatever you want with the material as long as it's for non-commercial use but you've got to attribute the original author (Erik Trautman) and share any derivative works under the same license.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 447,
      "relative_path": "git_repos\\odin-project\\license.md",
      "source_type": "git_repo"
    },
    "token_count": 72,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e907085d0f5b1cec5b416daef9a4eb69",
    "source_file": "corpus\\git_repos\\odin-project\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"curriculum\",\n  \"version\": \"1.0.0\",\n  \"description\": \"[The Odin Project](https://www.theodinproject.com/) (TOP) is an open-source curriculum for learning full-stack web development. Our curriculum is divided into distinct courses, each covering the subject language in depth. Each course contains a listing of lessons interspersed with multiple projects. These projects give users the opportunity to practice what they are learning, thereby reinforcing and solidifying the theoretical knowledge learned in the lessons. Completed projects may then be included in the user's portfolio.\",\n  \"scripts\": {\n    \"lint\": \"markdownlint-cli2\",\n    \"fix\": \"markdownlint-cli2 --fix\"\n  },\n  \"license\": \"CC BY-NC-SA 4.0\",\n  \"devDependencies\": {\n    \"markdownlint-cli2\": \"^0.12.1\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 797,
      "relative_path": "git_repos\\odin-project\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 188,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dcedb1a8e81769b13452db7e8d8d9ffb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft Open Source Code of Conduct",
    "content": "Microsoft Open Source Code of Conduct\nThis project has adopted the Microsoft Open Source Code of Conduct.\nResources:\nMicrosoft Open Source Code of Conduct\nMicrosoft Code of Conduct FAQ\nContact opencode@microsoft.com with questions or concerns",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 552,
      "relative_path": "git_repos\\web-dev-beginners\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 44,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "853077c1c36bde7872c2d02801d106e3",
    "source_file": "corpus\\git_repos\\odin-project\\README.md",
    "source_type": "git_repo",
    "title": "The Odin Project Curriculum",
    "content": "The Odin Project Curriculum\nThe Odin Project (TOP) is an open-source curriculum for learning full-stack web development. Our curriculum is divided into distinct courses, each covering the subject language in depth. Each course contains a listing of lessons interspersed with multiple projects. These projects give users the opportunity to practice what they are learning, thereby reinforcing and solidifying the theoretical knowledge learned in the lessons. Completed projects may then be included in the user's portfolio.\nLessons are structured through a combination of original written content and a compilation of carefully curated resources from the web. This is where the contributing happens!\nThis repo contains the actual lesson files used on our website. For the actual TOP app that pulls in this lesson content and contains our front-end and back-end code, please go to the main TOP repo.\nOur community can be found on the TOP Discord server.\nContributing\nThe Odin Project depends on open-source contributions to improve, grow, and thrive. We welcome contributors of all experience levels and backgrounds to help maintain this awesome curriculum and community. If you would like to contribute to our curriculum, be sure to thoroughly read our contributing guide.\nSome of the things you can do to contribute to our curriculum include:\nCorrect typos and other grammar errors.\nRewrite parts of existing lessons to make them clearer and easier to understand.\nFix broken links.\nAdd new resource links you think would make a lesson better.\nWork on entirely new lessons after getting approval.\nHappy Coding!\nSee license.md for usage details.\nCreated by Erik Trautman.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2032,
      "relative_path": "git_repos\\odin-project\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bb43f1939d27dd851f59b06774bb4417",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "Contributing",
    "content": "Contributing\nThis project welcomes contributions and suggestions. Most contributions require you to\nagree to a Contributor License Agreement (CLA) declaring that you have the right to\nand actually do, grant us the rights to use your contribution. For more details, visit\nhttps://cla.microsoft.com.\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need\nto provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the\ninstructions provided by the bot. You will only need to do this once across all repositories using our CLA. Please also try to tell us why you made that change so that we better understand your request.\nThis project has adopted the Microsoft Open Source Code of Conduct.\nFor more information, see the Code of Conduct FAQ\nor contact opencode@microsoft.com with any additional questions or comments.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1164,
      "relative_path": "git_repos\\web-dev-beginners\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 176,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6fe0041f9c4d6dc2a1cb1966f43349a5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\docsifytopdf.js",
    "source_type": "git_repo",
    "title": "docsifytopdf",
    "content": "module.exports = {\n\tcontents: ['docs/_sidebar.md'], // array of \"table of contents\" files path\n\tpathToPublic: 'pdf/readme.pdf', // path where pdf will stored\n\tpdfOptions: {\n\t\tmargin: { top: '100px', bottom: '100px' }\n\t}, // reference: https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagepdfoptions\n\tremoveTemp: true, // remove generated .md and .html or not\n\temulateMedia: 'print', // mediaType, emulating by puppeteer for rendering pdf, 'print' by default (reference: https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pageemulatemediamediatype)\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 592,
      "relative_path": "git_repos\\web-dev-beginners\\docsifytopdf.js",
      "source_type": "git_repo"
    },
    "token_count": 160,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "17da86df27c20af4b68e640a70cd186c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\index.css",
    "source_type": "git_repo",
    "title": "index",
    "content": ".app-nav ul li {\n  width: max-content;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 42,
      "relative_path": "git_repos\\web-dev-beginners\\index.css",
      "source_type": "git_repo"
    },
    "token_count": 12,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e324338c0222e6f98dcec57e9b11eb92",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "For Educators\nWould you like to use this curriculum in your classroom? Please feel free to!\nIn fact, you can use it within GitHub itself by using GitHub Classroom.\nTo do that, fork this repo. You are going to need to create a repo for each lesson, so you're going to need to extract each folder into a separate repo. That way, GitHub Classroom can pick up each lesson separately.\nThese full instructions will give you an idea of how to set up your classroom.\nUsing it in Moodle, Canvas or Blackboard\nThis curriculum works well in these Learning Management Systems! Use the Moodle upload file for the full content, or try the Common Cartridge file which contains some of the content. Moodle Cloud does not support full Common Cartridge exports, so it is preferable to use the Moodle download file which can be uploaded into Canvas. Please let us know how we can improve this experience.\nThe curriculum in a Moodle classroom\nThe curriculum in Canvas\nUsing the repo as is\nIf you would like to use this repo as it currently stands, without using GitHub Classroom, that can be done as well. You would need to communicate with your students which lesson to work through together.\nIn an online format (Zoom, Teams, or other) you might form breakout rooms for the quizzes, and mentor students to help them get ready to learn. Then invite students to the quizzes and submit their answers as 'issues' at a certain time. You might do the same with assignments if you want students to work collaboratively out in the open.\nIf you prefer a more private format, ask your students to fork the curriculum, lesson by lesson, to their own GitHub repos as private repos, and give you access. Then they can complete quizzes and assignments privately and submit them to you via issues on your classroom repo.\nThere are many ways to make this work in an online classroom format. Please let us know what works best for you!\nPlease give us your thoughts!\nWe want to make this curriculum work for you and your students. Connect with us at the Teacher corner and open a new issue for any requests, bugs and feedback.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2616,
      "relative_path": "git_repos\\web-dev-beginners\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "21d201c4e2636810570eed2333144bcc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\index.html",
    "source_type": "git_repo",
    "title": "Web Dev for Beginners",
    "content": "Web Dev for Beginners",
    "metadata": {
      "file_extension": ".html",
      "file_type": "html",
      "file_size": 2158,
      "relative_path": "git_repos\\web-dev-beginners\\index.html",
      "source_type": "git_repo"
    },
    "token_count": 4,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2882f0674807aada0da145bface7fceb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n\t\"name\": \"web-dev-for-beginners\",\n\t\"version\": \"1.0.0\",\n\t\"description\": \"Web Dev for Beginners - A Curriculum\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"convert\": \"node_modules/.bin/docsify-to-pdf\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/microsoft/Web-Dev-For-Beginners.git\"\n\t},\n\t\"keywords\": [\n\t\t\"web\",\n\t\t\"dev\",\n\t\t\"development\",\n\t\t\"curriculum\"\n\t],\n\t\"author\": \"Microsoft Cloud Advocates\",\n\t\"license\": \"MIT\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/microsoft/Web-Dev-For-Beginners/issues\"\n\t},\n\t\"homepage\": \"https://github.com/microsoft/Web-Dev-For-Beginners#readme\",\n\t\"devDependencies\": {\n\t\t\"docsify-to-pdf\": \"0.0.5\"\n\t}\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 677,
      "relative_path": "git_repos\\web-dev-beginners\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "24c81fd6f91ab651e6d806fcfc745c96",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Security\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include Microsoft, Azure, DotNet, AspNet, Xamarin, and our GitHub organizations.\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets Microsoft's definition of a security vulnerability, please report it to us as described below.\nReporting Security Issues\nPlease do not report security vulnerabilities through public GitHub issues.\nInstead, please report them to the Microsoft Security Response Center (MSRC) at https://msrc.microsoft.com/create-report.\nIf you prefer to submit without logging in, send an email to secure@microsoft.com.  If possible, encrypt your message with our PGP key; please download it from the Microsoft Security Response Center PGP Key page.\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at microsoft.com/msrc.\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\nType of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\nFull paths of the source file(s) related to the manifestation of the issue\nThe location of the affected source code (tag/branch/commit or direct URL)\nAny special configuration required to reproduce the issue\nStep-by-step instructions to reproduce the issue\nProof-of-concept or exploit code (if possible)\nImpact of the issue, including how an attacker might exploit the issue\nThis information will help us triage your report more quickly.\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our Microsoft Bug Bounty Program page for more details about our active programs.\nPreferred Languages\nWe prefer all communications to be in English.\nPolicy\nMicrosoft follows the principle of Coordinated Vulnerability Disclosure.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3048,
      "relative_path": "git_repos\\web-dev-beginners\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "56fd92b91d063472fa0d53f9161a92de",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "Support",
    "content": "Support\nHow to file issues and get help\nThis project uses GitHub Issues to track bugs and feature requests. Please search the existing issues before filing new issues to avoid duplicates. For new issues, file your bug or feature request as a new Issue.\nFor help and questions about using this project, please refer to our contributing guidelines.\nMicrosoft Support Policy\nSupport for this project is limited to the resources listed above.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 486,
      "relative_path": "git_repos\\web-dev-beginners\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 82,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a98a152bd6612a7e9bd33a8648582b22",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\_404.md",
    "source_type": "git_repo",
    "title": "Work in progress",
    "content": "Work in progress\nWe are working on this page. Please check back later.\nOpen an issue if you have any questions.\nBack home",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 213,
      "relative_path": "git_repos\\web-dev-beginners\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 27,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2591874dcfe3861da7468d71049eeb86",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\.devcontainer\\devcontainer.json",
    "source_type": "git_repo",
    "title": "devcontainer",
    "content": "{\n  \"image\": \"mcr.microsoft.com/devcontainers/universal:2\",\n  \"features\": {\n    \"ghcr.io/devcontainers/features/github-cli:1\": {}\n  },\n    \"customizations\": {\n    \"vscode\": {\n      \"extensions\": [        \n        \"GitHub.copilot\",\n        \"ms-vscode.azure-account\",\n        \"ms-azuretools.vscode-azurestaticwebapps\"\n      ]\n    }\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 351,
      "relative_path": "git_repos\\web-dev-beginners\\.devcontainer\\devcontainer.json",
      "source_type": "git_repo"
    },
    "token_count": 92,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d45fbbd9f8ba305d899cf19648d91f3d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\.github\\pull_request_template.md",
    "source_type": "git_repo",
    "title": "Description",
    "content": "Description\nPlease include a summary of the changes and the related issue. Please also include relevant motivation and context.\nFixes # (issue)\nType of change\n[ ] Bug fix (non-breaking change which fixes an issue)\n[ ] New feature (non-breaking change which adds functionality)\n[ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n[ ] This change requires a documentation update",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 453,
      "relative_path": "git_repos\\web-dev-beginners\\.github\\pull_request_template.md",
      "source_type": "git_repo"
    },
    "token_count": 84,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "87aa0dfa2d5914eb597b1cebb86ab504",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\1-getting-started-lessons\\README.md",
    "source_type": "git_repo",
    "title": "Getting Started with Web Development",
    "content": "Getting Started with Web Development\nIn this section of the curriculum, you will be introduced to non project-based concepts important to becoming a professional developer.\nTopics\nIntroduction to Programming Languages and Tools of the Trade\nIntroduction to GitHub\nBasics of Accessibility\nCredits\nIntroduction to Programming Languages and Tools of the Trade was written with ♥️ by Jasmine Greenaway\nIntroduction to GitHub was written with ♥️ by Floor Drees\nBasics of Accessibility was written with ♥️ by Christopher Harrison",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 785,
      "relative_path": "git_repos\\web-dev-beginners\\1-getting-started-lessons\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 96,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "29b35c0732d4fbc94d6292f29ac985c4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\2-js-basics\\README.md",
    "source_type": "git_repo",
    "title": "Introduction to JavaScript",
    "content": "Introduction to JavaScript\nJavaScript is the language of the web. In these four lessons, you'll learn its basics.\nTopics\nVariables and Data Types\nFunctions and Methods\nMaking Decisions with JavaScript\nArrays and Loops\nCredits\nThese lessons were written with ♥️ by Jasmine Greenaway, Christopher Harrison and Chris Noring",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 587,
      "relative_path": "git_repos\\web-dev-beginners\\2-js-basics\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 65,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d7765b65cf1efe37ab19117b9a3ef67d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\3-terrarium\\README.md",
    "source_type": "git_repo",
    "title": "My Terrarium: A project to learn about HTML, CSS, and DOM manipulation using JavaScript 🌵🌱",
    "content": "My Terrarium: A project to learn about HTML, CSS, and DOM manipulation using JavaScript 🌵🌱\nA small drag and drop code-meditation. With a little HTML, JS and CSS, you will be able to build a web interface, style it, and even add multiple interactions of your choice.\nLessons\nIntroduction to HTML\nIntroduction to CSS\nIntroduction to DOM and JS Closures\nCredits\nWritten with ♥️  by Jen Looper\nThe terrarium created via CSS was inspired by Jakub Mandra's glass jar codepen.\nThe artwork is hand drawn by Jen Looper with the help of Procreate.\nDeploy your Terrarium\nYou can deploy, or publish your terrarium on the web using Azure Static Web Apps.\nFork this repo\nPress this button\nWalk through the wizard creating your app. Make sure you set the app root to either be /solution or the root of your codebase. There's no API in this app, so don't worry about adding that. A github folder will be created in your forked repository that will help Azure Static Web Apps' build services, build and publish your app to a new URL.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1539,
      "relative_path": "git_repos\\web-dev-beginners\\3-terrarium\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 240,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "85534b35c17736a23b8e45581350723c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\4-typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Event-Driven Programming - Build a Typing Game",
    "content": "Event-Driven Programming - Build a Typing Game\nIntroduction\nTyping is one of the most underrated skills of the developer. The ability to quickly transfer thoughts from your head to your editor allows creativity to flow freely. One of the best ways to learn is to play a game!\nSo, let's build a typing game!\nYou're going to use the JavaScript, HTML and CSS skills you have built up so far to create a typing game. The game will present the player with a random quote (we're using Sherlock Holmes quotes) and time how long the player takes to type it out accurately. You're going to use the JavaScript, HTML and CSS skills you have built up so far to create a typing game.\nPrerequisites\nThis lesson assumes you're familiar with the following concepts:\nCreating text input and button controls\nCSS and setting styles using classes\nJavaScript basics\nCreating an array\nCreating a random number\nGetting the current time\nLesson\nCreating a typing game by using event driven programming\nCredits\nWritten with ♥️ by Christopher Harrison",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1244,
      "relative_path": "git_repos\\web-dev-beginners\\4-typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "141d4bf02da5ad48a4d646021e402297",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\README.md",
    "source_type": "git_repo",
    "title": "Web Development for Beginners - A Curriculum",
    "content": "Web Development for Beginners - A Curriculum\nLearn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games Engage with quizzes, discussions, and practical assignments Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy Start your coding journey today 🧑‍🎓 Are you a student Visit Student Hub page where you will find beginner resources, Student packs and even ways to get a free certificate voucher This is the page you want to bookmark and check from time to time as we switch out content monthly 📣 Announcement - New Curriculum on Generative AI for JavaScript was just released\nDon't miss our new Generative AI curriculum Visit https://aka ms/genai-js-course to get started Lessons covering everything from basics to RAG Interact with historical characters using GenAI and our companion app Fun and engaging narrative, you'll be time traveling Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:\n- Prompting and prompt engineering\n- Text and image app generation\n- Search apps\nVisit https://aka ms/genai-js-course to get started 🌱 Getting Started\nTeachers, we have included some suggestions on how to use this curriculum We'd love your feedback in our discussion forum Learners, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz To enhance your learning experience, connect with your peers to work on the projects together Discussions are encouraged in our discussion forum where our team of moderators will be available to answer your questions To further your education, we highly recommend exploring Microsoft Learn for additional study materials 📋 Setting up your environment\nThis curriculum has a development environment ready to go As you get started you can choose to run the curriculum in a Codespace (a browser-based, no installs needed environment), or locally on your computer using a text editor such as Visual Studio Code Create your repository\nFor you to easily save your work, it is recommended that you create your own copy of this repository You can do this by clicking the Use this template button at the top of the page This will create a new repository in your GitHub account with a copy of the curriculum Follow these steps:\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23653,
      "relative_path": "git_repos\\web-dev-beginners\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8c296fe94d16f591071769b54cd60836",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\README.md",
    "source_type": "git_repo",
    "title": "Web Development for Beginners - A Curriculum",
    "content": "installs needed environment), or locally on your computer using a text editor such as Visual Studio Code Create your repository For you to easily save your work, it is recommended that you create your own copy of this repository You can do this by clicking the Use this template button at the top of the page This will create a new repository in your GitHub account with a copy of the curriculum Follow these steps: 1Fork the Repository: Click on the \"Fork\" button at the top-right corner of this page 2 Clone the Repository:   git clone https://github com/microsoft/Web-Dev-For-Beginners git\nRunning the curriculum in a Codespace\nIn your copy of this repository that you created, click the Code button and select Open with Codespaces This will create a new Codespace for you to work in Running the curriculum locally on your computer\nTo run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool Our first lesson, Introduction to Programming Languages and Tools of the Trade, will walk you through various options for each of these tools for you to select what works best for you Our recommendation is to use Visual Studio Code as your editor, which also has a built-in Terminal You can download Visual Studio Code here Clone your repository to your computer You can do this by clicking the Code button and copying the URL:\nThen, open Terminal within Visual Studio Code and run the following command, replacing <your-repository-url> with the URL you just copied:\nbash\ngit clone <your-repository-url>\nOpen the folder in Visual Studio Code You can do this by clicking File > Open Folder and selecting the folder you just cloned Recommended Visual Studio Code extensions:\nLive Server - to preview HTML pages within Visual Studio Code\nCopilot - to help you write code faster\n📂 Each lesson includes:\noptional sketchnote\noptional supplemental video\npre-lesson warmup quiz\nwritten lesson\nfor project-based lessons, step-by-step guides on how to build the project\nknowledge checks\na challenge\nsupplemental reading\nassignment\npost-lesson quiz\nA note about quizzes: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the quiz-app folder They are gradually being localized",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23653,
      "relative_path": "git_repos\\web-dev-beginners\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0d7b0c301cccdf9e6960bca2681e542e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\README.md",
    "source_type": "git_repo",
    "title": "Web Development for Beginners - A Curriculum",
    "content": "supplemental video pre-lesson warmup quiz written lesson for project-based lessons, step-by-step guides on how to build the project knowledge checks a challenge supplemental reading assignment post-lesson quiz A note about quizzes: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the quiz-app folder They are gradually being localized🗃️ Lessons\n|     |                       Project Name                       |                            Concepts Taught                             | Learning Objectives                                                                                                                 |                                                         Linked Lesson                                                          |         Author          |\n| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     Getting Started                      |           Introduction to Programming and Tools of the Trade           | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | Intro to Programming Languages and Tools of the Trade |         Jasmine         |\n| 02  |                     Getting Started                      |             Basics of GitHub, includes working with a team             | How to use GitHub in your project, how to collaborate with others on a code base                                                    |                            Intro to GitHub                             |          Floor          |\n| 03  |                     Getting Started                      |                             Accessibility                              | Learn the basics of web accessibility                                                                                               |                       Accessibility Fundamentals                       |       Christopher       |\n| 04  |                        JS Basics                         |                         JavaScript Data Types                          | The basics of JavaScript data types                                                                                                 |                                       Data Types                                        |         Jasmine         |\n| 05  |                        JS Basics                         |                         Functions and Methods                          | Learn about functions and methods to manage an application's logic flow                                                             |                              Functions and Methods                               | Jasmine and Christopher |\n| 06  |                        JS Basics                         |                        Making Decisions with JS                        | Learn how to create conditions in your code using decision-making methods                                                           |                                 Making Decisions                                  |         Jasmine         |\n| 07  |                        JS Basics                         |                            Arrays and Loops                            | Work with data using arrays and loops in JavaScript                                                                                 |                                   Arrays and Loops                                    |         Jasmine         |\n| 08  |       Terrarium       |                            HTML in Practice                            | Build the HTML to create an online terrarium, focusing on building a layout                                                         |                                 Introduction to HTML                                 |           Jen           |\n| 09  |       Terrarium       |                            CSS in Practice                             | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive                     |                                  Introduction to CSS                                  |           Jen           |\n| 10  |            Terrarium            |                 JavaScript Closures, DOM manipulation                  | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation             |                  JavaScript Closures, DOM manipulation                   |           Jen           |\n| 11  |          Typing Game          |                          Build a Typing Game                           | Learn how to use keyboard events to drive the logic of your JavaScript app                                                          |                                Event-Driven Programming                                |       Christopher       |\n| 12  | Green Browser Extension |                         Working with Browsers                          | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension                               |                               About Browsers                                |           Jen           |\n| 13  | Green Browser Extension | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage                      |                APIs, Forms, and Local Storage                 |           Jen           |\n| 14  | Green Browser Extension |          Background processes in the browser, web performance          | Use the browser's background processes to manage the extension's icon; learn about web performance and some optimizations to make   |             Background Tasks and Performance              |           Jen           |\n| 15  |           Space Game           |             More Advanced Game Development with JavaScript             | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game              |                      Introduction to Advanced Game Development                       |          Chris          |\n| 16  |           Space Game           |                           Drawing to canvas                            | Learn about the Canvas API, used to draw elements to a screen                                                                       |                                Drawing to Canvas                                |          Chris          |\n| 17  |           Space Game           |                   Moving elements around the screen                    | Discover how elements can gain motion using the cartesian coordinates and the Canvas API                                            |                           Moving Elements Around                           |          Chris          |\n| 18  |           Space Game           |                          Collision detection                           | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game    |                              Collision Detection                              |          Chris          |\n| 19  |           Space Game           |                             Keeping score                              | Perform math calculations based on the game's status and performance                                                                |                                    Keeping Score                                    |          Chris          |\n| 20  |           Space Game           |                     Ending and restarting the game                     | Learn about ending and restarting the game, including cleaning up assets and resetting variable values                              |                                The Ending Condition                                 |          Chris          |\n| 21  |         Banking App          |                 HTML Templates and Routes in a Web App                 | Learn how to create the scaffold of a multipage website's architecture using routing and HTML templates                             |                            HTML Templates and Routes                             |          Yohan          |\n| 22  |         Banking App          |                  Build a Login and Registration Form                   | Learn about building forms and handling validation routines                                                                          |                                           Forms                                           |          Yohan          |\n| 23  |         Banking App          |                   Methods of Fetching and Using Data                   | How data flows in and out of your app, how to fetch it, store it, and dispose of it                                                 |                                            Data                                            |          Yohan          |\n| 24  |         Banking App          |                      Concepts of State Management                      | Learn how your app retains state and how to manage it programmatically                                                              |                                State Management                                |          Yohan          |\n🏫 Pedagogy\nOur curriculum is designed with two key pedagogical principles in mind:\n* project-based learning\n* frequent quizzes\nThe program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today's web developers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23653,
      "relative_path": "git_repos\\web-dev-beginners\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1320,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "2b4f1d2f9236e8ff02ecfe85fdf09de9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\README.md",
    "source_type": "git_repo",
    "title": "Web Development for Beginners - A Curriculum",
    "content": "| Data | Yohan | | 24 | Banking App | Concepts of State Management | Learn how your app retains state and how to manage it programmatically | State Management | Yohan | 🏫 Pedagogy Our curriculum is designed with two key pedagogical principles in mind: * project-based learning * frequent quizzes The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today's web developersStudents will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses By the end of the series, students will have gained a solid understanding of web development 🎓 You can take the first few lessons in this curriculum as a Learn Path on Microsoft Learn By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with a video from the \"Beginners Series to: JavaScript\" collection of video tutorials, some of whose authors contributed to this curriculum In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention This curriculum was designed to be flexible and fun and can be taken in whole or in part The projects start small and become increasingly complex by the end of the 12-week cycle While we have purposefully avoided introducing JavaScript frameworks to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node js via another collection of videos: \"Beginner Series to: Node js\" Visit our Code of Conduct and Contributing guidelines We welcome your constructive feedback 🧭 Offline access\nYou can run this documentation offline by using Docsify Fork this repo, install Docsify on your local machine, and then in the root folder of this repo, type docsify serve The website will be served on port 3000 on your localhost: localhost:3000 📘 PDF\nA PDF of all of the lessons can be found here 🎒 Other Courses\nOur team produces other courses Check out:\nGenerative AI for Beginners\nGenerative AI for Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23653,
      "relative_path": "git_repos\\web-dev-beginners\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "082c44945072419febd240bc420c432a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\README.md",
    "source_type": "git_repo",
    "title": "Web Development for Beginners - A Curriculum",
    "content": "🧭 Offline access You can run this documentation offline by using Docsify Fork this repo, install Docsify on your local machine, and then in the root folder of this repo, type docsify serve The website will be served on port 3000 on your localhost: localhost:3000 📘 PDF A PDF of all of the lessons can be found here 🎒 Other Courses Our team produces other courses Check out: Generative AI for Beginners Generative AI for BeginnersNET\nGenerative AI with JavaScript\nGenerative AI with Java\nAI for Beginners\nData Science for Beginners\nML for Beginners\nCybersecurity for Beginners\nWeb Dev for Beginners\nIoT for Beginners\nXR Development for Beginners\nMastering GitHub Copilot for Agentic use\nMastering GitHub Copilot for C#/ NET Developers\nChoose Your Own Copilot Adventure\nLicense\nThis repository is licensed under the MIT license See the LICENSE file for more information",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23653,
      "relative_path": "git_repos\\web-dev-beginners\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "4997d740514dc0a9c138129a9a95fc6d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\6-space-game\\README.md",
    "source_type": "git_repo",
    "title": "Build a Space Game",
    "content": "Build a Space Game\nA space game to teach more advanced JavaScript fundamentals\nIn this lesson you will learn how to build your own space game. If you've ever played the game \"Space Invaders\", this game has the same idea: to steer a spaceship and fire on monsters that come down from above. Here's what the finished game will look like:\nIn these six lessons you will learn the following:\nInteract with the Canvas element to draw things on a screen\nUnderstand the cartesian coordinate system\nLearn the Pub-Sub pattern to create sound game architecture that's easier to maintain and extend\nLeverage Async/Await to load game resources\nHandle keyboard events\nOverview\nTheory\nIntroduction to building games with JavaScript\nPractice\nDrawing to canvas\nMoving elements around the screen\nCollision detection\nKeeping score\nEnding and restarting the game\nCredits\nThe assets used for this came from https://www.kenney.nl/.\nIf you are into building games, these are some seriously good assets, a lot is free and some are paid.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1355,
      "relative_path": "git_repos\\web-dev-beginners\\6-space-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7e240ba653b83a918839d8076bf579af",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\5-browser-extension\\README.md",
    "source_type": "git_repo",
    "title": "Building a browser extension",
    "content": "Building a browser extension\nBuilding browser extensions is a fun and interesting way to think about the performance of your apps while building a different type of web asset. This module includes lessons on how browsers work and how to deploy a browser extension, how to build a form, call an API, and use local storage, and how to gauge the performance of your website and improve it.\nYou'll build a  browser extension that works on Edge, Chrome, and Firefox. This extension, which is like a mini web site that is tailored to a very specific task, checks the C02 Signal API for a given region's electricity usage and carbon intensity, and returns a reading on the region's carbon footprint.\nThis extension can be called ad hoc by a user once an API key and region code is input into a form to determine local electricity usage and thereby offer data that can influence a user's electricity decisions. For example, it may be preferable to delay running a clothes dryer (a carbon-intense activity) during a period of high electricity usage in your region.\nTopics\nAbout the browser\nForms and local storage\nBackground tasks and performance\nCredits\nCredits\nThe idea for this web carbon trigger was offered by Asim Hussain, lead at Microsoft of the Green Cloud Advocacy team and author of the Green Principles. It was originally a web site project.\nThe structure of the browser extension was influenced by Adebola Adeniran's COVID extension.\nThe concept behind the 'dot' icon system was suggested by the icon structure of the Energy Lollipop browser extension for California emissions.\nThese lessons were written with ♥️ by Jen Looper",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2079,
      "relative_path": "git_repos\\web-dev-beginners\\5-browser-extension\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8a1203bbbe90f8f221e70c5c25b7d7c8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\7-bank-project\\README.md",
    "source_type": "git_repo",
    "title": ":dollar: Build a Bank",
    "content": ":dollar: Build a Bank\nIn this project, you'll learn how to build a fictional bank. These lessons include instructions on how to layout a web app and provide routes, build forms, manage state, and fetch data from an API from which you can fetch the bank's data.\n|  |  |\n|--------------------------------|--------------------------------|\nLessons\nHTML Templates and Routes in a Web App\nBuild a Login and Registration Form\nMethods of Fetching and Using Data\nConcepts of State Management\nCredits\nThese lessons were written with :hearts: by Yohan Lasorsa.\nIf you're interested to learn how to build the server API used in these lessons, you can follow this series of videos (in particular videos 17 through 21).\nYou can also take a look at this interactive Learn tutorial.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1114,
      "relative_path": "git_repos\\web-dev-beginners\\7-bank-project\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 165,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d1f2e6b320549a1042faf5d097bc084c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\docs\\_navbar.md",
    "source_type": "git_repo",
    "title": "_navbar",
    "content": "Translations\nEnglish (United States)\nবাংলা\n中文(中国)\n中文(台湾)\nEspañol\nFrançais\nΕλληνικά\nहिन्दी\nBahasa Melayu\nമലയാളം\nதமிழ்\nతెలుగు\nBahasa Indonesia\nItaliano\n日本語\nNederlands\nनेपाली\nPortuguês\nРусский",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 684,
      "relative_path": "git_repos\\web-dev-beginners\\docs\\_navbar.md",
      "source_type": "git_repo"
    },
    "token_count": 123,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d280a84ad75c8e5093cdbbd2fedf35a9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\docs\\_sidebar.md",
    "source_type": "git_repo",
    "title": "_sidebar",
    "content": "Introduction\n1\n2\n3\nJS Basics\n4\n5\n6\n7\nHTML, CSS, JS\n8\n9\n10\nTyping game\n11\nBrowser Extension\n12\n13\n14\nSpace Game\n15\n16\n17\n18\n19\n20\nBank Project\n21\n22\n23\n24",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1518,
      "relative_path": "git_repos\\web-dev-beginners\\docs\\_sidebar.md",
      "source_type": "git_repo"
    },
    "token_count": 71,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "22eb6b24ffc86b6518748736f23dd355",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\lesson-template\\assignment.md",
    "source_type": "git_repo",
    "title": "[Assignment Name]",
    "content": "[Assignment Name]\nInstructions\nRubric\n| Criteria | Exemplary | Adequate | Needs Improvement |\n| -------- | --------- | -------- | ----------------- |\n|          |           |          |                   |",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 226,
      "relative_path": "git_repos\\web-dev-beginners\\lesson-template\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 41,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "05c5591aa55c274552ddc7f6eea26c79",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\lesson-template\\README.md",
    "source_type": "git_repo",
    "title": "[Lesson Topic]",
    "content": "[Lesson Topic]\nPre-lecture quiz\n[Describe what we will learn]\nIntroduction\nDescribe what will be covered\nNotes\nPrerequisite\nWhat steps should have been covered before this lesson?\nPreparation\nPreparatory steps to start this lesson\n[Step through content in blocks]\n[Topic 1]\nTask:\nWork together to progressively enhance your codebase to build the project with shared code:\nhtml\ncode blocks\n✅ Knowledge Check - use this moment to stretch students' knowledge with open questions\n[Topic 2]\n[Topic 3]\n🚀 Challenge: Add a challenge for students to work on collaboratively in class to enhance the project\nOptional: add a screenshot of the completed lesson's UI if appropriate\nPost-lecture quiz\nReview & Self Study\nAssignment Due [MM/YY]: Assignment Name",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 953,
      "relative_path": "git_repos\\web-dev-beginners\\lesson-template\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 168,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3f895ca3f627bb2e761f02696eaae4f6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\quiz-app\\index.html",
    "source_type": "git_repo",
    "title": "Vite App",
    "content": "Vite App",
    "metadata": {
      "file_extension": ".html",
      "file_type": "html",
      "file_size": 344,
      "relative_path": "git_repos\\web-dev-beginners\\quiz-app\\index.html",
      "source_type": "git_repo"
    },
    "token_count": 3,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6041efa67b6b297eb1f143e8bb221687",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\quiz-app\\jsconfig.json",
    "source_type": "git_repo",
    "title": "jsconfig",
    "content": "{\n  \"compilerOptions\": {\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"exclude\": [\"node_modules\", \"dist\"]\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 124,
      "relative_path": "git_repos\\web-dev-beginners\\quiz-app\\jsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 37,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9388b30484849d95f3f7b7e0e93971c4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\quiz-app\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"quizapp\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"preview\": \"vite preview\",\n    \"lint\": \"eslint . --ext .vue,.js,.jsx,.cjs,.mjs --fix --ignore-path .gitignore\"\n  },\n  \"dependencies\": {\n    \"vue\": \"^3.4.29\",\n    \"vue-router\": \"^4.3.3\"\n  },\n  \"devDependencies\": {\n    \"@vitejs/plugin-vue\": \"^5.2.4\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-plugin-vue\": \"^9.23.0\",\n    \"vite\": \"^6.3.5\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 508,
      "relative_path": "git_repos\\web-dev-beginners\\quiz-app\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 188,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "93d18481f2b3e8f9fde5b861931b7db7",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "Layout style guide\nInspired by Google's styleguide TOP uses Markdown for the layout and formatting of lesson and project files to get properly formatted HTML for the TOP website The goals of this style guide are to help create Markdown that is:\nReadable for as many users as possible Editable by any contributor Consistent across the TOP website A note on language: TOP follows American English and American style punctuation When adding content to the curriculum, be sure to follow this practice for consistency across lessons Using formatters: Many projects have a standard in how their code is formatted which should always be followed when contributing If you're using a formatter (such as Prettier), you should always be sure you aren't accidentally committing code that goes against that standard This can be achieved by simply disabling the formatter, saving your files without formatting, or configuring your formatter to adhere to the project's standard Table of Contents\nLesson layout\nProject layout\nHeadings\nNewlines\nLists\nCode\nNote boxes\nLinks\nImages\nKeyboard shortcuts\nCodepen embeds\nMermaid diagrams\nMarkdown styling\nLayouts\nIn general, the following layouts should be used for all lessons and projects Text that should be replaced with the author's own content will be in all CAPS, with any additional information regarding a section listed at the end of the layout code block When adding new lessons or projects, make a copy of either the lesson template or the project template in the appropriate folder where the new lesson/project should be placed Then begin editing the template copy The lesson example and project example files both show how this style guide can be put to use in an actual lesson/project They don't cover every situation (the lesson example doesn't show a lesson with an assignment and one without, for example), but they should give you a better representation of how lessons/projects should look after this style guide is applied Lesson layout\n```markdown\nIntroduction\nA BRIEF INTRODUCTION Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson A LESSON OVERVIEW ITEM CUSTOM SECTION HEADING\nCUSTOM SECTION CONTENT Assignment\n#### OPTIONAL CUSTOM ASSIGNMENT HEADING\n1 A RESOURCE OR EXERCISE ITEM\n- AN INSTRUCTION ITEM\nKnowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "705a841247dc6899e33996bbddb06766",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "that you will learn in this lesson A LESSON OVERVIEW ITEM CUSTOM SECTION HEADING CUSTOM SECTION CONTENT Assignment #### OPTIONAL CUSTOM ASSIGNMENT HEADING 1 A RESOURCE OR EXERCISE ITEM - AN INSTRUCTION ITEM Knowledge check The following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledgeA KNOWLEDGE CHECK QUESTION\nAdditional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental It looks like this lesson doesn't have any additional resources yet Help us expand this section by contributing to our curriculum ```\n### Introduction: A brief summary on what the lesson is about and/or why the topics or concepts it covers are important Replace the A BRIEF INTRODUCTION text with your own lesson introduction ### Lesson overview: A bulleted list of items that provide a general overview of what the user will learn about in the lesson Lesson overviews should include general, higher level statements that cover the core concepts of the lesson They should serve and be phrased as a list of key items that a user should be expected to learn about throughout the lesson, rather than a list of things they should be able to do by the end of it Replace the A LESSON OVERVIEW ITEM text with your own lesson overview item, then add any additional bulleted lesson overview items The lesson should ideally have no more than 7 lesson overview items, but this number might vary by lesson If the lesson does not have a lesson overview, remove this entire section from the lesson ### CUSTOM SECTION HEADING: A custom section that contains some of the main content of the lesson Replace the CUSTOM SECTION HEADING text with a proper section heading and the CUSTOM SECTION CONTENT text with your own content, then add any additional custom sections If the lesson does not have any custom sections, remove this entire section from the lesson ### Assignment: A numbered list of external resources the user must read or watch, or practical exercises the user must complete (such as our exercise repos), in order to fully complete the lesson If an assignment is intended to have multiple lists, each list should include a level 4 heading by replacing the #### OPTIONAL CUSTOM ASSIGNMENT HEADING with a proper level 4 heading, otherwise this custom heading can be omitted Each assignment item should include some brief text that further informs the user on why it is included in the assignment or what purpose it serves",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "7d498ff23e55daa6efded9596ecc039f",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "(such as our exercise repos), in order to fully complete the lesson If an assignment is intended to have multiple lists, each list should include a level 4 heading by replacing the #### OPTIONAL CUSTOM ASSIGNMENT HEADING with a proper level 4 heading, otherwise this custom heading can be omitted Each assignment item should include some brief text that further informs the user on why it is included in the assignment or what purpose it servesWhen necessary, an assignment item should also explicitly state any instructions that should be followed Examples of instructions can include (but aren't limited to) a specific section the user should read, whether the user should complete any specific exercises, and whether the user should redirect themselves to additional links within the resource Replace the A RESOURCE OR EXERCISE ITEM text with your own text and a link to the resource or exercise (or any applicable instructions if an exercise isn't external), then add any additional numbered assignment items The lesson should ideally have no more than 3-5 assignment items (reading several sections on a web page or completing a folder of 5 exercises would be considered a single assignment item) If the lesson does not have an assignment, remove this entire section from the lesson If an assignment item includes any instructions, replace the AN INSTRUCTION ITEM text with a single instruction, then add any additional bulleted instruction items If a user should only read specific sections within a resource (e g \"Skip Chapter 7\") or complete only specific exercises (e g \"Complete the first two exercises in the repo\"), each instruction item should be its own bullet If an assignment item does not have any instructions, remove the bulleted AN INSTRUCTION ITEM text from it ### Knowledge check: A bulleted list of specific questions that should aid users in reflecting on the lesson's key topics A knowledge check should only link either to a section within the lesson (either with a Heading 3 ### or Heading 4 ####, or by wrapping text in a <span> element with an id attribute), or a resource previously linked to in the lesson This link should help users review the applicable material without requiring them to re-read the entire lesson Replace the A KNOWLEDGE CHECK URL text with the actual link to the section/resource and the A KNOWLEDGE CHECK QUESTION text with your own question/problem that the user should be able to answer/solve Then add any additional bulleted knowledge check items The lesson should ideally have no more than 7 knowledge checks, but this number might vary by lesson",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "234c2fe0bb5b031e26b600ab62375b20",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "This link should help users review the applicable material without requiring them to re-read the entire lesson Replace the A KNOWLEDGE CHECK URL text with the actual link to the section/resource and the A KNOWLEDGE CHECK QUESTION text with your own question/problem that the user should be able to answer/solve Then add any additional bulleted knowledge check items The lesson should ideally have no more than 7 knowledge checks, but this number might vary by lessonIf the lesson does not have a knowledge check, remove this entire section from the lesson In order to link to a Heading 3 ### or Heading 4 #### within the lesson, replace the value within the parenthesis for the knowledge check link with a hashtag # followed immediately by the section title in lowercase and any spaces replaced with a hyphen - For example, a Heading 3 section titled ### Creating a method would be linked to with (#creating-a-method) In order to link to a <span> element within the lesson, replace the value within the parenthesis with the exact id attribute of the <span> element (this will be case sensitive) For example, a <span id=\"Knowledge-Check-3\"> element would be linked to with (#Knowledge-Check-3) ### Additional resources: A bulleted list of optional resources for the user to read Additional resources should be related to the content of the lesson in some way, without being necessary to gain an understanding of the lesson content An additional resource should include brief text that further informs the user on why it is included or what purpose it serves, and generally should stand out in some way from the lesson content and other additional resources A good rule of thumb is to try and answer, \"what purpose does this resource serve \"\nIf the lesson doesn't include any additional resources, leave this section as-is Otherwise, replace the default bulleted resource item with your own resource, then add any additional bulleted resource items The lesson should ideally have no more than 3-5 additional resources Project layout\n```markdown\nIntroduction\nA BRIEF INTRODUCTION OPTIONAL PRE-ASSIGNMENT SECTION HEADING\nOPTIONAL PRE-ASSIGNMENT SECTION CONTENT Assignment\n#### OPTIONAL CUSTOM ASSIGNMENT HEADING\n1 A REQUIREMENT/USER STORY #### Extra credit\n- AN OPTIONAL ADD-ON/USER STORY OPTIONAL POST-ASSIGNMENT SECTION HEADING\nOPTIONAL POST-ASSIGNMENT SECTION CONTENT",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "e9809e6f7e71b8b874b5f573eb3f3af1",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "additional resources, leave this section as-is Otherwise, replace the default bulleted resource item with your own resource, then add any additional bulleted resource items The lesson should ideally have no more than 3-5 additional resources Project layout ```markdown Introduction A BRIEF INTRODUCTION OPTIONAL PRE-ASSIGNMENT SECTION HEADING OPTIONAL PRE-ASSIGNMENT SECTION CONTENT Assignment #### OPTIONAL CUSTOM ASSIGNMENT HEADING 1 A REQUIREMENT/USER STORY #### Extra credit - AN OPTIONAL ADD-ON/USER STORY OPTIONAL POST-ASSIGNMENT SECTION HEADING OPTIONAL POST-ASSIGNMENT SECTION CONTENT```\n### Introduction: A brief summary on what the project is and an overview of what the user will be building Replace the A BRIEF INTRODUCTION text with your own project introduction ### OPTIONAL PRE-ASSIGNMENT SECTION HEADING: A section that contains content that should come before the actual project assignment This section will most likely not be needed for most projects, but when it is needed simply replace the OPTIONAL PRE-ASSIGNMENT SECTION HEADING text with a proper section heading and the OPTIONAL PRE-ASSIGNMENT SECTION CONTENT text with your own content Then add any additional pre-assignment sections If the project does not have a pre-assignment section, remove this entire section from the project ### Assignment: A numbered list of items that describe detailed requirements or user stories that must be followed in order to complete the project Replace the A REQUIREMENT/USER STORY with your own requirement, then add any additional numbered requirement items If an assignment is intended to have multiple lists, each list should include a level 4 heading by replacing the #### OPTIONAL CUSTOM ASSIGNMENT HEADING with a proper level 4 heading, otherwise this custom heading can be omitted #### Extra credit: A bulleted list of items that describe any optional add-ons or user stories that might make a user's project stand out Replace the AN OPTIONAL ADD-ON/USER STORY text with your own add-on, then add any additional bulleted add-on items If the project does not have any extra credit items, remove the extra credit section from the assignment ### OPTIONAL POST-ASSIGNMENT SECTION HEADING: A section that contains content that should come after the actual project assignment This section will most likely not be needed for most projects, but when it is needed simply replace the OPTIONAL POST-ASSIGNMENT SECTION HEADING text with a proper section heading and the OPTIONAL POST-ASSIGNMENT SECTION CONTENT text with your own content Then add any additional post-assignment sections",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "82311f469015c19cf7f4b80267bf539b",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "any extra credit items, remove the extra credit section from the assignment ### OPTIONAL POST-ASSIGNMENT SECTION HEADING: A section that contains content that should come after the actual project assignment This section will most likely not be needed for most projects, but when it is needed simply replace the OPTIONAL POST-ASSIGNMENT SECTION HEADING text with a proper section heading and the OPTIONAL POST-ASSIGNMENT SECTION CONTENT text with your own content Then add any additional post-assignment sectionsIf the project does not have a post-assignment section, remove this entire section from the project Headings\nIndentation\nHeadings must not be indented, regardless of level and even if they are inside an assignment div The only exception is when the heading is for a note box Case\nHeadings should always use sentence case:\n```markdown\nThis Is Not Sentence case\nThis is sentence case\nThis is also sentence case with HTML\n```\nNo code snippets\nHeadings should never contain any code snippets ```markdown\nThe id property\nThe id property\n```\nATX-style headings\nUse Heading 3 ### for main section titles (\"Lesson overview\", \"Assignment\", custom sections, etc):\n```markdown\nSection heading\n```\nSub-heading\nUse either Heading 4 #### for sub-headings that are on their own line or Markdown's bold syntax, e g **Sub-heading**, for inline sub-headings:\n```markdown text before Sub-heading\nText after Inline sub-heading: Some text defining this sub-heading ```\nNewlines\nEach Markdown file should have an empty newline at the very end, after all of the file's contents Always add a newline before and after a heading, a list, an Assignment panel, or any other content that is not strictly text:\n```markdown\nContent before Section heading\nA list item content after ```\nLists\nThe Odin Project follows Google's documentation style guide on lists Capitalization and end punctuation\nCapitalization and end punctuation depend on the type of list and the contents of the list Generally, start each list item with a capital letter and end each list item with a period or other appropriate sentence-ending punctuation markdown\n- Use Git to make open-source contributions - Understand how the web works - Explain what OOP principles are Do not use end punctuation in the following cases:\nIf the item consists of a single word, don't use end punctuation If the item doesn't include a verb, don't use end punctuation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "f7bcbd06410f2b69138a21d719f71c83",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "the list Generally, start each list item with a capital letter and end each list item with a period or other appropriate sentence-ending punctuation markdown - Use Git to make open-source contributions - Understand how the web works - Explain what OOP principles are Do not use end punctuation in the following cases: If the item consists of a single word, don't use end punctuation If the item doesn't include a verb, don't use end punctuationFor more detailed examples of the exceptions, refer to Google's style guide on lists\nLazy numbering\nMarkdown is smart enough to let the resulting HTML render your numbered lists correctly For longer lists that may change, especially long nested lists, use \"lazy\" numbering The following Markdown:\nmarkdown\n1 Foo\n1 Bar\n1 Foofoo\n1 Barbar\n1 Baz\nWill result in the following output:\nFoo\nBar\nFoofoo\nBarbar\nBaz\nNested lists\nWhen nesting lists, use a 2 space indent when nesting inside a bulleted list and a 3 space indent when nesting inside a numbered list The following Markdown:\n```markdown\n1 The first item\n1 A second item\n- A sub-item for the second item with 3 spaces before the hyphen\nA bulleted list item\nA sub-bullet with a 2 space indent\nA new list item\n```\nWill result in the following output:\nThe first item\nA second item\nA sub-item for the second item with 3 spaces before the hyphen\nA bulleted list item\nA sub-bullet with a 2 space indent\nA new list item\nMulti-line list items\nWhen list items should wrap onto multiple lines – such as to create a line break between a lengthy list item – insert an empty line before and after each wrapped line and use a 2 to 3 space indent on the wrapped line You should use a 2 space indent for bulleted lists and a 3 space indent for numbered lists The following Markdown:\n```markdown\n1 This is a lengthy list item This is related information to the first item, but visually separated out A new list item\nThis is a lengthy bulleted list item This is related information to the first item, but visually separated out A new bulleted list item\n```\nWill result in the following output:\nThis is a lengthy list item This is related information to the first item, but visually separated out A new list item\nThis is a lengthy bulleted list item",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "d787d68b488a92f130734a9e1b949f4c",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "This is related information to the first item, but visually separated out A new list item This is a lengthy bulleted list item This is related information to the first item, but visually separated out A new bulleted list item ``` Will result in the following output: This is a lengthy list item This is related information to the first item, but visually separated out A new list item This is a lengthy bulleted list itemThis is related information to the first item, but visually separated out A new bulleted list item\nUnordered lists\nThe preferred way to create unordered lists for The Odin Project is by using hyphens - Both hyphens and asterisks give the same results, but sticking to one way keeps the source markdown consistent markdown\n- This is a list item made using a hyphen - This is a list item made using a hyphen - This is a list item made using a hyphen Code\nInline\n`Backticks` designate inline code, and will render all wrapped content\nliterally Use them for short code quotations, math formulas/calculations, field names, or file names:\n``markdown\nWrite these in thescript` tag of a skeleton HTML file which is why we can call taco printString() but not taco capitalizeString() Create a new file named styles css first ```\nCodeblocks\nFor code quotations longer than a single line, use a codeblock with 3 opening and closing backticks:\nmarkdown\n```javascript\nconst obj = {\nname: \"object\",\nmarker: \"X\"\n}\n```\nDeclare the language\nIt is best practice to explicitly declare the language immediately after the opening backticks, so that neither the\nsyntax highlighter nor the next editor must guess If a language has both a long and short form that markdown will accept, for example javascript will also be accepted as js, and text will also be accepted as txt, the long form must be used No extraneous characters\nCodeblocks should only contain actual code snippets, terminal commands, or commented out text Never include leading terminal content, such as the dollar sign $ you might see preceding any commands you type in ```bash\nIncorrect\n$ cd Documents\nCorrect\ncd Documents\n```\nNest codeblocks within lists\nIf you need a codeblock within a list, you should follow the same indenting rules for multi-line list items, with the codeblock being indented with 2 spaces for a bulleted list item and 3 spaces for a numbered list item",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "b1ddde9bf6bfd15799ee86e86bc47768",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "commented out text Never include leading terminal content, such as the dollar sign $ you might see preceding any commands you type in ```bash Incorrect $ cd Documents Correct cd Documents ``` Nest codeblocks within lists If you need a codeblock within a list, you should follow the same indenting rules for multi-line list items, with the codeblock being indented with 2 spaces for a bulleted list item and 3 spaces for a numbered list itemThe following Markdown:\n````markdown\n- Bullet javascript\n// We start indenting with 2 space for the codeblock\nfunction tester() {\nconst yay = 'From here we can indent like we normally would'\n}\nNext bullet ````\nWill result in the following output:\nBullet javascript\n// We start indenting with 2 space for the codeblock\nfunction tester() {\nconst yay = 'From here we can indent like we normally would'\n}\nNext bullet Note boxes\nNote boxes can be added by wrapping the content in a div with the class lesson-note This will add styling to make the note stand out visually to users All note boxes must open with a level 4 heading (####), which will also require the note box div to have the markdown=\"1\" attribute so the heading renders correctly Headings must describe the note box's contents, rather than just \"Note\" or \"Warning\" Note box headings must match the note box's indentation level, such as if the note box is indented as a child of a list item The opening and closing tags must each be wrapped with a single blank line on either side, or a codeblock delimiter (triple backticks) This applies to any line that contains only a single HTML tag The only exceptions to this rule are HTML tags inside html, jsx, erb, ejs, javascript or ruby codeblocks Variations\nDifferent types of note boxes can be set by adding an extra class together with lesson-note:\nlesson-note--tip for tips\nlesson-note--warning for warnings about potential issues/pitfalls, and are more severe than a tip\nlesson-note--critical for the most important warnings, such as critical information about handling sensitive data\nExample\n```markdown\n#### A descriptive title\nA sample note box ```\n```markdown\n#### A descriptive title\nA sample note box, variation: tip ```\nLinks\nLong links make source Markdown difficult to read and break the 80 character wrapping Wherever possible, shorten your links",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "a1b45e7f45e03ac0366a41364d641faa",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "together with lesson-note: lesson-note--tip for tips lesson-note--warning for warnings about potential issues/pitfalls, and are more severe than a tip lesson-note--critical for the most important warnings, such as critical information about handling sensitive data Example ```markdown #### A descriptive title A sample note box ``` ```markdown #### A descriptive title A sample note box, variation: tip ``` Links Long links make source Markdown difficult to read and break the 80 character wrapping Wherever possible, shorten your linksUse Markdown links\nInstead of using HTML anchor tags for links, use Markdown links instead ```markdown\nSee the lesson template for a more easily copyable lesson file See the lesson template for a more easily copyable lesson file ```\nUse informative titles\nMarkdown link syntax allows you to set a link title, just as HTML does Use it wisely Titling your links as \"link\" or \"here\" tells the reader precisely nothing when quickly scanning your doc and is a waste of space Instead, write the sentence naturally, then go back and wrap the most appropriate phrase with the link:\nmarkdown\nSee the [lesson template]( /templates/lesson-template md) for a more easily copyable lesson file Or, check out the [project template]( /templates/project-template md) for a more easily copyable project file Typically you want to ensure the link text describes the purpose of the link or where the link will redirect a user, and can often be the title of a blog article or video You should also do your best to avoid including \"this\" and \"here\" in the link text to avoid our linter from flagging it as an error, even if the link text is descriptive Often times \"this\" or \"here\" aren't necessary as part of the link text, and may cause some confusion despite a descriptive text (\"Where's here \") ```markdown\nCheck out this video on flex-grow from CoolYoutuber\nGo look at our installations guide here\nCheck out this video on flex-grow from CoolYoutuber\nGo look at our installations guide\n```\nAdditionally, if there are multiple links in a lesson that redirect to the same href, the link text for each link must be the same",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "4549a1988a43714c355f36a912890666",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "aren't necessary as part of the link text, and may cause some confusion despite a descriptive text (\"Where's here \") ```markdown Check out this video on flex-grow from CoolYoutuber Go look at our installations guide here Check out this video on flex-grow from CoolYoutuber Go look at our installations guide ``` Additionally, if there are multiple links in a lesson that redirect to the same href, the link text for each link must be the sameFor example:\n```markdown\nGo to Google\nTry searching on Google\nFirst go to the Google homepage\nGo to Google\nTry searching on Google\nFirst go to the Google homepage\n```\nDon't scatter links throughout lessons\nLinks to required reading should not be scattered throughout a lesson, and should instead be placed in either the ### Assignment or ### Additional resources section Links that refer a user to a previous lesson as a refresher, or a link to a Wikipedia page that offers a definition/explanation of a term are fine to place outside of these two sections Images\nImages in Markdown follow the same syntax as links, except they begin with an exclamation point :\nmarkdown [flex shorthand](https://cdn statically io/gh/TheOdinProject/curriculum/495704c6eb6bf33bc927534f231533a82b27b2ac/html_css/v2/foundations/flexbox/imgs/10 png)\nThe text in square brackets will be included as the image's alt text Similar to link titles, the alt text should be informative, but shouldn't be overly verbose In order to properly add images to a lesson, follow the instructions in our Adding Images to the Curriculum Wiki page to get a statically URL as seen in the codeblock above Keyboard shortcuts\nFor keyboard shortcuts we use the HTML keyboard input element <kbd> Example code which will be rendered as: Ctrl + Shift + html\n<kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd> </kbd>\nStyle standardization\nUse separate <kbd> elements for individual keys:\nmarkdown\n<kbd>Ctrl</kbd> + <kbd>Shift</kbd>\nUse capitalized common abbreviations for the keys and avoid using symbols like ⌘:\nmarkdown\n<kbd>Cmd</kbd>\n<kbd>Alt</kbd>\n<kbd>B</kbd>\n<kbd>Opt</kbd>\nUse symbols for character keys instead of spelling out the symbol like period:\nmarkdown\n<kbd>",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "f58384f9d89b11188d1261d6bb8f01dd",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "shortcuts For keyboard shortcuts we use the HTML keyboard input element <kbd> Example code which will be rendered as: Ctrl + Shift + html <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd> </kbd> Style standardization Use separate <kbd> elements for individual keys: markdown <kbd>Ctrl</kbd> + <kbd>Shift</kbd> Use capitalized common abbreviations for the keys and avoid using symbols like ⌘: markdown <kbd>Cmd</kbd> <kbd>Alt</kbd> <kbd>B</kbd> <kbd>Opt</kbd> Use symbols for character keys instead of spelling out the symbol like period: markdown <kbd></kbd>\n<kbd>,</kbd>\n<kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd> </kbd>\nCodepen embeds\nIn order to embed a Codepen example into a lesson, you must be in the editor view for the Codepen you wish to embed and then click the Embed button at the bottom right of the page The following options should be selected when creating a Codepen embed:\nDefault Tabs: The \"Result\" tab must be selected in addition to one of the other three options (HTML, CSS, or JavaScript), depending on the main purpose of the Codepen If the purpose is to show an HTML concept then the \"HTML\" option must also be selected, for example Theme: \"Dark\"\nUse Click-to-Load: \"Off\"\nMake Code Editable: \"On\"\nFinally, the HTML (Recommended) code option must be the one that is copy + pasted into the lesson Maintainer instructions\nWhen a user adds a Codepen embed to a lesson, a maintainer should fork the embed to the official TOP Codepen account When necessary, the name of new pens should be updated to better reflect their purpose, e g Simple SVG Example for a pen showing a simple SVG or max-width | CSS Responsiveness for a pen about the max-width property After forking a pen to the TOP account and ensuring the embeds options from above are selected, the lesson the original embed is from should be updated to include the forked, TOP version instead Mermaid diagrams\nTo add a Mermaid diagram to a lesson, visit the Mermaid docs to learn the diagram syntax for the specific type of diagram you want to add",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "fddb305c05af6f13c0ca6bd99e24b324",
    "source_file": "corpus\\git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
    "source_type": "git_repo",
    "title": "Layout style guide",
    "content": "SVG or max-width | CSS Responsiveness for a pen about the max-width property After forking a pen to the TOP account and ensuring the embeds options from above are selected, the lesson the original embed is from should be updated to include the forked, TOP version instead Mermaid diagrams To add a Mermaid diagram to a lesson, visit the Mermaid docs to learn the diagram syntax for the specific type of diagram you want to addAfter you've figured out the content you want in the diagram, you can add it to a lesson's markdown by surrounding the content with <pre> tags with a class=\"mermaid\" ie:\n```markdown\nmermaid diagram content here\n```\nThis has full support in the Lesson Preview tool, so be sure to check that the diagram renders correctly with the lesson content before contributing Markdown styling\nWhile Markdown supports the use of both asterisks * and underscores _ to make text bold or italic, asterisks should always be used ```markdown\nThis is how we do things This is not how we do things ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27201,
      "relative_path": "git_repos\\odin-project\\LAYOUT_STYLE_GUIDE.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "70638cda2587448fa371f4e7ed498ed3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\quiz-app\\vite.config.js",
    "source_type": "git_repo",
    "title": "vite.config",
    "content": "import { fileURLToPath, URL } from 'node:url'\n\nimport { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    vue(),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url))\n    }\n  }\n})",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 325,
      "relative_path": "git_repos\\web-dev-beginners\\quiz-app\\vite.config.js",
      "source_type": "git_repo"
    },
    "token_count": 87,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "22d6614a66f0c0f8a9e88d749c7b2b40",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft Open Source Verhaltenskodex",
    "content": "Microsoft Open Source Verhaltenskodex\nDieses Projekt hat den Microsoft Open Source Verhaltenskodex übernommen.\nRessourcen:\nMicrosoft Open Source Verhaltenskodex\nMicrosoft Verhaltenskodex FAQ\nKontaktieren Sie opencode@microsoft.com bei Fragen oder Bedenken\nHaftungsausschluss:\nDieses Dokument wurde mit dem KI-Übersetzungsdienst Co-op Translator übersetzt. Obwohl wir uns um Genauigkeit bemühen, weisen wir darauf hin, dass automatisierte Übersetzungen Fehler oder Ungenauigkeiten enthalten können. Das Originaldokument in seiner ursprünglichen Sprache sollte als maßgebliche Quelle betrachtet werden. Für kritische Informationen wird eine professionelle menschliche Übersetzung empfohlen. Wir übernehmen keine Haftung für Missverständnisse oder Fehlinterpretationen, die aus der Nutzung dieser Übersetzung entstehen.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1411,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 219,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ba3a17d133e492448b153fc29fc75fd8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "Mitwirken",
    "content": "Mitwirken\nDieses Projekt freut sich über Beiträge und Vorschläge. Die meisten Beiträge erfordern, dass Sie einer Contributor License Agreement (CLA) zustimmen, in der Sie erklären, dass Sie das Recht haben und uns tatsächlich die Rechte einräumen, Ihren Beitrag zu nutzen. Weitere Details finden Sie unter https://cla.microsoft.com.\nWenn Sie einen Pull Request einreichen, wird ein CLA-Bot automatisch überprüfen, ob Sie eine CLA bereitstellen müssen, und den PR entsprechend kennzeichnen (z. B. mit einem Label oder Kommentar). Folgen Sie einfach den Anweisungen des Bots. Dies müssen Sie nur einmal für alle Repositories tun, die unsere CLA verwenden. Bitte versuchen Sie auch, uns mitzuteilen, warum Sie diese Änderung vorgenommen haben, damit wir Ihre Anfrage besser verstehen können.\nDieses Projekt hat den Microsoft Open Source Code of Conduct übernommen.\nWeitere Informationen finden Sie in den Code of Conduct FAQ oder kontaktieren Sie opencode@microsoft.com bei weiteren Fragen oder Anmerkungen.\nHaftungsausschluss:\nDieses Dokument wurde mit dem KI-Übersetzungsdienst Co-op Translator übersetzt. Obwohl wir uns um Genauigkeit bemühen, weisen wir darauf hin, dass automatisierte Übersetzungen Fehler oder Ungenauigkeiten enthalten können. Das Originaldokument in seiner ursprünglichen Sprache sollte als maßgebliche Quelle betrachtet werden. Für kritische Informationen wird eine professionelle menschliche Übersetzung empfohlen. Wir übernehmen keine Haftung für Missverständnisse oder Fehlinterpretationen, die sich aus der Nutzung dieser Übersetzung ergeben.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2148,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3eb6b3a9c89b5ff67549f6687d68505e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "Quiz app",
    "content": "Quiz app\nThese quizzes are the pre- and post-lecture quizzes for the data science curriculum at https://aka ms/webdev-beginners\nAdding a translated quiz set\nAdd a quiz translation by creating matching quiz structures in the assets/translations folders The canonical quizzes are in assets/translations/en The quizzes are broken into several groupings Make sure to align the numbering with the proper quiz section There are 40 quizzes total in this curriculum, with the count starting at 0 Here's the shape of a translation file:\n```\n[\n{\n\"title\": \"A title\",\n\"complete\": \"A complete button title\",\n\"error\": \"An error message upon selecting the wrong answer\",\n\"quizzes\": [\n{\n\"id\": 1,\n\"title\": \"Title\",\n\"quiz\": [\n{\n\"questionText\": \"The question asked\",\n\"answerOptions\": [\n{\n\"answerText\": \"Option 1 title\",\n\"isCorrect\": true\n},\n{\n\"answerText\": \"Option 2 title\",\n\"isCorrect\": false\n}\n]\n}\n]\n}\n]\n}\n]\n```\nAfter editing the translations, edit the index js file in the translation folder to import all the files following the conventions in en Edit the index js file in assets/translations to import the new translated files For example, if your translation JSON is in ex json,  make 'ex' the localization key, then enter it as shown below to import it\nindex js\n```\nimport ex from \" /ex json\";\n// if 'ex' is localization key then enter it like so in `messages` to expose it\nconst messages = {\nex: ex[0],\n};\nexport default messages;\n```\nRun the Quiz App locally\nPrerequisites\nA GitHub account\nNode js and Git\nInstall & Setup\nCreate a repository from this template\nClone your new repository, and navigate to the quiz-app\nbash\ngit clone https://github com/your-github-organization/repo-name\ncd repo-name/quiz-app\nInstall the npm packages & dependencies\nbash\nnpm install\nBuild the app\nTo build the solution, run:\nbash\nnpm run build\nStart the App\nTo run the solution, run:\nbash\nnpm run dev\n[Optional] Linting\nTo ensure the code is linted, run:\nbash\nnpm run lint\nDeploy the Quiz-app to Azure\nPrerequisites\nAn Azure Subscription Sign up for one for free here",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5498,
      "relative_path": "git_repos\\web-dev-beginners\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "cdf3d2e13168622ebbb3f4af51475b0f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "Quiz app",
    "content": "new repository, and navigate to the quiz-app bash git clone https://github com/your-github-organization/repo-name cd repo-name/quiz-app Install the npm packages & dependencies bash npm install Build the app To build the solution, run: bash npm run build Start the App To run the solution, run: bash npm run dev [Optional] Linting To ensure the code is linted, run: bash npm run lint Deploy the Quiz-app to Azure Prerequisites An Azure Subscription Sign up for one for free hereCost Estimate to deploy this quiz-app: FREE\nOnce you are signed in on Azure through the link above, select a subscription and resource group then:\nStatic Web App details: Provide a name and select a hosting plan\nGitHub Login: Set your deployment source as GitHub then log in and fill in the required fields on the form:\nOrganization – Choose your organization Repository – Select the Web Dev for Beginners curriculum repository Branch - Select a branch (main)\nBuild Presets: Azure Static Web Apps uses a detection algorithm to detect the framework used in your application App location - /quiz-app\nApi location -\nOutput location - dist\nDeployment: Click 'Review + Create', then 'Create'\nOnce deployed, a workflow file will be created in the github directory of your repo This workflow file contains instructions of events that will trigger a re-deployment of the app to Azure, for example, a push on branch main etc Example Workflow File\nHere’s an example of what the GitHub Actions workflow file might look like:\nname: Azure Static Web Apps CI/CD\n```\non:\npush:\nbranches:\n- main\npull_request:\ntypes: [opened, synchronize, reopened, closed]\nbranches:\n- main\njobs:\nbuild_and_deploy_job:\nruns-on: ubuntu-latest\nname: Build and Deploy Job\nsteps:\n- uses: actions/checkout@v2\n- name: Build And Deploy\nid: builddeploy\nuses: Azure/static-web-apps-deploy@v1\nwith:\nazure_static_web_apps_api_token: ${{ secrets AZURE_STATIC_WEB_APPS_API_TOKEN }}\nrepo_token: ${{ secrets",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5498,
      "relative_path": "git_repos\\web-dev-beginners\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7b71cab4e593f41f788d1e9f2e4288a4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "Quiz app",
    "content": "for example, a push on branch main etc Example Workflow File Here’s an example of what the GitHub Actions workflow file might look like: name: Azure Static Web Apps CI/CD ``` on: push: branches: - main pull_request: types: [opened, synchronize, reopened, closed] branches: - main jobs: build_and_deploy_job: runs-on: ubuntu-latest name: Build and Deploy Job steps: - uses: actions/checkout@v2 - name: Build And Deploy id: builddeploy uses: Azure/static-web-apps-deploy@v1 with: azure_static_web_apps_api_token: ${{ secrets AZURE_STATIC_WEB_APPS_API_TOKEN }} repo_token: ${{ secretsGITHUB_TOKEN }}\naction: \"upload\"\napp_location: \"quiz-app\" # App source code path\napi_location: \"\"API source code path optional\noutput_location: \"dist\" #Built app content directory - optional\n```\nPost-Deployment: After deployment is complete, click on 'Go to Deployment' then 'View app in browser' Once your GitHub Action (workflow) is executed successfully, refresh the live page to view your application",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5498,
      "relative_path": "git_repos\\web-dev-beginners\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "41ebca3d95956ca82bd946869bc6c5c4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "Für Lehrkräfte\nMöchten Sie dieses Curriculum in Ihrem Unterricht verwenden Sehr gerne Tatsächlich können Sie es direkt auf GitHub nutzen, indem Sie GitHub Classroom verwenden Dazu müssen Sie dieses Repository forken Sie benötigen ein separates Repository für jede Lektion, daher müssen Sie jeden Ordner in ein eigenes Repository extrahieren Auf diese Weise kann GitHub Classroom jede Lektion einzeln erfassen Diese vollständigen Anweisungen geben Ihnen eine Vorstellung davon, wie Sie Ihr Klassenzimmer einrichten können Nutzung in Moodle, Canvas oder Blackboard\nDieses Curriculum funktioniert hervorragend in diesen Learning Management Systemen Verwenden Sie die Moodle-Datei für den vollständigen Inhalt oder probieren Sie die Common Cartridge-Datei, die einen Teil des Inhalts enthält Moodle Cloud unterstützt keine vollständigen Common Cartridge-Exporte, daher ist es besser, die Moodle-Download-Datei zu verwenden, die in Canvas hochgeladen werden kann Bitte teilen Sie uns mit, wie wir diese Erfahrung verbessern können Das Curriculum in einem Moodle-Klassenzimmer\nDas Curriculum in Canvas\nNutzung des Repos in der aktuellen Form\nWenn Sie dieses Repository in seiner aktuellen Form verwenden möchten, ohne GitHub Classroom zu nutzen, ist das ebenfalls möglich Sie müssten Ihren Schülern mitteilen, welche Lektion Sie gemeinsam durcharbeiten möchten In einem Online-Format (Zoom, Teams oder andere) könnten Sie Breakout-Räume für die Quizfragen bilden und die Schüler betreuen, um sie auf das Lernen vorzubereiten Anschließend laden Sie die Schüler zu den Quizfragen ein und lassen sie ihre Antworten zu einem bestimmten Zeitpunkt als 'Issues' einreichen Dasselbe könnten Sie mit Aufgaben machen, wenn Sie möchten, dass die Schüler offen und kollaborativ arbeiten Wenn Sie ein privateres Format bevorzugen, bitten Sie Ihre Schüler, das Curriculum Lektion für Lektion in ihre eigenen privaten GitHub-Repositories zu forken und Ihnen Zugriff zu gewähren Dann können sie Quizfragen und Aufgaben privat bearbeiten und diese über Issues in Ihrem Klassenzimmer-Repository einreichen Es gibt viele Möglichkeiten, dies in einem Online-Klassenzimmer-Format umzusetzen",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3908,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a2b7d02603647f9614c649261da07cd8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "Antworten zu einem bestimmten Zeitpunkt als 'Issues' einreichen Dasselbe könnten Sie mit Aufgaben machen, wenn Sie möchten, dass die Schüler offen und kollaborativ arbeiten Wenn Sie ein privateres Format bevorzugen, bitten Sie Ihre Schüler, das Curriculum Lektion für Lektion in ihre eigenen privaten GitHub-Repositories zu forken und Ihnen Zugriff zu gewähren Dann können sie Quizfragen und Aufgaben privat bearbeiten und diese über Issues in Ihrem Klassenzimmer-Repository einreichen Es gibt viele Möglichkeiten, dies in einem Online-Klassenzimmer-Format umzusetzenBitte teilen Sie uns mit, was für Sie am besten funktioniert Teilen Sie uns Ihre Meinung mit Wir möchten dieses Curriculum für Sie und Ihre Schüler optimal gestalten Kontaktieren Sie uns in der Lehrerecke und eröffnen Sie ein neues Issue für Anfragen, Fehler und Feedback Haftungsausschluss:\nDieses Dokument wurde mit dem KI-Übersetzungsdienst Co-op Translator übersetzt Obwohl wir uns um Genauigkeit bemühen, beachten Sie bitte, dass automatisierte Übersetzungen Fehler oder Ungenauigkeiten enthalten können Das Originaldokument in seiner ursprünglichen Sprache sollte als maßgebliche Quelle betrachtet werden Für kritische Informationen wird eine professionelle menschliche Übersetzung empfohlen Wir übernehmen keine Haftung für Missverständnisse oder Fehlinterpretationen, die sich aus der Nutzung dieser Übersetzung ergeben",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3908,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2237bcf7819ef64b34fb11df746fd475",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "Unterstützung",
    "content": "Unterstützung\nSo melden Sie Probleme und erhalten Hilfe\nDieses Projekt verwendet GitHub Issues, um Fehler und Funktionsanfragen zu verfolgen. Bitte durchsuchen Sie die vorhandenen Issues, bevor Sie neue erstellen, um Duplikate zu vermeiden. Für neue Issues melden Sie Ihren Fehler oder Ihre Funktionsanfrage als neues Issue.\nFür Hilfe und Fragen zur Nutzung dieses Projekts lesen Sie bitte unsere Beitragsrichtlinien.\nMicrosoft-Support-Richtlinie\nDer Support für dieses Projekt ist auf die oben aufgeführten Ressourcen beschränkt.\nHaftungsausschluss:\nDieses Dokument wurde mit dem KI-Übersetzungsdienst Co-op Translator übersetzt. Obwohl wir uns um Genauigkeit bemühen, weisen wir darauf hin, dass automatisierte Übersetzungen Fehler oder Ungenauigkeiten enthalten können. Das Originaldokument in seiner ursprünglichen Sprache sollte als maßgebliche Quelle betrachtet werden. Für kritische Informationen wird eine professionelle menschliche Übersetzung empfohlen. Wir übernehmen keine Haftung für Missverständnisse oder Fehlinterpretationen, die aus der Nutzung dieser Übersetzung entstehen.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1421,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 282,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca35ffbc3860bea24dd72f5ec8503496",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\_404.md",
    "source_type": "git_repo",
    "title": "Arbeit läuft",
    "content": "Arbeit läuft\nWir arbeiten an dieser Seite. Bitte schauen Sie später noch einmal vorbei.\nÖffnen Sie ein Issue, wenn Sie Fragen haben.\nZurück zur Startseite\nHaftungsausschluss:\nDieses Dokument wurde mit dem KI-Übersetzungsdienst Co-op Translator übersetzt. Obwohl wir uns um Genauigkeit bemühen, weisen wir darauf hin, dass automatisierte Übersetzungen Fehler oder Ungenauigkeiten enthalten können. Das Originaldokument in seiner ursprünglichen Sprache sollte als maßgebliche Quelle betrachtet werden. Für kritische Informationen wird eine professionelle menschliche Übersetzung empfohlen. Wir übernehmen keine Haftung für Missverständnisse oder Fehlinterpretationen, die aus der Nutzung dieser Übersetzung entstehen.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1105,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 191,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "efdb7f53452f447b2b7deea772cecd16",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Código de Conducta de Código Abierto de Microsoft",
    "content": "Código de Conducta de Código Abierto de Microsoft\nEste proyecto ha adoptado el Código de Conducta de Código Abierto de Microsoft.\nRecursos:\nCódigo de Conducta de Código Abierto de Microsoft\nPreguntas Frecuentes sobre el Código de Conducta de Microsoft\nContacta a opencode@microsoft.com para preguntas o inquietudes\nDescargo de responsabilidad:\nEste documento ha sido traducido utilizando el servicio de traducción automática Co-op Translator. Aunque nos esforzamos por garantizar la precisión, tenga en cuenta que las traducciones automatizadas pueden contener errores o imprecisiones. El documento original en su idioma nativo debe considerarse como la fuente autorizada. Para información crítica, se recomienda una traducción profesional realizada por humanos. No nos hacemos responsables de malentendidos o interpretaciones erróneas que puedan surgir del uso de esta traducción.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1477,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1453465fba619e85fa8a046659d33c11",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Sicherheit\nMicrosoft nimmt die Sicherheit seiner Softwareprodukte und -dienste sehr ernst, einschließlich aller Quellcode-Repositories, die über unsere GitHub-Organisationen verwaltet werden Dazu gehören Microsoft, Azure, DotNet, AspNet, Xamarin und unsere GitHub-Organisationen Wenn Sie der Meinung sind, eine Sicherheitslücke in einem von Microsoft verwalteten Repository gefunden zu haben, die Microsofts Definition einer Sicherheitslücke entspricht, melden Sie diese bitte wie unten beschrieben Melden von Sicherheitsproblemen\nBitte melden Sie Sicherheitslücken nicht über öffentliche GitHub-Issues Stattdessen melden Sie diese bitte dem Microsoft Security Response Center (MSRC) unter https://msrc microsoft com/create-report Falls Sie lieber ohne Anmeldung einreichen möchten, senden Sie eine E-Mail an secure@microsoft com Wenn möglich, verschlüsseln Sie Ihre Nachricht mit unserem PGP-Schlüssel; laden Sie diesen von der Microsoft Security Response Center PGP Key-Seite herunter Sie sollten innerhalb von 24 Stunden eine Antwort erhalten Falls dies aus irgendeinem Grund nicht der Fall ist, senden Sie bitte eine Nachfass-E-Mail, um sicherzustellen, dass wir Ihre ursprüngliche Nachricht erhalten haben Weitere Informationen finden Sie unter microsoft com/msrc Bitte fügen Sie die unten aufgeführten Informationen (so weit wie möglich) bei, um uns zu helfen, die Art und den Umfang des möglichen Problems besser zu verstehen:\nArt des Problems (z B Buffer Overflow, SQL Injection, Cross-Site Scripting usw )\nVollständige Pfade der Quellcodedatei(en), die mit dem Problem in Zusammenhang stehen\nDer Ort des betroffenen Quellcodes (Tag/Branch/Commit oder direkte URL)\nBesondere Konfigurationen, die erforderlich sind, um das Problem zu reproduzieren\nSchritt-für-Schritt-Anleitung zur Reproduktion des Problems\nProof-of-Concept- oder Exploit-Code (falls möglich)\nAuswirkungen des Problems, einschließlich der möglichen Ausnutzung durch einen Angreifer\nDiese Informationen helfen uns, Ihren Bericht schneller zu priorisieren",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4143,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "332e18f52d9b1171c2c9bbe863cf7264",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Problems besser zu verstehen: Art des Problems (z B Buffer Overflow, SQL Injection, Cross-Site Scripting usw ) Vollständige Pfade der Quellcodedatei(en), die mit dem Problem in Zusammenhang stehen Der Ort des betroffenen Quellcodes (Tag/Branch/Commit oder direkte URL) Besondere Konfigurationen, die erforderlich sind, um das Problem zu reproduzieren Schritt-für-Schritt-Anleitung zur Reproduktion des Problems Proof-of-Concept- oder Exploit-Code (falls möglich) Auswirkungen des Problems, einschließlich der möglichen Ausnutzung durch einen Angreifer Diese Informationen helfen uns, Ihren Bericht schneller zu priorisierenWenn Sie im Rahmen eines Bug-Bounty-Programms berichten, können vollständigere Berichte zu einer höheren Prämie führen Besuchen Sie unsere Seite zum Microsoft Bug Bounty Program für weitere Details zu unseren aktiven Programmen Bevorzugte Sprachen\nWir bevorzugen, dass alle Mitteilungen auf Englisch erfolgen Richtlinie\nMicrosoft folgt dem Prinzip der Koordinierten Offenlegung von Sicherheitslücken Haftungsausschluss:\nDieses Dokument wurde mit dem KI-Übersetzungsdienst Co-op Translator übersetzt Obwohl wir uns um Genauigkeit bemühen, weisen wir darauf hin, dass automatisierte Übersetzungen Fehler oder Ungenauigkeiten enthalten können Das Originaldokument in seiner ursprünglichen Sprache sollte als maßgebliche Quelle betrachtet werden Für kritische Informationen wird eine professionelle menschliche Übersetzung empfohlen Wir übernehmen keine Haftung für Missverständnisse oder Fehlinterpretationen, die aus der Nutzung dieser Übersetzung entstehen",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4143,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7eb2c3fbb996421735f33c89fcc376b0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "Contribuir",
    "content": "Contribuir\nEste proyecto da la bienvenida a contribuciones y sugerencias. La mayoría de las contribuciones requieren que aceptes un Acuerdo de Licencia para Contribuyentes (CLA) declarando que tienes el derecho y, de hecho, otorgas los derechos para que usemos tu contribución. Para más detalles, visita https://cla.microsoft.com.\nCuando envíes una solicitud de extracción (pull request), un bot de CLA determinará automáticamente si necesitas proporcionar un CLA y etiquetará la PR de manera adecuada (por ejemplo, con una etiqueta o comentario). Simplemente sigue las instrucciones proporcionadas por el bot. Solo necesitarás hacer esto una vez en todos los repositorios que utilicen nuestro CLA. Por favor, intenta también explicarnos por qué realizaste ese cambio para que podamos entender mejor tu solicitud.\nEste proyecto ha adoptado el Código de Conducta de Código Abierto de Microsoft.\nPara más información, consulta las Preguntas Frecuentes sobre el Código de Conducta o contacta a opencode@microsoft.com si tienes preguntas o comentarios adicionales.\nDescargo de responsabilidad:\nEste documento ha sido traducido utilizando el servicio de traducción automática Co-op Translator. Si bien nos esforzamos por lograr precisión, tenga en cuenta que las traducciones automáticas pueden contener errores o imprecisiones. El documento original en su idioma nativo debe considerarse como la fuente autorizada. Para información crítica, se recomienda una traducción profesional realizada por humanos. No nos hacemos responsables de malentendidos o interpretaciones erróneas que puedan surgir del uso de esta traducción.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2196,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f495fc61209066d805ba5aaaf8d3ffa6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "Para Educadores\n¿Te gustaría usar este plan de estudios en tu aula ¡Siéntete libre de hacerlo De hecho, puedes usarlo directamente en GitHub utilizando GitHub Classroom Para hacerlo, haz un fork de este repositorio Necesitarás crear un repositorio para cada lección, por lo que tendrás que extraer cada carpeta en un repositorio separado De esta manera, GitHub Classroom podrá identificar cada lección por separado Estas instrucciones completas te darán una idea de cómo configurar tu aula Usándolo en Moodle, Canvas o Blackboard\n¡Este plan de estudios funciona muy bien en estos Sistemas de Gestión de Aprendizaje Usa el archivo de carga para Moodle para obtener el contenido completo, o prueba el archivo Common Cartridge, que contiene parte del contenido Moodle Cloud no admite exportaciones completas de Common Cartridge, por lo que es preferible usar el archivo de descarga de Moodle, que se puede cargar en Canvas Por favor, háznos saber cómo podemos mejorar esta experiencia El plan de estudios en un aula de Moodle\nEl plan de estudios en Canvas\nUsando el repositorio tal como está\nSi prefieres usar este repositorio tal como está, sin utilizar GitHub Classroom, también es posible Necesitarás comunicarte con tus estudiantes para indicarles qué lección trabajar juntos En un formato en línea (Zoom, Teams u otro), podrías formar salas de trabajo para los cuestionarios y guiar a los estudiantes para que se preparen para aprender Luego, invítalos a realizar los cuestionarios y a enviar sus respuestas como 'issues' en un momento determinado Podrías hacer lo mismo con las tareas si deseas que los estudiantes trabajen de manera colaborativa y abierta Si prefieres un formato más privado, pide a tus estudiantes que hagan un fork del plan de estudios, lección por lección, en sus propios repositorios privados de GitHub y te den acceso De esta manera, podrán completar cuestionarios y tareas de forma privada y enviártelos a través de issues en tu repositorio de aula Hay muchas maneras de hacer que esto funcione en un aula en línea ¡Por favor, cuéntanos qué funciona mejor para ti",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3759,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7d07539afcd50d09b36a7b5a3f8d7ecf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "abierta Si prefieres un formato más privado, pide a tus estudiantes que hagan un fork del plan de estudios, lección por lección, en sus propios repositorios privados de GitHub y te den acceso De esta manera, podrán completar cuestionarios y tareas de forma privada y enviártelos a través de issues en tu repositorio de aula Hay muchas maneras de hacer que esto funcione en un aula en línea ¡Por favor, cuéntanos qué funciona mejor para ti¡Danos tu opinión Queremos que este plan de estudios funcione para ti y tus estudiantes Conéctate con nosotros en el Teacher corner y abre un nuevo issue para cualquier solicitud, error o comentario Descargo de responsabilidad:\nEste documento ha sido traducido utilizando el servicio de traducción automática Co-op Translator Aunque nos esforzamos por garantizar la precisión, tenga en cuenta que las traducciones automatizadas pueden contener errores o imprecisiones El documento original en su idioma nativo debe considerarse como la fuente autorizada Para información crítica, se recomienda una traducción profesional realizada por humanos No nos hacemos responsables de malentendidos o interpretaciones erróneas que puedan surgir del uso de esta traducción",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3759,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 277,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "59dc380b6f6fb6289d34d586de5019e2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Seguridad\nMicrosoft se toma muy en serio la seguridad de nuestros productos y servicios de software, lo que incluye todos los repositorios de código fuente gestionados a través de nuestras organizaciones de GitHub, que incluyen Microsoft, Azure, DotNet, AspNet, Xamarin y nuestras organizaciones de GitHub Si crees que has encontrado una vulnerabilidad de seguridad en algún repositorio propiedad de Microsoft que cumpla con la definición de vulnerabilidad de seguridad de Microsoft, por favor repórtala como se describe a continuación Reportar Problemas de Seguridad\nPor favor, no reportes vulnerabilidades de seguridad a través de problemas públicos en GitHub En su lugar, repórtalas al Centro de Respuesta de Seguridad de Microsoft (MSRC) en https://msrc microsoft com/create-report Si prefieres enviar tu reporte sin iniciar sesión, envía un correo electrónico a secure@microsoft com Si es posible, encripta tu mensaje con nuestra clave PGP; puedes descargarla desde la página de Clave PGP del Centro de Respuesta de Seguridad de Microsoft Deberías recibir una respuesta dentro de las 24 horas Si por alguna razón no la recibes, por favor haz un seguimiento por correo electrónico para asegurarte de que recibimos tu mensaje original Puedes encontrar información adicional en microsoft com/msrc Por favor incluye la información solicitada que se detalla a continuación (tanto como puedas proporcionar) para ayudarnos a entender mejor la naturaleza y el alcance del posible problema:\nTipo de problema (por ejemplo, desbordamiento de búfer, inyección SQL, scripting entre sitios, etc )\nRutas completas de los archivos fuente relacionados con la manifestación del problema\nLa ubicación del código fuente afectado (etiqueta/ramo/commit o URL directa)\nCualquier configuración especial requerida para reproducir el problema\nInstrucciones paso a paso para reproducir el problema\nCódigo de prueba de concepto o exploit (si es posible)\nImpacto del problema, incluyendo cómo un atacante podría explotar el problema\nEsta información nos ayudará a priorizar tu reporte más rápidamente Si estás reportando para un programa de recompensas por errores, los reportes más completos pueden contribuir a obtener una recompensa mayor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4228,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8047f5c4454fbc5a7c0ccc36519b694b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "del código fuente afectado (etiqueta/ramo/commit o URL directa) Cualquier configuración especial requerida para reproducir el problema Instrucciones paso a paso para reproducir el problema Código de prueba de concepto o exploit (si es posible) Impacto del problema, incluyendo cómo un atacante podría explotar el problema Esta información nos ayudará a priorizar tu reporte más rápidamente Si estás reportando para un programa de recompensas por errores, los reportes más completos pueden contribuir a obtener una recompensa mayorPor favor visita nuestra página del Programa de Recompensas por Errores de Microsoft para más detalles sobre nuestros programas activos Idiomas Preferidos\nPreferimos que todas las comunicaciones sean en inglés Política\nMicrosoft sigue el principio de Divulgación Coordinada de Vulnerabilidades Descargo de responsabilidad:\nEste documento ha sido traducido utilizando el servicio de traducción automática Co-op Translator Si bien nos esforzamos por lograr precisión, tenga en cuenta que las traducciones automáticas pueden contener errores o imprecisiones El documento original en su idioma nativo debe considerarse como la fuente autorizada Para información crítica, se recomienda una traducción profesional realizada por humanos No nos hacemos responsables de malentendidos o interpretaciones erróneas que puedan surgir del uso de esta traducción",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4228,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4c9038e0a7ca3ca805e6ae7f5cd9bd64",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "Soporte",
    "content": "Soporte\nCómo reportar problemas y obtener ayuda\nEste proyecto utiliza GitHub Issues para rastrear errores y solicitudes de características. Por favor, busca entre los problemas existentes antes de reportar nuevos problemas para evitar duplicados. Para nuevos problemas, reporta tu error o solicitud de característica como un nuevo Issue.\nPara obtener ayuda y resolver dudas sobre el uso de este proyecto, consulta nuestras directrices de contribución.\nPolítica de soporte de Microsoft\nEl soporte para este proyecto se limita a los recursos mencionados anteriormente.\nDescargo de responsabilidad:\nEste documento ha sido traducido utilizando el servicio de traducción automática Co-op Translator. Aunque nos esforzamos por garantizar la precisión, tenga en cuenta que las traducciones automatizadas pueden contener errores o imprecisiones. El documento original en su idioma nativo debe considerarse como la fuente autorizada. Para información crítica, se recomienda una traducción profesional realizada por humanos. No nos hacemos responsables de malentendidos o interpretaciones erróneas que puedan surgir del uso de esta traducción.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1457,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "933ffbfbd40c6ea8133819ccb456f2de",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "Webentwicklung für Anfänger – Ein Lehrplan\nLerne die Grundlagen der Webentwicklung mit unserem umfassenden 12-Wochen-Kurs von Microsoft Cloud Advocates Jede der 24 Lektionen behandelt JavaScript, CSS und HTML durch praktische Projekte wie Terrarien, Browser-Erweiterungen und Weltraumspiele Nimm an Quizfragen, Diskussionen und praktischen Aufgaben teil Verbessere deine Fähigkeiten und optimiere dein Wissen mit unserer effektiven projektbasierten Pädagogik Starte noch heute deine Programmierreise 🧑‍🎓 Bist du ein Student Besuche die Student Hub Seite, wo du Ressourcen für Anfänger, Studentenpakete und sogar Möglichkeiten findest, einen kostenlosen Zertifikatsgutschein zu erhalten Diese Seite solltest du dir merken und regelmäßig besuchen, da wir den Inhalt monatlich aktualisieren 📣 Ankündigung – Neuer Lehrplan zu Generativer KI für JavaScript wurde gerade veröffentlicht\nVerpasse nicht unseren neuen Lehrplan zur Generativen KI Besuche https://aka ms/genai-js-course, um loszulegen Lektionen, die alles von den Grundlagen bis zu RAG abdecken Interagiere mit historischen Charakteren mithilfe von GenAI und unserer Begleit-App Spannende und unterhaltsame Erzählung – du wirst durch die Zeit reisen Jede Lektion enthält eine Aufgabe, eine Wissensüberprüfung und eine Herausforderung, um Themen wie folgende zu lernen:\n- Prompting und Prompt-Engineering\n- Text- und Bild-App-Generierung\n- Such-Apps\nBesuche https://aka ms/genai-js-course, um loszulegen 🌱 Erste Schritte\nLehrer, wir haben einige Vorschläge hinzugefügt, wie Sie diesen Lehrplan nutzen können Wir freuen uns über Ihr Feedback in unserem Diskussionsforum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "4ccb079d48c75e8596f852199b5c947f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "Interagiere mit historischen Charakteren mithilfe von GenAI und unserer Begleit-App Spannende und unterhaltsame Erzählung – du wirst durch die Zeit reisen Jede Lektion enthält eine Aufgabe, eine Wissensüberprüfung und eine Herausforderung, um Themen wie folgende zu lernen: - Prompting und Prompt-Engineering - Text- und Bild-App-Generierung - Such-Apps Besuche https://aka ms/genai-js-course, um loszulegen 🌱 Erste Schritte Lehrer, wir haben einige Vorschläge hinzugefügt, wie Sie diesen Lehrplan nutzen können Wir freuen uns über Ihr Feedback in unserem DiskussionsforumLernende, für jede Lektion beginnt mit einem Quiz vor der Vorlesung und arbeitet sich durch das Lesen des Vorlesungsmaterials, das Abschließen der verschiedenen Aktivitäten und überprüft euer Verständnis mit dem Quiz nach der Vorlesung Um das Lernerlebnis zu verbessern, vernetzt euch mit euren Mitlernenden, um gemeinsam an den Projekten zu arbeiten Diskussionen sind in unserem Diskussionsforum erwünscht, wo unser Team von Moderatoren eure Fragen beantworten wird Um eure Ausbildung weiterzuführen, empfehlen wir dringend, Microsoft Learn für zusätzliche Lernmaterialien zu erkunden 📋 Einrichten deiner Umgebung\nDieser Lehrplan hat eine einsatzbereite Entwicklungsumgebung Zu Beginn kannst du wählen, ob du den Lehrplan in einem Codespace (eine browserbasierte Umgebung, keine Installationen erforderlich) oder lokal auf deinem Computer mit einem Texteditor wie Visual Studio Code ausführen möchtest Erstelle dein Repository\nUm deine Arbeit einfach zu speichern, wird empfohlen, eine eigene Kopie dieses Repositorys zu erstellen Du kannst dies tun, indem du oben auf der Seite die Schaltfläche Use this template anklickst Dadurch wird ein neues Repository in deinem GitHub-Konto mit einer Kopie des Lehrplans erstellt Folge diesen Schritten:\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "63c32e25467282de965d97950b89f7b5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "Lehrplan in einem Codespace (eine browserbasierte Umgebung, keine Installationen erforderlich) oder lokal auf deinem Computer mit einem Texteditor wie Visual Studio Code ausführen möchtest Erstelle dein Repository Um deine Arbeit einfach zu speichern, wird empfohlen, eine eigene Kopie dieses Repositorys zu erstellen Du kannst dies tun, indem du oben auf der Seite die Schaltfläche Use this template anklickst Dadurch wird ein neues Repository in deinem GitHub-Konto mit einer Kopie des Lehrplans erstellt Folge diesen Schritten: 1Fork das Repository: Klicke auf die Schaltfläche \"Fork\" oben rechts auf dieser Seite 2 Klonen des Repositorys:   git clone https://github com/microsoft/Web-Dev-For-Beginners git\nAusführen des Lehrplans in einem Codespace\nIn deiner Kopie dieses Repositorys, die du erstellt hast, klicke auf die Schaltfläche Code und wähle Open with Codespaces Dadurch wird ein neuer Codespace erstellt, in dem du arbeiten kannst Ausführen des Lehrplans lokal auf deinem Computer\nUm diesen Lehrplan lokal auf deinem Computer auszuführen, benötigst du einen Texteditor, einen Browser und ein Befehlszeilentool Unsere erste Lektion, Einführung in Programmiersprachen und Werkzeuge, führt dich durch verschiedene Optionen für jedes dieser Werkzeuge, damit du auswählen kannst, was am besten für dich funktioniert Unsere Empfehlung ist die Verwendung von Visual Studio Code als Editor, der auch ein integriertes Terminal enthält Du kannst Visual Studio Code hier herunterladen Klone dein Repository auf deinen Computer Du kannst dies tun, indem du auf die Schaltfläche Code klickst und die URL kopierst:\nÖffne dann Terminal innerhalb von Visual Studio Code und führe den folgenden Befehl aus, wobei <your-repository-url> durch die gerade kopierte URL ersetzt wird:\nbash\ngit clone <your-repository-url>\nÖffne den Ordner in Visual Studio Code Du kannst dies tun, indem du auf Datei > Ordner öffnen klickst und den gerade geklonten Ordner auswählst",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "37f856a8af51e1cdd4e258903fa90c86",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "Code hier herunterladen Klone dein Repository auf deinen Computer Du kannst dies tun, indem du auf die Schaltfläche Code klickst und die URL kopierst: Öffne dann Terminal innerhalb von Visual Studio Code und führe den folgenden Befehl aus, wobei <your-repository-url> durch die gerade kopierte URL ersetzt wird: bash git clone <your-repository-url> Öffne den Ordner in Visual Studio Code Du kannst dies tun, indem du auf Datei > Ordner öffnen klickst und den gerade geklonten Ordner auswählstEmpfohlene Visual Studio Code-Erweiterungen:\nLive Server – um HTML-Seiten direkt in Visual Studio Code zu sehen\nCopilot – um schneller Code zu schreiben\n📂 Jede Lektion enthält:\noptionale Sketchnote\noptionales ergänzendes Video\nQuiz zur Vorbereitung auf die Lektion\nschriftliche Lektion\nfür projektbasierte Lektionen, Schritt-für-Schritt-Anleitungen zum Erstellen des Projekts\nWissensüberprüfungen\neine Herausforderung\nergänzende Lektüre\nAufgabe\nQuiz nach der Lektion\nEine Anmerkung zu den Quizfragen: Alle Quizfragen befinden sich im Ordner Quiz-app, insgesamt 48 Quizfragen mit jeweils drei Fragen Sie sind in den Lektionen verlinkt Die Quiz-App kann lokal ausgeführt oder auf Azure bereitgestellt werden; folge den Anweisungen im quiz-app-Ordner Sie werden nach und nach lokalisiert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "9d4af11ec01e337c6fba34fcb6b38f35",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "Sketchnote optionales ergänzendes Video Quiz zur Vorbereitung auf die Lektion schriftliche Lektion für projektbasierte Lektionen, Schritt-für-Schritt-Anleitungen zum Erstellen des Projekts Wissensüberprüfungen eine Herausforderung ergänzende Lektüre Aufgabe Quiz nach der Lektion Eine Anmerkung zu den Quizfragen: Alle Quizfragen befinden sich im Ordner Quiz-app, insgesamt 48 Quizfragen mit jeweils drei Fragen Sie sind in den Lektionen verlinkt Die Quiz-App kann lokal ausgeführt oder auf Azure bereitgestellt werden; folge den Anweisungen im quiz-app-Ordner Sie werden nach und nach lokalisiert🗃️ Lektionen\n|     |                       Projektname                       |                            Vermittelte Konzepte                            | Lernziele                                                                                                                           |                                                         Verlinkte Lektion                                                          |         Autor          |\n| :-: | :------------------------------------------------------: | :------------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     Erste Schritte                      |           Einführung in Programmiersprachen und Werkzeuge                  | Lerne die grundlegenden Prinzipien der meisten Programmiersprachen und über Software, die professionelle Entwickler nutzen          | Einführung in Programmiersprachen und Werkzeuge        |         Jasmine         |\n| 02  |                     Erste Schritte                      |             Grundlagen von GitHub, einschließlich Teamarbeit              | Wie man GitHub in einem Projekt verwendet und mit anderen an einem Code-Bestand zusammenarbeitet                                    |                            Einführung in GitHub                          |          Floor          |\n| 03  |                     Erste Schritte                      |                             Barrierefreiheit                              | Lerne die Grundlagen der Barrierefreiheit im Web                                                                                   |                       Grundlagen der Barrierefreiheit                   |       Christopher       |\n| 04  |                        JS-Grundlagen                    |                         JavaScript-Datentypen                             | Die Grundlagen der JavaScript-Datentypen                                                                                           |                                       Datentypen                                          |         Jasmine         |\n| 05  |                        JS-Grundlagen                    |                         Funktionen und Methoden                           | Lerne, wie Funktionen und Methoden die Logik einer Anwendung steuern können                                                        |                              Funktionen und Methoden                              | Jasmine und Christopher |\n| 06  |                        JS-Grundlagen                    |                        Entscheidungen mit JS treffen                      | Lerne, wie man Bedingungen im Code mit Entscheidungsfindungsmethoden erstellt                                                      |                                 Entscheidungen treffen                             |         Jasmine         |\n| 07  |                        JS-Grundlagen                    |                            Arrays und Schleifen                           | Arbeite mit Daten mithilfe von Arrays und Schleifen in JavaScript                                                                   |                                   Arrays und Schleifen                                  |         Jasmine         |\n| 08  |       Terrarium       |                            HTML in der Praxis                             | Erstelle das HTML, um ein Online-Terrarium zu bauen, mit Fokus auf Layoutgestaltung                                                 |                                 Einführung in HTML                                     |           Jen           |\n| 09  |       Terrarium       |                            CSS in der Praxis                              | Erstelle das CSS, um das Online-Terrarium zu gestalten, mit Fokus auf die Grundlagen von CSS, einschließlich responsivem Design     |                                  Einführung in CSS                                      |           Jen           |\n| 10  |            Terrarium            |                 JavaScript Closures, DOM-Manipulation                     | Erstelle das JavaScript, um das Terrarium als Drag-and-Drop-Oberfläche funktionsfähig zu machen, mit Fokus auf Closures und DOM-Manipulation |                  JavaScript Closures, DOM-Manipulation                     |           Jen           |\n| 11  |          Tipp-Spiel          |                          Erstelle ein Tipp-Spiel                          | Lerne, wie man Tastaturereignisse nutzt, um die Logik einer JavaScript-App zu steuern                                               |                                Ereignisgesteuerte Programmierung                         |       Christopher       |\n| 12  | Green Browser Extension |                         Arbeiten mit Browsern                          | Erfahren Sie, wie Browser funktionieren, ihre Geschichte und wie Sie die ersten Elemente einer Browsererweiterung erstellen können |                               Über Browser                                |           Jen           |\n| 13  | Green Browser Extension | Formular erstellen, API aufrufen und Variablen im lokalen Speicher speichern | Erstellen Sie die JavaScript-Elemente Ihrer Browsererweiterung, um eine API mit Variablen aus dem lokalen Speicher aufzurufen      |                APIs, Formulare und lokaler Speicher           |           Jen           |\n| 14  | Green Browser Extension |          Hintergrundprozesse im Browser, Web-Performance              | Nutzen Sie die Hintergrundprozesse des Browsers, um das Symbol der Erweiterung zu verwalten; erfahren Sie mehr über Web-Performance und Optimierungen |             Hintergrundaufgaben und Performance           |           Jen           |\n| 15  |           Space Game           |             Fortgeschrittene Spieleentwicklung mit JavaScript          | Lernen Sie Vererbung mit Klassen und Komposition sowie das Pub/Sub-Muster kennen, um ein Spiel vorzubereiten                       |                      Einführung in fortgeschrittene Spieleentwicklung                |          Chris          |\n| 16  |           Space Game           |                           Zeichnen auf Canvas                          | Lernen Sie die Canvas-API kennen, die verwendet wird, um Elemente auf einem Bildschirm zu zeichnen                                |                                Zeichnen auf Canvas                              |          Chris          |\n| 17  |           Space Game           |                   Elemente auf dem Bildschirm bewegen                  | Entdecken Sie, wie Elemente mithilfe kartesischer Koordinaten und der Canvas-API Bewegung erhalten können                         |                           Elemente bewegen                                 |          Chris          |\n| 18  |           Space Game           |                          Kollisionserkennung                           | Lassen Sie Elemente kollidieren und aufeinander reagieren, indem Sie Tastenanschläge verwenden, und fügen Sie eine Abkühlfunktion hinzu, um die Spielleistung sicherzustellen |                              Kollisionserkennung                              |          Chris          |\n| 19  |           Space Game           |                             Punktestand führen                         | Führen Sie mathematische Berechnungen basierend auf dem Spielstatus und der Leistung durch                                       |                                    Punktestand führen                               |          Chris          |\n| 20  |           Space Game           |                     Spiel beenden und neu starten                      | Lernen Sie, wie Sie das Spiel beenden und neu starten, einschließlich der Bereinigung von Ressourcen und dem Zurücksetzen von Variablenwerten |                                Endbedingung                                         |          Chris          |\n| 21  |         Banking App          |                 HTML-Vorlagen und Routen in einer Web-App              | Lernen Sie, wie Sie das Grundgerüst der Architektur einer mehrseitigen Website mithilfe von Routing und HTML-Vorlagen erstellen   |                            HTML-Vorlagen und Routen                              |          Yohan          |\n| 22  |         Banking App          |                  Login- und Registrierungsformular erstellen           | Lernen Sie, wie man Formulare erstellt und Validierungsroutinen handhabt                                                          |                                           Formulare                                       |          Yohan          |\n| 23  |         Banking App          |                   Methoden zum Abrufen und Verwenden von Daten         | Erfahren Sie, wie Daten in Ihre App fließen, wie sie abgerufen, gespeichert und verworfen werden                                  |                                            Daten                                           |          Yohan          |\n| 24  |         Banking App          |                      Konzepte des Zustandsmanagements                  | Lernen Sie, wie Ihre App den Zustand beibehält und wie Sie ihn programmatisch verwalten können                                    |                                Zustandsmanagement                              |          Yohan          |\n🏫 Pädagogik\nUnser Lehrplan basiert auf zwei zentralen pädagogischen Prinzipien:\n* projektbasiertes Lernen\n* regelmäßige Quizze\nDas Programm vermittelt die Grundlagen von JavaScript, HTML und CSS sowie die neuesten Tools und Techniken, die von heutigen Webentwicklern verwendet werden",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1839,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "5decbc99c8694cba813c7b5e34182c3c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "und verworfen werden | Daten | Yohan | | 24 | Banking App | Konzepte des Zustandsmanagements | Lernen Sie, wie Ihre App den Zustand beibehält und wie Sie ihn programmatisch verwalten können | Zustandsmanagement | Yohan | 🏫 Pädagogik Unser Lehrplan basiert auf zwei zentralen pädagogischen Prinzipien: * projektbasiertes Lernen * regelmäßige Quizze Das Programm vermittelt die Grundlagen von JavaScript, HTML und CSS sowie die neuesten Tools und Techniken, die von heutigen Webentwicklern verwendet werdenDie Studierenden haben die Möglichkeit, praktische Erfahrungen zu sammeln, indem sie ein Schreibspiel, ein virtuelles Terrarium, eine umweltfreundliche Browsererweiterung, ein Space-Invader-ähnliches Spiel und eine Banking-App für Unternehmen entwickeln Am Ende der Serie haben die Studierenden ein solides Verständnis für Webentwicklung erlangt 🎓 Sie können die ersten Lektionen dieses Lehrplans als Lernpfad auf Microsoft Learn absolvieren Indem sichergestellt wird, dass die Inhalte projektbezogen sind, wird der Lernprozess für die Studierenden ansprechender gestaltet und das Behalten der Konzepte verbessert Wir haben auch mehrere Einführungslektionen zu den JavaScript-Grundlagen geschrieben, die mit einem Video aus der Sammlung \"Beginners Series to: JavaScript\" kombiniert sind, von denen einige Autoren zu diesem Lehrplan beigetragen haben Darüber hinaus setzt ein niedrigschwelliges Quiz vor dem Unterricht den Fokus der Studierenden auf das Lernen eines Themas, während ein zweites Quiz nach dem Unterricht das Behalten weiter fördert Dieser Lehrplan wurde so gestaltet, dass er flexibel und unterhaltsam ist und ganz oder teilweise absolviert werden kann Die Projekte beginnen klein und werden im Laufe des 12-wöchigen Zyklus immer komplexer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "273b9247b1baa6f5b4b715293f58b0fc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "Sammlung \"Beginners Series to: JavaScript\" kombiniert sind, von denen einige Autoren zu diesem Lehrplan beigetragen haben Darüber hinaus setzt ein niedrigschwelliges Quiz vor dem Unterricht den Fokus der Studierenden auf das Lernen eines Themas, während ein zweites Quiz nach dem Unterricht das Behalten weiter fördert Dieser Lehrplan wurde so gestaltet, dass er flexibel und unterhaltsam ist und ganz oder teilweise absolviert werden kann Die Projekte beginnen klein und werden im Laufe des 12-wöchigen Zyklus immer komplexerObwohl wir bewusst darauf verzichtet haben, JavaScript-Frameworks einzuführen, um uns auf die grundlegenden Fähigkeiten zu konzentrieren, die ein Webentwickler vor der Verwendung eines Frameworks benötigt, wäre ein guter nächster Schritt nach Abschluss dieses Lehrplans das Erlernen von Node js über eine weitere Videosammlung: \"Beginner Series to: Node js\" Besuchen Sie unsere Verhaltensregeln und Beitragsrichtlinien Wir freuen uns über Ihr konstruktives Feedback 🧭 Offline-Zugriff\nSie können diese Dokumentation offline mit Docsify ausführen Forken Sie dieses Repository, installieren Sie Docsify auf Ihrem lokalen Rechner und geben Sie dann im Stammverzeichnis dieses Repos docsify serve ein Die Website wird auf Port 3000 auf Ihrem localhost bereitgestellt: localhost:3000 📘 PDF\nEine PDF-Version aller Lektionen finden Sie hier 🎒 Weitere Kurse\nUnser Team erstellt weitere Kurse Schauen Sie sich an:\nGenerative KI für Anfänger\nGenerative KI für Anfänger NET\nGenerative KI mit JavaScript\nGenerative KI mit Java\nKI für Anfänger\nDatenwissenschaft für Anfänger\nMaschinelles Lernen für Anfänger\nCybersicherheit für Anfänger\nWebentwicklung für Anfänger\nIoT für Anfänger\nXR-Entwicklung für Anfänger\nGitHub Copilot für Agentic Use meistern\nGitHub Copilot für C#/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "db2cf6448effa847f0df125299820a86",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\de\\README.md",
    "source_type": "git_repo",
    "title": "Webentwicklung für Anfänger – Ein Lehrplan",
    "content": "3000 auf Ihrem localhost bereitgestellt: localhost:3000 📘 PDF Eine PDF-Version aller Lektionen finden Sie hier 🎒 Weitere Kurse Unser Team erstellt weitere Kurse Schauen Sie sich an: Generative KI für Anfänger Generative KI für Anfänger NET Generative KI mit JavaScript Generative KI mit Java KI für Anfänger Datenwissenschaft für Anfänger Maschinelles Lernen für Anfänger Cybersicherheit für Anfänger Webentwicklung für Anfänger IoT für Anfänger XR-Entwicklung für Anfänger GitHub Copilot für Agentic Use meistern GitHub Copilot für C#/NET-Entwickler meistern\nWählen Sie Ihr eigenes Copilot-Abenteuer\nLizenz\nDieses Repository ist unter der MIT-Lizenz lizenziert Weitere Informationen finden Sie in der LICENSE-Datei Haftungsausschluss:\nDieses Dokument wurde mit dem KI-Übersetzungsdienst Co-op Translator übersetzt Obwohl wir uns um Genauigkeit bemühen, weisen wir darauf hin, dass automatisierte Übersetzungen Fehler oder Ungenauigkeiten enthalten können Das Originaldokument in seiner ursprünglichen Sprache sollte als maßgebliche Quelle betrachtet werden Für kritische Informationen wird eine professionelle menschliche Übersetzung empfohlen Wir übernehmen keine Haftung für Missverständnisse oder Fehlinterpretationen, die sich aus der Nutzung dieser Übersetzung ergeben",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25798,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\de\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "aa6c72f00391762294218fcda46e6223",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\_404.md",
    "source_type": "git_repo",
    "title": "Trabajo en progreso",
    "content": "Trabajo en progreso\nEstamos trabajando en esta página. Por favor, vuelve más tarde.\nAbre un issue si tienes alguna pregunta.\nVolver al inicio\nDescargo de responsabilidad:\nEste documento ha sido traducido utilizando el servicio de traducción automática Co-op Translator. Si bien nos esforzamos por lograr precisión, tenga en cuenta que las traducciones automáticas pueden contener errores o imprecisiones. El documento original en su idioma nativo debe considerarse como la fuente autorizada. Para información crítica, se recomienda una traducción profesional realizada por humanos. No nos hacemos responsables de malentendidos o interpretaciones erróneas que puedan surgir del uso de esta traducción.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1084,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 159,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c9af3730dfaf6fd5336a1c253faee523",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "منشور رفتاری کد متن‌باز مایکروسافت",
    "content": "منشور رفتاری کد متن‌باز مایکروسافت\nاین پروژه منشور رفتاری کد متن‌باز مایکروسافت را پذیرفته است. Microsoft Open Source Code of Conduct\nمنابع:\nمنشور رفتاری کد متن‌باز مایکروسافت\nپرسش‌های متداول منشور رفتاری مایکروسافت\nبرای پرسش‌ها یا نگرانی‌ها با opencode@microsoft.com تماس بگیرید\nسلب مسئولیت:\nاین سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است. در حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است شامل خطاها یا نادرستی‌ها باشند. سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود. برای اطلاعات حساس، توصیه می‌شود از ترجمه حرفه‌ای انسانی استفاده کنید. ما مسئولیتی در قبال سوء تفاهم‌ها یا تفسیرهای نادرست ناشی از استفاده از این ترجمه نداریم.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1843,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "68324093fa7704a3ec6e6f4843c98851",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "مشارکت",
    "content": "مشارکت\nاین پروژه از مشارکت‌ها و پیشنهادات استقبال می‌کند بیشتر مشارکت‌ها نیاز دارند که شما با یک توافق‌نامه مجوز مشارکت‌کننده (CLA) موافقت کنید که اعلام می‌کند شما حق دارید و واقعاً این حق را به ما می‌دهید که از مشارکت شما استفاده کنیم برای جزئیات بیشتر، به https://cla microsoft com مراجعه کنید وقتی یک درخواست pull ارسال می‌کنید، یک ربات CLA به‌طور خودکار تعیین می‌کند که آیا نیاز دارید یک CLA ارائه دهید و درخواست شما را به‌طور مناسب تزئین می‌کند (مثلاً با برچسب یا نظر) کافی است دستورالعمل‌هایی که ربات ارائه می‌دهد را دنبال کنید شما فقط یک بار نیاز دارید این کار را برای تمام مخازن استفاده‌کننده از CLA ما انجام دهید لطفاً همچنین سعی کنید به ما بگویید چرا این تغییر را ایجاد کرده‌اید تا درخواست شما را بهتر درک کنیم",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2960,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "955db1bc36219e95a6ef5bc3e751e7fb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "مشارکت",
    "content": "یک ربات CLA به‌طور خودکار تعیین می‌کند که آیا نیاز دارید یک CLA ارائه دهید و درخواست شما را به‌طور مناسب تزئین می‌کند (مثلاً با برچسب یا نظر) کافی است دستورالعمل‌هایی که ربات ارائه می‌دهد را دنبال کنید شما فقط یک بار نیاز دارید این کار را برای تمام مخازن استفاده‌کننده از CLA ما انجام دهید لطفاً همچنین سعی کنید به ما بگویید چرا این تغییر را ایجاد کرده‌اید تا درخواست شما را بهتر درک کنیماین پروژه آیین‌نامه رفتاری متن‌باز مایکروسافت را پذیرفته است برای اطلاعات بیشتر، به سؤالات متداول آیین‌نامه رفتاری مراجعه کنید یا با opencode@microsoft com تماس بگیرید اگر سؤال یا نظری اضافی دارید سلب مسئولیت:\nاین سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2960,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "63534f8fbd9e858bd35980fa5c3e499e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "مشارکت",
    "content": "را برای تمام مخازن استفاده‌کننده از CLA ما انجام دهید لطفاً همچنین سعی کنید به ما بگویید چرا این تغییر را ایجاد کرده‌اید تا درخواست شما را بهتر درک کنیماین پروژه آیین‌نامه رفتاری متن‌باز مایکروسافت را پذیرفته است برای اطلاعات بیشتر، به سؤالات متداول آیین‌نامه رفتاری مراجعه کنید یا با opencode@microsoft com تماس بگیرید اگر سؤال یا نظری اضافی دارید سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود برای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شود",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2960,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "5adaf21886d753fd0e7e3be98051c48f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "مشارکت",
    "content": "مراجعه کنید یا با opencode@microsoft com تماس بگیرید اگر سؤال یا نظری اضافی دارید سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود برای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شودما هیچ مسئولیتی در قبال سوءتفاهم‌ها یا تفسیرهای نادرست ناشی از استفاده از این ترجمه نداریم",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2960,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "17d7127c18e3d41109de243ed5908b22",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\README.md",
    "source_type": "git_repo",
    "title": "Desarrollo Web para Principiantes - Un Currículo",
    "content": "Desarrollo Web para Principiantes - Un Currículo\nAprende los fundamentos del desarrollo web con nuestro curso integral de 12 semanas creado por los Microsoft Cloud Advocates Cada una de las 24 lecciones profundiza en JavaScript, CSS y HTML a través de proyectos prácticos como terrarios, extensiones de navegador y juegos espaciales Participa en cuestionarios, discusiones y tareas prácticas Mejora tus habilidades y optimiza tu retención de conocimientos con nuestra efectiva pedagogía basada en proyectos ¡Comienza tu viaje de programación hoy mismo 🧑‍🎓 ¿Eres estudiante Visita la página del Student Hub donde encontrarás recursos para principiantes, paquetes para estudiantes e incluso formas de obtener un cupón para un certificado gratuito Esta es la página que querrás marcar como favorita y revisar de vez en cuando, ya que cambiamos el contenido mensualmente 📣 Anuncio - Nuevo Currículo sobre Generative AI para JavaScript\n¡No te pierdas nuestro nuevo currículo sobre Generative AI Visita https://aka ms/genai-js-course para comenzar Lecciones que cubren desde lo básico hasta RAG Interactúa con personajes históricos usando GenAI y nuestra aplicación complementaria Una narrativa divertida y atractiva, ¡viajarás en el tiempo Cada lección incluye una tarea para completar, una verificación de conocimientos y un desafío para aprender temas como:\n- Creación de prompts y diseño de prompts\n- Generación de aplicaciones de texto e imágenes\n- Aplicaciones de búsqueda\nVisita https://aka ms/genai-js-course para comenzar 🌱 Comenzando\nProfesores, hemos incluido algunas sugerencias sobre cómo usar este currículo Nos encantaría recibir sus comentarios en nuestro foro de discusión Estudiantes, para cada lección, comienza con un cuestionario previo a la clase y continúa leyendo el material de la lección, completando las diversas actividades y verificando tu comprensión con el cuestionario posterior a la clase Para mejorar tu experiencia de aprendizaje, conéctate con tus compañeros para trabajar juntos en los proyectos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26093,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "878365275cd31cc5a5765baf540d09e0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\README.md",
    "source_type": "git_repo",
    "title": "Desarrollo Web para Principiantes - Un Currículo",
    "content": "ms/genai-js-course para comenzar 🌱 Comenzando Profesores, hemos incluido algunas sugerencias sobre cómo usar este currículo Nos encantaría recibir sus comentarios en nuestro foro de discusión Estudiantes, para cada lección, comienza con un cuestionario previo a la clase y continúa leyendo el material de la lección, completando las diversas actividades y verificando tu comprensión con el cuestionario posterior a la clase Para mejorar tu experiencia de aprendizaje, conéctate con tus compañeros para trabajar juntos en los proyectosLas discusiones son bienvenidas en nuestro foro de discusión, donde nuestro equipo de moderadores estará disponible para responder tus preguntas Para continuar tu educación, te recomendamos explorar Microsoft Learn para materiales de estudio adicionales 📋 Configurando tu entorno\n¡Este currículo tiene un entorno de desarrollo listo para usar Al comenzar, puedes elegir ejecutar el currículo en un Codespace (un entorno basado en navegador, sin necesidad de instalaciones), o localmente en tu computadora usando un editor de texto como Visual Studio Code Crea tu repositorio\nPara que puedas guardar tu trabajo fácilmente, se recomienda que crees tu propia copia de este repositorio Puedes hacerlo haciendo clic en el botón Use this template en la parte superior de la página Esto creará un nuevo repositorio en tu cuenta de GitHub con una copia del currículo Sigue estos pasos:\n1 Haz un fork del repositorio: Haz clic en el botón \"Fork\" en la esquina superior derecha de esta página 2 Clona el repositorio: git clone https://github com/microsoft/Web-Dev-For-Beginners git\nEjecutando el currículo en un Codespace\nEn tu copia de este repositorio que creaste, haz clic en el botón Code y selecciona Open with Codespaces Esto creará un nuevo Codespace para que trabajes en él Ejecutando el currículo localmente en tu computadora\nPara ejecutar este currículo localmente en tu computadora, necesitarás un editor de texto, un navegador y una herramienta de línea de comandos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26093,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "f19589d0b3afb06ab3e47fb67683d2fb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\README.md",
    "source_type": "git_repo",
    "title": "Desarrollo Web para Principiantes - Un Currículo",
    "content": "de esta página 2 Clona el repositorio: git clone https://github com/microsoft/Web-Dev-For-Beginners git Ejecutando el currículo en un Codespace En tu copia de este repositorio que creaste, haz clic en el botón Code y selecciona Open with Codespaces Esto creará un nuevo Codespace para que trabajes en él Ejecutando el currículo localmente en tu computadora Para ejecutar este currículo localmente en tu computadora, necesitarás un editor de texto, un navegador y una herramienta de línea de comandosNuestra primera lección, Introducción a los Lenguajes de Programación y Herramientas del Oficio, te guiará a través de varias opciones para cada una de estas herramientas para que selecciones la que mejor funcione para ti Nuestra recomendación es usar Visual Studio Code como tu editor, que también tiene un Terminal integrado Puedes descargar Visual Studio Code aquí Clona tu repositorio en tu computadora Puedes hacerlo haciendo clic en el botón Code y copiando la URL:\nLuego, abre el Terminal dentro de Visual Studio Code y ejecuta el siguiente comando, reemplazando <your-repository-url> con la URL que acabas de copiar:\nbash\ngit clone <your-repository-url>\nAbre la carpeta en Visual Studio Code Puedes hacerlo haciendo clic en File > Open Folder y seleccionando la carpeta que acabas de clonar Extensiones recomendadas para Visual Studio Code:\nLive Server - para previsualizar páginas HTML dentro de Visual Studio Code\nCopilot - para ayudarte a escribir código más rápido\n📂 Cada lección incluye:\nSketchnote opcional\nVideo complementario opcional\nCuestionario de calentamiento previo a la lección\nLección escrita\nPara lecciones basadas en proyectos, guías paso a paso sobre cómo construir el proyecto\nVerificaciones de conocimiento\nUn desafío\nLectura complementaria\nTarea\nCuestionario posterior a la lección\nNota sobre los cuestionarios: Todos los cuestionarios están contenidos en la carpeta Quiz-app, 48 cuestionarios en total con tres preguntas cada uno",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26093,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "72ad478e3e2f1a10d122b16a5f09811e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\README.md",
    "source_type": "git_repo",
    "title": "Desarrollo Web para Principiantes - Un Currículo",
    "content": "Copilot - para ayudarte a escribir código más rápido 📂 Cada lección incluye: Sketchnote opcional Video complementario opcional Cuestionario de calentamiento previo a la lección Lección escrita Para lecciones basadas en proyectos, guías paso a paso sobre cómo construir el proyecto Verificaciones de conocimiento Un desafío Lectura complementaria Tarea Cuestionario posterior a la lección Nota sobre los cuestionarios: Todos los cuestionarios están contenidos en la carpeta Quiz-app, 48 cuestionarios en total con tres preguntas cada unoEstán vinculados desde las lecciones y la aplicación de cuestionarios puede ejecutarse localmente o desplegarse en Azure; sigue las instrucciones en la carpeta quiz-app Se están localizando gradualmente",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26093,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "0ac493f3528d697513a71acdd485e14c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\README.md",
    "source_type": "git_repo",
    "title": "Desarrollo Web para Principiantes - Un Currículo",
    "content": "Para lecciones basadas en proyectos, guías paso a paso sobre cómo construir el proyecto Verificaciones de conocimiento Un desafío Lectura complementaria Tarea Cuestionario posterior a la lección Nota sobre los cuestionarios: Todos los cuestionarios están contenidos en la carpeta Quiz-app, 48 cuestionarios en total con tres preguntas cada unoEstán vinculados desde las lecciones y la aplicación de cuestionarios puede ejecutarse localmente o desplegarse en Azure; sigue las instrucciones en la carpeta quiz-app Se están localizando gradualmente🗃️ Lecciones\n|     |                       Nombre del Proyecto                       |                            Conceptos Enseñados                             | Objetivos de Aprendizaje                                                                                                           |                                                         Lección Vinculada                                                          |         Autor          |\n| :-: | :-------------------------------------------------------------: | :------------------------------------------------------------------------: | ---------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------------------------------------------------------: | :--------------------: |\n| 01  |                     Comenzando                                  |           Introducción a la Programación y Herramientas del Oficio         | Aprende los fundamentos detrás de la mayoría de los lenguajes de programación y sobre el software que ayuda a los desarrolladores | Introducción a los Lenguajes de Programación y Herramientas del Oficio |         Jasmine         |\n| 02  |                     Comenzando                                  |             Conceptos básicos de GitHub, incluye trabajo en equipo         | Cómo usar GitHub en tu proyecto y colaborar con otros en una base de código                                                      |                            Introducción a GitHub                             |          Floor          |\n| 03  |                     Comenzando                                  |                             Accesibilidad                                  | Aprende los conceptos básicos de accesibilidad web                                                                               |                       Fundamentos de Accesibilidad                       |       Christopher       |\n| 04  |                        Conceptos Básicos de JS                  |                         Tipos de Datos en JavaScript                       | Los conceptos básicos de los tipos de datos en JavaScript                                                                        |                                       Tipos de Datos                                        |         Jasmine         |\n| 05  |                        Conceptos Básicos de JS                  |                         Funciones y Métodos                                | Aprende sobre funciones y métodos para gestionar el flujo lógico de una aplicación                                               |                              Funciones y Métodos                               | Jasmine y Christopher |\n| 06  |                        Conceptos Básicos de JS                  |                        Tomando Decisiones con JS                           | Aprende a crear condiciones en tu código usando métodos de toma de decisiones                                                   |                                 Tomando Decisiones                                  |         Jasmine         |\n| 07  |                        Conceptos Básicos de JS                  |                            Arreglos y Bucles                               | Trabaja con datos usando arreglos y bucles en JavaScript                                                                         |                                   Arreglos y Bucles                                    |         Jasmine         |\n| 08  |       Terrario               |                            HTML en la Práctica                             | Construye el HTML para crear un terrario en línea, enfocándote en construir un diseño                                            |                                 Introducción a HTML                                 |           Jen           |\n| 09  |       Terrario               |                            CSS en la Práctica                              | Construye el CSS para estilizar el terrario en línea, enfocándote en los conceptos básicos de CSS, incluyendo hacer la página responsiva |                                  Introducción a CSS                                  |           Jen           |\n| 10  |            Terrario          |                 Closures en JavaScript, manipulación del DOM               | Construye el JavaScript para hacer que el terrario funcione como una interfaz de arrastrar/soltar, enfocándote en closures y manipulación del DOM |                  Closures en JavaScript, manipulación del DOM                   |           Jen           |\n| 11  |          Juego de Mecanografía |                          Construye un Juego de Mecanografía                | Aprende a usar eventos de teclado para dirigir la lógica de tu aplicación JavaScript                                             |                                Programación Basada en Eventos                                |       Christopher       |\n| 12  | Green Browser Extension |                         Trabajando con navegadores                          | Aprende cómo funcionan los navegadores, su historia y cómo estructurar los primeros elementos de una extensión de navegador          |                               Sobre los navegadores                                |           Jen           |\n| 13  | Green Browser Extension | Crear un formulario, llamar a una API y almacenar variables en el almacenamiento local | Construye los elementos de JavaScript de tu extensión de navegador para llamar a una API utilizando variables almacenadas en el almacenamiento local |                APIs, Formularios y Almacenamiento Local                 |           Jen           |\n| 14  | Green Browser Extension |          Procesos en segundo plano en el navegador, rendimiento web          | Utiliza los procesos en segundo plano del navegador para gestionar el ícono de la extensión; aprende sobre el rendimiento web y algunas optimizaciones |             Tareas en Segundo Plano y Rendimiento              |           Jen           |\n| 15  |           Space Game           |             Desarrollo de juegos más avanzado con JavaScript             | Aprende sobre la herencia utilizando tanto clases como composición y el patrón Pub/Sub, como preparación para construir un juego     |                      Introducción al Desarrollo Avanzado de Juegos                       |          Chris          |\n| 16  |           Space Game           |                           Dibujar en canvas                            | Aprende sobre la API de Canvas, utilizada para dibujar elementos en una pantalla                                                   |                                Dibujar en Canvas                                |          Chris          |\n| 17  |           Space Game           |                   Mover elementos en la pantalla                    | Descubre cómo los elementos pueden adquirir movimiento utilizando coordenadas cartesianas y la API de Canvas                        |                           Mover Elementos                           |          Chris          |\n| 18  |           Space Game           |                          Detección de colisiones                           | Haz que los elementos colisionen y reaccionen entre sí utilizando teclas y proporciona una función de enfriamiento para garantizar el rendimiento del juego |                              Detección de Colisiones                              |          Chris          |\n| 19  |           Space Game           |                             Llevar la puntuación                              | Realiza cálculos matemáticos basados en el estado y rendimiento del juego                                                           |                                    Llevar la Puntuación                                    |          Chris          |\n| 20  |           Space Game           |                     Terminar y reiniciar el juego                     | Aprende sobre cómo terminar y reiniciar el juego, incluyendo la limpieza de recursos y el reinicio de valores de variables          |                                Condición de Finalización                                 |          Chris          |\n| 21  |         Banking App          |                 Plantillas HTML y rutas en una aplicación web                 | Aprende cómo crear la estructura de la arquitectura de un sitio web multipágina utilizando rutas y plantillas HTML                  |                            Plantillas HTML y Rutas                             |          Yohan          |\n| 22  |         Banking App          |                  Crear un formulario de inicio de sesión y registro                   | Aprende sobre cómo construir formularios y manejar rutinas de validación                                                            |                                           Formularios                                           |          Yohan          |\n| 23  |         Banking App          |                   Métodos para obtener y usar datos                   | Cómo los datos fluyen dentro y fuera de tu aplicación, cómo obtenerlos, almacenarlos y eliminarlos                                  |                                            Datos                                            |          Yohan          |\n| 24  |         Banking App          |                      Conceptos de gestión de estado                      | Aprende cómo tu aplicación retiene el estado y cómo gestionarlo programáticamente                                                   |                                Gestión de Estado                                |          Yohan          |\n🏫 Pedagogía\nNuestro plan de estudios está diseñado con dos principios pedagógicos clave en mente:\n* aprendizaje basado en proyectos\n* cuestionarios frecuentes\nEl programa enseña los fundamentos de JavaScript, HTML y CSS, así como las herramientas y técnicas más recientes utilizadas por los desarrolladores web actuales",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26093,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1746,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "0cdcd90980d47377a54ac02906b57e4e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\README.md",
    "source_type": "git_repo",
    "title": "Desarrollo Web para Principiantes - Un Currículo",
    "content": "24 | Banking App | Conceptos de gestión de estado | Aprende cómo tu aplicación retiene el estado y cómo gestionarlo programáticamente | Gestión de Estado | Yohan | 🏫 Pedagogía Nuestro plan de estudios está diseñado con dos principios pedagógicos clave en mente: * aprendizaje basado en proyectos * cuestionarios frecuentes El programa enseña los fundamentos de JavaScript, HTML y CSS, así como las herramientas y técnicas más recientes utilizadas por los desarrolladores web actualesLos estudiantes tendrán la oportunidad de adquirir experiencia práctica construyendo un juego de mecanografía, un terrario virtual, una extensión de navegador ecológica, un juego estilo \"Space Invaders\" y una aplicación bancaria para empresas Al final de la serie, los estudiantes habrán adquirido una comprensión sólida del desarrollo web 🎓 ¡Puedes tomar las primeras lecciones de este plan de estudios como un Learn Path en Microsoft Learn Al garantizar que el contenido se alinee con los proyectos, el proceso se vuelve más atractivo para los estudiantes y se mejora la retención de conceptos También escribimos varias lecciones introductorias sobre los conceptos básicos de JavaScript, acompañadas de un video de la colección \"Beginners Series to: JavaScript\", algunos de cuyos autores contribuyeron a este plan de estudios Además, un cuestionario de bajo riesgo antes de la clase establece la intención del estudiante hacia el aprendizaje de un tema, mientras que un segundo cuestionario después de la clase asegura una mayor retención Este plan de estudios fue diseñado para ser flexible y divertido y puede tomarse en su totalidad o en parte Los proyectos comienzan pequeños y se vuelven cada vez más complejos al final del ciclo de 12 semanas Aunque hemos evitado intencionalmente introducir frameworks de JavaScript para concentrarnos en las habilidades básicas necesarias como desarrollador web antes de adoptar un framework, un buen siguiente paso después de completar este plan de estudios sería aprender sobre Node js a través de otra colección de videos: \"Beginner Series to: Node js\" Visita nuestras Normas de Conducta y las pautas de Contribución",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26093,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "25bca43f1b8ac89e227e05e19c8fd9b9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\es\\README.md",
    "source_type": "git_repo",
    "title": "Desarrollo Web para Principiantes - Un Currículo",
    "content": "pequeños y se vuelven cada vez más complejos al final del ciclo de 12 semanas Aunque hemos evitado intencionalmente introducir frameworks de JavaScript para concentrarnos en las habilidades básicas necesarias como desarrollador web antes de adoptar un framework, un buen siguiente paso después de completar este plan de estudios sería aprender sobre Node js a través de otra colección de videos: \"Beginner Series to: Node js\" Visita nuestras Normas de Conducta y las pautas de Contribución¡Agradecemos tus comentarios constructivos 🧭 Acceso sin conexión\nPuedes ejecutar esta documentación sin conexión utilizando Docsify Haz un fork de este repositorio, instala Docsify en tu máquina local y luego, en la carpeta raíz de este repositorio, escribe docsify serve El sitio web se servirá en el puerto 3000 de tu localhost: localhost:3000 📘 PDF\nUn PDF de todas las lecciones se puede encontrar aquí 🎒 Otros Cursos\n¡Nuestro equipo produce otros cursos Echa un vistazo:\nGenerative AI for Beginners\nGenerative AI for Beginners NET\nGenerative AI with JavaScript\nGenerative AI with Java\nAI for Beginners\nData Science for Beginners\nML for Beginners\nCybersecurity for Beginners\nWeb Dev for Beginners\nIoT for Beginners\nXR Development for Beginners\nMastering GitHub Copilot for Agentic use\nMastering GitHub Copilot for C#/ NET Developers\nChoose Your Own Copilot Adventure\nLicencia\nEste repositorio está licenciado bajo la licencia MIT Consulta el archivo LICENSE para más información Descargo de responsabilidad:\nEste documento ha sido traducido utilizando el servicio de traducción automática Co-op Translator Si bien nos esforzamos por lograr precisión, tenga en cuenta que las traducciones automáticas pueden contener errores o imprecisiones El documento original en su idioma nativo debe considerarse como la fuente autorizada Para información crítica, se recomienda una traducción profesional realizada por humanos No nos hacemos responsables de malentendidos o interpretaciones erróneas que puedan surgir del uso de esta traducción",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26093,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\es\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "9098db65f51da458691f4a9c517713f5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "برای معلمان\nآیا دوست دارید از این برنامه درسی در کلاس خود استفاده کنید؟ لطفاً با خیال راحت این کار را انجام دهید در واقع، می‌توانید از آن مستقیماً در گیت‌هاب با استفاده از GitHub Classroom استفاده کنید برای این کار، این مخزن را فورک کنید شما نیاز دارید برای هر درس یک مخزن جداگانه ایجاد کنید، بنابراین باید هر پوشه را به یک مخزن جداگانه استخراج کنید به این ترتیب، GitHub Classroom می‌تواند هر درس را به صورت جداگانه شناسایی کند این دستورالعمل‌های کامل به شما ایده‌ای از نحوه تنظیم کلاس درس می‌دهد استفاده در Moodle، Canvas یا Blackboard\nاین برنامه درسی در این سیستم‌های مدیریت یادگیری به خوبی کار می‌کند از فایل آپلود Moodle برای محتوای کامل استفاده کنید، یا فایل Common Cartridge را امتحان کنید که شامل بخشی از محتوا است",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "c353262496c571a0a5fef3cf275e02b9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "باید هر پوشه را به یک مخزن جداگانه استخراج کنید به این ترتیب، GitHub Classroom می‌تواند هر درس را به صورت جداگانه شناسایی کند این دستورالعمل‌های کامل به شما ایده‌ای از نحوه تنظیم کلاس درس می‌دهد استفاده در Moodle، Canvas یا Blackboard این برنامه درسی در این سیستم‌های مدیریت یادگیری به خوبی کار می‌کند از فایل آپلود Moodle برای محتوای کامل استفاده کنید، یا فایل Common Cartridge را امتحان کنید که شامل بخشی از محتوا استMoodle Cloud از خروجی‌های کامل Common Cartridge پشتیبانی نمی‌کند، بنابراین بهتر است از فایل دانلود Moodle استفاده کنید که می‌تواند در Canvas آپلود شود لطفاً به ما اطلاع دهید که چگونه می‌توانیم این تجربه را بهبود دهیم برنامه درسی در یک کلاس Moodle\nبرنامه درسی در Canvas\nاستفاده از مخزن به شکل فعلی\nاگر می‌خواهید از این مخزن به همان شکلی که هست استفاده کنید، بدون استفاده از GitHub Classroom، این کار نیز امکان‌پذیر است",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "8fc63668b7aeaf20eb1c980df0f9b0ba",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "محتوا استMoodle Cloud از خروجی‌های کامل Common Cartridge پشتیبانی نمی‌کند، بنابراین بهتر است از فایل دانلود Moodle استفاده کنید که می‌تواند در Canvas آپلود شود لطفاً به ما اطلاع دهید که چگونه می‌توانیم این تجربه را بهبود دهیم برنامه درسی در یک کلاس Moodle برنامه درسی در Canvas استفاده از مخزن به شکل فعلی اگر می‌خواهید از این مخزن به همان شکلی که هست استفاده کنید، بدون استفاده از GitHub Classroom، این کار نیز امکان‌پذیر استشما باید با دانش‌آموزان خود هماهنگ کنید که کدام درس را با هم مرور کنند در یک قالب آنلاین (Zoom، Teams یا دیگر ابزارها) می‌توانید اتاق‌های گروهی برای آزمون‌ها تشکیل دهید و دانش‌آموزان را راهنمایی کنید تا برای یادگیری آماده شوند سپس دانش‌آموزان را به آزمون‌ها دعوت کنید و از آنها بخواهید پاسخ‌های خود را به عنوان 'issues' در یک زمان مشخص ارسال کنند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "19a878ed427eae50e98fbb7b864a723a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "هست استفاده کنید، بدون استفاده از GitHub Classroom، این کار نیز امکان‌پذیر استشما باید با دانش‌آموزان خود هماهنگ کنید که کدام درس را با هم مرور کنند در یک قالب آنلاین (Zoom، Teams یا دیگر ابزارها) می‌توانید اتاق‌های گروهی برای آزمون‌ها تشکیل دهید و دانش‌آموزان را راهنمایی کنید تا برای یادگیری آماده شوند سپس دانش‌آموزان را به آزمون‌ها دعوت کنید و از آنها بخواهید پاسخ‌های خود را به عنوان 'issues' در یک زمان مشخص ارسال کنندمی‌توانید همین کار را با تکالیف انجام دهید اگر می‌خواهید دانش‌آموزان به صورت گروهی و در فضای باز کار کنند اگر یک قالب خصوصی‌تر را ترجیح می‌دهید، از دانش‌آموزان بخواهید برنامه درسی را درس به درس به مخازن گیت‌هاب خودشان به صورت خصوصی فورک کنند و به شما دسترسی بدهند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "d35a7896d9dfbd138eff8a183fc3f8c9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "برای یادگیری آماده شوند سپس دانش‌آموزان را به آزمون‌ها دعوت کنید و از آنها بخواهید پاسخ‌های خود را به عنوان 'issues' در یک زمان مشخص ارسال کنندمی‌توانید همین کار را با تکالیف انجام دهید اگر می‌خواهید دانش‌آموزان به صورت گروهی و در فضای باز کار کنند اگر یک قالب خصوصی‌تر را ترجیح می‌دهید، از دانش‌آموزان بخواهید برنامه درسی را درس به درس به مخازن گیت‌هاب خودشان به صورت خصوصی فورک کنند و به شما دسترسی بدهندسپس می‌توانند آزمون‌ها و تکالیف را به صورت خصوصی تکمیل کرده و از طریق issues در مخزن کلاس شما به شما ارسال کنند راه‌های زیادی برای اجرای این برنامه درسی در یک کلاس آنلاین وجود دارد لطفاً به ما اطلاع دهید که چه چیزی برای شما بهتر کار می‌کند لطفاً نظرات خود را با ما در میان بگذارید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "f90d1f81b52d55868c20f2c04f6bc4d7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "درسی را درس به درس به مخازن گیت‌هاب خودشان به صورت خصوصی فورک کنند و به شما دسترسی بدهندسپس می‌توانند آزمون‌ها و تکالیف را به صورت خصوصی تکمیل کرده و از طریق issues در مخزن کلاس شما به شما ارسال کنند راه‌های زیادی برای اجرای این برنامه درسی در یک کلاس آنلاین وجود دارد لطفاً به ما اطلاع دهید که چه چیزی برای شما بهتر کار می‌کند لطفاً نظرات خود را با ما در میان بگذاریدما می‌خواهیم این برنامه درسی برای شما و دانش‌آموزانتان مفید باشد با ما در گوشه معلمان ارتباط برقرار کنید و یک issue جدید برای هرگونه درخواست، اشکال یا بازخورد باز کنید سلب مسئولیت:\nاین سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "7c5b05770eb935c8ff94644e4e994e8d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "برنامه درسی در یک کلاس آنلاین وجود دارد لطفاً به ما اطلاع دهید که چه چیزی برای شما بهتر کار می‌کند لطفاً نظرات خود را با ما در میان بگذاریدما می‌خواهیم این برنامه درسی برای شما و دانش‌آموزانتان مفید باشد با ما در گوشه معلمان ارتباط برقرار کنید و یک issue جدید برای هرگونه درخواست، اشکال یا بازخورد باز کنید سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود برای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شود",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "188f0e59e503978e57ef28aa5962e848",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "برقرار کنید و یک issue جدید برای هرگونه درخواست، اشکال یا بازخورد باز کنید سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود برای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شودما هیچ مسئولیتی در قبال سوءتفاهم‌ها یا تفسیرهای نادرست ناشی از استفاده از این ترجمه نداریم",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 344,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "833fb9a5c627c37cc27b543b3d3d1b8b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "امنیت\nمایکروسافت امنیت محصولات و خدمات نرم‌افزاری خود را جدی می‌گیرد، که شامل تمامی مخازن کد منبع مدیریت‌شده از طریق سازمان‌های GitHub ما می‌شود، از جمله Microsoft، Azure، DotNet، AspNet، Xamarin، و سازمان‌های GitHub ما اگر فکر می‌کنید که یک آسیب‌پذیری امنیتی در هر مخزن متعلق به مایکروسافت پیدا کرده‌اید که با تعریف آسیب‌پذیری امنیتی مایکروسافت مطابقت دارد، لطفاً آن را به ما گزارش دهید، همانطور که در زیر توضیح داده شده است گزارش مسائل امنیتی\nلطفاً آسیب‌پذیری‌های امنیتی را از طریق مسائل عمومی GitHub گزارش ندهید در عوض، لطفاً آن‌ها را به مرکز پاسخگویی امنیتی مایکروسافت (MSRC) در https://msrc microsoft com/create-report گزارش دهید اگر ترجیح می‌دهید بدون ورود به سیستم گزارش دهید، یک ایمیل به secure@microsoft com ارسال کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "8db951bca17563dc9583404c6422c0f2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "مخزن متعلق به مایکروسافت پیدا کرده‌اید که با تعریف آسیب‌پذیری امنیتی مایکروسافت مطابقت دارد، لطفاً آن را به ما گزارش دهید، همانطور که در زیر توضیح داده شده است گزارش مسائل امنیتی لطفاً آسیب‌پذیری‌های امنیتی را از طریق مسائل عمومی GitHub گزارش ندهید در عوض، لطفاً آن‌ها را به مرکز پاسخگویی امنیتی مایکروسافت (MSRC) در https://msrc microsoft com/create-report گزارش دهید اگر ترجیح می‌دهید بدون ورود به سیستم گزارش دهید، یک ایمیل به secure@microsoft com ارسال کنیداگر ممکن است، پیام خود را با کلید PGP ما رمزگذاری کنید؛ لطفاً آن را از صفحه کلید PGP مرکز پاسخگویی امنیتی مایکروسافت دانلود کنید شما باید ظرف ۲۴ ساعت پاسخی دریافت کنید اگر به هر دلیلی پاسخی دریافت نکردید، لطفاً از طریق ایمیل پیگیری کنید تا مطمئن شوید پیام اصلی شما دریافت شده است",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "7cc0b4b0ee0ea03a92653e7e5116a534",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "در https://msrc microsoft com/create-report گزارش دهید اگر ترجیح می‌دهید بدون ورود به سیستم گزارش دهید، یک ایمیل به secure@microsoft com ارسال کنیداگر ممکن است، پیام خود را با کلید PGP ما رمزگذاری کنید؛ لطفاً آن را از صفحه کلید PGP مرکز پاسخگویی امنیتی مایکروسافت دانلود کنید شما باید ظرف ۲۴ ساعت پاسخی دریافت کنید اگر به هر دلیلی پاسخی دریافت نکردید، لطفاً از طریق ایمیل پیگیری کنید تا مطمئن شوید پیام اصلی شما دریافت شده استاطلاعات بیشتر را می‌توانید در microsoft com/msrc پیدا کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "2ad5030ef60bb5c00635961ade1e6733",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "می‌دهید بدون ورود به سیستم گزارش دهید، یک ایمیل به secure@microsoft com ارسال کنیداگر ممکن است، پیام خود را با کلید PGP ما رمزگذاری کنید؛ لطفاً آن را از صفحه کلید PGP مرکز پاسخگویی امنیتی مایکروسافت دانلود کنید شما باید ظرف ۲۴ ساعت پاسخی دریافت کنید اگر به هر دلیلی پاسخی دریافت نکردید، لطفاً از طریق ایمیل پیگیری کنید تا مطمئن شوید پیام اصلی شما دریافت شده استاطلاعات بیشتر را می‌توانید در microsoft com/msrc پیدا کنیدلطفاً اطلاعات درخواستی زیر را (تا جایی که می‌توانید ارائه دهید) شامل کنید تا به ما کمک کنید ماهیت و دامنه مشکل احتمالی را بهتر درک کنیم:\nنوع مشکل (مانند سرریز بافر، تزریق SQL، اسکریپت‌نویسی بین‌سایتی و غیره)\nمسیرهای کامل فایل‌های منبع مرتبط با بروز مشکل\nمکان کد منبع آسیب‌دیده (برچسب/شاخه/تعهد یا URL مستقیم)\nهرگونه پیکربندی خاص مورد نیاز برای بازتولید مشکل\nدستورالعمل‌های گام‌به‌گام برای بازتولید مشکل\nکد اثبات مفهوم یا کد بهره‌برداری (در صورت امکان)\nتأثیر مشکل، از جمله نحوه‌ای که یک مهاجم ممکن است از مشکل سوءاستفاده کند\nاین اطلاعات به ما کمک می‌کند گزارش شما را سریع‌تر بررسی کنیم",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "e6862645e7f1140b2928b956bf199a67",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "کنیم: نوع مشکل (مانند سرریز بافر، تزریق SQL، اسکریپت‌نویسی بین‌سایتی و غیره) مسیرهای کامل فایل‌های منبع مرتبط با بروز مشکل مکان کد منبع آسیب‌دیده (برچسب/شاخه/تعهد یا URL مستقیم) هرگونه پیکربندی خاص مورد نیاز برای بازتولید مشکل دستورالعمل‌های گام‌به‌گام برای بازتولید مشکل کد اثبات مفهوم یا کد بهره‌برداری (در صورت امکان) تأثیر مشکل، از جمله نحوه‌ای که یک مهاجم ممکن است از مشکل سوءاستفاده کند این اطلاعات به ما کمک می‌کند گزارش شما را سریع‌تر بررسی کنیماگر گزارش شما برای یک برنامه جایزه اشکال است، گزارش‌های کامل‌تر می‌توانند به دریافت جایزه بالاتر کمک کنند لطفاً صفحه برنامه جایزه اشکال مایکروسافت را برای جزئیات بیشتر درباره برنامه‌های فعال ما مشاهده کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "d751a69ae6ca2abcdb0ae72209410acc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "برای بازتولید مشکل دستورالعمل‌های گام‌به‌گام برای بازتولید مشکل کد اثبات مفهوم یا کد بهره‌برداری (در صورت امکان) تأثیر مشکل، از جمله نحوه‌ای که یک مهاجم ممکن است از مشکل سوءاستفاده کند این اطلاعات به ما کمک می‌کند گزارش شما را سریع‌تر بررسی کنیماگر گزارش شما برای یک برنامه جایزه اشکال است، گزارش‌های کامل‌تر می‌توانند به دریافت جایزه بالاتر کمک کنند لطفاً صفحه برنامه جایزه اشکال مایکروسافت را برای جزئیات بیشتر درباره برنامه‌های فعال ما مشاهده کنیدزبان‌های ترجیحی\nما ترجیح می‌دهیم تمامی ارتباطات به زبان انگلیسی باشد سیاست\nمایکروسافت از اصل افشای هماهنگ‌شده آسیب‌پذیری پیروی می‌کند سلب مسئولیت:\nاین سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "ad96fe3fe8ef748f831e07ef8019ef5a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "کمک می‌کند گزارش شما را سریع‌تر بررسی کنیماگر گزارش شما برای یک برنامه جایزه اشکال است، گزارش‌های کامل‌تر می‌توانند به دریافت جایزه بالاتر کمک کنند لطفاً صفحه برنامه جایزه اشکال مایکروسافت را برای جزئیات بیشتر درباره برنامه‌های فعال ما مشاهده کنیدزبان‌های ترجیحی ما ترجیح می‌دهیم تمامی ارتباطات به زبان انگلیسی باشد سیاست مایکروسافت از اصل افشای هماهنگ‌شده آسیب‌پذیری پیروی می‌کند سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "9f4fdab9520038e785732dd2bae6a0a0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "ما مشاهده کنیدزبان‌های ترجیحی ما ترجیح می‌دهیم تمامی ارتباطات به زبان انگلیسی باشد سیاست مایکروسافت از اصل افشای هماهنگ‌شده آسیب‌پذیری پیروی می‌کند سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شودبرای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شود ما هیچ مسئولیتی در قبال سوءتفاهم‌ها یا تفسیرهای نادرست ناشی از استفاده از این ترجمه نداریم",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5409,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "db64891f5cdc4a8a0bc09d6a7b22226e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "پشتیبانی",
    "content": "پشتیبانی\nنحوه ثبت مشکلات و دریافت کمک\nاین پروژه از GitHub Issues برای پیگیری اشکالات و درخواست‌های ویژگی استفاده می‌کند لطفاً قبل از ثبت مشکلات جدید، مشکلات موجود را جستجو کنید تا از ایجاد موارد تکراری جلوگیری شود برای مشکلات جدید، اشکال یا درخواست ویژگی خود را به عنوان یک Issue جدید ثبت کنید برای دریافت کمک و پرسش درباره استفاده از این پروژه، لطفاً به راهنمای مشارکت ما مراجعه کنید سیاست پشتیبانی مایکروسافت\nپشتیبانی از این پروژه محدود به منابع ذکر شده در بالا است سلب مسئولیت:\nاین سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است در حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9ddaf22c4f3fa553ef3f1ebede6f0686",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "پشتیبانی",
    "content": "Issue جدید ثبت کنید برای دریافت کمک و پرسش درباره استفاده از این پروژه، لطفاً به راهنمای مشارکت ما مراجعه کنید سیاست پشتیبانی مایکروسافت پشتیبانی از این پروژه محدود به منابع ذکر شده در بالا است سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است در حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشندسند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود برای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شود ما هیچ مسئولیتی در قبال سوءتفاهم‌ها یا تفسیرهای نادرست ناشی از استفاده از این ترجمه نداریم",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5edcf9e2eddb3bb816bb6b86770d8201",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\_404.md",
    "source_type": "git_repo",
    "title": "در حال تکمیل",
    "content": "در حال تکمیل\nما در حال کار بر روی این صفحه هستیم. لطفاً بعداً دوباره بررسی کنید.\nاگر سوالی دارید، یک issue باز کنید.\nبازگشت به صفحه اصلی\nسلب مسئولیت:\nاین سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است. در حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است شامل خطاها یا نادرستی‌ها باشند. سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود. برای اطلاعات حساس، توصیه می‌شود از ترجمه انسانی حرفه‌ای استفاده کنید. ما مسئولیتی در قبال سوء تفاهم‌ها یا تفسیرهای نادرست ناشی از استفاده از این ترجمه نداریم.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1403,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e985e15460d53f78e6e2a85c343f275d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Code de conduite Open Source de Microsoft",
    "content": "Code de conduite Open Source de Microsoft\nCe projet a adopté le Code de conduite Open Source de Microsoft.\nRessources :\nCode de conduite Open Source de Microsoft\nFAQ sur le Code de conduite de Microsoft\nContactez opencode@microsoft.com pour toute question ou préoccupation\nAvertissement :\nCe document a été traduit à l'aide du service de traduction automatique Co-op Translator. Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes. Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité. Pour des informations critiques, il est recommandé de recourir à une traduction professionnelle réalisée par un humain. Nous déclinons toute responsabilité en cas de malentendus ou d'interprétations erronées résultant de l'utilisation de cette traduction.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 209,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cfd2855d7b81944b04cffbacfec7463b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "Contribution",
    "content": "Contribution\nCe projet accueille avec plaisir les contributions et suggestions. La plupart des contributions nécessitent que vous acceptiez un Contrat de Licence de Contributeur (CLA) déclarant que vous avez le droit de, et que vous accordez effectivement, les droits nécessaires pour que nous puissions utiliser votre contribution. Pour plus de détails, visitez https://cla.microsoft.com.\nLorsque vous soumettez une pull request, un CLA-bot déterminera automatiquement si vous devez fournir un CLA et annotera la PR en conséquence (par exemple, étiquette, commentaire). Suivez simplement les instructions fournies par le bot. Vous n'aurez à faire cela qu'une seule fois pour tous les dépôts utilisant notre CLA. Essayez également de nous expliquer pourquoi vous avez effectué ce changement afin que nous puissions mieux comprendre votre demande.\nCe projet a adopté le Code de Conduite Open Source de Microsoft.\nPour plus d'informations, consultez la FAQ sur le Code de Conduite ou contactez opencode@microsoft.com pour toute question ou commentaire supplémentaire.\nAvertissement :\nCe document a été traduit à l'aide du service de traduction automatique Co-op Translator. Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes. Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité. Pour des informations critiques, il est recommandé de recourir à une traduction humaine professionnelle. Nous déclinons toute responsabilité en cas de malentendus ou d'interprétations erronées résultant de l'utilisation de cette traduction.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2246,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c1eac7dba47acf5e584844d9f81043b4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "Pour les enseignants\nSouhaitez-vous utiliser ce programme dans votre classe N'hésitez pas En fait, vous pouvez l'utiliser directement sur GitHub en utilisant GitHub Classroom Pour ce faire, clonez ce dépôt Vous devrez créer un dépôt pour chaque leçon, donc il faudra extraire chaque dossier dans un dépôt séparé Ainsi, GitHub Classroom pourra gérer chaque leçon individuellement Ces instructions complètes vous donneront une idée de la manière de configurer votre classe Utilisation dans Moodle, Canvas ou Blackboard\nCe programme fonctionne très bien dans ces systèmes de gestion de l'apprentissage Utilisez le fichier d'importation Moodle pour accéder à tout le contenu, ou essayez le fichier Common Cartridge qui contient une partie du contenu Moodle Cloud ne prend pas en charge les exports complets de Common Cartridge, il est donc préférable d'utiliser le fichier Moodle qui peut être importé dans Canvas Faites-nous savoir comment nous pouvons améliorer cette expérience Le programme dans une classe Moodle\nLe programme dans Canvas\nUtilisation du dépôt tel quel\nSi vous souhaitez utiliser ce dépôt tel qu'il est, sans passer par GitHub Classroom, cela est également possible Vous devrez communiquer avec vos étudiants pour leur indiquer quelle leçon suivre ensemble Dans un format en ligne (Zoom, Teams ou autre), vous pourriez créer des salles de discussion pour les quiz et encadrer les étudiants afin de les préparer à apprendre Ensuite, invitez les étudiants à participer aux quiz et à soumettre leurs réponses sous forme de 'issues' à un moment donné Vous pourriez faire de même avec les devoirs si vous souhaitez que les étudiants travaillent de manière collaborative et ouverte Si vous préférez un format plus privé, demandez à vos étudiants de cloner le programme, leçon par leçon, dans leurs propres dépôts GitHub privés, et donnez-vous accès Ils pourront alors compléter les quiz et les devoirs de manière privée et vous les soumettre via des issues sur votre dépôt de classe Il existe de nombreuses façons de faire fonctionner ce programme dans un format de classe en ligne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3909,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d45df98cd21debc62a556bd472adbeea",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "les étudiants travaillent de manière collaborative et ouverte Si vous préférez un format plus privé, demandez à vos étudiants de cloner le programme, leçon par leçon, dans leurs propres dépôts GitHub privés, et donnez-vous accès Ils pourront alors compléter les quiz et les devoirs de manière privée et vous les soumettre via des issues sur votre dépôt de classe Il existe de nombreuses façons de faire fonctionner ce programme dans un format de classe en ligneFaites-nous savoir ce qui fonctionne le mieux pour vous Donnez-nous votre avis Nous souhaitons que ce programme soit adapté à vous et à vos étudiants Connectez-vous avec nous dans le coin des enseignants et ouvrez une nouvelle issue pour toute demande, problème ou retour Avertissement :\nCe document a été traduit à l'aide du service de traduction automatique Co-op Translator Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité Pour des informations critiques, il est recommandé de faire appel à une traduction professionnelle humaine Nous déclinons toute responsabilité en cas de malentendus ou d'interprétations erronées résultant de l'utilisation de cette traduction",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3909,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "acf9286799155c1a4e64e2d576184d1f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Sécurité\nMicrosoft prend très au sérieux la sécurité de ses produits logiciels et services, y compris tous les dépôts de code source gérés via nos organisations GitHub, qui incluent Microsoft, Azure, DotNet, AspNet, Xamarin et nos organisations GitHub Si vous pensez avoir découvert une vulnérabilité de sécurité dans un dépôt appartenant à Microsoft qui correspond à la définition d'une vulnérabilité de sécurité de Microsoft, veuillez nous en informer comme décrit ci-dessous Signaler des problèmes de sécurité\nVeuillez ne pas signaler de vulnérabilités de sécurité via les issues publiques de GitHub Au lieu de cela, veuillez les signaler au Microsoft Security Response Center (MSRC) à l'adresse https://msrc microsoft com/create-report Si vous préférez soumettre sans vous connecter, envoyez un email à secure@microsoft com Si possible, chiffrez votre message avec notre clé PGP ; vous pouvez la télécharger depuis la page de la clé PGP du Microsoft Security Response Center Vous devriez recevoir une réponse sous 24 heures Si, pour une raison quelconque, vous ne recevez pas de réponse, veuillez faire un suivi par email pour vous assurer que nous avons bien reçu votre message initial Des informations supplémentaires sont disponibles sur microsoft com/msrc Veuillez inclure les informations demandées ci-dessous (dans la mesure du possible) pour nous aider à mieux comprendre la nature et l'étendue du problème potentiel :\nType de problème (par exemple, dépassement de tampon, injection SQL, script intersite, etc )\nChemins complets des fichiers source liés à la manifestation du problème\nEmplacement du code source affecté (tag/branche/commit ou URL directe)\nToute configuration spéciale requise pour reproduire le problème\nInstructions détaillées pour reproduire le problème\nCode de preuve de concept ou d'exploitation (si possible)\nImpact du problème, y compris comment un attaquant pourrait exploiter le problème\nCes informations nous aideront à prioriser votre rapport plus rapidement Si vous signalez dans le cadre d'un programme de récompense pour bugs, des rapports plus complets peuvent contribuer à une récompense plus élevée",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4248,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "eb9613635f2b3d93476d5e81def678ae",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "du code source affecté (tag/branche/commit ou URL directe) Toute configuration spéciale requise pour reproduire le problème Instructions détaillées pour reproduire le problème Code de preuve de concept ou d'exploitation (si possible) Impact du problème, y compris comment un attaquant pourrait exploiter le problème Ces informations nous aideront à prioriser votre rapport plus rapidement Si vous signalez dans le cadre d'un programme de récompense pour bugs, des rapports plus complets peuvent contribuer à une récompense plus élevéeVeuillez consulter notre page Programme de récompense pour bugs Microsoft pour plus de détails sur nos programmes actifs Langues préférées\nNous préférons que toutes les communications soient en anglais Politique\nMicrosoft suit le principe de la Divulgation coordonnée des vulnérabilités Avertissement :\nCe document a été traduit à l'aide du service de traduction automatique Co-op Translator Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité Pour des informations critiques, il est recommandé de recourir à une traduction professionnelle réalisée par un humain Nous déclinons toute responsabilité en cas de malentendus ou d'interprétations erronées résultant de l'utilisation de cette traduction",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4248,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "57194bc27f6aa08c68268a9aa07890cc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "Support",
    "content": "Support\nComment signaler des problèmes et obtenir de l'aide\nCe projet utilise GitHub Issues pour suivre les bugs et les demandes de fonctionnalités. Veuillez rechercher les problèmes existants avant d'en créer de nouveaux afin d'éviter les doublons. Pour les nouveaux problèmes, signalez votre bug ou demande de fonctionnalité en tant que nouvel Issue.\nPour obtenir de l'aide et poser des questions sur l'utilisation de ce projet, veuillez consulter nos directives de contribution.\nPolitique de support de Microsoft\nLe support pour ce projet se limite aux ressources mentionnées ci-dessus.\nAvertissement :\nCe document a été traduit à l'aide du service de traduction automatique Co-op Translator. Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes. Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité. Pour des informations critiques, il est recommandé de recourir à une traduction humaine professionnelle. Nous déclinons toute responsabilité en cas de malentendus ou d'interprétations erronées résultant de l'utilisation de cette traduction.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1523,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "96bec0b48a50a006c90a7f35e536cb7c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\_404.md",
    "source_type": "git_repo",
    "title": "Travail en cours",
    "content": "Travail en cours\nNous travaillons sur cette page. Veuillez revenir plus tard.\nOuvrez une issue si vous avez des questions.\nRetour à l'accueil\nAvertissement :\nCe document a été traduit à l'aide du service de traduction automatique Co-op Translator. Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes. Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité. Pour des informations critiques, il est recommandé de recourir à une traduction professionnelle réalisée par un humain. Nous ne sommes pas responsables des malentendus ou des interprétations erronées résultant de l'utilisation de cette traduction.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1137,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 182,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8116bb748fcb3d3988e7a38124818933",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی\nاصول توسعه وب را با دوره جامع ۱۲ هفته‌ای ما که توسط Microsoft Cloud Advocates طراحی شده است، بیاموزید هر یک از ۲۴ درس شامل پروژه‌های عملی مانند تراریوم‌ها، افزونه‌های مرورگر و بازی‌های فضایی است که به شما کمک می‌کند جاوااسکریپت، CSS و HTML را یاد بگیرید با آزمون‌ها، بحث‌ها و تکالیف عملی درگیر شوید مهارت‌های خود را تقویت کنید و دانش خود را با روش آموزشی مبتنی بر پروژه بهینه کنید امروز سفر کدنویسی خود را آغاز کنید 🧑‍🎓 دانشجو هستید؟\nبه صفحه مرکز دانشجویان مراجعه کنید، جایی که منابع مبتدی، بسته‌های دانشجویی و حتی راه‌هایی برای دریافت گواهی رایگان را پیدا خواهید کرد",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 0,
    "total_chunks": 28
  },
  {
    "id": "9d921a6f73555baf87d276fa74db9963",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "افزونه‌های مرورگر و بازی‌های فضایی است که به شما کمک می‌کند جاوااسکریپت، CSS و HTML را یاد بگیرید با آزمون‌ها، بحث‌ها و تکالیف عملی درگیر شوید مهارت‌های خود را تقویت کنید و دانش خود را با روش آموزشی مبتنی بر پروژه بهینه کنید امروز سفر کدنویسی خود را آغاز کنید 🧑‍🎓 دانشجو هستید؟ به صفحه مرکز دانشجویان مراجعه کنید، جایی که منابع مبتدی، بسته‌های دانشجویی و حتی راه‌هایی برای دریافت گواهی رایگان را پیدا خواهید کرداین صفحه‌ای است که باید نشانک‌گذاری کنید و هر از گاهی بررسی کنید، زیرا محتوای آن ماهانه تغییر می‌کند 📣 اطلاعیه - برنامه آموزشی جدید در مورد هوش مصنوعی مولد برای جاوااسکریپت منتشر شد\nبرنامه آموزشی جدید هوش مصنوعی مولد ما را از دست ندهید به https://aka ms/genai-js-course مراجعه کنید تا شروع کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 28
  },
  {
    "id": "8a4a276edf52a69afcb7a579755f17cc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "هستید؟ به صفحه مرکز دانشجویان مراجعه کنید، جایی که منابع مبتدی، بسته‌های دانشجویی و حتی راه‌هایی برای دریافت گواهی رایگان را پیدا خواهید کرداین صفحه‌ای است که باید نشانک‌گذاری کنید و هر از گاهی بررسی کنید، زیرا محتوای آن ماهانه تغییر می‌کند 📣 اطلاعیه - برنامه آموزشی جدید در مورد هوش مصنوعی مولد برای جاوااسکریپت منتشر شد برنامه آموزشی جدید هوش مصنوعی مولد ما را از دست ندهید به https://aka ms/genai-js-course مراجعه کنید تا شروع کنیددرس‌هایی که همه چیز را از اصول اولیه تا RAG پوشش می‌دهند تعامل با شخصیت‌های تاریخی با استفاده از GenAI و اپلیکیشن همراه ما روایت جذاب و سرگرم‌کننده، شما در حال سفر در زمان خواهید بود",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 2,
    "total_chunks": 28
  },
  {
    "id": "576f82402654cfbeab791861c1c4a21c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "کنید، زیرا محتوای آن ماهانه تغییر می‌کند 📣 اطلاعیه - برنامه آموزشی جدید در مورد هوش مصنوعی مولد برای جاوااسکریپت منتشر شد برنامه آموزشی جدید هوش مصنوعی مولد ما را از دست ندهید به https://aka ms/genai-js-course مراجعه کنید تا شروع کنیددرس‌هایی که همه چیز را از اصول اولیه تا RAG پوشش می‌دهند تعامل با شخصیت‌های تاریخی با استفاده از GenAI و اپلیکیشن همراه ما روایت جذاب و سرگرم‌کننده، شما در حال سفر در زمان خواهید بودهر درس شامل یک تکلیف برای انجام، یک بررسی دانش و یک چالش است که شما را در یادگیری موضوعاتی مانند:\n- ایجاد درخواست‌ها و مهندسی درخواست\n- تولید اپلیکیشن‌های متن و تصویر\n- اپلیکیشن‌های جستجو\nبه https://aka ms/genai-js-course مراجعه کنید تا شروع کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 28
  },
  {
    "id": "ec19c853cc54ac204d8745aff53bb65d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "چیز را از اصول اولیه تا RAG پوشش می‌دهند تعامل با شخصیت‌های تاریخی با استفاده از GenAI و اپلیکیشن همراه ما روایت جذاب و سرگرم‌کننده، شما در حال سفر در زمان خواهید بودهر درس شامل یک تکلیف برای انجام، یک بررسی دانش و یک چالش است که شما را در یادگیری موضوعاتی مانند: - ایجاد درخواست‌ها و مهندسی درخواست - تولید اپلیکیشن‌های متن و تصویر - اپلیکیشن‌های جستجو به https://aka ms/genai-js-course مراجعه کنید تا شروع کنید🌱 شروع کار\nمعلمان، ما برخی پیشنهادات در مورد نحوه استفاده از این برنامه آموزشی را درج کرده‌ایم مشتاقانه منتظر بازخورد شما در انجمن بحث ما هستیم یادگیرندگان، برای هر درس، با آزمون پیش از درس شروع کنید و سپس مطالب درس را بخوانید، فعالیت‌های مختلف را انجام دهید و با آزمون پس از درس دانش خود را بررسی کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 4,
    "total_chunks": 28
  },
  {
    "id": "0d35dce2c1d4c9d0449b8c5878436e98",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "- تولید اپلیکیشن‌های متن و تصویر - اپلیکیشن‌های جستجو به https://aka ms/genai-js-course مراجعه کنید تا شروع کنید🌱 شروع کار معلمان، ما برخی پیشنهادات در مورد نحوه استفاده از این برنامه آموزشی را درج کرده‌ایم مشتاقانه منتظر بازخورد شما در انجمن بحث ما هستیم یادگیرندگان، برای هر درس، با آزمون پیش از درس شروع کنید و سپس مطالب درس را بخوانید، فعالیت‌های مختلف را انجام دهید و با آزمون پس از درس دانش خود را بررسی کنیدبرای بهبود تجربه یادگیری خود، با همتایان خود ارتباط برقرار کنید تا روی پروژه‌ها با هم کار کنید بحث‌ها در انجمن بحث ما تشویق می‌شوند، جایی که تیم مدیران ما برای پاسخ به سوالات شما در دسترس خواهد بود برای ادامه تحصیل، ما به شدت توصیه می‌کنیم Microsoft Learn را برای مواد آموزشی اضافی بررسی کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 5,
    "total_chunks": 28
  },
  {
    "id": "944fb0a7752dfbc02c4b77f2aaee154e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "سپس مطالب درس را بخوانید، فعالیت‌های مختلف را انجام دهید و با آزمون پس از درس دانش خود را بررسی کنیدبرای بهبود تجربه یادگیری خود، با همتایان خود ارتباط برقرار کنید تا روی پروژه‌ها با هم کار کنید بحث‌ها در انجمن بحث ما تشویق می‌شوند، جایی که تیم مدیران ما برای پاسخ به سوالات شما در دسترس خواهد بود برای ادامه تحصیل، ما به شدت توصیه می‌کنیم Microsoft Learn را برای مواد آموزشی اضافی بررسی کنید📋 تنظیم محیط کاری شما\nاین برنامه آموزشی دارای محیط توسعه آماده است هنگامی که شروع می‌کنید، می‌توانید برنامه آموزشی را در یک Codespace (یک محیط مبتنی بر مرورگر، بدون نیاز به نصب) یا به صورت محلی روی کامپیوتر خود با استفاده از یک ویرایشگر متن مانند Visual Studio Code اجرا کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 6,
    "total_chunks": 28
  },
  {
    "id": "b0abc8767b4acb411ef135e7acffcc57",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "پاسخ به سوالات شما در دسترس خواهد بود برای ادامه تحصیل، ما به شدت توصیه می‌کنیم Microsoft Learn را برای مواد آموزشی اضافی بررسی کنید📋 تنظیم محیط کاری شما این برنامه آموزشی دارای محیط توسعه آماده است هنگامی که شروع می‌کنید، می‌توانید برنامه آموزشی را در یک Codespace (یک محیط مبتنی بر مرورگر، بدون نیاز به نصب) یا به صورت محلی روی کامپیوتر خود با استفاده از یک ویرایشگر متن مانند Visual Studio Code اجرا کنیدایجاد مخزن خود\nبرای اینکه بتوانید به راحتی کار خود را ذخیره کنید، توصیه می‌شود که یک نسخه از این مخزن ایجاد کنید می‌توانید این کار را با کلیک بر روی دکمه Use this template در بالای صفحه انجام دهید این کار یک مخزن جدید در حساب GitHub شما با نسخه‌ای از برنامه آموزشی ایجاد می‌کند مراحل زیر را دنبال کنید:\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 7,
    "total_chunks": 28
  },
  {
    "id": "5d298840a686482e068b3a673c4343cf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "روی کامپیوتر خود با استفاده از یک ویرایشگر متن مانند Visual Studio Code اجرا کنیدایجاد مخزن خود برای اینکه بتوانید به راحتی کار خود را ذخیره کنید، توصیه می‌شود که یک نسخه از این مخزن ایجاد کنید می‌توانید این کار را با کلیک بر روی دکمه Use this template در بالای صفحه انجام دهید این کار یک مخزن جدید در حساب GitHub شما با نسخه‌ای از برنامه آموزشی ایجاد می‌کند مراحل زیر را دنبال کنید: 1فورک کردن مخزن: روی دکمه \"Fork\" در گوشه بالا-راست این صفحه کلیک کنید 2 کلون کردن مخزن:   git clone https://github com/microsoft/Web-Dev-For-Beginners git\nاجرای برنامه آموزشی در یک Codespace\nدر نسخه‌ای از این مخزن که ایجاد کرده‌اید، روی دکمه Code کلیک کنید و گزینه Open with Codespaces را انتخاب کنید این کار یک Codespace جدید برای شما ایجاد می‌کند تا در آن کار کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 8,
    "total_chunks": 28
  },
  {
    "id": "5fc09391828d5ee391802c6cd13320c7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "شما با نسخه‌ای از برنامه آموزشی ایجاد می‌کند مراحل زیر را دنبال کنید: 1فورک کردن مخزن: روی دکمه \"Fork\" در گوشه بالا-راست این صفحه کلیک کنید 2 کلون کردن مخزن: git clone https://github com/microsoft/Web-Dev-For-Beginners git اجرای برنامه آموزشی در یک Codespace در نسخه‌ای از این مخزن که ایجاد کرده‌اید، روی دکمه Code کلیک کنید و گزینه Open with Codespaces را انتخاب کنید این کار یک Codespace جدید برای شما ایجاد می‌کند تا در آن کار کنیداجرای برنامه آموزشی به صورت محلی روی کامپیوتر شما\nبرای اجرای این برنامه آموزشی به صورت محلی روی کامپیوتر خود، به یک ویرایشگر متن، یک مرورگر و یک ابزار خط فرمان نیاز دارید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 9,
    "total_chunks": 28
  },
  {
    "id": "14ae4c8b70d36d9f2970606fbcf9f16a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "https://github com/microsoft/Web-Dev-For-Beginners git اجرای برنامه آموزشی در یک Codespace در نسخه‌ای از این مخزن که ایجاد کرده‌اید، روی دکمه Code کلیک کنید و گزینه Open with Codespaces را انتخاب کنید این کار یک Codespace جدید برای شما ایجاد می‌کند تا در آن کار کنیداجرای برنامه آموزشی به صورت محلی روی کامپیوتر شما برای اجرای این برنامه آموزشی به صورت محلی روی کامپیوتر خود، به یک ویرایشگر متن، یک مرورگر و یک ابزار خط فرمان نیاز داریددرس اول ما، معرفی زبان‌های برنامه‌نویسی و ابزارهای مورد استفاده، شما را با گزینه‌های مختلف برای هر یک از این ابزارها آشنا می‌کند تا بتوانید آنچه برای شما مناسب است را انتخاب کنید توصیه ما این است که از Visual Studio Code به عنوان ویرایشگر خود استفاده کنید، که همچنین دارای یک ترمینال داخلی است می‌توانید Visual Studio Code را از اینجا دانلود کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 10,
    "total_chunks": 28
  },
  {
    "id": "2200ad71c803a47dfafa01dba1c20ee3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "به یک ویرایشگر متن، یک مرورگر و یک ابزار خط فرمان نیاز داریددرس اول ما، معرفی زبان‌های برنامه‌نویسی و ابزارهای مورد استفاده، شما را با گزینه‌های مختلف برای هر یک از این ابزارها آشنا می‌کند تا بتوانید آنچه برای شما مناسب است را انتخاب کنید توصیه ما این است که از Visual Studio Code به عنوان ویرایشگر خود استفاده کنید، که همچنین دارای یک ترمینال داخلی است می‌توانید Visual Studio Code را از اینجا دانلود کنیدمخزن خود را روی کامپیوتر کلون کنید می‌توانید این کار را با کلیک بر روی دکمه Code و کپی کردن URL انجام دهید:\nسپس، ترمینال را در Visual Studio Code باز کنید و دستور زیر را اجرا کنید، جایگزین <your-repository-url> با URL که کپی کرده‌اید:\nbash\ngit clone <your-repository-url>\nپوشه را در Visual Studio Code باز کنید می‌توانید این کار را با کلیک بر روی File > Open Folder و انتخاب پوشه‌ای که کلون کرده‌اید انجام دهید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 11,
    "total_chunks": 28
  },
  {
    "id": "5ca8d8d755c926af588f5bda8a6fe5fb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "خود را روی کامپیوتر کلون کنید می‌توانید این کار را با کلیک بر روی دکمه Code و کپی کردن URL انجام دهید: سپس، ترمینال را در Visual Studio Code باز کنید و دستور زیر را اجرا کنید، جایگزین <your-repository-url> با URL که کپی کرده‌اید: bash git clone <your-repository-url> پوشه را در Visual Studio Code باز کنید می‌توانید این کار را با کلیک بر روی File > Open Folder و انتخاب پوشه‌ای که کلون کرده‌اید انجام دهیدافزونه‌های توصیه‌شده برای Visual Studio Code:\nLive Server - برای پیش‌نمایش صفحات HTML در Visual Studio Code\nCopilot - برای کمک به نوشتن سریع‌تر کد\n📂 هر درس شامل:\nاسکچ‌نوت اختیاری\nویدئوی تکمیلی اختیاری\nآزمون گرم کردن پیش از درس\nدرس نوشته شده\nبرای درس‌های مبتنی بر پروژه، راهنمای گام به گام برای ساخت پروژه\nبررسی دانش\nیک چالش\nمطالعه تکمیلی\nتکلیف\nآزمون پس از درس\nنکته‌ای درباره آزمون‌ها: همه آزمون‌ها در پوشه Quiz-app قرار دارند، ۴۸ آزمون با سه سوال در هر آزمون",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 526,
    "chunk_index": 12,
    "total_chunks": 28
  },
  {
    "id": "5ad3850b000eb688405083be47e5828a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "- برای پیش‌نمایش صفحات HTML در Visual Studio Code Copilot - برای کمک به نوشتن سریع‌تر کد 📂 هر درس شامل: اسکچ‌نوت اختیاری ویدئوی تکمیلی اختیاری آزمون گرم کردن پیش از درس درس نوشته شده برای درس‌های مبتنی بر پروژه، راهنمای گام به گام برای ساخت پروژه بررسی دانش یک چالش مطالعه تکمیلی تکلیف آزمون پس از درس نکته‌ای درباره آزمون‌ها: همه آزمون‌ها در پوشه Quiz-app قرار دارند، ۴۸ آزمون با سه سوال در هر آزمونآن‌ها از داخل درس‌ها لینک شده‌اند و اپلیکیشن آزمون می‌تواند به صورت محلی اجرا شود یا در Azure مستقر شود؛ دستورالعمل‌ها را در پوشه quiz-app دنبال کنید این آزمون‌ها به تدریج بومی‌سازی می‌شوند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 13,
    "total_chunks": 28
  },
  {
    "id": "eb1de213fbfedc25d79c078a56958d02",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "درس نوشته شده برای درس‌های مبتنی بر پروژه، راهنمای گام به گام برای ساخت پروژه بررسی دانش یک چالش مطالعه تکمیلی تکلیف آزمون پس از درس نکته‌ای درباره آزمون‌ها: همه آزمون‌ها در پوشه Quiz-app قرار دارند، ۴۸ آزمون با سه سوال در هر آزمونآن‌ها از داخل درس‌ها لینک شده‌اند و اپلیکیشن آزمون می‌تواند به صورت محلی اجرا شود یا در Azure مستقر شود؛ دستورالعمل‌ها را در پوشه quiz-app دنبال کنید این آزمون‌ها به تدریج بومی‌سازی می‌شوند🗃️ درس‌ها\n|     |                       نام پروژه                       |                            مفاهیم آموزش داده شده                             | اهداف یادگیری                                                                                                                 |                                                         درس مرتبط                                                          |         نویسنده          |\n| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     شروع کار                      |           معرفی برنامه‌نویسی و ابزارهای مورد استفاده           | یادگیری اصول اولیه اکثر زبان‌های برنامه‌نویسی و نرم‌افزارهایی که به توسعه‌دهندگان حرفه‌ای کمک می‌کنند کار خود را انجام دهند | معرفی زبان‌های برنامه‌نویسی و ابزارهای مورد استفاده |         Jasmine         |\n| 02  |                     شروع کار                      |             اصول اولیه GitHub، شامل کار با تیم             | نحوه استفاده از GitHub در پروژه خود، نحوه همکاری با دیگران روی یک کد بیس                                                    |                            معرفی GitHub                             |          Floor          |\n| 03  |                     شروع کار                      |                             دسترسی‌پذیری                              | یادگیری اصول اولیه دسترسی‌پذیری وب                                                                                               |                       اصول دسترسی‌پذیری                       |       Christopher       |\n| 04  |                        اصول جاوااسکریپت                         |                         انواع داده جاوااسکریپت                          | اصول اولیه انواع داده جاوااسکریپت                                                                                                 |                                       انواع داده                                        |         Jasmine         |\n| 05  |                        اصول جاوااسکریپت                         |                         توابع و متدها                          | یادگیری درباره توابع و متدها برای مدیریت جریان منطقی یک اپلیکیشن                                                             |                              توابع و متدها                               | Jasmine and Christopher |\n| 06  |                        اصول جاوااسکریپت                         |                        تصمیم‌گیری با جاوااسکریپت                        | یادگیری نحوه ایجاد شرایط در کد با استفاده از روش‌های تصمیم‌گیری                                                           |                                 تصمیم‌گیری                                  |         Jasmine         |\n| 07  |                        اصول جاوااسکریپت                         |                            آرایه‌ها و حلقه‌ها                            | کار با داده‌ها با استفاده از آرایه‌ها و حلقه‌ها در جاوااسکریپت                                                                                 |                                   آرایه‌ها و حلقه‌ها                                    |         Jasmine         |\n| 08  |       تراریوم       |                            HTML در عمل                            | ساخت HTML برای ایجاد یک تراریوم آنلاین، با تمرکز بر ساخت یک طرح‌بندی                                                         |                                 معرفی HTML                                 |           Jen           |\n| 09  |       تراریوم       |                            CSS در عمل                             | ساخت CSS برای استایل‌دهی به تراریوم آنلاین، با تمرکز بر اصول اولیه CSS از جمله پاسخگو کردن صفحه                     |                                  معرفی CSS                                  |           Jen           |\n| 10  |            تراریوم            |                 بسته‌های جاوااسکریپت، دستکاری DOM                  | ساخت جاوااسکریپت برای عملکرد تراریوم به عنوان یک رابط کشیدن و رها کردن، با تمرکز بر بسته‌ها و دستکاری DOM             |                  بسته‌های جاوااسکریپت، دستکاری DOM                   |           Jen           |\n| 11  |          بازی تایپ          |                          ساخت یک بازی تایپ                           | یادگیری نحوه استفاده از رویدادهای صفحه کلید برای هدایت منطق اپلیکیشن جاوااسکریپت                                                          |                                برنامه‌نویسی مبتنی بر رویداد                                |       Christopher       |\n| 12  | افزونه مرورگر سبز |                         کار با مرورگرها                          | یاد بگیرید مرورگرها چگونه کار می‌کنند، تاریخچه آن‌ها و چگونه اولین عناصر یک افزونه مرورگر را ایجاد کنید                               |                               درباره مرورگرها                                |           جن           |\n| 13  | افزونه مرورگر سبز | ساخت فرم، فراخوانی API و ذخیره متغیرها در حافظه محلی | عناصر جاوااسکریپت افزونه مرورگر خود را برای فراخوانی یک API با استفاده از متغیرهای ذخیره‌شده در حافظه محلی بسازید                      |                APIها، فرم‌ها و حافظه محلی                 |           جن           |\n| 14  | افزونه مرورگر سبز |          فرآیندهای پس‌زمینه در مرورگر، عملکرد وب          | از فرآیندهای پس‌زمینه مرورگر برای مدیریت آیکون افزونه استفاده کنید؛ درباره عملکرد وب و برخی بهینه‌سازی‌ها برای بهبود یاد بگیرید   |             وظایف پس‌زمینه و عملکرد              |           جن           |\n| 15  |           بازی فضایی           |             توسعه پیشرفته‌تر بازی با جاوااسکریپت             | درباره وراثت با استفاده از کلاس‌ها و ترکیب و الگوی Pub/Sub یاد بگیرید، به‌عنوان مقدمه‌ای برای ساخت یک بازی              |                      مقدمه‌ای بر توسعه پیشرفته بازی                       |          کریس          |\n| 16  |           بازی فضایی           |                           رسم روی بوم                            | درباره API بوم یاد بگیرید که برای رسم عناصر روی صفحه استفاده می‌شود                                                                       |                                رسم روی بوم                                |          کریس          |\n| 17  |           بازی فضایی           |                   حرکت دادن عناصر روی صفحه                    | کشف کنید که چگونه عناصر می‌توانند با استفاده از مختصات دکارتی و API بوم حرکت کنند                                            |                           حرکت دادن عناصر                           |          کریس          |\n| 18  |           بازی فضایی           |                          تشخیص برخورد                           | عناصر را به هم برخورد دهید و با استفاده از کلیدهای فشرده‌شده واکنش نشان دهید و یک تابع خنک‌کننده برای اطمینان از عملکرد بازی ارائه دهید    |                              تشخیص برخورد                              |          کریس          |\n| 19  |           بازی فضایی           |                             ثبت امتیاز                              | محاسبات ریاضی را بر اساس وضعیت و عملکرد بازی انجام دهید                                                                |                                    ثبت امتیاز                                    |          کریس          |\n| 20  |           بازی فضایی           |                     پایان دادن و شروع مجدد بازی                     | درباره پایان دادن و شروع مجدد بازی، از جمله پاک‌سازی منابع و بازنشانی مقادیر متغیرها یاد بگیرید                              |                                شرایط پایان                                 |          کریس          |\n| 21  |         اپلیکیشن بانکی          |                 قالب‌های HTML و مسیرها در یک اپ وب                 | یاد بگیرید چگونه ساختار یک وب‌سایت چندصفحه‌ای را با استفاده از مسیریابی و قالب‌های HTML ایجاد کنید                             |                            قالب‌های HTML و مسیرها                             |          یوهان          |\n| 22  |         اپلیکیشن بانکی          |                  ساخت فرم ورود و ثبت‌نام                   | درباره ساخت فرم‌ها و مدیریت روال‌های اعتبارسنجی یاد بگیرید                                                                          |                                           فرم‌ها                                           |          یوهان          |\n| 23  |         اپلیکیشن بانکی          |                   روش‌های دریافت و استفاده از داده‌ها                   | جریان داده‌ها درون و بیرون اپلیکیشن شما، نحوه دریافت، ذخیره و حذف آن‌ها را یاد بگیرید                                                 |                                            داده‌ها                                            |          یوهان          |\n| 24  |         اپلیکیشن بانکی          |                      مفاهیم مدیریت وضعیت                      | یاد بگیرید اپلیکیشن شما چگونه وضعیت را حفظ می‌کند و چگونه آن را به‌صورت برنامه‌نویسی مدیریت کنید                                                              |                                مدیریت وضعیت                                |          یوهان          |\n🏫 آموزش\nبرنامه درسی ما با دو اصل کلیدی آموزشی طراحی شده است:\n* یادگیری مبتنی بر پروژه\n* آزمون‌های مکرر\nاین برنامه اصول اولیه جاوااسکریپت، HTML و CSS را آموزش می‌دهد، همچنین ابزارها و تکنیک‌های جدیدی که توسعه‌دهندگان وب امروزی استفاده می‌کنند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 3478,
    "chunk_index": 14,
    "total_chunks": 28
  },
  {
    "id": "6cb7453c02dfece5cc29575e1935cca7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "| 24 | اپلیکیشن بانکی | مفاهیم مدیریت وضعیت | یاد بگیرید اپلیکیشن شما چگونه وضعیت را حفظ می‌کند و چگونه آن را به‌صورت برنامه‌نویسی مدیریت کنید | مدیریت وضعیت | یوهان | 🏫 آموزش برنامه درسی ما با دو اصل کلیدی آموزشی طراحی شده است: * یادگیری مبتنی بر پروژه * آزمون‌های مکرر این برنامه اصول اولیه جاوااسکریپت، HTML و CSS را آموزش می‌دهد، همچنین ابزارها و تکنیک‌های جدیدی که توسعه‌دهندگان وب امروزی استفاده می‌کننددانش‌آموزان فرصت خواهند داشت تا تجربه عملی کسب کنند با ساخت یک بازی تایپ، تراریوم مجازی، افزونه مرورگر سازگار با محیط زیست، بازی به سبک مهاجمان فضایی و یک اپلیکیشن بانکی برای کسب‌وکارها تا پایان این دوره، دانش‌آموزان درک جامعی از توسعه وب به دست خواهند آورد",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 15,
    "total_chunks": 28
  },
  {
    "id": "373f323b7a1daf0a6611db5582c47beb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "* یادگیری مبتنی بر پروژه * آزمون‌های مکرر این برنامه اصول اولیه جاوااسکریپت، HTML و CSS را آموزش می‌دهد، همچنین ابزارها و تکنیک‌های جدیدی که توسعه‌دهندگان وب امروزی استفاده می‌کننددانش‌آموزان فرصت خواهند داشت تا تجربه عملی کسب کنند با ساخت یک بازی تایپ، تراریوم مجازی، افزونه مرورگر سازگار با محیط زیست، بازی به سبک مهاجمان فضایی و یک اپلیکیشن بانکی برای کسب‌وکارها تا پایان این دوره، دانش‌آموزان درک جامعی از توسعه وب به دست خواهند آورد🎓 می‌توانید چند درس اول این برنامه درسی را به‌عنوان مسیر یادگیری در Microsoft Learn بگذرانید با اطمینان از اینکه محتوا با پروژه‌ها هماهنگ است، فرآیند برای دانش‌آموزان جذاب‌تر می‌شود و حفظ مفاهیم تقویت خواهد شد",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 16,
    "total_chunks": 28
  },
  {
    "id": "e4c51d05862b3e278bdd4b57fa70590f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "عملی کسب کنند با ساخت یک بازی تایپ، تراریوم مجازی، افزونه مرورگر سازگار با محیط زیست، بازی به سبک مهاجمان فضایی و یک اپلیکیشن بانکی برای کسب‌وکارها تا پایان این دوره، دانش‌آموزان درک جامعی از توسعه وب به دست خواهند آورد🎓 می‌توانید چند درس اول این برنامه درسی را به‌عنوان مسیر یادگیری در Microsoft Learn بگذرانید با اطمینان از اینکه محتوا با پروژه‌ها هماهنگ است، فرآیند برای دانش‌آموزان جذاب‌تر می‌شود و حفظ مفاهیم تقویت خواهد شدما همچنین چند درس مقدماتی در اصول جاوااسکریپت نوشتیم تا مفاهیم را معرفی کنیم، همراه با ویدئویی از مجموعه \"سری مبتدیان: جاوااسکریپت\" که برخی از نویسندگان آن در این برنامه درسی مشارکت داشتند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 17,
    "total_chunks": 28
  },
  {
    "id": "4f0c9924a74757521449bcb14150b3ba",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "درک جامعی از توسعه وب به دست خواهند آورد🎓 می‌توانید چند درس اول این برنامه درسی را به‌عنوان مسیر یادگیری در Microsoft Learn بگذرانید با اطمینان از اینکه محتوا با پروژه‌ها هماهنگ است، فرآیند برای دانش‌آموزان جذاب‌تر می‌شود و حفظ مفاهیم تقویت خواهد شدما همچنین چند درس مقدماتی در اصول جاوااسکریپت نوشتیم تا مفاهیم را معرفی کنیم، همراه با ویدئویی از مجموعه \"سری مبتدیان: جاوااسکریپت\" که برخی از نویسندگان آن در این برنامه درسی مشارکت داشتندعلاوه بر این، یک آزمون کم‌فشار قبل از کلاس، نیت دانش‌آموز را به سمت یادگیری یک موضوع هدایت می‌کند، در حالی که یک آزمون دوم بعد از کلاس، حفظ بیشتر را تضمین می‌کند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 18,
    "total_chunks": 28
  },
  {
    "id": "6fd2138b0e5d1eca60bb8d7ca0ee4094",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "است، فرآیند برای دانش‌آموزان جذاب‌تر می‌شود و حفظ مفاهیم تقویت خواهد شدما همچنین چند درس مقدماتی در اصول جاوااسکریپت نوشتیم تا مفاهیم را معرفی کنیم، همراه با ویدئویی از مجموعه \"سری مبتدیان: جاوااسکریپت\" که برخی از نویسندگان آن در این برنامه درسی مشارکت داشتندعلاوه بر این، یک آزمون کم‌فشار قبل از کلاس، نیت دانش‌آموز را به سمت یادگیری یک موضوع هدایت می‌کند، در حالی که یک آزمون دوم بعد از کلاس، حفظ بیشتر را تضمین می‌کنداین برنامه درسی به‌گونه‌ای طراحی شده است که انعطاف‌پذیر و سرگرم‌کننده باشد و می‌توان آن را به‌طور کامل یا جزئی گذراند پروژه‌ها کوچک شروع می‌شوند و تا پایان چرخه ۱۲ هفته‌ای به‌طور فزاینده‌ای پیچیده می‌شوند",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 19,
    "total_chunks": 28
  },
  {
    "id": "ad477a567821e1fbbc9ff6ae4198f3c2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "برخی از نویسندگان آن در این برنامه درسی مشارکت داشتندعلاوه بر این، یک آزمون کم‌فشار قبل از کلاس، نیت دانش‌آموز را به سمت یادگیری یک موضوع هدایت می‌کند، در حالی که یک آزمون دوم بعد از کلاس، حفظ بیشتر را تضمین می‌کنداین برنامه درسی به‌گونه‌ای طراحی شده است که انعطاف‌پذیر و سرگرم‌کننده باشد و می‌توان آن را به‌طور کامل یا جزئی گذراند پروژه‌ها کوچک شروع می‌شوند و تا پایان چرخه ۱۲ هفته‌ای به‌طور فزاینده‌ای پیچیده می‌شونددر حالی که ما عمداً از معرفی فریم‌ورک‌های جاوااسکریپت اجتناب کردیم تا بر مهارت‌های اساسی مورد نیاز به‌عنوان یک توسعه‌دهنده وب قبل از استفاده از یک فریم‌ورک تمرکز کنیم، یک گام بعدی خوب پس از تکمیل این برنامه درسی، یادگیری درباره Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 20,
    "total_chunks": 28
  },
  {
    "id": "d1191cde5d302003df562a0988a75570",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "می‌کنداین برنامه درسی به‌گونه‌ای طراحی شده است که انعطاف‌پذیر و سرگرم‌کننده باشد و می‌توان آن را به‌طور کامل یا جزئی گذراند پروژه‌ها کوچک شروع می‌شوند و تا پایان چرخه ۱۲ هفته‌ای به‌طور فزاینده‌ای پیچیده می‌شونددر حالی که ما عمداً از معرفی فریم‌ورک‌های جاوااسکریپت اجتناب کردیم تا بر مهارت‌های اساسی مورد نیاز به‌عنوان یک توسعه‌دهنده وب قبل از استفاده از یک فریم‌ورک تمرکز کنیم، یک گام بعدی خوب پس از تکمیل این برنامه درسی، یادگیری درباره Nodejs از طریق مجموعه دیگری از ویدئوها است: \"سری مبتدیان: Node js\" به قوانین رفتاری و دستورالعمل‌های مشارکت ما مراجعه کنید ما از بازخورد سازنده شما استقبال می‌کنیم 🧭 دسترسی آفلاین\nمی‌توانید این مستندات را به‌صورت آفلاین با استفاده از Docsify اجرا کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 21,
    "total_chunks": 28
  },
  {
    "id": "2dd2194554db39297643fe0b7794c88d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "جاوااسکریپت اجتناب کردیم تا بر مهارت‌های اساسی مورد نیاز به‌عنوان یک توسعه‌دهنده وب قبل از استفاده از یک فریم‌ورک تمرکز کنیم، یک گام بعدی خوب پس از تکمیل این برنامه درسی، یادگیری درباره Nodejs از طریق مجموعه دیگری از ویدئوها است: \"سری مبتدیان: Node js\" به قوانین رفتاری و دستورالعمل‌های مشارکت ما مراجعه کنید ما از بازخورد سازنده شما استقبال می‌کنیم 🧭 دسترسی آفلاین می‌توانید این مستندات را به‌صورت آفلاین با استفاده از Docsify اجرا کنیداین مخزن را فورک کنید، Docsify را نصب کنید روی دستگاه محلی خود، و سپس در پوشه اصلی این مخزن، دستور docsify serve را تایپ کنید وب‌سایت روی پورت ۳۰۰۰ در localhost شما ارائه خواهد شد: localhost:3000 📘 PDF\nیک فایل PDF از تمام درس‌ها را می‌توانید اینجا پیدا کنید",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 22,
    "total_chunks": 28
  },
  {
    "id": "71aa962407b7799a84d98fc6bb9eca26",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "دستورالعمل‌های مشارکت ما مراجعه کنید ما از بازخورد سازنده شما استقبال می‌کنیم 🧭 دسترسی آفلاین می‌توانید این مستندات را به‌صورت آفلاین با استفاده از Docsify اجرا کنیداین مخزن را فورک کنید، Docsify را نصب کنید روی دستگاه محلی خود، و سپس در پوشه اصلی این مخزن، دستور docsify serve را تایپ کنید وب‌سایت روی پورت ۳۰۰۰ در localhost شما ارائه خواهد شد: localhost:3000 📘 PDF یک فایل PDF از تمام درس‌ها را می‌توانید اینجا پیدا کنید🎒 دوره‌های دیگر\nتیم ما دوره‌های دیگری نیز تولید می‌کند بررسی کنید:\nهوش مصنوعی مولد برای مبتدیان\nهوش مصنوعی مولد برای مبتدیان",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 23,
    "total_chunks": 28
  },
  {
    "id": "e0713569d1a987144ebd0a0ae6c30361",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "با استفاده از Docsify اجرا کنیداین مخزن را فورک کنید، Docsify را نصب کنید روی دستگاه محلی خود، و سپس در پوشه اصلی این مخزن، دستور docsify serve را تایپ کنید وب‌سایت روی پورت ۳۰۰۰ در localhost شما ارائه خواهد شد: localhost:3000 📘 PDF یک فایل PDF از تمام درس‌ها را می‌توانید اینجا پیدا کنید🎒 دوره‌های دیگر تیم ما دوره‌های دیگری نیز تولید می‌کند بررسی کنید: هوش مصنوعی مولد برای مبتدیان هوش مصنوعی مولد برای مبتدیانNET\nهوش مصنوعی مولد با جاوااسکریپت\nهوش مصنوعی مولد با جاوا\nهوش مصنوعی برای مبتدیان\nعلم داده برای مبتدیان\nیادگیری ماشین برای مبتدیان\nامنیت سایبری برای مبتدیان\nتوسعه وب برای مبتدیان\nاینترنت اشیا برای مبتدیان\nتوسعه XR برای مبتدیان\nتسلط بر GitHub Copilot برای استفاده عامل‌محور\nتسلط بر GitHub Copilot برای توسعه‌دهندگان C#/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 24,
    "total_chunks": 28
  },
  {
    "id": "645abbeea47567f3e79d6f69e4326ffb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "اینجا پیدا کنید🎒 دوره‌های دیگر تیم ما دوره‌های دیگری نیز تولید می‌کند بررسی کنید: هوش مصنوعی مولد برای مبتدیان هوش مصنوعی مولد برای مبتدیانNET هوش مصنوعی مولد با جاوااسکریپت هوش مصنوعی مولد با جاوا هوش مصنوعی برای مبتدیان علم داده برای مبتدیان یادگیری ماشین برای مبتدیان امنیت سایبری برای مبتدیان توسعه وب برای مبتدیان اینترنت اشیا برای مبتدیان توسعه XR برای مبتدیان تسلط بر GitHub Copilot برای استفاده عامل‌محور تسلط بر GitHub Copilot برای توسعه‌دهندگان C#/NET\nماجراجویی خود را با Copilot انتخاب کنید\nمجوز\nاین مخزن تحت مجوز MIT منتشر شده است برای اطلاعات بیشتر به فایل LICENSE مراجعه کنید سلب مسئولیت:\nاین سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده است",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 25,
    "total_chunks": 28
  },
  {
    "id": "db1f83b1a0046f929ad6834c32477ca4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "برای مبتدیان یادگیری ماشین برای مبتدیان امنیت سایبری برای مبتدیان توسعه وب برای مبتدیان اینترنت اشیا برای مبتدیان توسعه XR برای مبتدیان تسلط بر GitHub Copilot برای استفاده عامل‌محور تسلط بر GitHub Copilot برای توسعه‌دهندگان C#/NET ماجراجویی خود را با Copilot انتخاب کنید مجوز این مخزن تحت مجوز MIT منتشر شده است برای اطلاعات بیشتر به فایل LICENSE مراجعه کنید سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود برای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شود",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 26,
    "total_chunks": 28
  },
  {
    "id": "9ef37dbe2475d5bf3c01a497b80e5d10",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fa\\README.md",
    "source_type": "git_repo",
    "title": "آموزش توسعه وب برای مبتدیان - یک برنامه آموزشی",
    "content": "تحت مجوز MIT منتشر شده است برای اطلاعات بیشتر به فایل LICENSE مراجعه کنید سلب مسئولیت: این سند با استفاده از سرویس ترجمه هوش مصنوعی Co-op Translator ترجمه شده استدر حالی که ما تلاش می‌کنیم دقت را حفظ کنیم، لطفاً توجه داشته باشید که ترجمه‌های خودکار ممکن است حاوی خطاها یا نادرستی‌هایی باشند سند اصلی به زبان اصلی آن باید به عنوان منبع معتبر در نظر گرفته شود برای اطلاعات حساس، ترجمه حرفه‌ای انسانی توصیه می‌شودما هیچ مسئولیتی در قبال سوءتفاهم‌ها یا تفسیرهای نادرست ناشی از استفاده از این ترجمه نداریم",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 32480,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fa\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 27,
    "total_chunks": 28
  },
  {
    "id": "37666f5cc7cab32ab4d07d5703eff4d9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft ओपन सोर्स आचार संहिता",
    "content": "Microsoft ओपन सोर्स आचार संहिता\nइस प्रोजेक्ट ने Microsoft ओपन सोर्स आचार संहिता को अपनाया है।\nसंसाधन:\nMicrosoft ओपन सोर्स आचार संहिता\nMicrosoft आचार संहिता FAQ\nप्रश्न या चिंताओं के लिए opencode@microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2163,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 147,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4f6b4d3ba27076004a8ca8d7f43c7388",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft ओपन सोर्स आचार संहिता",
    "content": "Microsoft ओपन सोर्स आचार संहिता\nइस प्रोजेक्ट ने Microsoft ओपन सोर्स आचार संहिता को अपनाया है।\nसंसाधन:\nMicrosoft ओपन सोर्स आचार संहिता\nMicrosoft आचार संहिता FAQ\nप्रश्न या चिंताओं के लिए opencode@microsoftcom से संपर्क करें\nअस्वीकरण:\nयह दस्तावेज़ AI अनुवाद सेवा Co-op Translator का उपयोग करके अनुवादित किया गया है। जबकि हम सटीकता के लिए प्रयासरत हैं, कृपया ध्यान दें कि स्वचालित अनुवाद में त्रुटियां या अशुद्धियां हो सकती हैं। मूल भाषा में उपलब्ध मूल दस्तावेज़ को प्रामाणिक स्रोत माना जाना चाहिए। महत्वपूर्ण जानकारी के लिए, पेशेवर मानव अनुवाद की सिफारिश की जाती है। इस अनुवाद के उपयोग से उत्पन्न किसी भी गलतफहमी या गलत व्याख्या के लिए हम उत्तरदायी नहीं हैं।",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2163,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 576,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "84e7088c805c6de6aac913e6ee444a99",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "योगदान",
    "content": "योगदान\nयह प्रोजेक्ट योगदान और सुझावों का स्वागत करता है। अधिकांश योगदानों के लिए आपको एक Contributor License Agreement (CLA) से सहमत होना होगा, जिसमें यह घोषित किया जाता है कि आपके पास अपने योगदान का उपयोग करने का अधिकार है और आप वास्तव में हमें यह अधिकार प्रदान करते हैं। अधिक जानकारी के लिए, https://cla microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3852,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d56d0d6b5f436c62041c7463991d4b47",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "योगदान",
    "content": "योगदान\nयह प्रोजेक्ट योगदान और सुझावों का स्वागत करता है। अधिकांश योगदानों के लिए आपको एक Contributor License Agreement (CLA) से सहमत होना होगा, जिसमें यह घोषित किया जाता है कि आपके पास अपने योगदान का उपयोग करने का अधिकार है और आप वास्तव में हमें यह अधिकार प्रदान करते हैं। अधिक जानकारी के लिए, https://cla microsoftcom पर जाएं।\nजब आप एक पुल अनुरोध (pull request) सबमिट करते हैं, तो एक CLA-बॉट स्वचालित रूप से यह निर्धारित करेगा कि क्या आपको CLA प्रदान करने की आवश्यकता है और PR को उचित रूप से सजाएगा (जैसे, लेबल, टिप्पणी)। बस बॉट द्वारा दिए गए निर्देशों का पालन करें। आपको यह केवल एक बार सभी रिपॉजिटरीज़ में करना होगा जो हमारे CLA का उपयोग करती हैं। कृपया यह भी बताने की कोशिश करें कि आपने वह बदलाव क्यों किया ताकि हम आपके अनुरोध को बेहतर तरीके से समझ सकें।\nइस प्रोजेक्ट ने Microsoft Open Source Code of Conduct को अपनाया है। अधिक जानकारी के लिए, Code of Conduct FAQ देखें या किसी भी अतिरिक्त प्रश्न या टिप्पणी के लिए opencode@microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3852,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 805,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c08e0ba28a912206073335c617d28b6b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "योगदान",
    "content": "गए निर्देशों का पालन करें। आपको यह केवल एक बार सभी रिपॉजिटरीज़ में करना होगा जो हमारे CLA का उपयोग करती हैं। कृपया यह भी बताने की कोशिश करें कि आपने वह बदलाव क्यों किया ताकि हम आपके अनुरोध को बेहतर तरीके से समझ सकें। इस प्रोजेक्ट ने Microsoft Open Source Code of Conduct को अपनाया है। अधिक जानकारी के लिए, Code of Conduct FAQ देखें या किसी भी अतिरिक्त प्रश्न या टिप्पणी के लिए opencode@microsoftcom से संपर्क करें।\nअस्वीकरण:\nयह दस्तावेज़ AI अनुवाद सेवा Co-op Translator का उपयोग करके अनुवादित किया गया है। जबकि हम सटीकता के लिए प्रयासरत हैं, कृपया ध्यान दें कि स्वचालित अनुवाद में त्रुटियां या अशुद्धियां हो सकती हैं। मूल भाषा में उपलब्ध मूल दस्तावेज़ को प्रामाणिक स्रोत माना जाना चाहिए। महत्वपूर्ण जानकारी के लिए, पेशेवर मानव अनुवाद की सिफारिश की जाती है। इस अनुवाद के उपयोग से उत्पन्न किसी भी गलतफहमी या गलत व्याख्या के लिए हम उत्तरदायी नहीं हैं।",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3852,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 754,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "34d0399c3c2b53a39c3375c584f122ca",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "Développement Web pour Débutants - Un Programme\nApprenez les bases du développement web avec notre cours complet de 12 semaines proposé par les Microsoft Cloud Advocates Chacune des 24 leçons explore JavaScript, CSS et HTML à travers des projets pratiques comme des terrariums, des extensions de navigateur et des jeux spatiaux Participez à des quiz, des discussions et des exercices pratiques Améliorez vos compétences et optimisez votre apprentissage grâce à notre pédagogie basée sur les projets Commencez votre aventure de codage dès aujourd'hui 🧑‍🎓 Vous êtes étudiant Visitez la page Student Hub où vous trouverez des ressources pour débutants, des packs étudiants et même des moyens d'obtenir un bon de certification gratuit C'est une page à mettre en favori et à consulter régulièrement, car nous changeons le contenu chaque mois 📣 Annonce - Nouveau programme sur l'IA générative pour JavaScript vient d'être publié\nNe manquez pas notre nouveau programme sur l'IA générative Visitez https://aka ms/genai-js-course pour commencer Leçons couvrant tout, des bases à RAG Interagissez avec des personnages historiques grâce à GenAI et notre application compagnon Une narration amusante et engageante, vous voyagerez dans le temps Chaque leçon inclut un exercice à réaliser, une vérification des connaissances et un défi pour vous guider dans l'apprentissage de sujets tels que :\n- Les prompts et l'ingénierie des prompts\n- La génération d'applications texte et image\n- Les applications de recherche\nVisitez https://aka ms/genai-js-course pour commencer 🌱 Premiers pas\nEnseignants, nous avons inclus quelques suggestions sur la façon d'utiliser ce programme Nous aimerions avoir vos retours dans notre forum de discussion Apprenants, pour chaque leçon, commencez par un quiz pré-lecture, puis lisez le contenu de la leçon, réalisez les différentes activités et vérifiez votre compréhension avec le quiz post-lecture",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "d8f4be8447e7bcba1562e60266ac2755",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "Les prompts et l'ingénierie des prompts - La génération d'applications texte et image - Les applications de recherche Visitez https://aka ms/genai-js-course pour commencer 🌱 Premiers pas Enseignants, nous avons inclus quelques suggestions sur la façon d'utiliser ce programme Nous aimerions avoir vos retours dans notre forum de discussion Apprenants, pour chaque leçon, commencez par un quiz pré-lecture, puis lisez le contenu de la leçon, réalisez les différentes activités et vérifiez votre compréhension avec le quiz post-lecturePour enrichir votre expérience d'apprentissage, connectez-vous avec vos pairs pour travailler ensemble sur les projets Les discussions sont encouragées dans notre forum de discussion où notre équipe de modérateurs sera disponible pour répondre à vos questions Pour approfondir votre éducation, nous vous recommandons vivement d'explorer Microsoft Learn pour des ressources d'étude supplémentaires 📋 Configuration de votre environnement\nCe programme dispose d'un environnement de développement prêt à l'emploi Lorsque vous commencez, vous pouvez choisir de suivre le programme dans un Codespace (un environnement basé sur le navigateur, sans installation nécessaire), ou localement sur votre ordinateur en utilisant un éditeur de texte tel que Visual Studio Code Créez votre dépôt\nPour sauvegarder facilement votre travail, il est recommandé de créer votre propre copie de ce dépôt Vous pouvez le faire en cliquant sur le bouton Use this template en haut de la page Cela créera un nouveau dépôt dans votre compte GitHub avec une copie du programme Suivez ces étapes :\n1 Forkez le dépôt : Cliquez sur le bouton \"Fork\" en haut à droite de cette page 2 Clonez le dépôt : git clone https://github com/microsoft/Web-Dev-For-Beginners git\nExécuter le programme dans un Codespace\nDans votre copie de ce dépôt que vous avez créée, cliquez sur le bouton Code et sélectionnez Open with Codespaces Cela créera un nouveau Codespace pour travailler",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "ca483c5d063ca9c9cbf4239ecf39d453",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "un nouveau dépôt dans votre compte GitHub avec une copie du programme Suivez ces étapes : 1 Forkez le dépôt : Cliquez sur le bouton \"Fork\" en haut à droite de cette page 2 Clonez le dépôt : git clone https://github com/microsoft/Web-Dev-For-Beginners git Exécuter le programme dans un Codespace Dans votre copie de ce dépôt que vous avez créée, cliquez sur le bouton Code et sélectionnez Open with Codespaces Cela créera un nouveau Codespace pour travaillerExécuter le programme localement sur votre ordinateur\nPour exécuter ce programme localement sur votre ordinateur, vous aurez besoin d'un éditeur de texte, d'un navigateur et d'un outil en ligne de commande Notre première leçon, Introduction aux langages de programmation et outils de travail, vous guidera à travers les différentes options pour chacun de ces outils afin que vous puissiez choisir ce qui vous convient le mieux Nous recommandons d'utiliser Visual Studio Code comme éditeur, qui dispose également d'un Terminal intégré Vous pouvez télécharger Visual Studio Code ici Clonez votre dépôt sur votre ordinateur Vous pouvez le faire en cliquant sur le bouton Code et en copiant l'URL :\nEnsuite, ouvrez Terminal dans Visual Studio Code et exécutez la commande suivante, en remplaçant <your-repository-url> par l'URL que vous venez de copier :\nbash\ngit clone <your-repository-url>\nOuvrez le dossier dans Visual Studio Code Vous pouvez le faire en cliquant sur File > Open Folder et en sélectionnant le dossier que vous venez de cloner",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "a30711cab1aa730087c372ced3eb62b8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "Clonez votre dépôt sur votre ordinateur Vous pouvez le faire en cliquant sur le bouton Code et en copiant l'URL : Ensuite, ouvrez Terminal dans Visual Studio Code et exécutez la commande suivante, en remplaçant <your-repository-url> par l'URL que vous venez de copier : bash git clone <your-repository-url> Ouvrez le dossier dans Visual Studio Code Vous pouvez le faire en cliquant sur File > Open Folder et en sélectionnant le dossier que vous venez de clonerExtensions recommandées pour Visual Studio Code :\nLive Server - pour prévisualiser les pages HTML directement dans Visual Studio Code\nCopilot - pour vous aider à écrire du code plus rapidement\n📂 Chaque leçon inclut :\nun sketchnote optionnel\nune vidéo complémentaire optionnelle\nun quiz d'échauffement avant la leçon\nune leçon écrite\npour les leçons basées sur des projets, des guides étape par étape pour construire le projet\ndes vérifications des connaissances\nun défi\ndes lectures complémentaires\nun exercice\nun quiz après la leçon\nÀ propos des quiz : Tous les quiz sont contenus dans le dossier Quiz-app, 48 quiz au total avec trois questions chacun Ils sont liés dans les leçons et l'application de quiz peut être exécutée localement ou déployée sur Azure ; suivez les instructions dans le dossier quiz-app Ils sont progressivement traduits",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "17ee178fee9492ef217944064a342f01",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "guides étape par étape pour construire le projet des vérifications des connaissances un défi des lectures complémentaires un exercice un quiz après la leçon À propos des quiz : Tous les quiz sont contenus dans le dossier Quiz-app, 48 quiz au total avec trois questions chacun Ils sont liés dans les leçons et l'application de quiz peut être exécutée localement ou déployée sur Azure ; suivez les instructions dans le dossier quiz-app Ils sont progressivement traduits🗃️ Leçons\n|     |                       Nom du projet                       |                            Concepts enseignés                            | Objectifs d'apprentissage                                                                                                           |                                                         Leçon liée                                                          |         Auteur          |\n| :-: | :-------------------------------------------------------: | :---------------------------------------------------------------------: | ---------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     Premiers pas                         |           Introduction à la programmation et outils de travail           | Apprenez les bases communes à la plupart des langages de programmation et les outils utilisés par les développeurs professionnels | Introduction aux langages de programmation et outils de travail |         Jasmine         |\n| 02  |                     Premiers pas                         |             Bases de GitHub, y compris le travail en équipe              | Comment utiliser GitHub dans votre projet et collaborer avec d'autres sur une base de code                                         |                            Introduction à GitHub                             |          Floor          |\n| 03  |                     Premiers pas                         |                             Accessibilité                               | Apprenez les bases de l'accessibilité web                                                                                          |                       Fondamentaux de l'accessibilité                       |       Christopher       |\n| 04  |                        Bases JS                          |                         Types de données en JavaScript                  | Les bases des types de données en JavaScript                                                                                       |                                       Types de données                                        |         Jasmine         |\n| 05  |                        Bases JS                          |                         Fonctions et méthodes                           | Apprenez à utiliser les fonctions et méthodes pour gérer le flux logique d'une application                                         |                              Fonctions et méthodes                               | Jasmine et Christopher |\n| 06  |                        Bases JS                          |                        Prendre des décisions avec JS                    | Apprenez à créer des conditions dans votre code en utilisant des méthodes de prise de décision                                     |                                 Prendre des décisions                                  |         Jasmine         |\n| 07  |                        Bases JS                          |                            Tableaux et boucles                          | Travaillez avec des données en utilisant des tableaux et des boucles en JavaScript                                                 |                                   Tableaux et boucles                                    |         Jasmine         |\n| 08  |       Terrarium       |                            HTML en pratique                             | Construisez le HTML pour créer un terrarium en ligne, en vous concentrant sur la création d'une mise en page                       |                                 Introduction au HTML                                 |           Jen           |\n| 09  |       Terrarium       |                            CSS en pratique                              | Construisez le CSS pour styliser le terrarium en ligne, en vous concentrant sur les bases du CSS, y compris rendre la page responsive |                                  Introduction au CSS                                  |           Jen           |\n| 10  |            Terrarium            |                 Fermetures JavaScript, manipulation du DOM               | Construisez le JavaScript pour faire fonctionner le terrarium comme une interface glisser-déposer, en vous concentrant sur les fermetures et la manipulation du DOM |                  Fermetures JavaScript, manipulation du DOM                   |           Jen           |\n| 11  |          Jeu de frappe          |                          Construire un jeu de frappe                    | Apprenez à utiliser les événements clavier pour piloter la logique de votre application JavaScript                                 |                                Programmation pilotée par événements                                |       Christopher       |\n| 12  | Green Browser Extension |                         Travailler avec les navigateurs                          | Apprenez comment fonctionnent les navigateurs, leur histoire, et comment structurer les premiers éléments d'une extension de navigateur                               |                               À propos des navigateurs                                |           Jen           |\n| 13  | Green Browser Extension | Construire un formulaire, appeler une API et stocker des variables en local storage | Créez les éléments JavaScript de votre extension de navigateur pour appeler une API en utilisant des variables stockées en local storage                      |                APIs, Formulaires et Local Storage                 |           Jen           |\n| 14  | Green Browser Extension |          Processus en arrière-plan dans le navigateur, performance web          | Utilisez les processus en arrière-plan du navigateur pour gérer l'icône de l'extension ; découvrez la performance web et quelques optimisations à apporter   |             Tâches en arrière-plan et performance              |           Jen           |\n| 15  |           Space Game           |             Développement de jeu plus avancé avec JavaScript             | Découvrez l'héritage en utilisant à la fois les classes et la composition, ainsi que le modèle Pub/Sub, en préparation à la création d'un jeu              |                      Introduction au développement de jeu avancé                       |          Chris          |\n| 16  |           Space Game           |                           Dessiner sur canvas                            | Découvrez l'API Canvas, utilisée pour dessiner des éléments à l'écran                                                                       |                                Dessiner sur Canvas                                |          Chris          |\n| 17  |           Space Game           |                   Déplacer des éléments sur l'écran                    | Découvrez comment les éléments peuvent se déplacer en utilisant les coordonnées cartésiennes et l'API Canvas                                            |                           Déplacer des éléments                           |          Chris          |\n| 18  |           Space Game           |                          Détection de collision                           | Faites en sorte que les éléments entrent en collision et réagissent entre eux en utilisant les touches du clavier, et ajoutez une fonction de cooldown pour garantir la performance du jeu    |                              Détection de collision                              |          Chris          |\n| 19  |           Space Game           |                             Comptabiliser les points                              | Effectuez des calculs mathématiques basés sur l'état et la performance du jeu                                                                |                                    Comptabiliser les points                                    |          Chris          |\n| 20  |           Space Game           |                     Terminer et redémarrer le jeu                     | Apprenez à terminer et redémarrer le jeu, y compris nettoyer les ressources et réinitialiser les valeurs des variables                              |                                Condition de fin                                 |          Chris          |\n| 21  |         Banking App          |                 Modèles HTML et routes dans une application web                 | Apprenez à créer la structure d'architecture d'un site web multipage en utilisant le routage et les modèles HTML                             |                            Modèles HTML et routes                             |          Yohan          |\n| 22  |         Banking App          |                  Construire un formulaire de connexion et d'inscription                   | Découvrez comment créer des formulaires et gérer les routines de validation                                                                          |                                           Formulaires                                           |          Yohan          |\n| 23  |         Banking App          |                   Méthodes pour récupérer et utiliser des données                   | Découvrez comment les données circulent dans et hors de votre application, comment les récupérer, les stocker et les supprimer                                                 |                                            Données                                            |          Yohan          |\n| 24  |         Banking App          |                      Concepts de gestion d'état                      | Apprenez comment votre application conserve son état et comment le gérer de manière programmatique                                                              |                                Gestion d'état                                |          Yohan          |\n🏫 Pédagogie\nNotre programme est conçu autour de deux principes pédagogiques clés :\n* apprentissage basé sur les projets\n* quiz fréquents\nLe programme enseigne les bases de JavaScript, HTML et CSS, ainsi que les outils et techniques les plus récents utilisés par les développeurs web d'aujourd'hui",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1729,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "cf28e7b28c021cc374a7fbd64e2ca1bd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "| Banking App | Concepts de gestion d'état | Apprenez comment votre application conserve son état et comment le gérer de manière programmatique | Gestion d'état | Yohan | 🏫 Pédagogie Notre programme est conçu autour de deux principes pédagogiques clés : * apprentissage basé sur les projets * quiz fréquents Le programme enseigne les bases de JavaScript, HTML et CSS, ainsi que les outils et techniques les plus récents utilisés par les développeurs web d'aujourd'huiLes étudiants auront l'opportunité d'acquérir une expérience pratique en créant un jeu de dactylographie, un terrarium virtuel, une extension de navigateur écologique, un jeu de type Space Invader et une application bancaire pour entreprises À la fin de la série, les étudiants auront acquis une solide compréhension du développement web 🎓 Vous pouvez suivre les premières leçons de ce programme sous forme de parcours d'apprentissage sur Microsoft Learn En veillant à ce que le contenu soit aligné avec les projets, le processus devient plus engageant pour les étudiants et la rétention des concepts est augmentée Nous avons également écrit plusieurs leçons d'introduction aux bases de JavaScript, accompagnées d'une vidéo de la collection \"Beginners Series to: JavaScript\", dont certains auteurs ont contribué à ce programme De plus, un quiz à faible enjeu avant un cours oriente l'intention de l'étudiant vers l'apprentissage d'un sujet, tandis qu'un second quiz après le cours assure une meilleure rétention Ce programme a été conçu pour être flexible et amusant, et peut être suivi en totalité ou en partie Les projets commencent petits et deviennent de plus en plus complexes à la fin du cycle de 12 semaines Bien que nous ayons délibérément évité d'introduire des frameworks JavaScript pour nous concentrer sur les compétences de base nécessaires en tant que développeur web avant d'adopter un framework, une bonne étape suivante après avoir terminé ce programme serait d'apprendre Node js via une autre collection de vidéos : \"Beginner Series to: Node js\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "4f6015278b4dbe0b9ae91c7c8fa440f1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "totalité ou en partie Les projets commencent petits et deviennent de plus en plus complexes à la fin du cycle de 12 semaines Bien que nous ayons délibérément évité d'introduire des frameworks JavaScript pour nous concentrer sur les compétences de base nécessaires en tant que développeur web avant d'adopter un framework, une bonne étape suivante après avoir terminé ce programme serait d'apprendre Node js via une autre collection de vidéos : \"Beginner Series to: Node js\"Consultez notre Code de conduite et nos directives de Contributions Nous accueillons vos retours constructifs 🧭 Accès hors ligne\nVous pouvez exécuter cette documentation hors ligne en utilisant Docsify Forkez ce dépôt, installez Docsify sur votre machine locale, puis dans le dossier racine de ce dépôt, tapez docsify serve Le site web sera servi sur le port 3000 de votre localhost : localhost:3000 📘 PDF\nUn PDF de toutes les leçons est disponible ici 🎒 Autres cours\nNotre équipe produit d'autres cours Découvrez :\nGenerative AI for Beginners\nGenerative AI for Beginners NET\nGenerative AI with JavaScript\nGenerative AI with Java\nAI for Beginners\nData Science for Beginners\nML for Beginners\nCybersécurité pour débutants\nDéveloppement Web pour Débutants\nIoT pour Débutants\nDéveloppement XR pour Débutants\nMaîtriser GitHub Copilot pour une utilisation agentique\nMaîtriser GitHub Copilot pour les développeurs C#/ NET\nChoisissez votre propre aventure Copilot\nLicence\nCe dépôt est sous licence MIT Consultez le fichier LICENSE pour plus d'informations Avertissement :\nCe document a été traduit à l'aide du service de traduction automatique Co-op Translator Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité Pour des informations critiques, il est recommandé de recourir à une traduction professionnelle réalisée par un humain",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "9126c037c1fcb91dbd350a1797cf9cae",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\fr\\README.md",
    "source_type": "git_repo",
    "title": "Développement Web pour Débutants - Un Programme",
    "content": "MIT Consultez le fichier LICENSE pour plus d'informations Avertissement : Ce document a été traduit à l'aide du service de traduction automatique Co-op Translator Bien que nous nous efforcions d'assurer l'exactitude, veuillez noter que les traductions automatisées peuvent contenir des erreurs ou des inexactitudes Le document original dans sa langue d'origine doit être considéré comme la source faisant autorité Pour des informations critiques, il est recommandé de recourir à une traduction professionnelle réalisée par un humainNous déclinons toute responsabilité en cas de malentendus ou d'interprétations erronées résultant de l'utilisation de cette traduction",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 26453,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\fr\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 155,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "1c9dd4fd2421cba743f57d68ad9a4a48",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "शिक्षकों के लिए\nक्या आप इस पाठ्यक्रम का उपयोग अपनी कक्षा में करना चाहेंगे कृपया इसे स्वतंत्र रूप से उपयोग करें",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7300,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 107,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "1fe71ce207a9ddfe1ad7391aa6850323",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "शिक्षकों के लिए\nक्या आप इस पाठ्यक्रम का उपयोग अपनी कक्षा में करना चाहेंगे कृपया इसे स्वतंत्र रूप से उपयोग करेंवास्तव में, आप इसे GitHub के भीतर ही GitHub Classroom का उपयोग करके उपयोग कर सकते हैं।\nइसके लिए, इस रिपॉजिटरी को फोर्क करें। आपको प्रत्येक पाठ के लिए एक अलग रिपॉजिटरी बनानी होगी, इसलिए आपको प्रत्येक फ़ोल्डर को एक अलग रिपॉजिटरी में निकालना होगा। इस तरह, GitHub Classroom प्रत्येक पाठ को अलग-अलग पहचान सकेगा।\nये पूर्ण निर्देश आपको यह समझने में मदद करेंगे कि अपनी कक्षा को कैसे सेटअप करें।\nMoodle, Canvas या Blackboard में उपयोग करना\nयह पाठ्यक्रम इन लर्निंग मैनेजमेंट सिस्टम्स में अच्छी तरह से काम करता है",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7300,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 550,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "8251b73bee7933215716df966c1590c5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "सकते हैं। इसके लिए, इस रिपॉजिटरी को फोर्क करें। आपको प्रत्येक पाठ के लिए एक अलग रिपॉजिटरी बनानी होगी, इसलिए आपको प्रत्येक फ़ोल्डर को एक अलग रिपॉजिटरी में निकालना होगा। इस तरह, GitHub Classroom प्रत्येक पाठ को अलग-अलग पहचान सकेगा। ये पूर्ण निर्देश आपको यह समझने में मदद करेंगे कि अपनी कक्षा को कैसे सेटअप करें। Moodle, Canvas या Blackboard में उपयोग करना यह पाठ्यक्रम इन लर्निंग मैनेजमेंट सिस्टम्स में अच्छी तरह से काम करता हैपूरे कंटेंट के लिए Moodle अपलोड फ़ाइल का उपयोग करें, या Common Cartridge फ़ाइल आज़माएं जिसमें कुछ सामग्री शामिल है। Moodle Cloud पूर्ण Common Cartridge एक्सपोर्ट का समर्थन नहीं करता है, इसलिए Moodle डाउनलोड फ़ाइल का उपयोग करना बेहतर है जिसे Canvas में अपलोड किया जा सकता है। कृपया हमें बताएं कि हम इस अनुभव को कैसे बेहतर बना सकते हैं।\nMoodle कक्षा में पाठ्यक्रम\nCanvas में पाठ्यक्रम\nरिपॉजिटरी को वैसे ही उपयोग करना\nयदि आप इस रिपॉजिटरी का उपयोग वर्तमान स्वरूप में करना चाहते हैं, बिना GitHub Classroom का उपयोग किए, तो यह भी संभव है। आपको अपने छात्रों को यह बताना होगा कि किस पाठ को एक साथ पढ़ना है।\nऑनलाइन प्रारूप (Zoom, Teams, या अन्य) में, आप क्विज़ के लिए ब्रेकआउट रूम बना सकते हैं और छात्रों को सीखने के लिए तैयार करने में मदद कर सकते हैं। फिर छात्रों को क्विज़ में आमंत्रित करें और उन्हें एक निश्चित समय पर 'issues' के रूप में अपने उत्तर सबमिट करने के लिए कहें। यदि आप चाहते हैं कि छात्र खुले में सहयोगात्मक रूप से काम करें, तो आप असाइनमेंट के साथ भी ऐसा कर सकते हैं।\nयदि आप एक अधिक निजी प्रारूप पसंद करते हैं, तो अपने छात्रों से कहें कि वे पाठ्यक्रम को पाठ दर पाठ अपने स्वयं के GitHub रिपॉजिटरी में फोर्क करें, जो निजी रिपॉजिटरी हों, और आपको एक्सेस दें। फिर वे क्विज़ और असाइनमेंट निजी रूप से पूरा कर सकते हैं और उन्हें आपके कक्षा रिपॉजिटरी पर issues के माध्यम से सबमिट कर सकते हैं।\nऑनलाइन कक्षा प्रारूप में इसे काम करने के कई तरीके हैं। कृपया हमें बताएं कि आपके लिए सबसे अच्छा क्या काम करता है",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7300,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 1640,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "db1f49d1a451d6cf649790da860d8f22",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "अपने छात्रों से कहें कि वे पाठ्यक्रम को पाठ दर पाठ अपने स्वयं के GitHub रिपॉजिटरी में फोर्क करें, जो निजी रिपॉजिटरी हों, और आपको एक्सेस दें। फिर वे क्विज़ और असाइनमेंट निजी रूप से पूरा कर सकते हैं और उन्हें आपके कक्षा रिपॉजिटरी पर issues के माध्यम से सबमिट कर सकते हैं। ऑनलाइन कक्षा प्रारूप में इसे काम करने के कई तरीके हैं। कृपया हमें बताएं कि आपके लिए सबसे अच्छा क्या काम करता हैकृपया हमें अपनी राय दें",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7300,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "a6ac83552151986446a19a9a4efce888",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "कि वे पाठ्यक्रम को पाठ दर पाठ अपने स्वयं के GitHub रिपॉजिटरी में फोर्क करें, जो निजी रिपॉजिटरी हों, और आपको एक्सेस दें। फिर वे क्विज़ और असाइनमेंट निजी रूप से पूरा कर सकते हैं और उन्हें आपके कक्षा रिपॉजिटरी पर issues के माध्यम से सबमिट कर सकते हैं। ऑनलाइन कक्षा प्रारूप में इसे काम करने के कई तरीके हैं। कृपया हमें बताएं कि आपके लिए सबसे अच्छा क्या काम करता हैकृपया हमें अपनी राय देंहम चाहते हैं कि यह पाठ्यक्रम आपके और आपके छात्रों के लिए उपयोगी हो। Teacher corner पर हमसे जुड़ें और किसी भी अनुरोध, बग और फीडबैक के लिए नया issue खोलें।\nअस्वीकरण:\nयह दस्तावेज़ AI अनुवाद सेवा Co-op Translator का उपयोग करके अनुवादित किया गया है। जबकि हम सटीकता सुनिश्चित करने का प्रयास करते हैं, कृपया ध्यान दें कि स्वचालित अनुवाद में त्रुटियां या अशुद्धियां हो सकती हैं। मूल भाषा में उपलब्ध मूल दस्तावेज़ को प्रामाणिक स्रोत माना जाना चाहिए। महत्वपूर्ण जानकारी के लिए, पेशेवर मानव अनुवाद की सिफारिश की जाती है। इस अनुवाद के उपयोग से उत्पन्न किसी भी गलतफहमी या गलत व्याख्या के लिए हम उत्तरदायी नहीं हैं।",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7300,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 919,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "bbc72fed84bdd5f0c2939494efd3c51c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "सुरक्षा\nMicrosoft हमारे सॉफ़्टवेयर उत्पादों और सेवाओं की सुरक्षा को गंभीरता से लेता है, जिसमें हमारे GitHub संगठनों के माध्यम से प्रबंधित सभी स्रोत कोड रिपॉजिटरी शामिल हैं, जैसे Microsoft, Azure, DotNet, AspNet, Xamarin, और हमारे GitHub संगठन।\nयदि आपको किसी Microsoft-स्वामित्व वाली रिपॉजिटरी में कोई सुरक्षा कमजोरी मिलती है जो Microsoft की सुरक्षा कमजोरी की परिभाषा के अंतर्गत आती है, तो कृपया इसे नीचे दिए गए निर्देशों के अनुसार हमें रिपोर्ट करें।\nसुरक्षा समस्याओं की रिपोर्टिंग\nकृपया सार्वजनिक GitHub मुद्दों के माध्यम से सुरक्षा कमजोरियों की रिपोर्ट न करें।\nइसके बजाय, कृपया इसे Microsoft Security Response Center (MSRC) पर रिपोर्ट करें: https://msrc",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7457,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 527,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "82aaa97e4707c43d8231b3b5d903a0e0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "हैं, जैसे Microsoft, Azure, DotNet, AspNet, Xamarin, और हमारे GitHub संगठन। यदि आपको किसी Microsoft-स्वामित्व वाली रिपॉजिटरी में कोई सुरक्षा कमजोरी मिलती है जो Microsoft की सुरक्षा कमजोरी की परिभाषा के अंतर्गत आती है, तो कृपया इसे नीचे दिए गए निर्देशों के अनुसार हमें रिपोर्ट करें। सुरक्षा समस्याओं की रिपोर्टिंग कृपया सार्वजनिक GitHub मुद्दों के माध्यम से सुरक्षा कमजोरियों की रिपोर्ट न करें। इसके बजाय, कृपया इसे Microsoft Security Response Center (MSRC) पर रिपोर्ट करें: https://msrcmicrosoft com/create-report।\nयदि आप लॉग इन किए बिना रिपोर्ट करना पसंद करते हैं, तो secure@microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7457,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "0ca1922cf83d8d3e2bf8d7a469cc818a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Microsoft-स्वामित्व वाली रिपॉजिटरी में कोई सुरक्षा कमजोरी मिलती है जो Microsoft की सुरक्षा कमजोरी की परिभाषा के अंतर्गत आती है, तो कृपया इसे नीचे दिए गए निर्देशों के अनुसार हमें रिपोर्ट करें। सुरक्षा समस्याओं की रिपोर्टिंग कृपया सार्वजनिक GitHub मुद्दों के माध्यम से सुरक्षा कमजोरियों की रिपोर्ट न करें। इसके बजाय, कृपया इसे Microsoft Security Response Center (MSRC) पर रिपोर्ट करें: https://msrcmicrosoft com/create-report। यदि आप लॉग इन किए बिना रिपोर्ट करना पसंद करते हैं, तो secure@microsoftcom पर ईमेल भेजें। यदि संभव हो, तो हमारे PGP कुंजी के साथ अपने संदेश को एन्क्रिप्ट करें; कृपया इसे Microsoft Security Response Center PGP Key page से डाउनलोड करें।\nआपको 24 घंटे के भीतर प्रतिक्रिया प्राप्त होनी चाहिए। यदि किसी कारणवश आपको प्रतिक्रिया नहीं मिलती है, तो कृपया ईमेल के माध्यम से फॉलो-अप करें ताकि यह सुनिश्चित हो सके कि हमें आपका मूल संदेश प्राप्त हुआ है। अतिरिक्त जानकारी microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7457,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 707,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "70c207857a6f6bbee899476b0af85e8c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "करना पसंद करते हैं, तो secure@microsoftcom पर ईमेल भेजें। यदि संभव हो, तो हमारे PGP कुंजी के साथ अपने संदेश को एन्क्रिप्ट करें; कृपया इसे Microsoft Security Response Center PGP Key page से डाउनलोड करें। आपको 24 घंटे के भीतर प्रतिक्रिया प्राप्त होनी चाहिए। यदि किसी कारणवश आपको प्रतिक्रिया नहीं मिलती है, तो कृपया ईमेल के माध्यम से फॉलो-अप करें ताकि यह सुनिश्चित हो सके कि हमें आपका मूल संदेश प्राप्त हुआ है। अतिरिक्त जानकारी microsoftcom/msrc पर पाई जा सकती है।\nकृपया नीचे सूचीबद्ध जानकारी (जितना संभव हो सके) शामिल करें ताकि हमें समस्या की प्रकृति और दायरे को बेहतर ढंग से समझने में मदद मिल सके:\nसमस्या का प्रकार (जैसे बफर ओवरफ्लो, SQL इंजेक्शन, क्रॉस-साइट स्क्रिप्टिंग, आदि)\nसमस्या के प्रकट होने से संबंधित स्रोत फ़ाइलों के पूर्ण पथ\nप्रभावित स्रोत कोड का स्थान (टैग/ब्रांच/कमिट या सीधा URL)\nसमस्या को पुन: उत्पन्न करने के लिए आवश्यक कोई विशेष कॉन्फ़िगरेशन\nसमस्या को पुन: उत्पन्न करने के लिए चरण-दर-चरण निर्देश\nप्रूफ-ऑफ-कॉन्सेप्ट या एक्सप्लॉइट कोड (यदि संभव हो)\nसमस्या का प्रभाव, जिसमें यह भी शामिल है कि हमलावर समस्या का कैसे फायदा उठा सकता है\nयह जानकारी हमें आपकी रिपोर्ट को अधिक तेज़ी से प्राथमिकता देने में मदद करेगी।\nयदि आप बग बाउंटी के लिए रिपोर्ट कर रहे हैं, तो अधिक विस्तृत रिपोर्ट उच्च बाउंटी पुरस्कार में योगदान कर सकती हैं। कृपया हमारे Microsoft Bug Bounty Program पेज पर हमारे सक्रिय कार्यक्रमों के बारे में अधिक जानकारी प्राप्त करें।\nपसंदीदा भाषाएं\nहम सभी संचारों को अंग्रेजी में प्राप्त करना पसंद करते हैं।\nनीति\nMicrosoft Coordinated Vulnerability Disclosure के सिद्धांत का पालन करता है।\nअस्वीकरण:\nयह दस्तावेज़ AI अनुवाद सेवा Co-op Translator का उपयोग करके अनुवादित किया गया है। जबकि हम सटीकता सुनिश्चित करने का प्रयास करते हैं, कृपया ध्यान दें कि स्वचालित अनुवाद में त्रुटियां या अशुद्धियां हो सकती हैं। मूल भाषा में उपलब्ध मूल दस्तावेज़ को प्रामाणिक स्रोत माना जाना चाहिए। महत्वपूर्ण जानकारी के लिए, पेशेवर मानव अनुवाद की सिफारिश की जाती है। इस अनुवाद के उपयोग से उत्पन्न किसी भी गलतफहमी या गलत व्याख्या के लिए हम जिम्मेदार नहीं हैं।",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7457,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 1742,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "238b972e1fcffd542f5e2ba421355e76",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\_404.md",
    "source_type": "git_repo",
    "title": "काम चल रहा है",
    "content": "काम चल रहा है\nहम इस पेज पर काम कर रहे हैं। कृपया बाद में वापस देखें।\nयदि आपके कोई प्रश्न हैं, तो issue खोलें।\nवापस होम पर जाएं\nअस्वीकरण:\nयह दस्तावेज़ AI अनुवाद सेवा Co-op Translator का उपयोग करके अनुवादित किया गया है। जबकि हम सटीकता के लिए प्रयासरत हैं, कृपया ध्यान दें कि स्वचालित अनुवाद में त्रुटियां या अशुद्धियां हो सकती हैं। मूल भाषा में उपलब्ध मूल दस्तावेज़ को प्रामाणिक स्रोत माना जाना चाहिए। महत्वपूर्ण जानकारी के लिए, पेशेवर मानव अनुवाद की सिफारिश की जाती है। इस अनुवाद के उपयोग से उत्पन्न किसी भी गलतफहमी या गलत व्याख्या के लिए हम उत्तरदायी नहीं हैं।",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1791,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 536,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d320076bfb7e967d52c26e3d7b93ed0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "समर्थन",
    "content": "समर्थन\nसमस्याएँ दर्ज करने और सहायता प्राप्त करने का तरीका\nयह प्रोजेक्ट बग और फीचर अनुरोधों को ट्रैक करने के लिए GitHub Issues का उपयोग करता है। डुप्लिकेट से बचने के लिए नई समस्या दर्ज करने से पहले मौजूदा समस्याओं को खोजें। नई समस्याओं के लिए, अपनी बग या फीचर अनुरोध को एक नई Issue के रूप में दर्ज करें।\nइस प्रोजेक्ट का उपयोग करने से संबंधित सहायता और प्रश्नों के लिए, कृपया हमारे योगदान दिशानिर्देश देखें।\nMicrosoft समर्थन नीति\nइस प्रोजेक्ट के लिए समर्थन ऊपर सूचीबद्ध संसाधनों तक सीमित है।\nअस्वीकरण:\nयह दस्तावेज़ AI अनुवाद सेवा Co-op Translator का उपयोग करके अनुवादित किया गया है। जबकि हम सटीकता के लिए प्रयासरत हैं, कृपया ध्यान दें कि स्वचालित अनुवाद में त्रुटियां या अशुद्धियां हो सकती हैं। मूल भाषा में उपलब्ध मूल दस्तावेज़ को प्रामाणिक स्रोत माना जाना चाहिए। महत्वपूर्ण जानकारी के लिए, पेशेवर मानव अनुवाद की सिफारिश की जाती है। इस अनुवाद के उपयोग से उत्पन्न किसी भी गलतफहमी या गलत व्याख्या के लिए हम उत्तरदायी नहीं हैं।",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2650,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 875,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8acbaf720631d89df3f32dc70e6b6dec",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft 開源行為準則",
    "content": "Microsoft 開源行為準則\n此項目已採用 Microsoft 開源行為準則。\n資源：\nMicrosoft 開源行為準則\nMicrosoft 行為準則常見問題\n如有疑問或擔憂，請聯絡 opencode@microsoft.com\n免責聲明：\n本文件已使用人工智能翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原文文件作為權威來源。如涉及關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1165,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f47a6a327d17bea88866999292dbe37c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "貢獻",
    "content": "貢獻\n此項目歡迎各種貢獻和建議。大多數貢獻需要您同意一份貢獻者許可協議 (CLA)，聲明您擁有權利並確實授予我們使用您貢獻的權利。欲了解更多詳情，請訪問 https://cla microsoft com。\n當您提交拉取請求 (pull request) 時，CLA 機器人會自動判斷您是否需要提供 CLA，並適當地標記 PR（例如，添加標籤或評論）。只需按照機器人提供的指示操作即可。您只需在所有使用我們 CLA 的倉庫中完成一次此操作。此外，請嘗試告訴我們您進行更改的原因，以便我們更好地理解您的請求。\n此項目已採用 Microsoft 開源行為準則。\n欲了解更多信息，請參閱 行為準則常見問題 或通過 opencode@microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1733,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f554253fb67ac20e4e834993ae411872",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "貢獻",
    "content": "貢獻\n此項目歡迎各種貢獻和建議。大多數貢獻需要您同意一份貢獻者許可協議 (CLA)，聲明您擁有權利並確實授予我們使用您貢獻的權利。欲了解更多詳情，請訪問 https://cla microsoft com。\n當您提交拉取請求 (pull request) 時，CLA 機器人會自動判斷您是否需要提供 CLA，並適當地標記 PR（例如，添加標籤或評論）。只需按照機器人提供的指示操作即可。您只需在所有使用我們 CLA 的倉庫中完成一次此操作。此外，請嘗試告訴我們您進行更改的原因，以便我們更好地理解您的請求。\n此項目已採用 Microsoft 開源行為準則。\n欲了解更多信息，請參閱 行為準則常見問題 或通過 opencode@microsoftcom 聯繫我們提出其他問題或意見。\n免責聲明：\n本文件已使用人工智能翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原文文件作為權威來源。如涉及關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或誤釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1733,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 526,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7d8cff34ccd828e67dde702edd3ce2bf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "給教育工作者\n想在課堂上使用這套課程嗎？請隨意使用！\n事實上，你可以直接在 GitHub 上使用這套課程，透過 GitHub Classroom 來進行。\n要做到這點，請先 fork 此 repo。你需要為每一課建立一個 repo，因此需要將每個文件夾提取到一個獨立的 repo。這樣，GitHub Classroom 就可以分別處理每一課。\n這些完整指引可以幫助你了解如何設置你的課堂。\n在 Moodle、Canvas 或 Blackboard 中使用\n這套課程在這些學習管理系統中運作良好！使用 Moodle 上傳檔案 來獲取完整內容，或者試試 Common Cartridge 檔案，其中包含部分內容。Moodle Cloud 不支援完整的 Common Cartridge 匯出，因此建議使用 Moodle 下載檔案，該檔案可以上傳到 Canvas。請告訴我們如何改進這個使用體驗。\nMoodle 課堂中的課程內容\nCanvas 中的課程內容\n直接使用此 repo\n如果你希望直接使用目前的 repo，而不使用 GitHub Classroom，也可以這樣做。你需要與學生溝通，告訴他們一起學習哪一課。\n在線上形式（如 Zoom、Teams 或其他）中，你可以為測驗設置分組討論室，並指導學生準備學習。然後邀請學生參加測驗，並在指定時間以 \"issues\" 的形式提交答案。如果你希望學生公開合作完成作業，也可以採用相同方式。\n如果你更喜歡私密的形式，可以要求學生逐課 fork 課程到他們自己的 GitHub 私人 repo，並授予你訪問權限。然後他們可以私下完成測驗和作業，並通過 classroom repo 的 issues 提交給你。\n在線課堂有很多方式可以運作。請告訴我們哪種方式最適合你！\n請分享你的想法！\n我們希望這套課程能夠滿足你和學生的需求。請在 教師角落 與我們聯繫，並開啟一個 新 issue 提出任何需求、問題或反饋。\n免責聲明：\n本文件已使用人工智能翻譯服務 Co-op Translator 進行翻譯。雖然我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。原始語言的文件應被視為權威來源。對於重要信息，建議使用專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3111,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 947,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a2910d3cb63573f701881fdaec0462ca",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "安全性\nMicrosoft 非常重視我們軟件產品和服務的安全性，包括通過我們的 GitHub 組織管理的所有原始碼庫，這些組織包括 Microsoft、Azure、DotNet、AspNet、Xamarin 和 我們的 GitHub 組織。\n如果你認為在任何 Microsoft 擁有的原始碼庫中發現了符合 Microsoft 對安全漏洞的定義 的安全漏洞，請按照以下描述向我們報告。\n報告安全問題\n請不要通過公開的 GitHub 問題報告安全漏洞。\n相反，請通過 Microsoft 安全響應中心 (MSRC) 報告，網址為 https://msrc microsoft com/create-report。\n如果你希望在不登錄的情況下提交報告，可以發送電子郵件至 secure@microsoft com。如果可能，請使用我們的 PGP 密鑰加密你的訊息；你可以從 Microsoft 安全響應中心 PGP 密鑰頁面 下載。\n你應該會在 24 小時內收到回覆。如果因某些原因未收到回覆，請通過電子郵件跟進以確保我們已收到你的原始訊息。更多資訊可參考 microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3406,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ad98edf441fa09d08505af1d9660d1f9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "安全性\nMicrosoft 非常重視我們軟件產品和服務的安全性，包括通過我們的 GitHub 組織管理的所有原始碼庫，這些組織包括 Microsoft、Azure、DotNet、AspNet、Xamarin 和 我們的 GitHub 組織。\n如果你認為在任何 Microsoft 擁有的原始碼庫中發現了符合 Microsoft 對安全漏洞的定義 的安全漏洞，請按照以下描述向我們報告。\n報告安全問題\n請不要通過公開的 GitHub 問題報告安全漏洞。\n相反，請通過 Microsoft 安全響應中心 (MSRC) 報告，網址為 https://msrc microsoft com/create-report。\n如果你希望在不登錄的情況下提交報告，可以發送電子郵件至 secure@microsoft com。如果可能，請使用我們的 PGP 密鑰加密你的訊息；你可以從 Microsoft 安全響應中心 PGP 密鑰頁面 下載。\n你應該會在 24 小時內收到回覆。如果因某些原因未收到回覆，請通過電子郵件跟進以確保我們已收到你的原始訊息。更多資訊可參考 microsoftcom/msrc。\n請盡可能提供以下所需資訊，以幫助我們更好地理解問題的性質和範圍：\n問題類型（例如，緩衝區溢出、SQL 注入、跨站腳本攻擊等）\n與問題相關的原始碼文件的完整路徑\n受影響原始碼的位置（標籤/分支/提交或直接 URL）\n重現問題所需的任何特殊配置\n重現問題的逐步指引\n概念驗證或漏洞利用代碼（如果可能）\n問題的影響，包括攻擊者可能如何利用該問題\n這些資訊將幫助我們更快地對你的報告進行分類和處理。\n如果你是為了漏洞賞金計劃而報告，提供更完整的報告可能有助於獲得更高的賞金獎勵。請訪問我們的 Microsoft 漏洞賞金計劃 頁面，了解我們的現行計劃的更多詳情。\n首選語言\n我們偏好所有的交流以英文進行。\n政策\nMicrosoft 遵循 協調漏洞披露 原則。\n免責聲明：\n本文件已使用人工智能翻譯服務 Co-op Translator 進行翻譯。儘管我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。原始文件的母語版本應被視為權威來源。對於重要資訊，建議使用專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3406,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 997,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "12907549ba5575738e7f3e6a2915da39",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "支援",
    "content": "支援\n如何提交問題及獲取協助\n此項目使用 GitHub Issues 來追蹤漏洞及功能需求。在提交新問題之前，請先搜尋現有問題以避免重複。若有新問題，請將您的漏洞或功能需求提交為一個新問題。\n如需使用此項目的協助及問題解答，請參閱我們的貢獻指南。\nMicrosoft 支援政策\n此項目的支援僅限於上述列出的資源。\n免責聲明：\n本文件已使用人工智能翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原文文件作為權威來源。對於關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1090,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1e60bcde8bedc488aa956798b185aecb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\_404.md",
    "source_type": "git_repo",
    "title": "工作進行中",
    "content": "工作進行中\n我們正在處理此頁面。請稍後再回來查看。\n如果有任何問題，請開一個 issue。\n返回主頁\n免責聲明：\n本文件已使用人工智能翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原文文件作為權威來源。對於關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 876,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 232,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f81d20dffdd58b6e1b20ee1ca6e40891",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "マイクロソフト オープンソース行動規範",
    "content": "マイクロソフト オープンソース行動規範\nこのプロジェクトは、マイクロソフト オープンソース行動規範を採用しています。\nリソース:\nマイクロソフト オープンソース行動規範\nマイクロソフト 行動規範 FAQ\n質問や懸念がある場合は opencode@microsoft.com にお問い合わせください\n免責事項:\nこの文書は、AI翻訳サービス Co-op Translator を使用して翻訳されています。正確性を追求しておりますが、自動翻訳には誤りや不正確な部分が含まれる可能性があることをご承知ください。元の言語で記載された文書が正式な情報源とみなされるべきです。重要な情報については、専門の人間による翻訳を推奨します。この翻訳の使用に起因する誤解や誤認について、当方は責任を負いません。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1491,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d3fc5da2b35f7c17f928db89ad78f6c9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "貢献について",
    "content": "貢献について\nこのプロジェクトでは、貢献や提案を歓迎しています。ほとんどの貢献には、貢献者ライセンス契約 (CLA) に同意する必要があります。これは、あなたがその貢献を使用する権利を私たちに与える権利を持ち、実際にその権利を付与することを宣言するものです。詳細については、https://cla microsoft com をご覧ください。\nプルリクエストを送信すると、CLA-bot が自動的に CLA を提供する必要があるかどうかを判断し、PR に適切な装飾 (例: ラベルやコメント) を行います。ボットが提供する指示に従うだけで大丈夫です。この手続きは、CLA を使用するすべてのリポジトリで一度だけ行えば済みます。また、なぜその変更を行ったのかを教えていただけると、リクエストをよりよく理解するのに役立ちます。\nこのプロジェクトは Microsoft オープンソース行動規範 を採用しています。\n詳細については、行動規範 FAQ をご覧いただくか、追加の質問やコメントがある場合は opencode@microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2306,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f8b898c9a1a7e0bf650a1950bb8eca54",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "貢献について",
    "content": "貢献について\nこのプロジェクトでは、貢献や提案を歓迎しています。ほとんどの貢献には、貢献者ライセンス契約 (CLA) に同意する必要があります。これは、あなたがその貢献を使用する権利を私たちに与える権利を持ち、実際にその権利を付与することを宣言するものです。詳細については、https://cla microsoft com をご覧ください。\nプルリクエストを送信すると、CLA-bot が自動的に CLA を提供する必要があるかどうかを判断し、PR に適切な装飾 (例: ラベルやコメント) を行います。ボットが提供する指示に従うだけで大丈夫です。この手続きは、CLA を使用するすべてのリポジトリで一度だけ行えば済みます。また、なぜその変更を行ったのかを教えていただけると、リクエストをよりよく理解するのに役立ちます。\nこのプロジェクトは Microsoft オープンソース行動規範 を採用しています。\n詳細については、行動規範 FAQ をご覧いただくか、追加の質問やコメントがある場合は opencode@microsoftcom にお問い合わせください。\n免責事項:\nこの文書は、AI翻訳サービス Co-op Translator を使用して翻訳されています。正確性を追求しておりますが、自動翻訳には誤りや不正確な部分が含まれる可能性があります。元の言語で記載された文書を正式な情報源としてお考えください。重要な情報については、専門の人間による翻訳を推奨します。この翻訳の使用に起因する誤解や誤解について、当社は責任を負いません。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2306,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 598,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3ca7b93a70c9d010cb3bebcb55723c52",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम\nMicrosoft Cloud Advocates द्वारा तैयार किए गए 12-सप्ताह के व्यापक पाठ्यक्रम के साथ वेब डेवलपमेंट की मूल बातें सीखें। प्रत्येक 24 पाठ JavaScript, CSS, और HTML को प्रोजेक्ट्स जैसे टेरारियम, ब्राउज़र एक्सटेंशन, और स्पेस गेम्स के माध्यम से समझाते हैं। क्विज़, चर्चाओं और व्यावहारिक असाइनमेंट के साथ जुड़ें। हमारी प्रभावी प्रोजेक्ट-आधारित शिक्षण पद्धति के साथ अपने कौशल को बढ़ाएं और ज्ञान को बेहतर तरीके से समझें। आज ही अपनी कोडिंग यात्रा शुरू करें 🧑‍🎓 क्या आप एक छात्र हैं",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 18
  },
  {
    "id": "79c31d8e4e9889957b8b6421940eb33b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "द्वारा तैयार किए गए 12-सप्ताह के व्यापक पाठ्यक्रम के साथ वेब डेवलपमेंट की मूल बातें सीखें। प्रत्येक 24 पाठ JavaScript, CSS, और HTML को प्रोजेक्ट्स जैसे टेरारियम, ब्राउज़र एक्सटेंशन, और स्पेस गेम्स के माध्यम से समझाते हैं। क्विज़, चर्चाओं और व्यावहारिक असाइनमेंट के साथ जुड़ें। हमारी प्रभावी प्रोजेक्ट-आधारित शिक्षण पद्धति के साथ अपने कौशल को बढ़ाएं और ज्ञान को बेहतर तरीके से समझें। आज ही अपनी कोडिंग यात्रा शुरू करें 🧑‍🎓 क्या आप एक छात्र हैंस्टूडेंट हब पेज पर जाएं, जहां आपको शुरुआती संसाधन, स्टूडेंट पैक्स और यहां तक कि मुफ्त प्रमाणपत्र वाउचर प्राप्त करने के तरीके मिलेंगे। यह वह पेज है जिसे आप बुकमार्क करना चाहेंगे और समय-समय पर जांचना चाहेंगे क्योंकि हम हर महीने सामग्री बदलते हैं।\n📣 घोषणा - नया पाठ्यक्रम JavaScript के लिए जनरेटिव AI पर जारी किया गया है\nहमारे नए जनरेटिव AI पाठ्यक्रम को मिस न करें",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 760,
    "chunk_index": 1,
    "total_chunks": 18
  },
  {
    "id": "47cfaeb679e14fd809d261b13962b658",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "यात्रा शुरू करें 🧑‍🎓 क्या आप एक छात्र हैंस्टूडेंट हब पेज पर जाएं, जहां आपको शुरुआती संसाधन, स्टूडेंट पैक्स और यहां तक कि मुफ्त प्रमाणपत्र वाउचर प्राप्त करने के तरीके मिलेंगे। यह वह पेज है जिसे आप बुकमार्क करना चाहेंगे और समय-समय पर जांचना चाहेंगे क्योंकि हम हर महीने सामग्री बदलते हैं। 📣 घोषणा - नया पाठ्यक्रम JavaScript के लिए जनरेटिव AI पर जारी किया गया है हमारे नए जनरेटिव AI पाठ्यक्रम को मिस न करेंशुरू करने के लिए https://aka ms/genai-js-course पर जाएं",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 2,
    "total_chunks": 18
  },
  {
    "id": "f7283bbac728e14da53a7b8aedb82501",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "छात्र हैंस्टूडेंट हब पेज पर जाएं, जहां आपको शुरुआती संसाधन, स्टूडेंट पैक्स और यहां तक कि मुफ्त प्रमाणपत्र वाउचर प्राप्त करने के तरीके मिलेंगे। यह वह पेज है जिसे आप बुकमार्क करना चाहेंगे और समय-समय पर जांचना चाहेंगे क्योंकि हम हर महीने सामग्री बदलते हैं। 📣 घोषणा - नया पाठ्यक्रम JavaScript के लिए जनरेटिव AI पर जारी किया गया है हमारे नए जनरेटिव AI पाठ्यक्रम को मिस न करेंशुरू करने के लिए https://aka ms/genai-js-course पर जाएंपाठ जो मूलभूत से लेकर RAG तक सब कुछ कवर करते हैं।\nGenAI और हमारे साथी ऐप का उपयोग करके ऐतिहासिक पात्रों के साथ बातचीत करें।\nमजेदार और आकर्षक कहानी, आप समय यात्रा करेंगे",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 534,
    "chunk_index": 3,
    "total_chunks": 18
  },
  {
    "id": "703a10dd7df111d30c9c79ce57ff94d9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "और समय-समय पर जांचना चाहेंगे क्योंकि हम हर महीने सामग्री बदलते हैं। 📣 घोषणा - नया पाठ्यक्रम JavaScript के लिए जनरेटिव AI पर जारी किया गया है हमारे नए जनरेटिव AI पाठ्यक्रम को मिस न करेंशुरू करने के लिए https://aka ms/genai-js-course पर जाएंपाठ जो मूलभूत से लेकर RAG तक सब कुछ कवर करते हैं। GenAI और हमारे साथी ऐप का उपयोग करके ऐतिहासिक पात्रों के साथ बातचीत करें। मजेदार और आकर्षक कहानी, आप समय यात्रा करेंगेप्रत्येक पाठ में शामिल हैं:\n- असाइनमेंट पूरा करना\n- ज्ञान जांच\n- चुनौती\n- विषयों को सीखने के लिए मार्गदर्शन जैसे:\n- प्रॉम्प्टिंग और प्रॉम्प्ट इंजीनियरिंग\n- टेक्स्ट और इमेज ऐप जनरेशन\n- सर्च ऐप्स\nशुरू करने के लिए https://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 561,
    "chunk_index": 4,
    "total_chunks": 18
  },
  {
    "id": "a9805b839d0ca4c3a706fcfd6ba2c4be",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "ms/genai-js-course पर जाएंपाठ जो मूलभूत से लेकर RAG तक सब कुछ कवर करते हैं। GenAI और हमारे साथी ऐप का उपयोग करके ऐतिहासिक पात्रों के साथ बातचीत करें। मजेदार और आकर्षक कहानी, आप समय यात्रा करेंगेप्रत्येक पाठ में शामिल हैं: - असाइनमेंट पूरा करना - ज्ञान जांच - चुनौती - विषयों को सीखने के लिए मार्गदर्शन जैसे: - प्रॉम्प्टिंग और प्रॉम्प्ट इंजीनियरिंग - टेक्स्ट और इमेज ऐप जनरेशन - सर्च ऐप्स शुरू करने के लिए https://akams/genai-js-course पर जाएं",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 5,
    "total_chunks": 18
  },
  {
    "id": "96636de6e1c34910bea52bb7871dc3e9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "जाएंपाठ जो मूलभूत से लेकर RAG तक सब कुछ कवर करते हैं। GenAI और हमारे साथी ऐप का उपयोग करके ऐतिहासिक पात्रों के साथ बातचीत करें। मजेदार और आकर्षक कहानी, आप समय यात्रा करेंगेप्रत्येक पाठ में शामिल हैं: - असाइनमेंट पूरा करना - ज्ञान जांच - चुनौती - विषयों को सीखने के लिए मार्गदर्शन जैसे: - प्रॉम्प्टिंग और प्रॉम्प्ट इंजीनियरिंग - टेक्स्ट और इमेज ऐप जनरेशन - सर्च ऐप्स शुरू करने के लिए https://akams/genai-js-course पर जाएं🌱 शुरुआत करना\nशिक्षकों, हमने इस पाठ्यक्रम का उपयोग करने के लिए कुछ सुझाव शामिल किए हैं। हमें आपके फीडबैक की आवश्यकता है हमारे चर्चा मंच में",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 516,
    "chunk_index": 6,
    "total_chunks": 18
  },
  {
    "id": "2a19be7f31c7ab1255c8fa854db1fe62",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "मजेदार और आकर्षक कहानी, आप समय यात्रा करेंगेप्रत्येक पाठ में शामिल हैं: - असाइनमेंट पूरा करना - ज्ञान जांच - चुनौती - विषयों को सीखने के लिए मार्गदर्शन जैसे: - प्रॉम्प्टिंग और प्रॉम्प्ट इंजीनियरिंग - टेक्स्ट और इमेज ऐप जनरेशन - सर्च ऐप्स शुरू करने के लिए https://akams/genai-js-course पर जाएं🌱 शुरुआत करना शिक्षकों, हमने इस पाठ्यक्रम का उपयोग करने के लिए कुछ सुझाव शामिल किए हैं। हमें आपके फीडबैक की आवश्यकता है हमारे चर्चा मंच मेंसीखने वाले, प्रत्येक पाठ के लिए, प्री-लेक्चर क्विज़ से शुरू करें और लेक्चर सामग्री पढ़ने, विभिन्न गतिविधियों को पूरा करने और पोस्ट-लेक्चर क्विज़ के साथ अपनी समझ की जांच करें।\nअपने सीखने के अनुभव को बेहतर बनाने के लिए, अपने साथियों के साथ प्रोजेक्ट्स पर काम करें",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 640,
    "chunk_index": 7,
    "total_chunks": 18
  },
  {
    "id": "e2037a224cc3ed5ea3a2ba69be024bc7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "लिए https://akams/genai-js-course पर जाएं🌱 शुरुआत करना शिक्षकों, हमने इस पाठ्यक्रम का उपयोग करने के लिए कुछ सुझाव शामिल किए हैं। हमें आपके फीडबैक की आवश्यकता है हमारे चर्चा मंच मेंसीखने वाले, प्रत्येक पाठ के लिए, प्री-लेक्चर क्विज़ से शुरू करें और लेक्चर सामग्री पढ़ने, विभिन्न गतिविधियों को पूरा करने और पोस्ट-लेक्चर क्विज़ के साथ अपनी समझ की जांच करें। अपने सीखने के अनुभव को बेहतर बनाने के लिए, अपने साथियों के साथ प्रोजेक्ट्स पर काम करेंचर्चाओं को हमारे चर्चा मंच में प्रोत्साहित किया जाता है, जहां हमारे मॉडरेटर आपकी मदद के लिए उपलब्ध होंगे।\nअपनी शिक्षा को आगे बढ़ाने के लिए, हम Microsoft Learn पर अतिरिक्त अध्ययन सामग्री का पता लगाने की अत्यधिक अनुशंसा करते हैं।\n📋 अपना वातावरण सेट करना\nइस पाठ्यक्रम में एक तैयार विकास वातावरण है",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 8,
    "total_chunks": 18
  },
  {
    "id": "1528f12a501149ee93ad9f003235bd36",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "साथ अपनी समझ की जांच करें। अपने सीखने के अनुभव को बेहतर बनाने के लिए, अपने साथियों के साथ प्रोजेक्ट्स पर काम करेंचर्चाओं को हमारे चर्चा मंच में प्रोत्साहित किया जाता है, जहां हमारे मॉडरेटर आपकी मदद के लिए उपलब्ध होंगे। अपनी शिक्षा को आगे बढ़ाने के लिए, हम Microsoft Learn पर अतिरिक्त अध्ययन सामग्री का पता लगाने की अत्यधिक अनुशंसा करते हैं। 📋 अपना वातावरण सेट करना इस पाठ्यक्रम में एक तैयार विकास वातावरण हैजब आप शुरू करते हैं, तो आप Codespace (एक ब्राउज़र-आधारित, बिना इंस्टॉल की आवश्यकता वाला वातावरण) या अपने कंप्यूटर पर स्थानीय रूप से Visual Studio Code जैसे टेक्स्ट एडिटर का उपयोग करके इसे चला सकते हैं।\nअपना रिपॉजिटरी बनाएं\nअपने काम को आसानी से सहेजने के लिए, यह अनुशंसा की जाती है कि आप इस रिपॉजिटरी की अपनी कॉपी बनाएं। आप पेज के शीर्ष पर Use this template बटन पर क्लिक करके ऐसा कर सकते हैं। यह आपके GitHub खाते में पाठ्यक्रम की एक नई रिपॉजिटरी बनाएगा।\nइन चरणों का पालन करें:\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 817,
    "chunk_index": 9,
    "total_chunks": 18
  },
  {
    "id": "7bd8a527c2b1973e09e46f1bce56e771",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "अपने कंप्यूटर पर स्थानीय रूप से Visual Studio Code जैसे टेक्स्ट एडिटर का उपयोग करके इसे चला सकते हैं। अपना रिपॉजिटरी बनाएं अपने काम को आसानी से सहेजने के लिए, यह अनुशंसा की जाती है कि आप इस रिपॉजिटरी की अपनी कॉपी बनाएं। आप पेज के शीर्ष पर Use this template बटन पर क्लिक करके ऐसा कर सकते हैं। यह आपके GitHub खाते में पाठ्यक्रम की एक नई रिपॉजिटरी बनाएगा। इन चरणों का पालन करें: 1रिपॉजिटरी को फोर्क करें: इस पेज के शीर्ष-दाएं कोने में \"Fork\" बटन पर क्लिक करें।\n2 रिपॉजिटरी को क्लोन करें: git clone https://github com/microsoft/Web-Dev-For-Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 10,
    "total_chunks": 18
  },
  {
    "id": "5fd299df1eb51bd0d92bdd059aae2f66",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "काम को आसानी से सहेजने के लिए, यह अनुशंसा की जाती है कि आप इस रिपॉजिटरी की अपनी कॉपी बनाएं। आप पेज के शीर्ष पर Use this template बटन पर क्लिक करके ऐसा कर सकते हैं। यह आपके GitHub खाते में पाठ्यक्रम की एक नई रिपॉजिटरी बनाएगा। इन चरणों का पालन करें: 1रिपॉजिटरी को फोर्क करें: इस पेज के शीर्ष-दाएं कोने में \"Fork\" बटन पर क्लिक करें। 2 रिपॉजिटरी को क्लोन करें: git clone https://github com/microsoft/Web-Dev-For-Beginnersgit\nCodespace में पाठ्यक्रम चलाना\nइस रिपॉजिटरी की अपनी कॉपी में, जिसे आपने बनाया है, Code बटन पर क्लिक करें और Open with Codespaces चुनें। यह आपके काम करने के लिए एक नया Codespace बनाएगा।\nअपने कंप्यूटर पर स्थानीय रूप से पाठ्यक्रम चलाना\nअपने कंप्यूटर पर इस पाठ्यक्रम को चलाने के लिए, आपको एक टेक्स्ट एडिटर, एक ब्राउज़र और एक कमांड लाइन टूल की आवश्यकता होगी। हमारा पहला पाठ, प्रोग्रामिंग भाषाओं और टूल्स का परिचय, आपको इन टूल्स के विभिन्न विकल्पों के माध्यम से मार्गदर्शन करेगा ताकि आप अपने लिए सबसे अच्छा विकल्प चुन सकें।\nहमारी सिफारिश है कि आप Visual Studio Code का उपयोग करें, जिसमें एक अंतर्निहित टर्मिनल भी है। आप यहां से Visual Studio Code डाउनलोड कर सकते हैं।\nअपने कंप्यूटर पर अपनी रिपॉजिटरी को क्लोन करें। आप Code बटन पर क्लिक करके और URL को कॉपी करके ऐसा कर सकते हैं:\nफिर, Visual Studio Code के भीतर टर्मिनल खोलें और निम्नलिखित कमांड चलाएं, <your-repository-url> को आपके द्वारा कॉपी किए गए URL से बदलें:\nbash\ngit clone <your-repository-url>\nVisual Studio Code में फ़ोल्डर खोलें। आप File > Open Folder पर क्लिक करके और उस फ़ोल्डर का चयन करके ऐसा कर सकते हैं जिसे आपने अभी क्लोन किया है।\nअनुशंसित Visual Studio Code एक्सटेंशन:\nLive Server - HTML पेजों को Visual Studio Code के भीतर प्रीव्यू करने के लिए\nCopilot - कोड को तेजी से लिखने में मदद करने के लिए\n📂 प्रत्येक पाठ में शामिल हैं:\nवैकल्पिक स्केच नोट\nवैकल्पिक पूरक वीडियो\nप्री-लेसन वार्मअप क्विज़\nलिखित पाठ\nप्रोजेक्ट-आधारित पाठों के लिए, प्रोजेक्ट बनाने के लिए चरण-दर-चरण गाइड\nज्ञान जांच\nएक चुनौती\nपूरक पढ़ाई\nअसाइनमेंट\nपोस्ट-लेसन क्विज़\nक्विज़ के बारे में एक नोट: सभी क्विज़ Quiz-app फ़ोल्डर में हैं, कुल 48 क्विज़, प्रत्येक में तीन प्रश्न। वे पाठों के भीतर लिंक किए गए हैं। Quiz-app को स्थानीय रूप से चलाया जा सकता है या Azure पर डिप्लॉय किया जा सकता है; quiz-app फ़ोल्डर में दिए गए निर्देशों का पालन करें। उन्हें धीरे-धीरे स्थानीयकृत किया जा रहा है।\n🗃️ पाठ\n|     |                       प्रोजेक्ट का नाम                       |                            सिखाए गए अवधारणाएं                             | सीखने के उद्देश्य                                                                                                                 |                                                         लिंक किया गया पाठ                                                          |         लेखक          |\n| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     शुरुआत करना                      |           प्रोग्रामिंग और टूल्स का परिचय           | अधिकांश प्रोग्रामिंग भाषाओं के पीछे की मूल बातें और सॉफ्टवेयर के बारे में जानें जो पेशेवर डेवलपर्स को उनके काम में मदद करता है | प्रोग्रामिंग भाषाओं और टूल्स का परिचय |         Jasmine         |\n| 02  |                     शुरुआत करना                      |             GitHub की मूल बातें, टीम के साथ काम करना             | अपने प्रोजेक्ट में GitHub का उपयोग कैसे करें, कोड बेस पर दूसरों के साथ सहयोग कैसे करें                                                    |                            GitHub का परिचय                             |          Floor          |\n| 03  |                     शुरुआत करना                      |                             एक्सेसिबिलिटी                              | वेब एक्सेसिबिलिटी की मूल बातें जानें                                                                                               |                       एक्सेसिबिलिटी के मूल सिद्धांत                       |       Christopher       |\n| 04  |                        JS की मूल बातें                         |                         JavaScript डेटा प्रकार                          | JavaScript डेटा प्रकार की मूल बातें                                                                                                 |                                       डेटा प्रकार                                        |         Jasmine         |\n| 05  |                        JS की मूल बातें                         |                         फंक्शन्स और मेथड्स                          | एप्लिकेशन के लॉजिक फ्लो को प्रबंधित करने के लिए फंक्शन्स और मेथड्स के बारे में जानें                                                             |                              फंक्शन्स और मेथड्स                               | Jasmine और Christopher |\n| 06  |                        JS की मूल बातें                         |                        JS के साथ निर्णय लेना                        | निर्णय लेने के तरीकों का उपयोग करके अपने कोड में कंडीशन बनाने का तरीका जानें                                                           |                                 निर्णय लेना                                  |         Jasmine         |\n| 07  |                        JS की मूल बातें                         |                            Arrays और Loops                            | JavaScript में डेटा के साथ काम करने के लिए Arrays और Loops का उपयोग करें                                                                                 |                                   Arrays और Loops                                    |         Jasmine         |\n| 08  |       Terrarium       |                            HTML का अभ्यास                            | ऑनलाइन टेरारियम बनाने के लिए HTML बनाएं, लेआउट बनाने पर ध्यान केंद्रित करें                                                         |                                 HTML का परिचय                                 |           Jen           |\n| 09  |       Terrarium       |                            CSS का अभ्यास                             | ऑनलाइन टेरारियम को स्टाइल करने के लिए CSS बनाएं, CSS की मूल बातें सहित पेज को उत्तरदायी बनाने पर ध्यान केंद्रित करें                     |                                  CSS का परिचय                                  |           Jen           |\n| 10  |            Terrarium            |                 JavaScript क्लोजर, DOM मैनिपुलेशन                  | टेरारियम को ड्रैग/ड्रॉप इंटरफेस के रूप में कार्य करने के लिए JavaScript बनाएं, क्लोजर और DOM मैनिपुलेशन पर ध्यान केंद्रित करें             |                  JavaScript क्लोजर, DOM मैनिपुलेशन                   |           Jen           |\n| 11  |          Typing Game          |                          टाइपिंग गेम बनाएं                           | अपने JavaScript ऐप के लॉजिक को चलाने के लिए कीबोर्ड इवेंट्स का उपयोग करना सीखें                                                          |                                इवेंट-ड्रिवन प्रोग्रामिंग                                |       Christopher       |\n| 12  | Green Browser Extension |                         ब्राउज़र के साथ काम करना                          | जानें कि ब्राउज़र कैसे काम करते हैं, उनका इतिहास, और ब्राउज़र एक्सटेंशन के पहले तत्वों को कैसे तैयार करें                              |                               About Browsers                                |           Jen           |\n| 13  | Green Browser Extension | फॉर्म बनाना, API कॉल करना और वेरिएबल्स को लोकल स्टोरेज में स्टोर करना    | अपने ब्राउज़र एक्सटेंशन के जावास्क्रिप्ट तत्वों को बनाएं ताकि लोकल स्टोरेज में स्टोर वेरिएबल्स का उपयोग करके API कॉल कर सकें            |                APIs, Forms, and Local Storage                 |           Jen           |\n| 14  | Green Browser Extension |          ब्राउज़र में बैकग्राउंड प्रोसेस, वेब परफॉर्मेंस                  | ब्राउज़र के बैकग्राउंड प्रोसेस का उपयोग करके एक्सटेंशन के आइकन को प्रबंधित करें; वेब परफॉर्मेंस और कुछ ऑप्टिमाइज़ेशन के बारे में जानें    |             Background Tasks and Performance              |           Jen           |\n| 15  |           Space Game           |             जावास्क्रिप्ट के साथ अधिक उन्नत गेम डेवलपमेंट               | गेम बनाने की तैयारी में क्लास और कंपोज़िशन दोनों का उपयोग करके इनहेरिटेंस और पब/सब पैटर्न के बारे में जानें                              |                      Introduction to Advanced Game Development                       |          Chris          |\n| 16  |           Space Game           |                           कैनवास पर ड्रॉ करना                           | Canvas API के बारे में जानें, जिसका उपयोग स्क्रीन पर तत्वों को ड्रॉ करने के लिए किया जाता है                                            |                                Drawing to Canvas                                |          Chris          |\n| 17  |           Space Game           |                   स्क्रीन पर तत्वों को मूव करना                         | जानें कि कैसे तत्वों को कार्टेशियन कोऑर्डिनेट्स और Canvas API का उपयोग करके गति दी जा सकती है                                         |                           Moving Elements Around                           |          Chris          |\n| 18  |           Space Game           |                          टकराव का पता लगाना                            | तत्वों को टकराने और एक-दूसरे पर प्रतिक्रिया देने के लिए बनाएं, कीप्रेस का उपयोग करें और गेम की परफॉर्मेंस सुनिश्चित करने के लिए कूलडाउन फंक्शन प्रदान करें |                              Collision Detection                              |          Chris          |\n| 19  |           Space Game           |                             स्कोर रखना                                 | गेम की स्थिति और परफॉर्मेंस के आधार पर गणितीय गणना करें                                                     |                                    Keeping Score                                    |          Chris          |\n| 20  |           Space Game           |                     गेम को समाप्त करना और पुनः शुरू करना                | गेम को समाप्त करने और पुनः शुरू करने के बारे में जानें, जिसमें एसेट्स को साफ करना और वेरिएबल्स के मानों को रीसेट करना शामिल है          |                                The Ending Condition                                 |          Chris          |\n| 21  |         Banking App          |                 एक वेब ऐप में HTML टेम्पलेट्स और रूट्स                  | रूटिंग और HTML टेम्पलेट्स का उपयोग करके एक मल्टीपेज वेबसाइट की संरचना तैयार करना सीखें                                                |                            HTML Templates and Routes                             |          Yohan          |\n| 22  |         Banking App          |                  लॉगिन और रजिस्ट्रेशन फॉर्म बनाना                       | फॉर्म बनाने और वेलिडेशन रूटीन को संभालने के बारे में जानें                                                   |                                           Forms                                           |          Yohan          |\n| 23  |         Banking App          |                   डेटा को प्राप्त करने और उपयोग करने के तरीके           | जानें कि आपका ऐप डेटा को कैसे प्राप्त करता है, स्टोर करता है, और उसे डिस्पोज़ करता है                                                |                                            Data                                            |          Yohan          |\n| 24  |         Banking App          |                      स्टेट मैनेजमेंट की अवधारणाएं                       | जानें कि आपका ऐप स्टेट को कैसे बनाए रखता है और इसे प्रोग्रामेटिक रूप से कैसे प्रबंधित किया जा सकता है                                  |                                State Management                                |          Yohan          |\n🏫 शिक्षण पद्धति\nहमारे पाठ्यक्रम को दो प्रमुख शिक्षण सिद्धांतों को ध्यान में रखकर डिज़ाइन किया गया है:\n* प्रोजेक्ट-आधारित शिक्षा\n* बार-बार क्विज़\nयह प्रोग्राम जावास्क्रिप्ट, HTML, और CSS की मूल बातें सिखाता है, साथ ही आज के वेब डेवलपर्स द्वारा उपयोग किए जाने वाले नवीनतम टूल और तकनीकों को भी। छात्रों को टाइपिंग गेम, वर्चुअल टेरारियम, पर्यावरण-अनुकूल ब्राउज़र एक्सटेंशन, स्पेस-इनवेडर-स्टाइल गेम, और व्यवसायों के लिए एक बैंकिंग ऐप बनाकर व्यावहारिक अनुभव प्राप्त करने का अवसर मिलेगा। इस श्रृंखला के अंत तक, छात्रों को वेब डेवलपमेंट की एक ठोस समझ हो जाएगी।\n🎓 आप इस पाठ्यक्रम की शुरुआती कुछ कक्षाओं को Learn Path पर Microsoft Learn पर ले सकते हैं",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 6144,
    "chunk_index": 11,
    "total_chunks": 18
  },
  {
    "id": "4e036cd6d5a279453455a1d86a42d3e3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "साथ ही आज के वेब डेवलपर्स द्वारा उपयोग किए जाने वाले नवीनतम टूल और तकनीकों को भी। छात्रों को टाइपिंग गेम, वर्चुअल टेरारियम, पर्यावरण-अनुकूल ब्राउज़र एक्सटेंशन, स्पेस-इनवेडर-स्टाइल गेम, और व्यवसायों के लिए एक बैंकिंग ऐप बनाकर व्यावहारिक अनुभव प्राप्त करने का अवसर मिलेगा। इस श्रृंखला के अंत तक, छात्रों को वेब डेवलपमेंट की एक ठोस समझ हो जाएगी। 🎓 आप इस पाठ्यक्रम की शुरुआती कुछ कक्षाओं को Learn Path पर Microsoft Learn पर ले सकते हैंसुनिश्चित करके कि सामग्री प्रोजेक्ट्स के साथ मेल खाती है, प्रक्रिया छात्रों के लिए अधिक आकर्षक बन जाती है और अवधारणाओं की समझ को बढ़ावा मिलता है। हमने जावास्क्रिप्ट की मूल बातों को समझाने के लिए कई शुरुआती पाठ भी लिखे हैं, जिन्हें \"Beginners Series to: JavaScript\" वीडियो ट्यूटोरियल संग्रह के वीडियो के साथ जोड़ा गया है, जिनमें से कुछ लेखकों ने इस पाठ्यक्रम में योगदान दिया है।\nइसके अलावा, कक्षा से पहले एक कम दबाव वाला क्विज़ छात्र को किसी विषय को सीखने के लिए प्रेरित करता है, जबकि कक्षा के बाद एक दूसरा क्विज़ अवधारणाओं को और अधिक बनाए रखने में मदद करता है। यह पाठ्यक्रम लचीला और मज़ेदार होने के लिए डिज़ाइन किया गया है और इसे पूरे या आंशिक रूप से लिया जा सकता है। प्रोजेक्ट्स छोटे से शुरू होते हैं और 12-सप्ताह के चक्र के अंत तक धीरे-धीरे जटिल हो जाते हैं।\nहालांकि हमने जानबूझकर जावास्क्रिप्ट फ्रेमवर्क को शामिल करने से बचा है ताकि फ्रेमवर्क अपनाने से पहले एक वेब डेवलपर के रूप में आवश्यक बुनियादी कौशल पर ध्यान केंद्रित किया जा सके, इस पाठ्यक्रम को पूरा करने के बाद एक अच्छा अगला कदम Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1349,
    "chunk_index": 12,
    "total_chunks": 18
  },
  {
    "id": "8c40cfb933914bbce774d9c944b26e6f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "डिज़ाइन किया गया है और इसे पूरे या आंशिक रूप से लिया जा सकता है। प्रोजेक्ट्स छोटे से शुरू होते हैं और 12-सप्ताह के चक्र के अंत तक धीरे-धीरे जटिल हो जाते हैं। हालांकि हमने जानबूझकर जावास्क्रिप्ट फ्रेमवर्क को शामिल करने से बचा है ताकि फ्रेमवर्क अपनाने से पहले एक वेब डेवलपर के रूप में आवश्यक बुनियादी कौशल पर ध्यान केंद्रित किया जा सके, इस पाठ्यक्रम को पूरा करने के बाद एक अच्छा अगला कदम Nodejs के बारे में सीखना होगा, जो एक अन्य वीडियो संग्रह में उपलब्ध है: \"Beginner Series to: Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 13,
    "total_chunks": 18
  },
  {
    "id": "9913db27bab06b6c45c13e9bc9e1eb30",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "से शुरू होते हैं और 12-सप्ताह के चक्र के अंत तक धीरे-धीरे जटिल हो जाते हैं। हालांकि हमने जानबूझकर जावास्क्रिप्ट फ्रेमवर्क को शामिल करने से बचा है ताकि फ्रेमवर्क अपनाने से पहले एक वेब डेवलपर के रूप में आवश्यक बुनियादी कौशल पर ध्यान केंद्रित किया जा सके, इस पाठ्यक्रम को पूरा करने के बाद एक अच्छा अगला कदम Nodejs के बारे में सीखना होगा, जो एक अन्य वीडियो संग्रह में उपलब्ध है: \"Beginner Series to: Nodejs\"।\nहमारे Code of Conduct और Contributing दिशानिर्देश देखें। हम आपकी रचनात्मक प्रतिक्रिया का स्वागत करते हैं",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 14,
    "total_chunks": 18
  },
  {
    "id": "eb0c7d51b0febd2a62b3c6b8ef8e3377",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "हालांकि हमने जानबूझकर जावास्क्रिप्ट फ्रेमवर्क को शामिल करने से बचा है ताकि फ्रेमवर्क अपनाने से पहले एक वेब डेवलपर के रूप में आवश्यक बुनियादी कौशल पर ध्यान केंद्रित किया जा सके, इस पाठ्यक्रम को पूरा करने के बाद एक अच्छा अगला कदम Nodejs के बारे में सीखना होगा, जो एक अन्य वीडियो संग्रह में उपलब्ध है: \"Beginner Series to: Nodejs\"। हमारे Code of Conduct और Contributing दिशानिर्देश देखें। हम आपकी रचनात्मक प्रतिक्रिया का स्वागत करते हैं🧭 ऑफ़लाइन एक्सेस\nआप इस डाक्यूमेंटेशन को ऑफ़लाइन Docsify का उपयोग करके चला सकते हैं। इस रिपॉजिटरी को फोर्क करें, Docsify इंस्टॉल करें अपने लोकल मशीन पर, और फिर इस रिपॉजिटरी के रूट फोल्डर में docsify serve टाइप करें। वेबसाइट आपके लोकलहोस्ट पर पोर्ट 3000 पर सर्व की जाएगी: localhost:3000।\n📘 पीडीएफ\nसभी पाठों की एक पीडीएफ यहां पाई जा सकती है।\n🎒 अन्य पाठ्यक्रम\nहमारी टीम अन्य पाठ्यक्रम भी बनाती है",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 733,
    "chunk_index": 15,
    "total_chunks": 18
  },
  {
    "id": "35020a45129b2be668e17083f5daed1d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "प्रतिक्रिया का स्वागत करते हैं🧭 ऑफ़लाइन एक्सेस आप इस डाक्यूमेंटेशन को ऑफ़लाइन Docsify का उपयोग करके चला सकते हैं। इस रिपॉजिटरी को फोर्क करें, Docsify इंस्टॉल करें अपने लोकल मशीन पर, और फिर इस रिपॉजिटरी के रूट फोल्डर में docsify serve टाइप करें। वेबसाइट आपके लोकलहोस्ट पर पोर्ट 3000 पर सर्व की जाएगी: localhost:3000। 📘 पीडीएफ सभी पाठों की एक पीडीएफ यहां पाई जा सकती है। 🎒 अन्य पाठ्यक्रम हमारी टीम अन्य पाठ्यक्रम भी बनाती हैदेखें:\nGenerative AI for Beginners\nGenerative AI for Beginners NET\nGenerative AI with JavaScript\nGenerative AI with Java\nAI for Beginners\nData Science for Beginners\nML for Beginners\nCybersecurity for Beginners\nWeb Dev for Beginners\nIoT for Beginners\nXR Development for Beginners\nMastering GitHub Copilot for Agentic use\nMastering GitHub Copilot for C#/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 16,
    "total_chunks": 18
  },
  {
    "id": "3764b40610ad5ac92c213977ddbd1dcf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hi\\README.md",
    "source_type": "git_repo",
    "title": "शुरुआती लोगों के लिए वेब डेवलपमेंट - एक पाठ्यक्रम",
    "content": "जाएगी: localhost:3000। 📘 पीडीएफ सभी पाठों की एक पीडीएफ यहां पाई जा सकती है। 🎒 अन्य पाठ्यक्रम हमारी टीम अन्य पाठ्यक्रम भी बनाती हैदेखें: Generative AI for Beginners Generative AI for Beginners NET Generative AI with JavaScript Generative AI with Java AI for Beginners Data Science for Beginners ML for Beginners Cybersecurity for Beginners Web Dev for Beginners IoT for Beginners XR Development for Beginners Mastering GitHub Copilot for Agentic use Mastering GitHub Copilot for C#/NET Developers\nChoose Your Own Copilot Adventure\nलाइसेंस\nयह रिपॉजिटरी MIT लाइसेंस के तहत लाइसेंस प्राप्त है। अधिक जानकारी के लिए LICENSE फ़ाइल देखें।\nअस्वीकरण:\nयह दस्तावेज़ AI अनुवाद सेवा Co-op Translator का उपयोग करके अनुवादित किया गया है। जबकि हम सटीकता के लिए प्रयासरत हैं, कृपया ध्यान दें कि स्वचालित अनुवाद में त्रुटियां या अशुद्धियां हो सकती हैं। मूल भाषा में उपलब्ध मूल दस्तावेज़ को प्रामाणिक स्रोत माना जाना चाहिए। महत्वपूर्ण जानकारी के लिए, पेशेवर मानव अनुवाद की सिफारिश की जाती है। इस अनुवाद के उपयोग से उत्पन्न किसी भी गलतफहमी या गलत व्याख्या के लिए हम उत्तरदायी नहीं हैं।",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 39980,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hi\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 708,
    "chunk_index": 17,
    "total_chunks": 18
  },
  {
    "id": "a5c015925a4172ee0374f416be5583a7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "教育者の皆さまへ\nこのカリキュラムを教室で使ってみませんか？ぜひご活用ください！\n実際、GitHub Classroomを使えば、GitHub上でそのまま利用することができます。\nそのためには、このリポジトリをフォークしてください。各レッスンごとにリポジトリを作成する必要があるため、各フォルダーを個別のリポジトリに分ける必要があります。そうすることで、GitHub Classroomが各レッスンを個別に認識できるようになります。\nこちらの詳細な手順を参考にして、教室のセットアップ方法をご確認ください。\nMoodle、Canvas、Blackboardでの利用\nこのカリキュラムは、これらの学習管理システム（LMS）でもうまく機能します！完全な内容を含むMoodleアップロードファイルを使用するか、一部の内容を含むCommon Cartridgeファイルを試してみてください。Moodle Cloudは完全なCommon Cartridgeエクスポートをサポートしていないため、Moodleダウンロードファイルを使用してCanvasにアップロードする方が適しています。ぜひ、より良い体験を提供するためのご意見をお聞かせください。\nMoodle教室でのカリキュラム\nCanvasでのカリキュラム\nリポジトリをそのまま利用する場合\nGitHub Classroomを使用せずに、このリポジトリをそのまま利用したい場合も可能です。その場合、どのレッスンを一緒に進めるかを学生に伝える必要があります。\nオンライン形式（Zoom、Teamsなど）では、クイズ用にブレイクアウトルームを作成し、学生が学習の準備を整えられるように指導することができます。その後、学生をクイズに招待し、指定した時間に「issue」として回答を提出させることができます。同様に、課題についても、学生がオープンな環境で共同作業を行う場合に適用できます。\nよりプライベートな形式を希望する場合は、学生にカリキュラムをレッスンごとにフォークし、自分のGitHubリポジトリ（プライベートリポジトリ）に保存するよう依頼し、あなたにアクセス権を付与してもらいます。これにより、学生はクイズや課題をプライベートに完了し、教室用リポジトリのissueを通じて提出することができます。\nオンライン教室形式でこのカリキュラムを活用する方法はたくさんあります。ぜひ、どの方法が最適だったか教えてください！\nご意見をお聞かせください！\nこのカリキュラムがあなたや学生にとって役立つものになるようにしたいと考えています。Teacher cornerで私たちとつながり、新しいissueを作成して、リクエスト、バグ、フィードバックをお寄せください。\n免責事項:\nこの文書は、AI翻訳サービス Co-op Translator を使用して翻訳されています。正確性を追求しておりますが、自動翻訳には誤りや不正確な部分が含まれる可能性があることをご承知おきください。元の言語で記載された文書が公式な情報源とみなされるべきです。重要な情報については、専門の人間による翻訳を推奨します。この翻訳の使用に起因する誤解や誤認について、当方は一切の責任を負いません。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4411,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 1153,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "11691a60d858ca5b16017f589194da34",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "初學者網頁開發課程 - 教學大綱\n透過 Microsoft Cloud Advocates 提供的 12 週全面課程，學習網頁開發的基礎知識。課程包含 24 節課，透過實作專案如植物箱、瀏覽器擴充功能及太空遊戲，深入學習 JavaScript、CSS 和 HTML。課程還包含測驗、討論及實際作業，幫助你提升技能並加強知識吸收。立即開始你的程式設計旅程吧！\n🧑‍🎓 你是學生嗎？\n造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你需要收藏並定期查看的頁面，因為我們每月都會更新內容。\n📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已正式推出\n不要錯過我們的全新生成式 AI 課程！\n造訪 https://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 368,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "4ea94f8f50f0936e982ca95b937dca52",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "初學者網頁開發課程 - 教學大綱\n透過 Microsoft Cloud Advocates 提供的 12 週全面課程，學習網頁開發的基礎知識。課程包含 24 節課，透過實作專案如植物箱、瀏覽器擴充功能及太空遊戲，深入學習 JavaScript、CSS 和 HTML。課程還包含測驗、討論及實際作業，幫助你提升技能並加強知識吸收。立即開始你的程式設計旅程吧！\n🧑‍🎓 你是學生嗎？\n造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你需要收藏並定期查看的頁面，因為我們每月都會更新內容。\n📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已正式推出\n不要錯過我們的全新生成式 AI 課程！\n造訪 https://akams/genai-js-course 開始學習！\n課程涵蓋從基礎到 RAG 的所有內容。\n使用生成式 AI 和我們的伴侶應用程式與歷史人物互動。\n有趣且引人入勝的故事情節，你將進行時光旅行！\n每節課都包含作業、知識檢測及挑戰，幫助你學習以下主題：\n- 提示及提示工程\n- 文本及圖像應用程式生成\n- 搜尋應用程式\n造訪 https://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 551,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "8dbaf8c81e7d732c54b9d7daf1457e65",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "初學者網頁開發課程 - 教學大綱\n透過 Microsoft Cloud Advocates 提供的 12 週全面課程，學習網頁開發的基礎知識。課程包含 24 節課，透過實作專案如植物箱、瀏覽器擴充功能及太空遊戲，深入學習 JavaScript、CSS 和 HTML。課程還包含測驗、討論及實際作業，幫助你提升技能並加強知識吸收。立即開始你的程式設計旅程吧！\n🧑‍🎓 你是學生嗎？\n造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你需要收藏並定期查看的頁面，因為我們每月都會更新內容。\n📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已正式推出\n不要錯過我們的全新生成式 AI 課程！\n造訪 https://akams/genai-js-course 開始學習！\n課程涵蓋從基礎到 RAG 的所有內容。\n使用生成式 AI 和我們的伴侶應用程式與歷史人物互動。\n有趣且引人入勝的故事情節，你將進行時光旅行！\n每節課都包含作業、知識檢測及挑戰，幫助你學習以下主題：\n- 提示及提示工程\n- 文本及圖像應用程式生成\n- 搜尋應用程式\n造訪 https://akams/genai-js-course 開始學習！\n🌱 開始學習\n教師們，我們已提供一些建議供您使用此課程。我們非常期待您在討論論壇中提供回饋！\n學習者，每節課開始前，先進行課前測驗，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。\n為了提升學習效果，與同儕合作完成專案吧！我們鼓勵你在討論論壇中進行討論，我們的版主團隊會回答你的問題。\n此外，我們強烈建議你探索 Microsoft Learn，以獲取更多學習資源。\n📋 設置你的環境\n此課程已準備好開發環境！開始學習時，你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或在本地電腦上使用文字編輯器如 Visual Studio Code。\n建立你的倉庫\n為了方便保存你的學習成果，建議你建立此倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。\n操作步驟：\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1042,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "7cb740a9a8f55c9dafbdb65ff48a48f5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "初學者網頁開發課程 - 教學大綱\n透過 Microsoft Cloud Advocates 提供的 12 週全面課程，學習網頁開發的基礎知識。課程包含 24 節課，透過實作專案如植物箱、瀏覽器擴充功能及太空遊戲，深入學習 JavaScript、CSS 和 HTML。課程還包含測驗、討論及實際作業，幫助你提升技能並加強知識吸收。立即開始你的程式設計旅程吧！\n🧑‍🎓 你是學生嗎？\n造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你需要收藏並定期查看的頁面，因為我們每月都會更新內容。\n📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已正式推出\n不要錯過我們的全新生成式 AI 課程！\n造訪 https://akams/genai-js-course 開始學習！\n課程涵蓋從基礎到 RAG 的所有內容。\n使用生成式 AI 和我們的伴侶應用程式與歷史人物互動。\n有趣且引人入勝的故事情節，你將進行時光旅行！\n每節課都包含作業、知識檢測及挑戰，幫助你學習以下主題：\n- 提示及提示工程\n- 文本及圖像應用程式生成\n- 搜尋應用程式\n造訪 https://akams/genai-js-course 開始學習！\n🌱 開始學習\n教師們，我們已提供一些建議供您使用此課程。我們非常期待您在討論論壇中提供回饋！\n學習者，每節課開始前，先進行課前測驗，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。\n為了提升學習效果，與同儕合作完成專案吧！我們鼓勵你在討論論壇中進行討論，我們的版主團隊會回答你的問題。\n此外，我們強烈建議你探索 Microsoft Learn，以獲取更多學習資源。\n📋 設置你的環境\n此課程已準備好開發環境！開始學習時，你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或在本地電腦上使用文字編輯器如 Visual Studio Code。\n建立你的倉庫\n為了方便保存你的學習成果，建議你建立此倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。\n操作步驟：\n1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1074,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "a3a8450aeab6d819f80d2dd3286d866f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "Microsoft Cloud Advocates 提供的 12 週全面課程，學習網頁開發的基礎知識。課程包含 24 節課，透過實作專案如植物箱、瀏覽器擴充功能及太空遊戲，深入學習 JavaScript、CSS 和 HTML。課程還包含測驗、討論及實際作業，幫助你提升技能並加強知識吸收。立即開始你的程式設計旅程吧！ 🧑‍🎓 你是學生嗎？ 造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你需要收藏並定期查看的頁面，因為我們每月都會更新內容。 📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已正式推出 不要錯過我們的全新生成式 AI 課程！ 造訪 https://akams/genai-js-course 開始學習！ 課程涵蓋從基礎到 RAG 的所有內容。 使用生成式 AI 和我們的伴侶應用程式與歷史人物互動。 有趣且引人入勝的故事情節，你將進行時光旅行！ 每節課都包含作業、知識檢測及挑戰，幫助你學習以下主題： - 提示及提示工程 - 文本及圖像應用程式生成 - 搜尋應用程式 造訪 https://akams/genai-js-course 開始學習！ 🌱 開始學習 教師們，我們已提供一些建議供您使用此課程。我們非常期待您在討論論壇中提供回饋！ 學習者，每節課開始前，先進行課前測驗，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。 為了提升學習效果，與同儕合作完成專案吧！我們鼓勵你在討論論壇中進行討論，我們的版主團隊會回答你的問題。 此外，我們強烈建議你探索 Microsoft Learn，以獲取更多學習資源。 📋 設置你的環境 此課程已準備好開發環境！開始學習時，你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或在本地電腦上使用文字編輯器如 Visual Studio Code。 建立你的倉庫 為了方便保存你的學習成果，建議你建立此倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。 操作步驟： 1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。 2克隆倉庫：git clone https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1060,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "e53eeea4f0709de81f75ffb1a185dcc8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "Advocates 提供的 12 週全面課程，學習網頁開發的基礎知識。課程包含 24 節課，透過實作專案如植物箱、瀏覽器擴充功能及太空遊戲，深入學習 JavaScript、CSS 和 HTML。課程還包含測驗、討論及實際作業，幫助你提升技能並加強知識吸收。立即開始你的程式設計旅程吧！ 🧑‍🎓 你是學生嗎？ 造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你需要收藏並定期查看的頁面，因為我們每月都會更新內容。 📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已正式推出 不要錯過我們的全新生成式 AI 課程！ 造訪 https://akams/genai-js-course 開始學習！ 課程涵蓋從基礎到 RAG 的所有內容。 使用生成式 AI 和我們的伴侶應用程式與歷史人物互動。 有趣且引人入勝的故事情節，你將進行時光旅行！ 每節課都包含作業、知識檢測及挑戰，幫助你學習以下主題： - 提示及提示工程 - 文本及圖像應用程式生成 - 搜尋應用程式 造訪 https://akams/genai-js-course 開始學習！ 🌱 開始學習 教師們，我們已提供一些建議供您使用此課程。我們非常期待您在討論論壇中提供回饋！ 學習者，每節課開始前，先進行課前測驗，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。 為了提升學習效果，與同儕合作完成專案吧！我們鼓勵你在討論論壇中進行討論，我們的版主團隊會回答你的問題。 此外，我們強烈建議你探索 Microsoft Learn，以獲取更多學習資源。 📋 設置你的環境 此課程已準備好開發環境！開始學習時，你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或在本地電腦上使用文字編輯器如 Visual Studio Code。 建立你的倉庫 為了方便保存你的學習成果，建議你建立此倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。 操作步驟： 1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。 2克隆倉庫：git clone https://githubcom/microsoft/Web-Dev-For-Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1070,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "49e3bfa59fbdfb48ff4ae320c32328dd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "Advocates 提供的 12 週全面課程，學習網頁開發的基礎知識。課程包含 24 節課，透過實作專案如植物箱、瀏覽器擴充功能及太空遊戲，深入學習 JavaScript、CSS 和 HTML。課程還包含測驗、討論及實際作業，幫助你提升技能並加強知識吸收。立即開始你的程式設計旅程吧！ 🧑‍🎓 你是學生嗎？ 造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你需要收藏並定期查看的頁面，因為我們每月都會更新內容。 📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已正式推出 不要錯過我們的全新生成式 AI 課程！ 造訪 https://akams/genai-js-course 開始學習！ 課程涵蓋從基礎到 RAG 的所有內容。 使用生成式 AI 和我們的伴侶應用程式與歷史人物互動。 有趣且引人入勝的故事情節，你將進行時光旅行！ 每節課都包含作業、知識檢測及挑戰，幫助你學習以下主題： - 提示及提示工程 - 文本及圖像應用程式生成 - 搜尋應用程式 造訪 https://akams/genai-js-course 開始學習！ 🌱 開始學習 教師們，我們已提供一些建議供您使用此課程。我們非常期待您在討論論壇中提供回饋！ 學習者，每節課開始前，先進行課前測驗，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。 為了提升學習效果，與同儕合作完成專案吧！我們鼓勵你在討論論壇中進行討論，我們的版主團隊會回答你的問題。 此外，我們強烈建議你探索 Microsoft Learn，以獲取更多學習資源。 📋 設置你的環境 此課程已準備好開發環境！開始學習時，你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或在本地電腦上使用文字編輯器如 Visual Studio Code。 建立你的倉庫 為了方便保存你的學習成果，建議你建立此倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。 操作步驟： 1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。 2克隆倉庫：git clone https://githubcom/microsoft/Web-Dev-For-Beginnersgit\n在 Codespace 中運行課程\n在你建立的倉庫副本中，點擊 Code 按鈕並選擇 Open with Codespaces。這將為你創建一個新的 Codespace 以供使用。\n在本地電腦上運行課程\n若要在本地電腦上運行課程，你需要一個文字編輯器、瀏覽器及命令行工具。我們的第一節課 程式語言及工具介紹 將引導你選擇適合自己的工具。\n我們推薦使用 Visual Studio Code 作為編輯器，它還內建了 終端。你可以在這裡下載 Visual Studio Code。\n將倉庫克隆到你的電腦。點擊 Code 按鈕並複製 URL：\n然後，在 Visual Studio Code 的 終端 中運行以下命令，將 <your-repository-url> 替換為你剛複製的 URL：\nbash\ngit clone <your-repository-url>\n在 Visual Studio Code 中打開資料夾。點擊 File > Open Folder，選擇你剛克隆的資料夾。\n推薦的 Visual Studio Code 擴充功能：\nLive Server - 在 Visual Studio Code 中預覽 HTML 頁面\nCopilot - 幫助你更快撰寫程式碼\n📂 每節課包含：\n選擇性手繪筆記\n選擇性補充影片\n課前暖身測驗\n書面課程\n專案型課程的逐步指南\n知識檢測\n挑戰\n補充閱讀\n作業\n課後測驗\n關於測驗的說明：所有測驗都包含在 Quiz-app 資料夾中，共有 48 個測驗，每個測驗包含三個問題。測驗已在課程中連結，測驗應用程式可以在本地運行或部署到 Azure；請按照 quiz-app 資料夾中的指示操作。測驗正在逐步本地化。\n🗃️ 課程\n|     |                       專案名稱                       |                            教授概念                             | 學習目標                                                                                                                 |                                                         課程連結                                                          |         作者          |\n| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     入門篇                      |           程式語言及工具介紹           | 學習大多數程式語言的基本原理及幫助專業開發者完成工作的軟體 | 程式語言及工具介紹 |         Jasmine         |\n| 02  |                     入門篇                      |             GitHub 基礎及團隊合作             | 學習如何在專案中使用 GitHub，如何與他人協作管理程式碼                                                    |                            GitHub 基礎                             |          Floor          |\n| 03  |                     入門篇                      |                             無障礙設計                              | 學習網頁無障礙設計的基礎                                                                                               |                       無障礙設計基礎                       |       Christopher       |\n| 04  |                        JS 基礎                         |                         JavaScript 資料型別                          | JavaScript 資料型別的基礎                                                                                                 |                                       資料型別                                        |         Jasmine         |\n| 05  |                        JS 基礎                         |                         函數及方法                          | 學習如何使用函數及方法管理應用程式的邏輯流程                                                             |                              函數及方法                               | Jasmine 和 Christopher |\n| 06  |                        JS 基礎                         |                        使用 JS 做出決策                        | 學習如何使用決策方法在程式碼中建立條件                                                           |                                 做出決策                                  |         Jasmine         |\n| 07  |                        JS 基礎                         |                            陣列及迴圈                            | 使用 JavaScript 中的陣列及迴圈處理資料                                                                                 |                                   陣列及迴圈                                    |         Jasmine         |\n| 08  |       植物箱       |                            HTML 實作                            | 建立 HTML 以創建線上植物箱，專注於建立網頁佈局                                                         |                                 HTML 介紹                                 |           Jen           |\n| 09  |       植物箱       |                            CSS 實作                             | 建立 CSS 以設計線上植物箱，專注於 CSS 基礎及使網頁響應式                     |                                  CSS 介紹                                  |           Jen           |\n| 10  |            植物箱            |                 JavaScript 閉包及 DOM 操作                  | 建立 JavaScript 使植物箱具備拖放功能，專注於閉包及 DOM 操作             |                  JavaScript 閉包及 DOM 操作                   |           Jen           |\n| 11  |          打字遊戲          |                          建立打字遊戲                           | 學習如何使用鍵盤事件驅動 JavaScript 應用程式的邏輯                                                          |                                事件驅動程式設計                                |       Christopher       |\n| 12  | Green Browser Extension |                         與瀏覽器互動                          | 學習瀏覽器的運作原理、歷史，以及如何搭建瀏覽器擴展的基本元素                               |                               關於瀏覽器                                |           Jen           |\n| 13  | Green Browser Extension | 建立表單、調用 API 並將變數存儲於本地存儲中                   | 建立瀏覽器擴展的 JavaScript 元素，使用存儲於本地存儲中的變數來調用 API                      |                API、表單與本地存儲                 |           Jen           |\n| 14  | Green Browser Extension |          瀏覽器中的背景進程與網頁效能          | 使用瀏覽器的背景進程來管理擴展的圖標；學習網頁效能以及一些優化方法   |             背景任務與效能              |           Jen           |\n| 15  |           Space Game           |             更高級的 JavaScript 遊戲開發             | 學習如何使用類別與組合進行繼承，以及 Pub/Sub 模式，為開發遊戲做好準備              |                      高級遊戲開發介紹                       |          Chris          |\n| 16  |           Space Game           |                           繪製到畫布                            | 學習如何使用 Canvas API，將元素繪製到螢幕上                                                                       |                                繪製到畫布                                |          Chris          |\n| 17  |           Space Game           |                   在螢幕上移動元素                    | 探索如何使用笛卡爾座標系與 Canvas API 讓元素產生運動                                            |                           移動元素                           |          Chris          |\n| 18  |           Space Game           |                          碰撞檢測                           | 讓元素通過按鍵碰撞並相互反應，並提供冷卻功能以確保遊戲效能    |                              碰撞檢測                              |          Chris          |\n| 19  |           Space Game           |                             計分                              | 根據遊戲的狀態與表現進行數學計算                                                                |                                    計分                                    |          Chris          |\n| 20  |           Space Game           |                     結束與重啟遊戲                     | 學習如何結束與重啟遊戲，包括清理資產與重置變數值                              |                                結束條件                                 |          Chris          |\n| 21  |         Banking App          |                 網頁應用中的 HTML 模板與路由                 | 學習如何使用路由與 HTML 模板來搭建多頁網站的架構                             |                            HTML 模板與路由                             |          Yohan          |\n| 22  |         Banking App          |                  建立登入與註冊表單                   | 學習如何建立表單並處理驗證流程                                                                          |                                           表單                                           |          Yohan          |\n| 23  |         Banking App          |                   獲取與使用數據的方法                   | 學習數據如何在應用中流動，如何獲取、存儲與處理數據                                                 |                                            數據                                            |          Yohan          |\n| 24  |         Banking App          |                      狀態管理的概念                      | 學習應用如何保留狀態以及如何以程式化方式進行管理                                                              |                                狀態管理                                |          Yohan          |\n🏫 教學法\n我們的課程設計基於兩個關鍵的教學原則：\n* 項目式學習\n* 頻繁的小測驗\n該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具與技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。到課程結束時，學生將對網頁開發有扎實的理解。\n🎓 你可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！\n通過確保內容與項目相符，學習過程對學生來說更具吸引力，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。\n此外，課前的小測驗可以幫助學生集中注意力學習某個主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習，也可以部分學習。項目從簡單開始，並在 12 週的學習周期內逐漸變得複雜。\n我們有意避免引入 JavaScript 框架，以便專注於作為網頁開發者在採用框架之前所需的基本技能。完成本課程後，學習 Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 4328,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "89c4878173af4e120834c176ea573865",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "Yohan | | 22 | Banking App | 建立登入與註冊表單 | 學習如何建立表單並處理驗證流程 | 表單 | Yohan | | 23 | Banking App | 獲取與使用數據的方法 | 學習數據如何在應用中流動，如何獲取、存儲與處理數據 | 數據 | Yohan | | 24 | Banking App | 狀態管理的概念 | 學習應用如何保留狀態以及如何以程式化方式進行管理 | 狀態管理 | Yohan | 🏫 教學法 我們的課程設計基於兩個關鍵的教學原則： * 項目式學習 * 頻繁的小測驗 該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具與技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。到課程結束時，學生將對網頁開發有扎實的理解。 🎓 你可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與項目相符，學習過程對學生來說更具吸引力，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的小測驗可以幫助學生集中注意力學習某個主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習，也可以部分學習。項目從簡單開始，並在 12 週的學習周期內逐漸變得複雜。 我們有意避免引入 JavaScript 框架，以便專注於作為網頁開發者在採用框架之前所需的基本技能。完成本課程後，學習 Nodejs 是一個不錯的下一步選擇，可以參考另一個視頻系列：\"Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 876,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "b02acf87bf13730a882dbeda3434a0b6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "| | 22 | Banking App | 建立登入與註冊表單 | 學習如何建立表單並處理驗證流程 | 表單 | Yohan | | 23 | Banking App | 獲取與使用數據的方法 | 學習數據如何在應用中流動，如何獲取、存儲與處理數據 | 數據 | Yohan | | 24 | Banking App | 狀態管理的概念 | 學習應用如何保留狀態以及如何以程式化方式進行管理 | 狀態管理 | Yohan | 🏫 教學法 我們的課程設計基於兩個關鍵的教學原則： * 項目式學習 * 頻繁的小測驗 該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具與技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。到課程結束時，學生將對網頁開發有扎實的理解。 🎓 你可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與項目相符，學習過程對學生來說更具吸引力，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的小測驗可以幫助學生集中注意力學習某個主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習，也可以部分學習。項目從簡單開始，並在 12 週的學習周期內逐漸變得複雜。 我們有意避免引入 JavaScript 框架，以便專注於作為網頁開發者在採用框架之前所需的基本技能。完成本課程後，學習 Nodejs 是一個不錯的下一步選擇，可以參考另一個視頻系列：\"Nodejs 初學者系列\"。\n請參閱我們的 行為準則 和 貢獻指南。我們歡迎你的建設性反饋！\n🧭 離線訪問\n你可以使用 Docsify 離線運行此文檔。Fork 此倉庫，在本地機器上安裝 Docsify，然後在此倉庫的根目錄中輸入 docsify serve。網站將在本地的 3000 端口上運行：localhost:3000。\n📘 PDF\n所有課程的 PDF 可在 此處 找到。\n🎒 其他課程\n我們的團隊還製作了其他課程！查看以下內容：\n生成式 AI 初學者課程\n生成式 AI 初學者課程",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1118,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "a2cea186393d77d539248c4b0f13549c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "Banking App | 狀態管理的概念 | 學習應用如何保留狀態以及如何以程式化方式進行管理 | 狀態管理 | Yohan | 🏫 教學法 我們的課程設計基於兩個關鍵的教學原則： * 項目式學習 * 頻繁的小測驗 該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具與技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。到課程結束時，學生將對網頁開發有扎實的理解。 🎓 你可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與項目相符，學習過程對學生來說更具吸引力，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的小測驗可以幫助學生集中注意力學習某個主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習，也可以部分學習。項目從簡單開始，並在 12 週的學習周期內逐漸變得複雜。 我們有意避免引入 JavaScript 框架，以便專注於作為網頁開發者在採用框架之前所需的基本技能。完成本課程後，學習 Nodejs 是一個不錯的下一步選擇，可以參考另一個視頻系列：\"Nodejs 初學者系列\"。 請參閱我們的 行為準則 和 貢獻指南。我們歡迎你的建設性反饋！ 🧭 離線訪問 你可以使用 Docsify 離線運行此文檔。Fork 此倉庫，在本地機器上安裝 Docsify，然後在此倉庫的根目錄中輸入 docsify serve。網站將在本地的 3000 端口上運行：localhost:3000。 📘 PDF 所有課程的 PDF 可在 此處 找到。 🎒 其他課程 我們的團隊還製作了其他課程！查看以下內容： 生成式 AI 初學者課程 生成式 AI 初學者課程NET\n使用 JavaScript 的生成式 AI\n使用 Java 的生成式 AI\nAI 初學者課程\n數據科學初學者課程\n機器學習初學者課程\n網絡安全初學者課程\n網頁開發初學者課程\n物聯網初學者課程\nXR 開發初學者課程\n掌握 GitHub Copilot 的智能使用\n為 C#/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1122,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "66fe292d4480c6dba6685364ca2aff3f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\hk\\README.md",
    "source_type": "git_repo",
    "title": "初學者網頁開發課程 - 教學大綱",
    "content": "🎓 你可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與項目相符，學習過程對學生來說更具吸引力，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的小測驗可以幫助學生集中注意力學習某個主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習，也可以部分學習。項目從簡單開始，並在 12 週的學習周期內逐漸變得複雜。 我們有意避免引入 JavaScript 框架，以便專注於作為網頁開發者在採用框架之前所需的基本技能。完成本課程後，學習 Nodejs 是一個不錯的下一步選擇，可以參考另一個視頻系列：\"Nodejs 初學者系列\"。 請參閱我們的 行為準則 和 貢獻指南。我們歡迎你的建設性反饋！ 🧭 離線訪問 你可以使用 Docsify 離線運行此文檔。Fork 此倉庫，在本地機器上安裝 Docsify，然後在此倉庫的根目錄中輸入 docsify serve。網站將在本地的 3000 端口上運行：localhost:3000。 📘 PDF 所有課程的 PDF 可在 此處 找到。 🎒 其他課程 我們的團隊還製作了其他課程！查看以下內容： 生成式 AI 初學者課程 生成式 AI 初學者課程NET 使用 JavaScript 的生成式 AI 使用 Java 的生成式 AI AI 初學者課程 數據科學初學者課程 機器學習初學者課程 網絡安全初學者課程 網頁開發初學者課程 物聯網初學者課程 XR 開發初學者課程 掌握 GitHub Copilot 的智能使用 為 C#/NET 開發者掌握 GitHub Copilot\n選擇你的 Copilot 冒險\n授權\n此倉庫基於 MIT 許可證授權。詳情請參閱 LICENSE 文件。\n免責聲明：\n本文件已使用人工智能翻譯服務 Co-op Translator 進行翻譯。雖然我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。原始語言的文件應被視為具權威性的來源。對於重要資訊，建議使用專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22765,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\hk\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1058,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "d4cb3fc7a1b3ccf3ee0d308e859e8c71",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "セキュリティ\nMicrosoftは、ソフトウェア製品やサービスのセキュリティを非常に重要視しています。これには、Microsoft、Azure、DotNet、AspNet、Xamarin、および弊社のGitHub組織で管理されているすべてのソースコードリポジトリが含まれます。\nもし、Microsoftが所有するリポジトリにおいてMicrosoftのセキュリティ脆弱性の定義に該当するセキュリティ脆弱性を発見した場合は、以下の手順に従って報告してください。\nセキュリティ問題の報告\nセキュリティ脆弱性を公開されたGitHubのIssueで報告しないでください。\n代わりに、Microsoft Security Response Center (MSRC)に以下のリンクから報告してください：https://msrc microsoft com/create-report。\nログインせずに提出したい場合は、secure@microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4310,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fd1e159dfd0499d3a5185b3000f27df7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "セキュリティ\nMicrosoftは、ソフトウェア製品やサービスのセキュリティを非常に重要視しています。これには、Microsoft、Azure、DotNet、AspNet、Xamarin、および弊社のGitHub組織で管理されているすべてのソースコードリポジトリが含まれます。\nもし、Microsoftが所有するリポジトリにおいてMicrosoftのセキュリティ脆弱性の定義に該当するセキュリティ脆弱性を発見した場合は、以下の手順に従って報告してください。\nセキュリティ問題の報告\nセキュリティ脆弱性を公開されたGitHubのIssueで報告しないでください。\n代わりに、Microsoft Security Response Center (MSRC)に以下のリンクから報告してください：https://msrc microsoft com/create-report。\nログインせずに提出したい場合は、secure@microsoftcomにメールを送信してください。可能であれば、メッセージを弊社のPGPキーで暗号化してください。PGPキーはMicrosoft Security Response Center PGP Keyページからダウンロードできます。\n通常、24時間以内に返信を受け取ることができます。万が一返信がない場合は、元のメッセージが届いているか確認するためにメールで再度お問い合わせください。追加情報はこちらで確認できます。\n以下の情報を可能な限り提供してください。これにより、問題の性質や範囲をより正確に理解することができます：\n問題の種類（例: バッファオーバーフロー、SQLインジェクション、クロスサイトスクリプティングなど）\n問題が発生する関連ソースファイルの完全なパス\n影響を受けるソースコードの場所（タグ/ブランチ/コミットまたは直接URL）\n問題を再現するために必要な特別な設定\n問題を再現するための手順\n概念実証コードやエクスプロイトコード（可能であれば）\n問題の影響（攻撃者がどのように問題を悪用する可能性があるかを含む）\nこれらの情報を提供することで、報告の優先順位付けが迅速に行われます。\nバグ報奨金プログラムに報告する場合、より詳細な報告は高額な報奨金につながる可能性があります。現在のプログラムについてはMicrosoft Bug Bounty Programページをご覧ください。\n推奨言語\nすべてのコミュニケーションは英語で行うことを推奨します。\nポリシー\nMicrosoftはCoordinated Vulnerability Disclosureの原則に従っています。\n免責事項:\nこの文書は、AI翻訳サービス Co-op Translator を使用して翻訳されています。正確性を期すよう努めておりますが、自動翻訳には誤りや不正確な表現が含まれる可能性があります。元の言語で記載された文書が正式な情報源と見なされるべきです。重要な情報については、専門の人間による翻訳をお勧めします。本翻訳の使用に起因する誤解や誤認について、当方は一切の責任を負いません。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4310,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 1039,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ff7227397be8d430a90be4b04481bf93",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "サポート",
    "content": "サポート\n問題の報告方法とヘルプの取得\nこのプロジェクトでは、GitHub Issuesを使用してバグや機能リクエストを追跡しています。重複を避けるために、新しい問題を報告する前に既存の問題を検索してください。新しい問題を報告する場合は、バグや機能リクエストを新しいIssueとして提出してください。\nこのプロジェクトの使用に関するヘルプや質問については、貢献ガイドラインをご参照ください。\nMicrosoftのサポートポリシー\nこのプロジェクトのサポートは、上記のリソースに限定されています。\n免責事項:\nこの文書は、AI翻訳サービス Co-op Translator を使用して翻訳されています。正確性を追求しておりますが、自動翻訳には誤りや不正確な表現が含まれる可能性があることをご承知おきください。元の言語で記載された文書が正式な情報源とみなされるべきです。重要な情報については、専門の人間による翻訳をお勧めします。本翻訳の使用に起因する誤解や誤認について、当方は一切の責任を負いません。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1545,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "89da7c8a3bb61f01ffab8aec31867840",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\_404.md",
    "source_type": "git_repo",
    "title": "作業中",
    "content": "作業中\nこのページは現在作業中です。後ほど再度ご確認ください。\n質問がある場合は、issue を開いてください。\nホームに戻る\n免責事項:\nこの文書は、AI翻訳サービス Co-op Translator を使用して翻訳されています。正確性を追求しておりますが、自動翻訳には誤りや不正確な部分が含まれる可能性があることをご承知おきください。元の言語で記載された文書が公式な情報源とみなされるべきです。重要な情報については、専門の人間による翻訳をお勧めします。本翻訳の使用に起因する誤解や誤認について、当方は一切の責任を負いません。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1101,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "559e38f6a81091801250bde05feb528b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft 오픈 소스 행동 강령",
    "content": "Microsoft 오픈 소스 행동 강령\n이 프로젝트는 Microsoft 오픈 소스 행동 강령을 채택했습니다.\n리소스:\nMicrosoft 오픈 소스 행동 강령\nMicrosoft 행동 강령 FAQ\n질문이나 우려 사항이 있으면 opencode@microsoft.com으로 연락하세요.\n면책 조항:\n이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다. 정확성을 위해 최선을 다하고 있지만, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다. 원본 문서를 해당 언어로 작성된 상태에서 권위 있는 자료로 간주해야 합니다. 중요한 정보의 경우, 전문적인 인간 번역을 권장합니다. 이 번역 사용으로 인해 발생하는 오해나 잘못된 해석에 대해 당사는 책임을 지지 않습니다.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1394,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a5ce2c47482e30855c569076a5f0d01d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "기여하기",
    "content": "기여하기\n이 프로젝트는 기여와 제안을 환영합니다 대부분의 기여는 귀하가 Contributor License Agreement (CLA)에 동의해야 하며, 이를 통해 귀하가 기여할 권리가 있고 실제로 기여를 사용할 권리를 우리에게 부여한다는 것을 선언해야 합니다 자세한 내용은 https://cla microsoft com을 방문하세요 풀 리퀘스트를 제출하면, CLA-bot이 자동으로 귀하가 CLA를 제공해야 하는지 여부를 확인하고 PR에 적절히 표시(예: 라벨, 댓글)합니다 봇이 제공하는 지침을 따르기만 하면 됩니다 이는 CLA를 사용하는 모든 리포지토리에서 한 번만 하면 됩니다 또한 변경 이유를 설명해 주시면 요청을 더 잘 이해하는 데 도움이 됩니다 이 프로젝트는 Microsoft Open Source Code of Conduct를 채택했습니다 자세한 내용은 Code of Conduct FAQ를 참조하거나, 추가 질문이나 의견이 있는 경우 opencode@microsoft com으로 문의하세요 면책 조항:\n이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다 정확성을 위해 최선을 다하고 있지만, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다 원본 문서를 해당 언어로 작성된 상태에서 권위 있는 자료로 간주해야 합니다 중요한 정보의 경우, 전문적인 인간 번역을 권장합니다 이 번역 사용으로 인해 발생하는 오해나 잘못된 해석에 대해 당사는 책임을 지지 않습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2115,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0c28edcd22cb993ddddccdaf54df2629",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "교육자를 위한 안내\n이 커리큘럼을 교실에서 사용하고 싶으신가요 자유롭게 활용하세요 사실, GitHub Classroom을 사용하여 GitHub 내에서 바로 사용할 수도 있습니다 이를 위해 이 저장소를 포크하세요 각 수업마다 별도의 저장소를 만들어야 하므로, 각 폴더를 별도의 저장소로 분리해야 합니다 이렇게 하면 GitHub Classroom이 각 수업을 개별적으로 처리할 수 있습니다 이 전체 가이드를 참고하면 교실을 설정하는 방법에 대한 아이디어를 얻을 수 있습니다 Moodle, Canvas 또는 Blackboard에서 사용하기\n이 커리큘럼은 이러한 학습 관리 시스템(LMS)에서도 잘 작동합니다 전체 콘텐츠를 포함한 Moodle 업로드 파일을 사용하거나 일부 콘텐츠를 포함한 Common Cartridge 파일을 사용해 보세요 Moodle Cloud는 전체 Common Cartridge 내보내기를 지원하지 않으므로 Canvas에 업로드할 수 있는 Moodle 다운로드 파일을 사용하는 것이 더 적합합니다 이 경험을 개선할 수 있는 방법을 알려주세요 Moodle 교실에서의 커리큘럼\nCanvas에서의 커리큘럼\n현재 상태 그대로 저장소 사용하기\nGitHub Classroom을 사용하지 않고 현재 상태 그대로 이 저장소를 사용하고 싶으시다면, 그것도 가능합니다 학생들에게 함께 학습할 수업을 알려주시면 됩니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3932,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "5d6ceab894262c04cb4f2cdee3c56b4e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "이러한 학습 관리 시스템(LMS)에서도 잘 작동합니다 전체 콘텐츠를 포함한 Moodle 업로드 파일을 사용하거나 일부 콘텐츠를 포함한 Common Cartridge 파일을 사용해 보세요 Moodle Cloud는 전체 Common Cartridge 내보내기를 지원하지 않으므로 Canvas에 업로드할 수 있는 Moodle 다운로드 파일을 사용하는 것이 더 적합합니다 이 경험을 개선할 수 있는 방법을 알려주세요 Moodle 교실에서의 커리큘럼 Canvas에서의 커리큘럼 현재 상태 그대로 저장소 사용하기 GitHub Classroom을 사용하지 않고 현재 상태 그대로 이 저장소를 사용하고 싶으시다면, 그것도 가능합니다 학생들에게 함께 학습할 수업을 알려주시면 됩니다온라인 형식(Zoom, Teams 등)에서는 퀴즈를 위한 소그룹을 구성하고, 학생들이 학습 준비를 할 수 있도록 멘토링할 수 있습니다 그런 다음 학생들을 퀴즈에 초대하고 특정 시간에 '이슈'로 답변을 제출하도록 요청하세요 협업을 원하신다면 과제도 같은 방식으로 진행할 수 있습니다 보다 비공개 형식을 선호하신다면, 학생들에게 커리큘럼을 수업별로 자신의 GitHub 개인 저장소로 포크하도록 요청하고, 접근 권한을 부여받으세요",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3932,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "b86acf61b3c2f2a52c7599126b1b366b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "커리큘럼 현재 상태 그대로 저장소 사용하기 GitHub Classroom을 사용하지 않고 현재 상태 그대로 이 저장소를 사용하고 싶으시다면, 그것도 가능합니다 학생들에게 함께 학습할 수업을 알려주시면 됩니다온라인 형식(Zoom, Teams 등)에서는 퀴즈를 위한 소그룹을 구성하고, 학생들이 학습 준비를 할 수 있도록 멘토링할 수 있습니다 그런 다음 학생들을 퀴즈에 초대하고 특정 시간에 '이슈'로 답변을 제출하도록 요청하세요 협업을 원하신다면 과제도 같은 방식으로 진행할 수 있습니다 보다 비공개 형식을 선호하신다면, 학생들에게 커리큘럼을 수업별로 자신의 GitHub 개인 저장소로 포크하도록 요청하고, 접근 권한을 부여받으세요그런 다음 학생들이 퀴즈와 과제를 비공개로 완료하고, 교실 저장소의 이슈를 통해 제출하도록 할 수 있습니다 온라인 교실 형식에서 이를 활용할 수 있는 다양한 방법이 있습니다 어떤 방식이 가장 잘 작동하는지 알려주세요 의견을 들려주세요 이 커리큘럼이 여러분과 학생들에게 잘 맞도록 만들고 싶습니다 Teacher corner에서 우리와 소통하고, 요청, 버그 및 피드백을 위한 새로운 이슈를 열어주세요",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3932,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "a6038a234d6ad8df6f86b17916b94bbc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "협업을 원하신다면 과제도 같은 방식으로 진행할 수 있습니다 보다 비공개 형식을 선호하신다면, 학생들에게 커리큘럼을 수업별로 자신의 GitHub 개인 저장소로 포크하도록 요청하고, 접근 권한을 부여받으세요그런 다음 학생들이 퀴즈와 과제를 비공개로 완료하고, 교실 저장소의 이슈를 통해 제출하도록 할 수 있습니다 온라인 교실 형식에서 이를 활용할 수 있는 다양한 방법이 있습니다 어떤 방식이 가장 잘 작동하는지 알려주세요 의견을 들려주세요 이 커리큘럼이 여러분과 학생들에게 잘 맞도록 만들고 싶습니다 Teacher corner에서 우리와 소통하고, 요청, 버그 및 피드백을 위한 새로운 이슈를 열어주세요면책 조항:\n이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다 정확성을 위해 최선을 다하고 있지만, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다 원본 문서를 해당 언어로 작성된 상태에서 권위 있는 자료로 간주해야 합니다 중요한 정보의 경우, 전문적인 인간 번역을 권장합니다 이 번역 사용으로 인해 발생하는 오해나 잘못된 해석에 대해 당사는 책임을 지지 않습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3932,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "934a161582a14d6129d720319ed08471",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "보안\nMicrosoft는 소프트웨어 제품과 서비스의 보안을 매우 중요하게 생각하며, 여기에는 Microsoft, Azure, DotNet, AspNet, Xamarin 및 Microsoft의 GitHub 조직을 통해 관리되는 모든 소스 코드 저장소가 포함됩니다 Microsoft가 소유한 저장소에서 Microsoft의 보안 취약점 정의에 해당하는 보안 취약점을 발견했다고 생각되면, 아래에 설명된 대로 이를 보고해 주시기 바랍니다 보안 문제 보고\n공개 GitHub 이슈를 통해 보안 취약점을 보고하지 마십시오 대신, Microsoft Security Response Center (MSRC)에 https://msrc microsoft com/create-report를 통해 보고해 주시기 바랍니다 로그인 없이 제출하려면 secure@microsoft com으로 이메일을 보내주십시오 가능하다면, 메시지를 Microsoft의 PGP 키로 암호화해 주시기 바랍니다 PGP 키는 Microsoft Security Response Center PGP Key 페이지에서 다운로드할 수 있습니다 보고 후 24시간 이내에 응답을 받을 수 있습니다 만약 응답을 받지 못한 경우, 원래 메시지가 제대로 전달되었는지 확인하기 위해 이메일로 후속 조치를 취해 주시기 바랍니다 추가 정보는 microsoft com/msrc에서 확인할 수 있습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4049,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "f1f60fe924bb1390add3ba5db9541be7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "보안 취약점을 보고하지 마십시오 대신, Microsoft Security Response Center (MSRC)에 https://msrc microsoft com/create-report를 통해 보고해 주시기 바랍니다 로그인 없이 제출하려면 secure@microsoft com으로 이메일을 보내주십시오 가능하다면, 메시지를 Microsoft의 PGP 키로 암호화해 주시기 바랍니다 PGP 키는 Microsoft Security Response Center PGP Key 페이지에서 다운로드할 수 있습니다 보고 후 24시간 이내에 응답을 받을 수 있습니다 만약 응답을 받지 못한 경우, 원래 메시지가 제대로 전달되었는지 확인하기 위해 이메일로 후속 조치를 취해 주시기 바랍니다 추가 정보는 microsoft com/msrc에서 확인할 수 있습니다가능한 한 아래에 나열된 정보를 포함하여 문제의 성격과 범위를 더 잘 이해할 수 있도록 도와주시기 바랍니다:\n문제 유형 (예: 버퍼 오버플로, SQL 인젝션, 크로스 사이트 스크립팅 등)\n문제와 관련된 소스 파일의 전체 경로\n영향을 받은 소스 코드의 위치 (태그/브랜치/커밋 또는 직접 URL)\n문제를 재현하기 위해 필요한 특별한 설정\n문제를 재현하기 위한 단계별 지침\n개념 증명 또는 익스플로잇 코드 (가능한 경우)\n문제의 영향, 공격자가 문제를 어떻게 악용할 수 있는지 포함\n이 정보는 보고서를 더 신속하게 처리하는 데 도움이 됩니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4049,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1a44ecb9bc5df813dc28e0c77b03562c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "아래에 나열된 정보를 포함하여 문제의 성격과 범위를 더 잘 이해할 수 있도록 도와주시기 바랍니다: 문제 유형 (예: 버퍼 오버플로, SQL 인젝션, 크로스 사이트 스크립팅 등) 문제와 관련된 소스 파일의 전체 경로 영향을 받은 소스 코드의 위치 (태그/브랜치/커밋 또는 직접 URL) 문제를 재현하기 위해 필요한 특별한 설정 문제를 재현하기 위한 단계별 지침 개념 증명 또는 익스플로잇 코드 (가능한 경우) 문제의 영향, 공격자가 문제를 어떻게 악용할 수 있는지 포함 이 정보는 보고서를 더 신속하게 처리하는 데 도움이 됩니다버그 바운티를 위해 보고하는 경우, 더 완전한 보고서는 더 높은 바운티 보상에 기여할 수 있습니다 활성 프로그램에 대한 자세한 내용은 Microsoft Bug Bounty Program 페이지를 방문해 주시기 바랍니다 선호하는 언어\n모든 커뮤니케이션은 영어로 진행되기를 선호합니다 정책\nMicrosoft는 Coordinated Vulnerability Disclosure 원칙을 따릅니다 면책 조항:\n이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다 정확성을 위해 최선을 다하고 있으나, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4049,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2237f2cf8984ce6de3a77b9fad38031a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "수 있는지 포함 이 정보는 보고서를 더 신속하게 처리하는 데 도움이 됩니다버그 바운티를 위해 보고하는 경우, 더 완전한 보고서는 더 높은 바운티 보상에 기여할 수 있습니다 활성 프로그램에 대한 자세한 내용은 Microsoft Bug Bounty Program 페이지를 방문해 주시기 바랍니다 선호하는 언어 모든 커뮤니케이션은 영어로 진행되기를 선호합니다 정책 Microsoft는 Coordinated Vulnerability Disclosure 원칙을 따릅니다 면책 조항: 이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다 정확성을 위해 최선을 다하고 있으나, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다원본 문서의 원어 버전을 권위 있는 출처로 간주해야 합니다 중요한 정보의 경우, 전문적인 인간 번역을 권장합니다 이 번역 사용으로 인해 발생하는 오해나 잘못된 해석에 대해 당사는 책임을 지지 않습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4049,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ebb6a75289db82584bee8a783e237850",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "지원",
    "content": "지원\n문제 제기 및 도움 받는 방법\n이 프로젝트는 GitHub Issues를 사용하여 버그와 기능 요청을 추적합니다. 중복을 피하기 위해 새로운 문제를 제기하기 전에 기존 문제를 검색해 보세요. 새로운 문제의 경우, 버그나 기능 요청을 새로운 Issue로 제출하세요.\n이 프로젝트 사용에 대한 도움과 질문은 기여 가이드라인을 참조하세요.\nMicrosoft 지원 정책\n이 프로젝트에 대한 지원은 위에 나열된 리소스에 한정됩니다.\n면책 조항:\n이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다. 정확성을 위해 최선을 다하고 있지만, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다. 원본 문서의 원어 버전을 권위 있는 출처로 간주해야 합니다. 중요한 정보의 경우, 전문적인 인간 번역을 권장합니다. 이 번역 사용으로 인해 발생하는 오해나 잘못된 해석에 대해 책임을 지지 않습니다.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1350,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 337,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b4b8918c32990a8208d27d51b5b17c78",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\_404.md",
    "source_type": "git_repo",
    "title": "작업 진행 중",
    "content": "작업 진행 중\n이 페이지는 현재 작업 중입니다. 나중에 다시 확인해 주세요.\n궁금한 점이 있으면 issue를 열어주세요.\n홈으로 돌아가기\n면책 조항:\n이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다. 정확성을 위해 최선을 다하고 있지만, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다. 원본 문서를 해당 언어로 작성된 상태에서 권위 있는 자료로 간주해야 합니다. 중요한 정보의 경우, 전문적인 인간 번역을 권장합니다. 이 번역 사용으로 인해 발생하는 오해나 잘못된 해석에 대해 당사는 책임을 지지 않습니다.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1081,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "305c6efbae20f33932c20b15fa3cd7f0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "初心者向けウェブ開発 - カリキュラム\nMicrosoft Cloud Advocatesによる12週間の包括的なコースでウェブ開発の基礎を学びましょう。24のレッスンでは、JavaScript、CSS、HTMLを使った実践的なプロジェクト（テラリウム、ブラウザ拡張機能、宇宙ゲームなど）を通じて学びます。クイズ、ディスカッション、実践課題を通じてスキルを向上させ、プロジェクトベースの学習法で知識の定着を最適化します。今すぐコーディングの旅を始めましょう！\n🧑‍🎓 学生の皆さんへ\nStudent Hubページを訪れてください。初心者向けリソース、学生向けパック、さらには無料の認定証バウチャーを取得する方法が見つかります。このページはブックマークして、毎月内容が更新されるので定期的にチェックしてください。\n📣 お知らせ - 新しいカリキュラム「JavaScript向け生成AI」がリリースされました\n新しい生成AIカリキュラムをお見逃しなく！\nhttps://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "6adcf6ea10abb546f4c4bf1fe79d83b0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "初心者向けウェブ開発 - カリキュラム\nMicrosoft Cloud Advocatesによる12週間の包括的なコースでウェブ開発の基礎を学びましょう。24のレッスンでは、JavaScript、CSS、HTMLを使った実践的なプロジェクト（テラリウム、ブラウザ拡張機能、宇宙ゲームなど）を通じて学びます。クイズ、ディスカッション、実践課題を通じてスキルを向上させ、プロジェクトベースの学習法で知識の定着を最適化します。今すぐコーディングの旅を始めましょう！\n🧑‍🎓 学生の皆さんへ\nStudent Hubページを訪れてください。初心者向けリソース、学生向けパック、さらには無料の認定証バウチャーを取得する方法が見つかります。このページはブックマークして、毎月内容が更新されるので定期的にチェックしてください。\n📣 お知らせ - 新しいカリキュラム「JavaScript向け生成AI」がリリースされました\n新しい生成AIカリキュラムをお見逃しなく！\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n基礎からRAGまでを網羅したレッスン\n生成AIとコンパニオンアプリを使って歴史上の人物と対話\n楽しく魅力的なストーリーでタイムトラベル体験！\n各レッスンには以下が含まれます：\n- 課題\n- 知識チェック\n- チャレンジ\n以下のトピックを学びます：\n- プロンプトとプロンプトエンジニアリング\n- テキストと画像アプリの生成\n- 検索アプリ\nhttps://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 573,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "13ca77619c819c93def739221ef58e91",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "初心者向けウェブ開発 - カリキュラム\nMicrosoft Cloud Advocatesによる12週間の包括的なコースでウェブ開発の基礎を学びましょう。24のレッスンでは、JavaScript、CSS、HTMLを使った実践的なプロジェクト（テラリウム、ブラウザ拡張機能、宇宙ゲームなど）を通じて学びます。クイズ、ディスカッション、実践課題を通じてスキルを向上させ、プロジェクトベースの学習法で知識の定着を最適化します。今すぐコーディングの旅を始めましょう！\n🧑‍🎓 学生の皆さんへ\nStudent Hubページを訪れてください。初心者向けリソース、学生向けパック、さらには無料の認定証バウチャーを取得する方法が見つかります。このページはブックマークして、毎月内容が更新されるので定期的にチェックしてください。\n📣 お知らせ - 新しいカリキュラム「JavaScript向け生成AI」がリリースされました\n新しい生成AIカリキュラムをお見逃しなく！\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n基礎からRAGまでを網羅したレッスン\n生成AIとコンパニオンアプリを使って歴史上の人物と対話\n楽しく魅力的なストーリーでタイムトラベル体験！\n各レッスンには以下が含まれます：\n- 課題\n- 知識チェック\n- チャレンジ\n以下のトピックを学びます：\n- プロンプトとプロンプトエンジニアリング\n- テキストと画像アプリの生成\n- 検索アプリ\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n🌱 学習を始める\n教師の皆さん、このカリキュラムの使用方法についていくつかの提案を含めています。ぜひディスカッションフォーラムでフィードバックをお寄せください！\n学習者の皆さん、各レッスンでは事前クイズから始め、講義資料を読み、さまざまな活動を完了し、事後クイズで理解度を確認してください。\n学習体験を向上させるために、仲間と一緒にプロジェクトに取り組むことをお勧めします！ディスカッションはディスカッションフォーラムで歓迎されており、モデレーターが質問に答えるために待機しています。\nさらに学びを深めるために、Microsoft Learnで追加の学習資料を探索することを強くお勧めします。\n📋 環境のセットアップ\nこのカリキュラムにはすぐに使える開発環境が用意されています！開始時に、Codespace（ブラウザベースでインストール不要の環境）を使用するか、ローカルのコンピュータでVisual Studio Codeなどのテキストエディタを使用して実行することができます。\nリポジトリを作成する\n作業内容を簡単に保存するために、このリポジトリのコピーを作成することをお勧めします。ページ上部のUse this templateボタンをクリックすると、カリキュラムのコピーがあなたのGitHubアカウントに新しいリポジトリとして作成されます。\n以下の手順に従ってください：\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1130,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "b0d70cf84121160fb84be8a192c2ed81",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "初心者向けウェブ開発 - カリキュラム\nMicrosoft Cloud Advocatesによる12週間の包括的なコースでウェブ開発の基礎を学びましょう。24のレッスンでは、JavaScript、CSS、HTMLを使った実践的なプロジェクト（テラリウム、ブラウザ拡張機能、宇宙ゲームなど）を通じて学びます。クイズ、ディスカッション、実践課題を通じてスキルを向上させ、プロジェクトベースの学習法で知識の定着を最適化します。今すぐコーディングの旅を始めましょう！\n🧑‍🎓 学生の皆さんへ\nStudent Hubページを訪れてください。初心者向けリソース、学生向けパック、さらには無料の認定証バウチャーを取得する方法が見つかります。このページはブックマークして、毎月内容が更新されるので定期的にチェックしてください。\n📣 お知らせ - 新しいカリキュラム「JavaScript向け生成AI」がリリースされました\n新しい生成AIカリキュラムをお見逃しなく！\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n基礎からRAGまでを網羅したレッスン\n生成AIとコンパニオンアプリを使って歴史上の人物と対話\n楽しく魅力的なストーリーでタイムトラベル体験！\n各レッスンには以下が含まれます：\n- 課題\n- 知識チェック\n- チャレンジ\n以下のトピックを学びます：\n- プロンプトとプロンプトエンジニアリング\n- テキストと画像アプリの生成\n- 検索アプリ\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n🌱 学習を始める\n教師の皆さん、このカリキュラムの使用方法についていくつかの提案を含めています。ぜひディスカッションフォーラムでフィードバックをお寄せください！\n学習者の皆さん、各レッスンでは事前クイズから始め、講義資料を読み、さまざまな活動を完了し、事後クイズで理解度を確認してください。\n学習体験を向上させるために、仲間と一緒にプロジェクトに取り組むことをお勧めします！ディスカッションはディスカッションフォーラムで歓迎されており、モデレーターが質問に答えるために待機しています。\nさらに学びを深めるために、Microsoft Learnで追加の学習資料を探索することを強くお勧めします。\n📋 環境のセットアップ\nこのカリキュラムにはすぐに使える開発環境が用意されています！開始時に、Codespace（ブラウザベースでインストール不要の環境）を使用するか、ローカルのコンピュータでVisual Studio Codeなどのテキストエディタを使用して実行することができます。\nリポジトリを作成する\n作業内容を簡単に保存するために、このリポジトリのコピーを作成することをお勧めします。ページ上部のUse this templateボタンをクリックすると、カリキュラムのコピーがあなたのGitHubアカウントに新しいリポジトリとして作成されます。\n以下の手順に従ってください：\n1リポジトリをフォークする: ページ右上の「Fork」ボタンをクリックします。\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1163,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "7d2225ba2b4729f22ece63382c75dcf9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "初心者向けウェブ開発 - カリキュラム\nMicrosoft Cloud Advocatesによる12週間の包括的なコースでウェブ開発の基礎を学びましょう。24のレッスンでは、JavaScript、CSS、HTMLを使った実践的なプロジェクト（テラリウム、ブラウザ拡張機能、宇宙ゲームなど）を通じて学びます。クイズ、ディスカッション、実践課題を通じてスキルを向上させ、プロジェクトベースの学習法で知識の定着を最適化します。今すぐコーディングの旅を始めましょう！\n🧑‍🎓 学生の皆さんへ\nStudent Hubページを訪れてください。初心者向けリソース、学生向けパック、さらには無料の認定証バウチャーを取得する方法が見つかります。このページはブックマークして、毎月内容が更新されるので定期的にチェックしてください。\n📣 お知らせ - 新しいカリキュラム「JavaScript向け生成AI」がリリースされました\n新しい生成AIカリキュラムをお見逃しなく！\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n基礎からRAGまでを網羅したレッスン\n生成AIとコンパニオンアプリを使って歴史上の人物と対話\n楽しく魅力的なストーリーでタイムトラベル体験！\n各レッスンには以下が含まれます：\n- 課題\n- 知識チェック\n- チャレンジ\n以下のトピックを学びます：\n- プロンプトとプロンプトエンジニアリング\n- テキストと画像アプリの生成\n- 検索アプリ\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n🌱 学習を始める\n教師の皆さん、このカリキュラムの使用方法についていくつかの提案を含めています。ぜひディスカッションフォーラムでフィードバックをお寄せください！\n学習者の皆さん、各レッスンでは事前クイズから始め、講義資料を読み、さまざまな活動を完了し、事後クイズで理解度を確認してください。\n学習体験を向上させるために、仲間と一緒にプロジェクトに取り組むことをお勧めします！ディスカッションはディスカッションフォーラムで歓迎されており、モデレーターが質問に答えるために待機しています。\nさらに学びを深めるために、Microsoft Learnで追加の学習資料を探索することを強くお勧めします。\n📋 環境のセットアップ\nこのカリキュラムにはすぐに使える開発環境が用意されています！開始時に、Codespace（ブラウザベースでインストール不要の環境）を使用するか、ローカルのコンピュータでVisual Studio Codeなどのテキストエディタを使用して実行することができます。\nリポジトリを作成する\n作業内容を簡単に保存するために、このリポジトリのコピーを作成することをお勧めします。ページ上部のUse this templateボタンをクリックすると、カリキュラムのコピーがあなたのGitHubアカウントに新しいリポジトリとして作成されます。\n以下の手順に従ってください：\n1リポジトリをフォークする: ページ右上の「Fork」ボタンをクリックします。\n2リポジトリをクローンする: git clone https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1180,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "e504789ac6861428b3a1bb0bee48be5c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "初心者向けウェブ開発 - カリキュラム\nMicrosoft Cloud Advocatesによる12週間の包括的なコースでウェブ開発の基礎を学びましょう。24のレッスンでは、JavaScript、CSS、HTMLを使った実践的なプロジェクト（テラリウム、ブラウザ拡張機能、宇宙ゲームなど）を通じて学びます。クイズ、ディスカッション、実践課題を通じてスキルを向上させ、プロジェクトベースの学習法で知識の定着を最適化します。今すぐコーディングの旅を始めましょう！\n🧑‍🎓 学生の皆さんへ\nStudent Hubページを訪れてください。初心者向けリソース、学生向けパック、さらには無料の認定証バウチャーを取得する方法が見つかります。このページはブックマークして、毎月内容が更新されるので定期的にチェックしてください。\n📣 お知らせ - 新しいカリキュラム「JavaScript向け生成AI」がリリースされました\n新しい生成AIカリキュラムをお見逃しなく！\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n基礎からRAGまでを網羅したレッスン\n生成AIとコンパニオンアプリを使って歴史上の人物と対話\n楽しく魅力的なストーリーでタイムトラベル体験！\n各レッスンには以下が含まれます：\n- 課題\n- 知識チェック\n- チャレンジ\n以下のトピックを学びます：\n- プロンプトとプロンプトエンジニアリング\n- テキストと画像アプリの生成\n- 検索アプリ\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n🌱 学習を始める\n教師の皆さん、このカリキュラムの使用方法についていくつかの提案を含めています。ぜひディスカッションフォーラムでフィードバックをお寄せください！\n学習者の皆さん、各レッスンでは事前クイズから始め、講義資料を読み、さまざまな活動を完了し、事後クイズで理解度を確認してください。\n学習体験を向上させるために、仲間と一緒にプロジェクトに取り組むことをお勧めします！ディスカッションはディスカッションフォーラムで歓迎されており、モデレーターが質問に答えるために待機しています。\nさらに学びを深めるために、Microsoft Learnで追加の学習資料を探索することを強くお勧めします。\n📋 環境のセットアップ\nこのカリキュラムにはすぐに使える開発環境が用意されています！開始時に、Codespace（ブラウザベースでインストール不要の環境）を使用するか、ローカルのコンピュータでVisual Studio Codeなどのテキストエディタを使用して実行することができます。\nリポジトリを作成する\n作業内容を簡単に保存するために、このリポジトリのコピーを作成することをお勧めします。ページ上部のUse this templateボタンをクリックすると、カリキュラムのコピーがあなたのGitHubアカウントに新しいリポジトリとして作成されます。\n以下の手順に従ってください：\n1リポジトリをフォークする: ページ右上の「Fork」ボタンをクリックします。\n2リポジトリをクローンする: git clone https://githubcom/microsoft/Web-Dev-For-Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1191,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "b5967349f3ca9f6e76a21c3a2e250c87",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "初心者向けウェブ開発 - カリキュラム\nMicrosoft Cloud Advocatesによる12週間の包括的なコースでウェブ開発の基礎を学びましょう。24のレッスンでは、JavaScript、CSS、HTMLを使った実践的なプロジェクト（テラリウム、ブラウザ拡張機能、宇宙ゲームなど）を通じて学びます。クイズ、ディスカッション、実践課題を通じてスキルを向上させ、プロジェクトベースの学習法で知識の定着を最適化します。今すぐコーディングの旅を始めましょう！\n🧑‍🎓 学生の皆さんへ\nStudent Hubページを訪れてください。初心者向けリソース、学生向けパック、さらには無料の認定証バウチャーを取得する方法が見つかります。このページはブックマークして、毎月内容が更新されるので定期的にチェックしてください。\n📣 お知らせ - 新しいカリキュラム「JavaScript向け生成AI」がリリースされました\n新しい生成AIカリキュラムをお見逃しなく！\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n基礎からRAGまでを網羅したレッスン\n生成AIとコンパニオンアプリを使って歴史上の人物と対話\n楽しく魅力的なストーリーでタイムトラベル体験！\n各レッスンには以下が含まれます：\n- 課題\n- 知識チェック\n- チャレンジ\n以下のトピックを学びます：\n- プロンプトとプロンプトエンジニアリング\n- テキストと画像アプリの生成\n- 検索アプリ\nhttps://akams/genai-js-courseを訪れて学びを始めましょう！\n🌱 学習を始める\n教師の皆さん、このカリキュラムの使用方法についていくつかの提案を含めています。ぜひディスカッションフォーラムでフィードバックをお寄せください！\n学習者の皆さん、各レッスンでは事前クイズから始め、講義資料を読み、さまざまな活動を完了し、事後クイズで理解度を確認してください。\n学習体験を向上させるために、仲間と一緒にプロジェクトに取り組むことをお勧めします！ディスカッションはディスカッションフォーラムで歓迎されており、モデレーターが質問に答えるために待機しています。\nさらに学びを深めるために、Microsoft Learnで追加の学習資料を探索することを強くお勧めします。\n📋 環境のセットアップ\nこのカリキュラムにはすぐに使える開発環境が用意されています！開始時に、Codespace（ブラウザベースでインストール不要の環境）を使用するか、ローカルのコンピュータでVisual Studio Codeなどのテキストエディタを使用して実行することができます。\nリポジトリを作成する\n作業内容を簡単に保存するために、このリポジトリのコピーを作成することをお勧めします。ページ上部のUse this templateボタンをクリックすると、カリキュラムのコピーがあなたのGitHubアカウントに新しいリポジトリとして作成されます。\n以下の手順に従ってください：\n1リポジトリをフォークする: ページ右上の「Fork」ボタンをクリックします。\n2リポジトリをクローンする: git clone https://githubcom/microsoft/Web-Dev-For-Beginnersgit\nCodespaceでカリキュラムを実行する\n作成したリポジトリのコピーで、Codeボタンをクリックし、Open with Codespacesを選択します。これにより、作業用の新しいCodespaceが作成されます。\nローカルコンピュータでカリキュラムを実行する\nローカルコンピュータでこのカリキュラムを実行するには、テキストエディタ、ブラウザ、コマンドラインツールが必要です。最初のレッスンプログラミング言語とツールの紹介では、これらのツールのさまざまなオプションを紹介し、最適なものを選択する方法を説明します。\nおすすめのエディタはVisual Studio Codeで、内蔵のターミナルも利用できます。こちらからVisual Studio Codeをダウンロードできます。\nリポジトリをコンピュータにクローンします。CodeボタンをクリックしてURLをコピーします：\n次に、Visual Studio Code内のターミナルを開き、コピーしたURLを<your-repository-url>に置き換えて以下のコマンドを実行します：\nbash\ngit clone <your-repository-url>\nVisual Studio Codeでフォルダを開きます。File > Open Folderをクリックし、クローンしたフォルダを選択します。\n推奨されるVisual Studio Code拡張機能:\nLive Server - HTMLページをVisual Studio Code内でプレビューするため\nCopilot - コードを書く速度を向上させるため\n📂 各レッスンには以下が含まれます：\nスケッチノート（オプション）\n補足動画（オプション）\nレッスン前のウォームアップクイズ\n書き起こしレッスン\nプロジェクトベースのレッスンでは、プロジェクト構築のステップバイステップガイド\n知識チェック\nチャレンジ\n補足資料\n課題\nレッスン後のクイズ\nクイズについての注意: すべてのクイズはQuiz-appフォルダに含まれており、合計48個のクイズが各3問ずつあります。レッスン内からリンクされており、Quiz-appはローカルで実行するかAzureにデプロイできます。quiz-appフォルダ内の指示に従ってください。クイズは徐々にローカライズされています。\n🗃️ レッスン\n|     |                       プロジェクト名                       |                            教えられる概念                             | 学習目標                                                                                                                 |                                                         リンクされたレッスン                                                          |         著者          |\n| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     始めるにあたって                      |           プログラミングとツールの基本的な紹介           | ほとんどのプログラミング言語の基本的な基盤と、プロの開発者が仕事をするのに役立つソフトウェアについて学ぶ | プログラミング言語とツールの紹介 |         Jasmine         |\n| 02  |                     始めるにあたって                      |             GitHubの基本、チームでの作業             | プロジェクトでGitHubを使用する方法、コードベースで他の人と協力する方法                                                    |                            GitHubの基本                             |          Floor          |\n| 03  |                     始めるにあたって                      |                             アクセシビリティ                              | ウェブアクセシビリティの基本を学ぶ                                                                                               |                       アクセシビリティの基本                       |       Christopher       |\n| 04  |                        JSの基本                         |                         JavaScriptのデータ型                          | JavaScriptのデータ型の基本                                                                                                 |                                       データ型                                        |         Jasmine         |\n| 05  |                        JSの基本                         |                         関数とメソッド                          | アプリケーションのロジックフローを管理するための関数とメソッドについて学ぶ                                                             |                              関数とメソッド                               | Jasmine and Christopher |\n| 06  |                        JSの基本                         |                        JSでの意思決定                        | 意思決定方法を使用してコード内に条件を作成する方法を学ぶ                                                           |                                 意思決定                                  |         Jasmine         |\n| 07  |                        JSの基本                         |                            配列とループ                            | JavaScriptで配列とループを使用してデータを操作する                                                                                 |                                   配列とループ                                    |         Jasmine         |\n| 08  |       テラリウム       |                            HTMLの実践                            | レイアウトを構築することに焦点を当ててオンラインテラリウムを作成するためのHTMLを構築する                                                         |                                 HTMLの紹介                                 |           Jen           |\n| 09  |       テラリウム       |                            CSSの実践                             | ページをレスポンシブにすることを含むCSSの基本に焦点を当ててオンラインテラリウムをスタイル設定するためのCSSを構築する                     |                                  CSSの紹介                                  |           Jen           |\n| 10  |            テラリウム            |                 JavaScriptのクロージャとDOM操作                  | クロージャとDOM操作に焦点を当ててドラッグ＆ドロップインターフェースとしてテラリウムを機能させるためのJavaScriptを構築する             |                  JavaScriptのクロージャとDOM操作                   |           Jen           |\n| 11  |          タイピングゲーム          |                          タイピングゲームを構築                           | キーボードイベントを使用してJavaScriptアプリのロジックを駆動する方法を学ぶ                                                          |                                イベント駆動型プログラミング                                |       Christopher       |\n| 12  | Green Browser Extension |                         ブラウザの操作                          | ブラウザの仕組み、その歴史、そしてブラウザ拡張機能の最初の要素を構築する方法を学びます                               |                               ブラウザについて                                |           Jen           |\n| 13  | Green Browser Extension | フォームの作成、APIの呼び出し、ローカルストレージへの変数の保存 | JavaScriptを使ってブラウザ拡張機能の要素を構築し、ローカルストレージに保存された変数を使用してAPIを呼び出します                      |                API、フォーム、ローカルストレージ                 |           Jen           |\n| 14  | Green Browser Extension |          ブラウザのバックグラウンドプロセスとウェブパフォーマンス          | ブラウザのバックグラウンドプロセスを使用して拡張機能のアイコンを管理し、ウェブパフォーマンスと最適化について学びます   |             バックグラウンドタスクとパフォーマンス              |           Jen           |\n| 15  |           Space Game           |             JavaScriptを使ったより高度なゲーム開発             | クラスとコンポジションの両方を使用した継承やPub/Subパターンについて学び、ゲーム構築の準備をします              |                      高度なゲーム開発の紹介                       |          Chris          |\n| 16  |           Space Game           |                           キャンバスへの描画                            | 画面に要素を描画するために使用されるCanvas APIについて学びます                                                                       |                                キャンバスへの描画                                |          Chris          |\n| 17  |           Space Game           |                   画面上の要素の移動                    | カート座標系とCanvas APIを使用して要素に動きを与える方法を学びます                                            |                           要素の移動                           |          Chris          |\n| 18  |           Space Game           |                          衝突検出                           | キー入力を使用して要素が衝突し反応するようにし、ゲームのパフォーマンスを確保するためのクールダウン機能を提供します    |                              衝突検出                              |          Chris          |\n| 19  |           Space Game           |                             スコアの記録                              | ゲームの状態とパフォーマンスに基づいて数学的計算を行います                                                                |                                    スコアの記録                                    |          Chris          |\n| 20  |           Space Game           |                     ゲームの終了と再開                     | アセットのクリーンアップや変数値のリセットを含む、ゲームの終了と再開について学びます                              |                                終了条件                                 |          Chris          |\n| 21  |         Banking App          |                 ウェブアプリにおけるHTMLテンプレートとルート                 | ルーティングとHTMLテンプレートを使用して、マルチページウェブサイトのアーキテクチャの基盤を作成する方法を学びます                             |                            HTMLテンプレートとルート                             |          Yohan          |\n| 22  |         Banking App          |                  ログインと登録フォームの作成                   | フォームの作成とバリデーションルーチンの処理について学びます                                                                          |                                           フォーム                                           |          Yohan          |\n| 23  |         Banking App          |                   データの取得と使用方法                   | アプリ内でデータがどのように流れ、取得、保存、破棄されるかを学びます                                                 |                                            データ                                            |          Yohan          |\n| 24  |         Banking App          |                      状態管理の概念                      | アプリが状態を保持する方法と、それをプログラム的に管理する方法を学びます                                                              |                                状態管理                                |          Yohan          |\n🏫 教育方針\n私たちのカリキュラムは、以下の2つの主要な教育方針に基づいて設計されています：\n* プロジェクトベースの学習\n* 頻繁なクイズ\nこのプログラムでは、JavaScript、HTML、CSSの基本を教えるだけでなく、現在のウェブ開発者が使用する最新のツールや技術も学べます。学生は、タイピングゲーム、仮想テラリウム、環境に優しいブラウザ拡張機能、スペースインベーダー風のゲーム、そしてビジネス向けのバンキングアプリを構築することで、実践的な経験を積むことができます。このシリーズを終える頃には、ウェブ開発の確かな理解を得ることができます。\n🎓 このカリキュラムの最初のいくつかのレッスンは、Microsoft Learnの学習パスとして受講できます！\nプロジェクトに沿った内容を確保することで、学生にとって学習プロセスがより魅力的になり、概念の定着が促進されます。また、JavaScriptの基本を紹介するいくつかのスターターレッスンを作成し、\"Beginners Series to: JavaScript\"というビデオチュートリアルコレクションのビデオと組み合わせています。このコレクションの一部の著者は、このカリキュラムにも貢献しています。\nさらに、授業前の低リスクなクイズは、学生がトピックを学ぶ意欲を高め、授業後の2回目のクイズはさらなる定着を確保します。このカリキュラムは柔軟で楽しいものになるよう設計されており、全体または一部を受講することができます。プロジェクトは小さなものから始まり、12週間のサイクルの終わりには徐々に複雑になります。\nJavaScriptフレームワークの導入を意図的に避け、フレームワークを採用する前に必要な基本的なスキルに集中していますが、このカリキュラムを修了した後の次のステップとして、Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 4808,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "5a6a5480dbd5dc07a3016f77e0ed95f9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "| Chris | | 21 | Banking App | ウェブアプリにおけるHTMLテンプレートとルート | ルーティングとHTMLテンプレートを使用して、マルチページウェブサイトのアーキテクチャの基盤を作成する方法を学びます | HTMLテンプレートとルート | Yohan | | 22 | Banking App | ログインと登録フォームの作成 | フォームの作成とバリデーションルーチンの処理について学びます | フォーム | Yohan | | 23 | Banking App | データの取得と使用方法 | アプリ内でデータがどのように流れ、取得、保存、破棄されるかを学びます | データ | Yohan | | 24 | Banking App | 状態管理の概念 | アプリが状態を保持する方法と、それをプログラム的に管理する方法を学びます | 状態管理 | Yohan | 🏫 教育方針 私たちのカリキュラムは、以下の2つの主要な教育方針に基づいて設計されています： * プロジェクトベースの学習 * 頻繁なクイズ このプログラムでは、JavaScript、HTML、CSSの基本を教えるだけでなく、現在のウェブ開発者が使用する最新のツールや技術も学べます。学生は、タイピングゲーム、仮想テラリウム、環境に優しいブラウザ拡張機能、スペースインベーダー風のゲーム、そしてビジネス向けのバンキングアプリを構築することで、実践的な経験を積むことができます。このシリーズを終える頃には、ウェブ開発の確かな理解を得ることができます。 🎓 このカリキュラムの最初のいくつかのレッスンは、Microsoft Learnの学習パスとして受講できます！ プロジェクトに沿った内容を確保することで、学生にとって学習プロセスがより魅力的になり、概念の定着が促進されます。また、JavaScriptの基本を紹介するいくつかのスターターレッスンを作成し、\"Beginners Series to: JavaScript\"というビデオチュートリアルコレクションのビデオと組み合わせています。このコレクションの一部の著者は、このカリキュラムにも貢献しています。 さらに、授業前の低リスクなクイズは、学生がトピックを学ぶ意欲を高め、授業後の2回目のクイズはさらなる定着を確保します。このカリキュラムは柔軟で楽しいものになるよう設計されており、全体または一部を受講することができます。プロジェクトは小さなものから始まり、12週間のサイクルの終わりには徐々に複雑になります。 JavaScriptフレームワークの導入を意図的に避け、フレームワークを採用する前に必要な基本的なスキルに集中していますが、このカリキュラムを修了した後の次のステップとして、Nodejsについて学ぶことをお勧めします。これには、\"Beginner Series to: Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1057,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "533054619b52776a0bf6eef0ba95f385",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "| 21 | Banking App | ウェブアプリにおけるHTMLテンプレートとルート | ルーティングとHTMLテンプレートを使用して、マルチページウェブサイトのアーキテクチャの基盤を作成する方法を学びます | HTMLテンプレートとルート | Yohan | | 22 | Banking App | ログインと登録フォームの作成 | フォームの作成とバリデーションルーチンの処理について学びます | フォーム | Yohan | | 23 | Banking App | データの取得と使用方法 | アプリ内でデータがどのように流れ、取得、保存、破棄されるかを学びます | データ | Yohan | | 24 | Banking App | 状態管理の概念 | アプリが状態を保持する方法と、それをプログラム的に管理する方法を学びます | 状態管理 | Yohan | 🏫 教育方針 私たちのカリキュラムは、以下の2つの主要な教育方針に基づいて設計されています： * プロジェクトベースの学習 * 頻繁なクイズ このプログラムでは、JavaScript、HTML、CSSの基本を教えるだけでなく、現在のウェブ開発者が使用する最新のツールや技術も学べます。学生は、タイピングゲーム、仮想テラリウム、環境に優しいブラウザ拡張機能、スペースインベーダー風のゲーム、そしてビジネス向けのバンキングアプリを構築することで、実践的な経験を積むことができます。このシリーズを終える頃には、ウェブ開発の確かな理解を得ることができます。 🎓 このカリキュラムの最初のいくつかのレッスンは、Microsoft Learnの学習パスとして受講できます！ プロジェクトに沿った内容を確保することで、学生にとって学習プロセスがより魅力的になり、概念の定着が促進されます。また、JavaScriptの基本を紹介するいくつかのスターターレッスンを作成し、\"Beginners Series to: JavaScript\"というビデオチュートリアルコレクションのビデオと組み合わせています。このコレクションの一部の著者は、このカリキュラムにも貢献しています。 さらに、授業前の低リスクなクイズは、学生がトピックを学ぶ意欲を高め、授業後の2回目のクイズはさらなる定着を確保します。このカリキュラムは柔軟で楽しいものになるよう設計されており、全体または一部を受講することができます。プロジェクトは小さなものから始まり、12週間のサイクルの終わりには徐々に複雑になります。 JavaScriptフレームワークの導入を意図的に避け、フレームワークを採用する前に必要な基本的なスキルに集中していますが、このカリキュラムを修了した後の次のステップとして、Nodejsについて学ぶことをお勧めします。これには、\"Beginner Series to: Nodejs\"という別のビデオコレクションがあります。\n行動規範と貢献ガイドラインをご覧ください。建設的なフィードバックを歓迎します！\n🧭 オフラインアクセス\nこのドキュメントをオフラインで実行するには、Docsifyを使用します。このリポジトリをフォークし、Docsifyをインストールしてローカルマシンにセットアップしてください。その後、このリポジトリのルートフォルダでdocsify serveと入力します。ウェブサイトはローカルホストのポート3000で提供されます：localhost:3000。\n📘 PDF\nすべてのレッスンのPDFはこちらから入手できます。\n🎒 その他のコース\n私たちのチームは他にもコースを提供しています！以下をご覧ください：\nGenerative AI for Beginners\nGenerative AI for Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1316,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "3c02b9a4129a2379cbc03661efe19b1a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "| ログインと登録フォームの作成 | フォームの作成とバリデーションルーチンの処理について学びます | フォーム | Yohan | | 23 | Banking App | データの取得と使用方法 | アプリ内でデータがどのように流れ、取得、保存、破棄されるかを学びます | データ | Yohan | | 24 | Banking App | 状態管理の概念 | アプリが状態を保持する方法と、それをプログラム的に管理する方法を学びます | 状態管理 | Yohan | 🏫 教育方針 私たちのカリキュラムは、以下の2つの主要な教育方針に基づいて設計されています： * プロジェクトベースの学習 * 頻繁なクイズ このプログラムでは、JavaScript、HTML、CSSの基本を教えるだけでなく、現在のウェブ開発者が使用する最新のツールや技術も学べます。学生は、タイピングゲーム、仮想テラリウム、環境に優しいブラウザ拡張機能、スペースインベーダー風のゲーム、そしてビジネス向けのバンキングアプリを構築することで、実践的な経験を積むことができます。このシリーズを終える頃には、ウェブ開発の確かな理解を得ることができます。 🎓 このカリキュラムの最初のいくつかのレッスンは、Microsoft Learnの学習パスとして受講できます！ プロジェクトに沿った内容を確保することで、学生にとって学習プロセスがより魅力的になり、概念の定着が促進されます。また、JavaScriptの基本を紹介するいくつかのスターターレッスンを作成し、\"Beginners Series to: JavaScript\"というビデオチュートリアルコレクションのビデオと組み合わせています。このコレクションの一部の著者は、このカリキュラムにも貢献しています。 さらに、授業前の低リスクなクイズは、学生がトピックを学ぶ意欲を高め、授業後の2回目のクイズはさらなる定着を確保します。このカリキュラムは柔軟で楽しいものになるよう設計されており、全体または一部を受講することができます。プロジェクトは小さなものから始まり、12週間のサイクルの終わりには徐々に複雑になります。 JavaScriptフレームワークの導入を意図的に避け、フレームワークを採用する前に必要な基本的なスキルに集中していますが、このカリキュラムを修了した後の次のステップとして、Nodejsについて学ぶことをお勧めします。これには、\"Beginner Series to: Nodejs\"という別のビデオコレクションがあります。 行動規範と貢献ガイドラインをご覧ください。建設的なフィードバックを歓迎します！ 🧭 オフラインアクセス このドキュメントをオフラインで実行するには、Docsifyを使用します。このリポジトリをフォークし、Docsifyをインストールしてローカルマシンにセットアップしてください。その後、このリポジトリのルートフォルダでdocsify serveと入力します。ウェブサイトはローカルホストのポート3000で提供されます：localhost:3000。 📘 PDF すべてのレッスンのPDFはこちらから入手できます。 🎒 その他のコース 私たちのチームは他にもコースを提供しています！以下をご覧ください： Generative AI for Beginners Generative AI for BeginnersNET\nGenerative AI with JavaScript\nGenerative AI with Java\nAI for Beginners\nData Science for Beginners\nML for Beginners\nCybersecurity for Beginners\nWeb Dev for Beginners\nIoT for Beginners\nXR Development for Beginners\nMastering GitHub Copilot for Agentic use\nMastering GitHub Copilot for C#/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1284,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "5af5bcfacb57d1fe6c4776354139ebe7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ja\\README.md",
    "source_type": "git_repo",
    "title": "初心者向けウェブ開発 - カリキュラム",
    "content": "頻繁なクイズ このプログラムでは、JavaScript、HTML、CSSの基本を教えるだけでなく、現在のウェブ開発者が使用する最新のツールや技術も学べます。学生は、タイピングゲーム、仮想テラリウム、環境に優しいブラウザ拡張機能、スペースインベーダー風のゲーム、そしてビジネス向けのバンキングアプリを構築することで、実践的な経験を積むことができます。このシリーズを終える頃には、ウェブ開発の確かな理解を得ることができます。 🎓 このカリキュラムの最初のいくつかのレッスンは、Microsoft Learnの学習パスとして受講できます！ プロジェクトに沿った内容を確保することで、学生にとって学習プロセスがより魅力的になり、概念の定着が促進されます。また、JavaScriptの基本を紹介するいくつかのスターターレッスンを作成し、\"Beginners Series to: JavaScript\"というビデオチュートリアルコレクションのビデオと組み合わせています。このコレクションの一部の著者は、このカリキュラムにも貢献しています。 さらに、授業前の低リスクなクイズは、学生がトピックを学ぶ意欲を高め、授業後の2回目のクイズはさらなる定着を確保します。このカリキュラムは柔軟で楽しいものになるよう設計されており、全体または一部を受講することができます。プロジェクトは小さなものから始まり、12週間のサイクルの終わりには徐々に複雑になります。 JavaScriptフレームワークの導入を意図的に避け、フレームワークを採用する前に必要な基本的なスキルに集中していますが、このカリキュラムを修了した後の次のステップとして、Nodejsについて学ぶことをお勧めします。これには、\"Beginner Series to: Nodejs\"という別のビデオコレクションがあります。 行動規範と貢献ガイドラインをご覧ください。建設的なフィードバックを歓迎します！ 🧭 オフラインアクセス このドキュメントをオフラインで実行するには、Docsifyを使用します。このリポジトリをフォークし、Docsifyをインストールしてローカルマシンにセットアップしてください。その後、このリポジトリのルートフォルダでdocsify serveと入力します。ウェブサイトはローカルホストのポート3000で提供されます：localhost:3000。 📘 PDF すべてのレッスンのPDFはこちらから入手できます。 🎒 その他のコース 私たちのチームは他にもコースを提供しています！以下をご覧ください： Generative AI for Beginners Generative AI for BeginnersNET Generative AI with JavaScript Generative AI with Java AI for Beginners Data Science for Beginners ML for Beginners Cybersecurity for Beginners Web Dev for Beginners IoT for Beginners XR Development for Beginners Mastering GitHub Copilot for Agentic use Mastering GitHub Copilot for C#/NET Developers\nChoose Your Own Copilot Adventure\nライセンス\nこのリポジトリはMITライセンスの下でライセンスされています。詳細についてはLICENSEファイルをご覧ください。\n免責事項:\nこの文書は、AI翻訳サービス Co-op Translator を使用して翻訳されています。正確性を追求しておりますが、自動翻訳には誤りや不正確な部分が含まれる可能性があります。元の言語で記載された文書を正式な情報源としてお考えください。重要な情報については、専門の人間による翻訳を推奨します。この翻訳の使用に起因する誤解や誤解釈について、当方は一切の責任を負いません。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27672,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ja\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1267,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "660ca94ab85f0b3bbce9562d80a358a4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Kodeks postępowania Microsoft Open Source",
    "content": "Kodeks postępowania Microsoft Open Source\nTen projekt przyjął Kodeks postępowania Microsoft Open Source.\nZasoby:\nKodeks postępowania Microsoft Open Source\nFAQ dotyczące Kodeksu postępowania Microsoft\nW razie pytań lub wątpliwości skontaktuj się pod adresem opencode@microsoft.com\nZastrzeżenie:\nTen dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator. Chociaż staramy się zapewnić dokładność, prosimy mieć na uwadze, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości. Oryginalny dokument w jego rodzimym języku powinien być uznawany za wiarygodne źródło. W przypadku informacji krytycznych zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowieka. Nie ponosimy odpowiedzialności za jakiekolwiek nieporozumienia lub błędne interpretacje wynikające z użycia tego tłumaczenia.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1456,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 277,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dac05c42e5e859dbc081c723c6bf02b3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "Współtworzenie",
    "content": "Współtworzenie\nTen projekt zachęca do współtworzenia i składania sugestii Większość wkładów wymaga od Ciebie\nzgody na Umowę Licencyjną Współtwórcy (CLA), która potwierdza, że masz prawo\ni faktycznie udzielasz nam prawa do korzystania z Twojego wkładu Więcej szczegółów znajdziesz na stronie\nhttps://cla microsoft com Kiedy przesyłasz pull request, bot CLA automatycznie sprawdzi, czy musisz\ndostarczyć CLA i odpowiednio oznaczy PR (np etykieta, komentarz) Po prostu postępuj zgodnie z\ninstrukcjami podanymi przez bota Musisz to zrobić tylko raz dla wszystkich repozytoriów korzystających z naszego CLA Prosimy również, abyś spróbował wyjaśnić, dlaczego dokonałeś tej zmiany, abyśmy mogli lepiej zrozumieć Twoją prośbę Ten projekt przyjął Kodeks Postępowania Microsoft Open Source Więcej informacji znajdziesz w FAQ dotyczących Kodeksu Postępowania\nlub skontaktuj się z opencode@microsoft com w przypadku dodatkowych pytań lub komentarzy Zastrzeżenie:\nTen dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator Chociaż dokładamy wszelkich starań, aby tłumaczenie było precyzyjne, prosimy pamiętać, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości Oryginalny dokument w jego rodzimym języku powinien być uznawany za autorytatywne źródło W przypadku informacji o kluczowym znaczeniu zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowieka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2173,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "aa10d465589e58a3cd96f2570de9e0ac",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "Współtworzenie",
    "content": "Więcej informacji znajdziesz w FAQ dotyczących Kodeksu Postępowania lub skontaktuj się z opencode@microsoft com w przypadku dodatkowych pytań lub komentarzy Zastrzeżenie: Ten dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator Chociaż dokładamy wszelkich starań, aby tłumaczenie było precyzyjne, prosimy pamiętać, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości Oryginalny dokument w jego rodzimym języku powinien być uznawany za autorytatywne źródło W przypadku informacji o kluczowym znaczeniu zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowiekaNie ponosimy odpowiedzialności za jakiekolwiek nieporozumienia lub błędne interpretacje wynikające z użycia tego tłumaczenia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2173,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "32acdcc618a5e616983d49cebfa1bf42",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "Dla Edukatorów\nChcesz wykorzystać ten program nauczania w swojej klasie Śmiało, możesz to zrobić W rzeczywistości możesz używać go bezpośrednio w GitHub, korzystając z GitHub Classroom Aby to zrobić, zrób fork tego repozytorium Będziesz musiał utworzyć repozytorium dla każdej lekcji, więc musisz wyodrębnić każdy folder do osobnego repozytorium Dzięki temu GitHub Classroom będzie mógł obsługiwać każdą lekcję osobno Te pełne instrukcje pomogą Ci zrozumieć, jak skonfigurować swoją klasę Korzystanie z Moodle, Canvas lub Blackboard\nTen program nauczania świetnie sprawdza się w tych systemach zarządzania nauczaniem Skorzystaj z pliku do przesłania w Moodle dla pełnej zawartości lub wypróbuj plik Common Cartridge, który zawiera część materiałów Moodle Cloud nie obsługuje pełnych eksportów Common Cartridge, więc lepiej jest użyć pliku do pobrania dla Moodle, który można załadować do Canvas Daj nam znać, jak możemy ulepszyć to doświadczenie Program nauczania w klasie Moodle\nProgram nauczania w Canvas\nKorzystanie z repozytorium w obecnej formie\nJeśli chcesz korzystać z tego repozytorium w jego obecnej formie, bez użycia GitHub Classroom, również jest to możliwe Musisz poinformować swoich uczniów, nad którą lekcją mają pracować wspólnie W formacie online (Zoom, Teams lub inne) możesz tworzyć pokoje grupowe na quizy i mentorować uczniów, aby pomóc im przygotować się do nauki Następnie zaproś uczniów do quizów i poproś ich o przesłanie odpowiedzi jako 'issues' w określonym czasie",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3783,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e200ff5f365c329e0801464a514f6005",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "nauczania w Canvas Korzystanie z repozytorium w obecnej formie Jeśli chcesz korzystać z tego repozytorium w jego obecnej formie, bez użycia GitHub Classroom, również jest to możliwe Musisz poinformować swoich uczniów, nad którą lekcją mają pracować wspólnie W formacie online (Zoom, Teams lub inne) możesz tworzyć pokoje grupowe na quizy i mentorować uczniów, aby pomóc im przygotować się do nauki Następnie zaproś uczniów do quizów i poproś ich o przesłanie odpowiedzi jako 'issues' w określonym czasieMożesz zrobić to samo z zadaniami, jeśli chcesz, aby uczniowie pracowali wspólnie w otwartej przestrzeni Jeśli wolisz bardziej prywatny format, poproś uczniów, aby forkowali program nauczania, lekcja po lekcji, do swoich własnych prywatnych repozytoriów GitHub i udzielili Ci dostępu Wtedy mogą wypełniać quizy i zadania prywatnie i przesyłać je do Ciebie jako 'issues' w Twoim repozytorium klasowym Istnieje wiele sposobów, aby to działało w formacie klasy online Daj nam znać, co działa najlepiej dla Ciebie Podziel się swoimi opiniami Chcemy, aby ten program nauczania działał dla Ciebie i Twoich uczniów Skontaktuj się z nami w Teacher corner i otwórz nowe zgłoszenie w przypadku jakichkolwiek próśb, błędów lub opinii Zastrzeżenie:\nTen dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator Chociaż staramy się zapewnić dokładność, prosimy mieć na uwadze, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3783,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0cf62904e6099317462d1f92911833d7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "to działało w formacie klasy online Daj nam znać, co działa najlepiej dla Ciebie Podziel się swoimi opiniami Chcemy, aby ten program nauczania działał dla Ciebie i Twoich uczniów Skontaktuj się z nami w Teacher corner i otwórz nowe zgłoszenie w przypadku jakichkolwiek próśb, błędów lub opinii Zastrzeżenie: Ten dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator Chociaż staramy się zapewnić dokładność, prosimy mieć na uwadze, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłościOryginalny dokument w jego rodzimym języku powinien być uznawany za wiarygodne źródło W przypadku informacji krytycznych zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowieka Nie ponosimy odpowiedzialności za jakiekolwiek nieporozumienia lub błędne interpretacje wynikające z użycia tego tłumaczenia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3783,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e67fdce8592fd5b4683a5ff22e8b8dc4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "초보자를 위한 웹 개발 - 커리큘럼\nMicrosoft Cloud Advocates가 제공하는 12주 과정의 종합 강좌를 통해 웹 개발의 기초를 배워보세요 24개의 강의는 JavaScript, CSS, HTML을 다루며, 테라리움, 브라우저 확장 프로그램, 우주 게임과 같은 실습 프로젝트를 통해 학습합니다 퀴즈, 토론, 실습 과제를 통해 학습을 심화하고, 프로젝트 기반 학습법으로 지식을 효과적으로 습득하세요 지금 코딩 여정을 시작하세요 🧑‍🎓 학생이신가요 학생 허브 페이지를 방문해보세요 초보자를 위한 자료, 학생 팩, 무료 인증서 바우처를 받을 수 있는 방법 등을 확인할 수 있습니다 이 페이지를 즐겨찾기에 추가하고 매달 업데이트되는 콘텐츠를 확인하세요 📣 공지 - 새로운 커리큘럼 JavaScript를 위한 생성형 AI가 출시되었습니다\n새로운 생성형 AI 커리큘럼을 놓치지 마세요 https://aka ms/genai-js-course를 방문해 시작하세요 기초부터 RAG까지 다루는 강의\nGenAI와 동반 앱을 사용해 역사적 인물과 상호작용\n재미있고 몰입감 있는 스토리, 시간 여행을 떠나보세요",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 20
  },
  {
    "id": "0f1e4bc850a6adc35bc14c98453e3133",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "학습법으로 지식을 효과적으로 습득하세요 지금 코딩 여정을 시작하세요 🧑‍🎓 학생이신가요 학생 허브 페이지를 방문해보세요 초보자를 위한 자료, 학생 팩, 무료 인증서 바우처를 받을 수 있는 방법 등을 확인할 수 있습니다 이 페이지를 즐겨찾기에 추가하고 매달 업데이트되는 콘텐츠를 확인하세요 📣 공지 - 새로운 커리큘럼 JavaScript를 위한 생성형 AI가 출시되었습니다 새로운 생성형 AI 커리큘럼을 놓치지 마세요 https://aka ms/genai-js-course를 방문해 시작하세요 기초부터 RAG까지 다루는 강의 GenAI와 동반 앱을 사용해 역사적 인물과 상호작용 재미있고 몰입감 있는 스토리, 시간 여행을 떠나보세요각 강의에는 과제, 지식 점검, 도전 과제가 포함되어 있으며, 다음과 같은 주제를 학습합니다:\n- 프롬프트 작성 및 프롬프트 엔지니어링\n- 텍스트 및 이미지 앱 생성\n- 검색 앱\nhttps://aka ms/genai-js-course를 방문해 시작하세요 🌱 시작하기\n교사 여러분, 이 커리큘럼을 활용하는 방법에 대한 제안 사항을 포함했습니다 토론 포럼에서 피드백을 공유해주세요",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 20
  },
  {
    "id": "a34142bd278263acecc52e9561b428bf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "출시되었습니다 새로운 생성형 AI 커리큘럼을 놓치지 마세요 https://aka ms/genai-js-course를 방문해 시작하세요 기초부터 RAG까지 다루는 강의 GenAI와 동반 앱을 사용해 역사적 인물과 상호작용 재미있고 몰입감 있는 스토리, 시간 여행을 떠나보세요각 강의에는 과제, 지식 점검, 도전 과제가 포함되어 있으며, 다음과 같은 주제를 학습합니다: - 프롬프트 작성 및 프롬프트 엔지니어링 - 텍스트 및 이미지 앱 생성 - 검색 앱 https://aka ms/genai-js-course를 방문해 시작하세요 🌱 시작하기 교사 여러분, 이 커리큘럼을 활용하는 방법에 대한 제안 사항을 포함했습니다 토론 포럼에서 피드백을 공유해주세요학습자 여러분, 각 강의는 사전 강의 퀴즈로 시작하며, 강의 자료를 읽고 다양한 활동을 완료한 후 사후 강의 퀴즈로 이해도를 확인하세요 학습 경험을 향상시키기 위해 동료들과 함께 프로젝트를 진행하세요 토론 포럼에서 토론을 장려하며, 모더레이터 팀이 질문에 답변해드립니다 추가 학습을 위해 Microsoft Learn을 탐색해보는 것을 강력히 추천합니다 📋 환경 설정\n이 커리큘럼은 바로 사용할 수 있는 개발 환경을 제공합니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 20
  },
  {
    "id": "7fa364d28c97def5116d02f2179f0059",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "https://aka ms/genai-js-course를 방문해 시작하세요 🌱 시작하기 교사 여러분, 이 커리큘럼을 활용하는 방법에 대한 제안 사항을 포함했습니다 토론 포럼에서 피드백을 공유해주세요학습자 여러분, 각 강의는 사전 강의 퀴즈로 시작하며, 강의 자료를 읽고 다양한 활동을 완료한 후 사후 강의 퀴즈로 이해도를 확인하세요 학습 경험을 향상시키기 위해 동료들과 함께 프로젝트를 진행하세요 토론 포럼에서 토론을 장려하며, 모더레이터 팀이 질문에 답변해드립니다 추가 학습을 위해 Microsoft Learn을 탐색해보는 것을 강력히 추천합니다 📋 환경 설정 이 커리큘럼은 바로 사용할 수 있는 개발 환경을 제공합니다시작할 때 Codespace (브라우저 기반, 설치 불필요한 환경) 또는 로컬 컴퓨터에서 Visual Studio Code와 같은 텍스트 편집기를 사용해 실행할 수 있습니다 저장소 생성하기\n작업을 쉽게 저장하려면 이 저장소의 복사본을 생성하는 것이 좋습니다 페이지 상단의 Use this template 버튼을 클릭하면 GitHub 계정에 커리큘럼 복사본이 생성됩니다 다음 단계를 따르세요:\n1 저장소 포크하기: 페이지 오른쪽 상단의 \"Fork\" 버튼을 클릭하세요 2 저장소 클론하기: git clone https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 3,
    "total_chunks": 20
  },
  {
    "id": "4d552f3368f38e68a197ceb43c3f7b4b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "것을 강력히 추천합니다 📋 환경 설정 이 커리큘럼은 바로 사용할 수 있는 개발 환경을 제공합니다시작할 때 Codespace (브라우저 기반, 설치 불필요한 환경) 또는 로컬 컴퓨터에서 Visual Studio Code와 같은 텍스트 편집기를 사용해 실행할 수 있습니다 저장소 생성하기 작업을 쉽게 저장하려면 이 저장소의 복사본을 생성하는 것이 좋습니다 페이지 상단의 Use this template 버튼을 클릭하면 GitHub 계정에 커리큘럼 복사본이 생성됩니다 다음 단계를 따르세요: 1 저장소 포크하기: 페이지 오른쪽 상단의 \"Fork\" 버튼을 클릭하세요 2 저장소 클론하기: git clone https://githubcom/microsoft/Web-Dev-For-Beginners git\nCodespace에서 커리큘럼 실행하기\n생성한 저장소 복사본에서 Code 버튼을 클릭하고 Open with Codespaces를 선택하세요 새로운 Codespace가 생성되어 작업할 수 있습니다 로컬 컴퓨터에서 커리큘럼 실행하기\n로컬 컴퓨터에서 커리큘럼을 실행하려면 텍스트 편집기, 브라우저, 명령줄 도구가 필요합니다 첫 번째 강의인 프로그래밍 언어 및 도구 소개는 각 도구의 다양한 옵션을 안내하며, 자신에게 가장 적합한 것을 선택할 수 있도록 도와줍니다 추천 편집기는 Visual Studio Code이며, 내장 터미널도 포함되어 있습니다 여기에서 Visual Studio Code를 다운로드하세요",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 20
  },
  {
    "id": "09ad50fbde887dbdeb21f3f43882b3b2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "클릭하세요 2 저장소 클론하기: git clone https://githubcom/microsoft/Web-Dev-For-Beginners git Codespace에서 커리큘럼 실행하기 생성한 저장소 복사본에서 Code 버튼을 클릭하고 Open with Codespaces를 선택하세요 새로운 Codespace가 생성되어 작업할 수 있습니다 로컬 컴퓨터에서 커리큘럼 실행하기 로컬 컴퓨터에서 커리큘럼을 실행하려면 텍스트 편집기, 브라우저, 명령줄 도구가 필요합니다 첫 번째 강의인 프로그래밍 언어 및 도구 소개는 각 도구의 다양한 옵션을 안내하며, 자신에게 가장 적합한 것을 선택할 수 있도록 도와줍니다 추천 편집기는 Visual Studio Code이며, 내장 터미널도 포함되어 있습니다 여기에서 Visual Studio Code를 다운로드하세요저장소를 컴퓨터에 클론하세요 Code 버튼을 클릭하고 URL을 복사한 후, Visual Studio Code의 터미널에서 아래 명령어를 실행하세요 <your-repository-url>을 복사한 URL로 대체하세요:\nbash\ngit clone <your-repository-url>\nVisual Studio Code에서 폴더를 엽니다 File > Open Folder를 클릭하고 클론한 폴더를 선택하세요",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 5,
    "total_chunks": 20
  },
  {
    "id": "300913f67f2f973bb7f243c48012e2af",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "편집기, 브라우저, 명령줄 도구가 필요합니다 첫 번째 강의인 프로그래밍 언어 및 도구 소개는 각 도구의 다양한 옵션을 안내하며, 자신에게 가장 적합한 것을 선택할 수 있도록 도와줍니다 추천 편집기는 Visual Studio Code이며, 내장 터미널도 포함되어 있습니다 여기에서 Visual Studio Code를 다운로드하세요저장소를 컴퓨터에 클론하세요 Code 버튼을 클릭하고 URL을 복사한 후, Visual Studio Code의 터미널에서 아래 명령어를 실행하세요 <your-repository-url>을 복사한 URL로 대체하세요: bash git clone <your-repository-url> Visual Studio Code에서 폴더를 엽니다 File > Open Folder를 클릭하고 클론한 폴더를 선택하세요추천 Visual Studio Code 확장 프로그램:\nLive Server - Visual Studio Code 내에서 HTML 페이지를 미리보기\nCopilot - 코드를 더 빠르게 작성할 수 있도록 도와줌\n📂 각 강의에는 다음이 포함됩니다:\n선택적 스케치 노트\n선택적 보충 영상\n사전 강의 준비 퀴즈\n강의 자료\n프로젝트 기반 강의의 경우, 프로젝트를 구축하는 단계별 가이드\n지식 점검\n도전 과제\n보충 자료\n과제\n사후 강의 퀴즈\n퀴즈에 대한 참고 사항: 모든 퀴즈는 Quiz-app 폴더에 포함되어 있으며, 총 48개의 퀴즈가 각 3문항으로 구성되어 있습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 6,
    "total_chunks": 20
  },
  {
    "id": "3b54b366c4115f1fa745bd54d981cd0e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "Visual Studio Code 확장 프로그램: Live Server - Visual Studio Code 내에서 HTML 페이지를 미리보기 Copilot - 코드를 더 빠르게 작성할 수 있도록 도와줌 📂 각 강의에는 다음이 포함됩니다: 선택적 스케치 노트 선택적 보충 영상 사전 강의 준비 퀴즈 강의 자료 프로젝트 기반 강의의 경우, 프로젝트를 구축하는 단계별 가이드 지식 점검 도전 과제 보충 자료 과제 사후 강의 퀴즈 퀴즈에 대한 참고 사항: 모든 퀴즈는 Quiz-app 폴더에 포함되어 있으며, 총 48개의 퀴즈가 각 3문항으로 구성되어 있습니다퀴즈는 강의 내에서 링크되며, 로컬에서 실행하거나 Azure에 배포할 수 있습니다 quiz-app 폴더의 지침을 따르세요 퀴즈는 점진적으로 현지화되고 있습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 7,
    "total_chunks": 20
  },
  {
    "id": "232e1b038caf96845c05a042967ba37b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "코드를 더 빠르게 작성할 수 있도록 도와줌 📂 각 강의에는 다음이 포함됩니다: 선택적 스케치 노트 선택적 보충 영상 사전 강의 준비 퀴즈 강의 자료 프로젝트 기반 강의의 경우, 프로젝트를 구축하는 단계별 가이드 지식 점검 도전 과제 보충 자료 과제 사후 강의 퀴즈 퀴즈에 대한 참고 사항: 모든 퀴즈는 Quiz-app 폴더에 포함되어 있으며, 총 48개의 퀴즈가 각 3문항으로 구성되어 있습니다퀴즈는 강의 내에서 링크되며, 로컬에서 실행하거나 Azure에 배포할 수 있습니다 quiz-app 폴더의 지침을 따르세요 퀴즈는 점진적으로 현지화되고 있습니다🗃️ 강의\n|     |                       프로젝트 이름                       |                            학습 개념                             | 학습 목표                                                                                                                 |                                                         링크된 강의                                                          |         저자          |\n| :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     시작하기                      |           프로그래밍 및 도구 소개           | 대부분의 프로그래밍 언어의 기본 개념과 전문 개발자가 사용하는 소프트웨어에 대해 학습 | 프로그래밍 언어 및 도구 소개 |         Jasmine         |\n| 02  |                     시작하기                      |             GitHub 기초, 팀 작업 포함             | 프로젝트에서 GitHub을 사용하는 방법과 코드베이스에서 다른 사람들과 협업하는 방법                                                    |                            GitHub 소개                             |          Floor          |\n| 03  |                     시작하기                      |                             접근성                              | 웹 접근성의 기본 개념을 학습                                                                                               |                       접근성 기초                       |       Christopher       |\n| 04  |                        JS 기초                         |                         JavaScript 데이터 유형                          | JavaScript 데이터 유형의 기본 개념                                                                                                 |                                       데이터 유형                                        |         Jasmine         |\n| 05  |                        JS 기초                         |                         함수와 메서드                          | 애플리케이션의 논리 흐름을 관리하기 위해 함수와 메서드에 대해 학습                                                             |                              함수와 메서드                               | Jasmine and Christopher |\n| 06  |                        JS 기초                         |                        JavaScript로 의사결정                        | 의사결정 방법을 사용해 코드에서 조건을 생성하는 방법 학습                                                           |                                 의사결정                                  |         Jasmine         |\n| 07  |                        JS 기초                         |                            배열과 반복문                            | JavaScript에서 배열과 반복문을 사용해 데이터를 다루는 방법 학습                                                                                 |                                   배열과 반복문                                    |         Jasmine         |\n| 08  |       테라리움       |                            HTML 실습                            | 온라인 테라리움을 만들기 위해 HTML을 작성하며 레이아웃 구축에 집중                                                         |                                 HTML 소개                                 |           Jen           |\n| 09  |       테라리움       |                            CSS 실습                             | 온라인 테라리움을 스타일링하기 위해 CSS를 작성하며, CSS의 기본 개념과 반응형 페이지 제작에 집중                     |                                  CSS 소개                                  |           Jen           |\n| 10  |            테라리움            |                 JavaScript 클로저, DOM 조작                  | 테라리움을 드래그/드롭 인터페이스로 작동하게 만들기 위해 JavaScript를 작성하며, 클로저와 DOM 조작에 집중             |                  JavaScript 클로저, DOM 조작                   |           Jen           |\n| 11  |          타이핑 게임          |                          타이핑 게임 만들기                           | 키보드 이벤트를 사용해 JavaScript 앱의 로직을 구동하는 방법 학습                                                          |                                이벤트 기반 프로그래밍                                |       Christopher       |\n| 12  | Green Browser Extension |                         브라우저 작업하기                          | 브라우저의 작동 방식, 역사, 브라우저 확장의 첫 요소를 구성하는 방법을 배웁니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1216,
    "chunk_index": 8,
    "total_chunks": 20
  },
  {
    "id": "0a233a768596cd08aa8839803552effc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "10 | 테라리움 | JavaScript 클로저, DOM 조작 | 테라리움을 드래그/드롭 인터페이스로 작동하게 만들기 위해 JavaScript를 작성하며, 클로저와 DOM 조작에 집중 | JavaScript 클로저, DOM 조작 | Jen | | 11 | 타이핑 게임 | 타이핑 게임 만들기 | 키보드 이벤트를 사용해 JavaScript 앱의 로직을 구동하는 방법 학습 | 이벤트 기반 프로그래밍 | Christopher | | 12 | Green Browser Extension | 브라우저 작업하기 | 브라우저의 작동 방식, 역사, 브라우저 확장의 첫 요소를 구성하는 방법을 배웁니다|                               브라우저에 대하여                                |           Jen           |\n| 13  | Green Browser Extension | 폼 생성, API 호출 및 로컬 스토리지에 변수 저장 | 로컬 스토리지에 저장된 변수를 사용하여 API를 호출하는 브라우저 확장의 JavaScript 요소를 만듭니다 |                API, 폼, 로컬 스토리지                 |           Jen           |\n| 14  | Green Browser Extension |          브라우저의 백그라운드 프로세스와 웹 성능          | 브라우저의 백그라운드 프로세스를 사용하여 확장의 아이콘을 관리하고, 웹 성능 및 최적화 방법에 대해 배웁니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 9,
    "total_chunks": 20
  },
  {
    "id": "2c2236a1dcfa512202088b099859be55",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "브라우저 확장의 첫 요소를 구성하는 방법을 배웁니다| 브라우저에 대하여 | Jen | | 13 | Green Browser Extension | 폼 생성, API 호출 및 로컬 스토리지에 변수 저장 | 로컬 스토리지에 저장된 변수를 사용하여 API를 호출하는 브라우저 확장의 JavaScript 요소를 만듭니다 | API, 폼, 로컬 스토리지 | Jen | | 14 | Green Browser Extension | 브라우저의 백그라운드 프로세스와 웹 성능 | 브라우저의 백그라운드 프로세스를 사용하여 확장의 아이콘을 관리하고, 웹 성능 및 최적화 방법에 대해 배웁니다|             백그라운드 작업 및 성능              |           Jen           |\n| 15  |           Space Game           |             JavaScript를 활용한 고급 게임 개발             | 클래스와 컴포지션을 사용한 상속 및 Pub/Sub 패턴에 대해 배우며 게임 개발을 준비합니다 |                      고급 게임 개발 소개                       |          Chris          |\n| 16  |           Space Game           |                           캔버스에 그리기                            | 화면에 요소를 그리기 위해 사용되는 Canvas API에 대해 배웁니다 |                                캔버스에 그리기                                |          Chris          |\n| 17  |           Space Game           |                   화면에서 요소 이동시키기                    | 요소가 데카르트 좌표와 Canvas API를 사용하여 움직임을 얻는 방법을 알아봅니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 10,
    "total_chunks": 20
  },
  {
    "id": "388b09972c0a4730360c2b108261e1e9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "| 15 | Space Game | JavaScript를 활용한 고급 게임 개발 | 클래스와 컴포지션을 사용한 상속 및 Pub/Sub 패턴에 대해 배우며 게임 개발을 준비합니다 | 고급 게임 개발 소개 | Chris | | 16 | Space Game | 캔버스에 그리기 | 화면에 요소를 그리기 위해 사용되는 Canvas API에 대해 배웁니다 | 캔버스에 그리기 | Chris | | 17 | Space Game | 화면에서 요소 이동시키기 | 요소가 데카르트 좌표와 Canvas API를 사용하여 움직임을 얻는 방법을 알아봅니다|                           요소 이동시키기                           |          Chris          |\n| 18  |           Space Game           |                          충돌 감지                           | 키 입력을 사용하여 요소가 서로 충돌하고 반응하도록 만들고, 게임 성능을 보장하기 위한 쿨다운 기능을 제공합니다 |                              충돌 감지                              |          Chris          |\n| 19  |           Space Game           |                             점수 기록                              | 게임 상태와 성능에 따라 수학적 계산을 수행합니다 |                                    점수 기록                                    |          Chris          |\n| 20  |           Space Game           |                     게임 종료 및 재시작                     | 자산 정리 및 변수 값 초기화를 포함하여 게임을 종료하고 재시작하는 방법을 배웁니다 |                                종료 조건                                 |          Chris          |\n| 21  |         Banking App          |                 웹 앱에서 HTML 템플릿과 라우트                 | 라우팅과 HTML 템플릿을 사용하여 다중 페이지 웹사이트의 구조를 구성하는 방법을 배웁니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 11,
    "total_chunks": 20
  },
  {
    "id": "2aeb3dc9fba339a5801f81b231d2f1f1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "Chris | | 19 | Space Game | 점수 기록 | 게임 상태와 성능에 따라 수학적 계산을 수행합니다 | 점수 기록 | Chris | | 20 | Space Game | 게임 종료 및 재시작 | 자산 정리 및 변수 값 초기화를 포함하여 게임을 종료하고 재시작하는 방법을 배웁니다 | 종료 조건 | Chris | | 21 | Banking App | 웹 앱에서 HTML 템플릿과 라우트 | 라우팅과 HTML 템플릿을 사용하여 다중 페이지 웹사이트의 구조를 구성하는 방법을 배웁니다|                            HTML 템플릿과 라우트                             |          Yohan          |\n| 22  |         Banking App          |                  로그인 및 등록 폼 생성                   | 폼 생성 및 유효성 검사 루틴 처리에 대해 배웁니다 |                                           폼                                           |          Yohan          |\n| 23  |         Banking App          |                   데이터 가져오기 및 사용 방법                   | 앱에서 데이터가 어떻게 흐르고, 가져오고, 저장하고, 삭제하는지에 대해 배웁니다 |                                            데이터                                            |          Yohan          |\n| 24  |         Banking App          |                      상태 관리 개념                      | 앱이 상태를 유지하는 방법과 이를 프로그래밍적으로 관리하는 방법을 배웁니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 12,
    "total_chunks": 20
  },
  {
    "id": "1610a8b96929c95cb90d9dd966e1de2c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "템플릿과 라우트 | Yohan | | 22 | Banking App | 로그인 및 등록 폼 생성 | 폼 생성 및 유효성 검사 루틴 처리에 대해 배웁니다 | 폼 | Yohan | | 23 | Banking App | 데이터 가져오기 및 사용 방법 | 앱에서 데이터가 어떻게 흐르고, 가져오고, 저장하고, 삭제하는지에 대해 배웁니다 | 데이터 | Yohan | | 24 | Banking App | 상태 관리 개념 | 앱이 상태를 유지하는 방법과 이를 프로그래밍적으로 관리하는 방법을 배웁니다|                                상태 관리                                |          Yohan          |\n🏫 교육 방법론\n우리의 커리큘럼은 두 가지 주요 교육 원칙을 기반으로 설계되었습니다:\n* 프로젝트 기반 학습\n* 빈번한 퀴즈\n이 프로그램은 JavaScript, HTML, CSS의 기본 원리와 오늘날 웹 개발자가 사용하는 최신 도구 및 기술을 가르칩니다 학생들은 타이핑 게임, 가상 테라리움, 친환경 브라우저 확장, 스페이스 인베이더 스타일 게임, 비즈니스용 뱅킹 앱을 제작하며 실습 경험을 쌓을 기회를 갖게 됩니다 시리즈가 끝날 때쯤 학생들은 웹 개발에 대한 탄탄한 이해를 얻게 될 것입니다 🎓 이 커리큘럼의 첫 몇 가지 수업은 Microsoft Learn에서 학습 경로로 수강할 수 있습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 13,
    "total_chunks": 20
  },
  {
    "id": "ea710b81b9151b998e01b06ec9fe262a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "주요 교육 원칙을 기반으로 설계되었습니다: * 프로젝트 기반 학습 * 빈번한 퀴즈 이 프로그램은 JavaScript, HTML, CSS의 기본 원리와 오늘날 웹 개발자가 사용하는 최신 도구 및 기술을 가르칩니다 학생들은 타이핑 게임, 가상 테라리움, 친환경 브라우저 확장, 스페이스 인베이더 스타일 게임, 비즈니스용 뱅킹 앱을 제작하며 실습 경험을 쌓을 기회를 갖게 됩니다 시리즈가 끝날 때쯤 학생들은 웹 개발에 대한 탄탄한 이해를 얻게 될 것입니다 🎓 이 커리큘럼의 첫 몇 가지 수업은 Microsoft Learn에서 학습 경로로 수강할 수 있습니다프로젝트와 콘텐츠를 일치시킴으로써 학습 과정을 학생들에게 더 흥미롭게 만들고 개념의 이해도를 높일 수 있습니다 또한 JavaScript 기본 개념을 소개하는 여러 입문 수업을 작성했으며, \"JavaScript 초보자 시리즈\" 비디오 튜토리얼 컬렉션과 함께 제공됩니다 이 비디오의 일부 저자들은 이 커리큘럼 제작에 기여했습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 14,
    "total_chunks": 20
  },
  {
    "id": "0d59047b86450efb23d551a7b94d4b6b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "스타일 게임, 비즈니스용 뱅킹 앱을 제작하며 실습 경험을 쌓을 기회를 갖게 됩니다 시리즈가 끝날 때쯤 학생들은 웹 개발에 대한 탄탄한 이해를 얻게 될 것입니다 🎓 이 커리큘럼의 첫 몇 가지 수업은 Microsoft Learn에서 학습 경로로 수강할 수 있습니다프로젝트와 콘텐츠를 일치시킴으로써 학습 과정을 학생들에게 더 흥미롭게 만들고 개념의 이해도를 높일 수 있습니다 또한 JavaScript 기본 개념을 소개하는 여러 입문 수업을 작성했으며, \"JavaScript 초보자 시리즈\" 비디오 튜토리얼 컬렉션과 함께 제공됩니다 이 비디오의 일부 저자들은 이 커리큘럼 제작에 기여했습니다또한, 수업 전 간단한 퀴즈는 학생들이 주제 학습에 집중하도록 의도를 설정하며, 수업 후 두 번째 퀴즈는 개념의 추가적인 이해를 보장합니다 이 커리큘럼은 유연하고 재미있게 설계되었으며, 전체 또는 일부를 선택적으로 수강할 수 있습니다 프로젝트는 작게 시작하여 12주 과정이 끝날 때쯤 점점 더 복잡해집니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 15,
    "total_chunks": 20
  },
  {
    "id": "b155cf35709e90fd5c2f5a498f4ec269",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "과정을 학생들에게 더 흥미롭게 만들고 개념의 이해도를 높일 수 있습니다 또한 JavaScript 기본 개념을 소개하는 여러 입문 수업을 작성했으며, \"JavaScript 초보자 시리즈\" 비디오 튜토리얼 컬렉션과 함께 제공됩니다 이 비디오의 일부 저자들은 이 커리큘럼 제작에 기여했습니다또한, 수업 전 간단한 퀴즈는 학생들이 주제 학습에 집중하도록 의도를 설정하며, 수업 후 두 번째 퀴즈는 개념의 추가적인 이해를 보장합니다 이 커리큘럼은 유연하고 재미있게 설계되었으며, 전체 또는 일부를 선택적으로 수강할 수 있습니다 프로젝트는 작게 시작하여 12주 과정이 끝날 때쯤 점점 더 복잡해집니다우리는 JavaScript 프레임워크를 도입하지 않고 웹 개발자로서 프레임워크를 채택하기 전에 필요한 기본 기술에 집중하도록 의도적으로 설계했습니다 이 커리큘럼을 완료한 후 다음 단계로 Node js를 배우는 것이 좋습니다 \"Node js 초보자 시리즈\" 비디오 컬렉션을 참고하세요 우리의 행동 강령과 기여 가이드라인을 확인하세요 건설적인 피드백을 환영합니다 🧭 오프라인 접근\nDocsify를 사용하여 이 문서를 오프라인에서 실행할 수 있습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 16,
    "total_chunks": 20
  },
  {
    "id": "d38c9c1afce831670788d7a7c3b9a192",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "보장합니다 이 커리큘럼은 유연하고 재미있게 설계되었으며, 전체 또는 일부를 선택적으로 수강할 수 있습니다 프로젝트는 작게 시작하여 12주 과정이 끝날 때쯤 점점 더 복잡해집니다우리는 JavaScript 프레임워크를 도입하지 않고 웹 개발자로서 프레임워크를 채택하기 전에 필요한 기본 기술에 집중하도록 의도적으로 설계했습니다 이 커리큘럼을 완료한 후 다음 단계로 Node js를 배우는 것이 좋습니다 \"Node js 초보자 시리즈\" 비디오 컬렉션을 참고하세요 우리의 행동 강령과 기여 가이드라인을 확인하세요 건설적인 피드백을 환영합니다 🧭 오프라인 접근 Docsify를 사용하여 이 문서를 오프라인에서 실행할 수 있습니다이 저장소를 포크하고, 로컬 머신에 Docsify 설치를 완료한 후, 이 저장소의 루트 폴더에서 docsify serve를 입력하세요 웹사이트는 로컬호스트 localhost:3000의 3000번 포트에서 제공됩니다 📘 PDF\n모든 수업의 PDF는 여기에서 확인할 수 있습니다 🎒 다른 강좌\n우리 팀은 다른 강좌도 제작합니다 확인해보세요:\n초보자를 위한 생성형 AI\n초보자를 위한 생성형 AI",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 17,
    "total_chunks": 20
  },
  {
    "id": "e808fbb318cb989140920944b06681d3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "것이 좋습니다 \"Node js 초보자 시리즈\" 비디오 컬렉션을 참고하세요 우리의 행동 강령과 기여 가이드라인을 확인하세요 건설적인 피드백을 환영합니다 🧭 오프라인 접근 Docsify를 사용하여 이 문서를 오프라인에서 실행할 수 있습니다이 저장소를 포크하고, 로컬 머신에 Docsify 설치를 완료한 후, 이 저장소의 루트 폴더에서 docsify serve를 입력하세요 웹사이트는 로컬호스트 localhost:3000의 3000번 포트에서 제공됩니다 📘 PDF 모든 수업의 PDF는 여기에서 확인할 수 있습니다 🎒 다른 강좌 우리 팀은 다른 강좌도 제작합니다 확인해보세요: 초보자를 위한 생성형 AI 초보자를 위한 생성형 AINET\nJavaScript로 생성형 AI 배우기\nJava로 생성형 AI 배우기\n초보자를 위한 AI\n초보자를 위한 데이터 과학\n초보자를 위한 머신러닝\n초보자를 위한 사이버 보안\n초보자를 위한 웹 개발\n초보자를 위한 IoT\n초보자를 위한 XR 개발\nGitHub Copilot 마스터하기: 에이전트적 사용\nC#/ NET 개발자를 위한 GitHub Copilot 마스터하기\nGitHub Copilot 모험 선택하기\n라이선스\n이 저장소는 MIT 라이선스에 따라 라이선스가 부여됩니다 자세한 내용은 LICENSE 파일을 참조하세요 면책 조항:\n이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 18,
    "total_chunks": 20
  },
  {
    "id": "c2b1cd0e282cad6e80f26210b4014378",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\ko\\README.md",
    "source_type": "git_repo",
    "title": "초보자를 위한 웹 개발 - 커리큘럼",
    "content": "위한 생성형 AINET JavaScript로 생성형 AI 배우기 Java로 생성형 AI 배우기 초보자를 위한 AI 초보자를 위한 데이터 과학 초보자를 위한 머신러닝 초보자를 위한 사이버 보안 초보자를 위한 웹 개발 초보자를 위한 IoT 초보자를 위한 XR 개발 GitHub Copilot 마스터하기: 에이전트적 사용 C#/ NET 개발자를 위한 GitHub Copilot 마스터하기 GitHub Copilot 모험 선택하기 라이선스 이 저장소는 MIT 라이선스에 따라 라이선스가 부여됩니다 자세한 내용은 LICENSE 파일을 참조하세요 면책 조항: 이 문서는 AI 번역 서비스 Co-op Translator를 사용하여 번역되었습니다정확성을 위해 최선을 다하고 있지만, 자동 번역에는 오류나 부정확성이 포함될 수 있습니다 원본 문서의 원어 버전을 권위 있는 출처로 간주해야 합니다 중요한 정보의 경우, 전문적인 인간 번역을 권장합니다 이 번역 사용으로 인해 발생하는 오해나 잘못된 해석에 대해 책임을 지지 않습니다",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25664,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\ko\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 19,
    "total_chunks": 20
  },
  {
    "id": "c29dce8050ebe2a6f2d11972144319f9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Bezpieczeństwo\nMicrosoft traktuje bezpieczeństwo swoich produktów i usług programistycznych bardzo poważnie, w tym wszystkich repozytoriów kodu źródłowego zarządzanych w ramach naszych organizacji na GitHubie, takich jak Microsoft, Azure, DotNet, AspNet, Xamarin oraz nasze organizacje na GitHubie Jeśli uważasz, że znalazłeś lukę w zabezpieczeniach w którymkolwiek z repozytoriów należących do Microsoftu, która spełnia definicję luki w zabezpieczeniach według Microsoftu, zgłoś ją nam zgodnie z poniższymi wskazówkami Zgłaszanie problemów z bezpieczeństwem\nProsimy nie zgłaszać luk w zabezpieczeniach za pośrednictwem publicznych zgłoszeń na GitHubie Zamiast tego zgłoś je do Microsoft Security Response Center (MSRC) na stronie https://msrc microsoft com/create-report Jeśli wolisz zgłosić problem bez logowania, wyślij wiadomość e-mail na adres secure@microsoft com Jeśli to możliwe, zaszyfruj swoją wiadomość za pomocą naszego klucza PGP; możesz go pobrać ze strony Microsoft Security Response Center PGP Key Powinieneś otrzymać odpowiedź w ciągu 24 godzin Jeśli z jakiegoś powodu jej nie otrzymasz, skontaktuj się ponownie za pomocą e-maila, aby upewnić się, że otrzymaliśmy Twoją pierwotną wiadomość Dodatkowe informacje znajdziesz na stronie microsoft com/msrc Prosimy o dołączenie poniższych informacji (w miarę możliwości), aby pomóc nam lepiej zrozumieć charakter i zakres potencjalnego problemu:\nRodzaj problemu (np przepełnienie bufora, wstrzyknięcie SQL, cross-site scripting itp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4200,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "31c93c0a52e36d41f61daf609af0f555",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "klucza PGP; możesz go pobrać ze strony Microsoft Security Response Center PGP Key Powinieneś otrzymać odpowiedź w ciągu 24 godzin Jeśli z jakiegoś powodu jej nie otrzymasz, skontaktuj się ponownie za pomocą e-maila, aby upewnić się, że otrzymaliśmy Twoją pierwotną wiadomość Dodatkowe informacje znajdziesz na stronie microsoft com/msrc Prosimy o dołączenie poniższych informacji (w miarę możliwości), aby pomóc nam lepiej zrozumieć charakter i zakres potencjalnego problemu: Rodzaj problemu (np przepełnienie bufora, wstrzyknięcie SQL, cross-site scripting itp)\nPełne ścieżki plików źródłowych związanych z wystąpieniem problemu\nLokalizacja dotkniętego kodu źródłowego (tag/gałąź/commit lub bezpośredni URL)\nWszelkie specjalne konfiguracje wymagane do odtworzenia problemu\nInstrukcje krok po kroku, jak odtworzyć problem\nKod proof-of-concept lub exploit (jeśli to możliwe)\nWpływ problemu, w tym sposób, w jaki atakujący mógłby go wykorzystać\nTe informacje pomogą nam szybciej przeanalizować Twoje zgłoszenie Jeśli zgłaszasz problem w ramach programu nagród za błędy, bardziej szczegółowe raporty mogą przyczynić się do wyższej nagrody Odwiedź stronę Microsoft Bug Bounty Program, aby uzyskać więcej informacji o naszych aktywnych programach Preferowane języki\nPreferujemy, aby cała komunikacja odbywała się w języku angielskim Polityka\nMicrosoft stosuje zasadę Koordynowanego ujawniania luk w zabezpieczeniach",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4200,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a8be17713d2a23b4b6d0234478652b98",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "lub exploit (jeśli to możliwe) Wpływ problemu, w tym sposób, w jaki atakujący mógłby go wykorzystać Te informacje pomogą nam szybciej przeanalizować Twoje zgłoszenie Jeśli zgłaszasz problem w ramach programu nagród za błędy, bardziej szczegółowe raporty mogą przyczynić się do wyższej nagrody Odwiedź stronę Microsoft Bug Bounty Program, aby uzyskać więcej informacji o naszych aktywnych programach Preferowane języki Preferujemy, aby cała komunikacja odbywała się w języku angielskim Polityka Microsoft stosuje zasadę Koordynowanego ujawniania luk w zabezpieczeniachZastrzeżenie:\nTen dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator Chociaż dokładamy wszelkich starań, aby tłumaczenie było precyzyjne, prosimy pamiętać, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości Oryginalny dokument w jego rodzimym języku powinien być uznawany za wiarygodne źródło W przypadku informacji o kluczowym znaczeniu zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowieka Nie ponosimy odpowiedzialności za jakiekolwiek nieporozumienia lub błędne interpretacje wynikające z użycia tego tłumaczenia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4200,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "bad026a7074d67b75f811374ea5c4602",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "Wsparcie",
    "content": "Wsparcie\nJak zgłaszać problemy i uzyskiwać pomoc\nTen projekt korzysta z GitHub Issues do śledzenia błędów i próśb o nowe funkcje. Przed zgłoszeniem nowego problemu, sprawdź istniejące zgłoszenia, aby uniknąć duplikatów. W przypadku nowych zgłoszeń, zgłoś swój błąd lub prośbę o funkcję jako nowe zgłoszenie.\nW celu uzyskania pomocy i odpowiedzi na pytania dotyczące korzystania z tego projektu, zapoznaj się z naszymi wytycznymi dotyczącymi współpracy.\nPolityka wsparcia Microsoft\nWsparcie dla tego projektu jest ograniczone do zasobów wymienionych powyżej.\nZastrzeżenie:\nTen dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator. Chociaż staramy się zapewnić dokładność, prosimy mieć na uwadze, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości. Oryginalny dokument w jego rodzimym języku powinien być uznawany za wiarygodne źródło. W przypadku informacji krytycznych zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowieka. Nie ponosimy odpowiedzialności za jakiekolwiek nieporozumienia lub błędne interpretacje wynikające z użycia tego tłumaczenia.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "abab81b0ba917d53dfae19d2101256c1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\_404.md",
    "source_type": "git_repo",
    "title": "Praca w toku",
    "content": "Praca w toku\nPracujemy nad tą stroną. Proszę wrócić później.\nOtwórz zgłoszenie, jeśli masz jakieś pytania.\nPowrót do strony głównej\nZastrzeżenie:\nTen dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator. Chociaż staramy się zapewnić dokładność, prosimy mieć na uwadze, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości. Oryginalny dokument w jego rodzimym języku powinien być uznawany za wiarygodne źródło. W przypadku informacji krytycznych zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowieka. Nie ponosimy odpowiedzialności za jakiekolwiek nieporozumienia lub błędne interpretacje wynikające z użycia tego tłumaczenia.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1103,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 248,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2569c813d932490c43f461a29d732720",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Código de Conduta de Código Aberto da Microsoft",
    "content": "Código de Conduta de Código Aberto da Microsoft\nEste projeto adotou o Código de Conduta de Código Aberto da Microsoft.\nRecursos:\nCódigo de Conduta de Código Aberto da Microsoft\nFAQ do Código de Conduta da Microsoft\nEntre em contacto com opencode@microsoft.com para questões ou preocupações\nAviso Legal:\nEste documento foi traduzido utilizando o serviço de tradução por IA Co-op Translator. Embora nos esforcemos para garantir a precisão, esteja ciente de que traduções automáticas podem conter erros ou imprecisões. O documento original na sua língua nativa deve ser considerado a fonte autoritária. Para informações críticas, recomenda-se uma tradução profissional realizada por humanos. Não nos responsabilizamos por quaisquer mal-entendidos ou interpretações incorretas decorrentes do uso desta tradução.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1418,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 203,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e6cccbe8cde92fbd8370534db783e2a9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "Contribuir",
    "content": "Contribuir\nEste projeto acolhe contribuições e sugestões. A maioria das contribuições exige que concorde com um Acordo de Licença de Contribuidor (CLA), declarando que tem o direito de, e realmente concede-nos, os direitos de usar a sua contribuição. Para mais detalhes, visite https://cla.microsoft.com.\nQuando submeter um pull request, um CLA-bot determinará automaticamente se precisa de fornecer um CLA e marcará o PR de forma apropriada (por exemplo, com uma etiqueta ou comentário). Basta seguir as instruções fornecidas pelo bot. Só precisará de fazer isto uma vez em todos os repositórios que utilizam o nosso CLA. Por favor, tente também explicar-nos por que fez essa alteração para que possamos compreender melhor o seu pedido.\nEste projeto adotou o Código de Conduta de Código Aberto da Microsoft.\nPara mais informações, consulte as Perguntas Frequentes sobre o Código de Conduta\nou contacte opencode@microsoft.com para quaisquer questões ou comentários adicionais.\nAviso Legal:\nEste documento foi traduzido utilizando o serviço de tradução por IA Co-op Translator. Embora nos esforcemos para garantir a precisão, esteja ciente de que traduções automáticas podem conter erros ou imprecisões. O documento original no seu idioma nativo deve ser considerado a fonte autoritativa. Para informações críticas, recomenda-se uma tradução profissional realizada por humanos. Não nos responsabilizamos por quaisquer mal-entendidos ou interpretações incorretas resultantes do uso desta tradução.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2094,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b34851701e3716b76d97ce4fceb9af76",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "Para Educadores\nGostaria de usar este currículo na sua sala de aula Sinta-se à vontade Na verdade, pode utilizá-lo diretamente no GitHub, através do GitHub Classroom Para isso, faça um fork deste repositório Vai precisar de criar um repositório para cada aula, extraindo cada pasta para um repositório separado Desta forma, o GitHub Classroom consegue identificar cada aula individualmente Estas instruções completas dão-lhe uma ideia de como configurar a sua sala de aula Usar no Moodle, Canvas ou Blackboard\nEste currículo funciona bem nestes Sistemas de Gestão de Aprendizagem Utilize o ficheiro de upload do Moodle para obter o conteúdo completo, ou experimente o ficheiro Common Cartridge, que contém parte do conteúdo O Moodle Cloud não suporta exportações completas de Common Cartridge, por isso é preferível usar o ficheiro de download do Moodle, que pode ser carregado no Canvas Por favor, diga-nos como podemos melhorar esta experiência O currículo numa sala de aula do Moodle\nO currículo no Canvas\nUsar o repositório como está\nSe preferir usar este repositório no seu formato atual, sem recorrer ao GitHub Classroom, isso também é possível Terá de comunicar aos seus alunos qual a aula a seguir em conjunto Num formato online (Zoom, Teams ou outro), pode criar salas de grupo para os questionários e orientar os alunos para os preparar para a aprendizagem Depois, convide os alunos a realizar os questionários e a submeter as respostas como 'issues' num momento específico Pode fazer o mesmo com os trabalhos, caso queira que os alunos colaborem de forma aberta Se preferir um formato mais privado, peça aos seus alunos para fazerem fork do currículo, aula por aula, para os seus próprios repositórios privados no GitHub, e dêem-lhe acesso Assim, podem completar os questionários e trabalhos de forma privada e submetê-los através de issues no repositório da sua sala de aula Existem várias formas de fazer isto funcionar num formato de sala de aula online",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3659,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4b6902d40277624f17c5f4ce0fb04dfb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "os trabalhos, caso queira que os alunos colaborem de forma aberta Se preferir um formato mais privado, peça aos seus alunos para fazerem fork do currículo, aula por aula, para os seus próprios repositórios privados no GitHub, e dêem-lhe acesso Assim, podem completar os questionários e trabalhos de forma privada e submetê-los através de issues no repositório da sua sala de aula Existem várias formas de fazer isto funcionar num formato de sala de aula onlinePor favor, diga-nos qual funciona melhor para si Partilhe a sua opinião connosco Queremos que este currículo funcione para si e para os seus alunos Conecte-se connosco no Teacher corner e abra um novo issue para quaisquer pedidos, erros ou feedback Aviso Legal:\nEste documento foi traduzido utilizando o serviço de tradução por IA Co-op Translator Embora nos esforcemos para garantir a precisão, esteja ciente de que traduções automáticas podem conter erros ou imprecisões O documento original no seu idioma nativo deve ser considerado a fonte autoritativa Para informações críticas, recomenda-se uma tradução profissional realizada por humanos Não nos responsabilizamos por quaisquer mal-entendidos ou interpretações incorretas resultantes do uso desta tradução",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3659,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e573f6c84a013c380d6c07674be898cb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "Segurança\nA Microsoft leva a segurança dos seus produtos e serviços de software muito a sério, incluindo todos os repositórios de código fonte geridos através das nossas organizações no GitHub, que incluem Microsoft, Azure, DotNet, AspNet, Xamarin e as nossas organizações no GitHub Se acredita ter encontrado uma vulnerabilidade de segurança em qualquer repositório pertencente à Microsoft que se enquadre na definição de vulnerabilidade de segurança da Microsoft, por favor reporte-a conforme descrito abaixo Reportar Problemas de Segurança\nPor favor, não reporte vulnerabilidades de segurança através de issues públicas no GitHub Em vez disso, reporte-as ao Microsoft Security Response Center (MSRC) em https://msrc microsoft com/create-report Se preferir submeter sem iniciar sessão, envie um email para secure@microsoft com Se possível, encripte a sua mensagem com a nossa chave PGP; pode descarregá-la na página da chave PGP do Microsoft Security Response Center Deverá receber uma resposta dentro de 24 horas Se, por algum motivo, não receber, por favor envie um email de seguimento para garantir que recebemos a sua mensagem original Informações adicionais podem ser encontradas em microsoft com/msrc Por favor, inclua as informações solicitadas abaixo (tanto quanto possível) para nos ajudar a compreender melhor a natureza e o alcance do possível problema:\nTipo de problema (ex : buffer overflow, SQL injection, cross-site scripting, etc )\nCaminhos completos dos ficheiros fonte relacionados com a manifestação do problema\nA localização do código fonte afetado (tag/branch/commit ou URL direto)\nQualquer configuração especial necessária para reproduzir o problema\nInstruções passo a passo para reproduzir o problema\nCódigo de prova de conceito ou de exploração (se possível)\nImpacto do problema, incluindo como um atacante poderia explorar o problema\nEstas informações ajudarão a agilizar a triagem do seu relatório Se estiver a reportar para um programa de recompensas por bugs, relatórios mais completos podem contribuir para uma recompensa maior",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4057,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a479e3a177e151ab43b2711e10997676",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "localização do código fonte afetado (tag/branch/commit ou URL direto) Qualquer configuração especial necessária para reproduzir o problema Instruções passo a passo para reproduzir o problema Código de prova de conceito ou de exploração (se possível) Impacto do problema, incluindo como um atacante poderia explorar o problema Estas informações ajudarão a agilizar a triagem do seu relatório Se estiver a reportar para um programa de recompensas por bugs, relatórios mais completos podem contribuir para uma recompensa maiorPor favor, visite a página do Programa de Recompensas por Bugs da Microsoft para mais detalhes sobre os nossos programas ativos Idiomas Preferidos\nPreferimos que todas as comunicações sejam feitas em inglês Política\nA Microsoft segue o princípio de Divulgação Coordenada de Vulnerabilidades Aviso Legal:\nEste documento foi traduzido utilizando o serviço de tradução por IA Co-op Translator Embora nos esforcemos para garantir a precisão, esteja ciente de que traduções automáticas podem conter erros ou imprecisões O documento original no seu idioma nativo deve ser considerado a fonte autoritativa Para informações críticas, recomenda-se uma tradução profissional realizada por humanos Não nos responsabilizamos por quaisquer mal-entendidos ou interpretações incorretas resultantes do uso desta tradução",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4057,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "924ea74c88331cd3e32e4324f1792c3b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "Suporte",
    "content": "Suporte\nComo reportar problemas e obter ajuda\nEste projeto utiliza o GitHub Issues para acompanhar erros e pedidos de funcionalidades. Antes de criar novos problemas, procure nos problemas existentes para evitar duplicados. Para novos problemas, reporte o seu erro ou pedido de funcionalidade como um novo Issue.\nPara obter ajuda e esclarecer dúvidas sobre como utilizar este projeto, consulte as nossas diretrizes de contribuição.\nPolítica de Suporte da Microsoft\nO suporte para este projeto está limitado aos recursos listados acima.\nAviso Legal:\nEste documento foi traduzido utilizando o serviço de tradução por IA Co-op Translator. Embora nos esforcemos para garantir a precisão, esteja ciente de que traduções automáticas podem conter erros ou imprecisões. O documento original no seu idioma nativo deve ser considerado a fonte autoritária. Para informações críticas, recomenda-se uma tradução profissional realizada por humanos. Não nos responsabilizamos por quaisquer mal-entendidos ou interpretações incorretas resultantes do uso desta tradução.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1388,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "be42ee34ae278968bb3da387ae510a52",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\_404.md",
    "source_type": "git_repo",
    "title": "Trabalho em progresso",
    "content": "Trabalho em progresso\nEstamos a trabalhar nesta página. Por favor, volte mais tarde.\nAbra uma issue se tiver alguma dúvida.\nVoltar à página inicial\nAviso Legal:\nEste documento foi traduzido utilizando o serviço de tradução por IA Co-op Translator. Embora nos esforcemos pela precisão, esteja ciente de que traduções automáticas podem conter erros ou imprecisões. O documento original na sua língua nativa deve ser considerado a fonte autoritária. Para informações críticas, recomenda-se a tradução profissional realizada por humanos. Não nos responsabilizamos por quaisquer mal-entendidos ou interpretações incorretas decorrentes do uso desta tradução.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1049,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "91bd2d7f2b47a18cac6a0a0606c0f05e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "Tworzenie stron internetowych dla początkujących - Kurs\nPoznaj podstawy tworzenia stron internetowych dzięki naszemu 12-tygodniowemu kursowi przygotowanemu przez Microsoft Cloud Advocates Każda z 24 lekcji wprowadza w świat JavaScript, CSS i HTML poprzez praktyczne projekty, takie jak terraria, rozszerzenia przeglądarki czy gry kosmiczne Uczestnicz w quizach, dyskusjach i zadaniach praktycznych Rozwijaj swoje umiejętności i utrwalaj wiedzę dzięki efektywnej metodzie nauki opartej na projektach Rozpocznij swoją przygodę z programowaniem już dziś 🧑‍🎓 Jesteś studentem Odwiedź stronę Student Hub, gdzie znajdziesz materiały dla początkujących, pakiety dla studentów, a nawet sposoby na zdobycie darmowego vouchera na certyfikat To strona, którą warto dodać do zakładek i regularnie sprawdzać, ponieważ co miesiąc zmieniamy zawartość 📣 Ogłoszenie - Nowy kurs dotyczący Generatywnej AI dla JavaScript właśnie został opublikowany\nNie przegap naszego nowego kursu dotyczącego Generatywnej AI Odwiedź https://aka ms/genai-js-course, aby rozpocząć Lekcje obejmujące wszystko od podstaw po RAG Interakcja z postaciami historycznymi za pomocą GenAI i naszej aplikacji towarzyszącej Ciekawa i angażująca narracja, będziesz podróżować w czasie",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "8c09baf2dbddd1103ce431bd4d62fd9c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "a nawet sposoby na zdobycie darmowego vouchera na certyfikat To strona, którą warto dodać do zakładek i regularnie sprawdzać, ponieważ co miesiąc zmieniamy zawartość 📣 Ogłoszenie - Nowy kurs dotyczący Generatywnej AI dla JavaScript właśnie został opublikowany Nie przegap naszego nowego kursu dotyczącego Generatywnej AI Odwiedź https://aka ms/genai-js-course, aby rozpocząć Lekcje obejmujące wszystko od podstaw po RAG Interakcja z postaciami historycznymi za pomocą GenAI i naszej aplikacji towarzyszącej Ciekawa i angażująca narracja, będziesz podróżować w czasieKażda lekcja zawiera zadanie do wykonania, sprawdzanie wiedzy oraz wyzwanie, które pomoże Ci nauczyć się takich tematów jak:\n- Tworzenie i optymalizacja promptów\n- Generowanie aplikacji tekstowych i graficznych\n- Aplikacje wyszukiwawcze\nOdwiedź https://aka ms/genai-js-course, aby rozpocząć 🌱 Pierwsze kroki\nNauczyciele, przygotowaliśmy kilka sugestii dotyczących wykorzystania tego kursu Chętnie poznamy Wasze opinie na naszym forum dyskusyjnym Uczniowie, każdą lekcję rozpocznij od quizu wprowadzającego, a następnie zapoznaj się z materiałem lekcyjnym, wykonaj różne aktywności i sprawdź swoją wiedzę w quizie końcowym Aby wzbogacić swoje doświadczenie edukacyjne, połącz się z innymi uczestnikami kursu, aby wspólnie pracować nad projektami Dyskusje są mile widziane na naszym forum dyskusyjnym, gdzie nasz zespół moderatorów będzie dostępny, aby odpowiedzieć na Twoje pytania",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "40f03c9b1d9454bbea3063266643b6cb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "kroki Nauczyciele, przygotowaliśmy kilka sugestii dotyczących wykorzystania tego kursu Chętnie poznamy Wasze opinie na naszym forum dyskusyjnym Uczniowie, każdą lekcję rozpocznij od quizu wprowadzającego, a następnie zapoznaj się z materiałem lekcyjnym, wykonaj różne aktywności i sprawdź swoją wiedzę w quizie końcowym Aby wzbogacić swoje doświadczenie edukacyjne, połącz się z innymi uczestnikami kursu, aby wspólnie pracować nad projektami Dyskusje są mile widziane na naszym forum dyskusyjnym, gdzie nasz zespół moderatorów będzie dostępny, aby odpowiedzieć na Twoje pytaniaAby poszerzyć swoją wiedzę, gorąco polecamy zapoznanie się z materiałami na Microsoft Learn 📋 Konfiguracja środowiska\nTen kurs ma gotowe środowisko programistyczne Na początek możesz wybrać uruchomienie kursu w Codespace (środowisko w przeglądarce, bez konieczności instalacji), lub lokalnie na swoim komputerze, korzystając z edytora tekstu, takiego jak Visual Studio Code Utwórz swoje repozytorium\nAby łatwo zapisywać swoją pracę, zaleca się utworzenie własnej kopii tego repozytorium Możesz to zrobić, klikając przycisk Use this template na górze strony Spowoduje to utworzenie nowego repozytorium w Twoim koncie GitHub z kopią kursu Postępuj zgodnie z tymi krokami:\n1 Forkuj repozytorium: Kliknij przycisk \"Fork\" w prawym górnym rogu tej strony 2 Sklonuj repozytorium:   git clone https://github com/microsoft/Web-Dev-For-Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "a4090a7c756150bfee287e9599232dba",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "lub lokalnie na swoim komputerze, korzystając z edytora tekstu, takiego jak Visual Studio Code Utwórz swoje repozytorium Aby łatwo zapisywać swoją pracę, zaleca się utworzenie własnej kopii tego repozytorium Możesz to zrobić, klikając przycisk Use this template na górze strony Spowoduje to utworzenie nowego repozytorium w Twoim koncie GitHub z kopią kursu Postępuj zgodnie z tymi krokami: 1 Forkuj repozytorium: Kliknij przycisk \"Fork\" w prawym górnym rogu tej strony 2 Sklonuj repozytorium: git clone https://github com/microsoft/Web-Dev-For-Beginnersgit\nUruchamianie kursu w Codespace\nW swojej kopii tego repozytorium, którą utworzyłeś, kliknij przycisk Code i wybierz Open with Codespaces Spowoduje to utworzenie nowego Codespace, w którym możesz pracować Uruchamianie kursu lokalnie na komputerze\nAby uruchomić ten kurs lokalnie na swoim komputerze, będziesz potrzebować edytora tekstu, przeglądarki i narzędzia wiersza poleceń Nasza pierwsza lekcja, Wprowadzenie do języków programowania i narzędzi, przeprowadzi Cię przez różne opcje dla każdego z tych narzędzi, abyś mógł wybrać to, co najlepiej Ci odpowiada Naszą rekomendacją jest użycie Visual Studio Code jako edytora, który ma również wbudowany Terminal Możesz pobrać Visual Studio Code tutaj Sklonuj swoje repozytorium na komputer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "77675e974002b0ee4a33503f94205b2d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "możesz pracować Uruchamianie kursu lokalnie na komputerze Aby uruchomić ten kurs lokalnie na swoim komputerze, będziesz potrzebować edytora tekstu, przeglądarki i narzędzia wiersza poleceń Nasza pierwsza lekcja, Wprowadzenie do języków programowania i narzędzi, przeprowadzi Cię przez różne opcje dla każdego z tych narzędzi, abyś mógł wybrać to, co najlepiej Ci odpowiada Naszą rekomendacją jest użycie Visual Studio Code jako edytora, który ma również wbudowany Terminal Możesz pobrać Visual Studio Code tutaj Sklonuj swoje repozytorium na komputerMożesz to zrobić, klikając przycisk Code i kopiując URL:\nNastępnie otwórz Terminal w Visual Studio Code i uruchom następujące polecenie, zastępując <your-repository-url> skopiowanym URL:\nbash\ngit clone <your-repository-url>\nOtwórz folder w Visual Studio Code Możesz to zrobić, klikając File > Open Folder i wybierając folder, który właśnie sklonowałeś Rekomendowane rozszerzenia dla Visual Studio Code:\nLive Server - do podglądu stron HTML w Visual Studio Code\nCopilot - aby szybciej pisać kod\n📂 Każda lekcja zawiera:\nopcjonalny szkic\nopcjonalny materiał wideo\nquiz rozgrzewkowy przed lekcją\npisemny materiał lekcyjny\ndla lekcji opartych na projektach, przewodniki krok po kroku, jak zbudować projekt\nsprawdzanie wiedzy\nwyzwanie\ndodatkowe materiały do czytania\nzadanie\nquiz po lekcji\nInformacja o quizach: Wszystkie quizy znajdują się w folderze Quiz-app, łącznie 48 quizów po trzy pytania każdy",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "aad1c638fd68b4f6943ad943ad081455",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "Visual Studio Code: Live Server - do podglądu stron HTML w Visual Studio Code Copilot - aby szybciej pisać kod 📂 Każda lekcja zawiera: opcjonalny szkic opcjonalny materiał wideo quiz rozgrzewkowy przed lekcją pisemny materiał lekcyjny dla lekcji opartych na projektach, przewodniki krok po kroku, jak zbudować projekt sprawdzanie wiedzy wyzwanie dodatkowe materiały do czytania zadanie quiz po lekcji Informacja o quizach: Wszystkie quizy znajdują się w folderze Quiz-app, łącznie 48 quizów po trzy pytania każdySą one podlinkowane w lekcjach, aplikację quizową można uruchomić lokalnie lub wdrożyć na Azure; postępuj zgodnie z instrukcjami w folderze quiz-app Quizy są stopniowo lokalizowane",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "9b8d25f025d04f0e77e3b8e2f1c2b3d9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "opcjonalny szkic opcjonalny materiał wideo quiz rozgrzewkowy przed lekcją pisemny materiał lekcyjny dla lekcji opartych na projektach, przewodniki krok po kroku, jak zbudować projekt sprawdzanie wiedzy wyzwanie dodatkowe materiały do czytania zadanie quiz po lekcji Informacja o quizach: Wszystkie quizy znajdują się w folderze Quiz-app, łącznie 48 quizów po trzy pytania każdySą one podlinkowane w lekcjach, aplikację quizową można uruchomić lokalnie lub wdrożyć na Azure; postępuj zgodnie z instrukcjami w folderze quiz-app Quizy są stopniowo lokalizowane🗃️ Lekcje\n|     |                       Nazwa projektu                       |                            Nauczane zagadnienia                            | Cele nauczania                                                                                                                     |                                                         Powiązana lekcja                                                         |         Autor          |\n| :-: | :---------------------------------------------------------: | :------------------------------------------------------------------------: | ---------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------------------------------------------------------: | :--------------------: |\n| 01  |                     Pierwsze kroki                         |           Wprowadzenie do programowania i narzędzi pracy programisty        | Poznaj podstawy większości języków programowania oraz oprogramowanie, które pomaga profesjonalnym programistom w ich pracy         | Wprowadzenie do języków programowania i narzędzi pracy |         Jasmine         |\n| 02  |                     Pierwsze kroki                         |             Podstawy GitHub, w tym praca zespołowa                         | Jak korzystać z GitHub w swoim projekcie, jak współpracować z innymi nad kodem                                                     |                            Wprowadzenie do GitHub                            |          Floor          |\n| 03  |                     Pierwsze kroki                         |                             Dostępność                                    | Poznaj podstawy dostępności stron internetowych                                                                                   |                       Podstawy dostępności                       |       Christopher       |\n| 04  |                        Podstawy JS                         |                         Typy danych w JavaScript                          | Podstawy typów danych w JavaScript                                                                                                 |                                       Typy danych                                        |         Jasmine         |\n| 05  |                        Podstawy JS                         |                         Funkcje i metody                                  | Dowiedz się, jak używać funkcji i metod do zarządzania logiką aplikacji                                                           |                              Funkcje i metody                               | Jasmine i Christopher |\n| 06  |                        Podstawy JS                         |                        Podejmowanie decyzji w JS                          | Naucz się tworzyć warunki w kodzie za pomocą metod podejmowania decyzji                                                           |                                 Podejmowanie decyzji                                  |         Jasmine         |\n| 07  |                        Podstawy JS                         |                            Tablice i pętle                                | Praca z danymi za pomocą tablic i pętli w JavaScript                                                                               |                                   Tablice i pętle                                    |         Jasmine         |\n| 08  |       Terrarium         |                            HTML w praktyce                                | Tworzenie HTML do stworzenia terrarium online, skupiając się na budowie układu                                                     |                                 Wprowadzenie do HTML                                 |           Jen           |\n| 09  |       Terrarium         |                            CSS w praktyce                                 | Tworzenie CSS do stylizacji terrarium online, skupiając się na podstawach CSS, w tym na responsywności strony                      |                                  Wprowadzenie do CSS                                  |           Jen           |\n| 10  |            Terrarium            |                 Zamknięcia w JavaScript, manipulacja DOM                  | Tworzenie JavaScript, aby terrarium działało jako interfejs przeciągnij i upuść, skupiając się na zamknięciach i manipulacji DOM   |                  Zamknięcia w JavaScript, manipulacja DOM                   |           Jen           |\n| 11  |          Gra Typing          |                          Tworzenie gry Typing                             | Naucz się używać zdarzeń klawiatury do sterowania logiką aplikacji JavaScript                                                      |                                Programowanie oparte na zdarzeniach                                |       Christopher       |\n| 12  | Green Browser Extension |                         Praca z przeglądarkami                         | Dowiedz się, jak działają przeglądarki, poznaj ich historię i naucz się tworzyć pierwsze elementy rozszerzenia przeglądarki         |                               O przeglądarkach                               |           Jen           |\n| 13  | Green Browser Extension | Tworzenie formularza, wywoływanie API i przechowywanie zmiennych lokalnie | Zbuduj elementy JavaScript swojego rozszerzenia przeglądarki, aby wywoływać API, używając zmiennych przechowywanych lokalnie        |                API, formularze i lokalne przechowywanie        |           Jen           |\n| 14  | Green Browser Extension |          Procesy w tle w przeglądarce, wydajność sieci                 | Wykorzystaj procesy w tle przeglądarki do zarządzania ikoną rozszerzenia; dowiedz się o wydajności sieci i optymalizacjach          |             Zadania w tle i wydajność                      |           Jen           |\n| 15  |           Space Game           |             Bardziej zaawansowane tworzenie gier w JavaScript          | Dowiedz się o dziedziczeniu, używając zarówno klas, jak i kompozycji, oraz o wzorcu Pub/Sub, przygotowując się do tworzenia gry     |                      Wprowadzenie do zaawansowanego tworzenia gier                    |          Chris          |\n| 16  |           Space Game           |                           Rysowanie na canvasie                        | Poznaj API Canvas, które służy do rysowania elementów na ekranie                                                                    |                                Rysowanie na canvasie                              |          Chris          |\n| 17  |           Space Game           |                   Przesuwanie elementów po ekranie                     | Dowiedz się, jak elementy mogą się poruszać, używając współrzędnych kartezjańskich i API Canvas                                     |                           Przesuwanie elementów                             |          Chris          |\n| 18  |           Space Game           |                          Wykrywanie kolizji                            | Spraw, aby elementy zderzały się i reagowały na siebie, używając klawiszy, oraz dodaj funkcję cooldown, aby poprawić wydajność gry |                              Wykrywanie kolizji                                |          Chris          |\n| 19  |           Space Game           |                             Liczenie punktów                           | Wykonuj obliczenia matematyczne na podstawie statusu i wyników gry                                                                  |                                    Liczenie punktów                                  |          Chris          |\n| 20  |           Space Game           |                     Zakończenie i restart gry                          | Dowiedz się, jak zakończyć i zrestartować grę, w tym jak wyczyścić zasoby i zresetować wartości zmiennych                          |                                Warunek zakończenia                                   |          Chris          |\n| 21  |         Banking App          |                 Szablony HTML i trasy w aplikacji internetowej          | Dowiedz się, jak stworzyć szkielet architektury wielostronicowej strony internetowej, używając tras i szablonów HTML               |                            Szablony HTML i trasy                                  |          Yohan          |\n| 22  |         Banking App          |                  Tworzenie formularza logowania i rejestracji          | Dowiedz się, jak tworzyć formularze i obsługiwać procedury walidacji                                                                |                                           Formularze                                       |          Yohan          |\n| 23  |         Banking App          |                   Metody pobierania i używania danych                  | Dowiedz się, jak dane przepływają do i z aplikacji, jak je pobierać, przechowywać i usuwać                                         |                                            Dane                                             |          Yohan          |\n| 24  |         Banking App          |                      Koncepcje zarządzania stanem                      | Dowiedz się, jak aplikacja zachowuje stan i jak zarządzać nim programowo                                                            |                                Zarządzanie stanem                               |          Yohan          |\n🏫 Pedagogika\nNasz program nauczania opiera się na dwóch kluczowych zasadach pedagogicznych:\n* nauka oparta na projektach\n* częste quizy\nProgram uczy podstaw JavaScript, HTML i CSS, a także najnowszych narzędzi i technik używanych przez współczesnych programistów internetowych",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 2024,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "14341e20738b09df78ab580ad2bf2eac",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "jak je pobierać, przechowywać i usuwać | Dane | Yohan | | 24 | Banking App | Koncepcje zarządzania stanem | Dowiedz się, jak aplikacja zachowuje stan i jak zarządzać nim programowo | Zarządzanie stanem | Yohan | 🏫 Pedagogika Nasz program nauczania opiera się na dwóch kluczowych zasadach pedagogicznych: * nauka oparta na projektach * częste quizy Program uczy podstaw JavaScript, HTML i CSS, a także najnowszych narzędzi i technik używanych przez współczesnych programistów internetowychStudenci mają okazję zdobyć praktyczne doświadczenie, budując grę do pisania na klawiaturze, wirtualne terrarium, ekologiczne rozszerzenie przeglądarki, grę w stylu Space Invaders oraz aplikację bankową dla firm Po ukończeniu serii studenci zdobędą solidne podstawy w zakresie tworzenia stron internetowych 🎓 Pierwsze lekcje tego programu można znaleźć jako Ścieżkę nauki na platformie Microsoft Learn Dzięki powiązaniu treści z projektami proces nauki staje się bardziej angażujący dla studentów, a przyswajanie koncepcji jest skuteczniejsze Przygotowaliśmy również kilka lekcji wprowadzających do podstaw JavaScript, które są połączone z wideo z serii \"Beginners Series to: JavaScript\", której autorzy przyczynili się do powstania tego programu Dodatkowo quiz o niskiej stawce przed zajęciami ustawia intencję studenta na naukę danego tematu, a drugi quiz po zajęciach wzmacnia przyswajanie wiedzy Program został zaprojektowany tak, aby był elastyczny i przyjemny, i można go realizować w całości lub częściowo",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "190d3820323304149d4c44d0761f1856",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "się bardziej angażujący dla studentów, a przyswajanie koncepcji jest skuteczniejsze Przygotowaliśmy również kilka lekcji wprowadzających do podstaw JavaScript, które są połączone z wideo z serii \"Beginners Series to: JavaScript\", której autorzy przyczynili się do powstania tego programu Dodatkowo quiz o niskiej stawce przed zajęciami ustawia intencję studenta na naukę danego tematu, a drugi quiz po zajęciach wzmacnia przyswajanie wiedzy Program został zaprojektowany tak, aby był elastyczny i przyjemny, i można go realizować w całości lub częściowoProjekty zaczynają się od prostych i stają się coraz bardziej złożone w trakcie 12-tygodniowego cyklu Chociaż celowo unikaliśmy wprowadzania frameworków JavaScript, aby skupić się na podstawowych umiejętnościach potrzebnych programiście internetowemu przed przyjęciem frameworka, dobrym kolejnym krokiem po ukończeniu tego programu byłoby poznanie Node js za pomocą innej serii wideo: \"Beginner Series to: Node js\" Odwiedź nasz Kodeks postępowania i wytyczne dotyczące Współpracy Czekamy na Twoje konstruktywne uwagi 🧭 Dostęp offline\nMożesz uruchomić tę dokumentację offline, korzystając z Docsify Sforkuj to repozytorium, zainstaluj Docsify na swoim komputerze, a następnie w katalogu głównym tego repozytorium wpisz docsify serve Strona internetowa zostanie uruchomiona na porcie 3000 na Twoim localhost: localhost:3000 📘 PDF\nPDF ze wszystkimi lekcjami można znaleźć tutaj 🎒 Inne kursy\nNasz zespół tworzy również inne kursy Sprawdź:\nGenerative AI for Beginners\nGenerative AI for Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "6b0058f6cabc4c50e63506d236dfe9d5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pl\\README.md",
    "source_type": "git_repo",
    "title": "Tworzenie stron internetowych dla początkujących - Kurs",
    "content": "i wytyczne dotyczące Współpracy Czekamy na Twoje konstruktywne uwagi 🧭 Dostęp offline Możesz uruchomić tę dokumentację offline, korzystając z Docsify Sforkuj to repozytorium, zainstaluj Docsify na swoim komputerze, a następnie w katalogu głównym tego repozytorium wpisz docsify serve Strona internetowa zostanie uruchomiona na porcie 3000 na Twoim localhost: localhost:3000 📘 PDF PDF ze wszystkimi lekcjami można znaleźć tutaj 🎒 Inne kursy Nasz zespół tworzy również inne kursy Sprawdź: Generative AI for Beginners Generative AI for BeginnersNET\nGenerative AI with JavaScript\nGenerative AI with Java\nAI for Beginners\nData Science for Beginners\nML for Beginners\nCybersecurity for Beginners\nWeb Dev for Beginners\nIoT for Beginners\nXR Development for Beginners\nMastering GitHub Copilot for Agentic use\nMastering GitHub Copilot for C#/ NET Developers\nChoose Your Own Copilot Adventure\nLicencja\nTo repozytorium jest licencjonowane na licencji MIT Zobacz plik LICENSE, aby uzyskać więcej informacji Zastrzeżenie:\nTen dokument został przetłumaczony za pomocą usługi tłumaczenia AI Co-op Translator Chociaż staramy się zapewnić dokładność, prosimy mieć na uwadze, że automatyczne tłumaczenia mogą zawierać błędy lub nieścisłości Oryginalny dokument w jego rodzimym języku powinien być uznawany za wiarygodne źródło W przypadku informacji krytycznych zaleca się skorzystanie z profesjonalnego tłumaczenia przez człowieka Nie ponosimy odpowiedzialności za jakiekolwiek nieporozumienia lub błędne interpretacje wynikające z użycia tego tłumaczenia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25361,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pl\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "b702bb7a7c98ddbad600e85f6132698f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft 開源行為準則",
    "content": "Microsoft 開源行為準則\n此專案已採用 Microsoft 開源行為準則。\n資源：\nMicrosoft 開源行為準則\nMicrosoft 行為準則常見問題\n如有疑問或擔憂，請聯繫 opencode@microsoft.com\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原始語言的文件作為權威來源。對於關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或誤讀概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1154,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "55aae5d0a4501ce8f39ecb5445307ba9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "貢獻指南",
    "content": "貢獻指南\n本專案歡迎各種貢獻與建議。大多數的貢獻需要您同意一份貢獻者授權協議 (CLA)，以聲明您擁有授權權利並實際授予我們使用您貢獻的權利。欲了解更多詳情，請造訪 https://cla microsoft com。\n當您提交拉取請求 (pull request) 時，CLA 機器人會自動判斷您是否需要提供 CLA，並適當地標記 PR（例如，標籤、評論）。只需按照機器人提供的指示操作即可。您只需在所有使用我們 CLA 的存儲庫中完成一次此步驟。此外，請嘗試告訴我們您進行更改的原因，以便我們更好地理解您的請求。\n本專案採用了 Microsoft 開源行為準則。\n欲了解更多資訊，請參閱 行為準則常見問題，或透過 opencode@microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1745,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "94320fa774f8ddf713747ced2167ad6e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "貢獻指南",
    "content": "貢獻指南\n本專案歡迎各種貢獻與建議。大多數的貢獻需要您同意一份貢獻者授權協議 (CLA)，以聲明您擁有授權權利並實際授予我們使用您貢獻的權利。欲了解更多詳情，請造訪 https://cla microsoft com。\n當您提交拉取請求 (pull request) 時，CLA 機器人會自動判斷您是否需要提供 CLA，並適當地標記 PR（例如，標籤、評論）。只需按照機器人提供的指示操作即可。您只需在所有使用我們 CLA 的存儲庫中完成一次此步驟。此外，請嘗試告訴我們您進行更改的原因，以便我們更好地理解您的請求。\n本專案採用了 Microsoft 開源行為準則。\n欲了解更多資訊，請參閱 行為準則常見問題，或透過 opencode@microsoftcom 聯絡我們提出其他問題或意見。\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原始語言的文件作為權威來源。對於關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或誤讀概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1745,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 542,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b0871790871648887657536904dbb538",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "給教育工作者\n您想在課堂上使用這份課程嗎？請隨意使用！\n事實上，您可以直接在 GitHub 上使用它，透過 GitHub Classroom 來實現。\n要做到這一點，請先 fork 這個倉庫。您需要為每一課創建一個倉庫，因此需要將每個文件夾提取到一個單獨的倉庫中。這樣，GitHub Classroom 就可以分別處理每一課。\n這些完整的指導說明將幫助您了解如何設置您的課堂。\n在 Moodle、Canvas 或 Blackboard 中使用\n這份課程在這些學習管理系統中運行良好！您可以使用 Moodle 上傳文件 獲取完整內容，或者試試 Common Cartridge 文件，其中包含部分內容。Moodle Cloud 不支持完整的 Common Cartridge 匯出，因此建議使用 Moodle 下載文件，該文件可以上傳到 Canvas 中。請告訴我們如何改進這個體驗。\nMoodle 課堂中的課程內容\nCanvas 中的課程內容\n按原樣使用這個倉庫\n如果您希望按目前的形式使用這個倉庫，而不使用 GitHub Classroom，也可以這樣做。您需要與學生溝通，一起完成哪一課的學習。\n在線上教學形式（如 Zoom、Teams 或其他）中，您可以為測驗設置分組討論室，並指導學生為學習做好準備。然後邀請學生參加測驗，並在特定時間將答案作為 \"issues\" 提交。對於作業，您也可以採用相同的方式，讓學生在公開的環境中協作完成。\n如果您更喜歡私密的形式，可以要求學生逐課 fork 這份課程到他們自己的 GitHub 私人倉庫，並授予您訪問權限。然後，他們可以私下完成測驗和作業，並通過 classroom repo 的 issues 提交給您。\n在在線課堂中，有很多方法可以讓這份課程發揮作用。請告訴我們哪種方式最適合您！\n請分享您的想法！\n我們希望這份課程能夠滿足您和學生的需求。請在 Teacher corner 與我們聯繫，並開啟一個 新 issue，提出任何需求、問題或反饋意見。\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。儘管我們努力確保翻譯的準確性，但請注意，自動翻譯可能包含錯誤或不準確之處。原始文件的母語版本應被視為權威來源。對於重要資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋不承擔責任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3223,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 1011,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f4b2f1f396cde440908f4c7cd574da6b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "安全性\nMicrosoft 非常重視我們軟體產品和服務的安全性，包括透過我們的 GitHub 組織管理的所有原始碼庫，這些組織包括 Microsoft、Azure、DotNet、AspNet、Xamarin 以及 我們的 GitHub 組織。\n如果您認為在任何 Microsoft 擁有的原始碼庫中發現了符合 Microsoft 對安全性漏洞的定義 的安全性漏洞，請按照以下描述向我們報告。\n回報安全性問題\n請勿透過公開的 GitHub 問題回報安全性漏洞。\n相反，請透過 Microsoft Security Response Center (MSRC) 回報，網址為 https://msrc microsoft com/create-report。\n如果您希望在不登入的情況下提交，請發送電子郵件至 secure@microsoft com。如果可能，請使用我們的 PGP 金鑰加密您的訊息；您可以從 Microsoft Security Response Center PGP Key 頁面 下載。\n您應該在 24 小時內收到回覆。如果因某些原因未收到回覆，請透過電子郵件跟進以確保我們收到您的原始訊息。更多資訊請參閱 microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3390,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "269671c4ba03902875ae4a88bd85bbd0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "安全性\nMicrosoft 非常重視我們軟體產品和服務的安全性，包括透過我們的 GitHub 組織管理的所有原始碼庫，這些組織包括 Microsoft、Azure、DotNet、AspNet、Xamarin 以及 我們的 GitHub 組織。\n如果您認為在任何 Microsoft 擁有的原始碼庫中發現了符合 Microsoft 對安全性漏洞的定義 的安全性漏洞，請按照以下描述向我們報告。\n回報安全性問題\n請勿透過公開的 GitHub 問題回報安全性漏洞。\n相反，請透過 Microsoft Security Response Center (MSRC) 回報，網址為 https://msrc microsoft com/create-report。\n如果您希望在不登入的情況下提交，請發送電子郵件至 secure@microsoft com。如果可能，請使用我們的 PGP 金鑰加密您的訊息；您可以從 Microsoft Security Response Center PGP Key 頁面 下載。\n您應該在 24 小時內收到回覆。如果因某些原因未收到回覆，請透過電子郵件跟進以確保我們收到您的原始訊息。更多資訊請參閱 microsoftcom/msrc。\n請提供以下所需資訊（盡可能完整），以幫助我們更好地了解問題的性質和範圍：\n問題類型（例如，緩衝區溢位、SQL 注入、跨站腳本攻擊等）\n與問題表現相關的原始檔案的完整路徑\n受影響的原始碼位置（標籤/分支/提交或直接 URL）\n重現問題所需的任何特殊配置\n重現問題的逐步指導\n概念驗證或漏洞利用程式碼（如果可能）\n問題的影響，包括攻擊者可能如何利用該問題\n這些資訊將幫助我們更快速地分類您的報告。\n如果您是為了漏洞賞金而回報，提供更完整的報告可能有助於獲得更高的賞金獎勵。請造訪我們的 Microsoft Bug Bounty Program 頁面，了解更多有關我們現行計劃的詳細資訊。\n偏好語言\n我們偏好所有的溝通使用英文。\n政策\nMicrosoft 遵循 協調式漏洞披露 的原則。\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原文文件作為權威來源。對於關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3390,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 970,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3d38b983a118e6572107a9dbe912ef90",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "支援",
    "content": "支援\n如何提交問題並獲得協助\n此專案使用 GitHub Issues 來追蹤錯誤和功能需求。在提交新問題之前，請先搜尋現有的問題以避免重複。若有新問題，請將您的錯誤或功能需求提交為一個新的 Issue。\n如需使用此專案的協助和問題解答，請參考我們的貢獻指南。\nMicrosoft 支援政策\n此專案的支援僅限於上述列出的資源。\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。雖然我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。原始文件的母語版本應被視為權威來源。對於關鍵資訊，建議使用專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋不承擔責任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1109,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "06019b9c0d9e3cd1eeafec6dcf3a64c2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\README.md",
    "source_type": "git_repo",
    "title": "Desenvolvimento Web para Iniciantes - Um Currículo",
    "content": "Desenvolvimento Web para Iniciantes - Um Currículo\nAprenda os fundamentos do desenvolvimento web com o nosso curso abrangente de 12 semanas oferecido pelos Microsoft Cloud Advocates Cada uma das 24 lições explora JavaScript, CSS e HTML através de projetos práticos como terrários, extensões de navegador e jogos espaciais Participe de quizzes, discussões e tarefas práticas Melhore suas habilidades e otimize a retenção de conhecimento com nossa metodologia eficaz baseada em projetos Comece sua jornada de programação hoje 🧑‍🎓 És estudante Visita a página Student Hub, onde encontrarás recursos para iniciantes, pacotes para estudantes e até formas de obter um voucher gratuito para certificação Esta é a página que deves marcar nos favoritos e verificar regularmente, pois o conteúdo é atualizado mensalmente 📣 Anúncio - Novo Currículo sobre IA Generativa para JavaScript foi lançado\nNão percas o nosso novo currículo sobre IA Generativa Visita https://aka ms/genai-js-course para começar Lições que abrangem desde os fundamentos até RAG Interage com personagens históricos usando GenAI e a nossa aplicação complementar Narrativa divertida e envolvente, vais viajar no tempo Cada lição inclui uma tarefa para completar, uma verificação de conhecimento e um desafio para te guiar no aprendizado de tópicos como:\n- Criação de prompts e engenharia de prompts\n- Geração de aplicações de texto e imagem\n- Aplicações de pesquisa\nVisita https://aka ms/genai-js-course para começar 🌱 Começar\nProfessores, incluímos algumas sugestões sobre como usar este currículo Adoraríamos receber o vosso feedback no nosso fórum de discussão Estudantes, para cada lição, começa com um quiz pré-aula e segue com a leitura do material da aula, completando as várias atividades e verificando a tua compreensão com o quiz pós-aula",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25719,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "75193226930d49a52f0bcc2875acef8b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\README.md",
    "source_type": "git_repo",
    "title": "Desenvolvimento Web para Iniciantes - Um Currículo",
    "content": "Criação de prompts e engenharia de prompts - Geração de aplicações de texto e imagem - Aplicações de pesquisa Visita https://aka ms/genai-js-course para começar 🌱 Começar Professores, incluímos algumas sugestões sobre como usar este currículo Adoraríamos receber o vosso feedback no nosso fórum de discussão Estudantes, para cada lição, começa com um quiz pré-aula e segue com a leitura do material da aula, completando as várias atividades e verificando a tua compreensão com o quiz pós-aulaPara melhorar a tua experiência de aprendizagem, conecta-te com colegas para trabalharem juntos nos projetos As discussões são incentivadas no nosso fórum de discussão, onde a nossa equipa de moderadores estará disponível para responder às tuas perguntas Para aprofundar a tua educação, recomendamos explorar Microsoft Learn para materiais de estudo adicionais 📋 Configurar o teu ambiente\nEste currículo tem um ambiente de desenvolvimento pronto para usar Ao começar, podes optar por executar o currículo num Codespace (um ambiente baseado no navegador, sem necessidade de instalações), ou localmente no teu computador usando um editor de texto como Visual Studio Code Criar o teu repositório\nPara guardares facilmente o teu trabalho, recomendamos que cries a tua própria cópia deste repositório Podes fazer isso clicando no botão Use this template no topo da página Isto criará um novo repositório na tua conta GitHub com uma cópia do currículo Segue estes passos:\n1 Faz um Fork do Repositório: Clica no botão \"Fork\" no canto superior direito desta página 2 Clona o Repositório:   git clone https://github com/microsoft/Web-Dev-For-Beginners git\nExecutar o currículo num Codespace\nNa tua cópia deste repositório que criaste, clica no botão Code e seleciona Open with Codespaces Isto criará um novo Codespace para trabalhares",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25719,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "5edc9a3ad43035c9eec83660f0190126",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\README.md",
    "source_type": "git_repo",
    "title": "Desenvolvimento Web para Iniciantes - Um Currículo",
    "content": "this template no topo da página Isto criará um novo repositório na tua conta GitHub com uma cópia do currículo Segue estes passos: 1 Faz um Fork do Repositório: Clica no botão \"Fork\" no canto superior direito desta página 2 Clona o Repositório: git clone https://github com/microsoft/Web-Dev-For-Beginners git Executar o currículo num Codespace Na tua cópia deste repositório que criaste, clica no botão Code e seleciona Open with Codespaces Isto criará um novo Codespace para trabalharesExecutar o currículo localmente no teu computador\nPara executar este currículo localmente no teu computador, vais precisar de um editor de texto, um navegador e uma ferramenta de linha de comando A nossa primeira lição, Introdução às Linguagens de Programação e Ferramentas de Trabalho, vai guiar-te através de várias opções para cada uma destas ferramentas, para que possas escolher o que funciona melhor para ti A nossa recomendação é usar o Visual Studio Code como editor, que também tem um Terminal integrado Podes descarregar o Visual Studio Code aqui Clona o teu repositório para o teu computador Podes fazer isso clicando no botão Code e copiando o URL:\nDepois, abre o Terminal dentro do Visual Studio Code e executa o seguinte comando, substituindo <your-repository-url> pelo URL que acabaste de copiar:\nbash\ngit clone <your-repository-url>\nAbre a pasta no Visual Studio Code Podes fazer isso clicando em File > Open Folder e selecionando a pasta que acabaste de clonar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25719,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "02896323807fc0500d2e5c10b67960ff",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\README.md",
    "source_type": "git_repo",
    "title": "Desenvolvimento Web para Iniciantes - Um Currículo",
    "content": "Podes descarregar o Visual Studio Code aqui Clona o teu repositório para o teu computador Podes fazer isso clicando no botão Code e copiando o URL: Depois, abre o Terminal dentro do Visual Studio Code e executa o seguinte comando, substituindo <your-repository-url> pelo URL que acabaste de copiar: bash git clone <your-repository-url> Abre a pasta no Visual Studio Code Podes fazer isso clicando em File > Open Folder e selecionando a pasta que acabaste de clonarExtensões recomendadas para Visual Studio Code:\nLive Server - para pré-visualizar páginas HTML dentro do Visual Studio Code\nCopilot - para te ajudar a escrever código mais rapidamente\n📂 Cada lição inclui:\nsketchnote opcional\nvídeo suplementar opcional\nquiz de aquecimento pré-aula\nlição escrita\npara lições baseadas em projetos, guias passo a passo sobre como construir o projeto\nverificações de conhecimento\num desafio\nleitura suplementar\ntarefa\nquiz pós-aula\nNota sobre quizzes: Todos os quizzes estão contidos na pasta Quiz-app, 48 quizzes no total, cada um com três perguntas Estão ligados dentro das lições e a aplicação de quizzes pode ser executada localmente ou implantada no Azure; segue as instruções na pasta quiz-app Estão a ser gradualmente localizados",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25719,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a79f34a385b7f86d7564b98c3aa4c02f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\README.md",
    "source_type": "git_repo",
    "title": "Desenvolvimento Web para Iniciantes - Um Currículo",
    "content": "pré-aula lição escrita para lições baseadas em projetos, guias passo a passo sobre como construir o projeto verificações de conhecimento um desafio leitura suplementar tarefa quiz pós-aula Nota sobre quizzes: Todos os quizzes estão contidos na pasta Quiz-app, 48 quizzes no total, cada um com três perguntas Estão ligados dentro das lições e a aplicação de quizzes pode ser executada localmente ou implantada no Azure; segue as instruções na pasta quiz-app Estão a ser gradualmente localizados🗃️ Lições\n|     |                       Nome do Projeto                       |                            Conceitos Ensinados                             | Objetivos de Aprendizagem                                                                                                           |                                                         Lição Ligada                                                          |         Autor          |\n| :-: | :---------------------------------------------------------: | :------------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: |\n| 01  |                     Primeiros Passos                       |           Introdução à Programação e Ferramentas de Trabalho              | Aprende os fundamentos por trás da maioria das linguagens de programação e sobre software que ajuda os programadores profissionais | Introdução às Linguagens de Programação e Ferramentas de Trabalho |         Jasmine         |\n| 02  |                     Primeiros Passos                       |             Noções Básicas de GitHub, incluindo trabalho em equipa         | Como usar o GitHub no teu projeto e colaborar com outros numa base de código                                                       |                            Introdução ao GitHub                             |          Floor          |\n| 03  |                     Primeiros Passos                       |                             Acessibilidade                                | Aprende os fundamentos da acessibilidade na web                                                                                     |                       Fundamentos de Acessibilidade                       |       Christopher       |\n| 04  |                        Noções de JS                        |                         Tipos de Dados em JavaScript                      | Os fundamentos dos tipos de dados em JavaScript                                                                                     |                                       Tipos de Dados                                        |         Jasmine         |\n| 05  |                        Noções de JS                        |                         Funções e Métodos                                 | Aprende sobre funções e métodos para gerir o fluxo lógico de uma aplicação                                                          |                              Funções e Métodos                               | Jasmine e Christopher |\n| 06  |                        Noções de JS                        |                        Tomar Decisões com JS                              | Aprende como criar condições no teu código usando métodos de tomada de decisão                                                     |                                 Tomar Decisões                                  |         Jasmine         |\n| 07  |                        Noções de JS                        |                            Arrays e Loops                                 | Trabalha com dados usando arrays e loops em JavaScript                                                                              |                                   Arrays e Loops                                    |         Jasmine         |\n| 08  |       Terrário          |                            HTML na Prática                                | Constrói o HTML para criar um terrário online, focando na construção de um layout                                                   |                                 Introdução ao HTML                                 |           Jen           |\n| 09  |       Terrário          |                            CSS na Prática                                 | Constrói o CSS para estilizar o terrário online, focando nos fundamentos do CSS, incluindo tornar a página responsiva               |                                  Introdução ao CSS                                  |           Jen           |\n| 10  |            Terrário            |                 Closures em JavaScript, manipulação do DOM                | Constrói o JavaScript para fazer o terrário funcionar como uma interface de arrastar e soltar, focando em closures e manipulação do DOM |                  Closures em JavaScript, manipulação do DOM                   |           Jen           |\n| 11  |          Jogo de Digitação          |                          Constrói um Jogo de Digitação                   | Aprende como usar eventos de teclado para conduzir a lógica da tua aplicação JavaScript                                             |                                Programação Orientada a Eventos                                |       Christopher       |\n| 12  | Green Browser Extension |                         Trabalhar com Navegadores                          | Aprenda como os navegadores funcionam, sua história e como estruturar os primeiros elementos de uma extensão de navegador           |                               Sobre Navegadores                                |           Jen           |\n| 13  | Green Browser Extension | Criar um formulário, chamar uma API e armazenar variáveis no armazenamento local | Construa os elementos JavaScript da sua extensão de navegador para chamar uma API usando variáveis armazenadas no armazenamento local |                APIs, Formulários e Armazenamento Local                 |           Jen           |\n| 14  | Green Browser Extension |          Processos em segundo plano no navegador, desempenho web          | Use os processos em segundo plano do navegador para gerenciar o ícone da extensão; aprenda sobre desempenho web e algumas otimizações |             Tarefas em Segundo Plano e Desempenho              |           Jen           |\n| 15  |           Space Game           |             Desenvolvimento de Jogos Mais Avançado com JavaScript             | Aprenda sobre Herança usando Classes e Composição e o padrão Pub/Sub, preparando-se para criar um jogo                              |                      Introdução ao Desenvolvimento Avançado de Jogos                       |          Chris          |\n| 16  |           Space Game           |                           Desenhar no Canvas                            | Aprenda sobre a API Canvas, usada para desenhar elementos na tela                                                                      |                                Desenhar no Canvas                                |          Chris          |\n| 17  |           Space Game           |                   Mover elementos pela tela                    | Descubra como os elementos podem ganhar movimento usando coordenadas cartesianas e a API Canvas                                       |                           Mover Elementos                           |          Chris          |\n| 18  |           Space Game           |                          Detecção de colisão                           | Faça os elementos colidirem e reagirem uns aos outros usando teclas pressionadas e forneça uma função de cooldown para garantir o desempenho do jogo |                              Detecção de Colisão                              |          Chris          |\n| 19  |           Space Game           |                             Contabilizar pontos                              | Realize cálculos matemáticos com base no status e desempenho do jogo                                                                  |                                    Contabilizar Pontos                                    |          Chris          |\n| 20  |           Space Game           |                     Finalizar e reiniciar o jogo                     | Aprenda sobre como finalizar e reiniciar o jogo, incluindo limpar recursos e redefinir valores de variáveis                          |                                Condição de Finalização                                 |          Chris          |\n| 21  |         Banking App          |                 Templates HTML e Rotas em uma Aplicação Web                 | Aprenda como criar a estrutura de uma arquitetura de site com várias páginas usando rotas e templates HTML                           |                            Templates HTML e Rotas                             |          Yohan          |\n| 22  |         Banking App          |                  Criar um Formulário de Login e Registo                   | Aprenda sobre como criar formulários e lidar com rotinas de validação                                                                  |                                           Formulários                                           |          Yohan          |\n| 23  |         Banking App          |                   Métodos de Obtenção e Utilização de Dados                   | Como os dados fluem para dentro e fora da sua aplicação, como obtê-los, armazená-los e descartá-los                                   |                                            Dados                                            |          Yohan          |\n| 24  |         Banking App          |                      Conceitos de Gestão de Estado                      | Aprenda como a sua aplicação mantém o estado e como gerenciá-lo programaticamente                                                     |                                Gestão de Estado                                |          Yohan          |\n🏫 Pedagogia\nO nosso currículo foi desenvolvido com dois princípios pedagógicos fundamentais:\n* aprendizagem baseada em projetos\n* questionários frequentes\nO programa ensina os fundamentos de JavaScript, HTML e CSS, bem como as ferramentas e técnicas mais recentes utilizadas pelos desenvolvedores web de hoje",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25719,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1744,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "96407f9b976fab45c53460b3a7c0adfb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\README.md",
    "source_type": "git_repo",
    "title": "Desenvolvimento Web para Iniciantes - Um Currículo",
    "content": "| | 24 | Banking App | Conceitos de Gestão de Estado | Aprenda como a sua aplicação mantém o estado e como gerenciá-lo programaticamente | Gestão de Estado | Yohan | 🏫 Pedagogia O nosso currículo foi desenvolvido com dois princípios pedagógicos fundamentais: * aprendizagem baseada em projetos * questionários frequentes O programa ensina os fundamentos de JavaScript, HTML e CSS, bem como as ferramentas e técnicas mais recentes utilizadas pelos desenvolvedores web de hojeOs alunos terão a oportunidade de adquirir experiência prática ao criar um jogo de digitação, um terrário virtual, uma extensão de navegador ecológica, um jogo estilo \"space invader\" e uma aplicação bancária para empresas Ao final da série, os alunos terão adquirido uma compreensão sólida do desenvolvimento web 🎓 Pode realizar as primeiras lições deste currículo como um Learn Path no Microsoft Learn Ao garantir que o conteúdo esteja alinhado com os projetos, o processo torna-se mais envolvente para os alunos e a retenção dos conceitos será aumentada Também escrevemos várias lições introdutórias sobre os fundamentos de JavaScript para apresentar conceitos, acompanhadas por um vídeo da coleção \"Beginners Series to: JavaScript\", cujos autores contribuíram para este currículo Além disso, um questionário de baixo impacto antes da aula define a intenção do aluno em aprender um tópico, enquanto um segundo questionário após a aula garante maior retenção Este currículo foi projetado para ser flexível e divertido e pode ser realizado na íntegra ou em partes Os projetos começam pequenos e tornam-se cada vez mais complexos ao final do ciclo de 12 semanas Embora tenhamos evitado intencionalmente introduzir frameworks de JavaScript para nos concentrarmos nas habilidades básicas necessárias como desenvolvedor web antes de adotar um framework, um bom próximo passo após completar este currículo seria aprender sobre Node js através de outra coleção de vídeos: \"Beginner Series to: Node js\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25719,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "5b2e91bd04cdc20cc4372c7b27f4a012",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\pt\\README.md",
    "source_type": "git_repo",
    "title": "Desenvolvimento Web para Iniciantes - Um Currículo",
    "content": "flexível e divertido e pode ser realizado na íntegra ou em partes Os projetos começam pequenos e tornam-se cada vez mais complexos ao final do ciclo de 12 semanas Embora tenhamos evitado intencionalmente introduzir frameworks de JavaScript para nos concentrarmos nas habilidades básicas necessárias como desenvolvedor web antes de adotar um framework, um bom próximo passo após completar este currículo seria aprender sobre Node js através de outra coleção de vídeos: \"Beginner Series to: Node js\"Visite as nossas diretrizes de Código de Conduta e Contribuição Agradecemos o seu feedback construtivo 🧭 Acesso offline\nPode executar esta documentação offline utilizando o Docsify Faça um fork deste repositório, instale o Docsify na sua máquina local e, na pasta raiz deste repositório, digite docsify serve O site será servido na porta 3000 no seu localhost: localhost:3000 📘 PDF\nUm PDF de todas as lições pode ser encontrado aqui 🎒 Outros Cursos\nA nossa equipa produz outros cursos Confira:\nGenerative AI for Beginners\nGenerative AI for Beginners NET\nGenerative AI with JavaScript\nGenerative AI with Java\nAI for Beginners\nData Science for Beginners\nML for Beginners\nCybersecurity for Beginners\nWeb Dev for Beginners\nIoT for Beginners\nXR Development for Beginners\nMastering GitHub Copilot for Agentic use\nMastering GitHub Copilot for C#/ NET Developers\nChoose Your Own Copilot Adventure\nLicença\nEste repositório está licenciado sob a licença MIT Consulte o arquivo LICENSE para mais informações Aviso Legal:\nEste documento foi traduzido utilizando o serviço de tradução por IA Co-op Translator Embora nos esforcemos para garantir a precisão, esteja ciente de que traduções automáticas podem conter erros ou imprecisões O documento original no seu idioma nativo deve ser considerado a fonte autoritativa Para informações críticas, recomenda-se uma tradução profissional realizada por humanos Não nos responsabilizamos por quaisquer mal-entendidos ou interpretações incorretas resultantes do uso desta tradução",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 25719,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\pt\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "1c57257e7be28391ec855ff81641b664",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\_404.md",
    "source_type": "git_repo",
    "title": "工作進行中",
    "content": "工作進行中\n我們正在處理此頁面。請稍後再回來查看。\n如果您有任何問題，請開一個 issue。\n返回首頁\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。應以原始語言的文件作為權威來源。對於關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或誤讀概不負責。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 871,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "03e63ff9dcddc709b4b9e1b24e8eb0ac",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\CONTRIBUTING.md",
    "source_type": "git_repo",
    "title": "贡献",
    "content": "贡献\n本项目欢迎您的贡献和建议。大多数贡献需要您同意一份贡献者许可协议 (CLA)，声明您有权利并确实授予我们使用您贡献的权利。更多详情，请访问 https://cla.microsoft.com。\n当您提交一个 pull request 时，CLA-bot 会自动判断您是否需要提供 CLA，并相应地标注 PR（例如，添加标签、评论）。只需按照机器人提供的指示操作即可。您只需在所有使用我们 CLA 的代码库中完成一次此操作。请尽量告诉我们您进行更改的原因，以便我们更好地理解您的请求。\n本项目采用了 Microsoft 开源行为准则。\n有关更多信息，请参阅 行为准则常见问题，或通过 opencode@microsoft.com 联系我们提出其他问题或意见。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1700,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\CONTRIBUTING.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "758d859d1fd3ce3820df47e537e87e3d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\CODE_OF_CONDUCT.md",
    "source_type": "git_repo",
    "title": "Microsoft 开源行为准则",
    "content": "Microsoft 开源行为准则\n本项目已采用 Microsoft 开源行为准则。\n资源：\nMicrosoft 开源行为准则\nMicrosoft 行为准则常见问题\n如有疑问或担忧，请联系 opencode@microsoft.com\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1165,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\CODE_OF_CONDUCT.md",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c30df0b7c604513746fcec12f38b5e06",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\for-teachers.md",
    "source_type": "git_repo",
    "title": "for-teachers",
    "content": "给教育工作者\n想在课堂上使用这套课程吗？请随意使用！\n实际上，您可以通过 GitHub Classroom 在 GitHub 中直接使用它。\n为此，请先 fork 此仓库。您需要为每节课创建一个单独的仓库，因此需要将每个文件夹提取到一个独立的仓库中。这样，GitHub Classroom 就可以单独识别每节课了。\n这些完整的说明可以帮助您了解如何设置您的课堂。\n在 Moodle、Canvas 或 Blackboard 中使用\n这套课程在这些学习管理系统中也非常适用！您可以使用 Moodle 上传文件 获取完整内容，或者尝试 Common Cartridge 文件，其中包含部分内容。Moodle Cloud 不支持完整的 Common Cartridge 导出，因此建议使用 Moodle 下载文件，该文件可以上传到 Canvas 中。请告诉我们如何改进您的使用体验。\nMoodle 教室中的课程内容\nCanvas 中的课程内容\n按原样使用此仓库\n如果您希望按当前形式使用此仓库，而不使用 GitHub Classroom，这也是可以的。您需要与学生沟通，一起学习哪一节课程。\n在在线教学环境中（如 Zoom、Teams 或其他平台），您可以为测验创建分组讨论室，并指导学生为学习做好准备。然后邀请学生参加测验，并在特定时间将答案作为“issue”提交。对于作业，如果您希望学生公开协作，也可以采用相同的方式。\n如果您更喜欢更私密的形式，可以让学生逐节 fork 课程到他们自己的 GitHub 私有仓库中，并授予您访问权限。然后，他们可以私下完成测验和作业，并通过您课堂仓库中的 issue 提交给您。\n在在线课堂中有许多方法可以让这套课程发挥作用。请告诉我们哪种方式最适合您！\n请分享您的想法！\n我们希望这套课程能够满足您和学生的需求。请通过 教师角 与我们联系，并为任何需求、问题或反馈打开一个 新 issue。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3159,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\for-teachers.md",
      "source_type": "git_repo"
    },
    "token_count": 775,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "be09e30ec683d694ac7761b0e60e144c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "安全性\n微软非常重视我们软件产品和服务的安全性，包括通过我们的 GitHub 组织管理的所有源代码库，这些组织包括 Microsoft、Azure、DotNet、AspNet、Xamarin 和 我们的 GitHub 组织。\n如果您认为在任何微软拥有的代码库中发现了符合 微软安全漏洞定义 的安全漏洞，请按照以下描述向我们报告。\n报告安全问题\n请不要通过公开的 GitHub 问题报告安全漏洞。\n相反，请通过微软安全响应中心 (MSRC) 报告，网址为 https://msrc microsoft com/create-report。\n如果您希望在不登录的情况下提交报告，可以发送电子邮件至 secure@microsoft com。如果可能，请使用我们的 PGP 密钥加密您的消息；您可以从 微软安全响应中心 PGP 密钥页面 下载密钥。\n您应该会在 24 小时内收到回复。如果由于某种原因未收到回复，请通过电子邮件跟进以确保我们收到了您的原始消息。更多信息可以在 microsoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3323,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "398606b2f1795da23f637ca394a1733c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\SECURITY.md",
    "source_type": "git_repo",
    "title": "SECURITY",
    "content": "安全性\n微软非常重视我们软件产品和服务的安全性，包括通过我们的 GitHub 组织管理的所有源代码库，这些组织包括 Microsoft、Azure、DotNet、AspNet、Xamarin 和 我们的 GitHub 组织。\n如果您认为在任何微软拥有的代码库中发现了符合 微软安全漏洞定义 的安全漏洞，请按照以下描述向我们报告。\n报告安全问题\n请不要通过公开的 GitHub 问题报告安全漏洞。\n相反，请通过微软安全响应中心 (MSRC) 报告，网址为 https://msrc microsoft com/create-report。\n如果您希望在不登录的情况下提交报告，可以发送电子邮件至 secure@microsoft com。如果可能，请使用我们的 PGP 密钥加密您的消息；您可以从 微软安全响应中心 PGP 密钥页面 下载密钥。\n您应该会在 24 小时内收到回复。如果由于某种原因未收到回复，请通过电子邮件跟进以确保我们收到了您的原始消息。更多信息可以在 microsoftcom/msrc 找到。\n请尽可能提供以下信息，以帮助我们更好地理解问题的性质和范围：\n问题类型（例如缓冲区溢出、SQL 注入、跨站脚本攻击等）\n与问题相关的源文件的完整路径\n受影响的源代码位置（标签/分支/提交或直接 URL）\n重现问题所需的任何特殊配置\n重现问题的逐步说明\n概念验证或漏洞利用代码（如果可能）\n问题的影响，包括攻击者可能如何利用该问题\n这些信息将帮助我们更快地处理您的报告。\n如果您是为漏洞赏金计划报告问题，提供更完整的报告可能会获得更高的赏金奖励。请访问我们的 微软漏洞赏金计划 页面，了解有关当前活动计划的更多详情。\n优选语言\n我们希望所有沟通内容使用英语。\n政策\n微软遵循 协调漏洞披露 原则。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3323,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\SECURITY.md",
      "source_type": "git_repo"
    },
    "token_count": 746,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cb7a088a99ea5bfcad6c5f8da03e9e99",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\SUPPORT.md",
    "source_type": "git_repo",
    "title": "支持",
    "content": "支持\n如何提交问题并获取帮助\n此项目使用 GitHub Issues 来跟踪错误和功能请求。在提交新问题之前，请先搜索现有问题以避免重复。对于新问题，请将您的错误或功能请求提交为一个新的 Issue。\n关于使用此项目的帮助和问题，请参考我们的贡献指南。\n微软支持政策\n对此项目的支持仅限于上述列出的资源。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1083,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\SUPPORT.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3cae72cd7484369e84b76ea46667e26b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\_404.md",
    "source_type": "git_repo",
    "title": "工作进行中",
    "content": "工作进行中\n我们正在完善此页面。请稍后再来查看。\n如果有任何问题，请提交一个 issue。\n返回首页\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 872,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\_404.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "04336dfe23c63fddd1a7a634f2c6989a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "初學者的網頁開發課程 - 一套完整的教學計畫\n透過我們由 Microsoft Cloud Advocates 提供的 12 週完整課程，學習網頁開發的基礎知識。24 節課程涵蓋 JavaScript、CSS 和 HTML，並透過實作專案如生態瓶、瀏覽器擴充功能及太空遊戲來學習。課程包含測驗、討論及實作作業，幫助你提升技能並加強知識記憶。立即開始你的程式設計旅程吧！\n🧑‍🎓 你是學生嗎？\n造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你應該加入書籤並定期查看的頁面，因為我們每月都會更新內容。\n📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已經發布\n別錯過我們全新的生成式 AI 課程！\n造訪 https://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "5315305c2831e3ed1ef9494208101357",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "初學者的網頁開發課程 - 一套完整的教學計畫\n透過我們由 Microsoft Cloud Advocates 提供的 12 週完整課程，學習網頁開發的基礎知識。24 節課程涵蓋 JavaScript、CSS 和 HTML，並透過實作專案如生態瓶、瀏覽器擴充功能及太空遊戲來學習。課程包含測驗、討論及實作作業，幫助你提升技能並加強知識記憶。立即開始你的程式設計旅程吧！\n🧑‍🎓 你是學生嗎？\n造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你應該加入書籤並定期查看的頁面，因為我們每月都會更新內容。\n📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已經發布\n別錯過我們全新的生成式 AI 課程！\n造訪 https://akams/genai-js-course 開始學習！\n課程涵蓋從基礎到 RAG 的所有內容。\n使用 GenAI 和我們的配套應用程式與歷史人物互動。\n有趣且引人入勝的故事情節，帶你穿越時空！\n每節課包含一個作業、一個知識檢查及一個挑戰，幫助你學習以下主題：\n- 提示設計與提示工程\n- 文字與圖片應用程式生成\n- 搜尋應用程式\n造訪 https://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 579,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "20d1d5da5d2ba4d155651246e72d8880",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "初學者的網頁開發課程 - 一套完整的教學計畫\n透過我們由 Microsoft Cloud Advocates 提供的 12 週完整課程，學習網頁開發的基礎知識。24 節課程涵蓋 JavaScript、CSS 和 HTML，並透過實作專案如生態瓶、瀏覽器擴充功能及太空遊戲來學習。課程包含測驗、討論及實作作業，幫助你提升技能並加強知識記憶。立即開始你的程式設計旅程吧！\n🧑‍🎓 你是學生嗎？\n造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你應該加入書籤並定期查看的頁面，因為我們每月都會更新內容。\n📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已經發布\n別錯過我們全新的生成式 AI 課程！\n造訪 https://akams/genai-js-course 開始學習！\n課程涵蓋從基礎到 RAG 的所有內容。\n使用 GenAI 和我們的配套應用程式與歷史人物互動。\n有趣且引人入勝的故事情節，帶你穿越時空！\n每節課包含一個作業、一個知識檢查及一個挑戰，幫助你學習以下主題：\n- 提示設計與提示工程\n- 文字與圖片應用程式生成\n- 搜尋應用程式\n造訪 https://akams/genai-js-course 開始學習！\n🌱 開始學習\n教師們，我們已提供一些建議供您參考如何使用這套課程。我們期待您在討論區中提供回饋！\n學習者，每節課從課前測驗開始，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。\n為了提升學習體驗，與同儕一起合作完成專案吧！我們鼓勵你在討論區中進行討論，我們的版主團隊將隨時回答你的問題。\n為了進一步提升你的教育水平，我們強烈建議探索 Microsoft Learn 以獲取更多學習資源。\n📋 設置你的開發環境\n這套課程已經準備好開發環境！你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或者在本地電腦上使用像 Visual Studio Code 這樣的文字編輯器。\n建立你的倉庫\n為了方便保存你的學習進度，建議你建立這個倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。\n操作步驟如下：\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1104,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "de7f93798ed8c686520b17e40d93b9cc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "- 一套完整的教學計畫 透過我們由 Microsoft Cloud Advocates 提供的 12 週完整課程，學習網頁開發的基礎知識。24 節課程涵蓋 JavaScript、CSS 和 HTML，並透過實作專案如生態瓶、瀏覽器擴充功能及太空遊戲來學習。課程包含測驗、討論及實作作業，幫助你提升技能並加強知識記憶。立即開始你的程式設計旅程吧！ 🧑‍🎓 你是學生嗎？ 造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你應該加入書籤並定期查看的頁面，因為我們每月都會更新內容。 📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已經發布 別錯過我們全新的生成式 AI 課程！ 造訪 https://akams/genai-js-course 開始學習！ 課程涵蓋從基礎到 RAG 的所有內容。 使用 GenAI 和我們的配套應用程式與歷史人物互動。 有趣且引人入勝的故事情節，帶你穿越時空！ 每節課包含一個作業、一個知識檢查及一個挑戰，幫助你學習以下主題： - 提示設計與提示工程 - 文字與圖片應用程式生成 - 搜尋應用程式 造訪 https://akams/genai-js-course 開始學習！ 🌱 開始學習 教師們，我們已提供一些建議供您參考如何使用這套課程。我們期待您在討論區中提供回饋！ 學習者，每節課從課前測驗開始，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。 為了提升學習體驗，與同儕一起合作完成專案吧！我們鼓勵你在討論區中進行討論，我們的版主團隊將隨時回答你的問題。 為了進一步提升你的教育水平，我們強烈建議探索 Microsoft Learn 以獲取更多學習資源。 📋 設置你的開發環境 這套課程已經準備好開發環境！你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或者在本地電腦上使用像 Visual Studio Code 這樣的文字編輯器。 建立你的倉庫 為了方便保存你的學習進度，建議你建立這個倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。 操作步驟如下： 1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1119,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "2eed2faaa1b650292c99c30a594e5c4a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "Cloud Advocates 提供的 12 週完整課程，學習網頁開發的基礎知識。24 節課程涵蓋 JavaScript、CSS 和 HTML，並透過實作專案如生態瓶、瀏覽器擴充功能及太空遊戲來學習。課程包含測驗、討論及實作作業，幫助你提升技能並加強知識記憶。立即開始你的程式設計旅程吧！ 🧑‍🎓 你是學生嗎？ 造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你應該加入書籤並定期查看的頁面，因為我們每月都會更新內容。 📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已經發布 別錯過我們全新的生成式 AI 課程！ 造訪 https://akams/genai-js-course 開始學習！ 課程涵蓋從基礎到 RAG 的所有內容。 使用 GenAI 和我們的配套應用程式與歷史人物互動。 有趣且引人入勝的故事情節，帶你穿越時空！ 每節課包含一個作業、一個知識檢查及一個挑戰，幫助你學習以下主題： - 提示設計與提示工程 - 文字與圖片應用程式生成 - 搜尋應用程式 造訪 https://akams/genai-js-course 開始學習！ 🌱 開始學習 教師們，我們已提供一些建議供您參考如何使用這套課程。我們期待您在討論區中提供回饋！ 學習者，每節課從課前測驗開始，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。 為了提升學習體驗，與同儕一起合作完成專案吧！我們鼓勵你在討論區中進行討論，我們的版主團隊將隨時回答你的問題。 為了進一步提升你的教育水平，我們強烈建議探索 Microsoft Learn 以獲取更多學習資源。 📋 設置你的開發環境 這套課程已經準備好開發環境！你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或者在本地電腦上使用像 Visual Studio Code 這樣的文字編輯器。 建立你的倉庫 為了方便保存你的學習進度，建議你建立這個倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。 操作步驟如下： 1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。 2克隆倉庫：執行 git clone https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1112,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "7d77c3f36094c3114f75400dce67c24c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "12 週完整課程，學習網頁開發的基礎知識。24 節課程涵蓋 JavaScript、CSS 和 HTML，並透過實作專案如生態瓶、瀏覽器擴充功能及太空遊戲來學習。課程包含測驗、討論及實作作業，幫助你提升技能並加強知識記憶。立即開始你的程式設計旅程吧！ 🧑‍🎓 你是學生嗎？ 造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你應該加入書籤並定期查看的頁面，因為我們每月都會更新內容。 📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已經發布 別錯過我們全新的生成式 AI 課程！ 造訪 https://akams/genai-js-course 開始學習！ 課程涵蓋從基礎到 RAG 的所有內容。 使用 GenAI 和我們的配套應用程式與歷史人物互動。 有趣且引人入勝的故事情節，帶你穿越時空！ 每節課包含一個作業、一個知識檢查及一個挑戰，幫助你學習以下主題： - 提示設計與提示工程 - 文字與圖片應用程式生成 - 搜尋應用程式 造訪 https://akams/genai-js-course 開始學習！ 🌱 開始學習 教師們，我們已提供一些建議供您參考如何使用這套課程。我們期待您在討論區中提供回饋！ 學習者，每節課從課前測驗開始，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。 為了提升學習體驗，與同儕一起合作完成專案吧！我們鼓勵你在討論區中進行討論，我們的版主團隊將隨時回答你的問題。 為了進一步提升你的教育水平，我們強烈建議探索 Microsoft Learn 以獲取更多學習資源。 📋 設置你的開發環境 這套課程已經準備好開發環境！你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或者在本地電腦上使用像 Visual Studio Code 這樣的文字編輯器。 建立你的倉庫 為了方便保存你的學習進度，建議你建立這個倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。 操作步驟如下： 1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。 2克隆倉庫：執行 git clone https://githubcom/microsoft/Web-Dev-For-Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1116,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "55b4ec5383e476d9df1a9653b63032c1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "12 週完整課程，學習網頁開發的基礎知識。24 節課程涵蓋 JavaScript、CSS 和 HTML，並透過實作專案如生態瓶、瀏覽器擴充功能及太空遊戲來學習。課程包含測驗、討論及實作作業，幫助你提升技能並加強知識記憶。立即開始你的程式設計旅程吧！ 🧑‍🎓 你是學生嗎？ 造訪 學生中心頁面，你可以找到初學者資源、學生套件，甚至有機會獲得免費證書兌換券。這是你應該加入書籤並定期查看的頁面，因為我們每月都會更新內容。 📣 公告 - 全新課程 關於 JavaScript 的生成式 AI 已經發布 別錯過我們全新的生成式 AI 課程！ 造訪 https://akams/genai-js-course 開始學習！ 課程涵蓋從基礎到 RAG 的所有內容。 使用 GenAI 和我們的配套應用程式與歷史人物互動。 有趣且引人入勝的故事情節，帶你穿越時空！ 每節課包含一個作業、一個知識檢查及一個挑戰，幫助你學習以下主題： - 提示設計與提示工程 - 文字與圖片應用程式生成 - 搜尋應用程式 造訪 https://akams/genai-js-course 開始學習！ 🌱 開始學習 教師們，我們已提供一些建議供您參考如何使用這套課程。我們期待您在討論區中提供回饋！ 學習者，每節課從課前測驗開始，接著閱讀課程內容，完成各種活動，並透過課後測驗檢查你的理解程度。 為了提升學習體驗，與同儕一起合作完成專案吧！我們鼓勵你在討論區中進行討論，我們的版主團隊將隨時回答你的問題。 為了進一步提升你的教育水平，我們強烈建議探索 Microsoft Learn 以獲取更多學習資源。 📋 設置你的開發環境 這套課程已經準備好開發環境！你可以選擇在 Codespace（基於瀏覽器，無需安裝的環境）中運行課程，或者在本地電腦上使用像 Visual Studio Code 這樣的文字編輯器。 建立你的倉庫 為了方便保存你的學習進度，建議你建立這個倉庫的副本。你可以點擊頁面頂部的 Use this template 按鈕，這將在你的 GitHub 帳戶中建立一個包含課程副本的新倉庫。 操作步驟如下： 1Fork 倉庫：點擊頁面右上角的 \"Fork\" 按鈕。 2克隆倉庫：執行 git clone https://githubcom/microsoft/Web-Dev-For-Beginnersgit\n在 Codespace 中運行課程\n在你建立的倉庫副本中，點擊 Code 按鈕並選擇 Open with Codespaces。這將為你創建一個新的 Codespace 以便進行學習。\n在本地電腦上運行課程\n若要在本地電腦上運行課程，你需要一個文字編輯器、一個瀏覽器及一個命令行工具。我們的第一節課 程式語言與工具介紹 將引導你了解這些工具的各種選擇，幫助你選擇最適合自己的工具。\n我們推薦使用 Visual Studio Code 作為編輯器，它還內建了 終端機。你可以在這裡下載 Visual Studio Code。\n將你的倉庫克隆到電腦上。點擊 Code 按鈕並複製 URL：\n然後，在 Visual Studio Code 的 終端機 中運行以下命令，將 <your-repository-url> 替換為你剛剛複製的 URL：\nbash\ngit clone <your-repository-url>\n在 Visual Studio Code 中打開該資料夾。點擊 File > Open Folder，選擇你剛剛克隆的資料夾。\n推薦的 Visual Studio Code 擴充功能：\nLive Server - 在 Visual Studio Code 中預覽 HTML 頁面\nCopilot - 幫助你更快速地撰寫程式碼\n📂 每節課包含：\n可選的手繪筆記\n可選的補充影片\n課前熱身測驗\n書面課程\n專案型課程的逐步指導\n知識檢查\n挑戰\n補充閱讀\n作業\n課後測驗\n關於測驗的說明：所有測驗都包含在 Quiz-app 資料夾中，共有 48 個測驗，每個測驗包含三個問題。測驗可以在本地運行或部署到 Azure；請按照 quiz-app 資料夾中的指示進行操作。我們正在逐步進行本地化。\n🗃️ 課程列表\n|     |                       專案名稱                       |                            教學概念                             | 學習目標                                                                                                                 |                                                         連結課程                                                          |         作者          |\n| :-: | :--------------------------------------------------: | :------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------: | :-------------------: |\n| 01  |                     入門篇                          |           程式語言與工具介紹                                   | 學習大多數程式語言的基本原理，以及幫助專業開發者完成工作的軟體工具                                                   | 程式語言與工具介紹                              |         Jasmine       |\n| 02  |                     入門篇                          |             GitHub 基礎與團隊合作                              | 學習如何在專案中使用 GitHub，並與他人協作管理程式碼                                                                  | GitHub 基礎介紹                                                  |          Floor        |\n| 03  |                     入門篇                          |                             無障礙設計                         | 學習網頁無障礙設計的基本知識                                                                                           | 無障礙設計基礎                                                  |       Christopher     |\n| 04  |                        JS 基礎                     |                         JavaScript 資料型別                   | 學習 JavaScript 資料型別的基礎知識                                                                                     | 資料型別                                                                         |         Jasmine       |\n| 05  |                        JS 基礎                     |                         函式與方法                            | 學習如何使用函式與方法來管理應用程式的邏輯流程                                                                         | 函式與方法                                                                | Jasmine 和 Christopher |\n| 06  |                        JS 基礎                     |                        使用 JS 做決策                          | 學習如何在程式碼中使用條件語句進行決策                                                                                 | 做決策                                                                     |         Jasmine       |\n| 07  |                        JS 基礎                     |                            陣列與迴圈                         | 使用 JavaScript 的陣列與迴圈來處理資料                                                                                 | 陣列與迴圈                                                                     |         Jasmine       |\n| 08  |       生態瓶     |                            HTML 實作                          | 建立 HTML 來創建線上生態瓶，專注於建立頁面佈局                                                                         | HTML 入門                                                                      |           Jen         |\n| 09  |       生態瓶     |                            CSS 實作                           | 建立 CSS 來設計線上生態瓶，專注於 CSS 的基礎知識，包括讓頁面響應式                                                     | CSS 入門                                                                       |           Jen         |\n| 10  |       生態瓶     |                 JavaScript 閉包與 DOM 操作                    | 建立 JavaScript 來讓生態瓶具備拖放功能，專注於閉包與 DOM 操作                                                         | JavaScript 閉包與 DOM 操作                                         |           Jen         |\n| 11  |       打字遊戲 |                          建立打字遊戲                         | 學習如何使用鍵盤事件來驅動 JavaScript 應用程式的邏輯                                                                   | 事件驅動程式設計                                                                |       Christopher     |\n| 12  | Green Browser Extension |                         與瀏覽器互動                          | 學習瀏覽器的運作方式、歷史，以及如何搭建瀏覽器擴展的基本元素                               |                               關於瀏覽器                                |           Jen           |\n| 13  | Green Browser Extension | 建立表單、調用 API 並將變數存儲於本地存儲中 | 建立瀏覽器擴展的 JavaScript 元素，使用存儲於本地存儲中的變數來調用 API                      |                API、表單與本地存儲                 |           Jen           |\n| 14  | Green Browser Extension |          瀏覽器中的背景進程與網頁性能          | 使用瀏覽器的背景進程來管理擴展的圖標；學習網頁性能以及一些優化方法   |             背景任務與性能              |           Jen           |\n| 15  |           Space Game           |             更高級的 JavaScript 遊戲開發             | 學習如何使用類別與組合進行繼承，以及 Pub/Sub 模式，為開發遊戲做準備              |                      高級遊戲開發介紹                       |          Chris          |\n| 16  |           Space Game           |                           繪製到畫布                            | 學習如何使用 Canvas API，將元素繪製到螢幕上                                                                       |                                繪製到畫布                                |          Chris          |\n| 17  |           Space Game           |                   在螢幕上移動元素                    | 探索如何使用笛卡爾座標系和 Canvas API 讓元素產生運動                                            |                           移動元素                           |          Chris          |\n| 18  |           Space Game           |                          碰撞檢測                           | 讓元素通過按鍵碰撞並相互反應，並提供冷卻功能以確保遊戲性能    |                              碰撞檢測                              |          Chris          |\n| 19  |           Space Game           |                             計分                              | 根據遊戲的狀態和表現進行數學計算                                                                |                                    計分                                    |          Chris          |\n| 20  |           Space Game           |                     結束與重啟遊戲                     | 學習如何結束與重啟遊戲，包括清理資產和重置變數值                              |                                結束條件                                 |          Chris          |\n| 21  |         Banking App          |                 網頁應用中的 HTML 模板與路由                 | 學習如何使用路由和 HTML 模板來搭建多頁網站的架構                             |                            HTML 模板與路由                             |          Yohan          |\n| 22  |         Banking App          |                  建立登入與註冊表單                   | 學習如何建立表單並處理驗證流程                                                                          |                                           表單                                           |          Yohan          |\n| 23  |         Banking App          |                   獲取與使用數據的方法                   | 瞭解數據如何在應用中流動，如何獲取、存儲和處理數據                                                 |                                            數據                                            |          Yohan          |\n| 24  |         Banking App          |                      狀態管理的概念                      | 學習應用如何保留狀態以及如何以程式化方式進行管理                                                              |                                狀態管理                                |          Yohan          |\n🏫 教學法\n我們的課程設計基於兩個關鍵的教學原則：\n* 專案導向學習\n* 頻繁的小測驗\n該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具和技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。在課程結束時，學生將對網頁開發有扎實的理解。\n🎓 您可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！\n通過確保內容與專案相符，學習過程對學生來說更加有趣，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。\n此外，課前的低壓力小測驗可以幫助學生專注於學習主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習或部分學習。專案從小型開始，並在 12 週的課程週期結束時逐漸變得複雜。\n雖然我們有意避免引入 JavaScript 框架，以專注於作為網頁開發者在採用框架之前所需的基本技能，但完成本課程後的下一步可以是通過另一系列視頻學習 Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 4461,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "fc1aaf11b2c3355d1fae9c432cdaf54b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "Yohan | | 22 | Banking App | 建立登入與註冊表單 | 學習如何建立表單並處理驗證流程 | 表單 | Yohan | | 23 | Banking App | 獲取與使用數據的方法 | 瞭解數據如何在應用中流動，如何獲取、存儲和處理數據 | 數據 | Yohan | | 24 | Banking App | 狀態管理的概念 | 學習應用如何保留狀態以及如何以程式化方式進行管理 | 狀態管理 | Yohan | 🏫 教學法 我們的課程設計基於兩個關鍵的教學原則： * 專案導向學習 * 頻繁的小測驗 該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具和技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。在課程結束時，學生將對網頁開發有扎實的理解。 🎓 您可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與專案相符，學習過程對學生來說更加有趣，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的低壓力小測驗可以幫助學生專注於學習主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習或部分學習。專案從小型開始，並在 12 週的課程週期結束時逐漸變得複雜。 雖然我們有意避免引入 JavaScript 框架，以專注於作為網頁開發者在採用框架之前所需的基本技能，但完成本課程後的下一步可以是通過另一系列視頻學習 Nodejs：\"Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 859,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "cbdb6439dee7d542542be7081970ff07",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "Yohan | | 22 | Banking App | 建立登入與註冊表單 | 學習如何建立表單並處理驗證流程 | 表單 | Yohan | | 23 | Banking App | 獲取與使用數據的方法 | 瞭解數據如何在應用中流動，如何獲取、存儲和處理數據 | 數據 | Yohan | | 24 | Banking App | 狀態管理的概念 | 學習應用如何保留狀態以及如何以程式化方式進行管理 | 狀態管理 | Yohan | 🏫 教學法 我們的課程設計基於兩個關鍵的教學原則： * 專案導向學習 * 頻繁的小測驗 該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具和技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。在課程結束時，學生將對網頁開發有扎實的理解。 🎓 您可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與專案相符，學習過程對學生來說更加有趣，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的低壓力小測驗可以幫助學生專注於學習主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習或部分學習。專案從小型開始，並在 12 週的課程週期結束時逐漸變得複雜。 雖然我們有意避免引入 JavaScript 框架，以專注於作為網頁開發者在採用框架之前所需的基本技能，但完成本課程後的下一步可以是通過另一系列視頻學習 Nodejs：\"Nodejs 初學者系列\"。\n請參閱我們的 行為準則 和 貢獻指南。我們歡迎您的建設性反饋！\n🧭 離線訪問\n您可以使用 Docsify 離線運行此文檔。Fork 此倉庫，在本地機器上安裝 Docsify，然後在此倉庫的根目錄中輸入 docsify serve。網站將在本地端口 3000 上提供服務：localhost:3000。\n📘 PDF\n所有課程的 PDF 可在 此處 找到。\n🎒 其他課程\n我們的團隊還製作了其他課程！查看以下內容：\n生成式 AI 初學者課程\n生成式 AI 初學者課程",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1102,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "e48942f88eca0358d2c1599c1b911bf9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "| Banking App | 狀態管理的概念 | 學習應用如何保留狀態以及如何以程式化方式進行管理 | 狀態管理 | Yohan | 🏫 教學法 我們的課程設計基於兩個關鍵的教學原則： * 專案導向學習 * 頻繁的小測驗 該課程教授 JavaScript、HTML 和 CSS 的基礎知識，以及當今網頁開發者使用的最新工具和技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。在課程結束時，學生將對網頁開發有扎實的理解。 🎓 您可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與專案相符，學習過程對學生來說更加有趣，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的低壓力小測驗可以幫助學生專注於學習主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習或部分學習。專案從小型開始，並在 12 週的課程週期結束時逐漸變得複雜。 雖然我們有意避免引入 JavaScript 框架，以專注於作為網頁開發者在採用框架之前所需的基本技能，但完成本課程後的下一步可以是通過另一系列視頻學習 Nodejs：\"Nodejs 初學者系列\"。 請參閱我們的 行為準則 和 貢獻指南。我們歡迎您的建設性反饋！ 🧭 離線訪問 您可以使用 Docsify 離線運行此文檔。Fork 此倉庫，在本地機器上安裝 Docsify，然後在此倉庫的根目錄中輸入 docsify serve。網站將在本地端口 3000 上提供服務：localhost:3000。 📘 PDF 所有課程的 PDF 可在 此處 找到。 🎒 其他課程 我們的團隊還製作了其他課程！查看以下內容： 生成式 AI 初學者課程 生成式 AI 初學者課程NET\n使用 JavaScript 的生成式 AI\n使用 Java 的生成式 AI\nAI 初學者課程\n數據科學初學者課程\n機器學習初學者課程\n網絡安全初學者課程\n網頁開發初學者課程\n物聯網初學者課程\nXR 開發初學者課程\n掌握 GitHub Copilot 的智能使用\n為 C#/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1106,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "3047319820e2633ae4fee11145dd2796",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\README.md",
    "source_type": "git_repo",
    "title": "初學者的網頁開發課程 - 一套完整的教學計畫",
    "content": "的基礎知識，以及當今網頁開發者使用的最新工具和技術。學生將有機會通過構建打字遊戲、虛擬生態瓶、環保瀏覽器擴展、太空侵略者風格的遊戲以及商業銀行應用來獲得實踐經驗。在課程結束時，學生將對網頁開發有扎實的理解。 🎓 您可以在 Microsoft Learn 上以 學習路徑 的形式學習本課程的前幾節課！ 通過確保內容與專案相符，學習過程對學生來說更加有趣，並能增強概念的記憶。我們還撰寫了幾節 JavaScript 基礎課程來介紹概念，並搭配 \"JavaScript 初學者系列\" 視頻教程中的視頻，其中一些作者也參與了本課程的編寫。 此外，課前的低壓力小測驗可以幫助學生專注於學習主題，而課後的第二次測驗則能進一步鞏固記憶。該課程設計靈活有趣，可以整體學習或部分學習。專案從小型開始，並在 12 週的課程週期結束時逐漸變得複雜。 雖然我們有意避免引入 JavaScript 框架，以專注於作為網頁開發者在採用框架之前所需的基本技能，但完成本課程後的下一步可以是通過另一系列視頻學習 Nodejs：\"Nodejs 初學者系列\"。 請參閱我們的 行為準則 和 貢獻指南。我們歡迎您的建設性反饋！ 🧭 離線訪問 您可以使用 Docsify 離線運行此文檔。Fork 此倉庫，在本地機器上安裝 Docsify，然後在此倉庫的根目錄中輸入 docsify serve。網站將在本地端口 3000 上提供服務：localhost:3000。 📘 PDF 所有課程的 PDF 可在 此處 找到。 🎒 其他課程 我們的團隊還製作了其他課程！查看以下內容： 生成式 AI 初學者課程 生成式 AI 初學者課程NET 使用 JavaScript 的生成式 AI 使用 Java 的生成式 AI AI 初學者課程 數據科學初學者課程 機器學習初學者課程 網絡安全初學者課程 網頁開發初學者課程 物聯網初學者課程 XR 開發初學者課程 掌握 GitHub Copilot 的智能使用 為 C#/NET 開發者掌握 GitHub Copilot\n選擇您的 Copilot 冒險\n授權\n此倉庫採用 MIT 授權。更多信息請參閱 LICENSE 文件。\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。雖然我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。原始文件的母語版本應被視為權威來源。對於關鍵資訊，建議使用專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋不承擔責任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22924,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1200,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "a06df483bb1b029f5fc45c7fe6ffcc57",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\README.md",
    "source_type": "git_repo",
    "title": "Web开发入门",
    "content": "Web开发入门\n在本课程的这一部分中，您将学习成为专业开发者的重要非项目相关概念。\n主题\n编程语言和开发工具简介\nGitHub简介\n无障碍基础知识\n致谢\n《编程语言和开发工具简介》由 Jasmine Greenaway 倾情撰写。\n《GitHub简介》由 Floor Drees 倾情撰写。\n《无障碍基础知识》由 Christopher Harrison 倾情撰写。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1302,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c8d954ba735a4bef8d48abd867e1201a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\README.md",
    "source_type": "git_repo",
    "title": "我的微型生态瓶：一个学习HTML、CSS和使用JavaScript操作DOM的项目 🌵🌱",
    "content": "我的微型生态瓶：一个学习HTML、CSS和使用JavaScript操作DOM的项目 🌵🌱\n一个小型的拖放代码冥想项目。通过一些HTML、JS和CSS，你将能够构建一个网页界面，对其进行样式设计，甚至添加你选择的多种交互功能。\n课程\nHTML入门\nCSS入门\nDOM和JS闭包入门\n致谢\n由Jen Looper用 ♥️ 编写。\n通过CSS创建的微型生态瓶灵感来源于Jakub Mandra的玻璃罐 codepen。\n艺术作品由Jen Looper手绘完成，并借助Procreate完成。\n部署你的微型生态瓶\n你可以使用Azure Static Web Apps将你的微型生态瓶部署或发布到网上。\nFork此代码库\n点击这个按钮\n按照向导创建你的应用。确保将应用根目录设置为/solution或你的代码库的根目录。此应用中没有API，因此无需担心添加API。一个GitHub文件夹将会在你Fork的代码库中创建，这将帮助Azure Static Web Apps的构建服务构建并将你的应用发布到一个新的URL。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2177,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "360e2503118ecc9e3088a91bce64488d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript简介",
    "content": "JavaScript简介\nJavaScript是网页的语言。在这四节课中，你将学习它的基础知识。\n主题\n变量和数据类型\n函数和方法\n使用JavaScript进行决策\n数组和循环\n致谢\n这些课程由Jasmine Greenaway、Christopher Harrison和Chris Noring倾情编写。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1197,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8d1a7f3eb5f27fea4651da1a31c1789e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\README.md",
    "source_type": "git_repo",
    "title": "事件驱动编程 - 构建一个打字游戏",
    "content": "事件驱动编程 - 构建一个打字游戏\n介绍\n打字是开发者最被低估的技能之一。能够快速将脑海中的想法转移到编辑器中，可以让创造力自由流动。而学习的最佳方式之一就是玩游戏！\n那么，让我们来构建一个打字游戏吧！\n你将使用迄今为止学到的 JavaScript、HTML 和 CSS 技能来创建一个打字游戏。游戏会向玩家展示一段随机的引用（我们使用的是 福尔摩斯 的名言），并计时玩家准确输入这段文字所需的时间。你将使用迄今为止学到的 JavaScript、HTML 和 CSS 技能来创建一个打字游戏。\n前置知识\n本课程假设你已经熟悉以下概念：\n创建文本输入框和按钮控件\nCSS 和使用类设置样式\nJavaScript 基础\n创建数组\n生成随机数\n获取当前时间\n课程\n通过事件驱动编程创建一个打字游戏\n致谢\n由 Christopher Harrison 用 ♥️ 编写\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。虽然我们尽力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1816,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "72505b2b97091436dd587f7203cd49eb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\README.md",
    "source_type": "git_repo",
    "title": "构建浏览器扩展",
    "content": "构建浏览器扩展\n构建浏览器扩展是一种有趣且新颖的方式，可以在开发不同类型的网页资源时思考应用程序的性能。本模块包括关于浏览器工作原理以及如何部署浏览器扩展的课程，如何构建表单、调用 API、使用本地存储，以及如何评估网站性能并进行优化。\n你将构建一个可以在 Edge、Chrome 和 Firefox 上运行的浏览器扩展。这个扩展类似于一个专门针对特定任务的小型网站，它会检查 C02 Signal API 提供的某个地区的电力使用情况和碳强度，并返回该地区的碳足迹数据。\n用户可以在输入 API 密钥和地区代码到表单后，随时调用此扩展以确定当地的电力使用情况，从而提供数据来影响用户的用电决策。例如，在地区电力使用高峰期，可能更适合延迟使用衣物烘干机（一个碳排放强度较高的活动）。\n主题\n关于浏览器\n表单和本地存储\n后台任务和性能\n致谢\n致谢\n这个网页碳触发器的创意由 Asim Hussain 提供，他是微软绿色云倡导团队的负责人，也是 绿色原则 的作者。最初它是一个 网站项目。\n浏览器扩展的结构受到了 Adebola Adeniran 的 COVID 扩展 的启发。\n“点”图标系统的概念来源于 Energy Lollipop 浏览器扩展的图标结构，该扩展用于加州的排放数据。\n这些课程由 Jen Looper 用 ♥️ 编写。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2564,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "380a6d81d3a31b85eda3beaa2f51b22b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\README.md",
    "source_type": "git_repo",
    "title": "构建一个太空游戏",
    "content": "构建一个太空游戏\n一个通过太空游戏学习更高级 JavaScript 基础的课程\n在本课中，你将学习如何构建自己的太空游戏。如果你曾玩过“太空侵略者”游戏，这个游戏的理念是一样的：操控一艘宇宙飞船并向从上方降下的怪物开火。以下是完成后的游戏效果：\n在这六节课中，你将学习以下内容：\n交互 Canvas 元素，在屏幕上绘制内容\n理解 笛卡尔坐标系\n学习 Pub-Sub 模式，创建更易维护和扩展的游戏架构\n利用 Async/Await 加载游戏资源\n处理 键盘事件\n概览\n理论\n用 JavaScript 构建游戏的介绍\n实践\n在 Canvas 上绘图\n在屏幕上移动元素\n碰撞检测\n记录分数\n结束和重新开始游戏\n致谢\n本课程使用的素材来自 https://www kenney nl/。\n如果你对构建游戏感兴趣，这里有非常棒的素材，很多是免费的，也有一些是付费的。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1932,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e0c125936440b5ac1c54db863429a9bb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\README.md",
    "source_type": "git_repo",
    "title": ":dollar: 创建一个银行",
    "content": ":dollar: 创建一个银行\n在这个项目中，你将学习如何构建一个虚拟银行。这些课程包括如何设计一个网页应用并提供路由、构建表单、管理状态，以及从 API 获取数据以访问银行数据的相关内容。\n|  |  |\n|--------------------------------|--------------------------------|\n课程\n网页应用中的 HTML 模板和路由\n构建登录和注册表单\n数据获取和使用的方法\n状态管理的概念\n致谢\n这些课程由 Yohan Lasorsa 倾情编写 :hearts:。\n如果你有兴趣学习如何构建这些课程中使用的 服务器 API，可以观看 这一系列视频（特别是第 17 到 21 集）。\n你还可以查看 这个交互式学习教程。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1754,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d72a5287d37ba96cc64cf03748db613b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\docs\\_sidebar.md",
    "source_type": "git_repo",
    "title": "_sidebar",
    "content": "简介\n1\n2\n3\nJS基础\n4\n5\n6\n7\nHTML、CSS、JS\n8\n9\n10\n打字游戏\n11\n浏览器扩展\n12\n13\n14\n太空游戏\n15\n16\n17\n18\n19\n20\n银行项目\n21\n22\n23\n24\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2156,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\docs\\_sidebar.md",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f226ad489c35040443ae3ddd0dae9618",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "初学者的网页开发课程\n通过微软云倡导者提供的为期12周的综合课程，学习网页开发的基础知识。24节课涵盖了JavaScript、CSS和HTML，通过实践项目如生态瓶、浏览器扩展和太空游戏进行学习。课程包含测验、讨论和实践作业，帮助你提升技能并优化知识吸收。今天就开始你的编程之旅吧！\n🧑‍🎓 你是学生吗？\n访问 学生中心页面，你可以找到初学者资源、学生礼包，甚至有机会获得免费证书代金券。记得将此页面加入书签并定期查看，我们会每月更新内容。\n📣 公告 - 全新生成式AI JavaScript课程 已发布\n不要错过我们的全新生成式AI课程！\n访问 https://aka ms/genai-js-course 开始学习！\n课程内容涵盖从基础到RAG的所有内容。\n使用生成式AI和我们的配套应用与历史人物互动。\n有趣且引人入胜的叙事，你将进行时间旅行！\n每节课都包含一个作业、知识检查和挑战，帮助你学习以下主题：\n- 提示和提示工程\n- 文本和图像应用生成\n- 搜索应用\n访问 https://aka",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "d794af4fa9394b9e7311eabe72bf1564",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "初学者的网页开发课程\n通过微软云倡导者提供的为期12周的综合课程，学习网页开发的基础知识。24节课涵盖了JavaScript、CSS和HTML，通过实践项目如生态瓶、浏览器扩展和太空游戏进行学习。课程包含测验、讨论和实践作业，帮助你提升技能并优化知识吸收。今天就开始你的编程之旅吧！\n🧑‍🎓 你是学生吗？\n访问 学生中心页面，你可以找到初学者资源、学生礼包，甚至有机会获得免费证书代金券。记得将此页面加入书签并定期查看，我们会每月更新内容。\n📣 公告 - 全新生成式AI JavaScript课程 已发布\n不要错过我们的全新生成式AI课程！\n访问 https://aka ms/genai-js-course 开始学习！\n课程内容涵盖从基础到RAG的所有内容。\n使用生成式AI和我们的配套应用与历史人物互动。\n有趣且引人入胜的叙事，你将进行时间旅行！\n每节课都包含一个作业、知识检查和挑战，帮助你学习以下主题：\n- 提示和提示工程\n- 文本和图像应用生成\n- 搜索应用\n访问 https://akams/genai-js-course 开始学习！\n🌱 开始学习\n教师们，我们提供了一些建议供您参考如何使用此课程。欢迎在讨论论坛中分享您的反馈！\n学习者，每节课从课前测验开始，接着阅读课程材料，完成各种活动，并通过课后测验检查你的理解。\n为了提升学习体验，与同伴一起完成项目吧！我们鼓励在讨论论坛中进行讨论，我们的版主团队会解答你的问题。\n为了进一步学习，我们强烈推荐探索 Microsoft Learn 以获取更多学习资料。\n📋 设置你的学习环境\n本课程已准备好开发环境！你可以选择在 Codespace（基于浏览器，无需安装）中运行课程，或者在本地使用如 Visual Studio Code 的文本编辑器。\n创建你的代码库\n为了方便保存你的学习进度，建议你创建此代码库的副本。点击页面顶部的 Use this template 按钮即可。这将在你的GitHub账户中创建一个包含课程内容的新代码库。\n操作步骤：\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 775,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "360d406256e6776bd918b8780891bbd3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "初学者的网页开发课程\n通过微软云倡导者提供的为期12周的综合课程，学习网页开发的基础知识。24节课涵盖了JavaScript、CSS和HTML，通过实践项目如生态瓶、浏览器扩展和太空游戏进行学习。课程包含测验、讨论和实践作业，帮助你提升技能并优化知识吸收。今天就开始你的编程之旅吧！\n🧑‍🎓 你是学生吗？\n访问 学生中心页面，你可以找到初学者资源、学生礼包，甚至有机会获得免费证书代金券。记得将此页面加入书签并定期查看，我们会每月更新内容。\n📣 公告 - 全新生成式AI JavaScript课程 已发布\n不要错过我们的全新生成式AI课程！\n访问 https://aka ms/genai-js-course 开始学习！\n课程内容涵盖从基础到RAG的所有内容。\n使用生成式AI和我们的配套应用与历史人物互动。\n有趣且引人入胜的叙事，你将进行时间旅行！\n每节课都包含一个作业、知识检查和挑战，帮助你学习以下主题：\n- 提示和提示工程\n- 文本和图像应用生成\n- 搜索应用\n访问 https://akams/genai-js-course 开始学习！\n🌱 开始学习\n教师们，我们提供了一些建议供您参考如何使用此课程。欢迎在讨论论坛中分享您的反馈！\n学习者，每节课从课前测验开始，接着阅读课程材料，完成各种活动，并通过课后测验检查你的理解。\n为了提升学习体验，与同伴一起完成项目吧！我们鼓励在讨论论坛中进行讨论，我们的版主团队会解答你的问题。\n为了进一步学习，我们强烈推荐探索 Microsoft Learn 以获取更多学习资料。\n📋 设置你的学习环境\n本课程已准备好开发环境！你可以选择在 Codespace（基于浏览器，无需安装）中运行课程，或者在本地使用如 Visual Studio Code 的文本编辑器。\n创建你的代码库\n为了方便保存你的学习进度，建议你创建此代码库的副本。点击页面顶部的 Use this template 按钮即可。这将在你的GitHub账户中创建一个包含课程内容的新代码库。\n操作步骤：\n1Fork代码库：点击页面右上角的 \"Fork\" 按钮。\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 796,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "1e5d40d2938550f71543a746fcc3d3dc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "初学者的网页开发课程\n通过微软云倡导者提供的为期12周的综合课程，学习网页开发的基础知识。24节课涵盖了JavaScript、CSS和HTML，通过实践项目如生态瓶、浏览器扩展和太空游戏进行学习。课程包含测验、讨论和实践作业，帮助你提升技能并优化知识吸收。今天就开始你的编程之旅吧！\n🧑‍🎓 你是学生吗？\n访问 学生中心页面，你可以找到初学者资源、学生礼包，甚至有机会获得免费证书代金券。记得将此页面加入书签并定期查看，我们会每月更新内容。\n📣 公告 - 全新生成式AI JavaScript课程 已发布\n不要错过我们的全新生成式AI课程！\n访问 https://aka ms/genai-js-course 开始学习！\n课程内容涵盖从基础到RAG的所有内容。\n使用生成式AI和我们的配套应用与历史人物互动。\n有趣且引人入胜的叙事，你将进行时间旅行！\n每节课都包含一个作业、知识检查和挑战，帮助你学习以下主题：\n- 提示和提示工程\n- 文本和图像应用生成\n- 搜索应用\n访问 https://akams/genai-js-course 开始学习！\n🌱 开始学习\n教师们，我们提供了一些建议供您参考如何使用此课程。欢迎在讨论论坛中分享您的反馈！\n学习者，每节课从课前测验开始，接着阅读课程材料，完成各种活动，并通过课后测验检查你的理解。\n为了提升学习体验，与同伴一起完成项目吧！我们鼓励在讨论论坛中进行讨论，我们的版主团队会解答你的问题。\n为了进一步学习，我们强烈推荐探索 Microsoft Learn 以获取更多学习资料。\n📋 设置你的学习环境\n本课程已准备好开发环境！你可以选择在 Codespace（基于浏览器，无需安装）中运行课程，或者在本地使用如 Visual Studio Code 的文本编辑器。\n创建你的代码库\n为了方便保存你的学习进度，建议你创建此代码库的副本。点击页面顶部的 Use this template 按钮即可。这将在你的GitHub账户中创建一个包含课程内容的新代码库。\n操作步骤：\n1Fork代码库：点击页面右上角的 \"Fork\" 按钮。\n2克隆代码库：运行 git clone https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 810,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "704cfbe34d77845086a75f35595de02d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "初学者的网页开发课程\n通过微软云倡导者提供的为期12周的综合课程，学习网页开发的基础知识。24节课涵盖了JavaScript、CSS和HTML，通过实践项目如生态瓶、浏览器扩展和太空游戏进行学习。课程包含测验、讨论和实践作业，帮助你提升技能并优化知识吸收。今天就开始你的编程之旅吧！\n🧑‍🎓 你是学生吗？\n访问 学生中心页面，你可以找到初学者资源、学生礼包，甚至有机会获得免费证书代金券。记得将此页面加入书签并定期查看，我们会每月更新内容。\n📣 公告 - 全新生成式AI JavaScript课程 已发布\n不要错过我们的全新生成式AI课程！\n访问 https://aka ms/genai-js-course 开始学习！\n课程内容涵盖从基础到RAG的所有内容。\n使用生成式AI和我们的配套应用与历史人物互动。\n有趣且引人入胜的叙事，你将进行时间旅行！\n每节课都包含一个作业、知识检查和挑战，帮助你学习以下主题：\n- 提示和提示工程\n- 文本和图像应用生成\n- 搜索应用\n访问 https://akams/genai-js-course 开始学习！\n🌱 开始学习\n教师们，我们提供了一些建议供您参考如何使用此课程。欢迎在讨论论坛中分享您的反馈！\n学习者，每节课从课前测验开始，接着阅读课程材料，完成各种活动，并通过课后测验检查你的理解。\n为了提升学习体验，与同伴一起完成项目吧！我们鼓励在讨论论坛中进行讨论，我们的版主团队会解答你的问题。\n为了进一步学习，我们强烈推荐探索 Microsoft Learn 以获取更多学习资料。\n📋 设置你的学习环境\n本课程已准备好开发环境！你可以选择在 Codespace（基于浏览器，无需安装）中运行课程，或者在本地使用如 Visual Studio Code 的文本编辑器。\n创建你的代码库\n为了方便保存你的学习进度，建议你创建此代码库的副本。点击页面顶部的 Use this template 按钮即可。这将在你的GitHub账户中创建一个包含课程内容的新代码库。\n操作步骤：\n1Fork代码库：点击页面右上角的 \"Fork\" 按钮。\n2克隆代码库：运行 git clone https://githubcom/microsoft/Web-Dev-For-Beginners",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 821,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "c4768df6f3a1d910f84c09e8db21c0bd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "初学者的网页开发课程\n通过微软云倡导者提供的为期12周的综合课程，学习网页开发的基础知识。24节课涵盖了JavaScript、CSS和HTML，通过实践项目如生态瓶、浏览器扩展和太空游戏进行学习。课程包含测验、讨论和实践作业，帮助你提升技能并优化知识吸收。今天就开始你的编程之旅吧！\n🧑‍🎓 你是学生吗？\n访问 学生中心页面，你可以找到初学者资源、学生礼包，甚至有机会获得免费证书代金券。记得将此页面加入书签并定期查看，我们会每月更新内容。\n📣 公告 - 全新生成式AI JavaScript课程 已发布\n不要错过我们的全新生成式AI课程！\n访问 https://aka ms/genai-js-course 开始学习！\n课程内容涵盖从基础到RAG的所有内容。\n使用生成式AI和我们的配套应用与历史人物互动。\n有趣且引人入胜的叙事，你将进行时间旅行！\n每节课都包含一个作业、知识检查和挑战，帮助你学习以下主题：\n- 提示和提示工程\n- 文本和图像应用生成\n- 搜索应用\n访问 https://akams/genai-js-course 开始学习！\n🌱 开始学习\n教师们，我们提供了一些建议供您参考如何使用此课程。欢迎在讨论论坛中分享您的反馈！\n学习者，每节课从课前测验开始，接着阅读课程材料，完成各种活动，并通过课后测验检查你的理解。\n为了提升学习体验，与同伴一起完成项目吧！我们鼓励在讨论论坛中进行讨论，我们的版主团队会解答你的问题。\n为了进一步学习，我们强烈推荐探索 Microsoft Learn 以获取更多学习资料。\n📋 设置你的学习环境\n本课程已准备好开发环境！你可以选择在 Codespace（基于浏览器，无需安装）中运行课程，或者在本地使用如 Visual Studio Code 的文本编辑器。\n创建你的代码库\n为了方便保存你的学习进度，建议你创建此代码库的副本。点击页面顶部的 Use this template 按钮即可。这将在你的GitHub账户中创建一个包含课程内容的新代码库。\n操作步骤：\n1Fork代码库：点击页面右上角的 \"Fork\" 按钮。\n2克隆代码库：运行 git clone https://githubcom/microsoft/Web-Dev-For-Beginnersgit\n在Codespace中运行课程\n在你创建的代码库副本中，点击 Code 按钮并选择 Open with Codespaces。这将为你创建一个新的Codespace以供学习。\n在本地运行课程\n要在本地运行课程，你需要一个文本编辑器、浏览器和命令行工具。我们的第一节课 编程语言和工具介绍 将指导你选择适合的工具。\n我们推荐使用 Visual Studio Code 作为编辑器，它还内置了 终端。你可以在这里下载Visual Studio Code。\n将你的代码库克隆到本地。点击 Code 按钮并复制URL：\n然后，在 Visual Studio Code 的 终端 中运行以下命令，将 <your-repository-url> 替换为你刚刚复制的URL：\nbash\ngit clone <your-repository-url>\n在Visual Studio Code中打开文件夹。点击 File > Open Folder，选择你刚刚克隆的文件夹。\n推荐的Visual Studio Code扩展：\nLive Server - 在Visual Studio Code中预览HTML页面\nCopilot - 帮助你更快地编写代码\n📂 每节课包含：\n可选的手绘笔记\n可选的补充视频\n课前热身测验\n书面课程\n针对项目的逐步构建指南\n知识检查\n挑战\n补充阅读\n作业\n课后测验\n关于测验的说明：所有测验都在Quiz-app文件夹中，共48个测验，每个测验包含三个问题。测验链接在课程中，可以本地运行或部署到Azure；请按照quiz-app文件夹中的说明操作。测验正在逐步本地化。\n🗃️ 课程目录\n|     |                       项目名称                       |                            教授概念                             | 学习目标                                                                                                                 |                                                         课程链接                                                          |         作者          |\n| :-: | :--------------------------------------------------: | :------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------: | :-----------------: |\n| 01  |                     入门课程                      |           编程和工具的基础介绍           | 学习大多数编程语言的基本原理以及帮助专业开发者完成工作的工具 | 编程语言和工具介绍 |         Jasmine         |\n| 02  |                     入门课程                      |             GitHub基础及团队协作             | 学习如何在项目中使用GitHub，以及如何与他人协作开发代码                                                    |                            GitHub基础                             |          Floor          |\n| 03  |                     入门课程                      |                             无障碍设计                              | 学习网页无障碍设计的基础知识                                                                                               |                       无障碍设计基础                       |       Christopher       |\n| 04  |                        JS基础                         |                         JavaScript数据类型                          | 学习JavaScript数据类型的基础知识                                                                                                 |                                       数据类型                                        |         Jasmine         |\n| 05  |                        JS基础                         |                         函数和方法                          | 学习如何使用函数和方法管理应用程序的逻辑流                                                             |                              函数和方法                               | Jasmine and Christopher |\n| 06  |                        JS基础                         |                        使用JS进行决策                        | 学习如何通过决策方法在代码中创建条件                                                           |                                 决策方法                                  |         Jasmine         |\n| 07  |                        JS基础                         |                            数组和循环                            | 学习如何在JavaScript中使用数组和循环处理数据                                                                                 |                                   数组和循环                                    |         Jasmine         |\n| 08  |       生态瓶       |                            HTML实践                            | 构建HTML以创建一个在线生态瓶，重点学习布局构建                                                         |                                 HTML介绍                                 |           Jen           |\n| 09  |       生态瓶       |                            CSS实践                             | 构建CSS以美化在线生态瓶，重点学习CSS基础知识，包括使页面响应式                     |                                  CSS介绍                                  |           Jen           |\n| 10  |            生态瓶            |                 JavaScript闭包和DOM操作                  | 构建JavaScript以使生态瓶具备拖放功能，重点学习闭包和DOM操作             |                  JavaScript闭包和DOM操作                   |           Jen           |\n| 11  |          打字游戏          |                          构建一个打字游戏                           | 学习如何使用键盘事件驱动JavaScript应用的逻辑                                                          |                                事件驱动编程                                |       Christopher       |\n| 12  | Green Browser Extension |                         浏览器相关工作                          | 学习浏览器的工作原理、历史，以及如何搭建浏览器扩展的初始元素                               |                               关于浏览器                                |           Jen           |\n| 13  | Green Browser Extension | 构建表单、调用 API 并将变量存储在本地存储中 | 构建浏览器扩展的 JavaScript 元素，通过存储在本地存储中的变量调用 API                      |                API、表单和本地存储                 |           Jen           |\n| 14  | Green Browser Extension |          浏览器中的后台进程与网页性能          | 使用浏览器的后台进程管理扩展图标；学习网页性能及一些优化方法   |             后台任务与性能              |           Jen           |\n| 15  |           Space Game           |             更高级的 JavaScript 游戏开发             | 学习使用类和组合进行继承，以及发布/订阅模式，为构建游戏做准备              |                      高级游戏开发简介                       |          Chris          |\n| 16  |           Space Game           |                           绘制到画布                            | 学习 Canvas API，用于在屏幕上绘制元素                                                                       |                                绘制到画布                                |          Chris          |\n| 17  |           Space Game           |                   在屏幕上移动元素                    | 探索如何使用笛卡尔坐标和 Canvas API 让元素获得运动效果                                            |                           移动元素                           |          Chris          |\n| 18  |           Space Game           |                          碰撞检测                           | 通过按键让元素碰撞并相互反应，并提供冷却功能以确保游戏性能    |                              碰撞检测                              |          Chris          |\n| 19  |           Space Game           |                             计分                              | 根据游戏状态和表现进行数学计算                                                                |                                    计分                                    |          Chris          |\n| 20  |           Space Game           |                     结束和重启游戏                     | 学习如何结束和重启游戏，包括清理资源和重置变量值                              |                                结束条件                                 |          Chris          |\n| 21  |         Banking App          |                 网页应用中的 HTML 模板和路由                 | 学习如何使用路由和 HTML 模板创建多页面网站的架构                             |                            HTML 模板和路由                             |          Yohan          |\n| 22  |         Banking App          |                  构建登录和注册表单                   | 学习构建表单和处理验证逻辑                                                                          |                                           表单                                           |          Yohan          |\n| 23  |         Banking App          |                   数据获取和使用的方法                   | 学习数据如何在应用中流动，如何获取、存储和处理数据                                                 |                                            数据                                            |          Yohan          |\n| 24  |         Banking App          |                      状态管理的概念                      | 学习应用如何保持状态以及如何以编程方式管理状态                                                              |                                状态管理                                |          Yohan          |\n🏫 教学法\n我们的课程设计基于两个关键教学原则：\n* 项目驱动学习\n* 频繁测验\n该课程教授 JavaScript、HTML 和 CSS 的基础知识，以及当今网页开发者使用的最新工具和技术。学生将有机会通过构建打字游戏、虚拟生态瓶、环保浏览器扩展、太空入侵者风格游戏以及企业银行应用来获得实践经验。课程结束时，学生将对网页开发有一个扎实的理解。\n🎓 您可以在 Microsoft Learn 上以 学习路径 的形式学习本课程的前几节课！\n通过确保内容与项目相结合，学习过程变得更加有趣，同时增强了学生对概念的记忆。我们还编写了几节 JavaScript 基础知识的入门课程，并配有 \"JavaScript 初学者系列\" 视频教程，其中一些作者也参与了本课程的编写。\n此外，课前的低压力测验可以帮助学生集中注意力学习某个主题，而课后的第二次测验则进一步巩固记忆。本课程设计灵活有趣，可以完整学习或部分学习。项目从小型开始，到 12 周周期结束时逐渐变得复杂。\n虽然我们有意避免引入 JavaScript 框架，以专注于网页开发者在采用框架之前所需的基本技能，但完成本课程后的一个良好下一步是通过另一系列视频学习 Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 3374,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "ec8b5ce1fdd7d7616fed6735464aefd3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "Yohan | | 22 | Banking App | 构建登录和注册表单 | 学习构建表单和处理验证逻辑 | 表单 | Yohan | | 23 | Banking App | 数据获取和使用的方法 | 学习数据如何在应用中流动，如何获取、存储和处理数据 | 数据 | Yohan | | 24 | Banking App | 状态管理的概念 | 学习应用如何保持状态以及如何以编程方式管理状态 | 状态管理 | Yohan | 🏫 教学法 我们的课程设计基于两个关键教学原则： * 项目驱动学习 * 频繁测验 该课程教授 JavaScript、HTML 和 CSS 的基础知识，以及当今网页开发者使用的最新工具和技术。学生将有机会通过构建打字游戏、虚拟生态瓶、环保浏览器扩展、太空入侵者风格游戏以及企业银行应用来获得实践经验。课程结束时，学生将对网页开发有一个扎实的理解。 🎓 您可以在 Microsoft Learn 上以 学习路径 的形式学习本课程的前几节课！ 通过确保内容与项目相结合，学习过程变得更加有趣，同时增强了学生对概念的记忆。我们还编写了几节 JavaScript 基础知识的入门课程，并配有 \"JavaScript 初学者系列\" 视频教程，其中一些作者也参与了本课程的编写。 此外，课前的低压力测验可以帮助学生集中注意力学习某个主题，而课后的第二次测验则进一步巩固记忆。本课程设计灵活有趣，可以完整学习或部分学习。项目从小型开始，到 12 周周期结束时逐渐变得复杂。 虽然我们有意避免引入 JavaScript 框架，以专注于网页开发者在采用框架之前所需的基本技能，但完成本课程后的一个良好下一步是通过另一系列视频学习 Nodejs：\"Node",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "e8b45dcbebef77a3c991a570e02094ee",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "Yohan | | 22 | Banking App | 构建登录和注册表单 | 学习构建表单和处理验证逻辑 | 表单 | Yohan | | 23 | Banking App | 数据获取和使用的方法 | 学习数据如何在应用中流动，如何获取、存储和处理数据 | 数据 | Yohan | | 24 | Banking App | 状态管理的概念 | 学习应用如何保持状态以及如何以编程方式管理状态 | 状态管理 | Yohan | 🏫 教学法 我们的课程设计基于两个关键教学原则： * 项目驱动学习 * 频繁测验 该课程教授 JavaScript、HTML 和 CSS 的基础知识，以及当今网页开发者使用的最新工具和技术。学生将有机会通过构建打字游戏、虚拟生态瓶、环保浏览器扩展、太空入侵者风格游戏以及企业银行应用来获得实践经验。课程结束时，学生将对网页开发有一个扎实的理解。 🎓 您可以在 Microsoft Learn 上以 学习路径 的形式学习本课程的前几节课！ 通过确保内容与项目相结合，学习过程变得更加有趣，同时增强了学生对概念的记忆。我们还编写了几节 JavaScript 基础知识的入门课程，并配有 \"JavaScript 初学者系列\" 视频教程，其中一些作者也参与了本课程的编写。 此外，课前的低压力测验可以帮助学生集中注意力学习某个主题，而课后的第二次测验则进一步巩固记忆。本课程设计灵活有趣，可以完整学习或部分学习。项目从小型开始，到 12 周周期结束时逐渐变得复杂。 虽然我们有意避免引入 JavaScript 框架，以专注于网页开发者在采用框架之前所需的基本技能，但完成本课程后的一个良好下一步是通过另一系列视频学习 Nodejs：\"Nodejs 初学者系列\"。\n请访问我们的 行为准则 和 贡献指南。我们欢迎您的建设性反馈！\n🧭 离线访问\n您可以使用 Docsify 离线运行此文档。Fork 此仓库，在本地机器上安装 Docsify，然后在此仓库的根文件夹中输入 docsify serve。网站将在本地的端口 3000 上运行：localhost:3000。\n📘 PDF\n所有课程的 PDF 可在 此处 找到。\n🎒 其他课程\n我们的团队还制作了其他课程！查看以下内容：\n生成式 AI 初学者课程\n生成式 AI 初学者课程",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 829,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "bfecc5a5371e4f1d1d62983ed00f7cde",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "| Banking App | 状态管理的概念 | 学习应用如何保持状态以及如何以编程方式管理状态 | 状态管理 | Yohan | 🏫 教学法 我们的课程设计基于两个关键教学原则： * 项目驱动学习 * 频繁测验 该课程教授 JavaScript、HTML 和 CSS 的基础知识，以及当今网页开发者使用的最新工具和技术。学生将有机会通过构建打字游戏、虚拟生态瓶、环保浏览器扩展、太空入侵者风格游戏以及企业银行应用来获得实践经验。课程结束时，学生将对网页开发有一个扎实的理解。 🎓 您可以在 Microsoft Learn 上以 学习路径 的形式学习本课程的前几节课！ 通过确保内容与项目相结合，学习过程变得更加有趣，同时增强了学生对概念的记忆。我们还编写了几节 JavaScript 基础知识的入门课程，并配有 \"JavaScript 初学者系列\" 视频教程，其中一些作者也参与了本课程的编写。 此外，课前的低压力测验可以帮助学生集中注意力学习某个主题，而课后的第二次测验则进一步巩固记忆。本课程设计灵活有趣，可以完整学习或部分学习。项目从小型开始，到 12 周周期结束时逐渐变得复杂。 虽然我们有意避免引入 JavaScript 框架，以专注于网页开发者在采用框架之前所需的基本技能，但完成本课程后的一个良好下一步是通过另一系列视频学习 Nodejs：\"Nodejs 初学者系列\"。 请访问我们的 行为准则 和 贡献指南。我们欢迎您的建设性反馈！ 🧭 离线访问 您可以使用 Docsify 离线运行此文档。Fork 此仓库，在本地机器上安装 Docsify，然后在此仓库的根文件夹中输入 docsify serve。网站将在本地的端口 3000 上运行：localhost:3000。 📘 PDF 所有课程的 PDF 可在 此处 找到。 🎒 其他课程 我们的团队还制作了其他课程！查看以下内容： 生成式 AI 初学者课程 生成式 AI 初学者课程NET\n使用 JavaScript 的生成式 AI\n使用 Java 的生成式 AI\nAI 初学者课程\n数据科学初学者课程\n机器学习初学者课程\n网络安全初学者课程\n网页开发初学者课程\n物联网初学者课程\nXR 开发初学者课程\n掌握 GitHub Copilot 的智能使用\n为 C#/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 848,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "4f5d1c7f6d64b97df9560598569322d6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\README.md",
    "source_type": "git_repo",
    "title": "初学者的网页开发课程",
    "content": "的基础知识，以及当今网页开发者使用的最新工具和技术。学生将有机会通过构建打字游戏、虚拟生态瓶、环保浏览器扩展、太空入侵者风格游戏以及企业银行应用来获得实践经验。课程结束时，学生将对网页开发有一个扎实的理解。 🎓 您可以在 Microsoft Learn 上以 学习路径 的形式学习本课程的前几节课！ 通过确保内容与项目相结合，学习过程变得更加有趣，同时增强了学生对概念的记忆。我们还编写了几节 JavaScript 基础知识的入门课程，并配有 \"JavaScript 初学者系列\" 视频教程，其中一些作者也参与了本课程的编写。 此外，课前的低压力测验可以帮助学生集中注意力学习某个主题，而课后的第二次测验则进一步巩固记忆。本课程设计灵活有趣，可以完整学习或部分学习。项目从小型开始，到 12 周周期结束时逐渐变得复杂。 虽然我们有意避免引入 JavaScript 框架，以专注于网页开发者在采用框架之前所需的基本技能，但完成本课程后的一个良好下一步是通过另一系列视频学习 Nodejs：\"Nodejs 初学者系列\"。 请访问我们的 行为准则 和 贡献指南。我们欢迎您的建设性反馈！ 🧭 离线访问 您可以使用 Docsify 离线运行此文档。Fork 此仓库，在本地机器上安装 Docsify，然后在此仓库的根文件夹中输入 docsify serve。网站将在本地的端口 3000 上运行：localhost:3000。 📘 PDF 所有课程的 PDF 可在 此处 找到。 🎒 其他课程 我们的团队还制作了其他课程！查看以下内容： 生成式 AI 初学者课程 生成式 AI 初学者课程NET 使用 JavaScript 的生成式 AI 使用 Java 的生成式 AI AI 初学者课程 数据科学初学者课程 机器学习初学者课程 网络安全初学者课程 网页开发初学者课程 物联网初学者课程 XR 开发初学者课程 掌握 GitHub Copilot 的智能使用 为 C#/NET 开发者掌握 GitHub Copilot\n选择您的 Copilot 冒险\n许可证\n此仓库采用 MIT 许可证。有关更多信息，请参阅 LICENSE 文件。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 22328,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 931,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "5a0dc09a09f0f0c489ab2f8fe46a5960",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\docs\\_navbar.md",
    "source_type": "git_repo",
    "title": "_navbar",
    "content": "翻译\nEnglish (United States)\nবাংলা\n中文(中国)\n中文(台湾)\nEspañol\nFrançais\nΕλληνικά\nहिन्दी\nBahasa Melayu\nമലയാളം\nதமிழ்\nతెలుగు\nBahasa Indonesia\nItaliano\n日本語\nNederlands\nनेपाली\nPortuguês\nРусский\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1542,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\docs\\_navbar.md",
      "source_type": "git_repo"
    },
    "token_count": 265,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9ab1c8c37f0082c11df2ee8a6bac57b5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\lesson-template\\assignment.md",
    "source_type": "git_repo",
    "title": "[作业名称]",
    "content": "[作业名称]\n说明\n评分标准\n| 标准     | 优秀       | 合格       | 需要改进           |\n| -------- | --------- | -------- | ----------------- |\n|          |           |          |                   |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。虽然我们尽力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 887,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\lesson-template\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 195,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cd3d67f08e746df770fd82b2209775f6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\lesson-template\\README.md",
    "source_type": "git_repo",
    "title": "[课程主题]",
    "content": "[课程主题]\n课前测验\n[描述我们将学习的内容]\n介绍\n描述将涵盖的内容\n笔记\n前置条件\n在本课之前应该完成哪些步骤？\n准备工作\n开始本课的准备步骤\n[分步骤学习内容]\n[主题 1]\n任务：\n共同努力逐步增强你的代码库，以使用共享代码构建项目：\nhtml\ncode blocks\n✅ 知识检查 - 利用这个时机通过开放性问题扩展学生的知识\n[主题 2]\n[主题 3]\n🚀 挑战：为学生设计一个课堂协作挑战，以增强项目\n可选：如果合适，可以添加完成课程后的界面截图\n课后测验\n复习与自学\n作业截止日期 [MM/YY]: 作业名称\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1569,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\lesson-template\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "057689a5d9194a06182ac87ec73a683c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "测验应用程序",
    "content": "测验应用程序\n这些测验是数据科学课程（https://aka ms/webdev-beginners）中的课前和课后测验。\n添加翻译后的测验集\n通过在 assets/translations 文件夹中创建匹配的测验结构来添加测验翻译。原始测验位于 assets/translations/en 文件夹中。测验被分为几个部分。请确保编号与正确的测验部分对齐。整个课程共有 40 个测验，编号从 0 开始。\n以下是翻译文件的结构示例：\n```\n[\n{\n\"title\": \"A title\",\n\"complete\": \"A complete button title\",\n\"error\": \"An error message upon selecting the wrong answer\",\n\"quizzes\": [\n{\n\"id\": 1,\n\"title\": \"Title\",\n\"quiz\": [\n{\n\"questionText\": \"The question asked\",\n\"answerOptions\": [\n{\n\"answerText\": \"Option 1 title\",\n\"isCorrect\": true\n},\n{\n\"answerText\": \"Option 2 title\",\n\"isCorrect\": false\n}\n]\n}\n]\n}\n]\n}\n]\n```\n编辑翻译文件后，修改翻译文件夹中的 index js 文件，按照 en 文件夹中的约定导入所有文件。\n编辑 assets/translations 文件夹中的 index js 文件以导入新的翻译文件。\n例如，如果你的翻译 JSON 文件是 ex json，将 'ex' 作为本地化键，然后按照以下方式导入：\nindex js\n```\nimport ex from \" /ex json\";\n// if 'ex' is localization key then enter it like so in `messages` to expose it\nconst messages = {\nex: ex[0],\n};\nexport default messages;\n```\n本地运行测验应用程序\n前置条件\n一个 GitHub 账户\nNode js 和 Git\n安装与设置\n从这个 模板 创建一个代码库\n克隆你的新代码库，并导航到 quiz-app 文件夹\nbash\ngit clone https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5994,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "af26d055fcd7ade740cfe834da1327a6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "测验应用程序",
    "content": "``` 编辑翻译文件后，修改翻译文件夹中的 index js 文件，按照 en 文件夹中的约定导入所有文件。 编辑 assets/translations 文件夹中的 index js 文件以导入新的翻译文件。 例如，如果你的翻译 JSON 文件是 ex json，将 'ex' 作为本地化键，然后按照以下方式导入： index js ``` import ex from \" /ex json\"; // if 'ex' is localization key then enter it like so in `messages` to expose it const messages = { ex: ex[0], }; export default messages; ``` 本地运行测验应用程序 前置条件 一个 GitHub 账户 Node js 和 Git 安装与设置 从这个 模板 创建一个代码库 克隆你的新代码库，并导航到 quiz-app 文件夹 bash git clone https://githubcom/your-github-organization/repo-name\ncd repo-name/quiz-app\n安装 npm 包和依赖项\nbash\nnpm install\n构建应用程序\n要构建解决方案，请运行：\nbash\nnpm run build\n启动应用程序\n要运行解决方案，请运行：\nbash\nnpm run dev\n[可选] 代码检查\n要确保代码通过检查，请运行：\nbash\nnpm run lint\n将测验应用程序部署到 Azure\n前置条件\n一个 Azure 订阅。你可以在 这里 免费注册。\n部署此测验应用程序的费用估算：免费\n登录 Azure 后，选择一个订阅和资源组，然后：\n静态 Web 应用详情：提供一个名称并选择一个托管计划\nGitHub 登录：将部署源设置为 GitHub，然后登录并填写表单中的必填字段：\n组织 – 选择你的组织。\n代码库 – 选择 Web Dev for Beginners 课程代码库。\n分支 - 选择一个分支（main）\n构建预设：Azure Static Web Apps 使用检测算法来识别应用程序中使用的框架。\n应用位置 -",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5994,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 529,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "668680634d0ddeea085c8ffa12e22403",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "测验应用程序",
    "content": "从这个 模板 创建一个代码库 克隆你的新代码库，并导航到 quiz-app 文件夹 bash git clone https://githubcom/your-github-organization/repo-name cd repo-name/quiz-app 安装 npm 包和依赖项 bash npm install 构建应用程序 要构建解决方案，请运行： bash npm run build 启动应用程序 要运行解决方案，请运行： bash npm run dev [可选] 代码检查 要确保代码通过检查，请运行： bash npm run lint 将测验应用程序部署到 Azure 前置条件 一个 Azure 订阅。你可以在 这里 免费注册。 部署此测验应用程序的费用估算：免费 登录 Azure 后，选择一个订阅和资源组，然后： 静态 Web 应用详情：提供一个名称并选择一个托管计划 GitHub 登录：将部署源设置为 GitHub，然后登录并填写表单中的必填字段： 组织 – 选择你的组织。 代码库 – 选择 Web Dev for Beginners 课程代码库。 分支 - 选择一个分支（main） 构建预设：Azure Static Web Apps 使用检测算法来识别应用程序中使用的框架。 应用位置 -/quiz-app\nAPI 位置 -\n输出位置 - dist\n部署：点击“Review + Create”，然后点击“Create”\n部署完成后，一个工作流文件将被创建在代码库的",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5994,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "0aee93a2d2bc5388f000a46811cd23a7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "测验应用程序",
    "content": "cd repo-name/quiz-app 安装 npm 包和依赖项 bash npm install 构建应用程序 要构建解决方案，请运行： bash npm run build 启动应用程序 要运行解决方案，请运行： bash npm run dev [可选] 代码检查 要确保代码通过检查，请运行： bash npm run lint 将测验应用程序部署到 Azure 前置条件 一个 Azure 订阅。你可以在 这里 免费注册。 部署此测验应用程序的费用估算：免费 登录 Azure 后，选择一个订阅和资源组，然后： 静态 Web 应用详情：提供一个名称并选择一个托管计划 GitHub 登录：将部署源设置为 GitHub，然后登录并填写表单中的必填字段： 组织 – 选择你的组织。 代码库 – 选择 Web Dev for Beginners 课程代码库。 分支 - 选择一个分支（main） 构建预设：Azure Static Web Apps 使用检测算法来识别应用程序中使用的框架。 应用位置 -/quiz-app API 位置 - 输出位置 - dist 部署：点击“Review + Create”，然后点击“Create” 部署完成后，一个工作流文件将被创建在代码库的github 目录中。这个工作流文件包含触发应用程序重新部署到 Azure 的事件指令，例如，在分支 main 上的 push 等。\n工作流文件示例\n以下是 GitHub Actions 工作流文件的示例：\nname: Azure Static Web Apps CI/CD\n```\non:\npush:\nbranches:\n- main\npull_request:\ntypes: [opened, synchronize, reopened, closed]\nbranches:\n- main\njobs:\nbuild_and_deploy_job:\nruns-on: ubuntu-latest\nname: Build and Deploy Job\nsteps:\n- uses: actions/checkout@v2\n- name: Build And Deploy\nid: builddeploy\nuses: Azure/static-web-apps-deploy@v1\nwith:\nazure_static_web_apps_api_token: ${{ secrets",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5994,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 523,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "397fe98daef65818bd0846ca12c84bef",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "测验应用程序",
    "content": "构建预设：Azure Static Web Apps 使用检测算法来识别应用程序中使用的框架。 应用位置 -/quiz-app API 位置 - 输出位置 - dist 部署：点击“Review + Create”，然后点击“Create” 部署完成后，一个工作流文件将被创建在代码库的github 目录中。这个工作流文件包含触发应用程序重新部署到 Azure 的事件指令，例如，在分支 main 上的 push 等。 工作流文件示例 以下是 GitHub Actions 工作流文件的示例： name: Azure Static Web Apps CI/CD ``` on: push: branches: - main pull_request: types: [opened, synchronize, reopened, closed] branches: - main jobs: build_and_deploy_job: runs-on: ubuntu-latest name: Build and Deploy Job steps: - uses: actions/checkout@v2 - name: Build And Deploy id: builddeploy uses: Azure/static-web-apps-deploy@v1 with: azure_static_web_apps_api_token: ${{ secretsAZURE_STATIC_WEB_APPS_API_TOKEN }}\nrepo_token: ${{ secrets",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5994,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "73e7010d21f3b420288ba37ea84896c3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
    "source_type": "git_repo",
    "title": "测验应用程序",
    "content": "使用检测算法来识别应用程序中使用的框架。 应用位置 -/quiz-app API 位置 - 输出位置 - dist 部署：点击“Review + Create”，然后点击“Create” 部署完成后，一个工作流文件将被创建在代码库的github 目录中。这个工作流文件包含触发应用程序重新部署到 Azure 的事件指令，例如，在分支 main 上的 push 等。 工作流文件示例 以下是 GitHub Actions 工作流文件的示例： name: Azure Static Web Apps CI/CD ``` on: push: branches: - main pull_request: types: [opened, synchronize, reopened, closed] branches: - main jobs: build_and_deploy_job: runs-on: ubuntu-latest name: Build and Deploy Job steps: - uses: actions/checkout@v2 - name: Build And Deploy id: builddeploy uses: Azure/static-web-apps-deploy@v1 with: azure_static_web_apps_api_token: ${{ secretsAZURE_STATIC_WEB_APPS_API_TOKEN }} repo_token: ${{ secretsGITHUB_TOKEN }}\naction: \"upload\"\napp_location: \"quiz-app\" # App source code path\napi_location: \"\"API source code path optional\noutput_location: \"dist\" #Built app content directory - optional\n```\n部署后：部署完成后，点击“Go to Deployment”，然后点击“View app in browser”。\n当你的 GitHub Action（工作流）成功执行后，刷新页面即可查看你的应用程序。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5994,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\quiz-app\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "5b5f4fd147ccab3f4cae89a14e516d87",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "使用 vscode dev 创建简历网站\n想象一下，当招聘人员向你索要简历时，你可以直接发送一个网址给他们，这会有多酷呢？ 😎\n目标\n完成此任务后，你将学会：\n创建一个网站来展示你的简历\n前置条件\n一个 GitHub 账号。如果你还没有账号，请访问 GitHub 并创建一个账号。\n步骤\n步骤 1： 创建一个新的 GitHub 仓库，并命名为 my-resume\n步骤 2： 在你的仓库中创建一个 index html 文件。我们需要在 github com 上至少添加一个文件，因为你无法在 vscode dev 中打开一个空的仓库。\n点击 创建新文件 链接，输入文件名 index html，然后选择 提交新文件 按钮。\n步骤 3： 打开 VSCode dev，选择 打开远程仓库 按钮。\n复制你刚刚为简历网站创建的仓库的 URL，并将其粘贴到输入框中：\n将 your-username 替换为你的 GitHub 用户名\nhttps://github com/your-username/my-resume\n✅ 如果成功，你将在浏览器中的文本编辑器中看到你的项目和 index html 文件。\n步骤 4： 打开 index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "24ca90ae8ab5c40b3e5eec96229ea93b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "使用 vscode dev 创建简历网站\n想象一下，当招聘人员向你索要简历时，你可以直接发送一个网址给他们，这会有多酷呢？ 😎\n目标\n完成此任务后，你将学会：\n创建一个网站来展示你的简历\n前置条件\n一个 GitHub 账号。如果你还没有账号，请访问 GitHub 并创建一个账号。\n步骤\n步骤 1： 创建一个新的 GitHub 仓库，并命名为 my-resume\n步骤 2： 在你的仓库中创建一个 index html 文件。我们需要在 github com 上至少添加一个文件，因为你无法在 vscode dev 中打开一个空的仓库。\n点击 创建新文件 链接，输入文件名 index html，然后选择 提交新文件 按钮。\n步骤 3： 打开 VSCode dev，选择 打开远程仓库 按钮。\n复制你刚刚为简历网站创建的仓库的 URL，并将其粘贴到输入框中：\n将 your-username 替换为你的 GitHub 用户名\nhttps://github com/your-username/my-resume\n✅ 如果成功，你将在浏览器中的文本编辑器中看到你的项目和 index html 文件。\n步骤 4： 打开 indexhtml 文件，将以下代码粘贴到代码区域并保存。\n负责简历网站内容的 HTML 代码。\n你的名字在这里！\n你的名字在这里！\n你的职位！\n联系方式\n在这里填写你的邮箱\n在这里填写你的用户名！\n在这里填写你的用户名！\n技能\n技能 1！\n技能 2！\n技能 3！\n技能 4！\n教育背景\n在这里填写你的课程！\n在这里填写你的学校！\n开始日期 - 结束日期\n关于我\n在这里写一些关于自己的介绍！\n工作经历\n职位名称\n在这里填写组织名称 | 开始月份 – 结束月份\n任务 1 - 写下你做了什么！\n任务 2 - 写下你做了什么！\n写下你的贡献的成果/影响\n职位名称 2\n在这里填写组织名称 | 开始月份 – 结束月份\n任务 1 - 写下你做了什么！\n任务 2 - 写下你做了什么！\n写下你的贡献的成果/影响\n将你的简历信息替换掉 HTML 代码中的 占位文本。\n步骤 5： 在 My-Resume 文件夹上悬停，点击 新建文件",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 718,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "636d461437ceea58f524f54a80eb4103",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "html 文件。 步骤 4： 打开 indexhtml 文件，将以下代码粘贴到代码区域并保存。 负责简历网站内容的 HTML 代码。 你的名字在这里！ 你的名字在这里！ 你的职位！ 联系方式 在这里填写你的邮箱 在这里填写你的用户名！ 在这里填写你的用户名！ 技能 技能 1！ 技能 2！ 技能 3！ 技能 4！ 教育背景 在这里填写你的课程！ 在这里填写你的学校！ 开始日期 - 结束日期 关于我 在这里写一些关于自己的介绍！ 工作经历 职位名称 在这里填写组织名称 | 开始月份 – 结束月份 任务 1 - 写下你做了什么！ 任务 2 - 写下你做了什么！ 写下你的贡献的成果/影响 职位名称 2 在这里填写组织名称 | 开始月份 – 结束月份 任务 1 - 写下你做了什么！ 任务 2 - 写下你做了什么！ 写下你的贡献的成果/影响 将你的简历信息替换掉 HTML 代码中的 占位文本。 步骤 5： 在 My-Resume 文件夹上悬停，点击 新建文件图标，并在项目中创建两个新文件：style css 和 codeswing json 文件。\n步骤 6： 打开 style css 文件，将以下代码粘贴进去并保存。\n用于格式化网站布局的 CSS 代码。\nbody {\nfont-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\nfont-size: 16px;\nmax-width: 960px;\nmargin: auto;\n}\nh1 {\nfont-size: 3em;\nletter-spacing:",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "a738c2eff0f57f65b4f2ca36f756561d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "职位名称 在这里填写组织名称 | 开始月份 – 结束月份 任务 1 - 写下你做了什么！ 任务 2 - 写下你做了什么！ 写下你的贡献的成果/影响 职位名称 2 在这里填写组织名称 | 开始月份 – 结束月份 任务 1 - 写下你做了什么！ 任务 2 - 写下你做了什么！ 写下你的贡献的成果/影响 将你的简历信息替换掉 HTML 代码中的 占位文本。 步骤 5： 在 My-Resume 文件夹上悬停，点击 新建文件图标，并在项目中创建两个新文件：style css 和 codeswing json 文件。 步骤 6： 打开 style css 文件，将以下代码粘贴进去并保存。 用于格式化网站布局的 CSS 代码。 body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 16px; max-width: 960px; margin: auto; } h1 { font-size: 3em; letter-spacing:6em;\npadding-top: 1em;\npadding-bottom: 1em;\n}\nh2 {\nfont-size: 1 5em;\npadding-bottom: 1em;\n}\nh3 {\nfont-size: 1em;\npadding-bottom: 1em;\n}\nmain {\ndisplay: grid;\ngrid-template-columns: 40% 60%;\nmargin-top: 3em;\n}\nheader {\ntext-align: center;\nmargin: auto 2em;\n}\nsection {\nmargin: auto 1em 4em 2em;\n}\ni {\nmargin-right: 5em;\n}\np {\nmargin:",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "a03777cc205f8a6a5af60af1af2fd661",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "代码。 body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 16px; max-width: 960px; margin: auto; } h1 { font-size: 3em; letter-spacing:6em; padding-top: 1em; padding-bottom: 1em; } h2 { font-size: 1 5em; padding-bottom: 1em; } h3 { font-size: 1em; padding-bottom: 1em; } main { display: grid; grid-template-columns: 40% 60%; margin-top: 3em; } header { text-align: center; margin: auto 2em; } section { margin: auto 1em 4em 2em; } i { margin-right: 5em; } p { margin:2em auto\n}\nhr {\nborder: none;\nbackground-color: lightgray;\nheight: 1px;\n}\nh1, h2, h3 {\nfont-weight: 100;\nmargin-bottom: 0;\n}\n#mainLeft {\nborder-right: 1px solid lightgray;\n}\n步骤 6： 打开 codeswing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "887b275a499b69ecbaeaf04822f887e7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "5em; padding-bottom: 1em; } h3 { font-size: 1em; padding-bottom: 1em; } main { display: grid; grid-template-columns: 40% 60%; margin-top: 3em; } header { text-align: center; margin: auto 2em; } section { margin: auto 1em 4em 2em; } i { margin-right: 5em; } p { margin:2em auto } hr { border: none; background-color: lightgray; height: 1px; } h1, h2, h3 { font-weight: 100; margin-bottom: 0; } #mainLeft { border-right: 1px solid lightgray; } 步骤 6： 打开 codeswingjson 文件，将以下代码粘贴进去并保存。\n{\n\"scripts\": [],\n\"styles\": []\n}\n步骤 7： 安装 Codeswing 扩展，以在代码区域中可视化简历网站。\n点击活动栏上的 扩展 图标，输入 Codeswing。点击扩展栏上的 蓝色安装按钮 或代码区域中出现的安装按钮以加载更多信息并安装扩展。安装扩展后，观察你的代码区域以查看项目的变化 😃\n安装扩展后，你的屏幕上会显示以下内容。\n如果你对所做的更改感到满意，请悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。\n输入提交信息 (对项目所做更改的描述)，然后点击 勾选 按钮提交更改。完成项目后，选择左上角的汉堡菜单图标返回 GitHub 上的仓库。\n恭喜 🎉 你已经通过几个简单的步骤使用 vscode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "7648fc9e571fb20cac228c61dbee2f7d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "2em; } i { margin-right: 5em; } p { margin:2em auto } hr { border: none; background-color: lightgray; height: 1px; } h1, h2, h3 { font-weight: 100; margin-bottom: 0; } #mainLeft { border-right: 1px solid lightgray; } 步骤 6： 打开 codeswingjson 文件，将以下代码粘贴进去并保存。 { \"scripts\": [], \"styles\": [] } 步骤 7： 安装 Codeswing 扩展，以在代码区域中可视化简历网站。 点击活动栏上的 扩展 图标，输入 Codeswing。点击扩展栏上的 蓝色安装按钮 或代码区域中出现的安装按钮以加载更多信息并安装扩展。安装扩展后，观察你的代码区域以查看项目的变化 😃 安装扩展后，你的屏幕上会显示以下内容。 如果你对所做的更改感到满意，请悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。 输入提交信息 (对项目所做更改的描述)，然后点击 勾选 按钮提交更改。完成项目后，选择左上角的汉堡菜单图标返回 GitHub 上的仓库。 恭喜 🎉 你已经通过几个简单的步骤使用 vscodedev 创建了你的简历网站。\n🚀 挑战\n打开一个你有权限进行更改的远程仓库，更新一些文件。接下来，尝试创建一个包含更改的新分支并发起 Pull Request。\n复习与自学\n阅读更多关于 VSCode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "56fc8d5495492d00f27b5649f805d358",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
    "source_type": "git_repo",
    "title": "你的名字在这里！",
    "content": "margin:2em auto } hr { border: none; background-color: lightgray; height: 1px; } h1, h2, h3 { font-weight: 100; margin-bottom: 0; } #mainLeft { border-right: 1px solid lightgray; } 步骤 6： 打开 codeswingjson 文件，将以下代码粘贴进去并保存。 { \"scripts\": [], \"styles\": [] } 步骤 7： 安装 Codeswing 扩展，以在代码区域中可视化简历网站。 点击活动栏上的 扩展 图标，输入 Codeswing。点击扩展栏上的 蓝色安装按钮 或代码区域中出现的安装按钮以加载更多信息并安装扩展。安装扩展后，观察你的代码区域以查看项目的变化 😃 安装扩展后，你的屏幕上会显示以下内容。 如果你对所做的更改感到满意，请悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。 输入提交信息 (对项目所做更改的描述)，然后点击 勾选 按钮提交更改。完成项目后，选择左上角的汉堡菜单图标返回 GitHub 上的仓库。 恭喜 🎉 你已经通过几个简单的步骤使用 vscodedev 创建了你的简历网站。 🚀 挑战 打开一个你有权限进行更改的远程仓库，更新一些文件。接下来，尝试创建一个包含更改的新分支并发起 Pull Request。 复习与自学 阅读更多关于 VSCodedev 及其其他功能的内容。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9999,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "d9494c4430e74f640d910faa55042c07",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\assignment.md",
    "source_type": "git_repo",
    "title": "改进路由",
    "content": "改进路由\n说明\n当前的路由声明仅包含模板 ID，但在显示新页面时，有时需要更多内容。让我们通过以下两个功能来改进路由实现：\n为每个模板设置标题，并在模板更改时更新窗口标题为新标题。\n添加一个选项，在模板更改后运行一些代码。我们希望每次显示仪表盘页面时，在开发者控制台打印 'Dashboard is shown'。\n评分标准\n| 标准     | 卓越                                                                                                                          | 合格                                                                                                                                                                                  | 需要改进                                       |\n| -------- | ---------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------- |\n|          | 两个功能均已实现并正常工作。标题和代码添加功能也适用于在 routes 声明中新增的路由。                                           | 两个功能正常工作，但行为是硬编码的，无法通过 routes 声明进行配置。添加第三个带标题和代码功能的路由无法正常工作或仅部分工作。                                                        | 缺少一个功能或某个功能未正常工作。             |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2370,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "29b957c8b05b4f5e9db34248f21b9bf5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\assignment.md",
    "source_type": "git_repo",
    "title": "为您的银行应用程序设计样式",
    "content": "为您的银行应用程序设计样式\n指导说明\n创建一个新的 styles.css 文件，并在当前的 index.html 文件中添加一个链接到该文件。在您刚创建的 CSS 文件中，添加一些样式，使 登录 和 仪表盘 页面看起来整洁美观。尝试创建一个配色主题，为您的应用程序赋予独特的品牌风格。\n提示：如果需要，您可以修改 HTML 并添加新的元素和类。\n评分标准\n| 标准     | 卓越                                                                                                                   | 合格                                                                         | 需要改进                                                                                     |\n| -------- | ----------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------- |\n|          | 所有页面看起来干净且易读，具有一致的配色主题，不同的部分清晰地突显出来。                                                 | 页面有样式，但没有主题，或者部分没有清晰的分隔。                                 | 页面缺乏样式，部分看起来杂乱无章，信息难以阅读。                                             |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2166,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9e314858490c2fa31d0ffd970a593996",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "使用代码编辑器\n本课程介绍了使用 VSCode dev 这一基于网页的代码编辑器的基础知识，让你无需在电脑上安装任何软件即可修改代码并为项目做出贡献。\n学习目标\n在本课程中，你将学习如何：\n在代码项目中使用代码编辑器\n使用版本控制跟踪代码变更\n自定义编辑器以适应开发需求\n前置条件\n在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。\n简介\n代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。\n开始使用 VSCode dev\nVSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 0,
    "total_chunks": 21
  },
  {
    "id": "bfc388dfb58b38829c2075b350304dba",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "使用代码编辑器\n本课程介绍了使用 VSCode dev 这一基于网页的代码编辑器的基础知识，让你无需在电脑上安装任何软件即可修改代码并为项目做出贡献。\n学习目标\n在本课程中，你将学习如何：\n在代码项目中使用代码编辑器\n使用版本控制跟踪代码变更\n自定义编辑器以适应开发需求\n前置条件\n在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。\n简介\n代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。\n开始使用 VSCode dev\nVSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。\n加载完成后，界面应类似于以下图片：\n界面主要分为三个部分，从左到右依次是：\n活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。\n默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。\n最右侧的代码区域。\n点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。\n当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。\n打开 GitHub 仓库\n首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 1,
    "total_chunks": 21
  },
  {
    "id": "21455cb8f17785f5035bc55eb629b36b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "使用代码编辑器\n本课程介绍了使用 VSCode dev 这一基于网页的代码编辑器的基础知识，让你无需在电脑上安装任何软件即可修改代码并为项目做出贡献。\n学习目标\n在本课程中，你将学习如何：\n在代码项目中使用代码编辑器\n使用版本控制跟踪代码变更\n自定义编辑器以适应开发需求\n前置条件\n在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。\n简介\n代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。\n开始使用 VSCode dev\nVSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。\n加载完成后，界面应类似于以下图片：\n界面主要分为三个部分，从左到右依次是：\n活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。\n默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。\n最右侧的代码区域。\n点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。\n当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。\n打开 GitHub 仓库\n首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。\n1使用编辑器\n使用编辑器本身打开远程仓库。如果你访问 VSCode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 580,
    "chunk_index": 2,
    "total_chunks": 21
  },
  {
    "id": "b480b906239fc86240b3513e37c2e2c5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "使用代码编辑器\n本课程介绍了使用 VSCode dev 这一基于网页的代码编辑器的基础知识，让你无需在电脑上安装任何软件即可修改代码并为项目做出贡献。\n学习目标\n在本课程中，你将学习如何：\n在代码项目中使用代码编辑器\n使用版本控制跟踪代码变更\n自定义编辑器以适应开发需求\n前置条件\n在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。\n简介\n代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。\n开始使用 VSCode dev\nVSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。\n加载完成后，界面应类似于以下图片：\n界面主要分为三个部分，从左到右依次是：\n活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。\n默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。\n最右侧的代码区域。\n点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。\n当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。\n打开 GitHub 仓库\n首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。\n1使用编辑器\n使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮：\n你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。\n打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中：\nhttps://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 763,
    "chunk_index": 3,
    "total_chunks": 21
  },
  {
    "id": "ad1969790f7e6e32515e29e3e6906773",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "使用代码编辑器\n本课程介绍了使用 VSCode dev 这一基于网页的代码编辑器的基础知识，让你无需在电脑上安装任何软件即可修改代码并为项目做出贡献。\n学习目标\n在本课程中，你将学习如何：\n在代码项目中使用代码编辑器\n使用版本控制跟踪代码变更\n自定义编辑器以适应开发需求\n前置条件\n在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。\n简介\n代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。\n开始使用 VSCode dev\nVSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。\n加载完成后，界面应类似于以下图片：\n界面主要分为三个部分，从左到右依次是：\n活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。\n默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。\n最右侧的代码区域。\n点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。\n当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。\n打开 GitHub 仓库\n首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。\n1使用编辑器\n使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮：\n你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。\n打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中：\nhttps://githubcom/microsoft/Web-Dev-For-Beginners\n✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 800,
    "chunk_index": 4,
    "total_chunks": 21
  },
  {
    "id": "fa9153b09dd943bdbc8d6e3f4c69eb48",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "使用代码编辑器\n本课程介绍了使用 VSCode dev 这一基于网页的代码编辑器的基础知识，让你无需在电脑上安装任何软件即可修改代码并为项目做出贡献。\n学习目标\n在本课程中，你将学习如何：\n在代码项目中使用代码编辑器\n使用版本控制跟踪代码变更\n自定义编辑器以适应开发需求\n前置条件\n在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。\n简介\n代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。\n开始使用 VSCode dev\nVSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。\n加载完成后，界面应类似于以下图片：\n界面主要分为三个部分，从左到右依次是：\n活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。\n默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。\n最右侧的代码区域。\n点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。\n当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。\n打开 GitHub 仓库\n首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。\n1使用编辑器\n使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮：\n你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。\n打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中：\nhttps://githubcom/microsoft/Web-Dev-For-Beginners\n✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。\n2使用 URL\n你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 830,
    "chunk_index": 5,
    "total_chunks": 21
  },
  {
    "id": "289aecffa95fc8c643f76dbfbd730833",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "VSCode dev 这一基于网页的代码编辑器的基础知识，让你无需在电脑上安装任何软件即可修改代码并为项目做出贡献。 学习目标 在本课程中，你将学习如何： 在代码项目中使用代码编辑器 使用版本控制跟踪代码变更 自定义编辑器以适应开发需求 前置条件 在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。 简介 代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。 开始使用 VSCode dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 852,
    "chunk_index": 6,
    "total_chunks": 21
  },
  {
    "id": "eb6cc85b840c0951d77f3806a8e07123",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "学习目标 在本课程中，你将学习如何： 在代码项目中使用代码编辑器 使用版本控制跟踪代码变更 自定义编辑器以适应开发需求 前置条件 在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。 简介 代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。 开始使用 VSCode dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 815,
    "chunk_index": 7,
    "total_chunks": 21
  },
  {
    "id": "6290ced1da0a73896bd282ad2093c4fc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "使用版本控制跟踪代码变更 自定义编辑器以适应开发需求 前置条件 在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。 简介 代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。 开始使用 VSCode dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。\n编辑文件\n在浏览器或 VSCode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 813,
    "chunk_index": 8,
    "total_chunks": 21
  },
  {
    "id": "3471f256880c7d2d2128571920a433df",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "在开始之前，你需要创建一个 GitHub 账户。如果还没有账户，请访问 GitHub 并注册一个新账户。 简介 代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。 开始使用 VSCode dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 805,
    "chunk_index": 9,
    "total_chunks": 21
  },
  {
    "id": "632aeb22b46536f7d1c90f788e5afacb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "账户。如果还没有账户，请访问 GitHub 并注册一个新账户。 简介 代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。 开始使用 VSCode dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。 1创建新文件\n你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 860,
    "chunk_index": 10,
    "total_chunks": 21
  },
  {
    "id": "2443dbbad2304009a07bacebe88b9000",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "简介 代码编辑器是编写程序和协作现有代码项目的重要工具。一旦掌握了编辑器的基础知识以及如何利用其功能，你就可以在编写代码时灵活应用这些技能。 开始使用 VSCode dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。 1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 851,
    "chunk_index": 11,
    "total_chunks": 21
  },
  {
    "id": "9b8f644f6edc98382749b704eaee38b7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "开始使用 VSCode dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。 1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。 2编辑并保存仓库中的文件\n使用 vscode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 795,
    "chunk_index": 12,
    "total_chunks": 21
  },
  {
    "id": "cb527b8aeae6ae9b7a5e0eb6b442251a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "dev VSCode dev 是一个基于网页的代码编辑器。你无需安装任何软件，只需像打开其他网站一样打开它即可。要开始使用编辑器，请访问以下链接：https://vscodedev。如果你尚未登录 GitHub，请按照提示登录或创建新账户后再登录。 加载完成后，界面应类似于以下图片： 界面主要分为三个部分，从左到右依次是： 活动栏，包括一些图标，例如放大镜 🔎、齿轮 ⚙️ 等。 默认展开的活动栏，称为 侧边栏，通常显示为 资源管理器。 最右侧的代码区域。 点击每个图标可以显示不同的菜单。完成后，点击 资源管理器 图标返回初始界面。 当你开始创建或修改代码时，操作会发生在最右侧的代码区域。你也可以在这里查看现有代码，接下来我们将进行相关操作。 打开 GitHub 仓库 首先需要打开一个 GitHub 仓库。有多种方式可以打开仓库，本节将介绍两种方法，帮助你开始修改代码。 1使用编辑器 使用编辑器本身打开远程仓库。如果你访问 VSCodedev，会看到一个 \"Open Remote Repository\" 按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。 1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。 2编辑并保存仓库中的文件 使用 vscodedev 可以快速更新项目，而无需在本地加载任何软件。\n要更新代码，点击活动栏中的 资源管理器 图标，查看仓库中的文件和文件夹。\n选择一个文件，将其打开到代码区域，进行修改并保存。\n完成项目更新后，选择 源代码控制 图标，查看你对仓库所做的所有更改。\n要查看项目的更改，选择扩展活动栏中 Changes 文件夹中的文件。这将打开一个 工作树，让你直观地查看文件的更改。红色表示项目中删除的内容，绿色表示新增内容。\n如果对所做的更改满意，将鼠标悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。暂存意味着准备好将更改提交到 GitHub。\n如果对某些更改不满意并希望丢弃它们，将鼠标悬停在 Changes 文件夹上，选择 撤销 图标。\n然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。\n完成项目工作后，选择左上角的 汉堡菜单图标 返回到 github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1129,
    "chunk_index": 13,
    "total_chunks": 21
  },
  {
    "id": "862072d62214300e41485d06f957e54d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "按钮： 你也可以使用命令面板。命令面板是一个输入框，你可以在其中输入任何与命令或操作相关的词语来找到并执行相应命令。点击左上角菜单，选择 View，然后选择 Command Palette，或者使用以下快捷键：Ctrl-Shift-P（MacOS 上为 Command-Shift-P）。 打开菜单后，输入 open remote repository，然后选择第一个选项。你参与的或最近打开的多个仓库会显示出来。你也可以使用完整的 GitHub URL 来选择一个仓库。将以下 URL 粘贴到输入框中： https://githubcom/microsoft/Web-Dev-For-Beginners ✅ 如果成功，你会看到该仓库的所有文件加载到文本编辑器中。 2使用 URL 你也可以直接使用 URL 加载仓库。例如，当前仓库的完整 URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。 1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。 2编辑并保存仓库中的文件 使用 vscodedev 可以快速更新项目，而无需在本地加载任何软件。 要更新代码，点击活动栏中的 资源管理器 图标，查看仓库中的文件和文件夹。 选择一个文件，将其打开到代码区域，进行修改并保存。 完成项目更新后，选择 源代码控制 图标，查看你对仓库所做的所有更改。 要查看项目的更改，选择扩展活动栏中 Changes 文件夹中的文件。这将打开一个 工作树，让你直观地查看文件的更改。红色表示项目中删除的内容，绿色表示新增内容。 如果对所做的更改满意，将鼠标悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。暂存意味着准备好将更改提交到 GitHub。 如果对某些更改不满意并希望丢弃它们，将鼠标悬停在 Changes 文件夹上，选择 撤销 图标。 然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。 完成项目工作后，选择左上角的 汉堡菜单图标 返回到 githubcom 上的仓库。\n使用扩展\n在 VSCode 中安装扩展可以为编辑器添加新功能，并自定义开发环境选项，从而提升开发工作流程。这些扩展还可以为多种编程语言提供支持，通常分为通用扩展或基于语言的扩展。\n要浏览所有可用扩展的列表，点击活动栏中的 扩展图标，然后在标有 \"Search Extensions in Marketplace\" 的文本框中输入扩展名称。\n你会看到一个扩展列表，每个扩展都包含 扩展名称、发布者名称、一句话描述、下载次数 和 星级评分。\n你还可以通过展开 已安装文件夹 查看所有已安装的扩展，通过 热门文件夹 查看大多数开发者使用的热门扩展，以及通过 推荐文件夹 查看基于同一工作区用户或最近打开文件推荐的扩展。\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1040,
    "chunk_index": 14,
    "total_chunks": 21
  },
  {
    "id": "7218df4b618e8e4e027d1da92afb01b8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "URL 是 https://githubcom/microsoft/Web-Dev-For-Beginners，但你可以将 GitHub 域名替换为 VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。 1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。 2编辑并保存仓库中的文件 使用 vscodedev 可以快速更新项目，而无需在本地加载任何软件。 要更新代码，点击活动栏中的 资源管理器 图标，查看仓库中的文件和文件夹。 选择一个文件，将其打开到代码区域，进行修改并保存。 完成项目更新后，选择 源代码控制 图标，查看你对仓库所做的所有更改。 要查看项目的更改，选择扩展活动栏中 Changes 文件夹中的文件。这将打开一个 工作树，让你直观地查看文件的更改。红色表示项目中删除的内容，绿色表示新增内容。 如果对所做的更改满意，将鼠标悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。暂存意味着准备好将更改提交到 GitHub。 如果对某些更改不满意并希望丢弃它们，将鼠标悬停在 Changes 文件夹上，选择 撤销 图标。 然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。 完成项目工作后，选择左上角的 汉堡菜单图标 返回到 githubcom 上的仓库。 使用扩展 在 VSCode 中安装扩展可以为编辑器添加新功能，并自定义开发环境选项，从而提升开发工作流程。这些扩展还可以为多种编程语言提供支持，通常分为通用扩展或基于语言的扩展。 要浏览所有可用扩展的列表，点击活动栏中的 扩展图标，然后在标有 \"Search Extensions in Marketplace\" 的文本框中输入扩展名称。 你会看到一个扩展列表，每个扩展都包含 扩展名称、发布者名称、一句话描述、下载次数 和 星级评分。 你还可以通过展开 已安装文件夹 查看所有已安装的扩展，通过 热门文件夹 查看大多数开发者使用的热门扩展，以及通过 推荐文件夹 查看基于同一工作区用户或最近打开文件推荐的扩展。 1安装扩展\n要安装扩展，在搜索框中输入扩展名称，点击扩展以在扩展活动栏中查看更多信息。\n你可以点击扩展活动栏中的 蓝色安装按钮 安装扩展，也可以在选择扩展后加载更多信息时使用代码区域中的安装按钮。\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 907,
    "chunk_index": 15,
    "total_chunks": 21
  },
  {
    "id": "664d7c58367e203bcb2391426d090588",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "VSCodedev/github，直接加载仓库。结果 URL 为 https://vscodedev/github/microsoft/Web-Dev-For-Beginners。 编辑文件 在浏览器或 VSCodedev 中打开仓库后，下一步就是更新或修改项目。 1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。 2编辑并保存仓库中的文件 使用 vscodedev 可以快速更新项目，而无需在本地加载任何软件。 要更新代码，点击活动栏中的 资源管理器 图标，查看仓库中的文件和文件夹。 选择一个文件，将其打开到代码区域，进行修改并保存。 完成项目更新后，选择 源代码控制 图标，查看你对仓库所做的所有更改。 要查看项目的更改，选择扩展活动栏中 Changes 文件夹中的文件。这将打开一个 工作树，让你直观地查看文件的更改。红色表示项目中删除的内容，绿色表示新增内容。 如果对所做的更改满意，将鼠标悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。暂存意味着准备好将更改提交到 GitHub。 如果对某些更改不满意并希望丢弃它们，将鼠标悬停在 Changes 文件夹上，选择 撤销 图标。 然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。 完成项目工作后，选择左上角的 汉堡菜单图标 返回到 githubcom 上的仓库。 使用扩展 在 VSCode 中安装扩展可以为编辑器添加新功能，并自定义开发环境选项，从而提升开发工作流程。这些扩展还可以为多种编程语言提供支持，通常分为通用扩展或基于语言的扩展。 要浏览所有可用扩展的列表，点击活动栏中的 扩展图标，然后在标有 \"Search Extensions in Marketplace\" 的文本框中输入扩展名称。 你会看到一个扩展列表，每个扩展都包含 扩展名称、发布者名称、一句话描述、下载次数 和 星级评分。 你还可以通过展开 已安装文件夹 查看所有已安装的扩展，通过 热门文件夹 查看大多数开发者使用的热门扩展，以及通过 推荐文件夹 查看基于同一工作区用户或最近打开文件推荐的扩展。 1安装扩展 要安装扩展，在搜索框中输入扩展名称，点击扩展以在扩展活动栏中查看更多信息。 你可以点击扩展活动栏中的 蓝色安装按钮 安装扩展，也可以在选择扩展后加载更多信息时使用代码区域中的安装按钮。 2自定义扩展\n安装扩展后，你可能需要根据个人偏好修改其行为并进行自定义。为此，选择扩展图标，此时你的扩展会出现在 已安装文件夹 中，点击 齿轮图标 并导航到 扩展设置。\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 963,
    "chunk_index": 16,
    "total_chunks": 21
  },
  {
    "id": "e8e0f7ef7ffbe3e46d1f1a8a94e161c6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "中打开仓库后，下一步就是更新或修改项目。 1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。 2编辑并保存仓库中的文件 使用 vscodedev 可以快速更新项目，而无需在本地加载任何软件。 要更新代码，点击活动栏中的 资源管理器 图标，查看仓库中的文件和文件夹。 选择一个文件，将其打开到代码区域，进行修改并保存。 完成项目更新后，选择 源代码控制 图标，查看你对仓库所做的所有更改。 要查看项目的更改，选择扩展活动栏中 Changes 文件夹中的文件。这将打开一个 工作树，让你直观地查看文件的更改。红色表示项目中删除的内容，绿色表示新增内容。 如果对所做的更改满意，将鼠标悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。暂存意味着准备好将更改提交到 GitHub。 如果对某些更改不满意并希望丢弃它们，将鼠标悬停在 Changes 文件夹上，选择 撤销 图标。 然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。 完成项目工作后，选择左上角的 汉堡菜单图标 返回到 githubcom 上的仓库。 使用扩展 在 VSCode 中安装扩展可以为编辑器添加新功能，并自定义开发环境选项，从而提升开发工作流程。这些扩展还可以为多种编程语言提供支持，通常分为通用扩展或基于语言的扩展。 要浏览所有可用扩展的列表，点击活动栏中的 扩展图标，然后在标有 \"Search Extensions in Marketplace\" 的文本框中输入扩展名称。 你会看到一个扩展列表，每个扩展都包含 扩展名称、发布者名称、一句话描述、下载次数 和 星级评分。 你还可以通过展开 已安装文件夹 查看所有已安装的扩展，通过 热门文件夹 查看大多数开发者使用的热门扩展，以及通过 推荐文件夹 查看基于同一工作区用户或最近打开文件推荐的扩展。 1安装扩展 要安装扩展，在搜索框中输入扩展名称，点击扩展以在扩展活动栏中查看更多信息。 你可以点击扩展活动栏中的 蓝色安装按钮 安装扩展，也可以在选择扩展后加载更多信息时使用代码区域中的安装按钮。 2自定义扩展 安装扩展后，你可能需要根据个人偏好修改其行为并进行自定义。为此，选择扩展图标，此时你的扩展会出现在 已安装文件夹 中，点击 齿轮图标 并导航到 扩展设置。 3管理扩展\n安装并使用扩展后，vscode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 930,
    "chunk_index": 17,
    "total_chunks": 21
  },
  {
    "id": "d843c489e2d0f787032078d8347b5802",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "1创建新文件 你可以在现有文件夹中创建文件，也可以在根目录/文件夹中创建文件。要创建新文件，打开你希望保存文件的位置/目录，选择活动栏（左侧）中的 \"New file\" 图标，命名文件并按回车键。 2编辑并保存仓库中的文件 使用 vscodedev 可以快速更新项目，而无需在本地加载任何软件。 要更新代码，点击活动栏中的 资源管理器 图标，查看仓库中的文件和文件夹。 选择一个文件，将其打开到代码区域，进行修改并保存。 完成项目更新后，选择 源代码控制 图标，查看你对仓库所做的所有更改。 要查看项目的更改，选择扩展活动栏中 Changes 文件夹中的文件。这将打开一个 工作树，让你直观地查看文件的更改。红色表示项目中删除的内容，绿色表示新增内容。 如果对所做的更改满意，将鼠标悬停在 Changes 文件夹上，点击 + 按钮以暂存更改。暂存意味着准备好将更改提交到 GitHub。 如果对某些更改不满意并希望丢弃它们，将鼠标悬停在 Changes 文件夹上，选择 撤销 图标。 然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。 完成项目工作后，选择左上角的 汉堡菜单图标 返回到 githubcom 上的仓库。 使用扩展 在 VSCode 中安装扩展可以为编辑器添加新功能，并自定义开发环境选项，从而提升开发工作流程。这些扩展还可以为多种编程语言提供支持，通常分为通用扩展或基于语言的扩展。 要浏览所有可用扩展的列表，点击活动栏中的 扩展图标，然后在标有 \"Search Extensions in Marketplace\" 的文本框中输入扩展名称。 你会看到一个扩展列表，每个扩展都包含 扩展名称、发布者名称、一句话描述、下载次数 和 星级评分。 你还可以通过展开 已安装文件夹 查看所有已安装的扩展，通过 热门文件夹 查看大多数开发者使用的热门扩展，以及通过 推荐文件夹 查看基于同一工作区用户或最近打开文件推荐的扩展。 1安装扩展 要安装扩展，在搜索框中输入扩展名称，点击扩展以在扩展活动栏中查看更多信息。 你可以点击扩展活动栏中的 蓝色安装按钮 安装扩展，也可以在选择扩展后加载更多信息时使用代码区域中的安装按钮。 2自定义扩展 安装扩展后，你可能需要根据个人偏好修改其行为并进行自定义。为此，选择扩展图标，此时你的扩展会出现在 已安装文件夹 中，点击 齿轮图标 并导航到 扩展设置。 3管理扩展 安装并使用扩展后，vscodedev 提供了多种选项以满足不同需求来管理扩展。例如，你可以选择：\n禁用： （当你暂时不需要某个扩展但又不想完全卸载它时，可以选择禁用）\n在扩展活动栏中选择已安装的扩展 > 点击齿轮图标 > 选择 \"Disable\" 或 \"Disable (Workspace)\" 或者 在代码区域打开扩展并点击蓝色禁用按钮。\n卸载： 在扩展活动栏中选择已安装的扩展 > 点击齿轮图标 > 选择 \"Uninstall\" 或者 在代码区域打开扩展并点击蓝色卸载按钮。\n作业\n使用 vscode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1110,
    "chunk_index": 18,
    "total_chunks": 21
  },
  {
    "id": "3322f922f79ed655b22a3b17576d52eb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "如果对某些更改不满意并希望丢弃它们，将鼠标悬停在 Changes 文件夹上，选择 撤销 图标。 然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。 完成项目工作后，选择左上角的 汉堡菜单图标 返回到 githubcom 上的仓库。 使用扩展 在 VSCode 中安装扩展可以为编辑器添加新功能，并自定义开发环境选项，从而提升开发工作流程。这些扩展还可以为多种编程语言提供支持，通常分为通用扩展或基于语言的扩展。 要浏览所有可用扩展的列表，点击活动栏中的 扩展图标，然后在标有 \"Search Extensions in Marketplace\" 的文本框中输入扩展名称。 你会看到一个扩展列表，每个扩展都包含 扩展名称、发布者名称、一句话描述、下载次数 和 星级评分。 你还可以通过展开 已安装文件夹 查看所有已安装的扩展，通过 热门文件夹 查看大多数开发者使用的热门扩展，以及通过 推荐文件夹 查看基于同一工作区用户或最近打开文件推荐的扩展。 1安装扩展 要安装扩展，在搜索框中输入扩展名称，点击扩展以在扩展活动栏中查看更多信息。 你可以点击扩展活动栏中的 蓝色安装按钮 安装扩展，也可以在选择扩展后加载更多信息时使用代码区域中的安装按钮。 2自定义扩展 安装扩展后，你可能需要根据个人偏好修改其行为并进行自定义。为此，选择扩展图标，此时你的扩展会出现在 已安装文件夹 中，点击 齿轮图标 并导航到 扩展设置。 3管理扩展 安装并使用扩展后，vscodedev 提供了多种选项以满足不同需求来管理扩展。例如，你可以选择： 禁用： （当你暂时不需要某个扩展但又不想完全卸载它时，可以选择禁用） 在扩展活动栏中选择已安装的扩展 > 点击齿轮图标 > 选择 \"Disable\" 或 \"Disable (Workspace)\" 或者 在代码区域打开扩展并点击蓝色禁用按钮。 卸载： 在扩展活动栏中选择已安装的扩展 > 点击齿轮图标 > 选择 \"Uninstall\" 或者 在代码区域打开扩展并点击蓝色卸载按钮。 作业 使用 vscodedev 创建一个简历网站\n复习与自学\n阅读更多关于 VSCode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 804,
    "chunk_index": 19,
    "total_chunks": 21
  },
  {
    "id": "195cdf8076bb938533535cf776c4c59b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
    "source_type": "git_repo",
    "title": "使用代码编辑器",
    "content": "图标。 然后，输入一个 提交信息（描述你对项目所做的更改），点击 勾选图标 提交并推送更改。 完成项目工作后，选择左上角的 汉堡菜单图标 返回到 githubcom 上的仓库。 使用扩展 在 VSCode 中安装扩展可以为编辑器添加新功能，并自定义开发环境选项，从而提升开发工作流程。这些扩展还可以为多种编程语言提供支持，通常分为通用扩展或基于语言的扩展。 要浏览所有可用扩展的列表，点击活动栏中的 扩展图标，然后在标有 \"Search Extensions in Marketplace\" 的文本框中输入扩展名称。 你会看到一个扩展列表，每个扩展都包含 扩展名称、发布者名称、一句话描述、下载次数 和 星级评分。 你还可以通过展开 已安装文件夹 查看所有已安装的扩展，通过 热门文件夹 查看大多数开发者使用的热门扩展，以及通过 推荐文件夹 查看基于同一工作区用户或最近打开文件推荐的扩展。 1安装扩展 要安装扩展，在搜索框中输入扩展名称，点击扩展以在扩展活动栏中查看更多信息。 你可以点击扩展活动栏中的 蓝色安装按钮 安装扩展，也可以在选择扩展后加载更多信息时使用代码区域中的安装按钮。 2自定义扩展 安装扩展后，你可能需要根据个人偏好修改其行为并进行自定义。为此，选择扩展图标，此时你的扩展会出现在 已安装文件夹 中，点击 齿轮图标 并导航到 扩展设置。 3管理扩展 安装并使用扩展后，vscodedev 提供了多种选项以满足不同需求来管理扩展。例如，你可以选择： 禁用： （当你暂时不需要某个扩展但又不想完全卸载它时，可以选择禁用） 在扩展活动栏中选择已安装的扩展 > 点击齿轮图标 > 选择 \"Disable\" 或 \"Disable (Workspace)\" 或者 在代码区域打开扩展并点击蓝色禁用按钮。 卸载： 在扩展活动栏中选择已安装的扩展 > 点击齿轮图标 > 选择 \"Uninstall\" 或者 在代码区域打开扩展并点击蓝色卸载按钮。 作业 使用 vscodedev 创建一个简历网站 复习与自学 阅读更多关于 VSCodedev 及其其他功能的内容。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9243,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\8-code-editor\\1-using-a-code-editor\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 907,
    "chunk_index": 20,
    "total_chunks": 21
  },
  {
    "id": "eef1bfa9e617aaae92540befde04d677",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\assignment.md",
    "source_type": "git_repo",
    "title": "重构并注释你的代码",
    "content": "重构并注释你的代码\n说明\n随着代码库的增长，定期重构代码对于保持其可读性和长期可维护性至关重要。通过添加注释并重构你的 app.js 来提升代码质量：\n提取常量，例如服务器 API 基础 URL\n将相似的代码进行整合：例如，你可以创建一个 sendRequest() 函数，将 createAccount() 和 getAccount() 中使用的代码集中起来\n重新组织代码，使其更易于阅读，并添加注释\n评分标准\n| 标准     | 卓越                                                                                                                                                     | 合格                                                                                          | 需要改进                                                                     |\n| -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------- |\n|          | 代码已添加注释，分为不同部分且易于阅读。常量已提取，并创建了一个整合的 sendRequest() 函数。                                                             | 代码整洁，但仍可通过添加更多注释、提取常量或整合代码来进一步优化。                                                                  | 代码混乱，未添加注释，常量未提取，代码未整合。                                                   |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2383,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d9c76556587d8e57b15cdc6cacdc4403",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 0,
    "total_chunks": 55
  },
  {
    "id": "8cf5b9803c7408d2c7acc2185a84c518",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 1,
    "total_chunks": 55
  },
  {
    "id": "ff060058e980cc6522fd04796ed5dd04",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 828,
    "chunk_index": 2,
    "total_chunks": 55
  },
  {
    "id": "06a29692103d2931679c568d256bd1d7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 907,
    "chunk_index": 3,
    "total_chunks": 55
  },
  {
    "id": "8ddcea6842ed32ce41662d3295230eb7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 958,
    "chunk_index": 4,
    "total_chunks": 55
  },
  {
    "id": "3d19bfb13883a25286b33d5748265406",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用documentgetElementById。\n使用cloneNode克隆模板元素。\n将其附加到可见元素的DOM中，例如使用appendChild。\n✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？\n任务\n在项目文件夹中创建一个名为app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1045,
    "chunk_index": 5,
    "total_chunks": 55
  },
  {
    "id": "ce7238e70e4d1862df271b0e735add3b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用documentgetElementById。\n使用cloneNode克隆模板元素。\n将其附加到可见元素的DOM中，例如使用appendChild。\n✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？\n任务\n在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件：\n```html\n```\n现在在app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1071,
    "chunk_index": 6,
    "total_chunks": 55
  },
  {
    "id": "f7c68d4b20616ed5855d1a8b8a90257c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用documentgetElementById。\n使用cloneNode克隆模板元素。\n将其附加到可见元素的DOM中，例如使用appendChild。\n✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？\n任务\n在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件：\n```html\n```\n现在在appjs中，我们将创建一个新函数updateRoute：\njs\nfunction updateRoute(templateId) {\nconst template = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1096,
    "chunk_index": 7,
    "total_chunks": 55
  },
  {
    "id": "5671f703089c00ca32887aa835434c71",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用documentgetElementById。\n使用cloneNode克隆模板元素。\n将其附加到可见元素的DOM中，例如使用appendChild。\n✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？\n任务\n在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件：\n```html\n```\n现在在appjs中，我们将创建一个新函数updateRoute：\njs\nfunction updateRoute(templateId) {\nconst template = documentgetElementById(templateId);\nconst view = template",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1105,
    "chunk_index": 8,
    "total_chunks": 55
  },
  {
    "id": "1e0827b6d55d5cf8fb708757acea624d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用documentgetElementById。\n使用cloneNode克隆模板元素。\n将其附加到可见元素的DOM中，例如使用appendChild。\n✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？\n任务\n在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件：\n```html\n```\n现在在appjs中，我们将创建一个新函数updateRoute：\njs\nfunction updateRoute(templateId) {\nconst template = documentgetElementById(templateId);\nconst view = templatecontent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1106,
    "chunk_index": 9,
    "total_chunks": 55
  },
  {
    "id": "06a6119a36444ae5aa272fc9745a655e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用documentgetElementById。\n使用cloneNode克隆模板元素。\n将其附加到可见元素的DOM中，例如使用appendChild。\n✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？\n任务\n在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件：\n```html\n```\n现在在appjs中，我们将创建一个新函数updateRoute：\njs\nfunction updateRoute(templateId) {\nconst template = documentgetElementById(templateId);\nconst view = templatecontentcloneNode(true);\nconst app = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1114,
    "chunk_index": 10,
    "total_chunks": 55
  },
  {
    "id": "3512d74d262c62a813e358637c9c6e29",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "构建银行应用程序第一部分：Web应用中的HTML模板和路由\n课前测验\n课前测验\n简介\n自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。\n在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。\n前置条件\n您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。\n准备工作\n在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始：\n```html\nBank App\n```\nHTML模板\n如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便：\n切换屏幕时需要重新加载整个HTML，这可能会很慢。\n在不同屏幕之间共享数据会变得困难。\n另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。\n任务\n我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕：\n```html\nLoading```\n我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。\n提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。\n接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。\n```html\nLogin\n```\n然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分：\n一个包含标题和注销链接的页眉\n银行账户的当前余额\n一个显示交易记录的表格\n```html\nBalance: 100$\nTransactions\nDate\nObject\nAmount\n```\n提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。\n✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？\n使用JavaScript显示模板\n如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。\n实例化模板通常分为三个步骤：\n在DOM中检索模板元素，例如使用documentgetElementById。\n使用cloneNode克隆模板元素。\n将其附加到可见元素的DOM中，例如使用appendChild。\n✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？\n任务\n在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件：\n```html\n```\n现在在appjs中，我们将创建一个新函数updateRoute：\njs\nfunction updateRoute(templateId) {\nconst template = documentgetElementById(templateId);\nconst view = templatecontentcloneNode(true);\nconst app = documentgetElementById('app');\napp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1120,
    "chunk_index": 11,
    "total_chunks": 55
  },
  {
    "id": "2ec7b38730b2c7d857660bcc7ec60851",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "课前测验 课前测验 简介 自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。 在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。 前置条件 您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。 准备工作 在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始： ```html Bank App ``` HTML模板 如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便： 切换屏幕时需要重新加载整个HTML，这可能会很慢。 在不同屏幕之间共享数据会变得困难。 另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。 任务 我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = '';\napp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1093,
    "chunk_index": 12,
    "total_chunks": 55
  },
  {
    "id": "c51201cac6d38ad418effd56b2122386",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "自从浏览器中出现JavaScript以来，网站变得比以往更加互动和复杂。如今，Web技术通常被用来创建直接在浏览器中运行的功能齐全的应用程序，我们称之为Web应用程序。由于Web应用程序高度互动，用户不希望每次执行操作时都需要等待整个页面重新加载。因此，JavaScript被用来直接通过DOM更新HTML，以提供更流畅的用户体验。 在本课程中，我们将为创建银行Web应用程序奠定基础，使用HTML模板创建多个屏幕，这些屏幕可以显示和更新，而无需重新加载整个HTML页面。 前置条件 您需要一个本地Web服务器来测试我们将在本课程中构建的Web应用程序。如果您没有，可以安装Node js，并在项目文件夹中使用命令npx lite-server。它将创建一个本地Web服务器并在浏览器中打开您的应用程序。 准备工作 在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始： ```html Bank App ``` HTML模板 如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便： 切换屏幕时需要重新加载整个HTML，这可能会很慢。 在不同屏幕之间共享数据会变得困难。 另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。 任务 我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view);\n}\n我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。\n现在调用这个函数并传入一个模板，查看结果。\njs\nupdateRoute('login');\n✅ 代码app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1183,
    "chunk_index": 13,
    "total_chunks": 55
  },
  {
    "id": "9fec1a640f8dce92b0d1b2f164e98fb1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "在您的计算机上创建一个名为bank的文件夹，并在其中创建一个名为indexhtml的文件。我们将从这个HTML样板代码开始： ```html Bank App ``` HTML模板 如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便： 切换屏幕时需要重新加载整个HTML，这可能会很慢。 在不同屏幕之间共享数据会变得困难。 另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。 任务 我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？\n创建路由\n在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件：\nmywebsite/index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1011,
    "chunk_index": 14,
    "total_chunks": 55
  },
  {
    "id": "ca4159df2b748f6c6b75541927bf43e8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "HTML模板 如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便： 切换屏幕时需要重新加载整个HTML，这可能会很慢。 在不同屏幕之间共享数据会变得困难。 另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。 任务 我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml\nmywebsite/login",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 971,
    "chunk_index": 15,
    "total_chunks": 55
  },
  {
    "id": "f631479c1ed07067cd9d4ba6861d7873",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "如果您想为一个网页创建多个屏幕，一种解决方案是为每个要显示的屏幕创建一个HTML文件。然而，这种解决方案存在一些不便： 切换屏幕时需要重新加载整个HTML，这可能会很慢。 在不同屏幕之间共享数据会变得困难。 另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。 任务 我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml\nmywebsite/admin/index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 973,
    "chunk_index": 16,
    "total_chunks": 55
  },
  {
    "id": "4c7fe2c9145147cf7bd9c85c2a01a1ce",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "切换屏幕时需要重新加载整个HTML，这可能会很慢。 在不同屏幕之间共享数据会变得困难。 另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。 任务 我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml\n如果您以mywebsite为根创建一个Web服务器，URL映射将是：\nhttps://site",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 942,
    "chunk_index": 17,
    "total_chunks": 55
  },
  {
    "id": "a7afa819d643a6f7728e0973047f182d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "另一种方法是只使用一个HTML文件，并使用<template>元素定义多个HTML模板。模板是一个可重用的HTML块，浏览器不会直接显示它，需要通过JavaScript在运行时实例化。 任务 我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom            --> mywebsite/index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 903,
    "chunk_index": 18,
    "total_chunks": 55
  },
  {
    "id": "2dfc7e6e3cc324e6e43c05fd254c04bb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "我们将创建一个具有两个屏幕的银行应用程序：登录页面和仪表板页面。首先，在HTML主体中添加一个占位符元素，我们将用它来实例化应用程序的不同屏幕： ```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml\nhttps://site",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 842,
    "chunk_index": 19,
    "total_chunks": 55
  },
  {
    "id": "08dd10cf9bc3b7fdcf58511d9951e33b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/login",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 778,
    "chunk_index": 20,
    "total_chunks": 55
  },
  {
    "id": "e794f00136b27a96a679714127b66bdc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "```html Loading``` 我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/login",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 783,
    "chunk_index": 21,
    "total_chunks": 55
  },
  {
    "id": "227ab9f0541661a6dfb4d26322eebdc7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "我们为它设置了一个id，以便稍后通过JavaScript更容易定位它。 提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml\nhttps://site",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 782,
    "chunk_index": 22,
    "total_chunks": 55
  },
  {
    "id": "a9ad4f45b100037652edfa093f24b97a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "提示：由于此元素的内容将被替换，我们可以在其中放置一个加载消息或指示器，以在应用程序加载时显示。 接下来，在HTML模板中添加登录页面。现在我们只在其中放置一个标题和一个包含链接的部分，用于执行导航。 ```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/     --> mywebsite/admin/index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 765,
    "chunk_index": 23,
    "total_chunks": 55
  },
  {
    "id": "acaab18f1f443dcdc8a01d115fe7099e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "```html Login ``` 然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml\n然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。\n任务\n我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 785,
    "chunk_index": 24,
    "total_chunks": 55
  },
  {
    "id": "fb89fd921c081081d37ebce7772b3f19",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "然后我们将为仪表板页面添加另一个HTML模板。此页面将包含不同的部分： 一个包含标题和注销链接的页眉 银行账户的当前余额 一个显示交易记录的表格 ```html Balance: 100$ Transactions Date Object Amount ``` 提示：创建HTML模板时，如果您想查看它的外观，可以通过将<template>和</template>行用<-- -->包裹来注释掉它们。 ✅ 您认为我们为什么在模板上使用id属性？我们是否可以使用其他方法，比如类？ 使用JavaScript显示模板 如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。\njs\nconst routes = {\n'/login': { templateId: 'login' },\n'/dashboard': { templateId: 'dashboard' },\n};\n现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 877,
    "chunk_index": 25,
    "total_chunks": 55
  },
  {
    "id": "b24643d6417ed8691c0532cd6b4d0b8a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 722,
    "chunk_index": 26,
    "total_chunks": 55
  },
  {
    "id": "1b8c5f1da284b6fd3076ce958b81bab4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "如果您在浏览器中尝试当前的HTML文件，您会发现它停留在显示Loading。这是因为我们需要添加一些JavaScript代码来实例化并显示HTML模板。 实例化模板通常分为三个步骤： 在DOM中检索模板元素，例如使用documentgetElementById。 使用cloneNode克隆模板元素。 将其附加到可见元素的DOM中，例如使用appendChild。 ✅ 为什么我们需要在将模板附加到DOM之前克隆它？如果跳过这一步会发生什么？ 任务 在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。\n```js\nfunction updateRoute() {\nconst path = window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 746,
    "chunk_index": 27,
    "total_chunks": 55
  },
  {
    "id": "7281d50c845c5d7bcc7b1e9d8d37347f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 589,
    "chunk_index": 28,
    "total_chunks": 55
  },
  {
    "id": "2705e3c153feb100ae87bd9fae06b588",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "在项目文件夹中创建一个名为appjs的新文件，并在HTML的<head>部分导入该文件： ```html ``` 现在在appjs中，我们将创建一个新函数updateRoute： js function updateRoute(templateId) { const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname;\nconst route = routes[path];\nconst template = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 601,
    "chunk_index": 29,
    "total_chunks": 55
  },
  {
    "id": "5607f1c2b9a8fcd0f859b5f150fca86a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(route",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 547,
    "chunk_index": 30,
    "total_chunks": 55
  },
  {
    "id": "dad66d054081b679c3f63438931af4c5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "const template = documentgetElementById(templateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId);\nconst view = template",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 556,
    "chunk_index": 31,
    "total_chunks": 55
  },
  {
    "id": "566e5bd106b85a5e3db0982f4e143791",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 548,
    "chunk_index": 32,
    "total_chunks": 55
  },
  {
    "id": "09f952bca3196771a06eec4349731d9b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true);\nconst app = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 556,
    "chunk_index": 33,
    "total_chunks": 55
  },
  {
    "id": "8054f6977ea481337ce0ae26de2af9a8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app');\napp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 553,
    "chunk_index": 34,
    "total_chunks": 55
  },
  {
    "id": "6ca7122d3b58b09cd5ce351863259de7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = '';\napp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 556,
    "chunk_index": 35,
    "total_chunks": 55
  },
  {
    "id": "de7fb403263318be601ad784d7a63f11",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "appinnerHTML = ''; appappendChild(view); } 我们在这里做的正是上述的三个步骤。我们实例化templateId对应的模板，并将其克隆的内容放入我们的应用程序占位符中。注意，我们需要使用cloneNode(true)来复制模板的整个子树。 现在调用这个函数并传入一个模板，查看结果。 js updateRoute('login'); ✅ 代码appinnerHTML = '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view);\n}\n```\n在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。\n✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？\n添加导航\n我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事：\n更新当前URL\n根据新URL更新显示的模板\n我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。\n我们需要使用JavaScript，特别是history",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 726,
    "chunk_index": 36,
    "total_chunks": 55
  },
  {
    "id": "c237f1a9436f38f045f591660ba13953",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "= '';的作用是什么？如果没有它会发生什么？ 创建路由 在谈论Web应用程序时，我们称路由为将URL映射到应该显示的特定屏幕的意图。在具有多个HTML文件的网站上，这会自动完成，因为文件路径会反映在URL中。例如，在项目文件夹中有以下文件： mywebsite/indexhtml mywebsite/loginhtml mywebsite/admin/indexhtml 如果您以mywebsite为根创建一个Web服务器，URL映射将是： https://sitecom --> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。\n注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。\n任务\n让我们创建一个新函数，用于在应用程序中导航：\njs\nfunction navigate(path) {\nwindow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 747,
    "chunk_index": 37,
    "total_chunks": 55
  },
  {
    "id": "776ad5c63522d6759ff1f3f50113ea74",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "--> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistory",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 608,
    "chunk_index": 38,
    "total_chunks": 55
  },
  {
    "id": "a75bfc19e16b693a71d6b9a50654debb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "--> mywebsite/indexhtml https://sitecom/loginhtml --> mywebsite/loginhtml https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path);\nupdateRoute();\n}\n此方法首先根据给定路径更新当前URL，然后更新模板。属性window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 39,
    "total_chunks": 55
  },
  {
    "id": "0f159d811d343a25707379d4ffce7361",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 40,
    "total_chunks": 55
  },
  {
    "id": "394944a3d79ae7c142578d727bf763ee",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "https://sitecom/admin/ --> mywebsite/admin/indexhtml 然而，对于我们的Web应用程序，我们使用的是一个包含所有屏幕的HTML文件，因此这种默认行为对我们没有帮助。我们必须手动创建这个映射，并使用JavaScript更新显示的模板。 任务 我们将使用一个简单的对象来实现一个映射，将URL路径与我们的模板关联。在appjs文件顶部添加这个对象。 js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。\n现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。\n```js\nfunction updateRoute() {\nconst path = window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 710,
    "chunk_index": 41,
    "total_chunks": 55
  },
  {
    "id": "5f32478976fb4b301df6ba08d358121d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "= { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 586,
    "chunk_index": 42,
    "total_chunks": 55
  },
  {
    "id": "2520283d52b2ca403ce215b19adee1ea",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "= { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname;\nconst route = routes[path];\nif (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 43,
    "total_chunks": 55
  },
  {
    "id": "aebcec7263011caab5d7bea6fba8e305",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "}, '/dashboard': { templateId: 'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) {\nreturn navigate('/login');\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 593,
    "chunk_index": 44,
    "total_chunks": 55
  },
  {
    "id": "1786055d50bce74d96a3cd58c05c7d82",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "'dashboard' }, }; 现在稍微修改一下updateRoute函数。我们不再直接传递templateId作为参数，而是首先查看当前URL，然后使用我们的映射获取对应的模板ID值。我们可以使用windowlocationpathname来仅获取URL中的路径部分。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }```\n如果找不到路由，我们现在会重定向到login页面。\n现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为：\njs\nfunction onLinkClick(event) {\nevent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 45,
    "total_chunks": 55
  },
  {
    "id": "4e8346cc0b57997f04ce7e50a291d4fa",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "{ const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault();\nnavigate(event",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 567,
    "chunk_index": 46,
    "total_chunks": 55
  },
  {
    "id": "7d56f9e1c1cfe3eb0cb2946563dcef18",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtarget",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 567,
    "chunk_index": 47,
    "total_chunks": 55
  },
  {
    "id": "6a60d80db2bc76b1a5957e8d8f44f837",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "const path = windowlocationpathname; const route = routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtargethref);\n}\n通过为HTML中的登录和注销链接添加绑定来完成导航系统。\nhtml\n<a href=\"/dashboard\" onclick=\"onLinkClick(event)\">Login</a>",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 609,
    "chunk_index": 48,
    "total_chunks": 55
  },
  {
    "id": "c22da3bd404f7d964aa5f4352c9ab00d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "= routes[path]; const template = documentgetElementById(routetemplateId); const view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtargethref); } 通过为HTML中的登录和注销链接添加绑定来完成导航系统。 html <a href=\"/dashboard\" onclick=\"onLinkClick(event)\">Login</a><a href=\"/login\" onclick=\"onLinkClick(event)\">Logout</a>\n上面的event对象捕获click事件并将其传递给我们的onLinkClick函数。\n使用onclick属性将click事件绑定到JavaScript代码，这里是调用navigate()函数。\n尝试点击这些链接，您现在应该能够在应用程序的不同屏幕之间导航。\n✅ history",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 700,
    "chunk_index": 49,
    "total_chunks": 55
  },
  {
    "id": "a09da3df0bc4af720fba69039ef1a119",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "view = templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtargethref); } 通过为HTML中的登录和注销链接添加绑定来完成导航系统。 html <a href=\"/dashboard\" onclick=\"onLinkClick(event)\">Login</a><a href=\"/login\" onclick=\"onLinkClick(event)\">Logout</a> 上面的event对象捕获click事件并将其传递给我们的onLinkClick函数。 使用onclick属性将click事件绑定到JavaScript代码，这里是调用navigate()函数。 尝试点击这些链接，您现在应该能够在应用程序的不同屏幕之间导航。 ✅ historypushState方法是HTML5标准的一部分，并在所有现代浏览器中实现。如果您正在为旧版浏览器构建Web应用程序，可以使用一个技巧代替此API：使用路径前的哈希(#)，您可以实现与常规锚导航一起工作的路由，并且不会重新加载页面，因为它的目的是在页面内创建内部链接。\n处理浏览器的后退和前进按钮\n使用history",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 810,
    "chunk_index": 50,
    "total_chunks": 55
  },
  {
    "id": "068439081e92f7903d65cff7a3dc41d6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "templatecontentcloneNode(true); const app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtargethref); } 通过为HTML中的登录和注销链接添加绑定来完成导航系统。 html <a href=\"/dashboard\" onclick=\"onLinkClick(event)\">Login</a><a href=\"/login\" onclick=\"onLinkClick(event)\">Logout</a> 上面的event对象捕获click事件并将其传递给我们的onLinkClick函数。 使用onclick属性将click事件绑定到JavaScript代码，这里是调用navigate()函数。 尝试点击这些链接，您现在应该能够在应用程序的不同屏幕之间导航。 ✅ historypushState方法是HTML5标准的一部分，并在所有现代浏览器中实现。如果您正在为旧版浏览器构建Web应用程序，可以使用一个技巧代替此API：使用路径前的哈希(#)，您可以实现与常规锚导航一起工作的路由，并且不会重新加载页面，因为它的目的是在页面内创建内部链接。 处理浏览器的后退和前进按钮 使用historypushState会在浏览器的导航历史中创建新条目。您可以通过按住浏览器的后退按钮来检查，它应该显示如下内容：\n如果您尝试点击几次后退按钮，您会发现当前URL发生了变化，历史记录也更新了，但显示的模板保持不变。\n这是因为应用程序不知道每次历史记录更改时需要调用updateRoute()。如果您查看history",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 933,
    "chunk_index": 51,
    "total_chunks": 55
  },
  {
    "id": "374028dbe328ec2faee43f91231f9732",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "app = documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtargethref); } 通过为HTML中的登录和注销链接添加绑定来完成导航系统。 html <a href=\"/dashboard\" onclick=\"onLinkClick(event)\">Login</a><a href=\"/login\" onclick=\"onLinkClick(event)\">Logout</a> 上面的event对象捕获click事件并将其传递给我们的onLinkClick函数。 使用onclick属性将click事件绑定到JavaScript代码，这里是调用navigate()函数。 尝试点击这些链接，您现在应该能够在应用程序的不同屏幕之间导航。 ✅ historypushState方法是HTML5标准的一部分，并在所有现代浏览器中实现。如果您正在为旧版浏览器构建Web应用程序，可以使用一个技巧代替此API：使用路径前的哈希(#)，您可以实现与常规锚导航一起工作的路由，并且不会重新加载页面，因为它的目的是在页面内创建内部链接。 处理浏览器的后退和前进按钮 使用historypushState会在浏览器的导航历史中创建新条目。您可以通过按住浏览器的后退按钮来检查，它应该显示如下内容： 如果您尝试点击几次后退按钮，您会发现当前URL发生了变化，历史记录也更新了，但显示的模板保持不变。 这是因为应用程序不知道每次历史记录更改时需要调用updateRoute()。如果您查看historypushState文档，您会发现如果状态发生变化——意味着我们移动到不同的URL——会触发popstate事件。我们将使用它来解决这个问题。\n任务\n为了确保浏览器历史记录更改时显示的模板得到更新，我们将附加一个新函数来调用updateRoute()。我们将在app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1024,
    "chunk_index": 52,
    "total_chunks": 55
  },
  {
    "id": "48dd291b91cdeaebf6a1bfda6fe2a5ab",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "documentgetElementById('app'); appinnerHTML = ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtargethref); } 通过为HTML中的登录和注销链接添加绑定来完成导航系统。 html <a href=\"/dashboard\" onclick=\"onLinkClick(event)\">Login</a><a href=\"/login\" onclick=\"onLinkClick(event)\">Logout</a> 上面的event对象捕获click事件并将其传递给我们的onLinkClick函数。 使用onclick属性将click事件绑定到JavaScript代码，这里是调用navigate()函数。 尝试点击这些链接，您现在应该能够在应用程序的不同屏幕之间导航。 ✅ historypushState方法是HTML5标准的一部分，并在所有现代浏览器中实现。如果您正在为旧版浏览器构建Web应用程序，可以使用一个技巧代替此API：使用路径前的哈希(#)，您可以实现与常规锚导航一起工作的路由，并且不会重新加载页面，因为它的目的是在页面内创建内部链接。 处理浏览器的后退和前进按钮 使用historypushState会在浏览器的导航历史中创建新条目。您可以通过按住浏览器的后退按钮来检查，它应该显示如下内容： 如果您尝试点击几次后退按钮，您会发现当前URL发生了变化，历史记录也更新了，但显示的模板保持不变。 这是因为应用程序不知道每次历史记录更改时需要调用updateRoute()。如果您查看historypushState文档，您会发现如果状态发生变化——意味着我们移动到不同的URL——会触发popstate事件。我们将使用它来解决这个问题。 任务 为了确保浏览器历史记录更改时显示的模板得到更新，我们将附加一个新函数来调用updateRoute()。我们将在appjs文件底部完成此操作：\njs\nwindow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1035,
    "chunk_index": 53,
    "total_chunks": 55
  },
  {
    "id": "c5bb2457c9cdc314d9143cda094924fa",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
    "source_type": "git_repo",
    "title": "Bank App",
    "content": "= ''; appappendChild(view); } ``` 在这里，我们将声明的路由映射到对应的模板。您可以通过在浏览器中手动更改URL来测试它是否正常工作。 ✅ 如果您在URL中输入一个未知路径会发生什么？我们如何解决这个问题？ 添加导航 我们应用程序的下一步是添加在页面之间导航的功能，而无需手动更改URL。这涉及两件事： 更新当前URL 根据新URL更新显示的模板 我们已经通过updateRoute函数解决了第二部分，因此我们需要弄清楚如何更新当前URL。 我们需要使用JavaScript，特别是historypushState，它允许更新URL并在浏览历史中创建新条目，而无需重新加载HTML。 注意：虽然HTML锚元素<a href>本身可以用于创建指向不同URL的超链接，但默认情况下它会使浏览器重新加载HTML。在使用自定义JavaScript处理路由时，需要使用preventDefault()函数阻止点击事件的默认行为。 任务 让我们创建一个新函数，用于在应用程序中导航： js function navigate(path) { windowhistorypushState({}, path, path); updateRoute(); } 此方法首先根据给定路径更新当前URL，然后更新模板。属性windowlocationorigin返回URL根目录，允许我们从给定路径重新构建完整URL。 现在我们有了这个函数，可以解决路径与定义的路由不匹配时的问题。我们将通过添加一个回退到现有路由之一来修改updateRoute函数。 ```js function updateRoute() { const path = windowlocationpathname; const route = routes[path]; if (route) { return navigate('/login'); }``` 如果找不到路由，我们现在会重定向到login页面。 现在创建一个函数，用于在点击链接时获取URL，并阻止浏览器的默认链接行为： js function onLinkClick(event) { eventpreventDefault(); navigate(eventtargethref); } 通过为HTML中的登录和注销链接添加绑定来完成导航系统。 html <a href=\"/dashboard\" onclick=\"onLinkClick(event)\">Login</a><a href=\"/login\" onclick=\"onLinkClick(event)\">Logout</a> 上面的event对象捕获click事件并将其传递给我们的onLinkClick函数。 使用onclick属性将click事件绑定到JavaScript代码，这里是调用navigate()函数。 尝试点击这些链接，您现在应该能够在应用程序的不同屏幕之间导航。 ✅ historypushState方法是HTML5标准的一部分，并在所有现代浏览器中实现。如果您正在为旧版浏览器构建Web应用程序，可以使用一个技巧代替此API：使用路径前的哈希(#)，您可以实现与常规锚导航一起工作的路由，并且不会重新加载页面，因为它的目的是在页面内创建内部链接。 处理浏览器的后退和前进按钮 使用historypushState会在浏览器的导航历史中创建新条目。您可以通过按住浏览器的后退按钮来检查，它应该显示如下内容： 如果您尝试点击几次后退按钮，您会发现当前URL发生了变化，历史记录也更新了，但显示的模板保持不变。 这是因为应用程序不知道每次历史记录更改时需要调用updateRoute()。如果您查看historypushState文档，您会发现如果状态发生变化——意味着我们移动到不同的URL——会触发popstate事件。我们将使用它来解决这个问题。 任务 为了确保浏览器历史记录更改时显示的模板得到更新，我们将附加一个新函数来调用updateRoute()。我们将在appjs文件底部完成此操作： js windowonpopstate = () => updateRoute();\nupdateRoute();\n注意：我们在这里使用了一个箭头函数来声明我们的popstate事件处理程序以简洁，但普通函数也可以正常工作。\n以下是关于箭头函数的复习视频：\n🎥 点击上方图片观看关于箭头函数的视频。\n现在尝试使用浏览器的后退和前进按钮，检查显示的路由是否正确更新。\n🚀 挑战\n为显示此应用程序的开发者信息添加一个新的模板和路由。\n课后测验\n课后测验\n复习与自学\n路由是Web开发中一个出乎意料的复杂部分，尤其是在Web从页面刷新行为转向单页应用程序页面刷新时。阅读一些关于Azure静态Web应用服务如何处理路由的内容。您能解释为什么文档中描述的一些决策是必要的吗？\n作业\n改进路由\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13748,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\1-template-route\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1431,
    "chunk_index": 54,
    "total_chunks": 55
  },
  {
    "id": "7114a958c5cd9756b5b7197a0fa7afc7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\assignment.md",
    "source_type": "git_repo",
    "title": "实现“添加交易”对话框",
    "content": "实现“添加交易”对话框\n说明\n我们的银行应用程序仍然缺少一个重要功能：输入新交易的功能。\n使用您在前四节课中学到的所有内容，来实现一个“添加交易”对话框：\n在仪表板页面添加一个“添加交易”按钮\n可以创建一个带有 HTML 模板的新页面，或者使用 JavaScript 显示/隐藏对话框的 HTML，而无需离开仪表板页面（您可以使用 hidden 属性或 CSS 类来实现）\n确保处理好对话框的键盘和屏幕阅读器的可访问性\n实现一个 HTML 表单以接收输入数据\n从表单数据创建 JSON 数据并发送到 API\n使用新数据更新仪表板页面\n查看 服务器 API 规范，了解需要调用的 API 以及预期的 JSON 格式。\n以下是完成任务后的示例结果：\n评分标准\n| 标准     | 卓越                                                                                              | 合格                                                                                                                   | 需要改进                                   |\n| -------- | ------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------- | ------------------------------------------ |\n|          | 完全按照课程中看到的所有最佳实践实现了添加交易功能。                                              | 实现了添加交易功能，但未完全遵循课程中看到的最佳实践，或者功能仅部分工作。                                               | 添加交易功能完全无法正常工作。             |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2786,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "26dbc1c43b1e816a8dabfddd605e308a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "构建银行应用程序第4部分：状态管理概念\n课前测验\n课前测验\n简介\n随着一个网络应用程序的规模不断扩大，管理数据流变得越来越具有挑战性。哪些代码获取了数据，哪些页面使用了数据，数据需要在何时何地更新……很容易导致代码变得混乱且难以维护。尤其是当需要在应用程序的不同页面之间共享数据时，例如用户数据。状态管理的概念一直存在于各种程序中，但随着网络应用程序的复杂性不断增加，它现在成为开发过程中需要重点考虑的问题。\n在最后这一部分中，我们将重新审视我们构建的应用程序，重新思考如何管理状态，以支持浏览器在任何时候刷新，并在用户会话之间持久化数据。\n前置条件\n你需要完成本课程中网络应用程序的数据获取部分。此外，你需要安装 Node js 并本地运行服务器 API，以便管理账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 26
  },
  {
    "id": "0cb082580f6bf843c6fcee1cc21cdefe",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "构建银行应用程序第4部分：状态管理概念\n课前测验\n课前测验\n简介\n随着一个网络应用程序的规模不断扩大，管理数据流变得越来越具有挑战性。哪些代码获取了数据，哪些页面使用了数据，数据需要在何时何地更新……很容易导致代码变得混乱且难以维护。尤其是当需要在应用程序的不同页面之间共享数据时，例如用户数据。状态管理的概念一直存在于各种程序中，但随着网络应用程序的复杂性不断增加，它现在成为开发过程中需要重点考虑的问题。\n在最后这一部分中，我们将重新审视我们构建的应用程序，重新思考如何管理状态，以支持浏览器在任何时候刷新，并在用户会话之间持久化数据。\n前置条件\n你需要完成本课程中网络应用程序的数据获取部分。此外，你需要安装 Node js 并本地运行服务器 API，以便管理账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\n重新思考状态管理\n在上一课中，我们在应用程序中引入了一个基本的状态概念，即全局变量 account，它包含当前登录用户的银行数据。然而，我们当前的实现存在一些问题。尝试在仪表板页面刷新浏览器，会发生什么？\n当前代码存在以下三个问题：\n状态没有持久化，浏览器刷新会将你带回登录页面。\n有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。\n状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。\n我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。\n我们真正试图解决的问题是什么？\n状态管理的核心是找到一种好的方法来解决以下两个问题：\n如何让应用程序中的数据流易于理解？\n如何确保状态数据始终与用户界面保持同步（反之亦然）？\n一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示：\n我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。\n✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。\n任务\n我们将从一些代码重构开始。替换 account 声明：\njs\nlet account = null;\n为：\njs\nlet state = {\naccount: null\n};\n我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。\n我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1052,
    "chunk_index": 1,
    "total_chunks": 26
  },
  {
    "id": "9e9f00e83d1e7dfd8ca04321e6500163",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "构建银行应用程序第4部分：状态管理概念\n课前测验\n课前测验\n简介\n随着一个网络应用程序的规模不断扩大，管理数据流变得越来越具有挑战性。哪些代码获取了数据，哪些页面使用了数据，数据需要在何时何地更新……很容易导致代码变得混乱且难以维护。尤其是当需要在应用程序的不同页面之间共享数据时，例如用户数据。状态管理的概念一直存在于各种程序中，但随着网络应用程序的复杂性不断增加，它现在成为开发过程中需要重点考虑的问题。\n在最后这一部分中，我们将重新审视我们构建的应用程序，重新思考如何管理状态，以支持浏览器在任何时候刷新，并在用户会话之间持久化数据。\n前置条件\n你需要完成本课程中网络应用程序的数据获取部分。此外，你需要安装 Node js 并本地运行服务器 API，以便管理账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\n重新思考状态管理\n在上一课中，我们在应用程序中引入了一个基本的状态概念，即全局变量 account，它包含当前登录用户的银行数据。然而，我们当前的实现存在一些问题。尝试在仪表板页面刷新浏览器，会发生什么？\n当前代码存在以下三个问题：\n状态没有持久化，浏览器刷新会将你带回登录页面。\n有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。\n状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。\n我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。\n我们真正试图解决的问题是什么？\n状态管理的核心是找到一种好的方法来解决以下两个问题：\n如何让应用程序中的数据流易于理解？\n如何确保状态数据始终与用户界面保持同步（反之亦然）？\n一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示：\n我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。\n✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。\n任务\n我们将从一些代码重构开始。替换 account 声明：\njs\nlet account = null;\n为：\njs\nlet state = {\naccount: null\n};\n我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。\n我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1057,
    "chunk_index": 2,
    "total_chunks": 26
  },
  {
    "id": "b1bd20e3584939be8912d1d9cea4792f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "构建银行应用程序第4部分：状态管理概念\n课前测验\n课前测验\n简介\n随着一个网络应用程序的规模不断扩大，管理数据流变得越来越具有挑战性。哪些代码获取了数据，哪些页面使用了数据，数据需要在何时何地更新……很容易导致代码变得混乱且难以维护。尤其是当需要在应用程序的不同页面之间共享数据时，例如用户数据。状态管理的概念一直存在于各种程序中，但随着网络应用程序的复杂性不断增加，它现在成为开发过程中需要重点考虑的问题。\n在最后这一部分中，我们将重新审视我们构建的应用程序，重新思考如何管理状态，以支持浏览器在任何时候刷新，并在用户会话之间持久化数据。\n前置条件\n你需要完成本课程中网络应用程序的数据获取部分。此外，你需要安装 Node js 并本地运行服务器 API，以便管理账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\n重新思考状态管理\n在上一课中，我们在应用程序中引入了一个基本的状态概念，即全局变量 account，它包含当前登录用户的银行数据。然而，我们当前的实现存在一些问题。尝试在仪表板页面刷新浏览器，会发生什么？\n当前代码存在以下三个问题：\n状态没有持久化，浏览器刷新会将你带回登录页面。\n有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。\n状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。\n我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。\n我们真正试图解决的问题是什么？\n状态管理的核心是找到一种好的方法来解决以下两个问题：\n如何让应用程序中的数据流易于理解？\n如何确保状态数据始终与用户界面保持同步（反之亦然）？\n一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示：\n我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。\n✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。\n任务\n我们将从一些代码重构开始。替换 account 声明：\njs\nlet account = null;\n为：\njs\nlet state = {\naccount: null\n};\n我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。\n我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1059,
    "chunk_index": 3,
    "total_chunks": 26
  },
  {
    "id": "f376d5eb056c1c89f218a5c578efede8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "构建银行应用程序第4部分：状态管理概念\n课前测验\n课前测验\n简介\n随着一个网络应用程序的规模不断扩大，管理数据流变得越来越具有挑战性。哪些代码获取了数据，哪些页面使用了数据，数据需要在何时何地更新……很容易导致代码变得混乱且难以维护。尤其是当需要在应用程序的不同页面之间共享数据时，例如用户数据。状态管理的概念一直存在于各种程序中，但随着网络应用程序的复杂性不断增加，它现在成为开发过程中需要重点考虑的问题。\n在最后这一部分中，我们将重新审视我们构建的应用程序，重新思考如何管理状态，以支持浏览器在任何时候刷新，并在用户会话之间持久化数据。\n前置条件\n你需要完成本课程中网络应用程序的数据获取部分。此外，你需要安装 Node js 并本地运行服务器 API，以便管理账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\n重新思考状态管理\n在上一课中，我们在应用程序中引入了一个基本的状态概念，即全局变量 account，它包含当前登录用户的银行数据。然而，我们当前的实现存在一些问题。尝试在仪表板页面刷新浏览器，会发生什么？\n当前代码存在以下三个问题：\n状态没有持久化，浏览器刷新会将你带回登录页面。\n有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。\n状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。\n我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。\n我们真正试图解决的问题是什么？\n状态管理的核心是找到一种好的方法来解决以下两个问题：\n如何让应用程序中的数据流易于理解？\n如何确保状态数据始终与用户界面保持同步（反之亦然）？\n一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示：\n我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。\n✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。\n任务\n我们将从一些代码重构开始。替换 account 声明：\njs\nlet account = null;\n为：\njs\nlet state = {\naccount: null\n};\n我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。\n我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =;\n在 updateDashboard() 函数的顶部，添加以下代码：\njs\nconst account = state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1081,
    "chunk_index": 4,
    "total_chunks": 26
  },
  {
    "id": "56f505fccadbf5951dc8d1066366ca2f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "在最后这一部分中，我们将重新审视我们构建的应用程序，重新思考如何管理状态，以支持浏览器在任何时候刷新，并在用户会话之间持久化数据。 前置条件 你需要完成本课程中网络应用程序的数据获取部分。此外，你需要安装 Node js 并本地运行服务器 API，以便管理账户数据。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 重新思考状态管理 在上一课中，我们在应用程序中引入了一个基本的状态概念，即全局变量 account，它包含当前登录用户的银行数据。然而，我们当前的实现存在一些问题。尝试在仪表板页面刷新浏览器，会发生什么？ 当前代码存在以下三个问题： 状态没有持久化，浏览器刷新会将你带回登录页面。 有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。 状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。 我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。 我们真正试图解决的问题是什么？ 状态管理的核心是找到一种好的方法来解决以下两个问题： 如何让应用程序中的数据流易于理解？ 如何确保状态数据始终与用户界面保持同步（反之亦然）？ 一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示： 我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。 ✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。 任务 我们将从一些代码重构开始。替换 account 声明： js let account = null; 为： js let state = { account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount;\n仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。\n跟踪数据变化\n现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。\n为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。\n在 JavaScript 中，你可以使用 Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1162,
    "chunk_index": 5,
    "total_chunks": 26
  },
  {
    "id": "d1ac11eb7ef62784abaa90e0ccc8131e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "should return \"Bank API v1 00\" as a result ``` 重新思考状态管理 在上一课中，我们在应用程序中引入了一个基本的状态概念，即全局变量 account，它包含当前登录用户的银行数据。然而，我们当前的实现存在一些问题。尝试在仪表板页面刷新浏览器，会发生什么？ 当前代码存在以下三个问题： 状态没有持久化，浏览器刷新会将你带回登录页面。 有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。 状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。 我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。 我们真正试图解决的问题是什么？ 状态管理的核心是找到一种好的方法来解决以下两个问题： 如何让应用程序中的数据流易于理解？ 如何确保状态数据始终与用户界面保持同步（反之亦然）？ 一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示： 我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。 ✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。 任务 我们将从一些代码重构开始。替换 account 声明： js let account = null; 为： js let state = { account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。\n✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。\n任务\n让我们创建一个新的 updateState() 函数：\njs\nfunction updateState(property, newData) {\nstate = Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1116,
    "chunk_index": 6,
    "total_chunks": 26
  },
  {
    "id": "4a0415646d0232ebd86a687cb12cb20e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。 状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。 我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。 我们真正试图解决的问题是什么？ 状态管理的核心是找到一种好的方法来解决以下两个问题： 如何让应用程序中的数据流易于理解？ 如何确保状态数据始终与用户界面保持同步（反之亦然）？ 一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示： 我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。 ✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。 任务 我们将从一些代码重构开始。替换 account 声明： js let account = null; 为： js let state = { account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。 ✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。 任务 让我们创建一个新的 updateState() 函数： js function updateState(property, newData) { state = Objectfreeze({",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 980,
    "chunk_index": 7,
    "total_chunks": 26
  },
  {
    "id": "81614deda7b00afe8c0937856946ce17",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "有多个函数修改状态。随着应用程序的增长，这可能会使跟踪更改变得困难，并且容易忘记更新某些部分。 状态没有清理，因此当你点击注销时，账户数据仍然存在，即使你已经回到登录页面。 我们可以逐一更新代码来解决这些问题，但这会导致代码重复增加，并使应用程序变得更加复杂且难以维护。或者，我们可以暂停几分钟，重新思考我们的策略。 我们真正试图解决的问题是什么？ 状态管理的核心是找到一种好的方法来解决以下两个问题： 如何让应用程序中的数据流易于理解？ 如何确保状态数据始终与用户界面保持同步（反之亦然）？ 一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示： 我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。 ✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。 任务 我们将从一些代码重构开始。替换 account 声明： js let account = null; 为： js let state = { account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。 ✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。 任务 让我们创建一个新的 updateState() 函数： js function updateState(property, newData) { state = Objectfreeze({state,\n[property]: newData\n});\n}\n在这个函数中，我们创建了一个新的状态对象，并使用扩展运算符 (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1011,
    "chunk_index": 8,
    "total_chunks": 26
  },
  {
    "id": "b3ca1d79b167369a0a983507c6fe69bf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "如何确保状态数据始终与用户界面保持同步（反之亦然）？ 一旦解决了这些问题，你可能会发现其他问题要么已经解决，要么变得更容易解决。有许多方法可以解决这些问题，但我们将采用一种常见的解决方案，即集中管理数据及其更改方式。数据流将如下图所示： 我们在这里不会涉及数据自动触发视图更新的部分，因为它与更高级的响应式编程概念相关。如果你有兴趣深入研究，这是一个很好的后续主题。 ✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。 任务 我们将从一些代码重构开始。替换 account 声明： js let account = null; 为： js let state = { account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。 ✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。 任务 让我们创建一个新的 updateState() 函数： js function updateState(property, newData) { state = Objectfreeze({state, [property]: newData }); } 在这个函数中，我们创建了一个新的状态对象，并使用扩展运算符 ()从之前的状态中复制数据。然后我们使用方括号表示法 [property] 为赋值覆盖状态对象的特定属性。最后，我们使用 Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 845,
    "chunk_index": 9,
    "total_chunks": 26
  },
  {
    "id": "ce30d755f01c1c82bf9659ac2c62fab9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "✅ 市面上有许多不同方法的状态管理库，Redux 是一个流行的选择。了解其使用的概念和模式通常是学习如何解决大型网络应用程序中潜在问题的好方法。 任务 我们将从一些代码重构开始。替换 account 声明： js let account = null; 为： js let state = { account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。 ✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。 任务 让我们创建一个新的 updateState() 函数： js function updateState(property, newData) { state = Objectfreeze({state, [property]: newData }); } 在这个函数中，我们创建了一个新的状态对象，并使用扩展运算符 ()从之前的状态中复制数据。然后我们使用方括号表示法 [property] 为赋值覆盖状态对象的特定属性。最后，我们使用 Objectfreeze() 锁定对象以防止修改。目前状态中只有 account 属性，但通过这种方法，你可以在状态中添加任意多的属性。\n我们还需要更新 state 的初始化，以确保初始状态也是冻结的：\njs\nlet state = Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 725,
    "chunk_index": 10,
    "total_chunks": 26
  },
  {
    "id": "dc0410f00c1fc131ace2597e13285134",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "null; 为： js let state = { account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。 ✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。 任务 让我们创建一个新的 updateState() 函数： js function updateState(property, newData) { state = Objectfreeze({state, [property]: newData }); } 在这个函数中，我们创建了一个新的状态对象，并使用扩展运算符 ()从之前的状态中复制数据。然后我们使用方括号表示法 [property] 为赋值覆盖状态对象的特定属性。最后，我们使用 Objectfreeze() 锁定对象以防止修改。目前状态中只有 account 属性，但通过这种方法，你可以在状态中添加任意多的属性。 我们还需要更新 state 的初始化，以确保初始状态也是冻结的： js let state = Objectfreeze({\naccount: null\n});\n之后，更新 register 函数，将 state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 650,
    "chunk_index": 11,
    "total_chunks": 26
  },
  {
    "id": "b6d04807797a0edd1dcaf824c9daa686",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "account: null }; 我们的想法是将应用程序的所有数据集中到一个状态对象中。目前状态中只有 account，因此变化不大，但这为未来的扩展铺平了道路。 我们还需要更新使用它的函数。在 register() 和 login() 函数中，将 account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。 ✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。 任务 让我们创建一个新的 updateState() 函数： js function updateState(property, newData) { state = Objectfreeze({state, [property]: newData }); } 在这个函数中，我们创建了一个新的状态对象，并使用扩展运算符 ()从之前的状态中复制数据。然后我们使用方括号表示法 [property] 为赋值覆盖状态对象的特定属性。最后，我们使用 Objectfreeze() 锁定对象以防止修改。目前状态中只有 account 属性，但通过这种方法，你可以在状态中添加任意多的属性。 我们还需要更新 state 的初始化，以确保初始状态也是冻结的： js let state = Objectfreeze({ account: null }); 之后，更新 register 函数，将 stateaccount = result; 替换为：\njs\nupdateState('account', result);\n对 login 函数进行同样的操作，将 state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 12,
    "total_chunks": 26
  },
  {
    "id": "592275192956c98ac6da34fc5bb7d8dd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "account =替换为 stateaccount =; 在 updateDashboard() 函数的顶部，添加以下代码： js const account = stateaccount; 仅靠这次重构并没有带来太多改进，但我们的目的是为接下来的更改奠定基础。 跟踪数据变化 现在我们已经设置了 state 对象来存储数据，下一步是集中更新。目标是更容易跟踪任何更改及其发生的时间。 为了避免对 state 对象进行直接修改，考虑将其视为不可变对象是一个好习惯，这意味着它完全不能被修改。这也意味着如果你想更改其中的任何内容，必须创建一个新的状态对象。通过这样做，你可以防止潜在的副作用，并为应用程序的新功能（如实现撤销/重做）打开可能性，同时也更容易调试。例如，你可以记录对状态所做的每次更改，并保留更改历史记录，以便了解错误的来源。 在 JavaScript 中，你可以使用 Objectfreeze() 创建对象的不可变版本。如果尝试修改不可变对象，将会抛出异常。 ✅ 你知道浅不可变对象和深不可变对象之间的区别吗？你可以在这里阅读相关内容。 任务 让我们创建一个新的 updateState() 函数： js function updateState(property, newData) { state = Objectfreeze({state, [property]: newData }); } 在这个函数中，我们创建了一个新的状态对象，并使用扩展运算符 ()从之前的状态中复制数据。然后我们使用方括号表示法 [property] 为赋值覆盖状态对象的特定属性。最后，我们使用 Objectfreeze() 锁定对象以防止修改。目前状态中只有 account 属性，但通过这种方法，你可以在状态中添加任意多的属性。 我们还需要更新 state 的初始化，以确保初始状态也是冻结的： js let state = Objectfreeze({ account: null }); 之后，更新 register 函数，将 stateaccount = result; 替换为： js updateState('account', result); 对 login 函数进行同样的操作，将 stateaccount = data; 替换为：\njs\nupdateState('account', data);\n我们现在可以顺便解决用户点击注销时账户数据未清除的问题。\n创建一个新的 logout() 函数：\njs\nfunction logout() {\nupdateState('account', null);\nnavigate('/login');\n}\n在 updateDashboard() 中，将重定向 return navigate('/login'); 替换为 return logout();\n尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。\n提示：你可以通过在 updateState() 的底部添加 console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 724,
    "chunk_index": 13,
    "total_chunks": 26
  },
  {
    "id": "0ef8e41273f1d22d1aab6da761e2338c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "js function updateState(property, newData) { state = Objectfreeze({state, [property]: newData }); } 在这个函数中，我们创建了一个新的状态对象，并使用扩展运算符 ()从之前的状态中复制数据。然后我们使用方括号表示法 [property] 为赋值覆盖状态对象的特定属性。最后，我们使用 Objectfreeze() 锁定对象以防止修改。目前状态中只有 account 属性，但通过这种方法，你可以在状态中添加任意多的属性。 我们还需要更新 state 的初始化，以确保初始状态也是冻结的： js let state = Objectfreeze({ account: null }); 之后，更新 register 函数，将 stateaccount = result; 替换为： js updateState('account', result); 对 login 函数进行同样的操作，将 stateaccount = data; 替换为： js updateState('account', data); 我们现在可以顺便解决用户点击注销时账户数据未清除的问题。 创建一个新的 logout() 函数： js function logout() { updateState('account', null); navigate('/login'); } 在 updateDashboard() 中，将重定向 return navigate('/login'); 替换为 return logout(); 尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。 提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。\n持久化状态\n大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。\n当你想在浏览器中持久化数据时，有几个重要问题需要考虑：\n数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。\n需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？\n根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。\n另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣：\nlocalStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。\nsessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。\n注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 794,
    "chunk_index": 14,
    "total_chunks": 26
  },
  {
    "id": "01c8f9c975519ec60751a7b40ea03559",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "Objectfreeze({ account: null }); 之后，更新 register 函数，将 stateaccount = result; 替换为： js updateState('account', result); 对 login 函数进行同样的操作，将 stateaccount = data; 替换为： js updateState('account', data); 我们现在可以顺便解决用户点击注销时账户数据未清除的问题。 创建一个新的 logout() 函数： js function logout() { updateState('account', null); navigate('/login'); } 在 updateDashboard() 中，将重定向 return navigate('/login'); 替换为 return logout(); 尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。 提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。 持久化状态 大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。\n✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。\n任务\n我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键：\njs\nconst storageKey = 'savedAccount';\n然后在 updateState() 函数的末尾添加以下代码：\njs\nlocalStorage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 807,
    "chunk_index": 15,
    "total_chunks": 26
  },
  {
    "id": "545038a174c8a6af7b41546f678fd175",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "我们现在可以顺便解决用户点击注销时账户数据未清除的问题。 创建一个新的 logout() 函数： js function logout() { updateState('account', null); navigate('/login'); } 在 updateDashboard() 中，将重定向 return navigate('/login'); 替换为 return logout(); 尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。 提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。 持久化状态 大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。 ✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。 任务 我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键： js const storageKey = 'savedAccount'; 然后在 updateState() 函数的末尾添加以下代码： js localStoragesetItem(storageKey, JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 752,
    "chunk_index": 16,
    "total_chunks": 26
  },
  {
    "id": "62fed117dce0630a9e3f4c5742c26251",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "创建一个新的 logout() 函数： js function logout() { updateState('account', null); navigate('/login'); } 在 updateDashboard() 中，将重定向 return navigate('/login'); 替换为 return logout(); 尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。 提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。 持久化状态 大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。 ✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。 任务 我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键： js const storageKey = 'savedAccount'; 然后在 updateState() 函数的末尾添加以下代码： js localStoragesetItem(storageKey, JSONstringify(state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 730,
    "chunk_index": 17,
    "total_chunks": 26
  },
  {
    "id": "56716bd9445aeea57273944d9682958f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "创建一个新的 logout() 函数： js function logout() { updateState('account', null); navigate('/login'); } 在 updateDashboard() 中，将重定向 return navigate('/login'); 替换为 return logout(); 尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。 提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。 持久化状态 大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。 ✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。 任务 我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键： js const storageKey = 'savedAccount'; 然后在 updateState() 函数的末尾添加以下代码： js localStoragesetItem(storageKey, JSONstringify(stateaccount));\n通过这样做，用户账户数据将被持久化，并且由于我们之前集中管理了所有状态更新，它始终是最新的。这是我们开始从之前的所有重构中受益的地方 🙂。\n由于数据已保存，我们还需要在应用程序加载时恢复它。由于我们将开始拥有更多的初始化代码，创建一个新的 init 函数可能是个好主意，同时包括之前在 app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 853,
    "chunk_index": 18,
    "total_chunks": 26
  },
  {
    "id": "ea6e35f4f9c617a778e991fdd65c2826",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "{ updateState('account', null); navigate('/login'); } 在 updateDashboard() 中，将重定向 return navigate('/login'); 替换为 return logout(); 尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。 提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。 持久化状态 大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。 ✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。 任务 我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键： js const storageKey = 'savedAccount'; 然后在 updateState() 函数的末尾添加以下代码： js localStoragesetItem(storageKey, JSONstringify(stateaccount)); 通过这样做，用户账户数据将被持久化，并且由于我们之前集中管理了所有状态更新，它始终是最新的。这是我们开始从之前的所有重构中受益的地方 🙂。 由于数据已保存，我们还需要在应用程序加载时恢复它。由于我们将开始拥有更多的初始化代码，创建一个新的 init 函数可能是个好主意，同时包括之前在 appjs 底部的代码：\n```js\nfunction init() {\nconst savedAccount = localStorage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 861,
    "chunk_index": 19,
    "total_chunks": 26
  },
  {
    "id": "7a8165158b259d41d9dfe5944fded775",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "navigate('/login'); 替换为 return logout(); 尝试注册一个新账户，注销并重新登录，检查一切是否仍然正常工作。 提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。 持久化状态 大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。 ✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。 任务 我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键： js const storageKey = 'savedAccount'; 然后在 updateState() 函数的末尾添加以下代码： js localStoragesetItem(storageKey, JSONstringify(stateaccount)); 通过这样做，用户账户数据将被持久化，并且由于我们之前集中管理了所有状态更新，它始终是最新的。这是我们开始从之前的所有重构中受益的地方 🙂。 由于数据已保存，我们还需要在应用程序加载时恢复它。由于我们将开始拥有更多的初始化代码，创建一个新的 init 函数可能是个好主意，同时包括之前在 appjs 底部的代码： ```js function init() { const savedAccount = localStoragegetItem(storageKey);\nif (savedAccount) {\nupdateState('account', JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 852,
    "chunk_index": 20,
    "total_chunks": 26
  },
  {
    "id": "b25476c0f5de376e1c862ae70527e849",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "提示：你可以通过在 updateState() 的底部添加 consolelog(state) 并打开浏览器开发工具中的控制台来查看所有状态更改。 持久化状态 大多数网络应用程序需要持久化数据才能正常工作。所有关键数据通常存储在数据库中，并通过服务器 API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。 ✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。 任务 我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键： js const storageKey = 'savedAccount'; 然后在 updateState() 函数的末尾添加以下代码： js localStoragesetItem(storageKey, JSONstringify(stateaccount)); 通过这样做，用户账户数据将被持久化，并且由于我们之前集中管理了所有状态更新，它始终是最新的。这是我们开始从之前的所有重构中受益的地方 🙂。 由于数据已保存，我们还需要在应用程序加载时恢复它。由于我们将开始拥有更多的初始化代码，创建一个新的 init 函数可能是个好主意，同时包括之前在 appjs 底部的代码： ```js function init() { const savedAccount = localStoragegetItem(storageKey); if (savedAccount) { updateState('account', JSONparse(savedAccount));\n}\n// Our previous initialization code\nwindow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 823,
    "chunk_index": 21,
    "total_chunks": 26
  },
  {
    "id": "41e5e6ee8246ec046b69f9dbacae8546",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "API 访问，例如我们的用户账户数据。但有时，为了更好的用户体验或提高加载性能，也可以在运行于浏览器的客户端应用程序中持久化一些数据。 当你想在浏览器中持久化数据时，有几个重要问题需要考虑： 数据是否敏感？ 应避免在客户端存储任何敏感数据，例如用户密码。 需要保存数据多久？ 你是只计划在当前会话中访问数据，还是希望永久保存？ 根据你的需求，有多种方法可以在网络应用程序中存储信息。例如，你可以使用 URL 存储搜索查询，并使其在用户之间共享。你还可以使用 HTTP cookies 来存储需要与服务器共享的数据，例如身份验证信息。 另一种选择是使用浏览器提供的众多 API 中的一个来存储数据。其中两个特别有趣： localStorage：一个键值存储，允许跨不同会话持久化特定于当前网站的数据。存储在其中的数据永不过期。 sessionStorage：它的工作方式与 localStorage 类似，但存储的数据会在会话结束（浏览器关闭时）被清除。 注意，这两个 API 都只允许存储字符串。如果你想存储复杂对象，需要使用 JSONstringify() 将其序列化为 JSON 格式。 ✅ 如果你想创建一个不依赖服务器的网络应用程序，也可以使用 IndexedDB API 在客户端创建数据库。这个 API 适用于高级用例或需要存储大量数据的情况，因为它使用起来更复杂。 任务 我们希望用户在明确点击注销按钮之前保持登录状态，因此我们将使用 localStorage 来存储账户数据。首先，定义一个用于存储数据的键： js const storageKey = 'savedAccount'; 然后在 updateState() 函数的末尾添加以下代码： js localStoragesetItem(storageKey, JSONstringify(stateaccount)); 通过这样做，用户账户数据将被持久化，并且由于我们之前集中管理了所有状态更新，它始终是最新的。这是我们开始从之前的所有重构中受益的地方 🙂。 由于数据已保存，我们还需要在应用程序加载时恢复它。由于我们将开始拥有更多的初始化代码，创建一个新的 init 函数可能是个好主意，同时包括之前在 appjs 底部的代码： ```js function init() { const savedAccount = localStoragegetItem(storageKey); if (savedAccount) { updateState('account', JSONparse(savedAccount)); } // Our previous initialization code windowonpopstate = () => updateRoute();\nupdateRoute();\n}\ninit();\n```\n在这里，我们检索保存的数据，如果有数据，我们会相应地更新状态。重要的是要在更新路由之前完成此操作，因为在页面更新期间可能会有代码依赖状态。\n我们还可以将仪表板页面设为应用程序的默认页面，因为我们现在已经持久化了账户数据。如果没有找到数据，仪表板会负责重定向到登录页面。在 updateRoute() 中，将回退 return navigate('/login'); 替换为 return navigate('/dashboard');。\n现在登录应用程序并尝试刷新页面。你应该停留在仪表板页面。通过这次更新，我们解决了所有初始问题……\n刷新数据\n……但我们可能也制造了一个新问题。哎呀！\n使用 test 账户进入仪表板页面，然后在终端中运行以下命令以创建一个新交易：\nsh\ncurl --request POST \\\n--header \"Content-Type: application/json\" \\\n--data \"{ \\\"date\\\": \\\"2020-07-24\\\", \\\"object\\\": \\\"Bought book\\\", \\\"amount\\\": -20 }\" \\\nhttp://localhost:5000/api/accounts/test/transactions\n现在尝试刷新浏览器中的仪表板页面。发生了什么？你看到新交易了吗？\n由于 localStorage 的状态被无限期持久化，这也意味着它在你再次登录应用程序之前永远不会更新！\n一种可能的解决策略是每次加载仪表板时重新加载账户数据，以避免数据过时。\n任务\n创建一个新的 updateAccountData 函数：\n```js\nasync function updateAccountData() {\nconst account = state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1183,
    "chunk_index": 22,
    "total_chunks": 26
  },
  {
    "id": "817895917651ab89b57006ba55a3cb5f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "= localStoragegetItem(storageKey); if (savedAccount) { updateState('account', JSONparse(savedAccount)); } // Our previous initialization code windowonpopstate = () => updateRoute(); updateRoute(); } init(); ``` 在这里，我们检索保存的数据，如果有数据，我们会相应地更新状态。重要的是要在更新路由之前完成此操作，因为在页面更新期间可能会有代码依赖状态。 我们还可以将仪表板页面设为应用程序的默认页面，因为我们现在已经持久化了账户数据。如果没有找到数据，仪表板会负责重定向到登录页面。在 updateRoute() 中，将回退 return navigate('/login'); 替换为 return navigate('/dashboard');。 现在登录应用程序并尝试刷新页面。你应该停留在仪表板页面。通过这次更新，我们解决了所有初始问题…… 刷新数据 ……但我们可能也制造了一个新问题。哎呀！ 使用 test 账户进入仪表板页面，然后在终端中运行以下命令以创建一个新交易： sh curl --request POST \\ --header \"Content-Type: application/json\" \\ --data \"{ \\\"date\\\": \\\"2020-07-24\\\", \\\"object\\\": \\\"Bought book\\\", \\\"amount\\\": -20 }\" \\ http://localhost:5000/api/accounts/test/transactions 现在尝试刷新浏览器中的仪表板页面。发生了什么？你看到新交易了吗？ 由于 localStorage 的状态被无限期持久化，这也意味着它在你再次登录应用程序之前永远不会更新！ 一种可能的解决策略是每次加载仪表板时重新加载账户数据，以避免数据过时。 任务 创建一个新的 updateAccountData 函数： ```js async function updateAccountData() { const account = stateaccount;\nif ( account) {\nreturn logout();\n}\nconst data = await getAccount(account",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 23,
    "total_chunks": 26
  },
  {
    "id": "9f2c2215dba5d0d4ba4ddb1feba3d770",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "code windowonpopstate = () => updateRoute(); updateRoute(); } init(); ``` 在这里，我们检索保存的数据，如果有数据，我们会相应地更新状态。重要的是要在更新路由之前完成此操作，因为在页面更新期间可能会有代码依赖状态。 我们还可以将仪表板页面设为应用程序的默认页面，因为我们现在已经持久化了账户数据。如果没有找到数据，仪表板会负责重定向到登录页面。在 updateRoute() 中，将回退 return navigate('/login'); 替换为 return navigate('/dashboard');。 现在登录应用程序并尝试刷新页面。你应该停留在仪表板页面。通过这次更新，我们解决了所有初始问题…… 刷新数据 ……但我们可能也制造了一个新问题。哎呀！ 使用 test 账户进入仪表板页面，然后在终端中运行以下命令以创建一个新交易： sh curl --request POST \\ --header \"Content-Type: application/json\" \\ --data \"{ \\\"date\\\": \\\"2020-07-24\\\", \\\"object\\\": \\\"Bought book\\\", \\\"amount\\\": -20 }\" \\ http://localhost:5000/api/accounts/test/transactions 现在尝试刷新浏览器中的仪表板页面。发生了什么？你看到新交易了吗？ 由于 localStorage 的状态被无限期持久化，这也意味着它在你再次登录应用程序之前永远不会更新！ 一种可能的解决策略是每次加载仪表板时重新加载账户数据，以避免数据过时。 任务 创建一个新的 updateAccountData 函数： ```js async function updateAccountData() { const account = stateaccount; if ( account) { return logout(); } const data = await getAccount(accountuser);\nif (data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 24,
    "total_chunks": 26
  },
  {
    "id": "971d1cad1173cd771ecbd13c30111977",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第4部分：状态管理概念",
    "content": "= () => updateRoute(); updateRoute(); } init(); ``` 在这里，我们检索保存的数据，如果有数据，我们会相应地更新状态。重要的是要在更新路由之前完成此操作，因为在页面更新期间可能会有代码依赖状态。 我们还可以将仪表板页面设为应用程序的默认页面，因为我们现在已经持久化了账户数据。如果没有找到数据，仪表板会负责重定向到登录页面。在 updateRoute() 中，将回退 return navigate('/login'); 替换为 return navigate('/dashboard');。 现在登录应用程序并尝试刷新页面。你应该停留在仪表板页面。通过这次更新，我们解决了所有初始问题…… 刷新数据 ……但我们可能也制造了一个新问题。哎呀！ 使用 test 账户进入仪表板页面，然后在终端中运行以下命令以创建一个新交易： sh curl --request POST \\ --header \"Content-Type: application/json\" \\ --data \"{ \\\"date\\\": \\\"2020-07-24\\\", \\\"object\\\": \\\"Bought book\\\", \\\"amount\\\": -20 }\" \\ http://localhost:5000/api/accounts/test/transactions 现在尝试刷新浏览器中的仪表板页面。发生了什么？你看到新交易了吗？ 由于 localStorage 的状态被无限期持久化，这也意味着它在你再次登录应用程序之前永远不会更新！ 一种可能的解决策略是每次加载仪表板时重新加载账户数据，以避免数据过时。 任务 创建一个新的 updateAccountData 函数： ```js async function updateAccountData() { const account = stateaccount; if ( account) { return logout(); } const data = await getAccount(accountuser); if (dataerror) {\nreturn logout();\n}\nupdateState('account', data);\n}\n```\n此方法检查我们当前是否已登录，然后从服务器重新加载账户数据。\n创建另一个名为 refresh 的函数：\njs\nasync function refresh() {\nawait updateAccountData();\nupdateDashboard();\n}\n此函数更新账户数据，然后负责更新仪表板页面的 HTML。这是我们需要在仪表板路由加载时调用的内容。使用以下代码更新路由定义：\njs\nconst routes = {\n'/login': { templateId: 'login' },\n'/dashboard': { templateId: 'dashboard', init: refresh }\n};\n现在尝试重新加载仪表板，它应该显示更新后的账户数据。\n🚀 挑战\n现在我们每次加载仪表板时都会重新加载账户数据，你认为我们是否仍然需要持久化所有账户数据？\n尝试一起修改代码，将 localStorage 中保存和加载的数据仅限于应用程序正常运行所需的内容。\n课后测验\n课后测验\n作业\n实现“添加交易”对话框\n以下是完成作业后的示例结果：\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\4-state-management\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 892,
    "chunk_index": 25,
    "total_chunks": 26
  },
  {
    "id": "a56c98b2d9db0ba0370480b860319c09",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "构建银行应用程序第三部分：数据获取与使用方法\n课前测验\n课前测验\n简介\n在每个网页应用的核心部分都有一个重要元素：数据。数据可以有多种形式，但其主要目的是向用户展示信息。随着网页应用变得越来越互动和复杂，用户如何访问和交互信息已经成为网页开发的关键部分。\n在本课中，我们将学习如何从服务器异步获取数据，并使用这些数据在网页上显示信息，而无需重新加载 HTML。\n前置条件\n你需要完成本课的网页应用的登录和注册表单部分。此外，你需要安装 Node js 并在本地运行服务器 API，以便获取账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 260,
    "chunk_index": 0,
    "total_chunks": 63
  },
  {
    "id": "e622ba88a89b18ce46cb7440a6cc0ae9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "构建银行应用程序第三部分：数据获取与使用方法\n课前测验\n课前测验\n简介\n在每个网页应用的核心部分都有一个重要元素：数据。数据可以有多种形式，但其主要目的是向用户展示信息。随着网页应用变得越来越互动和复杂，用户如何访问和交互信息已经成为网页开发的关键部分。\n在本课中，我们将学习如何从服务器异步获取数据，并使用这些数据在网页上显示信息，而无需重新加载 HTML。\n前置条件\n你需要完成本课的网页应用的登录和注册表单部分。此外，你需要安装 Node js 并在本地运行服务器 API，以便获取账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\nAJAX 和数据获取\n传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。\n随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。\n在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。\n虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniuse",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 1,
    "total_chunks": 63
  },
  {
    "id": "d6cd41c8d75980b0461e792d20366a8e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "构建银行应用程序第三部分：数据获取与使用方法\n课前测验\n课前测验\n简介\n在每个网页应用的核心部分都有一个重要元素：数据。数据可以有多种形式，但其主要目的是向用户展示信息。随着网页应用变得越来越互动和复杂，用户如何访问和交互信息已经成为网页开发的关键部分。\n在本课中，我们将学习如何从服务器异步获取数据，并使用这些数据在网页上显示信息，而无需重新加载 HTML。\n前置条件\n你需要完成本课的网页应用的登录和注册表单部分。此外，你需要安装 Node js 并在本地运行服务器 API，以便获取账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\nAJAX 和数据获取\n传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。\n随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。\n在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。\n虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。\n任务\n在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 702,
    "chunk_index": 2,
    "total_chunks": 63
  },
  {
    "id": "329a77f820c930ffcdde6477c0f07a3e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "构建银行应用程序第三部分：数据获取与使用方法\n课前测验\n课前测验\n简介\n在每个网页应用的核心部分都有一个重要元素：数据。数据可以有多种形式，但其主要目的是向用户展示信息。随着网页应用变得越来越互动和复杂，用户如何访问和交互信息已经成为网页开发的关键部分。\n在本课中，我们将学习如何从服务器异步获取数据，并使用这些数据在网页上显示信息，而无需重新加载 HTML。\n前置条件\n你需要完成本课的网页应用的登录和注册表单部分。此外，你需要安装 Node js 并在本地运行服务器 API，以便获取账户数据。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\nAJAX 和数据获取\n传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。\n随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。\n在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。\n虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。\n任务\n在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数：\njs\nasync function login() {\nconst loginForm = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 725,
    "chunk_index": 3,
    "total_chunks": 63
  },
  {
    "id": "6210c34aea181542360f022c2b9bf78a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "你需要完成本课的网页应用的登录和注册表单部分。此外，你需要安装 Node js 并在本地运行服务器 API，以便获取账户数据。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` AJAX 和数据获取 传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。 随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。 在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。 虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。 任务 在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数： js async function login() { const loginForm = documentgetElementById('loginForm')\nconst user = loginForm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 562,
    "chunk_index": 4,
    "total_chunks": 63
  },
  {
    "id": "6d38be36b24d9e9d9468bb283ce8b1b0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "API，以便获取账户数据。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` AJAX 和数据获取 传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。 随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。 在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。 虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。 任务 在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数： js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginFormuser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 526,
    "chunk_index": 5,
    "total_chunks": 63
  },
  {
    "id": "d2ea92b2ae1f0d45fcf8865e9e15fae6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "API，以便获取账户数据。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` AJAX 和数据获取 传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。 随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。 在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。 虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。 任务 在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数： js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginFormuservalue;\n}\n我们首先使用 getElementById() 获取表单元素，然后通过 loginForm",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 548,
    "chunk_index": 6,
    "total_chunks": 63
  },
  {
    "id": "0bef4f3f8916499bd34b052c3c9356b8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "-> should return \"Bank API v1 00\" as a result ``` AJAX 和数据获取 传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。 随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。 在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。 虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。 任务 在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数： js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginFormuservalue; } 我们首先使用 getElementById() 获取表单元素，然后通过 loginFormuser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 7,
    "total_chunks": 63
  },
  {
    "id": "088047d499447cf1e1ab3e330d3d99ee",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "-> should return \"Bank API v1 00\" as a result ``` AJAX 和数据获取 传统网站在用户选择链接或通过表单提交数据时，会通过重新加载整个 HTML 页面来更新显示的内容。每次需要加载新数据时，网页服务器都会返回一个全新的 HTML 页面，浏览器需要重新处理这些页面，从而中断当前用户操作并限制加载期间的交互。这种工作流程也被称为多页面应用（Multi-Page Application，MPA）。 随着网页应用变得更加复杂和互动，一种新的技术出现了，即 AJAX（异步 JavaScript 和 XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。 在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。 虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。 任务 在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数： js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginFormuservalue; } 我们首先使用 getElementById() 获取表单元素，然后通过 loginFormuservalue 从输入中获取用户名。每个表单控件都可以通过其名称（在 HTML 中通过 name 属性设置）作为表单的属性来访问。\n类似于我们为注册所做的操作，我们将创建另一个函数来执行服务器请求，这次是为了检索账户数据：\njs\nasync function getAccount(user) {\ntry {\nconst response = await fetch('//localhost:5000/api/accounts/' + encodeURIComponent(user));\nreturn await response",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 8,
    "total_chunks": 63
  },
  {
    "id": "4baf13669d9adf77881adda48ac5cf9e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "XML）。这种技术允许网页应用使用 JavaScript 异步地向服务器发送和检索数据，而无需重新加载 HTML 页面，从而实现更快的更新和更流畅的用户交互。当从服务器接收到新数据时，可以使用 DOM API 通过 JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。 在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。 虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。 任务 在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数： js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginFormuservalue; } 我们首先使用 getElementById() 获取表单元素，然后通过 loginFormuservalue 从输入中获取用户名。每个表单控件都可以通过其名称（在 HTML 中通过 name 属性设置）作为表单的属性来访问。 类似于我们为注册所做的操作，我们将创建另一个函数来执行服务器请求，这次是为了检索账户数据： js async function getAccount(user) { try { const response = await fetch('//localhost:5000/api/accounts/' + encodeURIComponent(user)); return await responsejson();\n} catch (error) {\nreturn { error: error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 9,
    "total_chunks": 63
  },
  {
    "id": "e4b5cd4cdff46c3b8ae7a46995dfebf9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "JavaScript 更新当前的 HTML 页面。随着时间的推移，这种方法演变为现在的单页面应用（Single-Page Application，SPA）。 在 AJAX 刚推出时，唯一可用的异步获取数据的 API 是 XMLHttpRequest。但现代浏览器现在还实现了更方便且功能更强大的 Fetch API，它使用 Promise，并且更适合处理 JSON 数据。 虽然所有现代浏览器都支持 Fetch API，但如果你希望你的网页应用在旧版或遗留浏览器上运行，最好先查看 caniusecom 的兼容性表。 任务 在上一课中，我们实现了注册表单以创建账户。现在我们将添加代码以使用现有账户登录并获取其数据。打开 appjs 文件并添加一个新的 login 函数： js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginFormuservalue; } 我们首先使用 getElementById() 获取表单元素，然后通过 loginFormuservalue 从输入中获取用户名。每个表单控件都可以通过其名称（在 HTML 中通过 name 属性设置）作为表单的属性来访问。 类似于我们为注册所做的操作，我们将创建另一个函数来执行服务器请求，这次是为了检索账户数据： js async function getAccount(user) { try { const response = await fetch('//localhost:5000/api/accounts/' + encodeURIComponent(user)); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' };\n}\n}\n我们使用 fetch API 异步地从服务器请求数据，但这次除了调用的 URL 外不需要任何额外参数，因为我们只是查询数据。默认情况下，fetch 创建一个 GET HTTP 请求，这正是我们需要的。\n✅ encodeURIComponent() 是一个用于对 URL 中的特殊字符进行转义的函数。如果我们不调用此函数而直接在 URL 中使用 user 值，可能会出现什么问题？\n现在我们更新 login 函数以使用 getAccount：\n```js\nasync function login() {\nconst loginForm = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 537,
    "chunk_index": 10,
    "total_chunks": 63
  },
  {
    "id": "52e6fd7973351bb42d8c257114438718",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "= loginFormuservalue; } 我们首先使用 getElementById() 获取表单元素，然后通过 loginFormuservalue 从输入中获取用户名。每个表单控件都可以通过其名称（在 HTML 中通过 name 属性设置）作为表单的属性来访问。 类似于我们为注册所做的操作，我们将创建另一个函数来执行服务器请求，这次是为了检索账户数据： js async function getAccount(user) { try { const response = await fetch('//localhost:5000/api/accounts/' + encodeURIComponent(user)); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } 我们使用 fetch API 异步地从服务器请求数据，但这次除了调用的 URL 外不需要任何额外参数，因为我们只是查询数据。默认情况下，fetch 创建一个 GET HTTP 请求，这正是我们需要的。 ✅ encodeURIComponent() 是一个用于对 URL 中的特殊字符进行转义的函数。如果我们不调用此函数而直接在 URL 中使用 user 值，可能会出现什么问题？ 现在我们更新 login 函数以使用 getAccount： ```js async function login() { const loginForm = documentgetElementById('loginForm')\nconst user = loginForm user value;\nconst data = await getAccount(user);\nif (data error) {\nreturn console log('loginError', data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 11,
    "total_chunks": 63
  },
  {
    "id": "e2cdb8c89485513db3a1cd6dc5283a1a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "{ const response = await fetch('//localhost:5000/api/accounts/' + encodeURIComponent(user)); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } 我们使用 fetch API 异步地从服务器请求数据，但这次除了调用的 URL 外不需要任何额外参数，因为我们只是查询数据。默认情况下，fetch 创建一个 GET HTTP 请求，这正是我们需要的。 ✅ encodeURIComponent() 是一个用于对 URL 中的特殊字符进行转义的函数。如果我们不调用此函数而直接在 URL 中使用 user 值，可能会出现什么问题？ 现在我们更新 login 函数以使用 getAccount： ```js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror);\n}\naccount = data;\nnavigate('/dashboard');\n}\n```\n首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。\n然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量：\njs\nlet account = null;\n在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。\n最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML：\n```html\n```\n通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。\n在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数：\n```js\naccount = result;\nnavigate('/dashboard');\n```\n✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 12,
    "total_chunks": 63
  },
  {
    "id": "fcc320baf434505ac7fd4100647bf917",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "函数以使用 getAccount： ```js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 13,
    "total_chunks": 63
  },
  {
    "id": "2ab964c4c59ce85d30763397b0785959",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "函数以使用 getAccount： ```js async function login() { const loginForm = documentgetElementById('loginForm') const user = loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。\n> 通过学习这节[课程](https://docs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 14,
    "total_chunks": 63
  },
  {
    "id": "bf21f9692235d143276e266daa9e7205",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "function login() { const loginForm = documentgetElementById('loginForm') const user = loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 15,
    "total_chunks": 63
  },
  {
    "id": "1a73b3cdfa4b0ca6de84a82897c83035",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "function login() { const loginForm = documentgetElementById('loginForm') const user = loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 16,
    "total_chunks": 63
  },
  {
    "id": "55ec538a1bb3b647129181b62845644b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "function login() { const loginForm = documentgetElementById('loginForm') const user = loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WT",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 520,
    "chunk_index": 17,
    "total_chunks": 63
  },
  {
    "id": "1fc636968eb37bb4396c28a6aa3a0f4c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "function login() { const loginForm = documentgetElementById('loginForm') const user = loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。\n## 更新 HTML 以显示数据\n现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 583,
    "chunk_index": 18,
    "total_chunks": 63
  },
  {
    "id": "95afcbbd6e50f8d4c54e4ac86b956225",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "loginForm user value; const data = await getAccount(user); if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素：\n- 使用 [`textContent`](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 19,
    "total_chunks": 63
  },
  {
    "id": "6177e88b95877f31af392870aa823473",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 595,
    "chunk_index": 20,
    "total_chunks": 63
  },
  {
    "id": "f5e1ca4147644eb58a77240818e91bdd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "if (data error) { return console log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。\n- 使用 [`document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 21,
    "total_chunks": 63
  },
  {
    "id": "17b74547126275114d6575da2b6fd1ea",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 22,
    "total_chunks": 63
  },
  {
    "id": "820aa7bf7b1de5087ab1f997f5253e53",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 23,
    "total_chunks": 63
  },
  {
    "id": "a34e5c319a532121f1d62ac30d5ce307",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "log('loginError', dataerror); } account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 702,
    "chunk_index": 24,
    "total_chunks": 63
  },
  {
    "id": "0163c69464c7efa8cb3556b69d60d145",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "} account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 25,
    "total_chunks": 63
  },
  {
    "id": "98ef647d9f7ff2814cc96e3a458994ec",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "} account = data; navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。\n✅ 使用元素的 [`innerHTML`](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 735,
    "chunk_index": 26,
    "total_chunks": 63
  },
  {
    "id": "15ca45909e6ebc042804c4612fe6cfa1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 732,
    "chunk_index": 27,
    "total_chunks": 63
  },
  {
    "id": "33ec9ef2db36cdec1fe9a9d909028ab1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "navigate('/dashboard'); } ``` 首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 788,
    "chunk_index": 28,
    "total_chunks": 63
  },
  {
    "id": "804e78044b1f4ca17b15af03d41c9a4c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 782,
    "chunk_index": 29,
    "total_chunks": 63
  },
  {
    "id": "025260909d0933346d46bbadadbdffaf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "首先，由于 getAccount 是一个异步函数，我们需要使用 await 关键字来等待服务器结果。与任何服务器请求一样，我们还需要处理错误情况。目前我们只添加一个日志消息来显示错误，稍后再处理。 然后我们需要将数据存储在某个地方，以便稍后用于显示仪表盘信息。由于 account 变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。\n### 任务\n在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。\n让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前：\n```html",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 921,
    "chunk_index": 30,
    "total_chunks": 63
  },
  {
    "id": "c15016290bc990cb9ea87265661ba959",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 823,
    "chunk_index": 31,
    "total_chunks": 63
  },
  {
    "id": "5aa8f54c87d4b7bc41d4c51aeaa522d9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "变量尚不存在，我们将在文件顶部创建一个全局变量： js let account = null; 在用户数据保存到变量后，我们可以使用已有的 navigate() 函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin```\n这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。\n回到 `app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 889,
    "chunk_index": 32,
    "total_chunks": 63
  },
  {
    "id": "70c99000d7011cf7e511237d12415991",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "函数从登录页面导航到仪表盘。 最后，我们需要在登录表单提交时调用我们的 login 函数，通过修改 HTML： ```html ``` 通过注册新账户并尝试使用相同账户登录，测试一切是否正常工作。 在继续下一部分之前，我们还可以通过在函数底部添加以下内容来完成 `register` 函数： ```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`：\n```js\nfunction updateElement(id, text) {\nconst element = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 879,
    "chunk_index": 33,
    "total_chunks": 63
  },
  {
    "id": "a6afb499f609d54ade126e1a96d06016",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "```js account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id);\nelement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 784,
    "chunk_index": 34,
    "total_chunks": 63
  },
  {
    "id": "5ec0ada9e6bb4893011e204f0651d40c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "account = result; navigate('/dashboard'); ``` ✅ 你知道吗？默认情况下，你只能从与当前网页相同的*域名和端口*调用服务器 API。这是浏览器强制执行的安全机制。但等等，我们的网页应用运行在 `localhost:3000`，而服务器 API 运行在 `localhost:5000`，为什么它能正常工作？通过使用一种称为[跨域资源共享（CORS）](https://developermozillaorg/docs/Web/HTTP/CORS)的技术，如果服务器在响应中添加特殊头部，允许特定域名的例外，就可以执行跨域 HTTP 请求。 > 通过学习这节[课程](https://docsmicrosoftcom/learn/modules/use-apis-discover-museum-art/WTmc_id=academic-77807-sagibbon)，了解更多关于 API 的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text;\n}\n```\n这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息：\n```js\nif (data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 860,
    "chunk_index": 35,
    "total_chunks": 63
  },
  {
    "id": "b9fbe7437cd7d2fb47ad04f7c8eff297",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "的知识。 ## 更新 HTML 以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) {\nreturn updateElement('loginError', data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 36,
    "total_chunks": 63
  },
  {
    "id": "32b1b3969aa53bffae8949a94d14a01d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "以显示数据 现在我们有了用户数据，我们需要更新现有 HTML 以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror);\n}\n```\n现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 37,
    "total_chunks": 63
  },
  {
    "id": "fb1533b8880a4e0d641bd0e31c03c815",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 38,
    "total_chunks": 63
  },
  {
    "id": "4515dc3cef691d08254ea8071e857c72",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 39,
    "total_chunks": 63
  },
  {
    "id": "ca4db698713cf909d98f10aaadbc7c3f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](//",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 40,
    "total_chunks": 63
  },
  {
    "id": "2bad4dd95c2417796f1e5b3068be34d3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](///",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 41,
    "total_chunks": 63
  },
  {
    "id": "7049520f172e06df0cd3527e957d91d0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](////7-bank-project/3-data/images/login-error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 42,
    "total_chunks": 63
  },
  {
    "id": "322b88a8646146a92021a3f965ae14c9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "以显示这些数据。我们已经知道如何使用例如 `documentgetElementById()` 从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](////7-bank-project/3-data/images/login-errorpng)\n现在我们有了一个视觉上显示的错误文本，但如果你使用屏幕阅读器尝试，你会发现没有任何提示。为了让动态添加到页面的文本被屏幕阅读器宣布，我们需要使用一种称为[实时区域（Live Region）](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 752,
    "chunk_index": 43,
    "total_chunks": 63
  },
  {
    "id": "1afcaf9db9c0713adf58c5f48f8312c3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](////7-bank-project/3-data/images/login-errorpng) 现在我们有了一个视觉上显示的错误文本，但如果你使用屏幕阅读器尝试，你会发现没有任何提示。为了让动态添加到页面的文本被屏幕阅读器宣布，我们需要使用一种称为[实时区域（Live Region）](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 735,
    "chunk_index": 44,
    "total_chunks": 63
  },
  {
    "id": "88c8a4e09659519a3135e0e93784fd7a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "从 DOM 中检索元素。在获取基础元素后，可以使用以下 API 修改或添加子元素： - 使用 [`textContent`](https://developermozillaorg/docs/Web/API/Node/textContent) 属性可以更改元素的文本。注意，更改此值会移除元素的所有子元素（如果有），并用提供的文本替换。因此，将空字符串 `''` 分配给它也是一种高效的方法来移除给定元素的所有子元素。 - 使用 [`documentcreateElement()`](https://developermozillaorg/docs/Web/API/Document/createElement) 和 [`append()`](https://developermozillaorg/docs/Web/API/ParentNode/append) 方法可以创建并附加一个或多个新的子元素。 ✅ 使用元素的 [`innerHTML`](https://developermozillaorg/docs/Web/API/Element/innerHTML) 属性也可以更改其 HTML 内容，但应避免使用此方法，因为它容易受到[跨站脚本（XSS）](https://developermozillaorg/docs/Glossary/Cross-site_scripting)攻击。 ### 任务 在进入*仪表盘*屏幕之前，我们需要在*登录*页面上做一件事。目前，如果你尝试使用不存在的用户名登录，控制台会显示一条消息，但普通用户不会看到任何变化，也不知道发生了什么。 让我们在登录表单中添加一个占位元素，以便在需要时显示错误消息。一个不错的位置是登录 `` 之前： ```htmlLogin``` 这个 `` 元素是空的，这意味着在我们添加内容之前，屏幕上不会显示任何内容。我们还为它设置了一个 `id`，以便通过 JavaScript 轻松检索。 回到 `appjs` 文件并创建一个新的辅助函数 `updateElement`： ```js function updateElement(id, text) { const element = documentgetElementById(id); elementtextContent = text; } ``` 这个函数非常简单：给定一个元素 *id* 和 *text*，它会更新与该 `id` 匹配的 DOM 元素的文本内容。让我们在 `login` 函数中用此方法替换之前的错误消息： ```js if (dataerror) { return updateElement('loginError', dataerror); } ``` 现在，如果你尝试使用无效账户登录，你应该会看到类似这样的内容：[显示登录错误消息的截图](////7-bank-project/3-data/images/login-errorpng) 现在我们有了一个视觉上显示的错误文本，但如果你使用屏幕阅读器尝试，你会发现没有任何提示。为了让动态添加到页面的文本被屏幕阅读器宣布，我们需要使用一种称为[实时区域（Live Region）](https://developermozillaorg/docs/Web/Accessibility/ARIA/ARIA_Live_Regions)的技术。这里我们将使用一种特定类型的实时区域，称为警报：\n```html\n```\n为 `register` 函数的错误实现相同的行为（别忘了更新 HTML）。\n## 在仪表盘上显示信息\n使用我们刚刚看到的相同技术，我们还将处理在仪表盘页面上显示账户信息。\n以下是从服务器接收到的账户对象的样子：\n```json\n{\n\"user\": \"test\",\n\"currency\": \"$\",\n\"description\": \"Test account\",\n\"balance\": 75,\n\"transactions\": [\n{ \"id\": \"1\", \"date\": \"2020-10-01\", \"object\": \"Pocket money\", \"amount\": 50 },\n{ \"id\": \"2\", \"date\": \"2020-10-03\", \"object\": \"Book\", \"amount\": -10 },\n{ \"id\": \"3\", \"date\": \"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 }\n],\n}\n```\n> 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。\n### 任务\n首先，我们替换 HTML 中的“余额”部分以添加占位元素：\n```html\nBalance:\n```\n我们还将在下面添加一个新部分以显示账户描述：\n```html\n```\n✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://www",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1130,
    "chunk_index": 45,
    "total_chunks": 63
  },
  {
    "id": "01d62d413903309712d06d196735786e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "现在我们有了一个视觉上显示的错误文本，但如果你使用屏幕阅读器尝试，你会发现没有任何提示。为了让动态添加到页面的文本被屏幕阅读器宣布，我们需要使用一种称为[实时区域（Live Region）](https://developermozillaorg/docs/Web/Accessibility/ARIA/ARIA_Live_Regions)的技术。这里我们将使用一种特定类型的实时区域，称为警报： ```html ``` 为 `register` 函数的错误实现相同的行为（别忘了更新 HTML）。 ## 在仪表盘上显示信息 使用我们刚刚看到的相同技术，我们还将处理在仪表盘页面上显示账户信息。 以下是从服务器接收到的账户对象的样子： ```json { \"user\": \"test\", \"currency\": \"$\", \"description\": \"Test account\", \"balance\": 75, \"transactions\": [ { \"id\": \"1\", \"date\": \"2020-10-01\", \"object\": \"Pocket money\", \"amount\": 50 }, { \"id\": \"2\", \"date\": \"2020-10-03\", \"object\": \"Book\", \"amount\": -10 }, { \"id\": \"3\", \"date\": \"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 } ], } ``` > 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。 ### 任务 首先，我们替换 HTML 中的“余额”部分以添加占位元素： ```html Balance: ``` 我们还将在下面添加一个新部分以显示账户描述： ```html ``` ✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://wwwnomensa",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 46,
    "total_chunks": 63
  },
  {
    "id": "5a1d3ce3d1d893f9d2fb7309ca97244a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "现在我们有了一个视觉上显示的错误文本，但如果你使用屏幕阅读器尝试，你会发现没有任何提示。为了让动态添加到页面的文本被屏幕阅读器宣布，我们需要使用一种称为[实时区域（Live Region）](https://developermozillaorg/docs/Web/Accessibility/ARIA/ARIA_Live_Regions)的技术。这里我们将使用一种特定类型的实时区域，称为警报： ```html ``` 为 `register` 函数的错误实现相同的行为（别忘了更新 HTML）。 ## 在仪表盘上显示信息 使用我们刚刚看到的相同技术，我们还将处理在仪表盘页面上显示账户信息。 以下是从服务器接收到的账户对象的样子： ```json { \"user\": \"test\", \"currency\": \"$\", \"description\": \"Test account\", \"balance\": 75, \"transactions\": [ { \"id\": \"1\", \"date\": \"2020-10-01\", \"object\": \"Pocket money\", \"amount\": 50 }, { \"id\": \"2\", \"date\": \"2020-10-03\", \"object\": \"Book\", \"amount\": -10 }, { \"id\": \"3\", \"date\": \"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 } ], } ``` > 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。 ### 任务 首先，我们替换 HTML 中的“余额”部分以添加占位元素： ```html Balance: ``` 我们还将在下面添加一个新部分以显示账户描述： ```html ``` ✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://wwwnomensacom/blog/2017/how-structure-headings-web-accessibility)对可访问性的重要性，并批判性地审视页面以确定还有哪些内容可以作为标题。\n接下来，我们将在 `app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 540,
    "chunk_index": 47,
    "total_chunks": 63
  },
  {
    "id": "39dceb8303cf27ff15d0cf99899351ca",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "```html ``` 为 `register` 函数的错误实现相同的行为（别忘了更新 HTML）。 ## 在仪表盘上显示信息 使用我们刚刚看到的相同技术，我们还将处理在仪表盘页面上显示账户信息。 以下是从服务器接收到的账户对象的样子： ```json { \"user\": \"test\", \"currency\": \"$\", \"description\": \"Test account\", \"balance\": 75, \"transactions\": [ { \"id\": \"1\", \"date\": \"2020-10-01\", \"object\": \"Pocket money\", \"amount\": 50 }, { \"id\": \"2\", \"date\": \"2020-10-03\", \"object\": \"Book\", \"amount\": -10 }, { \"id\": \"3\", \"date\": \"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 } ], } ``` > 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。 ### 任务 首先，我们替换 HTML 中的“余额”部分以添加占位元素： ```html Balance: ``` 我们还将在下面添加一个新部分以显示账户描述： ```html ``` ✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://wwwnomensacom/blog/2017/how-structure-headings-web-accessibility)对可访问性的重要性，并批判性地审视页面以确定还有哪些内容可以作为标题。 接下来，我们将在 `appjs` 中创建一个新函数以填充占位符：\n```js\nfunction updateDashboard() {\nif ( account) {\nreturn navigate('/login');\n}\nupdateElement('description', account description);\nupdateElement('balance', account balance toFixed(2));\nupdateElement('currency', account",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 48,
    "total_chunks": 63
  },
  {
    "id": "6cb73caf51ae7837d893d8be93ed12d7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "\"transactions\": [ { \"id\": \"1\", \"date\": \"2020-10-01\", \"object\": \"Pocket money\", \"amount\": 50 }, { \"id\": \"2\", \"date\": \"2020-10-03\", \"object\": \"Book\", \"amount\": -10 }, { \"id\": \"3\", \"date\": \"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 } ], } ``` > 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。 ### 任务 首先，我们替换 HTML 中的“余额”部分以添加占位元素： ```html Balance: ``` 我们还将在下面添加一个新部分以显示账户描述： ```html ``` ✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://wwwnomensacom/blog/2017/how-structure-headings-web-accessibility)对可访问性的重要性，并批判性地审视页面以确定还有哪些内容可以作为标题。 接下来，我们将在 `appjs` 中创建一个新函数以填充占位符： ```js function updateDashboard() { if ( account) { return navigate('/login'); } updateElement('description', account description); updateElement('balance', account balance toFixed(2)); updateElement('currency', accountcurrency);\n}\n```\n首先，我们检查是否有需要的账户数据，然后再继续。然后我们使用之前创建的 `updateElement()` 函数更新 HTML。\n> 为了让余额显示更美观，我们使用方法 [`toFixed(2)`](https://developer mozilla org/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed) 强制显示小数点后两位。\n现在我们需要在每次加载仪表盘时调用 `updateDashboard()` 函数。如果你已经完成了[第一课的作业]( /1-template-route/assignment",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 49,
    "total_chunks": 63
  },
  {
    "id": "968f3701871cc2c656a3693203465aad",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "\"date\": \"2020-10-03\", \"object\": \"Book\", \"amount\": -10 }, { \"id\": \"3\", \"date\": \"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 } ], } ``` > 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。 ### 任务 首先，我们替换 HTML 中的“余额”部分以添加占位元素： ```html Balance: ``` 我们还将在下面添加一个新部分以显示账户描述： ```html ``` ✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://wwwnomensacom/blog/2017/how-structure-headings-web-accessibility)对可访问性的重要性，并批判性地审视页面以确定还有哪些内容可以作为标题。 接下来，我们将在 `appjs` 中创建一个新函数以填充占位符： ```js function updateDashboard() { if ( account) { return navigate('/login'); } updateElement('description', account description); updateElement('balance', account balance toFixed(2)); updateElement('currency', accountcurrency); } ``` 首先，我们检查是否有需要的账户数据，然后再继续。然后我们使用之前创建的 `updateElement()` 函数更新 HTML。 > 为了让余额显示更美观，我们使用方法 [`toFixed(2)`](https://developer mozilla org/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed) 强制显示小数点后两位。 现在我们需要在每次加载仪表盘时调用 `updateDashboard()` 函数。如果你已经完成了[第一课的作业]( /1-template-route/assignmentmd)，这应该很简单，否则你可以使用以下实现。\n将以下代码添加到 `updateRoute()` 函数的末尾：\n```js\nif (typeof route",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 50,
    "total_chunks": 63
  },
  {
    "id": "f52a7b732155486d5ff04ee614bd79fc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "{ \"id\": \"3\", \"date\": \"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 } ], } ``` > 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。 ### 任务 首先，我们替换 HTML 中的“余额”部分以添加占位元素： ```html Balance: ``` 我们还将在下面添加一个新部分以显示账户描述： ```html ``` ✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://wwwnomensacom/blog/2017/how-structure-headings-web-accessibility)对可访问性的重要性，并批判性地审视页面以确定还有哪些内容可以作为标题。 接下来，我们将在 `appjs` 中创建一个新函数以填充占位符： ```js function updateDashboard() { if ( account) { return navigate('/login'); } updateElement('description', account description); updateElement('balance', account balance toFixed(2)); updateElement('currency', accountcurrency); } ``` 首先，我们检查是否有需要的账户数据，然后再继续。然后我们使用之前创建的 `updateElement()` 函数更新 HTML。 > 为了让余额显示更美观，我们使用方法 [`toFixed(2)`](https://developer mozilla org/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed) 强制显示小数点后两位。 现在我们需要在每次加载仪表盘时调用 `updateDashboard()` 函数。如果你已经完成了[第一课的作业]( /1-template-route/assignmentmd)，这应该很简单，否则你可以使用以下实现。 将以下代码添加到 `updateRoute()` 函数的末尾： ```js if (typeof routeinit === 'function') {\nroute",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 51,
    "total_chunks": 63
  },
  {
    "id": "23aac171308ed0dd4fcdb25798d643eb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "\"2020-10-04\", \"object\": \"Sandwich\", \"amount\": -5 } ], } ``` > 注意：为了让你的操作更简单，你可以使用已经填充数据的预先存在的 `test` 账户。 ### 任务 首先，我们替换 HTML 中的“余额”部分以添加占位元素： ```html Balance: ``` 我们还将在下面添加一个新部分以显示账户描述： ```html ``` ✅ 由于账户描述充当了内容下方的标题，它在语义上被标记为标题。了解更多关于[标题结构](https://wwwnomensacom/blog/2017/how-structure-headings-web-accessibility)对可访问性的重要性，并批判性地审视页面以确定还有哪些内容可以作为标题。 接下来，我们将在 `appjs` 中创建一个新函数以填充占位符： ```js function updateDashboard() { if ( account) { return navigate('/login'); } updateElement('description', account description); updateElement('balance', account balance toFixed(2)); updateElement('currency', accountcurrency); } ``` 首先，我们检查是否有需要的账户数据，然后再继续。然后我们使用之前创建的 `updateElement()` 函数更新 HTML。 > 为了让余额显示更美观，我们使用方法 [`toFixed(2)`](https://developer mozilla org/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed) 强制显示小数点后两位。 现在我们需要在每次加载仪表盘时调用 `updateDashboard()` 函数。如果你已经完成了[第一课的作业]( /1-template-route/assignmentmd)，这应该很简单，否则你可以使用以下实现。 将以下代码添加到 `updateRoute()` 函数的末尾： ```js if (typeof routeinit === 'function') { routeinit();\n}\n```\n并使用以下代码更新路由定义：\n```js\nconst routes = {\n'/login': { templateId: 'login' },\n'/dashboard': { templateId: 'dashboard', init: updateDashboard }\n};\n```\n通过此更改，每次显示仪表盘页面时，都会调用 `updateDashboard()` 函数。登录后，你应该能够看到账户余额、货币和描述。\n## 使用 HTML 模板动态创建表格行\n在[第一课](",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 594,
    "chunk_index": 52,
    "total_chunks": 63
  },
  {
    "id": "4595432d32863129275015597f40ed8e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "function updateDashboard() { if ( account) { return navigate('/login'); } updateElement('description', account description); updateElement('balance', account balance toFixed(2)); updateElement('currency', accountcurrency); } ``` 首先，我们检查是否有需要的账户数据，然后再继续。然后我们使用之前创建的 `updateElement()` 函数更新 HTML。 > 为了让余额显示更美观，我们使用方法 [`toFixed(2)`](https://developer mozilla org/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed) 强制显示小数点后两位。 现在我们需要在每次加载仪表盘时调用 `updateDashboard()` 函数。如果你已经完成了[第一课的作业]( /1-template-route/assignmentmd)，这应该很简单，否则你可以使用以下实现。 将以下代码添加到 `updateRoute()` 函数的末尾： ```js if (typeof routeinit === 'function') { routeinit(); } ``` 并使用以下代码更新路由定义： ```js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard', init: updateDashboard } }; ``` 通过此更改，每次显示仪表盘页面时，都会调用 `updateDashboard()` 函数。登录后，你应该能够看到账户余额、货币和描述。 ## 使用 HTML 模板动态创建表格行 在[第一课](/1-template-route/README md)中，我们使用 HTML 模板和 [`appendChild()`](https://developer mozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 53,
    "total_chunks": 63
  },
  {
    "id": "c98497fc21551f5c2d23e53b3fa952e1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "account) { return navigate('/login'); } updateElement('description', account description); updateElement('balance', account balance toFixed(2)); updateElement('currency', accountcurrency); } ``` 首先，我们检查是否有需要的账户数据，然后再继续。然后我们使用之前创建的 `updateElement()` 函数更新 HTML。 > 为了让余额显示更美观，我们使用方法 [`toFixed(2)`](https://developer mozilla org/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed) 强制显示小数点后两位。 现在我们需要在每次加载仪表盘时调用 `updateDashboard()` 函数。如果你已经完成了[第一课的作业]( /1-template-route/assignmentmd)，这应该很简单，否则你可以使用以下实现。 将以下代码添加到 `updateRoute()` 函数的末尾： ```js if (typeof routeinit === 'function') { routeinit(); } ``` 并使用以下代码更新路由定义： ```js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard', init: updateDashboard } }; ``` 通过此更改，每次显示仪表盘页面时，都会调用 `updateDashboard()` 函数。登录后，你应该能够看到账户余额、货币和描述。 ## 使用 HTML 模板动态创建表格行 在[第一课](/1-template-route/README md)中，我们使用 HTML 模板和 [`appendChild()`](https://developer mozillaorg/docs/Web/API/Node/appendChild) 方法实现了应用中的导航。模板也可以更小，并用于动态填充页面的重复部分。\n我们将使用类似的方法在 HTML 表格中显示交易列表。\n### 任务\n在 HTML `` 中添加一个新模板：\n```html\n```\n此模板表示单个表格行，包含我们想要填充的三个列：交易的*日期*、*对象*和*金额*。\n然后，将此 `id` 属性添加到仪表盘模板中表格的 `` 元素，以便通过 JavaScript 更容易找到：\n```html\n```\n我们的 HTML 准备好了，现在切换到 JavaScript 代码并创建一个新函数 `createTransactionRow`：\n```js\nfunction createTransactionRow(transaction) {\nconst template = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 578,
    "chunk_index": 54,
    "total_chunks": 63
  },
  {
    "id": "e145f861cb557cb64fff5b45cc2bdb76",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "routeinit === 'function') { routeinit(); } ``` 并使用以下代码更新路由定义： ```js const routes = { '/login': { templateId: 'login' }, '/dashboard': { templateId: 'dashboard', init: updateDashboard } }; ``` 通过此更改，每次显示仪表盘页面时，都会调用 `updateDashboard()` 函数。登录后，你应该能够看到账户余额、货币和描述。 ## 使用 HTML 模板动态创建表格行 在[第一课](/1-template-route/README md)中，我们使用 HTML 模板和 [`appendChild()`](https://developer mozillaorg/docs/Web/API/Node/appendChild) 方法实现了应用中的导航。模板也可以更小，并用于动态填充页面的重复部分。 我们将使用类似的方法在 HTML 表格中显示交易列表。 ### 任务 在 HTML `` 中添加一个新模板： ```html ``` 此模板表示单个表格行，包含我们想要填充的三个列：交易的*日期*、*对象*和*金额*。 然后，将此 `id` 属性添加到仪表盘模板中表格的 `` 元素，以便通过 JavaScript 更容易找到： ```html ``` 我们的 HTML 准备好了，现在切换到 JavaScript 代码并创建一个新函数 `createTransactionRow`： ```js function createTransactionRow(transaction) { const template = documentgetElementById('transaction');\nconst transactionRow = template content cloneNode(true);\nconst tr = transactionRow querySelector('tr');\ntr children[0] textContent = transaction date;\ntr children[1] textContent = transaction object;\ntr children[2] textContent = transaction amount toFixed(2);\nreturn transactionRow;\n}\n```\n此函数正如其名称所示：使用我们之前创建的模板，它创建一个新的表格行并使用交易数据填充其内容。我们将在 `updateDashboard()` 函数中使用它来填充表格：\n```js\nconst transactionsRows = document createDocumentFragment();\nfor (const transaction of account",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 55,
    "total_chunks": 63
  },
  {
    "id": "6f07f1d184af6611e5ab069a4380f141",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "`` 中添加一个新模板： ```html ``` 此模板表示单个表格行，包含我们想要填充的三个列：交易的*日期*、*对象*和*金额*。 然后，将此 `id` 属性添加到仪表盘模板中表格的 `` 元素，以便通过 JavaScript 更容易找到： ```html ``` 我们的 HTML 准备好了，现在切换到 JavaScript 代码并创建一个新函数 `createTransactionRow`： ```js function createTransactionRow(transaction) { const template = documentgetElementById('transaction'); const transactionRow = template content cloneNode(true); const tr = transactionRow querySelector('tr'); tr children[0] textContent = transaction date; tr children[1] textContent = transaction object; tr children[2] textContent = transaction amount toFixed(2); return transactionRow; } ``` 此函数正如其名称所示：使用我们之前创建的模板，它创建一个新的表格行并使用交易数据填充其内容。我们将在 `updateDashboard()` 函数中使用它来填充表格： ```js const transactionsRows = document createDocumentFragment(); for (const transaction of accounttransactions) {\nconst transactionRow = createTransactionRow(transaction);\ntransactionsRows appendChild(transactionRow);\n}\nupdateElement('transactions', transactionsRows);\n```\n这里我们使用方法 [`document createDocumentFragment()`](https://developer mozilla org/docs/Web/API/Document/createDocumentFragment)，它创建一个新的 DOM 片段，我们可以在其上操作，然后最终将其附加到我们的 HTML 表格中。\n还有一件事我们需要做才能让此代码正常工作，因为我们的 `updateElement()` 函数目前仅支持文本内容。让我们稍微修改一下它的代码：\n```js\nfunction updateElement(id, textOrNode) {\nconst element = document getElementById(id);\nelement textContent = ''; // Removes all children\nelement append(textOrNode);\n}\n```\n我们使用 [`append()`](https://developer mozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 56,
    "total_chunks": 63
  },
  {
    "id": "ffa3921b065f2b391ed335f4b4df3022",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "= transaction object; tr children[2] textContent = transaction amount toFixed(2); return transactionRow; } ``` 此函数正如其名称所示：使用我们之前创建的模板，它创建一个新的表格行并使用交易数据填充其内容。我们将在 `updateDashboard()` 函数中使用它来填充表格： ```js const transactionsRows = document createDocumentFragment(); for (const transaction of accounttransactions) { const transactionRow = createTransactionRow(transaction); transactionsRows appendChild(transactionRow); } updateElement('transactions', transactionsRows); ``` 这里我们使用方法 [`document createDocumentFragment()`](https://developer mozilla org/docs/Web/API/Document/createDocumentFragment)，它创建一个新的 DOM 片段，我们可以在其上操作，然后最终将其附加到我们的 HTML 表格中。 还有一件事我们需要做才能让此代码正常工作，因为我们的 `updateElement()` 函数目前仅支持文本内容。让我们稍微修改一下它的代码： ```js function updateElement(id, textOrNode) { const element = document getElementById(id); element textContent = ''; // Removes all children element append(textOrNode); } ``` 我们使用 [`append()`](https://developer mozillaorg/docs/Web/API/ParentNode/append) 方法，因为它允许将文本或 [DOM 节点](https://developer mozilla org/docs/Web/API/Node) 附加到父元素，这非常适合我们的所有用例。\n如果你尝试使用 `test` 账户登录，现在应该可以在仪表板上看到交易列表了 🎉。\n---\n## 🚀 挑战\n合作将仪表板页面打造成一个真实的银行应用。如果你已经为应用程序设计了样式，尝试使用 [媒体查询](https://developer mozilla org/docs/Web/CSS/Media_Queries) 来创建一个 [响应式设计](https://developer mozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 57,
    "total_chunks": 63
  },
  {
    "id": "c39d5eeb00cfb245623cf88c5df54bba",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "document createDocumentFragment(); for (const transaction of accounttransactions) { const transactionRow = createTransactionRow(transaction); transactionsRows appendChild(transactionRow); } updateElement('transactions', transactionsRows); ``` 这里我们使用方法 [`document createDocumentFragment()`](https://developer mozilla org/docs/Web/API/Document/createDocumentFragment)，它创建一个新的 DOM 片段，我们可以在其上操作，然后最终将其附加到我们的 HTML 表格中。 还有一件事我们需要做才能让此代码正常工作，因为我们的 `updateElement()` 函数目前仅支持文本内容。让我们稍微修改一下它的代码： ```js function updateElement(id, textOrNode) { const element = document getElementById(id); element textContent = ''; // Removes all children element append(textOrNode); } ``` 我们使用 [`append()`](https://developer mozillaorg/docs/Web/API/ParentNode/append) 方法，因为它允许将文本或 [DOM 节点](https://developer mozilla org/docs/Web/API/Node) 附加到父元素，这非常适合我们的所有用例。 如果你尝试使用 `test` 账户登录，现在应该可以在仪表板上看到交易列表了 🎉。 --- ## 🚀 挑战 合作将仪表板页面打造成一个真实的银行应用。如果你已经为应用程序设计了样式，尝试使用 [媒体查询](https://developer mozilla org/docs/Web/CSS/Media_Queries) 来创建一个 [响应式设计](https://developer mozillaorg/docs/Web/Progressive_web_apps/Responsive/responsive_design_building_blocks)，使其在桌面和移动设备上都能良好运行。\n以下是一个经过样式设计的仪表板页面示例： [仪表板样式化后的示例结果截图]( / / / /7-bank-project/images/screen2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 58,
    "total_chunks": 63
  },
  {
    "id": "89278ce1963e2a4418f2e9175642159d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "accounttransactions) { const transactionRow = createTransactionRow(transaction); transactionsRows appendChild(transactionRow); } updateElement('transactions', transactionsRows); ``` 这里我们使用方法 [`document createDocumentFragment()`](https://developer mozilla org/docs/Web/API/Document/createDocumentFragment)，它创建一个新的 DOM 片段，我们可以在其上操作，然后最终将其附加到我们的 HTML 表格中。 还有一件事我们需要做才能让此代码正常工作，因为我们的 `updateElement()` 函数目前仅支持文本内容。让我们稍微修改一下它的代码： ```js function updateElement(id, textOrNode) { const element = document getElementById(id); element textContent = ''; // Removes all children element append(textOrNode); } ``` 我们使用 [`append()`](https://developer mozillaorg/docs/Web/API/ParentNode/append) 方法，因为它允许将文本或 [DOM 节点](https://developer mozilla org/docs/Web/API/Node) 附加到父元素，这非常适合我们的所有用例。 如果你尝试使用 `test` 账户登录，现在应该可以在仪表板上看到交易列表了 🎉。 --- ## 🚀 挑战 合作将仪表板页面打造成一个真实的银行应用。如果你已经为应用程序设计了样式，尝试使用 [媒体查询](https://developer mozilla org/docs/Web/CSS/Media_Queries) 来创建一个 [响应式设计](https://developer mozillaorg/docs/Web/Progressive_web_apps/Responsive/responsive_design_building_blocks)，使其在桌面和移动设备上都能良好运行。 以下是一个经过样式设计的仪表板页面示例： [仪表板样式化后的示例结果截图]( / / / /7-bank-project/images/screen2png)\n## 课后测验\n[课后测验](https://ashy-river-0debb7803 1 azurestaticapps",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 59,
    "total_chunks": 63
  },
  {
    "id": "80c085c6cdd197141beaee53253cb7c7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "createTransactionRow(transaction); transactionsRows appendChild(transactionRow); } updateElement('transactions', transactionsRows); ``` 这里我们使用方法 [`document createDocumentFragment()`](https://developer mozilla org/docs/Web/API/Document/createDocumentFragment)，它创建一个新的 DOM 片段，我们可以在其上操作，然后最终将其附加到我们的 HTML 表格中。 还有一件事我们需要做才能让此代码正常工作，因为我们的 `updateElement()` 函数目前仅支持文本内容。让我们稍微修改一下它的代码： ```js function updateElement(id, textOrNode) { const element = document getElementById(id); element textContent = ''; // Removes all children element append(textOrNode); } ``` 我们使用 [`append()`](https://developer mozillaorg/docs/Web/API/ParentNode/append) 方法，因为它允许将文本或 [DOM 节点](https://developer mozilla org/docs/Web/API/Node) 附加到父元素，这非常适合我们的所有用例。 如果你尝试使用 `test` 账户登录，现在应该可以在仪表板上看到交易列表了 🎉。 --- ## 🚀 挑战 合作将仪表板页面打造成一个真实的银行应用。如果你已经为应用程序设计了样式，尝试使用 [媒体查询](https://developer mozilla org/docs/Web/CSS/Media_Queries) 来创建一个 [响应式设计](https://developer mozillaorg/docs/Web/Progressive_web_apps/Responsive/responsive_design_building_blocks)，使其在桌面和移动设备上都能良好运行。 以下是一个经过样式设计的仪表板页面示例： [仪表板样式化后的示例结果截图]( / / / /7-bank-project/images/screen2png) ## 课后测验 [课后测验](https://ashy-river-0debb7803 1 azurestaticappsnet/quiz/46)\n## 作业\n[重构并注释你的代码](assignment",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 514,
    "chunk_index": 60,
    "total_chunks": 63
  },
  {
    "id": "e5726f591eae2340b7790750d8daf039",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "} updateElement('transactions', transactionsRows); ``` 这里我们使用方法 [`document createDocumentFragment()`](https://developer mozilla org/docs/Web/API/Document/createDocumentFragment)，它创建一个新的 DOM 片段，我们可以在其上操作，然后最终将其附加到我们的 HTML 表格中。 还有一件事我们需要做才能让此代码正常工作，因为我们的 `updateElement()` 函数目前仅支持文本内容。让我们稍微修改一下它的代码： ```js function updateElement(id, textOrNode) { const element = document getElementById(id); element textContent = ''; // Removes all children element append(textOrNode); } ``` 我们使用 [`append()`](https://developer mozillaorg/docs/Web/API/ParentNode/append) 方法，因为它允许将文本或 [DOM 节点](https://developer mozilla org/docs/Web/API/Node) 附加到父元素，这非常适合我们的所有用例。 如果你尝试使用 `test` 账户登录，现在应该可以在仪表板上看到交易列表了 🎉。 --- ## 🚀 挑战 合作将仪表板页面打造成一个真实的银行应用。如果你已经为应用程序设计了样式，尝试使用 [媒体查询](https://developer mozilla org/docs/Web/CSS/Media_Queries) 来创建一个 [响应式设计](https://developer mozillaorg/docs/Web/Progressive_web_apps/Responsive/responsive_design_building_blocks)，使其在桌面和移动设备上都能良好运行。 以下是一个经过样式设计的仪表板页面示例： [仪表板样式化后的示例结果截图]( / / / /7-bank-project/images/screen2png) ## 课后测验 [课后测验](https://ashy-river-0debb7803 1 azurestaticappsnet/quiz/46) ## 作业 [重构并注释你的代码](assignmentmd)\n**免责声明**：\n本文档使用AI翻译服务 [Co-op Translator](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 530,
    "chunk_index": 61,
    "total_chunks": 63
  },
  {
    "id": "006f347e9a8ab55d729164f6736d67b0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第三部分：数据获取与使用方法",
    "content": "这里我们使用方法 [`document createDocumentFragment()`](https://developer mozilla org/docs/Web/API/Document/createDocumentFragment)，它创建一个新的 DOM 片段，我们可以在其上操作，然后最终将其附加到我们的 HTML 表格中。 还有一件事我们需要做才能让此代码正常工作，因为我们的 `updateElement()` 函数目前仅支持文本内容。让我们稍微修改一下它的代码： ```js function updateElement(id, textOrNode) { const element = document getElementById(id); element textContent = ''; // Removes all children element append(textOrNode); } ``` 我们使用 [`append()`](https://developer mozillaorg/docs/Web/API/ParentNode/append) 方法，因为它允许将文本或 [DOM 节点](https://developer mozilla org/docs/Web/API/Node) 附加到父元素，这非常适合我们的所有用例。 如果你尝试使用 `test` 账户登录，现在应该可以在仪表板上看到交易列表了 🎉。 --- ## 🚀 挑战 合作将仪表板页面打造成一个真实的银行应用。如果你已经为应用程序设计了样式，尝试使用 [媒体查询](https://developer mozilla org/docs/Web/CSS/Media_Queries) 来创建一个 [响应式设计](https://developer mozillaorg/docs/Web/Progressive_web_apps/Responsive/responsive_design_building_blocks)，使其在桌面和移动设备上都能良好运行。 以下是一个经过样式设计的仪表板页面示例： [仪表板样式化后的示例结果截图]( / / / /7-bank-project/images/screen2png) ## 课后测验 [课后测验](https://ashy-river-0debb7803 1 azurestaticappsnet/quiz/46) ## 作业 [重构并注释你的代码](assignmentmd) **免责声明**： 本文档使用AI翻译服务 [Co-op Translator](https://githubcom/Azure/co-op-translator) 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16752,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\3-data\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 645,
    "chunk_index": 62,
    "total_chunks": 63
  },
  {
    "id": "2f859f61aaa6164cd2e5d38916acf2ea",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\solution\\README.md",
    "source_type": "git_repo",
    "title": "银行应用",
    "content": "银行应用\n银行应用项目的示例解决方案，使用原生 HTML5、CSS 和 JavaScript 构建（未使用任何框架或库）。\n运行应用\n首先确保您已经启动了 API 服务器。\n任何网页服务器都可以用来运行该应用，但由于您应该已经安装了 Node.js 来运行 API，因此可以：\nGit 克隆此仓库。\n打开终端，导航到此目录，然后运行 npx lite-server .。它将在端口 3000 上启动一个开发网页服务器。\n在浏览器中打开 http://localhost:3000 来运行该应用。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。虽然我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1284,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "71ddacce02ec47b06440a23654b1d5f9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\assignment.md",
    "source_type": "git_repo",
    "title": "模拟一个游戏",
    "content": "模拟一个游戏\n说明\n使用课程中的代码示例，创建一个你喜欢的游戏的表示形式。游戏需要足够简单，但目标是使用类或组合模式以及发布/订阅模式来展示游戏如何启动。发挥你的创造力！\n评分标准\n| 标准     | 卓越表现                                               | 合格表现                                              | 需要改进                                   |\n| -------- | ------------------------------------------------------- | ----------------------------------------------------- | ------------------------------------------- |\n|          | 屏幕上放置三个元素并进行操作                           | 屏幕上放置两个元素并进行操作                         | 屏幕上放置一个元素并进行操作               |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1524,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a7404c0ba70d7d6a45cd70d7066b8bc8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\api\\README.md",
    "source_type": "git_repo",
    "title": "银行 API",
    "content": "银行 API\n使用 Node js + Express 构建的银行 API。\n该 API 已经为您构建完成，不是练习的一部分。\n不过，如果您有兴趣学习如何构建这样的 API，可以观看以下系列视频：https://aka ms/NodeBeginner（第 17 到 21 集涵盖了这个 API 的具体内容）。\n您还可以查看这个交互式教程：https://aka ms/learn/express-api\n启动服务器\n确保您已安装 Node js。\nGit 克隆此仓库 The Web-Dev-For-Beginners。\n打开终端并导航到 Web-Dev-For-Beginners/7-bank-project/api 文件夹。\n运行 npm install 并等待依赖包安装完成（根据您的网络质量，可能需要一些时间）。\n安装完成后，运行 npm start，即可启动服务器。\n服务器应开始监听端口 5000。\n此服务器将与主银行应用程序的服务器终端（监听端口 3000）一起运行，请勿关闭。\n注意：所有条目都存储在内存中，不会持久化，因此当服务器停止时，所有数据都会丢失。\nAPI 详情\n路由                                        | 描述\n---------------------------------------------|------------------------------------\nGET    /api/                                 | 获取服务器信息\nPOST   /api/accounts/                        | 创建账户，例如：{ user: 'Yohan', description: 'My budget', currency: 'EUR', balance: 100 }\nGET    /api/accounts/:user                   | 获取指定账户的所有数据\nDELETE /api/accounts/:user                   | 删除指定账户\nPOST   /api/accounts/:user/transactions      | 添加交易，例如：{ date: '2020-07-23T18:25:43",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2584,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\api\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8364849874a6da05007eba82b1b522b1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\api\\README.md",
    "source_type": "git_repo",
    "title": "银行 API",
    "content": "API。 该 API 已经为您构建完成，不是练习的一部分。 不过，如果您有兴趣学习如何构建这样的 API，可以观看以下系列视频：https://aka ms/NodeBeginner（第 17 到 21 集涵盖了这个 API 的具体内容）。 您还可以查看这个交互式教程：https://aka ms/learn/express-api 启动服务器 确保您已安装 Node js。 Git 克隆此仓库 The Web-Dev-For-Beginners。 打开终端并导航到 Web-Dev-For-Beginners/7-bank-project/api 文件夹。 运行 npm install 并等待依赖包安装完成（根据您的网络质量，可能需要一些时间）。 安装完成后，运行 npm start，即可启动服务器。 服务器应开始监听端口 5000。 此服务器将与主银行应用程序的服务器终端（监听端口 3000）一起运行，请勿关闭。 注意：所有条目都存储在内存中，不会持久化，因此当服务器停止时，所有数据都会丢失。 API 详情 路由 | 描述 ---------------------------------------------|------------------------------------ GET /api/ | 获取服务器信息 POST /api/accounts/ | 创建账户，例如：{ user: 'Yohan', description: 'My budget', currency: 'EUR', balance: 100 } GET /api/accounts/:user | 获取指定账户的所有数据 DELETE /api/accounts/:user | 删除指定账户 POST /api/accounts/:user/transactions | 添加交易，例如：{ date: '2020-07-23T18:25:43511Z', object: 'Bought a book', amount: -20 }\nDELETE  /api/accounts/:user/transactions/:id | 删除指定交易\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2584,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\api\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f54e282763865f02be2e1beb5950e126",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\assignment.md",
    "source_type": "git_repo",
    "title": "玩转 Canvas API",
    "content": "玩转 Canvas API\n说明\n选择 Canvas API 的一个元素，并围绕它创建一些有趣的内容。你能否创建一个由重复星星组成的小银河？或者创建一个由彩色线条组成的有趣纹理？你可以在 CodePen 上寻找灵感（但不要直接复制）。\n评分标准\n| 标准     | 卓越表现                                               | 合格表现                        | 需要改进             |\n| -------- | ----------------------------------------------------- | ------------------------------- | --------------------- |\n|          | 提交的代码展示了有趣的纹理或形状                     | 提交了代码，但无法运行          | 未提交代码           |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1418,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 318,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "74eb135f63db587cca28939ff2ecdc6a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "构建银行应用程序第2部分：创建登录和注册表单\n课前测验\n课前测验\n简介\n在几乎所有现代的网络应用中，用户都可以创建一个账户来拥有自己的私人空间。由于多个用户可以同时访问一个网络应用，因此需要一种机制来分别存储每个用户的个人数据，并选择显示哪些信息。我们不会深入探讨如何安全地管理用户身份，因为这是一个非常广泛的话题，但我们会确保每个用户能够在我们的应用中创建一个（或多个）银行账户。\n在这一部分，我们将使用HTML表单为我们的网络应用添加登录和注册功能。我们将学习如何以编程方式将数据发送到服务器API，并最终定义用户输入的基本验证规则。\n前置条件\n你需要完成本课的HTML模板和路由部分。此外，你需要安装Node js并在本地运行服务器API，以便能够发送数据来创建账户。\n注意事项\n你需要同时运行两个终端，如下所示：\n1 用于我们在HTML模板和路由课程中构建的主银行应用程序。\n2 用于我们刚刚设置的银行应用服务器API。\n要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 77
  },
  {
    "id": "c8c15d5306075976ac3f9e69dbbe7737",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "构建银行应用程序第2部分：创建登录和注册表单\n课前测验\n课前测验\n简介\n在几乎所有现代的网络应用中，用户都可以创建一个账户来拥有自己的私人空间。由于多个用户可以同时访问一个网络应用，因此需要一种机制来分别存储每个用户的个人数据，并选择显示哪些信息。我们不会深入探讨如何安全地管理用户身份，因为这是一个非常广泛的话题，但我们会确保每个用户能够在我们的应用中创建一个（或多个）银行账户。\n在这一部分，我们将使用HTML表单为我们的网络应用添加登录和注册功能。我们将学习如何以编程方式将数据发送到服务器API，并最终定义用户输入的基本验证规则。\n前置条件\n你需要完成本课的HTML模板和路由部分。此外，你需要安装Node js并在本地运行服务器API，以便能够发送数据来创建账户。\n注意事项\n你需要同时运行两个终端，如下所示：\n1 用于我们在HTML模板和路由课程中构建的主银行应用程序。\n2 用于我们刚刚设置的银行应用服务器API。\n要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。\n你可以通过在终端中执行以下命令来测试服务器是否正常运行：\n```sh\ncurl http://localhost:5000/api\n-> should return \"Bank API v1 00\" as a result\n```\n表单和控件\n<form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。\n<input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用：\nhtml\n<input id=\"username\" name=\"username\" type=\"text\">\nname属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。\n查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。\n✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。\n表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值：\nsubmit：表单中的默认值，按钮触发表单提交操作。\nreset：按钮将所有表单控件重置为初始值。\nbutton：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。\n任务\n让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。\n```html\nLogin\nUsername\nLogin\n```\n如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处：\n通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。\n你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。\n网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。\n现在我们将在前一个表单的下方添加第二个注册表单：\n```html\nRegister\nUsername\nCurrency\nDescription\nCurrent balance\nRegister\n```\n通过使用value属性，我们可以为给定的输入框定义默认值。\n还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。\n✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？\n向服务器提交数据\n现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？\n你是否注意到浏览器URL部分的变化？\n<form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点：\n发送的数据大小非常有限（大约2000个字符）。\n数据直接显示在URL中（对密码来说不太好）。\n不支持文件上传。\n因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。\n虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。\n任务\n为注册表单添加action和method属性：\n```html\n```\n现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1484,
    "chunk_index": 1,
    "total_chunks": 77
  },
  {
    "id": "ab119b039288625811d4b8f5f0010737",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你需要同时运行两个终端，如下所示： 1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1230,
    "chunk_index": 2,
    "total_chunks": 77
  },
  {
    "id": "ede472d8ea0473924e5e6985ead8f924",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你需要同时运行两个终端，如下所示： 1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1231,
    "chunk_index": 3,
    "total_chunks": 77
  },
  {
    "id": "e851d73f244db96b78a0c2d9ccbc3be1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你需要同时运行两个终端，如下所示： 1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](//",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1231,
    "chunk_index": 4,
    "total_chunks": 77
  },
  {
    "id": "54438d91b2600421c138fcd710d21343",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你需要同时运行两个终端，如下所示： 1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](///",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1231,
    "chunk_index": 5,
    "total_chunks": 77
  },
  {
    "id": "8c5606b14778cf943877c2551bdfd7bb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你需要同时运行两个终端，如下所示： 1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-post",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1242,
    "chunk_index": 6,
    "total_chunks": 77
  },
  {
    "id": "cf626e34598b5447048d8d769ae2c161",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你需要同时运行两个终端，如下所示： 1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng)\n如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://www",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1270,
    "chunk_index": 7,
    "total_chunks": 77
  },
  {
    "id": "254d85dbb80a56b5c9f3b47a1df5f81d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjson",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1254,
    "chunk_index": 8,
    "total_chunks": 77
  },
  {
    "id": "b82ed6b8977646fb993a9f5ac26836d6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-en",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1257,
    "chunk_index": 9,
    "total_chunks": 77
  },
  {
    "id": "3339747367f426370316b17ab72dfc0f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "1 用于我们在HTML模板和路由课程中构建的主银行应用程序。 2 用于我们刚刚设置的银行应用服务器API。 要完成本课程的其余部分，这两个服务器都需要正常运行。它们监听不同的端口（端口3000和端口5000），因此一切应该可以正常工作。 你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。\n✅ 再次用相同的名字尝试注册。会发生什么？\n## 无需刷新页面提交数据\n你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://en",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1382,
    "chunk_index": 10,
    "total_chunks": 77
  },
  {
    "id": "788a7204e3b7d002ca273c08b0776187",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipedia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1278,
    "chunk_index": 11,
    "total_chunks": 77
  },
  {
    "id": "e5e77013ff66d512f279ea3299f63143",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "你可以通过在终端中执行以下命令来测试服务器是否正常运行： ```sh curl http://localhost:5000/api -> should return \"Bank API v1 00\" as a result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。\n要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务：\n- 获取表单数据\n- 将表单数据转换并编码为合适的格式\n- 创建HTTP请求并将其发送到服务器\n### 任务\n将注册表单的`action`替换为：\n```html\n```\n打开`app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1439,
    "chunk_index": 12,
    "total_chunks": 77
  },
  {
    "id": "6246832244baadab7ae2dc1b3f55e7c0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "result ``` 表单和控件 <form>元素封装了HTML文档的一部分，用户可以通过交互式控件输入和提交数据。在表单中可以使用各种用户界面（UI）控件，其中最常见的是<input>和<button>元素。 <input>有许多不同的类型，例如，要创建一个供用户输入用户名的字段，可以使用： html <input id=\"username\" name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数：\n```js\nfunction register() {\nconst registerForm = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1418,
    "chunk_index": 13,
    "total_chunks": 77
  },
  {
    "id": "0bd2b504f7357e66c28a54104934a171",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "name=\"username\" type=\"text\"> name属性将在表单数据发送时用作属性名。id属性用于将<label>与表单控件关联。 查看<input>类型和其他表单控件的完整列表，了解构建UI时可以使用的所有原生UI元素。 ✅ 注意，<input>是一个空元素，不应添加匹配的关闭标签。不过，你可以使用自闭合的<input/>表示法，但这不是必须的。 表单中的<button>元素有点特殊。如果未指定其type属性，当按下按钮时，它会自动将表单数据提交到服务器。以下是可能的type值： submit：表单中的默认值，按钮触发表单提交操作。 reset：按钮将所有表单控件重置为初始值。 button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm');\nconst formData = new FormData(registerForm);\nconst data = Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1326,
    "chunk_index": 14,
    "total_chunks": 77
  },
  {
    "id": "0170c38ae247ed00fff03c466ea11946",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "button：按钮按下时不分配默认行为。可以使用JavaScript为其分配自定义操作。 任务 让我们从在login模板中添加一个表单开始。我们需要一个用户名字段和一个登录按钮。 ```html Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData);\nconst jsonData = JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1131,
    "chunk_index": 15,
    "total_chunks": 77
  },
  {
    "id": "0c2b180c09a09c891eee4f8da17f566b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "Login Username Login ``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data);\n}\n```\n在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1108,
    "chunk_index": 16,
    "total_chunks": 77
  },
  {
    "id": "4d4784d4bf3a074e9b43114a6d52bf29",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1106,
    "chunk_index": 17,
    "total_chunks": 77
  },
  {
    "id": "1db933c945d066ce3afb19769b81f3aa",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1141,
    "chunk_index": 18,
    "total_chunks": 77
  },
  {
    "id": "ab67c3a29c4524366ae25ba5b26dd778",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1148,
    "chunk_index": 19,
    "total_chunks": 77
  },
  {
    "id": "07c6d73acf4fbe5413de99d5d114b457",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1150,
    "chunk_index": 20,
    "total_chunks": 77
  },
  {
    "id": "9a868c83f604a1b71cf42006c437e976",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://www",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1188,
    "chunk_index": 21,
    "total_chunks": 77
  },
  {
    "id": "36a08f7b41f453a127b76d1a0cfb756b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjson",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1189,
    "chunk_index": 22,
    "total_chunks": 77
  },
  {
    "id": "785707bc9e8c76e4839a3ad9590e089c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjsonorg/json-en",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1192,
    "chunk_index": 23,
    "total_chunks": 77
  },
  {
    "id": "3837e22f802c753aa3154ac6839998cf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "``` 如果仔细观察，你会注意到我们还添加了一个<label>元素。<label>元素用于为UI控件添加名称，例如我们的用户名字段。标签对于表单的可读性非常重要，同时还带来以下额外好处： 通过将标签与表单控件关联，可以帮助使用辅助技术（如屏幕阅读器）的用户理解需要提供哪些数据。 你可以点击标签直接将焦点放在关联的输入框上，这使得在触摸屏设备上更容易操作。 网络无障碍性是一个非常重要但经常被忽视的话题。得益于语义化HTML元素，如果正确使用它们，创建无障碍内容并不困难。你可以阅读更多关于无障碍性的内容，以避免常见错误并成为一名负责任的开发者。 现在我们将在前一个表单的下方添加第二个注册表单： ```html Register Username Currency Description Current balance Register ``` 通过使用value属性，我们可以为给定的输入框定义默认值。 还请注意，balance的输入框类型为number。它看起来是否与其他输入框不同？试着与它交互一下。 ✅ 你能仅使用键盘导航和操作这些表单吗？你会怎么做？ 向服务器提交数据 现在我们有了一个功能性的UI，下一步是将数据发送到服务器。让我们用当前的代码做一个快速测试：点击登录或注册按钮会发生什么？ 你是否注意到浏览器URL部分的变化？ <form>的默认行为是使用GET方法将表单提交到当前服务器URL，并将表单数据直接附加到URL。这种方法有一些缺点： 发送的数据大小非常有限（大约2000个字符）。 数据直接显示在URL中（对密码来说不太好）。 不支持文件上传。 因此，你可以将其更改为使用POST方法，它将表单数据发送到HTTP请求的正文中，而没有上述限制。 虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjsonorg/json-enhtml)，这是一种网络上常用的数据交换格式。\n数据现在已准备好发送到服务器。创建一个名为`createAccount`的新函数：\n```js\nasync function createAccount(account) {\ntry {\nconst response = await fetch('//localhost:5000/api/accounts', {\nmethod: 'POST',\nheaders: { 'Content-Type': 'application/json' },\nbody: account\n});\nreturn await response",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1283,
    "chunk_index": 24,
    "total_chunks": 77
  },
  {
    "id": "7b48d52229bb4688c7d3e402b3cb67bf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "虽然POST是发送数据最常用的方法，但在某些特定场景下，例如实现搜索字段时，使用GET方法更为合适。 任务 为注册表单添加action和method属性： ```html ``` 现在尝试用你的名字注册一个新账户。点击*注册*按钮后，你应该会看到如下内容：[浏览器窗口显示地址为localhost:5000/api/accounts，显示包含用户数据的JSON字符串](////7-bank-project/2-forms/images/form-postpng) 如果一切正常，服务器应该会以包含创建的账户数据的[JSON](https://wwwjsonorg/json-enhtml)响应来回答你的请求。 ✅ 再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjsonorg/json-enhtml)，这是一种网络上常用的数据交换格式。 数据现在已准备好发送到服务器。创建一个名为`createAccount`的新函数： ```js async function createAccount(account) { try { const response = await fetch('//localhost:5000/api/accounts', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: account }); return await responsejson();\n} catch (error) {\nreturn { error: error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 719,
    "chunk_index": 25,
    "total_chunks": 77
  },
  {
    "id": "e8d84f8000ab960ab527a6883605325f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "再次用相同的名字尝试注册。会发生什么？ ## 无需刷新页面提交数据 你可能已经注意到，我们刚刚使用的方法有一个小问题：提交表单时，我们离开了应用，浏览器重定向到服务器URL。我们正在尝试避免所有页面刷新，因为我们正在构建一个[单页应用程序（SPA）](https://enwikipediaorg/wiki/Single-page_application)。 要在不强制页面刷新的情况下将表单数据发送到服务器，我们需要使用JavaScript代码。与其在``元素的`action`属性中放置一个URL，你可以使用任何以`javascript:`字符串开头的JavaScript代码来执行自定义操作。这也意味着你需要实现一些浏览器之前自动完成的任务： - 获取表单数据 - 将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjsonorg/json-enhtml)，这是一种网络上常用的数据交换格式。 数据现在已准备好发送到服务器。创建一个名为`createAccount`的新函数： ```js async function createAccount(account) { try { const response = await fetch('//localhost:5000/api/accounts', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: account }); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' };\n}\n}\n```\n这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 26,
    "total_chunks": 77
  },
  {
    "id": "71a7ee767da4679e9ffa52a7a6c7562e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "将表单数据转换并编码为合适的格式 - 创建HTTP请求并将其发送到服务器 ### 任务 将注册表单的`action`替换为： ```html ``` 打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjsonorg/json-enhtml)，这是一种网络上常用的数据交换格式。 数据现在已准备好发送到服务器。创建一个名为`createAccount`的新函数： ```js async function createAccount(account) { try { const response = await fetch('//localhost:5000/api/accounts', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: account }); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。\n以下是关于`async/await`用法的简短视频：\n[ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watch",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 27,
    "total_chunks": 77
  },
  {
    "id": "587533bcd28063e01c32f9eaab16c036",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "打开`appjs`，添加一个名为`register`的新函数： ```js function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjsonorg/json-enhtml)，这是一种网络上常用的数据交换格式。 数据现在已准备好发送到服务器。创建一个名为`createAccount`的新函数： ```js async function createAccount(account) { try { const response = await fetch('//localhost:5000/api/accounts', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: account }); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\")\n> 🎥 点击上方图片观看关于async/await的视频。\n我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数：\n- 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。\n- 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。\n由于服务器会以JSON响应请求，我们可以使用`await response",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 28,
    "total_chunks": 77
  },
  {
    "id": "35841bec97b0a204fff64755e4d3e6f7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "= new FormData(registerForm); const data = ObjectfromEntries(formData); const jsonData = JSONstringify(data); } ``` 在这里，我们使用`getElementById()`获取表单元素，并使用[`FormData`](https://developermozillaorg/docs/Web/API/FormData)助手将表单控件的值提取为一组键/值对。然后，我们使用[`ObjectfromEntries()`](https://developermozillaorg/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries)将数据转换为常规对象，最后将数据序列化为[JSON](https://wwwjsonorg/json-enhtml)，这是一种网络上常用的数据交换格式。 数据现在已准备好发送到服务器。创建一个名为`createAccount`的新函数： ```js async function createAccount(account) { try { const response = await fetch('//localhost:5000/api/accounts', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: account }); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。\n现在在`register`函数中添加一些代码以调用`createAccount()`：\n```js\nconst result = await createAccount(jsonData);\n```\n因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字：\n```js\nasync function register() {\n```\n最后，让我们添加一些日志来检查结果。最终函数应如下所示：\n```js\nasync function register() {\nconst registerForm = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 740,
    "chunk_index": 29,
    "total_chunks": 77
  },
  {
    "id": "9841c16f093d6d9d9c0607750853d448",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "await fetch('//localhost:5000/api/accounts', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: account }); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm');\nconst formData = new FormData(registerForm);\nconst jsonData = JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 567,
    "chunk_index": 30,
    "total_chunks": 77
  },
  {
    "id": "e1e8fc213dea18092087ca9c01752fe1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "}, body: account }); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 543,
    "chunk_index": 31,
    "total_chunks": 77
  },
  {
    "id": "971eb6ec2146b8c48a1138735dabd3af",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "}, body: account }); return await responsejson(); } catch (error) { return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData));\nconst result = await createAccount(jsonData);\nif (result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 559,
    "chunk_index": 32,
    "total_chunks": 77
  },
  {
    "id": "a0f2176050a95e84dd70bae8ef5d3b47",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} catch (error) { return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) {\nreturn console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 33,
    "total_chunks": 77
  },
  {
    "id": "5105bfc686e3048fdc5a8f6a3f38f7c4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "{ return { error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 557,
    "chunk_index": 34,
    "total_chunks": 77
  },
  {
    "id": "8da8112b23a9765e880fa1d0cf259c83",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "error: errormessage || 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror);\n}\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 559,
    "chunk_index": 35,
    "total_chunks": 77
  },
  {
    "id": "f4208597c9f3ba2a56107079efce9ec9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "|| 'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 558,
    "chunk_index": 36,
    "total_chunks": 77
  },
  {
    "id": "5622e28f815d8de7e01c697c54c3e15e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "'Unknown error' }; } } ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result);\n}\n```\n虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 37,
    "total_chunks": 77
  },
  {
    "id": "5b264f64515c21e6486ab63da8ca53e8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 592,
    "chunk_index": 38,
    "total_chunks": 77
  },
  {
    "id": "877f7635132f8b1a54aaa6a28e606f2a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 39,
    "total_chunks": 77
  },
  {
    "id": "32679858fbbf794f7800fa9e42a63ba4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 40,
    "total_chunks": 77
  },
  {
    "id": "4339d4208cdcf390ee5dd77a08d1f151",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 41,
    "total_chunks": 77
  },
  {
    "id": "33a214dc9de73cd780b25cf7a46443c6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](//",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 42,
    "total_chunks": 77
  },
  {
    "id": "ce57cca153de5df61b97eedb01dda9d1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](///",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 43,
    "total_chunks": 77
  },
  {
    "id": "dc6a311c46d775d351cb9b61c5581854",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 44,
    "total_chunks": 77
  },
  {
    "id": "eef026c382839f72e93fde7d7d762422",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "} ``` 这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng)\n✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://en",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 730,
    "chunk_index": 45,
    "total_chunks": 77
  },
  {
    "id": "f63650999a4164b3b710eb785a231827",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipedia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 729,
    "chunk_index": 46,
    "total_chunks": 77
  },
  {
    "id": "d6785411d03338eac723b1df5699d96f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "这个函数在做什么？首先，注意这里的`async`关键字。这意味着函数包含将以[**异步**](https://developermozilla org/docs/Web/JavaScript/Reference/Statements/async_function)方式执行的代码。当与`await`关键字一起使用时，它允许等待异步代码执行（例如等待服务器响应）后再继续。 以下是关于`async/await`用法的简短视频： [ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。\n## 数据验证\n如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 792,
    "chunk_index": 47,
    "total_chunks": 77
  },
  {
    "id": "4096ca4efcfb78d2e789e75d7a63d0a2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "[ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 48,
    "total_chunks": 77
  },
  {
    "id": "d1cf231ac2aeb95a9e79faec11eb95bc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "[ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 714,
    "chunk_index": 49,
    "total_chunks": 77
  },
  {
    "id": "34092a5ec4ab706147c20cfa5173ba38",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "[ [管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。\n在将数据发送到服务器之前，最好先[验证表单数据](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 738,
    "chunk_index": 50,
    "total_chunks": 77
  },
  {
    "id": "5d981c0b854c5efb36a699b82e1c7bc9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "[管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 739,
    "chunk_index": 51,
    "total_chunks": 77
  },
  {
    "id": "acfdcfa202df5ac0e784fdb9c5d78c98",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "[管理Promise的Async和Await](https://img youtube com/vi/YwmlRkrxvkk/0 jpg)](https://youtube com/watchv=YwmlRkrxvkk \"管理Promise的Async和Await\") > 🎥 点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能：\n- `required`：字段必须填写，否则表单无法提交。\n- `minlength`和`maxlength`：定义文本字段的最小和最大字符数。\n- `min`和`max`：定义数值字段的最小值和最大值。\n- `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 877,
    "chunk_index": 52,
    "total_chunks": 77
  },
  {
    "id": "2d166f04d4480073626f5199db2d1812",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 823,
    "chunk_index": 53,
    "total_chunks": 77
  },
  {
    "id": "c2430f613d17913c51dc80d0d932bd2a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "点击上方图片观看关于async/await的视频。 我们使用`fetch()`API将JSON数据发送到服务器。此方法需要两个参数： - 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。\n- `pattern`：允许定义一个[正则表达式](https://developer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 873,
    "chunk_index": 54,
    "total_chunks": 77
  },
  {
    "id": "3cac912a32efb12d86ce5b731c4ebd36",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "- 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 838,
    "chunk_index": 55,
    "total_chunks": 77
  },
  {
    "id": "12285289d3fd60fc404d350943f26e47",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "- 服务器的URL，因此我们在这里放回`//localhost:5000/api/accounts`。 - 请求的设置。在这里我们将方法设置为`POST`并提供请求的`body`。由于我们将JSON数据发送到服务器，还需要将`Content-Type`头设置为`application/json`，以便服务器知道如何解释内容。 由于服务器会以JSON响应请求，我们可以使用`await responsejson()`解析JSON内容并返回结果对象。请注意，此方法是异步的，因此我们在返回之前使用`await`关键字以确保在解析期间的任何错误也会被捕获。 现在在`register`函数中添加一些代码以调用`createAccount()`： ```js const result = await createAccount(jsonData); ``` 因为我们在这里使用了`await`关键字，所以需要在register函数前添加`async`关键字： ```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。\n提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。\n### 任务\n创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现：\n```html\nUsername (required)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 963,
    "chunk_index": 56,
    "total_chunks": 77
  },
  {
    "id": "0a82287b465985abd3042d55d393e4f2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "```js async function register() { ``` 最后，让我们添加一些日志来检查结果。最终函数应如下所示： ```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required)\n```\n虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。\n为文本字段添加 `maxlength` 属性：\n```html",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 805,
    "chunk_index": 57,
    "total_chunks": 77
  },
  {
    "id": "0c3cf270f2ea236de75677bfce8c8fde",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "```js async function register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html```\n现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 820,
    "chunk_index": 58,
    "total_chunks": 77
  },
  {
    "id": "9e65dd56d874b80bcfd67a52e38a072b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 833,
    "chunk_index": 59,
    "total_chunks": 77
  },
  {
    "id": "7c83409f8d2df1d42b28f905e18e0d9e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 834,
    "chunk_index": 60,
    "total_chunks": 77
  },
  {
    "id": "40134fdb592e4bbcafc198a880b4a08f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](//",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 834,
    "chunk_index": 61,
    "total_chunks": 77
  },
  {
    "id": "1b7809434fc1891c9b4bf7af7b548202",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](///",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 834,
    "chunk_index": 62,
    "total_chunks": 77
  },
  {
    "id": "77f4c719d495ed40be1ef12b4396181d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 845,
    "chunk_index": 63,
    "total_chunks": 77
  },
  {
    "id": "8d136a52395a2b415d4fed44b616903e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "register() { const registerForm = documentgetElementById('registerForm'); const formData = new FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng)\n这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。\n通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。\n---\n## 🚀 挑战\n在 HTML 中显示一个错误信息，提示用户账户已存在。\n以下是经过一些样式调整后的最终登录页面示例：",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1041,
    "chunk_index": 64,
    "total_chunks": 77
  },
  {
    "id": "54ab1bda90f0b961623d3503fba02fb2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "FormData(registerForm); const jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1039,
    "chunk_index": 65,
    "total_chunks": 77
  },
  {
    "id": "fe43902a9307c46d11d3ee534fb16584",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](/",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1035,
    "chunk_index": 66,
    "total_chunks": 77
  },
  {
    "id": "b0a5d47f9b01f64871c57122732b3df3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](//",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1035,
    "chunk_index": 67,
    "total_chunks": 77
  },
  {
    "id": "5d80708353f75cf367cc85bd6c06f457",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](///",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1035,
    "chunk_index": 68,
    "total_chunks": 77
  },
  {
    "id": "c1b8b8c7aa19116b24b5a91289607d40",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1045,
    "chunk_index": 69,
    "total_chunks": 77
  },
  {
    "id": "9fd34ffa54d225c562d4533d2f990514",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "jsonData = JSONstringify(ObjectfromEntries(formData)); const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/resultpng)\n## 课后测验\n[课后测验](https://ashy-river-0debb7803",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1076,
    "chunk_index": 70,
    "total_chunks": 77
  },
  {
    "id": "48629d47c6ae6652351f79b2053f89c6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/resultpng) ## 课后测验 [课后测验](https://ashy-river-0debb78031",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1065,
    "chunk_index": 71,
    "total_chunks": 77
  },
  {
    "id": "e302623ab41bddf2081b3378f0794d2d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/resultpng) ## 课后测验 [课后测验](https://ashy-river-0debb78031azurestaticapps",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1068,
    "chunk_index": 72,
    "total_chunks": 77
  },
  {
    "id": "b5ba33d8405d70644dd044a2566a0651",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "const result = await createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/resultpng) ## 课后测验 [课后测验](https://ashy-river-0debb78031azurestaticappsnet/quiz/44)\n## 复习与自学\n开发者在构建表单方面变得非常有创意，尤其是在验证策略方面。通过浏览 [CodePen](https://codepen",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1128,
    "chunk_index": 73,
    "total_chunks": 77
  },
  {
    "id": "5a8040fd83a1956a692296c887749444",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "createAccount(jsonData); if (resulterror) { return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/resultpng) ## 课后测验 [课后测验](https://ashy-river-0debb78031azurestaticappsnet/quiz/44) ## 复习与自学 开发者在构建表单方面变得非常有创意，尤其是在验证策略方面。通过浏览 [CodePen](https://codepencom) 来了解不同的表单流程；你能找到一些有趣且富有启发性的表单吗？\n## 作业\n[为你的银行应用设计样式](assignment",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1179,
    "chunk_index": 74,
    "total_chunks": 77
  },
  {
    "id": "415e2eb03320d4a3c5c023178098e8d7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "return consolelog('An error occurred:', resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/resultpng) ## 课后测验 [课后测验](https://ashy-river-0debb78031azurestaticappsnet/quiz/44) ## 复习与自学 开发者在构建表单方面变得非常有创意，尤其是在验证策略方面。通过浏览 [CodePen](https://codepencom) 来了解不同的表单流程；你能找到一些有趣且富有启发性的表单吗？ ## 作业 [为你的银行应用设计样式](assignmentmd)\n**免责声明**：\n本文档使用AI翻译服务 [Co-op Translator](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1195,
    "chunk_index": 75,
    "total_chunks": 77
  },
  {
    "id": "adb0efc9e1c8fda08c63058f06251d9b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
    "source_type": "git_repo",
    "title": "构建银行应用程序第2部分：创建登录和注册表单",
    "content": "resulterror); } consolelog('Account created', result); } ``` 虽然过程有点长，但我们完成了！如果你打开[浏览器开发者工具](https://developermozillaorg/docs/Learn/Common_questions/What_are_browser_developer_tools)，并尝试注册一个新账户，你应该不会看到网页有任何变化，但控制台中会出现一条消息，确认一切正常。[浏览器控制台中显示日志消息的截图](////7-bank-project/2-forms/images/browser-consolepng) ✅ 你认为数据是安全地发送到服务器的吗？如果有人能够拦截请求会怎样？你可以阅读[HTTPS](https://enwikipediaorg/wiki/HTTPS)以了解更多关于安全数据通信的内容。 ## 数据验证 如果你尝试在未设置用户名的情况下注册新账户，可以看到服务器返回了一个状态码为[400（错误请求）](https://developermozillaorg/docs/Web/HTTP/Status/400#:~:text=The%20HyperText%20Transfer%20Protocol%20(HTTP,%2C%20or%20deceptive%20request%20routing))的错误。 在将数据发送到服务器之前，最好先[验证表单数据](https://developermozillaorg/docs/Learn/Forms/Form_validation)，以确保发送的是有效请求。HTML5表单控件通过各种属性提供了内置验证功能： - `required`：字段必须填写，否则表单无法提交。 - `minlength`和`maxlength`：定义文本字段的最小和最大字符数。 - `min`和`max`：定义数值字段的最小值和最大值。 - `type`：定义期望的数据类型，例如`number`、`email`、`file`或[其他内置类型](https://developermozillaorg/docs/Web/HTML/Element/input)。此属性还可能更改表单控件的视觉呈现。 - `pattern`：允许定义一个[正则表达式](https://developermozillaorg/docs/Web/JavaScript/Guide/Regular_Expressions)模式，以测试输入的数据是否有效。 提示：您可以使用 `:valid` 和 `:invalid` CSS 伪类，根据表单控件是否有效来自定义其外观。 ### 任务 创建一个有效的新账户需要填写两个必填字段：用户名和货币，其他字段为可选项。更新表单的 HTML，使用 `required` 属性以及字段标签中的文字来实现： ```html Username (required)Currency (required) ``` 虽然当前的服务器实现并未对字段的最大长度设置具体限制，但为用户输入的文本定义合理的长度限制始终是一个良好的实践。 为文本字段添加 `maxlength` 属性： ```html``` 现在，如果你按下 *注册* 按钮，而某个字段未遵守我们定义的验证规则，你应该会看到类似这样的提示：[截图显示尝试提交表单时的验证错误](////7-bank-project/2-forms/images/validation-errorpng) 这种在发送数据到服务器之前进行的验证称为**客户端验证**。但需要注意的是，并非所有检查都可以在不发送数据的情况下完成。例如，我们无法在这里检查是否已经存在一个相同用户名的账户，而不向服务器发送请求。在服务器上进行的额外验证称为**服务器端验证**。 通常两种验证都需要实现。客户端验证通过向用户提供即时反馈来改善用户体验，而服务器端验证则至关重要，确保你处理的用户数据是可靠且安全的。 --- ## 🚀 挑战 在 HTML 中显示一个错误信息，提示用户账户已存在。 以下是经过一些样式调整后的最终登录页面示例：[添加 CSS 样式后的登录页面截图](////7-bank-project/2-forms/images/resultpng) ## 课后测验 [课后测验](https://ashy-river-0debb78031azurestaticappsnet/quiz/44) ## 复习与自学 开发者在构建表单方面变得非常有创意，尤其是在验证策略方面。通过浏览 [CodePen](https://codepencom) 来了解不同的表单流程；你能找到一些有趣且富有启发性的表单吗？ ## 作业 [为你的银行应用设计样式](assignmentmd) **免责声明**： 本文档使用AI翻译服务 [Co-op Translator](https://githubcom/Azure/co-op-translator) 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16758,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\7-bank-project\\2-forms\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1313,
    "chunk_index": 76,
    "total_chunks": 77
  },
  {
    "id": "a42c6e360275260295f2b42554dcaed1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\assignment.md",
    "source_type": "git_repo",
    "title": "注释你的代码",
    "content": "注释你的代码\n指导\n查看游戏文件夹中的当前 /app.js 文件，寻找方法为其添加注释并整理代码。代码很容易变得混乱，现在是一个好机会添加注释，确保代码可读，以便以后使用。\n评分标准\n| 标准     | 卓越表现                                                         | 合格表现                           | 需要改进                                                   |\n| -------- | ---------------------------------------------------------------- | ---------------------------------- | ---------------------------------------------------------- |\n|          | app.js 代码完全注释并组织成逻辑块                              | app.js 代码有适当的注释          | app.js 代码有些混乱，缺乏良好的注释                      |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而导致的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1527,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "011aaa7e5197712e22c3b10d649ff264",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "构建太空游戏第一部分：介绍\n课前测验\n课前测验\n游戏开发中的继承与组合\n在之前的课程中，由于项目规模较小，您无需过多考虑应用程序的设计架构。然而，当您的应用程序规模和范围扩大时，架构决策就变得更加重要。在 JavaScript 中创建大型应用程序有两种主要方法：组合 或 继承。两者各有优缺点，但我们将从游戏的角度来解释它们。\n✅ 最著名的编程书籍之一与设计模式有关。\n在游戏中，您有 游戏对象，即屏幕上存在的对象。这意味着它们在笛卡尔坐标系中有一个位置，通常由 x 和 y 坐标来表示。在开发游戏时，您会注意到所有游戏对象都有一个标准属性，这些属性在您创建的每个游戏中都很常见，即：\n基于位置 大多数（如果不是全部）游戏元素都是基于位置的。这意味着它们有一个位置，即 x 和 y。\n可移动 这些对象可以移动到新位置。通常是英雄、怪物或 NPC（非玩家角色），但例如树这样的静态对象则不是。\n自我销毁 这些对象只存在一段时间，然后设置为删除。通常通过一个 dead 或 destroyed 的布尔值来表示，告诉游戏引擎该对象不再需要渲染。\n冷却时间 “冷却时间”是短生命周期对象的典型属性。一个典型的例子是文本或图形效果（如爆炸），它们只需显示几毫秒。\n✅ 想想像吃豆人这样的游戏。您能在这个游戏中识别出上述四种对象类型吗？\n表达行为\n我们上面描述的都是游戏对象可以具有的行为。那么我们如何编码这些行为呢？我们可以通过与类或对象相关联的方法来表达这些行为。\n类\n使用 类 和 继承 的想法可以为类添加特定行为。\n✅ 继承是一个重要的概念。了解更多请阅读 MDN 关于继承的文章。\n通过代码表达，一个游戏对象通常可以像这样：\n```javascript\n//set up the class GameObject\nclass GameObject {\nconstructor(x, y, type) {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "cfcf17fddb972f00e38847969ac0c128",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "构建太空游戏第一部分：介绍\n课前测验\n课前测验\n游戏开发中的继承与组合\n在之前的课程中，由于项目规模较小，您无需过多考虑应用程序的设计架构。然而，当您的应用程序规模和范围扩大时，架构决策就变得更加重要。在 JavaScript 中创建大型应用程序有两种主要方法：组合 或 继承。两者各有优缺点，但我们将从游戏的角度来解释它们。\n✅ 最著名的编程书籍之一与设计模式有关。\n在游戏中，您有 游戏对象，即屏幕上存在的对象。这意味着它们在笛卡尔坐标系中有一个位置，通常由 x 和 y 坐标来表示。在开发游戏时，您会注意到所有游戏对象都有一个标准属性，这些属性在您创建的每个游戏中都很常见，即：\n基于位置 大多数（如果不是全部）游戏元素都是基于位置的。这意味着它们有一个位置，即 x 和 y。\n可移动 这些对象可以移动到新位置。通常是英雄、怪物或 NPC（非玩家角色），但例如树这样的静态对象则不是。\n自我销毁 这些对象只存在一段时间，然后设置为删除。通常通过一个 dead 或 destroyed 的布尔值来表示，告诉游戏引擎该对象不再需要渲染。\n冷却时间 “冷却时间”是短生命周期对象的典型属性。一个典型的例子是文本或图形效果（如爆炸），它们只需显示几毫秒。\n✅ 想想像吃豆人这样的游戏。您能在这个游戏中识别出上述四种对象类型吗？\n表达行为\n我们上面描述的都是游戏对象可以具有的行为。那么我们如何编码这些行为呢？我们可以通过与类或对象相关联的方法来表达这些行为。\n类\n使用 类 和 继承 的想法可以为类添加特定行为。\n✅ 继承是一个重要的概念。了解更多请阅读 MDN 关于继承的文章。\n通过代码表达，一个游戏对象通常可以像这样：\n```javascript\n//set up the class GameObject\nclass GameObject {\nconstructor(x, y, type) {\nthisx = x;\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 704,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "677058a73cc52f1e74603d79501e62bf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "构建太空游戏第一部分：介绍\n课前测验\n课前测验\n游戏开发中的继承与组合\n在之前的课程中，由于项目规模较小，您无需过多考虑应用程序的设计架构。然而，当您的应用程序规模和范围扩大时，架构决策就变得更加重要。在 JavaScript 中创建大型应用程序有两种主要方法：组合 或 继承。两者各有优缺点，但我们将从游戏的角度来解释它们。\n✅ 最著名的编程书籍之一与设计模式有关。\n在游戏中，您有 游戏对象，即屏幕上存在的对象。这意味着它们在笛卡尔坐标系中有一个位置，通常由 x 和 y 坐标来表示。在开发游戏时，您会注意到所有游戏对象都有一个标准属性，这些属性在您创建的每个游戏中都很常见，即：\n基于位置 大多数（如果不是全部）游戏元素都是基于位置的。这意味着它们有一个位置，即 x 和 y。\n可移动 这些对象可以移动到新位置。通常是英雄、怪物或 NPC（非玩家角色），但例如树这样的静态对象则不是。\n自我销毁 这些对象只存在一段时间，然后设置为删除。通常通过一个 dead 或 destroyed 的布尔值来表示，告诉游戏引擎该对象不再需要渲染。\n冷却时间 “冷却时间”是短生命周期对象的典型属性。一个典型的例子是文本或图形效果（如爆炸），它们只需显示几毫秒。\n✅ 想想像吃豆人这样的游戏。您能在这个游戏中识别出上述四种对象类型吗？\n表达行为\n我们上面描述的都是游戏对象可以具有的行为。那么我们如何编码这些行为呢？我们可以通过与类或对象相关联的方法来表达这些行为。\n类\n使用 类 和 继承 的想法可以为类添加特定行为。\n✅ 继承是一个重要的概念。了解更多请阅读 MDN 关于继承的文章。\n通过代码表达，一个游戏对象通常可以像这样：\n```javascript\n//set up the class GameObject\nclass GameObject {\nconstructor(x, y, type) {\nthisx = x;\nthisy = y;\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 709,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "29e7f76156e8020a4847415e889da7a7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "构建太空游戏第一部分：介绍\n课前测验\n课前测验\n游戏开发中的继承与组合\n在之前的课程中，由于项目规模较小，您无需过多考虑应用程序的设计架构。然而，当您的应用程序规模和范围扩大时，架构决策就变得更加重要。在 JavaScript 中创建大型应用程序有两种主要方法：组合 或 继承。两者各有优缺点，但我们将从游戏的角度来解释它们。\n✅ 最著名的编程书籍之一与设计模式有关。\n在游戏中，您有 游戏对象，即屏幕上存在的对象。这意味着它们在笛卡尔坐标系中有一个位置，通常由 x 和 y 坐标来表示。在开发游戏时，您会注意到所有游戏对象都有一个标准属性，这些属性在您创建的每个游戏中都很常见，即：\n基于位置 大多数（如果不是全部）游戏元素都是基于位置的。这意味着它们有一个位置，即 x 和 y。\n可移动 这些对象可以移动到新位置。通常是英雄、怪物或 NPC（非玩家角色），但例如树这样的静态对象则不是。\n自我销毁 这些对象只存在一段时间，然后设置为删除。通常通过一个 dead 或 destroyed 的布尔值来表示，告诉游戏引擎该对象不再需要渲染。\n冷却时间 “冷却时间”是短生命周期对象的典型属性。一个典型的例子是文本或图形效果（如爆炸），它们只需显示几毫秒。\n✅ 想想像吃豆人这样的游戏。您能在这个游戏中识别出上述四种对象类型吗？\n表达行为\n我们上面描述的都是游戏对象可以具有的行为。那么我们如何编码这些行为呢？我们可以通过与类或对象相关联的方法来表达这些行为。\n类\n使用 类 和 继承 的想法可以为类添加特定行为。\n✅ 继承是一个重要的概念。了解更多请阅读 MDN 关于继承的文章。\n通过代码表达，一个游戏对象通常可以像这样：\n```javascript\n//set up the class GameObject\nclass GameObject {\nconstructor(x, y, type) {\nthisx = x;\nthisy = y;\nthistype = type;\n}\n}\n//this class will extend the GameObject's inherent class properties\nclass Movable extends GameObject {\nconstructor(x,y, type) {\nsuper(x,y, type)\n}\n//this movable object can be moved on the screen\nmoveTo(x, y) {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 767,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "1687ebc0e81958e5838775e8a5deddbf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "destroyed 的布尔值来表示，告诉游戏引擎该对象不再需要渲染。 冷却时间 “冷却时间”是短生命周期对象的典型属性。一个典型的例子是文本或图形效果（如爆炸），它们只需显示几毫秒。 ✅ 想想像吃豆人这样的游戏。您能在这个游戏中识别出上述四种对象类型吗？ 表达行为 我们上面描述的都是游戏对象可以具有的行为。那么我们如何编码这些行为呢？我们可以通过与类或对象相关联的方法来表达这些行为。 类 使用 类 和 继承 的想法可以为类添加特定行为。 ✅ 继承是一个重要的概念。了解更多请阅读 MDN 关于继承的文章。 通过代码表达，一个游戏对象通常可以像这样： ```javascript //set up the class GameObject class GameObject { constructor(x, y, type) { thisx = x; thisy = y; thistype = type; } } //this class will extend the GameObject's inherent class properties class Movable extends GameObject { constructor(x,y, type) { super(x,y, type) } //this movable object can be moved on the screen moveTo(x, y) { thisx = x;\nthis y = y;\n}\n}\n//this is a specific class that extends the Movable class, so it can take advantage of all the properties that it inherits\nclass Hero extends Movable {\nconstructor(x,y) {\nsuper(x,y, 'Hero')\n}\n}\n//this class, on the other hand, only inherits the GameObject properties\nclass Tree extends GameObject {\nconstructor(x,y) {\nsuper(x,y, 'Tree')\n}\n}\n//a hero can move const hero = new Hero();\nhero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "331e75c53d8efff2a6aa3771262e16ad",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "y) { thisx = x; this y = y; } } //this is a specific class that extends the Movable class, so it can take advantage of all the properties that it inherits class Hero extends Movable { constructor(x,y) { super(x,y, 'Hero') } } //this class, on the other hand, only inherits the GameObject properties class Tree extends GameObject { constructor(x,y) { super(x,y, 'Tree') } } //a hero can move const hero = new Hero(); heromoveTo(5,5);\n//but a tree cannot\nconst tree = new Tree();\n```\n✅ 花几分钟重新构想一个吃豆人英雄（例如 Inky、Pinky 或 Blinky），并思考它如何用 JavaScript 编写。\n组合\n处理对象继承的另一种方法是使用 组合。然后，对象可以像这样表达它们的行为：\n```javascript\n//create a constant gameObject\nconst gameObject = {\nx: 0,\ny: 0,\ntype: ''\n};\n// and a constant movable\nconst movable = {\nmoveTo(x, y) {\nthis x = x;\nthis y = y;\n}\n}\n//then the constant movableObject is composed of the gameObject and movable constants\nconst movableObject = { gameObject, movable};\n//then create a function to create a new Hero who inherits the movableObject properties\nfunction createHero(x, y) {\nreturn { movableObject,\nx,\ny,\ntype: 'Hero'\n}\n}\n// and a static object that inherits only the gameObject properties\nfunction createStatic(x, y, type) {\nreturn { gameObject\nx,\ny,\ntype\n}\n}\n//create the hero and move it\nconst hero = createHero(10,10);\nhero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "437e199623eb6e4aeae30d344ec43d02",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "is composed of the gameObject and movable constants const movableObject = { gameObject, movable}; //then create a function to create a new Hero who inherits the movableObject properties function createHero(x, y) { return { movableObject, x, y, type: 'Hero' } } // and a static object that inherits only the gameObject properties function createStatic(x, y, type) { return { gameObject x, y, type } } //create the hero and move it const hero = createHero(10,10); heromoveTo(5,5);\n//and create a static tree which only stands around\nconst tree = createStatic(0,0, 'Tree');\n```\n我应该使用哪种模式？\n选择哪种模式完全取决于您。JavaScript 支持这两种范式。\n--\n在游戏开发中，另一个常见的模式解决了处理游戏用户体验和性能的问题。\n发布/订阅模式\n✅ Pub/Sub 代表“发布-订阅”\n这种模式解决了应用程序的不同部分不应该相互了解的理念。为什么呢？如果各部分是分离的，整体上更容易理解发生了什么。同时，如果需要突然改变行为，也会更容易实现。我们如何做到这一点？通过建立以下概念：\n消息：消息通常是一个文本字符串，伴随一个可选的有效负载（用于说明消息内容的一段数据）。游戏中的典型消息可以是 KEY_PRESSED_ENTER。\n发布者：这个元素发布消息并将其发送给所有订阅者。\n订阅者：这个元素监听特定消息，并在接收到消息后执行某些任务，例如发射激光。\n这种实现虽然代码量很小，但却是一个非常强大的模式。以下是它的实现方式：\n```javascript\n//set up an EventEmitter class that contains listeners\nclass EventEmitter {\nconstructor() {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "6db91af3fea1676f6b60b1f8bbaeaade",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "object that inherits only the gameObject properties function createStatic(x, y, type) { return { gameObject x, y, type } } //create the hero and move it const hero = createHero(10,10); heromoveTo(5,5); //and create a static tree which only stands around const tree = createStatic(0,0, 'Tree'); ``` 我应该使用哪种模式？ 选择哪种模式完全取决于您。JavaScript 支持这两种范式。 -- 在游戏开发中，另一个常见的模式解决了处理游戏用户体验和性能的问题。 发布/订阅模式 ✅ Pub/Sub 代表“发布-订阅” 这种模式解决了应用程序的不同部分不应该相互了解的理念。为什么呢？如果各部分是分离的，整体上更容易理解发生了什么。同时，如果需要突然改变行为，也会更容易实现。我们如何做到这一点？通过建立以下概念： 消息：消息通常是一个文本字符串，伴随一个可选的有效负载（用于说明消息内容的一段数据）。游戏中的典型消息可以是 KEY_PRESSED_ENTER。 发布者：这个元素发布消息并将其发送给所有订阅者。 订阅者：这个元素监听特定消息，并在接收到消息后执行某些任务，例如发射激光。 这种实现虽然代码量很小，但却是一个非常强大的模式。以下是它的实现方式： ```javascript //set up an EventEmitter class that contains listeners class EventEmitter { constructor() { thislisteners = {};\n}\n//when a message is received, let the listener to handle its payload\non(message, listener) {\nif ( this listeners[message]) {\nthis listeners[message] = [];\n}\nthis listeners[message]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "3f0d91fbc86477d893f061b742cd4bd4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "heromoveTo(5,5); //and create a static tree which only stands around const tree = createStatic(0,0, 'Tree'); ``` 我应该使用哪种模式？ 选择哪种模式完全取决于您。JavaScript 支持这两种范式。 -- 在游戏开发中，另一个常见的模式解决了处理游戏用户体验和性能的问题。 发布/订阅模式 ✅ Pub/Sub 代表“发布-订阅” 这种模式解决了应用程序的不同部分不应该相互了解的理念。为什么呢？如果各部分是分离的，整体上更容易理解发生了什么。同时，如果需要突然改变行为，也会更容易实现。我们如何做到这一点？通过建立以下概念： 消息：消息通常是一个文本字符串，伴随一个可选的有效负载（用于说明消息内容的一段数据）。游戏中的典型消息可以是 KEY_PRESSED_ENTER。 发布者：这个元素发布消息并将其发送给所有订阅者。 订阅者：这个元素监听特定消息，并在接收到消息后执行某些任务，例如发射激光。 这种实现虽然代码量很小，但却是一个非常强大的模式。以下是它的实现方式： ```javascript //set up an EventEmitter class that contains listeners class EventEmitter { constructor() { thislisteners = {}; } //when a message is received, let the listener to handle its payload on(message, listener) { if ( this listeners[message]) { this listeners[message] = []; } this listeners[message]push(listener);\n}\n//when a message is sent, send it to a listener with some payload\nemit(message, payload = null) {\nif (this listeners[message]) {\nthis listeners[message]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "292aadff2adb9bc69c4e78f8bd872407",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "这种模式解决了应用程序的不同部分不应该相互了解的理念。为什么呢？如果各部分是分离的，整体上更容易理解发生了什么。同时，如果需要突然改变行为，也会更容易实现。我们如何做到这一点？通过建立以下概念： 消息：消息通常是一个文本字符串，伴随一个可选的有效负载（用于说明消息内容的一段数据）。游戏中的典型消息可以是 KEY_PRESSED_ENTER。 发布者：这个元素发布消息并将其发送给所有订阅者。 订阅者：这个元素监听特定消息，并在接收到消息后执行某些任务，例如发射激光。 这种实现虽然代码量很小，但却是一个非常强大的模式。以下是它的实现方式： ```javascript //set up an EventEmitter class that contains listeners class EventEmitter { constructor() { thislisteners = {}; } //when a message is received, let the listener to handle its payload on(message, listener) { if ( this listeners[message]) { this listeners[message] = []; } this listeners[message]push(listener); } //when a message is sent, send it to a listener with some payload emit(message, payload = null) { if (this listeners[message]) { this listeners[message]forEach(l => l(message, payload))\n}\n}\n}\n```\n要使用上述代码，我们可以创建一个非常小的实现：\n```javascript\n//set up a message structure\nconst Messages = {\nHERO_MOVE_LEFT: 'HERO_MOVE_LEFT'\n};\n//invoke the eventEmitter you set up above\nconst eventEmitter = new EventEmitter();\n//set up a hero\nconst hero = createHero(0,0);\n//let the eventEmitter know to watch for messages pertaining to the hero moving left, and act on it\neventEmitter on(Messages HERO_MOVE_LEFT, () => {\nhero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "d10b932ec06cd932e325e0745b84bc32",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "payload = null) { if (this listeners[message]) { this listeners[message]forEach(l => l(message, payload)) } } } ``` 要使用上述代码，我们可以创建一个非常小的实现： ```javascript //set up a message structure const Messages = { HERO_MOVE_LEFT: 'HERO_MOVE_LEFT' }; //invoke the eventEmitter you set up above const eventEmitter = new EventEmitter(); //set up a hero const hero = createHero(0,0); //let the eventEmitter know to watch for messages pertaining to the hero moving left, and act on it eventEmitter on(Messages HERO_MOVE_LEFT, () => { heromove(5,0);\n});\n//set up the window to listen for the keyup event, specifically if the left arrow is hit, emit a message to move the hero left\nwindow addEventListener('keyup', (evt) => {\nif (evt key === 'ArrowLeft') {\neventEmitter emit(Messages HERO_MOVE_LEFT)\n}\n});\n```\n在上面的代码中，我们连接了一个键盘事件 ArrowLeft 并发送了 HERO_MOVE_LEFT 消息。我们监听该消息并因此移动 hero。这种模式的优势在于事件监听器和英雄彼此互不知晓。您可以将 ArrowLeft 重新映射到 A 键。此外，通过对事件发射器的 on 函数进行一些编辑，您可以在 ArrowLeft 上执行完全不同的操作：\njavascript\neventEmitter on(Messages HERO_MOVE_LEFT, () => {\nhero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "045a53512cd623d5c34cd20ba107948c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第一部分：介绍",
    "content": "and act on it eventEmitter on(Messages HERO_MOVE_LEFT, () => { heromove(5,0); }); //set up the window to listen for the keyup event, specifically if the left arrow is hit, emit a message to move the hero left window addEventListener('keyup', (evt) => { if (evt key === 'ArrowLeft') { eventEmitter emit(Messages HERO_MOVE_LEFT) } }); ``` 在上面的代码中，我们连接了一个键盘事件 ArrowLeft 并发送了 HERO_MOVE_LEFT 消息。我们监听该消息并因此移动 hero。这种模式的优势在于事件监听器和英雄彼此互不知晓。您可以将 ArrowLeft 重新映射到 A 键。此外，通过对事件发射器的 on 函数进行一些编辑，您可以在 ArrowLeft 上执行完全不同的操作： javascript eventEmitter on(Messages HERO_MOVE_LEFT, () => { heromove(5,0);\n});\n随着游戏规模的增长，复杂性增加，这种模式的复杂性却保持不变，代码也保持简洁。强烈推荐采用这种模式。\n🚀 挑战\n思考发布-订阅模式如何增强游戏。哪些部分应该发出事件，游戏应该如何对它们做出反应？现在是您发挥创意的时候，想象一个新游戏及其各部分可能的行为。\n课后测验\n课后测验\n复习与自学\n通过阅读相关内容了解更多关于发布/订阅模式的信息。\n作业\n设计一个游戏\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8810,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\1-introduction\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 561,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "ba3f6f0cbe7a5ddbe1f59a31311eaa7f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "构建太空游戏第二部分：将英雄和怪物绘制到画布上\n课前测验\n课前测验\n画布\n画布是一个默认没有内容的HTML元素，它是一块空白的区域。你需要通过在上面绘制来添加内容。\n✅ 阅读 关于Canvas API的更多信息（MDN）。\n以下是它通常的声明方式，作为页面主体的一部分：\n```html\n```\n上面我们设置了id、width和height。\nid：设置这个属性以便在需要与其交互时获取引用。\nwidth：这是元素的宽度。\nheight：这是元素的高度。\n绘制简单几何图形\nCanvas使用笛卡尔坐标系来绘制内容，因此它使用x轴和y轴来表示某物的位置。位置0,0是左上角，而右下角是你设置的画布的宽度和高度。\n图片来源：MDN\n要在画布元素上绘制内容，你需要完成以下步骤：\n获取引用：获取Canvas元素的引用。\n获取引用：获取位于Canvas元素上的Context元素的引用。\n执行绘制操作：使用Context元素进行绘制。\n上述步骤的代码通常如下所示：\n```javascript\n// draws a red rectangle\n//1 get the canvas reference\ncanvas = document getElementById(\"myCanvas\");\n//2 set the context to 2D to draw basic shapes\nctx = canvas getContext(\"2d\");\n//3 fill it with the color red\nctx fillStyle = 'red';\n//4 and draw a rectangle with these parameters, setting location and size\nctx",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "328c05fee80887391b0f128c4324fa64",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "课前测验 课前测验 画布 画布是一个默认没有内容的HTML元素，它是一块空白的区域。你需要通过在上面绘制来添加内容。 ✅ 阅读 关于Canvas API的更多信息（MDN）。 以下是它通常的声明方式，作为页面主体的一部分： ```html ``` 上面我们设置了id、width和height。 id：设置这个属性以便在需要与其交互时获取引用。 width：这是元素的宽度。 height：这是元素的高度。 绘制简单几何图形 Canvas使用笛卡尔坐标系来绘制内容，因此它使用x轴和y轴来表示某物的位置。位置0,0是左上角，而右下角是你设置的画布的宽度和高度。 图片来源：MDN 要在画布元素上绘制内容，你需要完成以下步骤： 获取引用：获取Canvas元素的引用。 获取引用：获取位于Canvas元素上的Context元素的引用。 执行绘制操作：使用Context元素进行绘制。 上述步骤的代码通常如下所示： ```javascript // draws a red rectangle //1 get the canvas reference canvas = document getElementById(\"myCanvas\"); //2 set the context to 2D to draw basic shapes ctx = canvas getContext(\"2d\"); //3 fill it with the color red ctx fillStyle = 'red'; //4 and draw a rectangle with these parameters, setting location and size ctxfillRect(0,0, 200, 200) // x,y,width, height\n```\n✅ Canvas API主要专注于2D形状，但你也可以在网页上绘制3D元素；为此，你可以使用 WebGL API。\n使用Canvas API可以绘制各种内容，例如：\n几何图形：我们已经展示了如何绘制矩形，但还有更多可以绘制的内容。\n文本：你可以绘制任何字体和颜色的文本。\n图像：你可以基于图像资源（例如",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 531,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "4efa50b12b603edd1a4f8d104d817a5a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "Canvas使用笛卡尔坐标系来绘制内容，因此它使用x轴和y轴来表示某物的位置。位置0,0是左上角，而右下角是你设置的画布的宽度和高度。 图片来源：MDN 要在画布元素上绘制内容，你需要完成以下步骤： 获取引用：获取Canvas元素的引用。 获取引用：获取位于Canvas元素上的Context元素的引用。 执行绘制操作：使用Context元素进行绘制。 上述步骤的代码通常如下所示： ```javascript // draws a red rectangle //1 get the canvas reference canvas = document getElementById(\"myCanvas\"); //2 set the context to 2D to draw basic shapes ctx = canvas getContext(\"2d\"); //3 fill it with the color red ctx fillStyle = 'red'; //4 and draw a rectangle with these parameters, setting location and size ctxfillRect(0,0, 200, 200) // x,y,width, height ``` ✅ Canvas API主要专注于2D形状，但你也可以在网页上绘制3D元素；为此，你可以使用 WebGL API。 使用Canvas API可以绘制各种内容，例如： 几何图形：我们已经展示了如何绘制矩形，但还有更多可以绘制的内容。 文本：你可以绘制任何字体和颜色的文本。 图像：你可以基于图像资源（例如jpg或",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "fcd8bc747c757057352ee3805e198bae",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "Canvas使用笛卡尔坐标系来绘制内容，因此它使用x轴和y轴来表示某物的位置。位置0,0是左上角，而右下角是你设置的画布的宽度和高度。 图片来源：MDN 要在画布元素上绘制内容，你需要完成以下步骤： 获取引用：获取Canvas元素的引用。 获取引用：获取位于Canvas元素上的Context元素的引用。 执行绘制操作：使用Context元素进行绘制。 上述步骤的代码通常如下所示： ```javascript // draws a red rectangle //1 get the canvas reference canvas = document getElementById(\"myCanvas\"); //2 set the context to 2D to draw basic shapes ctx = canvas getContext(\"2d\"); //3 fill it with the color red ctx fillStyle = 'red'; //4 and draw a rectangle with these parameters, setting location and size ctxfillRect(0,0, 200, 200) // x,y,width, height ``` ✅ Canvas API主要专注于2D形状，但你也可以在网页上绘制3D元素；为此，你可以使用 WebGL API。 使用Canvas API可以绘制各种内容，例如： 几何图形：我们已经展示了如何绘制矩形，但还有更多可以绘制的内容。 文本：你可以绘制任何字体和颜色的文本。 图像：你可以基于图像资源（例如jpg或png）绘制图像。\n✅ 试试吧！你已经知道如何绘制矩形，能否尝试在页面上绘制一个圆？看看CodePen上的一些有趣的Canvas绘图。这里有一个特别令人印象深刻的例子。\n加载并绘制图像资源\n通过创建一个Image对象并设置其src属性来加载图像资源。然后监听load事件以确定何时可以使用它。代码如下：\n加载资源\njavascript\nconst img = new Image();\nimg",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "914c882290990c8b6aad977ce31c3e36",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "rectangle //1 get the canvas reference canvas = document getElementById(\"myCanvas\"); //2 set the context to 2D to draw basic shapes ctx = canvas getContext(\"2d\"); //3 fill it with the color red ctx fillStyle = 'red'; //4 and draw a rectangle with these parameters, setting location and size ctxfillRect(0,0, 200, 200) // x,y,width, height ``` ✅ Canvas API主要专注于2D形状，但你也可以在网页上绘制3D元素；为此，你可以使用 WebGL API。 使用Canvas API可以绘制各种内容，例如： 几何图形：我们已经展示了如何绘制矩形，但还有更多可以绘制的内容。 文本：你可以绘制任何字体和颜色的文本。 图像：你可以基于图像资源（例如jpg或png）绘制图像。 ✅ 试试吧！你已经知道如何绘制矩形，能否尝试在页面上绘制一个圆？看看CodePen上的一些有趣的Canvas绘图。这里有一个特别令人印象深刻的例子。 加载并绘制图像资源 通过创建一个Image对象并设置其src属性来加载图像资源。然后监听load事件以确定何时可以使用它。代码如下： 加载资源 javascript const img = new Image(); imgsrc = 'path/to/my/image png';\nimg onload = () => {\n// image loaded and ready to be used\n}\n加载资源模式\n建议将上述代码封装在一个结构中，这样更容易使用，并且只有在完全加载后才尝试操作它：\n```javascript\nfunction loadAsset(path) {\nreturn new Promise((resolve) => {\nconst img = new Image();\nimg src = path;\nimg onload = () => {\n// image loaded and ready to be used\nresolve(img);\n}\n})\n}\n// use like so\nasync function run() {\nconst heroImg = await loadAsset('hero png')\nconst monsterImg = await loadAsset('monster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "bb8de6dad4406d9ba8a6e93ffd1b11b6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "imgsrc = 'path/to/my/image png'; img onload = () => { // image loaded and ready to be used } 加载资源模式 建议将上述代码封装在一个结构中，这样更容易使用，并且只有在完全加载后才尝试操作它： ```javascript function loadAsset(path) { return new Promise((resolve) => { const img = new Image(); img src = path; img onload = () => { // image loaded and ready to be used resolve(img); } }) } // use like so async function run() { const heroImg = await loadAsset('hero png') const monsterImg = await loadAsset('monsterpng')\n}\n```\n要将游戏资源绘制到屏幕上，代码如下：\n```javascript\nasync function run() {\nconst heroImg = await loadAsset('hero png')\nconst monsterImg = await loadAsset('monster png')\ncanvas = document getElementById(\"myCanvas\");\nctx = canvas getContext(\"2d\");\nctx drawImage(heroImg, canvas width/2,canvas height/2);\nctx drawImage(monsterImg, 0,0);\n}\n```\n现在开始构建你的游戏\n要构建什么\n你将构建一个带有Canvas元素的网页。它应该渲染一个黑色屏幕，大小为1024*768。我们为你提供了两张图片：\n英雄飞船\n5*5怪物\n推荐的开发步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShip png\n-| player png\n-| index html\n-| app js\n-| package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "a82ce31414212b6a7b7785a46c621740",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "function run() { const heroImg = await loadAsset('hero png') const monsterImg = await loadAsset('monsterpng') } ``` 要将游戏资源绘制到屏幕上，代码如下： ```javascript async function run() { const heroImg = await loadAsset('hero png') const monsterImg = await loadAsset('monster png') canvas = document getElementById(\"myCanvas\"); ctx = canvas getContext(\"2d\"); ctx drawImage(heroImg, canvas width/2,canvas height/2); ctx drawImage(monsterImg, 0,0); } ``` 现在开始构建你的游戏 要构建什么 你将构建一个带有Canvas元素的网页。它应该渲染一个黑色屏幕，大小为1024*768。我们为你提供了两张图片： 英雄飞船 5*5怪物 推荐的开发步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShip png -| player png -| index html -| app js -| packagejson\n在Visual Studio Code中打开该文件夹的副本。你需要设置一个本地开发环境，最好是安装了Visual Studio Code、NPM和Node。如果你的电脑上没有设置npm，这里是设置方法。\n通过导航到your_work文件夹开始你的项目：\nbash\ncd your-work\nnpm start\n上述操作将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。现在是一个空白页面，但很快会有所变化。\n注意：要在屏幕上看到更改，请刷新浏览器。\n添加代码\n在your-work/app js中添加所需代码以完成以下任务：\n绘制一个黑色背景的画布\n提示：在/app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "0b0534f313a1106e8ab4c51b7fe22159",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "async function run() { const heroImg = await loadAsset('hero png') const monsterImg = await loadAsset('monster png') canvas = document getElementById(\"myCanvas\"); ctx = canvas getContext(\"2d\"); ctx drawImage(heroImg, canvas width/2,canvas height/2); ctx drawImage(monsterImg, 0,0); } ``` 现在开始构建你的游戏 要构建什么 你将构建一个带有Canvas元素的网页。它应该渲染一个黑色屏幕，大小为1024*768。我们为你提供了两张图片： 英雄飞船 5*5怪物 推荐的开发步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShip png -| player png -| index html -| app js -| packagejson 在Visual Studio Code中打开该文件夹的副本。你需要设置一个本地开发环境，最好是安装了Visual Studio Code、NPM和Node。如果你的电脑上没有设置npm，这里是设置方法。 通过导航到your_work文件夹开始你的项目： bash cd your-work npm start 上述操作将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。现在是一个空白页面，但很快会有所变化。 注意：要在屏幕上看到更改，请刷新浏览器。 添加代码 在your-work/app js中添加所需代码以完成以下任务： 绘制一个黑色背景的画布 提示：在/appjs中适当的TODO下添加两行代码，将ctx元素设置为黑色，并将顶部/左侧坐标设置为0,0，高度和宽度等于画布的大小。\n加载纹理\n提示：使用await loadTexture并传入图像路径来添加玩家和敌人的图像。你暂时还看不到它们出现在屏幕上！\n绘制英雄到屏幕底部中央\n提示：使用drawImage API将heroImg绘制到屏幕上，设置canvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 552,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "deeba9e8ff8dcd78e357ea1aa3532137",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "= await loadAsset('hero png') const monsterImg = await loadAsset('monster png') canvas = document getElementById(\"myCanvas\"); ctx = canvas getContext(\"2d\"); ctx drawImage(heroImg, canvas width/2,canvas height/2); ctx drawImage(monsterImg, 0,0); } ``` 现在开始构建你的游戏 要构建什么 你将构建一个带有Canvas元素的网页。它应该渲染一个黑色屏幕，大小为1024*768。我们为你提供了两张图片： 英雄飞船 5*5怪物 推荐的开发步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShip png -| player png -| index html -| app js -| packagejson 在Visual Studio Code中打开该文件夹的副本。你需要设置一个本地开发环境，最好是安装了Visual Studio Code、NPM和Node。如果你的电脑上没有设置npm，这里是设置方法。 通过导航到your_work文件夹开始你的项目： bash cd your-work npm start 上述操作将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。现在是一个空白页面，但很快会有所变化。 注意：要在屏幕上看到更改，请刷新浏览器。 添加代码 在your-work/app js中添加所需代码以完成以下任务： 绘制一个黑色背景的画布 提示：在/appjs中适当的TODO下添加两行代码，将ctx元素设置为黑色，并将顶部/左侧坐标设置为0,0，高度和宽度等于画布的大小。 加载纹理 提示：使用await loadTexture并传入图像路径来添加玩家和敌人的图像。你暂时还看不到它们出现在屏幕上！ 绘制英雄到屏幕底部中央 提示：使用drawImage API将heroImg绘制到屏幕上，设置canvaswidth / 2 - 45和canvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 553,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "16d8b5b7a3ee13b0414b64e35e4bf724",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "const monsterImg = await loadAsset('monster png') canvas = document getElementById(\"myCanvas\"); ctx = canvas getContext(\"2d\"); ctx drawImage(heroImg, canvas width/2,canvas height/2); ctx drawImage(monsterImg, 0,0); } ``` 现在开始构建你的游戏 要构建什么 你将构建一个带有Canvas元素的网页。它应该渲染一个黑色屏幕，大小为1024*768。我们为你提供了两张图片： 英雄飞船 5*5怪物 推荐的开发步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShip png -| player png -| index html -| app js -| packagejson 在Visual Studio Code中打开该文件夹的副本。你需要设置一个本地开发环境，最好是安装了Visual Studio Code、NPM和Node。如果你的电脑上没有设置npm，这里是设置方法。 通过导航到your_work文件夹开始你的项目： bash cd your-work npm start 上述操作将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。现在是一个空白页面，但很快会有所变化。 注意：要在屏幕上看到更改，请刷新浏览器。 添加代码 在your-work/app js中添加所需代码以完成以下任务： 绘制一个黑色背景的画布 提示：在/appjs中适当的TODO下添加两行代码，将ctx元素设置为黑色，并将顶部/左侧坐标设置为0,0，高度和宽度等于画布的大小。 加载纹理 提示：使用await loadTexture并传入图像路径来添加玩家和敌人的图像。你暂时还看不到它们出现在屏幕上！ 绘制英雄到屏幕底部中央 提示：使用drawImage API将heroImg绘制到屏幕上，设置canvaswidth / 2 - 45和canvasheight - canvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 548,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "602dc49fb4584039d5c9b4f7afb87e0c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "= await loadAsset('monster png') canvas = document getElementById(\"myCanvas\"); ctx = canvas getContext(\"2d\"); ctx drawImage(heroImg, canvas width/2,canvas height/2); ctx drawImage(monsterImg, 0,0); } ``` 现在开始构建你的游戏 要构建什么 你将构建一个带有Canvas元素的网页。它应该渲染一个黑色屏幕，大小为1024*768。我们为你提供了两张图片： 英雄飞船 5*5怪物 推荐的开发步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShip png -| player png -| index html -| app js -| packagejson 在Visual Studio Code中打开该文件夹的副本。你需要设置一个本地开发环境，最好是安装了Visual Studio Code、NPM和Node。如果你的电脑上没有设置npm，这里是设置方法。 通过导航到your_work文件夹开始你的项目： bash cd your-work npm start 上述操作将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。现在是一个空白页面，但很快会有所变化。 注意：要在屏幕上看到更改，请刷新浏览器。 添加代码 在your-work/app js中添加所需代码以完成以下任务： 绘制一个黑色背景的画布 提示：在/appjs中适当的TODO下添加两行代码，将ctx元素设置为黑色，并将顶部/左侧坐标设置为0,0，高度和宽度等于画布的大小。 加载纹理 提示：使用await loadTexture并传入图像路径来添加玩家和敌人的图像。你暂时还看不到它们出现在屏幕上！ 绘制英雄到屏幕底部中央 提示：使用drawImage API将heroImg绘制到屏幕上，设置canvaswidth / 2 - 45和canvasheight - canvasheight / 4)。\n绘制5*5怪物\n提示：现在你可以取消注释代码以在屏幕上绘制敌人。接下来，进入createEnemies函数并完成它。\n首先，设置一些常量：\n```javascript\nconst MONSTER_TOTAL = 5;\nconst MONSTER_WIDTH = MONSTER_TOTAL * 98;\nconst START_X = (canvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 637,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "a7413cc0d91e08a84be4e8dd38d6fee8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "} ``` 现在开始构建你的游戏 要构建什么 你将构建一个带有Canvas元素的网页。它应该渲染一个黑色屏幕，大小为1024*768。我们为你提供了两张图片： 英雄飞船 5*5怪物 推荐的开发步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShip png -| player png -| index html -| app js -| packagejson 在Visual Studio Code中打开该文件夹的副本。你需要设置一个本地开发环境，最好是安装了Visual Studio Code、NPM和Node。如果你的电脑上没有设置npm，这里是设置方法。 通过导航到your_work文件夹开始你的项目： bash cd your-work npm start 上述操作将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。现在是一个空白页面，但很快会有所变化。 注意：要在屏幕上看到更改，请刷新浏览器。 添加代码 在your-work/app js中添加所需代码以完成以下任务： 绘制一个黑色背景的画布 提示：在/appjs中适当的TODO下添加两行代码，将ctx元素设置为黑色，并将顶部/左侧坐标设置为0,0，高度和宽度等于画布的大小。 加载纹理 提示：使用await loadTexture并传入图像路径来添加玩家和敌人的图像。你暂时还看不到它们出现在屏幕上！ 绘制英雄到屏幕底部中央 提示：使用drawImage API将heroImg绘制到屏幕上，设置canvaswidth / 2 - 45和canvasheight - canvasheight / 4)。 绘制5*5怪物 提示：现在你可以取消注释代码以在屏幕上绘制敌人。接下来，进入createEnemies函数并完成它。 首先，设置一些常量： ```javascript const MONSTER_TOTAL = 5; const MONSTER_WIDTH = MONSTER_TOTAL * 98; const START_X = (canvaswidth - MONSTER_WIDTH) / 2;\nconst STOP_X = START_X + MONSTER_WIDTH;\n```\n然后，创建一个循环将怪物数组绘制到屏幕上：\n```javascript\nfor (let x = START_X; x < STOP_X; x += 98) {\nfor (let y = 0; y < 50 * 5; y += 50) {\nctx",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "5f582ba62a514e92f6184b399dc9f13f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第二部分：将英雄和怪物绘制到画布上",
    "content": "在your-work/app js中添加所需代码以完成以下任务： 绘制一个黑色背景的画布 提示：在/appjs中适当的TODO下添加两行代码，将ctx元素设置为黑色，并将顶部/左侧坐标设置为0,0，高度和宽度等于画布的大小。 加载纹理 提示：使用await loadTexture并传入图像路径来添加玩家和敌人的图像。你暂时还看不到它们出现在屏幕上！ 绘制英雄到屏幕底部中央 提示：使用drawImage API将heroImg绘制到屏幕上，设置canvaswidth / 2 - 45和canvasheight - canvasheight / 4)。 绘制5*5怪物 提示：现在你可以取消注释代码以在屏幕上绘制敌人。接下来，进入createEnemies函数并完成它。 首先，设置一些常量： ```javascript const MONSTER_TOTAL = 5; const MONSTER_WIDTH = MONSTER_TOTAL * 98; const START_X = (canvaswidth - MONSTER_WIDTH) / 2; const STOP_X = START_X + MONSTER_WIDTH; ``` 然后，创建一个循环将怪物数组绘制到屏幕上： ```javascript for (let x = START_X; x < STOP_X; x += 98) { for (let y = 0; y < 50 * 5; y += 50) { ctxdrawImage(enemyImg, x, y);\n}\n}\n```\n结果\n完成后的结果应该如下所示：\n解决方案\n请先尝试自己解决，但如果遇到困难，可以查看解决方案。\n🚀 挑战\n你已经学习了使用专注于2D的Canvas API进行绘图；看看 WebGL API，尝试绘制一个3D对象。\n课后测验\n课后测验\n复习与自学\n通过阅读相关内容了解更多关于Canvas API的信息。\n作业\n尝试使用Canvas API\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7996,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\2-drawing-to-canvas\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "46ef481ca2d0c88f0b31bcc2282fd3e2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\assignment.md",
    "source_type": "git_repo",
    "title": "探索碰撞",
    "content": "探索碰撞\n指导\n为了更好地理解碰撞的工作原理，制作一个包含少量碰撞物的小型游戏。通过按键或鼠标点击让它们移动，并在其中一个物体被撞击时触发某些事件。可以是类似陨石撞击地球，或者碰碰车的场景。发挥你的创造力！\n评分标准\n| 标准     | 卓越表现                                                                                                                | 合格表现                       | 需要改进         |\n| -------- | ------------------------------------------------------------------------------------------------------------------------ | ------------------------------ | ----------------- |\n|          | 提供完整的可运行代码示例，物体绘制到画布上，发生基本碰撞，并触发反应                                                     | 代码在某些方面不完整           | 代码运行异常     |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1638,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5d70c924ff1dc7fa40ff6736b68cd63",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\assignment.md",
    "source_type": "git_repo",
    "title": "创建一个计分游戏",
    "content": "创建一个计分游戏\n指导\n创建一个游戏，以一种有创意的方式展示生命值和分数。一个建议是将生命值显示为心形图标，并将分数显示为屏幕底部中央的大数字。可以在这里查看免费游戏资源\n评分标准\n| 标准     | 优秀                     | 合格                        | 需要改进                   |\n| -------- | ------------------------ | --------------------------- | -------------------------- |\n|          | 完整的游戏呈现           | 游戏部分呈现                | 部分游戏存在漏洞           |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1304,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 304,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "71e9616c91e7c3e3c77d8c1752542d28",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "构建太空游戏第三部分：添加运动\n课前测验\n课前测验\n游戏只有在屏幕上有外星人跑来跑去时才会变得有趣！在这个游戏中，我们将使用两种类型的运动：\n键盘/鼠标运动：用户通过键盘或鼠标与屏幕上的对象交互并移动它。\n游戏驱动运动：游戏以一定的时间间隔自动移动对象。\n那么我们如何在屏幕上移动物体呢？这完全是关于笛卡尔坐标系：我们改变对象的位置 (x, y)，然后重新绘制屏幕。\n通常需要以下步骤来实现屏幕上的运动：\n设置新位置：为对象设置一个新位置，这样才能让用户感知到对象已经移动。\n清除屏幕：在每次绘制之间需要清除屏幕。我们可以通过绘制一个填充背景色的矩形来清除屏幕。\n在新位置重新绘制对象：通过这样做，我们最终实现了将对象从一个位置移动到另一个位置。\n以下是代码示例：\njavascript\n//set the hero's location\nhero x += 5;\n// clear the rectangle that hosts the hero\nctx clearRect(0, 0, canvas width, canvas height);\n// redraw the game background and hero\nctx fillRect(0, 0, canvas width, canvas height)\nctx fillStyle = \"black\";\nctx drawImage(heroImg, hero x, hero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 28
  },
  {
    "id": "f26d5ebace26538e1c779022cb288a29",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "构建太空游戏第三部分：添加运动\n课前测验\n课前测验\n游戏只有在屏幕上有外星人跑来跑去时才会变得有趣！在这个游戏中，我们将使用两种类型的运动：\n键盘/鼠标运动：用户通过键盘或鼠标与屏幕上的对象交互并移动它。\n游戏驱动运动：游戏以一定的时间间隔自动移动对象。\n那么我们如何在屏幕上移动物体呢？这完全是关于笛卡尔坐标系：我们改变对象的位置 (x, y)，然后重新绘制屏幕。\n通常需要以下步骤来实现屏幕上的运动：\n设置新位置：为对象设置一个新位置，这样才能让用户感知到对象已经移动。\n清除屏幕：在每次绘制之间需要清除屏幕。我们可以通过绘制一个填充背景色的矩形来清除屏幕。\n在新位置重新绘制对象：通过这样做，我们最终实现了将对象从一个位置移动到另一个位置。\n以下是代码示例：\njavascript\n//set the hero's location\nhero x += 5;\n// clear the rectangle that hosts the hero\nctx clearRect(0, 0, canvas width, canvas height);\n// redraw the game background and hero\nctx fillRect(0, 0, canvas width, canvas height)\nctx fillStyle = \"black\";\nctx drawImage(heroImg, hero x, heroy);\n✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。\n处理键盘事件\n通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。\n要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。\n以下是一个示例：\njavascript\nwindow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 599,
    "chunk_index": 1,
    "total_chunks": 28
  },
  {
    "id": "87137e007291249903163895d68831e5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "构建太空游戏第三部分：添加运动\n课前测验\n课前测验\n游戏只有在屏幕上有外星人跑来跑去时才会变得有趣！在这个游戏中，我们将使用两种类型的运动：\n键盘/鼠标运动：用户通过键盘或鼠标与屏幕上的对象交互并移动它。\n游戏驱动运动：游戏以一定的时间间隔自动移动对象。\n那么我们如何在屏幕上移动物体呢？这完全是关于笛卡尔坐标系：我们改变对象的位置 (x, y)，然后重新绘制屏幕。\n通常需要以下步骤来实现屏幕上的运动：\n设置新位置：为对象设置一个新位置，这样才能让用户感知到对象已经移动。\n清除屏幕：在每次绘制之间需要清除屏幕。我们可以通过绘制一个填充背景色的矩形来清除屏幕。\n在新位置重新绘制对象：通过这样做，我们最终实现了将对象从一个位置移动到另一个位置。\n以下是代码示例：\njavascript\n//set the hero's location\nhero x += 5;\n// clear the rectangle that hosts the hero\nctx clearRect(0, 0, canvas width, canvas height);\n// redraw the game background and hero\nctx fillRect(0, 0, canvas width, canvas height)\nctx fillStyle = \"black\";\nctx drawImage(heroImg, hero x, heroy);\n✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。\n处理键盘事件\n通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。\n要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。\n以下是一个示例：\njavascript\nwindowaddEventListener('keyup', (evt) => {\n// `evt",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 2,
    "total_chunks": 28
  },
  {
    "id": "b9d561bba40d2ad37ab4516be6347b5d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "构建太空游戏第三部分：添加运动\n课前测验\n课前测验\n游戏只有在屏幕上有外星人跑来跑去时才会变得有趣！在这个游戏中，我们将使用两种类型的运动：\n键盘/鼠标运动：用户通过键盘或鼠标与屏幕上的对象交互并移动它。\n游戏驱动运动：游戏以一定的时间间隔自动移动对象。\n那么我们如何在屏幕上移动物体呢？这完全是关于笛卡尔坐标系：我们改变对象的位置 (x, y)，然后重新绘制屏幕。\n通常需要以下步骤来实现屏幕上的运动：\n设置新位置：为对象设置一个新位置，这样才能让用户感知到对象已经移动。\n清除屏幕：在每次绘制之间需要清除屏幕。我们可以通过绘制一个填充背景色的矩形来清除屏幕。\n在新位置重新绘制对象：通过这样做，我们最终实现了将对象从一个位置移动到另一个位置。\n以下是代码示例：\njavascript\n//set the hero's location\nhero x += 5;\n// clear the rectangle that hosts the hero\nctx clearRect(0, 0, canvas width, canvas height);\n// redraw the game background and hero\nctx fillRect(0, 0, canvas width, canvas height)\nctx fillStyle = \"black\";\nctx drawImage(heroImg, hero x, heroy);\n✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。\n处理键盘事件\n通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。\n要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。\n以下是一个示例：\njavascript\nwindowaddEventListener('keyup', (evt) => {\n// `evtkey` = string representation of the key\nif (evt",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 3,
    "total_chunks": 28
  },
  {
    "id": "7100cb655f7043c17684f805f892cd57",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "那么我们如何在屏幕上移动物体呢？这完全是关于笛卡尔坐标系：我们改变对象的位置 (x, y)，然后重新绘制屏幕。 通常需要以下步骤来实现屏幕上的运动： 设置新位置：为对象设置一个新位置，这样才能让用户感知到对象已经移动。 清除屏幕：在每次绘制之间需要清除屏幕。我们可以通过绘制一个填充背景色的矩形来清除屏幕。 在新位置重新绘制对象：通过这样做，我们最终实现了将对象从一个位置移动到另一个位置。 以下是代码示例： javascript //set the hero's location hero x += 5; // clear the rectangle that hosts the hero ctx clearRect(0, 0, canvas width, canvas height); // redraw the game background and hero ctx fillRect(0, 0, canvas width, canvas height) ctx fillStyle = \"black\"; ctx drawImage(heroImg, hero x, heroy); ✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。 处理键盘事件 通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。 要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。 以下是一个示例： javascript windowaddEventListener('keyup', (evt) => { // `evtkey` = string representation of the key if (evtkey === 'ArrowUp') {\n// do something\n}\n})\n对于键盘事件，事件上有两个属性可以用来查看按下了哪个键：\nkey：这是按下的键的字符串表示，例如ArrowUp。\nkeyCode：这是数字表示，例如37，对应于ArrowLeft。\n✅ 键盘事件的操作在游戏开发之外也很有用。你能想到这种技术的其他用途吗？\n特殊键：一个注意事项\n有一些特殊键会影响窗口。这意味着如果你正在监听keyup事件，并使用这些特殊键移动你的英雄，它也会执行水平滚动。因此，在构建游戏时，你可能需要关闭这种内置的浏览器行为。你需要如下代码：\n```javascript\nlet onKeyDown = function (e) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 702,
    "chunk_index": 4,
    "total_chunks": 28
  },
  {
    "id": "2bb3890e666dc93c0fbf7503ea80d5c7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "the hero ctx clearRect(0, 0, canvas width, canvas height); // redraw the game background and hero ctx fillRect(0, 0, canvas width, canvas height) ctx fillStyle = \"black\"; ctx drawImage(heroImg, hero x, heroy); ✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。 处理键盘事件 通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。 要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。 以下是一个示例： javascript windowaddEventListener('keyup', (evt) => { // `evtkey` = string representation of the key if (evtkey === 'ArrowUp') { // do something } }) 对于键盘事件，事件上有两个属性可以用来查看按下了哪个键： key：这是按下的键的字符串表示，例如ArrowUp。 keyCode：这是数字表示，例如37，对应于ArrowLeft。 ✅ 键盘事件的操作在游戏开发之外也很有用。你能想到这种技术的其他用途吗？ 特殊键：一个注意事项 有一些特殊键会影响窗口。这意味着如果你正在监听keyup事件，并使用这些特殊键移动你的英雄，它也会执行水平滚动。因此，在构建游戏时，你可能需要关闭这种内置的浏览器行为。你需要如下代码： ```javascript let onKeyDown = function (e) { consolelog(e keyCode);\nswitch (e",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 5,
    "total_chunks": 28
  },
  {
    "id": "8b9084883f05f86154d389588269e9cb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "clearRect(0, 0, canvas width, canvas height); // redraw the game background and hero ctx fillRect(0, 0, canvas width, canvas height) ctx fillStyle = \"black\"; ctx drawImage(heroImg, hero x, heroy); ✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。 处理键盘事件 通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。 要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。 以下是一个示例： javascript windowaddEventListener('keyup', (evt) => { // `evtkey` = string representation of the key if (evtkey === 'ArrowUp') { // do something } }) 对于键盘事件，事件上有两个属性可以用来查看按下了哪个键： key：这是按下的键的字符串表示，例如ArrowUp。 keyCode：这是数字表示，例如37，对应于ArrowLeft。 ✅ 键盘事件的操作在游戏开发之外也很有用。你能想到这种技术的其他用途吗？ 特殊键：一个注意事项 有一些特殊键会影响窗口。这意味着如果你正在监听keyup事件，并使用这些特殊键移动你的英雄，它也会执行水平滚动。因此，在构建游戏时，你可能需要关闭这种内置的浏览器行为。你需要如下代码： ```javascript let onKeyDown = function (e) { consolelog(e keyCode); switch (ekeyCode) {\ncase 37:\ncase 39:\ncase 38:\ncase 40: // Arrow keys\ncase 32:\ne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 515,
    "chunk_index": 6,
    "total_chunks": 28
  },
  {
    "id": "9944f7a84391b6279e2b18c20b73336c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "0, canvas width, canvas height) ctx fillStyle = \"black\"; ctx drawImage(heroImg, hero x, heroy); ✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。 处理键盘事件 通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。 要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。 以下是一个示例： javascript windowaddEventListener('keyup', (evt) => { // `evtkey` = string representation of the key if (evtkey === 'ArrowUp') { // do something } }) 对于键盘事件，事件上有两个属性可以用来查看按下了哪个键： key：这是按下的键的字符串表示，例如ArrowUp。 keyCode：这是数字表示，例如37，对应于ArrowLeft。 ✅ 键盘事件的操作在游戏开发之外也很有用。你能想到这种技术的其他用途吗？ 特殊键：一个注意事项 有一些特殊键会影响窗口。这意味着如果你正在监听keyup事件，并使用这些特殊键移动你的英雄，它也会执行水平滚动。因此，在构建游戏时，你可能需要关闭这种内置的浏览器行为。你需要如下代码： ```javascript let onKeyDown = function (e) { consolelog(e keyCode); switch (ekeyCode) { case 37: case 39: case 38: case 40: // Arrow keys case 32: epreventDefault();\nbreak; // Space\ndefault:\nbreak; // do not block other keys\n}\n};\nwindow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 7,
    "total_chunks": 28
  },
  {
    "id": "7b038f935f779315bfd62681946d002e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "✅ 你能想到为什么每秒重绘你的英雄多次可能会导致性能问题吗？阅读关于这种模式的替代方案。 处理键盘事件 通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。 要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。 以下是一个示例： javascript windowaddEventListener('keyup', (evt) => { // `evtkey` = string representation of the key if (evtkey === 'ArrowUp') { // do something } }) 对于键盘事件，事件上有两个属性可以用来查看按下了哪个键： key：这是按下的键的字符串表示，例如ArrowUp。 keyCode：这是数字表示，例如37，对应于ArrowLeft。 ✅ 键盘事件的操作在游戏开发之外也很有用。你能想到这种技术的其他用途吗？ 特殊键：一个注意事项 有一些特殊键会影响窗口。这意味着如果你正在监听keyup事件，并使用这些特殊键移动你的英雄，它也会执行水平滚动。因此，在构建游戏时，你可能需要关闭这种内置的浏览器行为。你需要如下代码： ```javascript let onKeyDown = function (e) { consolelog(e keyCode); switch (ekeyCode) { case 37: case 39: case 38: case 40: // Arrow keys case 32: epreventDefault(); break; // Space default: break; // do not block other keys } }; windowaddEventListener('keydown', onKeyDown);\n```\n上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用e",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 518,
    "chunk_index": 8,
    "total_chunks": 28
  },
  {
    "id": "d798764622edd2d0b7925ec2f7b7e918",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "通过将特定事件附加到代码中来处理事件。键盘事件会在整个窗口中触发，而鼠标事件（如click）可以连接到点击特定元素。我们将在整个项目中使用键盘事件。 要处理事件，你需要使用窗口的addEventListener()方法，并提供两个输入参数。第一个参数是事件的名称，例如keyup。第二个参数是事件发生时应该调用的函数。 以下是一个示例： javascript windowaddEventListener('keyup', (evt) => { // `evtkey` = string representation of the key if (evtkey === 'ArrowUp') { // do something } }) 对于键盘事件，事件上有两个属性可以用来查看按下了哪个键： key：这是按下的键的字符串表示，例如ArrowUp。 keyCode：这是数字表示，例如37，对应于ArrowLeft。 ✅ 键盘事件的操作在游戏开发之外也很有用。你能想到这种技术的其他用途吗？ 特殊键：一个注意事项 有一些特殊键会影响窗口。这意味着如果你正在监听keyup事件，并使用这些特殊键移动你的英雄，它也会执行水平滚动。因此，在构建游戏时，你可能需要关闭这种内置的浏览器行为。你需要如下代码： ```javascript let onKeyDown = function (e) { consolelog(e keyCode); switch (ekeyCode) { case 37: case 39: case 38: case 40: // Arrow keys case 32: epreventDefault(); break; // Space default: break; // do not block other keys } }; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。\n游戏驱动运动\n我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例：\njavascript\nlet id = setInterval(() => {\n//move the enemy on the y axis\nenemy",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 542,
    "chunk_index": 9,
    "total_chunks": 28
  },
  {
    "id": "76b752fff528da5825aac01a77a681fa",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "(evtkey === 'ArrowUp') { // do something } }) 对于键盘事件，事件上有两个属性可以用来查看按下了哪个键： key：这是按下的键的字符串表示，例如ArrowUp。 keyCode：这是数字表示，例如37，对应于ArrowLeft。 ✅ 键盘事件的操作在游戏开发之外也很有用。你能想到这种技术的其他用途吗？ 特殊键：一个注意事项 有一些特殊键会影响窗口。这意味着如果你正在监听keyup事件，并使用这些特殊键移动你的英雄，它也会执行水平滚动。因此，在构建游戏时，你可能需要关闭这种内置的浏览器行为。你需要如下代码： ```javascript let onKeyDown = function (e) { consolelog(e keyCode); switch (ekeyCode) { case 37: case 39: case 38: case 40: // Arrow keys case 32: epreventDefault(); break; // Space default: break; // do not block other keys } }; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10;\n})\n游戏循环\n游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。\n以下是游戏循环的典型代码示例：\njavascript\nlet gameLoopId = setInterval(() =>\nfunction gameLoop() {\nctx",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 602,
    "chunk_index": 10,
    "total_chunks": 28
  },
  {
    "id": "59816b1919ea2cea14f0d545f32b7d46",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "```javascript let onKeyDown = function (e) { consolelog(e keyCode); switch (ekeyCode) { case 37: case 39: case 38: case 40: // Arrow keys case 32: epreventDefault(); break; // Space default: break; // do not block other keys } }; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height);\nctx fillStyle = \"black\";\nctx fillRect(0, 0, canvas width, canvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 11,
    "total_chunks": 28
  },
  {
    "id": "3257c48f0dee95d63aa6cfc8ae1deaf5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "39: case 38: case 40: // Arrow keys case 32: epreventDefault(); break; // Space default: break; // do not block other keys } }; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight);\ndrawHero();\ndrawEnemies();\ndrawStaticObjects();\n}, 200);\n上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。\n继续太空游戏\n你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。\n移动英雄：你将添加代码以确保可以使用箭头键移动英雄。\n移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShip",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 600,
    "chunk_index": 12,
    "total_chunks": 28
  },
  {
    "id": "42bb70868d4773561e993ca2cad9f072",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "do not block other keys } }; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng\n-| player",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 577,
    "chunk_index": 13,
    "total_chunks": 28
  },
  {
    "id": "e013dae146075ab77e868739625ae9a9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "block other keys } }; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng\n-| index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 579,
    "chunk_index": 14,
    "total_chunks": 28
  },
  {
    "id": "e3ad034459204a8c89bdd8a5e57872a0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "keys } }; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml\n-| app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 581,
    "chunk_index": 15,
    "total_chunks": 28
  },
  {
    "id": "6a181f0cbed3067f1d30aec272fbb5a8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "}; windowaddEventListener('keydown', onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml -| appjs\n-| package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 583,
    "chunk_index": 16,
    "total_chunks": 28
  },
  {
    "id": "26a0a5f2c74707d1bec88eff5d7e74a6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "onKeyDown); ``` 上述代码将确保箭头键和空格键的默认行为被关闭。关闭机制发生在调用epreventDefault()时。 游戏驱动运动 我们可以通过使用计时器（例如setTimeout()或setInterval()函数）让物体自动移动，这些计时器会在每个时间间隔更新对象的位置。以下是代码示例： javascript let id = setInterval(() => { //move the enemy on the y axis enemyy += 10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml -| appjs -| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址，现在它应该渲染英雄和所有敌人；目前还没有任何移动！\n添加代码\n为hero、enemy和game object添加专用对象，它们应该具有x和y属性。（记住关于继承或组合的部分）。\n提示：game object应该是具有x和y属性并能够将自身绘制到画布上的对象。\n提示：从添加一个新的GameObject类开始，其构造函数如下所示，然后将其绘制到画布上：\n```javascript\nclass GameObject {\nconstructor(x, y) {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 781,
    "chunk_index": 17,
    "total_chunks": 28
  },
  {
    "id": "76ac333cfa6b13e934f77a289971cb95",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "10; }) 游戏循环 游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址，现在它应该渲染英雄和所有敌人；目前还没有任何移动！ 添加代码 为hero、enemy和game object添加专用对象，它们应该具有x和y属性。（记住关于继承或组合的部分）。 提示：game object应该是具有x和y属性并能够将自身绘制到画布上的对象。 提示：从添加一个新的GameObject类开始，其构造函数如下所示，然后将其绘制到画布上： ```javascript class GameObject { constructor(x, y) { thisx = x;\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 18,
    "total_chunks": 28
  },
  {
    "id": "8c93d6c5e492174a29ee39d114b6e83a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "游戏循环是一个概念，实际上是一个以固定间隔调用的函数。它被称为游戏循环，因为所有应该显示给用户的内容都在循环中绘制。游戏循环利用游戏中的所有对象，绘制所有对象，除非某些对象不再属于游戏。例如，如果一个对象是被激光击中的敌人并爆炸，它就不再属于当前的游戏循环（你将在后续课程中了解更多）。 以下是游戏循环的典型代码示例： javascript let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址，现在它应该渲染英雄和所有敌人；目前还没有任何移动！ 添加代码 为hero、enemy和game object添加专用对象，它们应该具有x和y属性。（记住关于继承或组合的部分）。 提示：game object应该是具有x和y属性并能够将自身绘制到画布上的对象。 提示：从添加一个新的GameObject类开始，其构造函数如下所示，然后将其绘制到画布上： ```javascript class GameObject { constructor(x, y) { thisx = x; thisy = y;\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 19,
    "total_chunks": 28
  },
  {
    "id": "5ed45c11bae94f0308e0c2fba7feeadd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "let gameLoopId = setInterval(() => function gameLoop() { ctxclearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址，现在它应该渲染英雄和所有敌人；目前还没有任何移动！ 添加代码 为hero、enemy和game object添加专用对象，它们应该具有x和y属性。（记住关于继承或组合的部分）。 提示：game object应该是具有x和y属性并能够将自身绘制到画布上的对象。 提示：从添加一个新的GameObject类开始，其构造函数如下所示，然后将其绘制到画布上： ```javascript class GameObject { constructor(x, y) { thisx = x; thisy = y; thisdead = false;\nthis type = \"\";\nthis width = 0;\nthis height = 0;\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 20,
    "total_chunks": 28
  },
  {
    "id": "df41a56fcbad43c7bdaca0e6fc8cf835",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight); drawHero(); drawEnemies(); drawStaticObjects(); }, 200); 上述循环每200毫秒调用一次以重绘画布。你可以选择适合你游戏的最佳时间间隔。 继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址，现在它应该渲染英雄和所有敌人；目前还没有任何移动！ 添加代码 为hero、enemy和game object添加专用对象，它们应该具有x和y属性。（记住关于继承或组合的部分）。 提示：game object应该是具有x和y属性并能够将自身绘制到画布上的对象。 提示：从添加一个新的GameObject类开始，其构造函数如下所示，然后将其绘制到画布上： ```javascript class GameObject { constructor(x, y) { thisx = x; thisy = y; thisdead = false; this type = \"\"; this width = 0; this height = 0; thisimg = undefined;\n}\ndraw(ctx) {\nctx drawImage(this img, this x, this y, this width, this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 21,
    "total_chunks": 28
  },
  {
    "id": "847920fc6834699f0b179f1f01c96727",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "继续太空游戏 你将使用现有代码并进行扩展。可以从你在第一部分完成的代码开始，或者使用第二部分的起始代码。 移动英雄：你将添加代码以确保可以使用箭头键移动英雄。 移动敌人：你还需要添加代码以确保敌人以一定速度从上到下移动。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址，现在它应该渲染英雄和所有敌人；目前还没有任何移动！ 添加代码 为hero、enemy和game object添加专用对象，它们应该具有x和y属性。（记住关于继承或组合的部分）。 提示：game object应该是具有x和y属性并能够将自身绘制到画布上的对象。 提示：从添加一个新的GameObject类开始，其构造函数如下所示，然后将其绘制到画布上： ```javascript class GameObject { constructor(x, y) { thisx = x; thisy = y; thisdead = false; this type = \"\"; this width = 0; this height = 0; thisimg = undefined; } draw(ctx) { ctx drawImage(this img, this x, this y, this width, thisheight);\n}\n}\n```\n现在，扩展这个GameObject以创建Hero和Enemy。\n```javascript\nclass Hero extends GameObject {\nconstructor(x, y) { it needs an x, y, type, and speed\n}\n}\n```\n```javascript\nclass Enemy extends GameObject {\nconstructor(x, y) {\nsuper(x, y);\n(this width = 98), (this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 22,
    "total_chunks": 28
  },
  {
    "id": "40dc676fa8d02593061de438188bea88",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "= x; thisy = y; thisdead = false; this type = \"\"; this width = 0; this height = 0; thisimg = undefined; } draw(ctx) { ctx drawImage(this img, this x, this y, this width, thisheight); } } ``` 现在，扩展这个GameObject以创建Hero和Enemy。 ```javascript class Hero extends GameObject { constructor(x, y) { it needs an x, y, type, and speed } } ``` ```javascript class Enemy extends GameObject { constructor(x, y) { super(x, y); (this width = 98), (thisheight = 50);\nthis type = \"Enemy\";\nlet id = setInterval(() => {\nif (this y < canvas height - this height) {\nthis y += 5;\n} else {\nconsole log('Stopped at', this y)\nclearInterval(id);\n}\n}, 300)\n}\n}\n```\n添加键盘事件处理程序以处理键盘导航（移动英雄上下左右）。\n记住：这是一个笛卡尔系统，左上角是0,0。还要记得添加代码以停止默认行为。\n提示：创建你的onKeyDown函数并将其附加到窗口：\n```javascript\nlet onKeyDown = function (e) {\nconsole log(e keyCode); add the code from the lesson above to stop default behavior\n}\n};\nwindow addEventListener(\"keydown\", onKeyDown);\n```\n此时检查你的浏览器控制台，观察按键被记录。\n实现发布订阅模式，这将使你的代码在后续部分保持整洁。\n要完成最后这部分，你可以：\n在窗口上添加事件监听器：\njavascript\nwindow addEventListener(\"keyup\", (evt) => {\nif (evt key === \"ArrowUp\") {\neventEmitter emit(Messages KEY_EVENT_UP);\n} else if (evt key === \"ArrowDown\") {\neventEmitter emit(Messages KEY_EVENT_DOWN);\n} else if (evt key === \"ArrowLeft\") {\neventEmitter emit(Messages KEY_EVENT_LEFT);\n} else if (evt key === \"ArrowRight\") {\neventEmitter emit(Messages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 23,
    "total_chunks": 28
  },
  {
    "id": "26bdd212ffe620b289a5dfa2a2f8edd3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "onKeyDown = function (e) { console log(e keyCode); add the code from the lesson above to stop default behavior } }; window addEventListener(\"keydown\", onKeyDown); ``` 此时检查你的浏览器控制台，观察按键被记录。 实现发布订阅模式，这将使你的代码在后续部分保持整洁。 要完成最后这部分，你可以： 在窗口上添加事件监听器： javascript window addEventListener(\"keyup\", (evt) => { if (evt key === \"ArrowUp\") { eventEmitter emit(Messages KEY_EVENT_UP); } else if (evt key === \"ArrowDown\") { eventEmitter emit(Messages KEY_EVENT_DOWN); } else if (evt key === \"ArrowLeft\") { eventEmitter emit(Messages KEY_EVENT_LEFT); } else if (evt key === \"ArrowRight\") { eventEmitter emit(MessagesKEY_EVENT_RIGHT);\n}\n});\n创建一个EventEmitter类以发布和订阅消息：\n```javascript\nclass EventEmitter {\nconstructor() {\nthis listeners = {};\n}\non(message, listener) {\nif ( this listeners[message]) {\nthis listeners[message] = [];\n}\nthis listeners[message] push(listener);\n}\nemit(message, payload = null) {\nif (this listeners[message]) {\nthis listeners[message] forEach((l) => l(message, payload));\n}\n}\n}\n```\n添加常量并设置EventEmitter：\n```javascript\nconst Messages = {\nKEY_EVENT_UP: \"KEY_EVENT_UP\",\nKEY_EVENT_DOWN: \"KEY_EVENT_DOWN\",\nKEY_EVENT_LEFT: \"KEY_EVENT_LEFT\",\nKEY_EVENT_RIGHT: \"KEY_EVENT_RIGHT\",\n};\nlet heroImg,\nenemyImg,\nlaserImg,\ncanvas, ctx,\ngameObjects = [],\nhero,\neventEmitter = new EventEmitter();\n```\n初始化游戏\n```javascript\nfunction initGame() {\ngameObjects = [];\ncreateEnemies();\ncreateHero();\neventEmitter on(Messages KEY_EVENT_UP, () => {\nhero y -=5 ;\n})\neventEmitter on(Messages KEY_EVENT_DOWN, () => {\nhero y += 5;\n});\neventEmitter on(Messages KEY_EVENT_LEFT, () => {\nhero x -= 5;\n});\neventEmitter on(Messages KEY_EVENT_RIGHT, () => {\nhero x += 5;\n});\n}\n```\n设置游戏循环\n重构window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 24,
    "total_chunks": 28
  },
  {
    "id": "bc64395fb9d6a66399fb181f94f52950",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "KEY_EVENT_RIGHT: \"KEY_EVENT_RIGHT\", }; let heroImg, enemyImg, laserImg, canvas, ctx, gameObjects = [], hero, eventEmitter = new EventEmitter(); ``` 初始化游戏 ```javascript function initGame() { gameObjects = []; createEnemies(); createHero(); eventEmitter on(Messages KEY_EVENT_UP, () => { hero y -=5 ; }) eventEmitter on(Messages KEY_EVENT_DOWN, () => { hero y += 5; }); eventEmitter on(Messages KEY_EVENT_LEFT, () => { hero x -= 5; }); eventEmitter on(Messages KEY_EVENT_RIGHT, () => { hero x += 5; }); } ``` 设置游戏循环 重构windowonload函数以初始化游戏并以合适的间隔设置游戏循环。你还将添加一个激光束：\n```javascript\nwindow onload = async () => {\ncanvas = document getElementById(\"canvas\");\nctx = canvas getContext(\"2d\");\nheroImg = await loadTexture(\"assets/player png\");\nenemyImg = await loadTexture(\"assets/enemyShip png\");\nlaserImg = await loadTexture(\"assets/laserRed png\");\ninitGame();\nlet gameLoopId = setInterval(() => {\nctx clearRect(0, 0, canvas width, canvas height);\nctx fillStyle = \"black\";\nctx fillRect(0, 0, canvas width, canvas height);\ndrawGameObjects(ctx);\n}, 100)\n};\n```\n添加代码以使敌人以一定间隔移动\n重构createEnemies()函数以创建敌人并将它们推入新的gameObjects类：\n```javascript\nfunction createEnemies() {\nconst MONSTER_TOTAL = 5;\nconst MONSTER_WIDTH = MONSTER_TOTAL * 98;\nconst START_X = (canvas width - MONSTER_WIDTH) / 2;\nconst STOP_X = START_X + MONSTER_WIDTH;\nfor (let x = START_X; x < STOP_X; x += 98) {\nfor (let y = 0; y < 50 * 5; y += 50) {\nconst enemy = new Enemy(x, y);\nenemy img = enemyImg;\ngameObjects push(enemy);\n}\n}\n}\n```\n并添加一个createHero()函数以对英雄执行类似的过程。\njavascript\nfunction createHero() {\nhero = new Hero(\ncanvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 25,
    "total_chunks": 28
  },
  {
    "id": "d65e90310c9e3291ca333022a9bdddf1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "MONSTER_TOTAL = 5; const MONSTER_WIDTH = MONSTER_TOTAL * 98; const START_X = (canvas width - MONSTER_WIDTH) / 2; const STOP_X = START_X + MONSTER_WIDTH; for (let x = START_X; x < STOP_X; x += 98) { for (let y = 0; y < 50 * 5; y += 50) { const enemy = new Enemy(x, y); enemy img = enemyImg; gameObjects push(enemy); } } } ``` 并添加一个createHero()函数以对英雄执行类似的过程。 javascript function createHero() { hero = new Hero( canvaswidth / 2 - 45,\ncanvas height - canvas height / 4\n);\nhero img = heroImg;\ngameObjects push(hero);\n}\n最后，添加一个drawGameObjects()函数以开始绘制：\njavascript\nfunction drawGameObjects(ctx) {\ngameObjects forEach(go => go",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 205,
    "chunk_index": 26,
    "total_chunks": 28
  },
  {
    "id": "c6c3768dfd8974dbdef3c3860e001907",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第三部分：添加运动",
    "content": "START_X; x < STOP_X; x += 98) { for (let y = 0; y < 50 * 5; y += 50) { const enemy = new Enemy(x, y); enemy img = enemyImg; gameObjects push(enemy); } } } ``` 并添加一个createHero()函数以对英雄执行类似的过程。 javascript function createHero() { hero = new Hero( canvaswidth / 2 - 45, canvas height - canvas height / 4 ); hero img = heroImg; gameObjects push(hero); } 最后，添加一个drawGameObjects()函数以开始绘制： javascript function drawGameObjects(ctx) { gameObjects forEach(go => godraw(ctx));\n}\n你的敌人应该开始向你的英雄飞船推进！\n🚀 挑战\n如你所见，当你开始添加函数、变量和类时，你的代码可能会变成“意大利面条代码”。你如何更好地组织代码，使其更易读？即使代码仍然在一个文件中，也可以画出一个系统来组织代码。\n课后测验\n课后测验\n复习与自学\n虽然我们在没有使用框架的情况下编写游戏，但有许多基于JavaScript的画布框架可用于游戏开发。花些时间阅读相关内容。\n作业\n为你的代码添加注释\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13443,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\3-moving-elements-around\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 27,
    "total_chunks": 28
  },
  {
    "id": "96e46f8ca66a6c49ff3e1dd25832e70b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\assignment.md",
    "source_type": "git_repo",
    "title": "创建一个示例游戏",
    "content": "创建一个示例游戏\n说明\n尝试制作一个小型游戏，练习不同的结束条件。可以设置不同的条件，比如达到一定的分数、英雄失去所有生命值或所有怪物被击败。制作一个简单的游戏，比如基于控制台的冒险游戏。以下游戏流程可以作为灵感：\nHero> Strikes with broadsword - orc takes 3p damage\nOrc> Hits with club - hero takes 2p damage\nHero> Kicks - orc takes 1p damage\nGame> Orc is defeated - Hero collects 2 coins\nGame> ****No more monsters, you have conquered the evil fortress****\n评分标准\n| 标准     | 卓越表现               | 合格表现                   | 需要改进                  |\n| -------- | ---------------------- | -------------------------- | -------------------------- |\n|          | 完整的游戏呈现         | 部分游戏呈现               | 部分游戏存在漏洞           |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1600,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 400,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "accc08fe1962c365c87dec34318af990",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctx",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 0,
    "total_chunks": 22
  },
  {
    "id": "5b633a88624acb988d17a7947f154db3",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctxfillText(\"show this on the screen\", 0, 0);\n✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！\n生命值，作为一种游戏概念\n在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。\n要实现的功能\n让我们为你的游戏添加以下内容：\n游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。\n生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShip",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 598,
    "chunk_index": 1,
    "total_chunks": 22
  },
  {
    "id": "4da78f5450201f11475edba2ca3f82f0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctxfillText(\"show this on the screen\", 0, 0);\n✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！\n生命值，作为一种游戏概念\n在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。\n要实现的功能\n让我们为你的游戏添加以下内容：\n游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。\n生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| player",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 2,
    "total_chunks": 22
  },
  {
    "id": "3d430fdaa24423070565826788116b40",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctxfillText(\"show this on the screen\", 0, 0);\n✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！\n生命值，作为一种游戏概念\n在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。\n要实现的功能\n让我们为你的游戏添加以下内容：\n游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。\n生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 3,
    "total_chunks": 22
  },
  {
    "id": "4ce17713982c4fc21184ea61ce4387f2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctxfillText(\"show this on the screen\", 0, 0);\n✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！\n生命值，作为一种游戏概念\n在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。\n要实现的功能\n让我们为你的游戏添加以下内容：\n游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。\n生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 4,
    "total_chunks": 22
  },
  {
    "id": "69ba58b967b4c473f7cd9bfb8c226487",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctxfillText(\"show this on the screen\", 0, 0);\n✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！\n生命值，作为一种游戏概念\n在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。\n要实现的功能\n让我们为你的游戏添加以下内容：\n游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。\n生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| indexhtml\n-| app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 5,
    "total_chunks": 22
  },
  {
    "id": "e4b553cdb2f91eb0bd17a23daa076459",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctxfillText(\"show this on the screen\", 0, 0);\n✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！\n生命值，作为一种游戏概念\n在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。\n要实现的功能\n让我们为你的游戏添加以下内容：\n游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。\n生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| indexhtml\n-| appjs\n-| package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 6,
    "total_chunks": 22
  },
  {
    "id": "3ffdac1105fd5907d239a94c20b3ce65",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "构建太空游戏第5部分：得分和生命值\n课前测验\n课前测验\n在本课中，你将学习如何为游戏添加得分功能以及计算生命值。\n在屏幕上绘制文本\n为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。\njavascript\nctx font = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"right\";\nctxfillText(\"show this on the screen\", 0, 0);\n✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！\n生命值，作为一种游戏概念\n在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。\n要实现的功能\n让我们为你的游戏添加以下内容：\n游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。\n生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。\n添加代码\n复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 life",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 775,
    "chunk_index": 7,
    "total_chunks": 22
  },
  {
    "id": "6e3b0a40aa5e2398c5b5f74df9c9fce2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "课前测验 在本课中，你将学习如何为游戏添加得分功能以及计算生命值。 在屏幕上绘制文本 为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。 javascript ctx font = \"30px Arial\"; ctx fillStyle = \"red\"; ctx textAlign = \"right\"; ctxfillText(\"show this on the screen\", 0, 0); ✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！ 生命值，作为一种游戏概念 在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。 要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 746,
    "chunk_index": 8,
    "total_chunks": 22
  },
  {
    "id": "cd3f02bd38eb9ecef09ca8275dce14ba",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "在屏幕上绘制文本 为了能够在屏幕上显示游戏得分，你需要知道如何在屏幕上放置文本。答案是使用 canvas 对象的 fillText() 方法。你还可以控制其他方面，比如使用什么字体、文本的颜色，甚至是对齐方式（左对齐、右对齐、居中）。以下是一些在屏幕上绘制文本的代码。 javascript ctx font = \"30px Arial\"; ctx fillStyle = \"red\"; ctx textAlign = \"right\"; ctxfillText(\"show this on the screen\", 0, 0); ✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！ 生命值，作为一种游戏概念 在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。 要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg：\njavascript\nlifeImg = await loadTexture(\"assets/life",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 732,
    "chunk_index": 9,
    "total_chunks": 22
  },
  {
    "id": "78145358427aa049c3cb9d5339dec45e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "ctx font = \"30px Arial\"; ctx fillStyle = \"red\"; ctx textAlign = \"right\"; ctxfillText(\"show this on the screen\", 0, 0); ✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！ 生命值，作为一种游戏概念 在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。 要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\");\n将 lifeImg 添加到资源列表中：\njavascript\nlet heroImg,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 10,
    "total_chunks": 22
  },
  {
    "id": "7b48955413b74576475ab775b93680fd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "fillStyle = \"red\"; ctx textAlign = \"right\"; ctxfillText(\"show this on the screen\", 0, 0); ✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！ 生命值，作为一种游戏概念 在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。 要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 11,
    "total_chunks": 22
  },
  {
    "id": "0a1c20ab6247c33834c5262dc86ba593",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "fillStyle = \"red\"; ctx textAlign = \"right\"; ctxfillText(\"show this on the screen\", 0, 0); ✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！ 生命值，作为一种游戏概念 在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。 要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,eventEmitter = new EventEmitter();\n添加变量。添加代码表示你的总得分（初始为0）和剩余生命值（初始为3），并在屏幕上显示这些分数。\n扩展 updateGameObjects() 函数。扩展 updateGameObjects() 函数以处理敌人碰撞：\njavascript\nenemies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 693,
    "chunk_index": 12,
    "total_chunks": 22
  },
  {
    "id": "d54279cf1a834034e93b5ac041f77ddb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "screen\", 0, 0); ✅ 阅读更多关于如何在 canvas 上添加文本的内容，并随意让你的文本看起来更有趣！ 生命值，作为一种游戏概念 在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。 要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,eventEmitter = new EventEmitter(); 添加变量。添加代码表示你的总得分（初始为0）和剩余生命值（初始为3），并在屏幕上显示这些分数。 扩展 updateGameObjects() 函数。扩展 updateGameObjects() 函数以处理敌人碰撞： javascript enemiesforEach(enemy => {\nconst heroRect = hero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 13,
    "total_chunks": 22
  },
  {
    "id": "5e4b7ae7b816bcc68620faaab388de43",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "上添加文本的内容，并随意让你的文本看起来更有趣！ 生命值，作为一种游戏概念 在游戏中，生命值的概念其实只是一个数字。在太空游戏的背景下，通常会分配一组生命值，当你的飞船受到伤害时，生命值会逐个减少。如果能用图形化的方式展示生命值，比如小飞船或心形图标，而不是简单的数字，那会更好。 要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,eventEmitter = new EventEmitter(); 添加变量。添加代码表示你的总得分（初始为0）和剩余生命值（初始为3），并在屏幕上显示这些分数。 扩展 updateGameObjects() 函数。扩展 updateGameObjects() 函数以处理敌人碰撞： javascript enemiesforEach(enemy => { const heroRect = herorectFromGameObject();\nif (intersectRect(heroRect, enemy",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 14,
    "total_chunks": 22
  },
  {
    "id": "e5de18e589fc81befe7525036ed4526b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "要实现的功能 让我们为你的游戏添加以下内容： 游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,eventEmitter = new EventEmitter(); 添加变量。添加代码表示你的总得分（初始为0）和剩余生命值（初始为3），并在屏幕上显示这些分数。 扩展 updateGameObjects() 函数。扩展 updateGameObjects() 函数以处理敌人碰撞： javascript enemiesforEach(enemy => { const heroRect = herorectFromGameObject(); if (intersectRect(heroRect, enemyrectFromGameObject())) {\neventEmitter",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 524,
    "chunk_index": 15,
    "total_chunks": 22
  },
  {
    "id": "ae267789154f85c09448f5e7b96319f6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,eventEmitter = new EventEmitter(); 添加变量。添加代码表示你的总得分（初始为0）和剩余生命值（初始为3），并在屏幕上显示这些分数。 扩展 updateGameObjects() 函数。扩展 updateGameObjects() 函数以处理敌人碰撞： javascript enemiesforEach(enemy => { const heroRect = herorectFromGameObject(); if (intersectRect(heroRect, enemyrectFromGameObject())) { eventEmitteremit(Messages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 16,
    "total_chunks": 22
  },
  {
    "id": "2775528a5d6a653b1ab9962b5c38e749",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "游戏得分：每摧毁一艘敌方飞船，英雄应该获得一些分数，我们建议每艘飞船奖励100分。游戏得分应显示在屏幕左下角。 生命值：你的飞船有三条生命。每当一艘敌方飞船与你碰撞时，你会失去一条生命。生命值应显示在屏幕右下角，并由以下图形表示：。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,eventEmitter = new EventEmitter(); 添加变量。添加代码表示你的总得分（初始为0）和剩余生命值（初始为3），并在屏幕上显示这些分数。 扩展 updateGameObjects() 函数。扩展 updateGameObjects() 函数以处理敌人碰撞： javascript enemiesforEach(enemy => { const heroRect = herorectFromGameObject(); if (intersectRect(heroRect, enemyrectFromGameObject())) { eventEmitteremit(MessagesCOLLISION_ENEMY_HERO, { enemy });\n}\n})\n添加生命值和得分。\n初始化变量。在 Hero 类中的 this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 538,
    "chunk_index": 17,
    "total_chunks": 22
  },
  {
    "id": "f87a8abd5b9d05dfef5b83e9a1660153",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "enemyShippng -| playerpng -| laserRedpng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，此时应该会渲染出英雄飞船和所有敌人飞船，并且当你按下左右箭头时，英雄飞船会移动并可以击落敌人。 添加代码 复制所需资源。将 solution/assets/ 文件夹中的资源复制到 your-work 文件夹中；你需要添加一个 lifepng 资源。在 windowonload 函数中添加 lifeImg： javascript lifeImg = await loadTexture(\"assets/lifepng\"); 将 lifeImg 添加到资源列表中： javascript let heroImg,lifeImg,eventEmitter = new EventEmitter(); 添加变量。添加代码表示你的总得分（初始为0）和剩余生命值（初始为3），并在屏幕上显示这些分数。 扩展 updateGameObjects() 函数。扩展 updateGameObjects() 函数以处理敌人碰撞： javascript enemiesforEach(enemy => { const heroRect = herorectFromGameObject(); if (intersectRect(heroRect, enemyrectFromGameObject())) { eventEmitteremit(MessagesCOLLISION_ENEMY_HERO, { enemy }); } }) 添加生命值和得分。 初始化变量。在 Hero 类中的 thiscooldown = 0 下，设置生命值和得分：\n```javascript\nthis life = 3;\nthis points = 0;\n```\n在屏幕上绘制变量。将这些值绘制到屏幕上：\n```javascript\nfunction drawLife() {\n// TODO, 35, 27\nconst START_POS = canvas width - 180;\nfor(let i=0; i < hero life; i++ ) {\nctx drawImage(\nlifeImg,\nSTART_POS + (45 * (i+1) ),\ncanvas height - 37);\n}\n}\nfunction drawPoints() {\nctx",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 18,
    "total_chunks": 22
  },
  {
    "id": "5de623b044e66ca2a901b3e07789d510",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "const heroRect = herorectFromGameObject(); if (intersectRect(heroRect, enemyrectFromGameObject())) { eventEmitteremit(MessagesCOLLISION_ENEMY_HERO, { enemy }); } }) 添加生命值和得分。 初始化变量。在 Hero 类中的 thiscooldown = 0 下，设置生命值和得分： ```javascript this life = 3; this points = 0; ``` 在屏幕上绘制变量。将这些值绘制到屏幕上： ```javascript function drawLife() { // TODO, 35, 27 const START_POS = canvas width - 180; for(let i=0; i < hero life; i++ ) { ctx drawImage( lifeImg, START_POS + (45 * (i+1) ), canvas height - 37); } } function drawPoints() { ctxfont = \"30px Arial\";\nctx fillStyle = \"red\";\nctx textAlign = \"left\";\ndrawText(\"Points: \" + hero points, 10, canvas height-20);\n}\nfunction drawText(message, x, y) {\nctx fillText(message, x, y);\n}\n```\n将方法添加到游戏循环中。确保在 window onload 函数中将这些函数添加到 updateGameObjects() 下：\n```javascript\ndrawPoints();\ndrawLife();\n```\n实现游戏规则。实现以下游戏规则：\n每次英雄与敌人碰撞，减少一条生命值。\n扩展 Hero 类以实现生命值扣减：\n```javascript\ndecrementLife() {\nthis life--;\nif (this life === 0) {\nthis dead = true;\n}\n}\n```\n每次激光击中敌人，游戏得分增加100分。\n扩展 Hero 类以实现得分增加：\n```javascript\nincrementPoints() {\nthis points += 100;\n}\n```\n将这些函数添加到碰撞事件触发器中：\n```javascript\neventEmitter on(Messages COLLISION_ENEMY_LASER, (_, { first, second }) => {\nfirst dead = true;\nsecond dead = true;\nhero incrementPoints();\n})\neventEmitter on(Messages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 19,
    "total_chunks": 22
  },
  {
    "id": "fd8bf955c2dc60a016977aa1cebc4250",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "fillText(message, x, y); } ``` 将方法添加到游戏循环中。确保在 window onload 函数中将这些函数添加到 updateGameObjects() 下： ```javascript drawPoints(); drawLife(); ``` 实现游戏规则。实现以下游戏规则： 每次英雄与敌人碰撞，减少一条生命值。 扩展 Hero 类以实现生命值扣减： ```javascript decrementLife() { this life--; if (this life === 0) { this dead = true; } } ``` 每次激光击中敌人，游戏得分增加100分。 扩展 Hero 类以实现得分增加： ```javascript incrementPoints() { this points += 100; } ``` 将这些函数添加到碰撞事件触发器中： ```javascript eventEmitter on(Messages COLLISION_ENEMY_LASER, (_, { first, second }) => { first dead = true; second dead = true; hero incrementPoints(); }) eventEmitter on(MessagesCOLLISION_ENEMY_HERO, (_, { enemy }) => {\nenemy dead = true;\nhero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 20,
    "total_chunks": 22
  },
  {
    "id": "f1442e874ea68bcfed05c939e0766610",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第5部分：得分和生命值",
    "content": "```javascript drawPoints(); drawLife(); ``` 实现游戏规则。实现以下游戏规则： 每次英雄与敌人碰撞，减少一条生命值。 扩展 Hero 类以实现生命值扣减： ```javascript decrementLife() { this life--; if (this life === 0) { this dead = true; } } ``` 每次激光击中敌人，游戏得分增加100分。 扩展 Hero 类以实现得分增加： ```javascript incrementPoints() { this points += 100; } ``` 将这些函数添加到碰撞事件触发器中： ```javascript eventEmitter on(Messages COLLISION_ENEMY_LASER, (_, { first, second }) => { first dead = true; second dead = true; hero incrementPoints(); }) eventEmitter on(MessagesCOLLISION_ENEMY_HERO, (_, { enemy }) => { enemy dead = true; herodecrementLife();\n});\n```\n✅ 进行一些研究，了解其他使用 JavaScript/Canvas 创建的游戏。它们有哪些共同特点？\n完成这些工作后，你应该能在右下角看到小型“生命值”飞船，在左下角看到得分，并且当你与敌人碰撞时生命值会减少，当你击中敌人时得分会增加。干得好！你的游戏快完成了。\n🚀 挑战\n你的代码已经接近完成。你能设想接下来的步骤吗？\n课后测验\n课后测验\n复习与自学\n研究一些方法，了解如何增加和减少游戏得分和生命值。有一些有趣的游戏引擎，比如 PlayFab。使用这些引擎如何提升你的游戏？\n作业\n构建一个计分游戏\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7175,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 21,
    "total_chunks": 22
  },
  {
    "id": "84d1a596efa1f50e22e1ab6e1fa9dfe0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\solution\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 698,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 154,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0c7ac995c8bb4e5e23199e4a7a4ef04e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\solution\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。虽然我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 706,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 152,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "586b2f08d6d10307ef052caf2b5ef3f4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\your-work\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 707,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\your-work\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 152,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0ff233a56c51d09ee599da45b8ea034f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\solution\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 708,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 153,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bfeeda007dad64f2dcfcb8f147be24a0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\your-work\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而导致的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 712,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\5-keeping-score\\your-work\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 154,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "217c8b36c56e21b8df5b0cd212cab85f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\solution\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 714,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 153,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c5e37da4619b26e039ce2c1864747252",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\your-work\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 715,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\your-work\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 153,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "78a19113ba3f0425647252968858466f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\assignment.md",
    "source_type": "git_repo",
    "title": "重新设计你的扩展",
    "content": "重新设计你的扩展\n指南\n这个扩展的代码库已经包含了样式，但你不必使用它们；通过编辑其 CSS 文件，重新设计样式，让你的扩展独具特色。\n评分标准\n| 标准     | 优秀                                           | 合格                  | 需要改进          |\n| -------- | -------------------------------------------- | --------------------- | ----------------- |\n|          | 提交的代码包含功能完善的新样式                 | 样式不完整            | 样式存在问题       |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1254,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6da6e3063ba20ea5af7b056505b52d1a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 547,
    "chunk_index": 0,
    "total_chunks": 44
  },
  {
    "id": "a1e3983a2426a70e05282e12735d766e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 552,
    "chunk_index": 1,
    "total_chunks": 44
  },
  {
    "id": "d79081830a63016667b7b4c07b8dcaa5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 557,
    "chunk_index": 2,
    "total_chunks": 44
  },
  {
    "id": "029237001f90fc0bdd990fee0b6bbe2b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 560,
    "chunk_index": 3,
    "total_chunks": 44
  },
  {
    "id": "4ac30e617c74fb112bbb12ae78f7ca4f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 565,
    "chunk_index": 4,
    "total_chunks": 44
  },
  {
    "id": "813d823efd18eff1256dc002c981f953",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 568,
    "chunk_index": 5,
    "total_chunks": 44
  },
  {
    "id": "1eae40f7dd88f29a985465ef27e44d5e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 598,
    "chunk_index": 6,
    "total_chunks": 44
  },
  {
    "id": "44f336df7e0285ff465ab6d8382af6fa",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 600,
    "chunk_index": 7,
    "total_chunks": 44
  },
  {
    "id": "305462138e92e1f64fafa52c2c5283e7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 8,
    "total_chunks": 44
  },
  {
    "id": "59f4e180f3856a23a2065f9c142ab059",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 608,
    "chunk_index": 9,
    "total_chunks": 44
  },
  {
    "id": "b22dca3f885f0a203340ab88c535d36a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2right < r1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 10,
    "total_chunks": 44
  },
  {
    "id": "c7617b6f1411583087962fb5cb33fe40",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2right < r1left ||\nr2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 11,
    "total_chunks": 44
  },
  {
    "id": "73b663c50fb12606766b3d2f2aa2c9a6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2right < r1left ||\nr2top > r1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 12,
    "total_chunks": 44
  },
  {
    "id": "6daf05f76e163e378081a40bec4b8165",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2right < r1left ||\nr2top > r1bottom ||\nr2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 13,
    "total_chunks": 44
  },
  {
    "id": "48581af09abc7dfda5f50ba88ff50bae",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2right < r1left ||\nr2top > r1bottom ||\nr2bottom < r1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 14,
    "total_chunks": 44
  },
  {
    "id": "e890144afa584b76c3a113ccf02630cb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2right < r1left ||\nr2top > r1bottom ||\nr2bottom < r1top);\n}\n如何销毁对象\n在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如：\njavascript\n// collision happened\nenemy",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 715,
    "chunk_index": 15,
    "total_chunks": 44
  },
  {
    "id": "51110734bda6069b969c3fee41a36bcf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "构建太空游戏第四部分：添加激光和检测碰撞\n课前测验\n课前测验\n在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容：\n激光：从英雄的飞船发射，垂直向上移动。\n碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。\n✅ 进行一些研究，了解第一款计算机游戏的功能是什么？\n让我们一起成为英雄吧！\n碰撞检测\n如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。\n如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容：\n获取游戏对象的矩形表示方法，例如：\njavascript\nrectFromGameObject() {\nreturn {\ntop: thisy,\nleft: thisx,\nbottom: thisy + thisheight,\nright: thisx + thiswidth\n}\n}\n比较函数，这个函数可以像这样：\njavascript\nfunction intersectRect(r1, r2) {\nreturn(r2left > r1right ||\nr2right < r1left ||\nr2top > r1bottom ||\nr2bottom < r1top);\n}\n如何销毁对象\n在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如：\njavascript\n// collision happened\nenemydead = true\n然后在重新绘制屏幕之前处理死亡对象，例如：\njavascript\ngameObjects = gameObject",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 747,
    "chunk_index": 16,
    "total_chunks": 44
  },
  {
    "id": "cda41fe61f879fb6213f7b0a3a864a0d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "在本课中，你将学习如何使用 JavaScript 发射激光！我们将为游戏添加以下两项内容： 激光：从英雄的飞船发射，垂直向上移动。 碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。 ✅ 进行一些研究，了解第一款计算机游戏的功能是什么？ 让我们一起成为英雄吧！ 碰撞检测 如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。 如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容： 获取游戏对象的矩形表示方法，例如： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth } } 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 706,
    "chunk_index": 17,
    "total_chunks": 44
  },
  {
    "id": "a158c826c9b0f5a03ff4d7239dd0522f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "JavaScript 发射激光！我们将为游戏添加以下两项内容： 激光：从英雄的飞船发射，垂直向上移动。 碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。 ✅ 进行一些研究，了解第一款计算机游戏的功能是什么？ 让我们一起成为英雄吧！ 碰撞检测 如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。 如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容： 获取游戏对象的矩形表示方法，例如： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth } } 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>go",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 693,
    "chunk_index": 18,
    "total_chunks": 44
  },
  {
    "id": "d0cdd00c79d866e4ad0db90454eaaa79",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "JavaScript 发射激光！我们将为游戏添加以下两项内容： 激光：从英雄的飞船发射，垂直向上移动。 碰撞检测：作为实现射击功能的一部分，我们将添加一些有趣的游戏规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 简而言之，你——英雄——需要在敌人到达屏幕底部之前用激光击中所有敌人。 ✅ 进行一些研究，了解第一款计算机游戏的功能是什么？ 让我们一起成为英雄吧！ 碰撞检测 如何进行碰撞检测？我们需要将游戏中的对象视为移动的矩形。你可能会问为什么？因为用于绘制游戏对象的图像是一个矩形：它具有 x、y、width 和 height 属性。 如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容： 获取游戏对象的矩形表示方法，例如： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth } } 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead);\n如何发射激光\n发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤：\n创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。\n绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。\n创建一个看起来像激光的游戏对象：当按键被按下时。\n激光的冷却时间\n激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现：\n```javascript\nclass Cooldown {\nconstructor(time) {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 987,
    "chunk_index": 19,
    "total_chunks": 44
  },
  {
    "id": "2f1c77a75efa0ecb40069df414e0f106",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "x、y、width 和 height 属性。 如果两个矩形（例如英雄和敌人）相交，就发生了碰撞。碰撞后应该发生什么取决于游戏规则。为了实现碰撞检测，你需要以下内容： 获取游戏对象的矩形表示方法，例如： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth } } 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false;\nsetTimeout(() => {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 20,
    "total_chunks": 44
  },
  {
    "id": "a71a3ab9eaa18f0073ec490885ce4b29",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth } } 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true;\n}, time)\n}\n}\nclass Weapon {\nconstructor {\n}\nfire() {\nif (",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 532,
    "chunk_index": 21,
    "total_chunks": 44
  },
  {
    "id": "65667db1e467e0d97ffe9571d4c7def0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "thiswidth } } 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 22,
    "total_chunks": 44
  },
  {
    "id": "6c5978b8308f13b5d93965fde4ae14db",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "thiswidth } } 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 23,
    "total_chunks": 44
  },
  {
    "id": "287080de7cda01ce9cc9c671a8bd4491",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "} 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || thiscooldown",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 24,
    "total_chunks": 44
  },
  {
    "id": "55f543f06d79b9b2dc46bc291a11c66d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "} 比较函数，这个函数可以像这样： javascript function intersectRect(r1, r2) { return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || thiscooldowncool) {\n// produce a laser\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 25,
    "total_chunks": 44
  },
  {
    "id": "955714e6792ef9bccdee493b3adbbcd8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "{ return(r2left > r1right || r2right < r1left || r2top > r1bottom || r2bottom < r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || thiscooldowncool) { // produce a laser thiscooldown = new Cooldown(500);\n} else {\n// do nothing - it hasn't cooled down yet",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 26,
    "total_chunks": 44
  },
  {
    "id": "b7657cdce7e6dfd8d350a2526e9a2fca",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "r1top); } 如何销毁对象 在游戏中销毁对象需要让游戏知道在触发某个间隔的游戏循环中不再绘制该对象。一种方法是当某些事件发生时将游戏对象标记为死亡，例如： javascript // collision happened enemydead = true 然后在重新绘制屏幕之前处理死亡对象，例如： javascript gameObjects = gameObjectfilter(go =>godead); 如何发射激光 发射激光意味着响应按键事件并创建一个向某个方向移动的对象。因此，我们需要完成以下步骤： 创建激光对象：从英雄飞船的顶部发射，创建后开始向屏幕顶部移动。 绑定按键事件代码：选择键盘上的某个按键（例如空格键）来代表玩家发射激光。 创建一个看起来像激光的游戏对象：当按键被按下时。 激光的冷却时间 激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || thiscooldowncool) { // produce a laser thiscooldown = new Cooldown(500); } else { // do nothing - it hasn't cooled down yet}\n}\n}\n```\n✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。\n要构建的内容\n你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。\n提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。\n添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则：\n激光击中敌人：敌人被激光击中后会死亡。\n激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。\n敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。\n敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。\n推荐步骤\n找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShip",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 813,
    "chunk_index": 27,
    "total_chunks": 44
  },
  {
    "id": "056a9462eed594087d54da2a556dfe73",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "激光需要在每次按键时发射，例如按下空格键。为了防止游戏在短时间内生成过多激光，我们需要解决这个问题。解决方法是实现所谓的冷却时间，即一个计时器，确保激光只能在一定时间间隔内发射一次。可以这样实现： ```javascript class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || thiscooldowncool) { // produce a laser thiscooldown = new Cooldown(500); } else { // do nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng\n-| player",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 525,
    "chunk_index": 28,
    "total_chunks": 44
  },
  {
    "id": "ca6eb2bcb881960c64254ec1594b44a1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "class Cooldown { constructor(time) { thiscool = false; setTimeout(() => { thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || thiscooldowncool) { // produce a laser thiscooldown = new Cooldown(500); } else { // do nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng\n-| laserRed png\n-| index html\n-| app js\n-| package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 29,
    "total_chunks": 44
  },
  {
    "id": "ea54345b44218c342887c79330280dad",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "thiscool = true; }, time) } } class Weapon { constructor { } fire() { if (thiscooldown || thiscooldowncool) { // produce a laser thiscooldown = new Cooldown(500); } else { // do nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。\n添加代码\n设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它：\njavascript\nrectFromGameObject() {\nreturn {\ntop: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 560,
    "chunk_index": 30,
    "total_chunks": 44
  },
  {
    "id": "dd96557c6b46c8c1f22b7de0a9188df1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "= new Cooldown(500); } else { // do nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy,\nleft: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 525,
    "chunk_index": 31,
    "total_chunks": 44
  },
  {
    "id": "9a4819e69089ee61c158a2ad5dbd617d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "Cooldown(500); } else { // do nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx,\nbottom: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 527,
    "chunk_index": 32,
    "total_chunks": 44
  },
  {
    "id": "ff01a58fd46b2ccfda849955e938e29c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "else { // do nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 525,
    "chunk_index": 33,
    "total_chunks": 44
  },
  {
    "id": "e4d32e5eda2bb279d1e8151bdd638441",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "// do nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight,\nright: this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 528,
    "chunk_index": 34,
    "total_chunks": 44
  },
  {
    "id": "12e8fcec9aaf941e891554ec3159ffcb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "nothing - it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 529,
    "chunk_index": 35,
    "total_chunks": 44
  },
  {
    "id": "93770df61b97ac1e1dcd1c879795952e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "it hasn't cooled down yet} } } ``` ✅ 回顾太空游戏系列第一课，了解有关冷却时间的内容。 要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth,\n};\n}\n添加检测碰撞的代码 这是一个新函数，用于测试两个矩形是否相交：\njavascript\nfunction intersectRect(r1, r2) {\nreturn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 574,
    "chunk_index": 36,
    "total_chunks": 44
  },
  {
    "id": "11ac56bd9857675b9ebbe0f33a2db21f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "要构建的内容 你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth, }; } 添加检测碰撞的代码 这是一个新函数，用于测试两个矩形是否相交： javascript function intersectRect(r1, r2) { return(\nr2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 533,
    "chunk_index": 37,
    "total_chunks": 44
  },
  {
    "id": "9df26cd06785523117cae07bf86c4e7a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "你将使用上一课中清理和重构过的代码进行扩展。可以从第二部分的代码开始，也可以使用 第三部分的起始代码。 提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth, }; } 添加检测碰撞的代码 这是一个新函数，用于测试两个矩形是否相交： javascript function intersectRect(r1, r2) { return( r2left > r1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 531,
    "chunk_index": 38,
    "total_chunks": 44
  },
  {
    "id": "ecb38d34ba87e66704f0cd1811f1da7e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "提示：你将使用的激光已经在你的资源文件夹中，并且代码中已引用。 添加碰撞检测：当激光与某物体碰撞时，需遵循以下规则： 激光击中敌人：敌人被激光击中后会死亡。 激光击中屏幕顶部：激光击中屏幕顶部后会被销毁。 敌人与英雄碰撞：敌人与英雄相撞后双方都会被销毁。 敌人击中屏幕底部：敌人击中屏幕底部后，敌人和英雄都会被销毁。 推荐步骤 找到在 your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth, }; } 添加检测碰撞的代码 这是一个新函数，用于测试两个矩形是否相交： javascript function intersectRect(r1, r2) { return( r2left > r1right ||\nr2 right < r1 left ||\nr2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 39,
    "total_chunks": 44
  },
  {
    "id": "4936878d28714f1bc37f622fd4ce141f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "your-work 子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRed png -| index html -| app js -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址 http://localhost:5000 上启动一个 HTTP 服务器。打开浏览器并输入该地址，目前它应该渲染英雄和所有敌人，但还没有任何移动。 添加代码 设置游戏对象的矩形表示以处理碰撞 以下代码允许你获取 GameObject 的矩形表示。编辑你的 GameObject 类以扩展它： javascript rectFromGameObject() { return { top: thisy, left: thisx, bottom: thisy + thisheight, right: thisx + thiswidth, }; } 添加检测碰撞的代码 这是一个新函数，用于测试两个矩形是否相交： javascript function intersectRect(r1, r2) { return( r2left > r1right || r2 right < r1 left || r2top > r1 bottom ||\nr2 bottom < r1 top\n);\n}\n添加激光发射功能\n添加按键事件消息。按下空格键时应在英雄飞船上方创建一个激光。为 Messages 对象添加三个常量：\njavascript\nKEY_EVENT_SPACE: \"KEY_EVENT_SPACE\",\nCOLLISION_ENEMY_LASER: \"COLLISION_ENEMY_LASER\",\nCOLLISION_ENEMY_HERO: \"COLLISION_ENEMY_HERO\",\n处理空格键。编辑 window addEventListener 的 keyup 函数以处理空格键：\njavascript\n} else if(evt keyCode === 32) {\neventEmitter emit(Messages KEY_EVENT_SPACE);\n}\n添加监听器。编辑 initGame() 函数以确保按下空格键时英雄可以发射激光：\njavascript\neventEmitter on(Messages KEY_EVENT_SPACE, () => {\nif (hero canFire()) {\nhero fire();\n}\n并添加一个新的 eventEmitter",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 40,
    "total_chunks": 44
  },
  {
    "id": "1c6fdcf9a7f9518d897d5719b4273be8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "javascript function intersectRect(r1, r2) { return( r2left > r1right || r2 right < r1 left || r2top > r1 bottom || r2 bottom < r1 top ); } 添加激光发射功能 添加按键事件消息。按下空格键时应在英雄飞船上方创建一个激光。为 Messages 对象添加三个常量： javascript KEY_EVENT_SPACE: \"KEY_EVENT_SPACE\", COLLISION_ENEMY_LASER: \"COLLISION_ENEMY_LASER\", COLLISION_ENEMY_HERO: \"COLLISION_ENEMY_HERO\", 处理空格键。编辑 window addEventListener 的 keyup 函数以处理空格键： javascript } else if(evt keyCode === 32) { eventEmitter emit(Messages KEY_EVENT_SPACE); } 添加监听器。编辑 initGame() 函数以确保按下空格键时英雄可以发射激光： javascript eventEmitter on(Messages KEY_EVENT_SPACE, () => { if (hero canFire()) { hero fire(); } 并添加一个新的 eventEmitteron() 函数以确保当敌人与激光碰撞时的行为：\n```javascript\neventEmitter on(Messages COLLISION_ENEMY_LASER, (_, { first, second }) => {\nfirst dead = true;\nsecond dead = true;\n})\n```\n移动对象，确保激光逐渐移动到屏幕顶部。你将创建一个新的 Laser 类，继承 GameObject，如之前所做：\njavascript\nclass Laser extends GameObject {\nconstructor(x, y) {\nsuper(x,y);\n(this width = 9), (this height = 33);\nthis type = 'Laser';\nthis img = laserImg;\nlet id = setInterval(() => {\nif (this y > 0) {\nthis y -= 15;\n} else {\nthis dead = true;\nclearInterval(id);\n}\n}, 100)\n}\n}\n处理碰撞，为激光实现碰撞规则。添加一个 updateGameObjects() 函数，用于测试碰撞对象是否发生击中：\n```javascript\nfunction updateGameObjects() {\nconst enemies = gameObjects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 41,
    "total_chunks": 44
  },
  {
    "id": "ae9b690f408a28bcfb4d1bddfdbc1e6f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "second dead = true; }) ``` 移动对象，确保激光逐渐移动到屏幕顶部。你将创建一个新的 Laser 类，继承 GameObject，如之前所做： javascript class Laser extends GameObject { constructor(x, y) { super(x,y); (this width = 9), (this height = 33); this type = 'Laser'; this img = laserImg; let id = setInterval(() => { if (this y > 0) { this y -= 15; } else { this dead = true; clearInterval(id); } }, 100) } } 处理碰撞，为激光实现碰撞规则。添加一个 updateGameObjects() 函数，用于测试碰撞对象是否发生击中： ```javascript function updateGameObjects() { const enemies = gameObjectsfilter(go => go type === 'Enemy');\nconst lasers = gameObjects filter((go) => go type === \"Laser\");\n// laser hit something\nlasers forEach((l) => {\nenemies forEach((m) => {\nif (intersectRect(l rectFromGameObject(), m rectFromGameObject())) {\neventEmitter emit(Messages COLLISION_ENEMY_LASER, {\nfirst: l,\nsecond: m,\n});\n}\n});\n});\ngameObjects = gameObjects filter(go => go dead);\n}\n```\n确保在 window onload 的游戏循环中添加 updateGameObjects()。\n实现激光的冷却时间，确保激光只能在一定时间间隔内发射。\n最后，编辑 Hero 类以实现冷却功能：\n```javascript\nclass Hero extends GameObject {\nconstructor(x, y) {\nsuper(x, y);\n(this width = 99), (this height = 75);\nthis type = \"Hero\";\nthis speed = { x: 0, y: 0 };\nthis cooldown = 0;\n}\nfire() {\ngameObjects push(new Laser(this x + 45, this y - 10));\nthis cooldown = 500;\nlet id = setInterval(() => {\nif (this cooldown > 0) {\nthis cooldown -= 100;\n} else {\nclearInterval(id);\n}\n}, 200);\n}\ncanFire() {\nreturn this",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 42,
    "total_chunks": 44
  },
  {
    "id": "0adc3f963cdcd008cba2bed119d88a36",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第四部分：添加激光和检测碰撞",
    "content": "{ constructor(x, y) { super(x, y); (this width = 99), (this height = 75); this type = \"Hero\"; this speed = { x: 0, y: 0 }; this cooldown = 0; } fire() { gameObjects push(new Laser(this x + 45, this y - 10)); this cooldown = 500; let id = setInterval(() => { if (this cooldown > 0) { this cooldown -= 100; } else { clearInterval(id); } }, 200); } canFire() { return thiscooldown === 0;\n}\n}\n```\n到此为止，你的游戏已经具备了一些功能！你可以使用箭头键导航，用空格键发射激光，并且当击中敌人时敌人会消失。干得好！\n🚀 挑战\n添加爆炸效果！查看 Space Art 仓库 中的游戏资源，尝试在激光击中外星人时添加爆炸效果。\n课后测验\n课后测验\n复习与自学\n尝试调整游戏中的时间间隔，观察会发生什么变化？阅读更多关于 JavaScript 定时事件 的内容。\n作业\n探索碰撞\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10645,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\4-collision-detection\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 43,
    "total_chunks": 44
  },
  {
    "id": "ef41d997c607bcaf930008e80bfbaa43",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\assignment.md",
    "source_type": "git_repo",
    "title": "采用一个 API",
    "content": "采用一个 API\n说明\n使用 API 可以非常有趣。这里有一个许多免费 API 的列表。选择一个 API，并构建一个解决问题的浏览器扩展。这个问题可以很小，比如没有足够的宠物图片（那么可以试试 dog CEO API），也可以是更大的问题——尽情享受吧！\n评分标准\n| 标准     | 卓越表现                                                                  | 合格表现                                 | 需要改进               |\n| -------- | -------------------------------------------------------------------------- | ---------------------------------------- | ----------------------- |\n|          | 提交了一个完整的使用上述列表中 API 的浏览器扩展                            | 提交了一个部分完成的浏览器扩展           | 提交内容存在问题或错误 |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1648,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3ddf580a82c725f636648c3b9922d52e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShip",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 0,
    "total_chunks": 23
  },
  {
    "id": "5fbb42faa02ad51ece2bd31067acc2bd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| player",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 1,
    "total_chunks": 23
  },
  {
    "id": "51cdcfd675c67a6bfd2bb5fb84e639c0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 2,
    "total_chunks": 23
  },
  {
    "id": "31739e08f7a4190bcde64a7140eb86cf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| life",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 3,
    "total_chunks": 23
  },
  {
    "id": "30b3c7b5534c5fa19cb972e006595550",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 4,
    "total_chunks": 23
  },
  {
    "id": "de076e0cbb9625a9a5ca4a3abe6baca8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 5,
    "total_chunks": 23
  },
  {
    "id": "fa3eaddda8c0c14b98353e3bad5ab22e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 6,
    "total_chunks": 23
  },
  {
    "id": "c1289d3819bae7c671592a83a895d608",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑window",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 780,
    "chunk_index": 7,
    "total_chunks": 23
  },
  {
    "id": "445628a19391b0c890484e2f135a0700",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId;\n添加代码\n跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数：\n```javascript\nfunction isHeroDead() {\nreturn hero",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 880,
    "chunk_index": 8,
    "total_chunks": 23
  },
  {
    "id": "f40a4fc52cf72731933771f1dd8af2fd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId;\n添加代码\n跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数：\n```javascript\nfunction isHeroDead() {\nreturn herolife <= 0;\n}\nfunction isEnemiesDead() {\nconst enemies = gameObjects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 898,
    "chunk_index": 9,
    "total_chunks": 23
  },
  {
    "id": "6a90b77b4dceefc68162f841e93fdce5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId;\n添加代码\n跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数：\n```javascript\nfunction isHeroDead() {\nreturn herolife <= 0;\n}\nfunction isEnemiesDead() {\nconst enemies = gameObjectsfilter((go) => go",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 904,
    "chunk_index": 10,
    "total_chunks": 23
  },
  {
    "id": "164afd7fcc77b54041d342f8a11296f1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId;\n添加代码\n跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数：\n```javascript\nfunction isHeroDead() {\nreturn herolife <= 0;\n}\nfunction isEnemiesDead() {\nconst enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 910,
    "chunk_index": 11,
    "total_chunks": 23
  },
  {
    "id": "af3caf97d248df00fa2bbedad73c9108",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId;\n添加代码\n跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数：\n```javascript\nfunction isHeroDead() {\nreturn herolife <= 0;\n}\nfunction isEnemiesDead() {\nconst enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&go",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 911,
    "chunk_index": 12,
    "total_chunks": 23
  },
  {
    "id": "0d8ab14008b7925fa7aabc30ff65818e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId;\n添加代码\n跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数：\n```javascript\nfunction isHeroDead() {\nreturn herolife <= 0;\n}\nfunction isEnemiesDead() {\nconst enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&godead);\nreturn enemies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 916,
    "chunk_index": 13,
    "total_chunks": 23
  },
  {
    "id": "7dc8b3cd705321602378ca30da281735",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "构建太空游戏第六部分：结束与重启\n课前测验\n课前测验\n在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏：\n摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。\n你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。\n收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。\n完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。\n重启\n如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。\n✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。\n要构建的内容\n你将为游戏添加以下规则：\n赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。\n重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。\n推荐步骤\n找到在your-work子文件夹中为你创建的文件。它应该包含以下内容：\nbash\n-| assets\n-| enemyShippng\n-| playerpng\n-| laserRedpng\n-| lifepng\n-| indexhtml\n-| appjs\n-| packagejson\n通过输入以下命令启动你的项目：\nbash\ncd your-work\nnpm start\n上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。\n提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId;\n添加代码\n跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数：\n```javascript\nfunction isHeroDead() {\nreturn herolife <= 0;\n}\nfunction isEnemiesDead() {\nconst enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&godead);\nreturn enemieslength === 0;\n}\n```\n添加逻辑到消息处理器。编辑eventEmitter以处理这些条件：\n```javascript\neventEmitter",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 947,
    "chunk_index": 14,
    "total_chunks": 23
  },
  {
    "id": "d5934852c8fc6e075f35ed3a7a2b0a64",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "课前测验 在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏： 摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。 你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。 收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。 完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。 重启 如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。 ✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。 要构建的内容 你将为游戏添加以下规则： 赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。 重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| lifepng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。 提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId; 添加代码 跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数： ```javascript function isHeroDead() { return herolife <= 0; } function isEnemiesDead() { const enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&godead); return enemieslength === 0; } ``` 添加逻辑到消息处理器。编辑eventEmitter以处理这些条件： ```javascript eventEmitteron(Messages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 919,
    "chunk_index": 15,
    "total_chunks": 23
  },
  {
    "id": "014cc0ac061d52b29a8c927153732832",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "课前测验 在游戏中有多种方式可以表达“结束条件”。作为游戏的创作者，你可以决定游戏为何结束。以下是一些可能的原因，假设我们正在讨论你迄今为止构建的太空游戏： 摧毁了N艘敌方飞船：如果游戏分为不同的关卡，通常需要摧毁N艘敌方飞船才能完成一个关卡。 你的飞船被摧毁：有些游戏中，如果你的飞船被摧毁，你就会输掉游戏。另一种常见的方式是引入“生命值”的概念。每次飞船被摧毁都会扣除一条生命值，当所有生命值耗尽时，游戏结束。 收集了N分：另一种常见的结束条件是收集一定的分数。如何获得分数取决于你，但通常会为各种活动分配分数，比如摧毁敌方飞船或收集敌方飞船被摧毁后掉落的物品。 完成一个关卡：这可能涉及多个条件，比如摧毁X艘敌方飞船、收集Y分，或者收集特定的物品。 重启 如果玩家喜欢你的游戏，他们可能会想要重新玩一次。当游戏因某种原因结束时，你应该提供一个重启的选项。 ✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。 要构建的内容 你将为游戏添加以下规则： 赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。 重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| lifepng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。 提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId; 添加代码 跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数： ```javascript function isHeroDead() { return herolife <= 0; } function isEnemiesDead() { const enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&godead); return enemieslength === 0; } ``` 添加逻辑到消息处理器。编辑eventEmitter以处理这些条件： ```javascript eventEmitteron(MessagesCOLLISION_ENEMY_LASER, (_, { first, second }) => {\nfirst",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 937,
    "chunk_index": 16,
    "total_chunks": 23
  },
  {
    "id": "6820d34bf0c51cfbd0b28155e82101b1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "✅ 思考一下你认为游戏在什么条件下会结束，以及如何提示玩家重启游戏。 要构建的内容 你将为游戏添加以下规则： 赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。 重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| lifepng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。 提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId; 添加代码 跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数： ```javascript function isHeroDead() { return herolife <= 0; } function isEnemiesDead() { const enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&godead); return enemieslength === 0; } ``` 添加逻辑到消息处理器。编辑eventEmitter以处理这些条件： ```javascript eventEmitteron(MessagesCOLLISION_ENEMY_LASER, (_, { first, second }) => { firstdead = true;\nsecond",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 17,
    "total_chunks": 23
  },
  {
    "id": "31d22a83b096291daa5965c6b573008c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "你将为游戏添加以下规则： 赢得游戏。当所有敌方飞船被摧毁时，玩家赢得游戏。此外，显示某种胜利信息。 重启。当所有生命值耗尽或游戏获胜时，你应该提供一种方式来重启游戏。记住！你需要重新初始化游戏，并清除之前的游戏状态。 推荐步骤 找到在your-work子文件夹中为你创建的文件。它应该包含以下内容： bash -| assets -| enemyShippng -| playerpng -| laserRedpng -| lifepng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。 提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId; 添加代码 跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数： ```javascript function isHeroDead() { return herolife <= 0; } function isEnemiesDead() { const enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&godead); return enemieslength === 0; } ``` 添加逻辑到消息处理器。编辑eventEmitter以处理这些条件： ```javascript eventEmitteron(MessagesCOLLISION_ENEMY_LASER, (_, { first, second }) => { firstdead = true; seconddead = true;\nhero incrementPoints();\nif (isEnemiesDead()) {\neventEmitter emit(Messages GAME_END_WIN);\n}\n});\neventEmitter on(Messages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 18,
    "total_chunks": 23
  },
  {
    "id": "2ad91e83aaa79aaae3f544c67a789f57",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "-| lifepng -| indexhtml -| appjs -| packagejson 通过输入以下命令启动你的项目： bash cd your-work npm start 上述命令将在地址http://localhost:5000上启动一个HTTP服务器。打开浏览器并输入该地址。你的游戏应该处于可玩状态。 提示：为了避免在Visual Studio Code中出现警告，编辑windowonload函数以直接调用gameLoopId（不使用let），并在文件顶部独立声明gameLoopId：let gameLoopId; 添加代码 跟踪结束条件。添加代码以跟踪敌方飞船数量，或者英雄飞船是否被摧毁，方法是添加以下两个函数： ```javascript function isHeroDead() { return herolife <= 0; } function isEnemiesDead() { const enemies = gameObjectsfilter((go) => gotype === \"Enemy\" &&godead); return enemieslength === 0; } ``` 添加逻辑到消息处理器。编辑eventEmitter以处理这些条件： ```javascript eventEmitteron(MessagesCOLLISION_ENEMY_LASER, (_, { first, second }) => { firstdead = true; seconddead = true; hero incrementPoints(); if (isEnemiesDead()) { eventEmitter emit(Messages GAME_END_WIN); } }); eventEmitter on(MessagesCOLLISION_ENEMY_HERO, (_, { enemy }) => {\nenemy dead = true;\nhero decrementLife();\nif (isHeroDead())  {\neventEmitter emit(Messages GAME_END_LOSS);\nreturn; // loss before victory\n}\nif (isEnemiesDead()) {\neventEmitter emit(Messages GAME_END_WIN);\n}\n});\neventEmitter on(Messages GAME_END_WIN, () => {\nendGame(true);\n});\neventEmitter on(Messages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 19,
    "total_chunks": 23
  },
  {
    "id": "22e993319e4794a0d503e9446bd43d11",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "return enemieslength === 0; } ``` 添加逻辑到消息处理器。编辑eventEmitter以处理这些条件： ```javascript eventEmitteron(MessagesCOLLISION_ENEMY_LASER, (_, { first, second }) => { firstdead = true; seconddead = true; hero incrementPoints(); if (isEnemiesDead()) { eventEmitter emit(Messages GAME_END_WIN); } }); eventEmitter on(MessagesCOLLISION_ENEMY_HERO, (_, { enemy }) => { enemy dead = true; hero decrementLife(); if (isHeroDead()) { eventEmitter emit(Messages GAME_END_LOSS); return; // loss before victory } if (isEnemiesDead()) { eventEmitter emit(Messages GAME_END_WIN); } }); eventEmitter on(Messages GAME_END_WIN, () => { endGame(true); }); eventEmitter on(MessagesGAME_END_LOSS, () => {\nendGame(false);\n});\n```\n添加新的消息类型。将以下消息添加到常量对象中：\njavascript\nGAME_END_LOSS: \"GAME_END_LOSS\",\nGAME_END_WIN: \"GAME_END_WIN\",\n添加重启代码。编写代码以在按下选定按钮时重启游戏。\n监听按键Enter。编辑窗口的事件监听器以监听此按键：\njavascript\nelse if(evt key === \"Enter\") {\neventEmitter emit(Messages KEY_EVENT_ENTER);\n}\n添加重启消息。将以下消息添加到你的消息常量中：\n```javascript\nKEY_EVENT_ENTER: \"KEY_EVENT_ENTER\",\n```\n实现游戏规则。实现以下游戏规则：\n玩家胜利条件。当所有敌方飞船被摧毁时，显示胜利信息。\n首先，创建一个displayMessage()函数：\njavascript\nfunction displayMessage(message, color = \"red\") {\nctx font = \"30px Arial\";\nctx fillStyle = color;\nctx textAlign = \"center\";\nctx fillText(message, canvas width / 2, canvas height / 2);\n}\n创建一个endGame()函数：\n```javascript\nfunction endGame(win) {\nclearInterval(gameLoopId);\n// set a delay so we are sure any paints have finished\nsetTimeout(() => {\nctx clearRect(0, 0, canvas width, canvas height);\nctx fillStyle = \"black\";\nctx fillRect(0, 0, canvas width, canvas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 20,
    "total_chunks": 23
  },
  {
    "id": "bdd99b06bbb4cc73b1488b8671647f5c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "```javascript KEY_EVENT_ENTER: \"KEY_EVENT_ENTER\", ``` 实现游戏规则。实现以下游戏规则： 玩家胜利条件。当所有敌方飞船被摧毁时，显示胜利信息。 首先，创建一个displayMessage()函数： javascript function displayMessage(message, color = \"red\") { ctx font = \"30px Arial\"; ctx fillStyle = color; ctx textAlign = \"center\"; ctx fillText(message, canvas width / 2, canvas height / 2); } 创建一个endGame()函数： ```javascript function endGame(win) { clearInterval(gameLoopId); // set a delay so we are sure any paints have finished setTimeout(() => { ctx clearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvasheight);\nif (win) {\ndisplayMessage(\n\"Victory Pew Pew - Press [Enter] to start a new game Captain Pew Pew\",\n\"green\"\n);\n} else {\ndisplayMessage(\n\"You died Press [Enter] to start a new game Captain Pew Pew\"\n);\n}\n}, 200)\n}\n```\n重启逻辑。当所有生命值耗尽或玩家赢得游戏时，显示游戏可以重启。此外，当按下“重启”键时重启游戏（你可以决定哪个键映射到重启）。\n创建resetGame()函数：\njavascript\nfunction resetGame() {\nif (gameLoopId) {\nclearInterval(gameLoopId);\neventEmitter clear();\ninitGame();\ngameLoopId = setInterval(() => {\nctx clearRect(0, 0, canvas width, canvas height);\nctx fillStyle = \"black\";\nctx fillRect(0, 0, canvas width, canvas height);\ndrawPoints();\ndrawLife();\nupdateGameObjects();\ndrawGameObjects(ctx);\n}, 100);\n}\n}\n在initGame()中调用eventEmitter以重置游戏：\njavascript\neventEmitter on(Messages KEY_EVENT_ENTER, () => {\nresetGame();\n});\n为EventEmitter添加一个clear()函数：\njavascript\nclear() {\nthis",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 21,
    "total_chunks": 23
  },
  {
    "id": "f19a3a8a89e01b4828f68a7ff6d40ea5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
    "source_type": "git_repo",
    "title": "构建太空游戏第六部分：结束与重启",
    "content": "died Press [Enter] to start a new game Captain Pew Pew\" ); } }, 200) } ``` 重启逻辑。当所有生命值耗尽或玩家赢得游戏时，显示游戏可以重启。此外，当按下“重启”键时重启游戏（你可以决定哪个键映射到重启）。 创建resetGame()函数： javascript function resetGame() { if (gameLoopId) { clearInterval(gameLoopId); eventEmitter clear(); initGame(); gameLoopId = setInterval(() => { ctx clearRect(0, 0, canvas width, canvas height); ctx fillStyle = \"black\"; ctx fillRect(0, 0, canvas width, canvas height); drawPoints(); drawLife(); updateGameObjects(); drawGameObjects(ctx); }, 100); } } 在initGame()中调用eventEmitter以重置游戏： javascript eventEmitter on(Messages KEY_EVENT_ENTER, () => { resetGame(); }); 为EventEmitter添加一个clear()函数： javascript clear() { thislisteners = {};\n}\n👽 💥 🚀 恭喜你，舰长！你的游戏已经完成！干得好！ 🚀 💥 👽\n🚀 挑战\n添加音效！你能为游戏添加音效以增强游戏体验吗？比如激光击中、英雄飞船被摧毁或赢得游戏时的音效？查看这个sandbox，学习如何使用JavaScript播放音效。\n课后测验\n课后测验\n复习与自学\n你的任务是创建一个全新的样本游戏，因此可以探索一些有趣的游戏，看看你可能会构建什么类型的游戏。\n作业\n构建一个样本游戏\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8407,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\6-space-game\\6-end-condition\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 589,
    "chunk_index": 22,
    "total_chunks": 23
  },
  {
    "id": "fdae6c50e981ad6e56bf8f5b07663dde",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\assignment.md",
    "source_type": "git_repo",
    "title": "分析网站性能",
    "content": "分析网站性能\n提供一个网站的详细报告，指出性能存在问题的区域。分析网站为何运行缓慢，并提出加速的解决方案。不仅仅依赖浏览器工具，还要研究其他可以帮助完成报告的工具。\n评分标准\n| 标准     | 卓越表现                                                                                                   | 合格表现                   | 需要改进                     |\n| -------- | ---------------------------------------------------------------------------------------------------------- | -------------------------- | ---------------------------- |\n|          | 报告详细，信息不仅来源于浏览器工具，还包括可用的第三方工具的分析                                           | 提供了基本的报告           | 报告内容非常简略             |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1575,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f7aeddd1956b2e78b2d819de560077a6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "浏览器扩展项目第一部分：关于浏览器的一切\n手绘笔记由 Wassim Chegham 提供\n课前测验\n课前测验\n简介\n浏览器扩展为浏览器增加了额外的功能。但在构建扩展之前，你需要先了解一些关于浏览器如何工作的知识。\n关于浏览器\n在这一系列课程中，你将学习如何构建一个可以在 Chrome、Firefox 和 Edge 浏览器上运行的浏览器扩展。在这一部分，你将了解浏览器的工作原理，并搭建浏览器扩展的基本框架。\n那么，浏览器到底是什么呢？它是一种软件应用程序，允许终端用户从服务器访问内容并在网页上显示。\n✅ 一点历史：第一个浏览器名为“WorldWideWeb”，由蒂姆·伯纳斯-李爵士于1990年创建。\n一些早期的浏览器，图片来源 Karen McGrane\n当用户使用 URL（统一资源定位符）地址连接到互联网时，通常通过 http 或 https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。\n此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。\n浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。\n一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。\n一个非常有用的网站是 caniuse",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "1532702d6dbdaeb4e531b5bee69e20c0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "浏览器扩展项目第一部分：关于浏览器的一切\n手绘笔记由 Wassim Chegham 提供\n课前测验\n课前测验\n简介\n浏览器扩展为浏览器增加了额外的功能。但在构建扩展之前，你需要先了解一些关于浏览器如何工作的知识。\n关于浏览器\n在这一系列课程中，你将学习如何构建一个可以在 Chrome、Firefox 和 Edge 浏览器上运行的浏览器扩展。在这一部分，你将了解浏览器的工作原理，并搭建浏览器扩展的基本框架。\n那么，浏览器到底是什么呢？它是一种软件应用程序，允许终端用户从服务器访问内容并在网页上显示。\n✅ 一点历史：第一个浏览器名为“WorldWideWeb”，由蒂姆·伯纳斯-李爵士于1990年创建。\n一些早期的浏览器，图片来源 Karen McGrane\n当用户使用 URL（统一资源定位符）地址连接到互联网时，通常通过 http 或 https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。\n此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。\n浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。\n一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。\n一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。\n✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。\n浏览器扩展\n为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。\n开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。\n✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？\n安装扩展\n在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似：\n注意：确保开启开发者模式并允许安装来自其他商店的扩展。\n基本流程如下：\n使用 npm run build 构建你的扩展\n在浏览器中通过右上角的“设置和更多”按钮（",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1089,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "2d1038bbfdd9bff907e85da7b0bd36f2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "浏览器扩展项目第一部分：关于浏览器的一切\n手绘笔记由 Wassim Chegham 提供\n课前测验\n课前测验\n简介\n浏览器扩展为浏览器增加了额外的功能。但在构建扩展之前，你需要先了解一些关于浏览器如何工作的知识。\n关于浏览器\n在这一系列课程中，你将学习如何构建一个可以在 Chrome、Firefox 和 Edge 浏览器上运行的浏览器扩展。在这一部分，你将了解浏览器的工作原理，并搭建浏览器扩展的基本框架。\n那么，浏览器到底是什么呢？它是一种软件应用程序，允许终端用户从服务器访问内容并在网页上显示。\n✅ 一点历史：第一个浏览器名为“WorldWideWeb”，由蒂姆·伯纳斯-李爵士于1990年创建。\n一些早期的浏览器，图片来源 Karen McGrane\n当用户使用 URL（统一资源定位符）地址连接到互联网时，通常通过 http 或 https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。\n此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。\n浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。\n一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。\n一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。\n✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。\n浏览器扩展\n为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。\n开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。\n✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？\n安装扩展\n在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似：\n注意：确保开启开发者模式并允许安装来自其他商店的扩展。\n基本流程如下：\n使用 npm run build 构建你的扩展\n在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面\n如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展\n或者，如果是重新加载已安装的扩展，点击“重新加载”\n✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。\n开始构建\n你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。\n你需要：\n一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你\n你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”）\n起始代码。下载 start 文件夹；你将在此文件夹中完成代码\nNPM - NPM 是一个包管理工具；在本地安装它，package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1410,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "0304a9737904480e5af328838cb422fd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "在这一系列课程中，你将学习如何构建一个可以在 Chrome、Firefox 和 Edge 浏览器上运行的浏览器扩展。在这一部分，你将了解浏览器的工作原理，并搭建浏览器扩展的基本框架。 那么，浏览器到底是什么呢？它是一种软件应用程序，允许终端用户从服务器访问内容并在网页上显示。 ✅ 一点历史：第一个浏览器名为“WorldWideWeb”，由蒂姆·伯纳斯-李爵士于1990年创建。 一些早期的浏览器，图片来源 Karen McGrane 当用户使用 URL（统一资源定位符）地址连接到互联网时，通常通过 http 或 https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。 此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。 浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。 一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。 一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。 ✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。 浏览器扩展 为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。 开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。 ✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？ 安装扩展 在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似： 注意：确保开启开发者模式并允许安装来自其他商店的扩展。 基本流程如下： 使用 npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用\n✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。\n花点时间浏览代码库：\ndist\n-|manifest",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1361,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "fcec637828da0fc28b8dc434a1ad6379",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "一些早期的浏览器，图片来源 Karen McGrane 当用户使用 URL（统一资源定位符）地址连接到互联网时，通常通过 http 或 https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。 此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。 浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。 一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。 一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。 ✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。 浏览器扩展 为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。 开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。 ✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？ 安装扩展 在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似： 注意：确保开启开发者模式并允许安装来自其他商店的扩展。 基本流程如下： 使用 npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里）\n-|index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1183,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "dd295caf12b23948f810c4c4a2e8dd4c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "Karen McGrane 当用户使用 URL（统一资源定位符）地址连接到互联网时，通常通过 http 或 https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。 此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。 浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。 一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。 一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。 ✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。 浏览器扩展 为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。 开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。 ✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？ 安装扩展 在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似： 注意：确保开启开发者模式并允许安装来自其他商店的扩展。 基本流程如下： 使用 npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里）\n-|background",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1184,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "413bec2f92117e6d7d830163e5deb03b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "URL（统一资源定位符）地址连接到互联网时，通常通过 http 或 https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。 此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。 浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。 一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。 一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。 ✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。 浏览器扩展 为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。 开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。 ✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？ 安装扩展 在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似： 注意：确保开启开发者模式并允许安装来自其他商店的扩展。 基本流程如下： 使用 npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里） -|backgroundjs（后台 JS 在这里）\n-|main",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1190,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "48633028054393b02d87de00013b7841",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "https 地址使用超文本传输协议，浏览器会与网络服务器通信并获取网页。 此时，浏览器的渲染引擎会将网页显示在用户的设备上，这可能是手机、台式机或笔记本电脑。 浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。 一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。 一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。 ✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。 浏览器扩展 为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。 开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。 ✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？ 安装扩展 在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似： 注意：确保开启开发者模式并允许安装来自其他商店的扩展。 基本流程如下： 使用 npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里） -|backgroundjs（后台 JS 在这里） -|mainjs（构建后的 JS）\nsrc\n-|index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1180,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "818021f88f453ffece99712c58a243ca",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "浏览器还具有缓存内容的能力，这样就不需要每次都从服务器检索内容。它们可以记录用户的浏览历史，存储“cookies”（小型数据片段，用于保存用户活动信息），以及更多功能。 一个非常重要的事情是，浏览器并不完全相同！每个浏览器都有其优点和缺点，专业的网页开发人员需要了解如何让网页在不同浏览器中都能良好运行。这包括处理小屏幕设备（如手机）以及离线用户的情况。 一个非常有用的网站是 caniusecom，你可能应该将其加入你喜欢使用的浏览器的书签中。当你构建网页时，使用 caniuse 提供的技术支持列表可以帮助你更好地支持用户。 ✅ 如何了解哪些浏览器在你的网站用户群中最受欢迎？检查你的分析数据——你可以在网页开发过程中安装各种分析工具，它们会告诉你不同浏览器的使用情况。 浏览器扩展 为什么要构建浏览器扩展？当你需要快速访问经常重复的任务时，浏览器扩展是一个非常方便的工具。例如，如果你经常需要检查网页上的颜色，你可以安装一个颜色选择器浏览器扩展。如果你难以记住密码，可以使用密码管理浏览器扩展。 开发浏览器扩展也很有趣。它们通常专注于有限的任务，并能很好地完成这些任务。 ✅ 你最喜欢的浏览器扩展是什么？它们完成了哪些任务？ 安装扩展 在开始构建之前，先了解一下构建和部署浏览器扩展的过程。虽然每个浏览器在管理这一任务时略有不同，但 Chrome 和 Firefox 的流程与 Edge 的示例类似： 注意：确保开启开发者模式并允许安装来自其他商店的扩展。 基本流程如下： 使用 npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里） -|backgroundjs（后台 JS 在这里） -|mainjs（构建后的 JS） src -|indexjs（你的 JS 代码写在这里）\n✅ 一旦你准备好 API 密钥和地区代码，请将它们存储在某个笔记中以备后用。\n构建扩展的 HTML\n这个扩展有两个视图。一个用于收集 API 密钥和地区代码：\n另一个用于显示地区的碳使用情况：\n我们先从构建表单的 HTML 开始，并用 CSS 对其进行样式化。\n在 /dist 文件夹中，你将构建一个表单和一个结果区域。在 index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1249,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "b9de146065a5a01624172bae5147355c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "注意：确保开启开发者模式并允许安装来自其他商店的扩展。 基本流程如下： 使用 npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里） -|backgroundjs（后台 JS 在这里） -|mainjs（构建后的 JS） src -|indexjs（你的 JS 代码写在这里） ✅ 一旦你准备好 API 密钥和地区代码，请将它们存储在某个笔记中以备后用。 构建扩展的 HTML 这个扩展有两个视图。一个用于收集 API 密钥和地区代码： 另一个用于显示地区的碳使用情况： 我们先从构建表单的 HTML 开始，并用 CSS 对其进行样式化。 在 /dist 文件夹中，你将构建一个表单和一个结果区域。在 indexhtml 文件中，填充表单区域：\n```HTML\nNew",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "e9faf7a94319ec76d9b6d9e75f6c7870",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "npm run build 构建你的扩展 在浏览器中通过右上角的“设置和更多”按钮（图标）导航到扩展页面 如果是新安装，选择“加载未打包”以从其构建文件夹（在我们的例子中是 /dist）上传新的扩展 或者，如果是重新加载已安装的扩展，点击“重新加载” ✅ 这些说明适用于你自己构建的扩展；如果要安装已发布到浏览器扩展商店的扩展，你应该导航到这些 商店 并安装你选择的扩展。 开始构建 你将构建一个浏览器扩展，用于显示你所在地区的碳足迹，包括能源使用情况和能源来源。该扩展将包含一个表单，用于收集 API 密钥以访问 CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里） -|backgroundjs（后台 JS 在这里） -|mainjs（构建后的 JS） src -|indexjs（你的 JS 代码写在这里） ✅ 一旦你准备好 API 密钥和地区代码，请将它们存储在某个笔记中以备后用。 构建扩展的 HTML 这个扩展有两个视图。一个用于收集 API 密钥和地区代码： 另一个用于显示地区的碳使用情况： 我们先从构建表单的 HTML 开始，并用 CSS 对其进行样式化。 在 /dist 文件夹中，你将构建一个表单和一个结果区域。在 indexhtml 文件中，填充表单区域： ```HTML NewAdd your Information\nRegion Name\nYour API Key from tmrow\nSubmit\n```\n这是表单，保存的信息将被输入并存储到本地存储中。\n接下来，创建结果区域；在最后一个表单标签下添加一些 div：\n```HTML\nloading",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 705,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "11def6e0f0a5fe90c710ba26fef4975f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "CO2 Signal 的 API。 你需要： 一个 API 密钥；在页面上的输入框中输入你的电子邮件地址，密钥将发送给你 你的地区代码，对应于 Electricity Map（例如，在波士顿，我使用“US-NEISO”） 起始代码。下载 start 文件夹；你将在此文件夹中完成代码 NPM - NPM 是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里） -|backgroundjs（后台 JS 在这里） -|mainjs（构建后的 JS） src -|indexjs（你的 JS 代码写在这里） ✅ 一旦你准备好 API 密钥和地区代码，请将它们存储在某个笔记中以备后用。 构建扩展的 HTML 这个扩展有两个视图。一个用于收集 API 密钥和地区代码： 另一个用于显示地区的碳使用情况： 我们先从构建表单的 HTML 开始，并用 CSS 对其进行样式化。 在 /dist 文件夹中，你将构建一个表单和一个结果区域。在 indexhtml 文件中，填充表单区域： ```HTML NewAdd your Information Region Name Your API Key from tmrow Submit ``` 这是表单，保存的信息将被输入并存储到本地存储中。 接下来，创建结果区域；在最后一个表单标签下添加一些 div： ```HTML loadingRegion:\nCarbon Usage:\nFossil Fuel Percentage:\nChange region\n```\n此时，你可以尝试构建。确保安装此扩展的包依赖项：\nnpm install\n此命令将使用 npm（Node 包管理器）安装 webpack，用于扩展的构建过程。Webpack 是一个处理代码编译的打包工具。你可以通过查看 /dist/main",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 559,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "8c306adcba75aab8ba57badfba6fbe98",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第一部分：关于浏览器的一切",
    "content": "是一个包管理工具；在本地安装它，packagejson 文件中列出的包将被安装以供你的网页资源使用 ✅ 在这个 优秀的学习模块 中了解更多关于包管理的信息。 花点时间浏览代码库： dist -|manifestjson（默认设置在这里） -|indexhtml（前端 HTML 标记在这里） -|backgroundjs（后台 JS 在这里） -|mainjs（构建后的 JS） src -|indexjs（你的 JS 代码写在这里） ✅ 一旦你准备好 API 密钥和地区代码，请将它们存储在某个笔记中以备后用。 构建扩展的 HTML 这个扩展有两个视图。一个用于收集 API 密钥和地区代码： 另一个用于显示地区的碳使用情况： 我们先从构建表单的 HTML 开始，并用 CSS 对其进行样式化。 在 /dist 文件夹中，你将构建一个表单和一个结果区域。在 indexhtml 文件中，填充表单区域： ```HTML NewAdd your Information Region Name Your API Key from tmrow Submit ``` 这是表单，保存的信息将被输入并存储到本地存储中。 接下来，创建结果区域；在最后一个表单标签下添加一些 div： ```HTML loadingRegion: Carbon Usage: Fossil Fuel Percentage: Change region ``` 此时，你可以尝试构建。确保安装此扩展的包依赖项： npm install 此命令将使用 npm（Node 包管理器）安装 webpack，用于扩展的构建过程。Webpack 是一个处理代码编译的打包工具。你可以通过查看 /dist/mainjs 来看到此过程的输出——你会发现代码已经被打包。\n目前，扩展应该可以构建，并且如果你将其部署到 Edge 作为扩展，你会看到一个整齐显示的表单。\n恭喜你，你已经迈出了构建浏览器扩展的第一步。在后续课程中，你将使其更加功能化和实用。\n🚀 挑战\n浏览一个浏览器扩展商店并安装一个扩展到你的浏览器。你可以用有趣的方式检查它的文件。你发现了什么？\n课后测验\n课后测验\n复习与自学\n在本课中，你学习了一些关于网页浏览器历史的知识；利用这个机会，通过阅读更多相关历史来了解万维网的发明者如何设想它的用途。一些有用的网站包括：\n网页浏览器的历史\n万维网的历史\n蒂姆·伯纳斯-李访谈\n作业\n重新设计你的扩展\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9676,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\1-about-browsers\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 928,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "fede312cbb8db73a98220dcf93de5975",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\README.md",
    "source_type": "git_repo",
    "title": "Carbon Trigger 浏览器扩展：完整代码",
    "content": "Carbon Trigger 浏览器扩展：完整代码\n使用 tmrow 的 C02 Signal API 来追踪电力使用情况，构建一个浏览器扩展，让您可以直接在浏览器中收到关于您所在地区电力使用强度的提醒。临时使用此扩展可以帮助您根据这些信息对自己的活动做出判断。\n快速开始\n您需要安装 npm。将此代码下载到您电脑的一个文件夹中。\n安装所有必需的依赖包：\nnpm install\n使用 webpack 构建扩展：\nnpm run build\n在 Edge 浏览器中安装扩展，使用浏览器右上角的“三点”菜单找到扩展面板。从那里选择“加载未打包的扩展”以加载新扩展。在提示中打开“dist”文件夹，扩展将被加载。要使用此扩展，您需要一个 CO2 Signal API 的 API 密钥（通过电子邮件获取 - 在此页面的框中输入您的电子邮件）以及与 Electricity Map 对应的 地区代码（例如，在波士顿，我使用的是“US-NEISO”）。\n一旦在扩展界面中输入了 API 密钥和地区代码，浏览器扩展栏中的彩色圆点应会根据您所在地区的能源使用情况发生变化，并为您提供关于哪些高能耗活动适合进行的提示。这个“圆点”系统的概念来源于 Energy Lollipop 扩展，它用于加州的碳排放监测。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2330,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 588,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1e0411ca96a2945565021be38500d6a8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\start\\README.md",
    "source_type": "git_repo",
    "title": "Carbon Trigger 浏览器扩展：入门代码",
    "content": "Carbon Trigger 浏览器扩展：入门代码\n使用 tmrow 的 C02 Signal API 来追踪电力使用情况，构建一个浏览器扩展，让您可以在浏览器中直接提醒所在地区的电力使用情况有多繁重。临时使用此扩展可以帮助您根据这些信息对活动进行判断。\n开始使用\n您需要安装 npm。将此代码下载到您电脑上的一个文件夹中。\n安装所有所需的包：\nnpm install\n使用 webpack 构建扩展：\nnpm run build\n在 Edge 浏览器中安装扩展，请使用浏览器右上角的“三点”菜单找到扩展面板。从那里选择“加载未打包的扩展”以加载新扩展。在提示中打开“dist”文件夹，扩展将被加载。要使用此扩展，您需要 CO2 Signal API 的 API 密钥（通过电子邮件获取 - 在此页面的框中输入您的电子邮件）以及与 Electricity Map 对应的地区代码（例如，在波士顿，我使用 'US-NEISO'，可以在 此处 找到地区代码）。\n一旦在扩展界面中输入了 API 密钥和地区代码，浏览器扩展栏中的彩色点应该会根据您所在地区的能源使用情况发生变化，并为您提供建议，告诉您哪些耗能活动是适合进行的。这个“点”系统的概念来源于 Energy Lollipop 扩展，该扩展用于加州的排放情况。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2345,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\start\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 589,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bb6aee414bb9071d564437373473f3ba",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.es.md",
    "source_type": "git_repo",
    "title": "Carbon Trigger 浏览器扩展：完整代码",
    "content": "Carbon Trigger 浏览器扩展：完整代码\n使用 tmrow 的 CO2 Signal API 来追踪电力使用情况，创建一个浏览器扩展，让您可以直接在浏览器中查看所在地区的电力消耗情况。这款临时扩展可以帮助您根据这些信息做出活动决策。\n开始\n您需要安装 npm。将此代码下载到您电脑的一个文件夹中。\n安装所有必要的包：\nnpm install\n使用 webpack 构建扩展：\nnpm run build\n要在 Edge 中安装，请使用浏览器右上角的“三点菜单”找到扩展面板。从那里选择“加载未打包的扩展”以加载新的扩展。当系统提示时，打开“dist”文件夹，扩展将被加载。要使用此扩展，您需要一个 CO2 Signal API 的 API 密钥（通过电子邮件获取 - 在页面的输入框中输入您的电子邮件）以及 电力地图 对应的 区域代码（例如，在波士顿，我使用的是“US-NEISO”）。\n一旦在扩展界面中输入了 API 密钥和区域代码，浏览器扩展栏中的颜色点应该会改变，以反映您所在地区的能源使用情况，并为您提供关于高能耗活动是否适合的指示。这个“点”系统的概念来源于 Energy Lollipop 扩展，它用于加州的排放情况。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。虽然我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2339,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.es.md",
      "source_type": "git_repo"
    },
    "token_count": 565,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d51bd7e67d6cf6a6f25f8f0a27b34c30",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.fr.md",
    "source_type": "git_repo",
    "title": "Carbon Trigger 浏览器扩展：完整代码",
    "content": "Carbon Trigger 浏览器扩展：完整代码\n使用 tmrow 的 C02 Signal API 来追踪电力消耗，创建一个浏览器扩展，让您可以直接在浏览器中查看所在地区的电力消耗情况。使用这个定制扩展可以帮助您根据这些信息对自己的活动做出更明智的判断。\n开始\n您需要安装 npm。将此代码下载到您电脑的一个文件夹中。\n安装所有所需的包：\nnpm install\n使用 webpack 构建扩展：\nnpm run build\n要在 Edge 上安装，请使用浏览器右上角的“三点菜单”找到扩展面板。从那里选择“加载未打包的扩展”以加载新的扩展。在提示中打开“dist”文件夹，扩展将被加载。要使用此扩展，您需要一个 CO2 Signal API 的 API 密钥（通过电子邮件获取 - 在页面上的框中输入您的电子邮件）以及与 电力地图 对应的 区域代码（例如，在波士顿，我使用的是“US-NEISO”）。\n当您在扩展界面中输入 API 密钥和区域代码后，浏览器扩展栏中的彩色点应该会根据您所在地区的能源消耗情况发生变化，并为您提供一个指示，帮助您判断是否适合进行高耗能活动。这个“点”的概念灵感来源于 Energy Lollipop 扩展，该扩展用于显示加州的排放情况。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2353,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.fr.md",
      "source_type": "git_repo"
    },
    "token_count": 585,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "03f45fb57c8fca73a7d1dab75ec2f434",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "浏览器扩展项目第3部分：了解后台任务和性能\n课前测验\n课前测验\n简介\n在本模块的前两节课中，你学习了如何构建一个表单和用于显示从 API 获取的数据的区域。这是一种非常标准的创建网页内容的方式。你甚至还学会了如何异步获取数据。你的浏览器扩展几乎已经完成了。\n现在需要管理一些后台任务，包括刷新扩展图标的颜色，因此这是一个很好的时机来讨论浏览器如何管理这类任务。在构建网页资源时，让我们从性能的角度来思考这些浏览器任务。\n网页性能基础\n“网站性能关乎两件事：页面加载速度和页面上代码的运行速度。” —— Zack Grossbart\n如何让你的网站在各种设备、各种用户和各种情况下都能快速运行，这个话题自然非常广泛。以下是一些在构建标准网页项目或浏览器扩展时需要牢记的要点。\n确保网站高效运行的第一步是收集其性能数据。最直接的地方就是在你的网页浏览器的开发者工具中。在 Edge 浏览器中，你可以点击“设置和更多”按钮（浏览器右上角的三点图标），然后导航到“更多工具 > 开发者工具”，并打开“性能”选项卡。你也可以使用快捷键 Ctrl + Shift + I（Windows）或 Option + Command + I（Mac）打开开发者工具。\n“性能”选项卡包含一个分析工具。打开一个网站（例如尝试 https://www",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 14
  },
  {
    "id": "4d8fbb706593f30f545823ac380a5f46",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "浏览器扩展项目第3部分：了解后台任务和性能\n课前测验\n课前测验\n简介\n在本模块的前两节课中，你学习了如何构建一个表单和用于显示从 API 获取的数据的区域。这是一种非常标准的创建网页内容的方式。你甚至还学会了如何异步获取数据。你的浏览器扩展几乎已经完成了。\n现在需要管理一些后台任务，包括刷新扩展图标的颜色，因此这是一个很好的时机来讨论浏览器如何管理这类任务。在构建网页资源时，让我们从性能的角度来思考这些浏览器任务。\n网页性能基础\n“网站性能关乎两件事：页面加载速度和页面上代码的运行速度。” —— Zack Grossbart\n如何让你的网站在各种设备、各种用户和各种情况下都能快速运行，这个话题自然非常广泛。以下是一些在构建标准网页项目或浏览器扩展时需要牢记的要点。\n确保网站高效运行的第一步是收集其性能数据。最直接的地方就是在你的网页浏览器的开发者工具中。在 Edge 浏览器中，你可以点击“设置和更多”按钮（浏览器右上角的三点图标），然后导航到“更多工具 > 开发者工具”，并打开“性能”选项卡。你也可以使用快捷键 Ctrl + Shift + I（Windows）或 Option + Command + I（Mac）打开开发者工具。\n“性能”选项卡包含一个分析工具。打开一个网站（例如尝试 https://wwwmicrosoft",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 14
  },
  {
    "id": "4fc3dab8a2762ef0fd985afd2771ff10",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "浏览器扩展项目第3部分：了解后台任务和性能\n课前测验\n课前测验\n简介\n在本模块的前两节课中，你学习了如何构建一个表单和用于显示从 API 获取的数据的区域。这是一种非常标准的创建网页内容的方式。你甚至还学会了如何异步获取数据。你的浏览器扩展几乎已经完成了。\n现在需要管理一些后台任务，包括刷新扩展图标的颜色，因此这是一个很好的时机来讨论浏览器如何管理这类任务。在构建网页资源时，让我们从性能的角度来思考这些浏览器任务。\n网页性能基础\n“网站性能关乎两件事：页面加载速度和页面上代码的运行速度。” —— Zack Grossbart\n如何让你的网站在各种设备、各种用户和各种情况下都能快速运行，这个话题自然非常广泛。以下是一些在构建标准网页项目或浏览器扩展时需要牢记的要点。\n确保网站高效运行的第一步是收集其性能数据。最直接的地方就是在你的网页浏览器的开发者工具中。在 Edge 浏览器中，你可以点击“设置和更多”按钮（浏览器右上角的三点图标），然后导航到“更多工具 > 开发者工具”，并打开“性能”选项卡。你也可以使用快捷键 Ctrl + Shift + I（Windows）或 Option + Command + I（Mac）打开开发者工具。\n“性能”选项卡包含一个分析工具。打开一个网站（例如尝试 https://wwwmicrosoftcom），点击“记录”按钮，然后刷新页面。随时停止记录，你将能够看到生成的“脚本”、“渲染”和“绘制”网站的例程：\n✅ 查看 Microsoft 文档 中关于 Edge 性能面板的内容\n提示：为了获得网站启动时间的准确读数，请清除浏览器缓存\n选择性能时间轴中的元素，放大页面加载时发生的事件。\n通过选择性能时间轴的一部分并查看摘要面板，获取页面性能的快照：\n检查事件日志面板，看看是否有任何事件耗时超过 15 毫秒：\n✅ 熟悉你的分析工具！打开本网站的开发者工具，看看是否存在瓶颈。加载最慢的资源是什么？最快的又是什么？\n性能分析检查\n通常来说，每个网页开发者在构建网站时都应该注意一些“问题区域”，以避免在部署到生产环境时出现意外。\n资源大小：近年来，网页变得“更重”了，因此也更慢了。这部分重量与图片的使用有关。\n✅ 浏览 Internet Archive 以查看页面重量的历史视图及更多信息。\n一个好的做法是确保图片经过优化，并以适合用户的大小和分辨率进行交付。\nDOM 遍历：浏览器需要根据你编写的代码构建其文档对象模型（DOM），因此为了良好的页面性能，应该尽量减少标签的使用，仅使用和样式化页面所需的内容。例如，与页面相关的多余 CSS 可以进行优化；仅在某个页面需要使用的样式不需要包含在主样式表中。\nJavaScript：每个 JavaScript 开发者都应该注意“阻塞渲染”的脚本，这些脚本必须在浏览器遍历和绘制 DOM 之前加载完成。考虑在内联脚本中使用 defer（如在 Terrarium 模块中所做的那样）。\n✅ 在 网站速度测试网站 上尝试一些网站，了解更多关于确定网站性能的常见检查。\n现在你已经了解了浏览器如何渲染你发送的资源，让我们看看完成扩展所需的最后几步：\n创建一个计算颜色的函数\n在 /src/index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1190,
    "chunk_index": 2,
    "total_chunks": 14
  },
  {
    "id": "cb82312d6866ea4b96d94e5d0a4f2e92",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "浏览器扩展项目第3部分：了解后台任务和性能\n课前测验\n课前测验\n简介\n在本模块的前两节课中，你学习了如何构建一个表单和用于显示从 API 获取的数据的区域。这是一种非常标准的创建网页内容的方式。你甚至还学会了如何异步获取数据。你的浏览器扩展几乎已经完成了。\n现在需要管理一些后台任务，包括刷新扩展图标的颜色，因此这是一个很好的时机来讨论浏览器如何管理这类任务。在构建网页资源时，让我们从性能的角度来思考这些浏览器任务。\n网页性能基础\n“网站性能关乎两件事：页面加载速度和页面上代码的运行速度。” —— Zack Grossbart\n如何让你的网站在各种设备、各种用户和各种情况下都能快速运行，这个话题自然非常广泛。以下是一些在构建标准网页项目或浏览器扩展时需要牢记的要点。\n确保网站高效运行的第一步是收集其性能数据。最直接的地方就是在你的网页浏览器的开发者工具中。在 Edge 浏览器中，你可以点击“设置和更多”按钮（浏览器右上角的三点图标），然后导航到“更多工具 > 开发者工具”，并打开“性能”选项卡。你也可以使用快捷键 Ctrl + Shift + I（Windows）或 Option + Command + I（Mac）打开开发者工具。\n“性能”选项卡包含一个分析工具。打开一个网站（例如尝试 https://wwwmicrosoftcom），点击“记录”按钮，然后刷新页面。随时停止记录，你将能够看到生成的“脚本”、“渲染”和“绘制”网站的例程：\n✅ 查看 Microsoft 文档 中关于 Edge 性能面板的内容\n提示：为了获得网站启动时间的准确读数，请清除浏览器缓存\n选择性能时间轴中的元素，放大页面加载时发生的事件。\n通过选择性能时间轴的一部分并查看摘要面板，获取页面性能的快照：\n检查事件日志面板，看看是否有任何事件耗时超过 15 毫秒：\n✅ 熟悉你的分析工具！打开本网站的开发者工具，看看是否存在瓶颈。加载最慢的资源是什么？最快的又是什么？\n性能分析检查\n通常来说，每个网页开发者在构建网站时都应该注意一些“问题区域”，以避免在部署到生产环境时出现意外。\n资源大小：近年来，网页变得“更重”了，因此也更慢了。这部分重量与图片的使用有关。\n✅ 浏览 Internet Archive 以查看页面重量的历史视图及更多信息。\n一个好的做法是确保图片经过优化，并以适合用户的大小和分辨率进行交付。\nDOM 遍历：浏览器需要根据你编写的代码构建其文档对象模型（DOM），因此为了良好的页面性能，应该尽量减少标签的使用，仅使用和样式化页面所需的内容。例如，与页面相关的多余 CSS 可以进行优化；仅在某个页面需要使用的样式不需要包含在主样式表中。\nJavaScript：每个 JavaScript 开发者都应该注意“阻塞渲染”的脚本，这些脚本必须在浏览器遍历和绘制 DOM 之前加载完成。考虑在内联脚本中使用 defer（如在 Terrarium 模块中所做的那样）。\n✅ 在 网站速度测试网站 上尝试一些网站，了解更多关于确定网站性能的常见检查。\n现在你已经了解了浏览器如何渲染你发送的资源，让我们看看完成扩展所需的最后几步：\n创建一个计算颜色的函数\n在 /src/indexjs 中，在你设置的用于访问 DOM 的一系列 const 变量之后，添加一个名为 calculateColor() 的函数：\n```JavaScript\nfunction calculateColor(value) {\nlet co2Scale = [0, 150, 600, 750, 800];\nlet colors = ['#2AA364', '#F5EB4D', '#9E4229', '#381D02', '#381D02'];\nlet closestNum = co2Scale",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1290,
    "chunk_index": 3,
    "total_chunks": 14
  },
  {
    "id": "6b4018a35a42d974b0208958adf4ea24",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "https://wwwmicrosoftcom），点击“记录”按钮，然后刷新页面。随时停止记录，你将能够看到生成的“脚本”、“渲染”和“绘制”网站的例程： ✅ 查看 Microsoft 文档 中关于 Edge 性能面板的内容 提示：为了获得网站启动时间的准确读数，请清除浏览器缓存 选择性能时间轴中的元素，放大页面加载时发生的事件。 通过选择性能时间轴的一部分并查看摘要面板，获取页面性能的快照： 检查事件日志面板，看看是否有任何事件耗时超过 15 毫秒： ✅ 熟悉你的分析工具！打开本网站的开发者工具，看看是否存在瓶颈。加载最慢的资源是什么？最快的又是什么？ 性能分析检查 通常来说，每个网页开发者在构建网站时都应该注意一些“问题区域”，以避免在部署到生产环境时出现意外。 资源大小：近年来，网页变得“更重”了，因此也更慢了。这部分重量与图片的使用有关。 ✅ 浏览 Internet Archive 以查看页面重量的历史视图及更多信息。 一个好的做法是确保图片经过优化，并以适合用户的大小和分辨率进行交付。 DOM 遍历：浏览器需要根据你编写的代码构建其文档对象模型（DOM），因此为了良好的页面性能，应该尽量减少标签的使用，仅使用和样式化页面所需的内容。例如，与页面相关的多余 CSS 可以进行优化；仅在某个页面需要使用的样式不需要包含在主样式表中。 JavaScript：每个 JavaScript 开发者都应该注意“阻塞渲染”的脚本，这些脚本必须在浏览器遍历和绘制 DOM 之前加载完成。考虑在内联脚本中使用 defer（如在 Terrarium 模块中所做的那样）。 ✅ 在 网站速度测试网站 上尝试一些网站，了解更多关于确定网站性能的常见检查。 现在你已经了解了浏览器如何渲染你发送的资源，让我们看看完成扩展所需的最后几步： 创建一个计算颜色的函数 在 /src/indexjs 中，在你设置的用于访问 DOM 的一系列 const 变量之后，添加一个名为 calculateColor() 的函数： ```JavaScript function calculateColor(value) { let co2Scale = [0, 150, 600, 750, 800]; let colors = ['#2AA364', '#F5EB4D', '#9E4229', '#381D02', '#381D02']; let closestNum = co2Scalesort((a, b) => {\nreturn Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 809,
    "chunk_index": 4,
    "total_chunks": 14
  },
  {
    "id": "aa76fdfffbf5c462d5ef79384263d1af",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "中关于 Edge 性能面板的内容 提示：为了获得网站启动时间的准确读数，请清除浏览器缓存 选择性能时间轴中的元素，放大页面加载时发生的事件。 通过选择性能时间轴的一部分并查看摘要面板，获取页面性能的快照： 检查事件日志面板，看看是否有任何事件耗时超过 15 毫秒： ✅ 熟悉你的分析工具！打开本网站的开发者工具，看看是否存在瓶颈。加载最慢的资源是什么？最快的又是什么？ 性能分析检查 通常来说，每个网页开发者在构建网站时都应该注意一些“问题区域”，以避免在部署到生产环境时出现意外。 资源大小：近年来，网页变得“更重”了，因此也更慢了。这部分重量与图片的使用有关。 ✅ 浏览 Internet Archive 以查看页面重量的历史视图及更多信息。 一个好的做法是确保图片经过优化，并以适合用户的大小和分辨率进行交付。 DOM 遍历：浏览器需要根据你编写的代码构建其文档对象模型（DOM），因此为了良好的页面性能，应该尽量减少标签的使用，仅使用和样式化页面所需的内容。例如，与页面相关的多余 CSS 可以进行优化；仅在某个页面需要使用的样式不需要包含在主样式表中。 JavaScript：每个 JavaScript 开发者都应该注意“阻塞渲染”的脚本，这些脚本必须在浏览器遍历和绘制 DOM 之前加载完成。考虑在内联脚本中使用 defer（如在 Terrarium 模块中所做的那样）。 ✅ 在 网站速度测试网站 上尝试一些网站，了解更多关于确定网站性能的常见检查。 现在你已经了解了浏览器如何渲染你发送的资源，让我们看看完成扩展所需的最后几步： 创建一个计算颜色的函数 在 /src/indexjs 中，在你设置的用于访问 DOM 的一系列 const 变量之后，添加一个名为 calculateColor() 的函数： ```JavaScript function calculateColor(value) { let co2Scale = [0, 150, 600, 750, 800]; let colors = ['#2AA364', '#F5EB4D', '#9E4229', '#381D02', '#381D02']; let closestNum = co2Scalesort((a, b) => { return Mathabs(a - value) - Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 749,
    "chunk_index": 5,
    "total_chunks": 14
  },
  {
    "id": "64bad84b5a3c191f57905c412eb8021d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "选择性能时间轴中的元素，放大页面加载时发生的事件。 通过选择性能时间轴的一部分并查看摘要面板，获取页面性能的快照： 检查事件日志面板，看看是否有任何事件耗时超过 15 毫秒： ✅ 熟悉你的分析工具！打开本网站的开发者工具，看看是否存在瓶颈。加载最慢的资源是什么？最快的又是什么？ 性能分析检查 通常来说，每个网页开发者在构建网站时都应该注意一些“问题区域”，以避免在部署到生产环境时出现意外。 资源大小：近年来，网页变得“更重”了，因此也更慢了。这部分重量与图片的使用有关。 ✅ 浏览 Internet Archive 以查看页面重量的历史视图及更多信息。 一个好的做法是确保图片经过优化，并以适合用户的大小和分辨率进行交付。 DOM 遍历：浏览器需要根据你编写的代码构建其文档对象模型（DOM），因此为了良好的页面性能，应该尽量减少标签的使用，仅使用和样式化页面所需的内容。例如，与页面相关的多余 CSS 可以进行优化；仅在某个页面需要使用的样式不需要包含在主样式表中。 JavaScript：每个 JavaScript 开发者都应该注意“阻塞渲染”的脚本，这些脚本必须在浏览器遍历和绘制 DOM 之前加载完成。考虑在内联脚本中使用 defer（如在 Terrarium 模块中所做的那样）。 ✅ 在 网站速度测试网站 上尝试一些网站，了解更多关于确定网站性能的常见检查。 现在你已经了解了浏览器如何渲染你发送的资源，让我们看看完成扩展所需的最后几步： 创建一个计算颜色的函数 在 /src/indexjs 中，在你设置的用于访问 DOM 的一系列 const 变量之后，添加一个名为 calculateColor() 的函数： ```JavaScript function calculateColor(value) { let co2Scale = [0, 150, 600, 750, 800]; let colors = ['#2AA364', '#F5EB4D', '#9E4229', '#381D02', '#381D02']; let closestNum = co2Scalesort((a, b) => { return Mathabs(a - value) - Mathabs(b - value);\n})[0];\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 717,
    "chunk_index": 6,
    "total_chunks": 14
  },
  {
    "id": "76725fd7bd4d727c4c8e75f4b930641b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "毫秒： ✅ 熟悉你的分析工具！打开本网站的开发者工具，看看是否存在瓶颈。加载最慢的资源是什么？最快的又是什么？ 性能分析检查 通常来说，每个网页开发者在构建网站时都应该注意一些“问题区域”，以避免在部署到生产环境时出现意外。 资源大小：近年来，网页变得“更重”了，因此也更慢了。这部分重量与图片的使用有关。 ✅ 浏览 Internet Archive 以查看页面重量的历史视图及更多信息。 一个好的做法是确保图片经过优化，并以适合用户的大小和分辨率进行交付。 DOM 遍历：浏览器需要根据你编写的代码构建其文档对象模型（DOM），因此为了良好的页面性能，应该尽量减少标签的使用，仅使用和样式化页面所需的内容。例如，与页面相关的多余 CSS 可以进行优化；仅在某个页面需要使用的样式不需要包含在主样式表中。 JavaScript：每个 JavaScript 开发者都应该注意“阻塞渲染”的脚本，这些脚本必须在浏览器遍历和绘制 DOM 之前加载完成。考虑在内联脚本中使用 defer（如在 Terrarium 模块中所做的那样）。 ✅ 在 网站速度测试网站 上尝试一些网站，了解更多关于确定网站性能的常见检查。 现在你已经了解了浏览器如何渲染你发送的资源，让我们看看完成扩展所需的最后几步： 创建一个计算颜色的函数 在 /src/indexjs 中，在你设置的用于访问 DOM 的一系列 const 变量之后，添加一个名为 calculateColor() 的函数： ```JavaScript function calculateColor(value) { let co2Scale = [0, 150, 600, 750, 800]; let colors = ['#2AA364', '#F5EB4D', '#9E4229', '#381D02', '#381D02']; let closestNum = co2Scalesort((a, b) => { return Mathabs(a - value) - Mathabs(b - value); })[0]; consolelog(value + ' is closest to ' + closestNum);\nlet num = (element) => element > closestNum;\nlet scaleIndex = co2Scale",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 7,
    "total_chunks": 14
  },
  {
    "id": "5964924893893a5306a12bc9b4adad5c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "之前加载完成。考虑在内联脚本中使用 defer（如在 Terrarium 模块中所做的那样）。 ✅ 在 网站速度测试网站 上尝试一些网站，了解更多关于确定网站性能的常见检查。 现在你已经了解了浏览器如何渲染你发送的资源，让我们看看完成扩展所需的最后几步： 创建一个计算颜色的函数 在 /src/indexjs 中，在你设置的用于访问 DOM 的一系列 const 变量之后，添加一个名为 calculateColor() 的函数： ```JavaScript function calculateColor(value) { let co2Scale = [0, 150, 600, 750, 800]; let colors = ['#2AA364', '#F5EB4D', '#9E4229', '#381D02', '#381D02']; let closestNum = co2Scalesort((a, b) => { return Mathabs(a - value) - Mathabs(b - value); })[0]; consolelog(value + ' is closest to ' + closestNum); let num = (element) => element > closestNum; let scaleIndex = co2ScalefindIndex(num);\nlet closestColor = colors[scaleIndex];\nconsole log(scaleIndex, closestColor);\nchrome runtime sendMessage({ action: 'updateIcon', value: { color: closestColor } });\n}\n```\n这里发生了什么？你传入一个值（来自上一课完成的 API 调用的碳强度值），然后计算其值与颜色数组中索引的接近程度。接着，你将最接近的颜色值发送到 chrome runtime。\nchrome runtime 提供了 一个 API，用于处理各种后台任务，而你的扩展正在利用它：\n“使用 chrome",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 8,
    "total_chunks": 14
  },
  {
    "id": "d0393c050c1e35716c796db0eb027310",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "colors = ['#2AA364', '#F5EB4D', '#9E4229', '#381D02', '#381D02']; let closestNum = co2Scalesort((a, b) => { return Mathabs(a - value) - Mathabs(b - value); })[0]; consolelog(value + ' is closest to ' + closestNum); let num = (element) => element > closestNum; let scaleIndex = co2ScalefindIndex(num); let closestColor = colors[scaleIndex]; console log(scaleIndex, closestColor); chrome runtime sendMessage({ action: 'updateIcon', value: { color: closestColor } }); } ``` 这里发生了什么？你传入一个值（来自上一课完成的 API 调用的碳强度值），然后计算其值与颜色数组中索引的接近程度。接着，你将最接近的颜色值发送到 chrome runtime。 chrome runtime 提供了 一个 API，用于处理各种后台任务，而你的扩展正在利用它： “使用 chromeruntime API 检索后台页面，返回清单的详细信息，并监听和响应应用或扩展生命周期中的事件。你还可以使用此 API 将 URL 的相对路径转换为完全限定的 URL。”\n✅ 如果你正在为 Edge 开发此浏览器扩展，可能会惊讶于你正在使用 chrome API。较新的 Edge 浏览器版本运行在 Chromium 浏览器引擎上，因此你可以利用这些工具。\n注意，如果你想分析浏览器扩展，请从扩展本身启动开发者工具，因为它是一个独立的浏览器实例。\n设置默认图标颜色\n现在，在 init() 函数中，通过调用 chrome 的 updateIcon 操作，将图标初始设置为通用的绿色：\nJavaScript\nchrome runtime",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 9,
    "total_chunks": 14
  },
  {
    "id": "3a4b674dec5c3dfab0aa4feb2c13a961",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "' + closestNum); let num = (element) => element > closestNum; let scaleIndex = co2ScalefindIndex(num); let closestColor = colors[scaleIndex]; console log(scaleIndex, closestColor); chrome runtime sendMessage({ action: 'updateIcon', value: { color: closestColor } }); } ``` 这里发生了什么？你传入一个值（来自上一课完成的 API 调用的碳强度值），然后计算其值与颜色数组中索引的接近程度。接着，你将最接近的颜色值发送到 chrome runtime。 chrome runtime 提供了 一个 API，用于处理各种后台任务，而你的扩展正在利用它： “使用 chromeruntime API 检索后台页面，返回清单的详细信息，并监听和响应应用或扩展生命周期中的事件。你还可以使用此 API 将 URL 的相对路径转换为完全限定的 URL。” ✅ 如果你正在为 Edge 开发此浏览器扩展，可能会惊讶于你正在使用 chrome API。较新的 Edge 浏览器版本运行在 Chromium 浏览器引擎上，因此你可以利用这些工具。 注意，如果你想分析浏览器扩展，请从扩展本身启动开发者工具，因为它是一个独立的浏览器实例。 设置默认图标颜色 现在，在 init() 函数中，通过调用 chrome 的 updateIcon 操作，将图标初始设置为通用的绿色： JavaScript chrome runtimesendMessage({\naction: 'updateIcon',\nvalue: {\ncolor: 'green',\n},\n});\n调用函数并执行调用\n接下来，通过将你刚刚创建的函数添加到 C02Signal API 返回的 promise 中来调用它：\nJavaScript\n//let CO2 calculateColor(CO2);\n最后，在 /dist/background js 中，为这些后台操作调用添加监听器：\n```JavaScript\nchrome runtime onMessage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 10,
    "total_chunks": 14
  },
  {
    "id": "c542a95d0a3235f87fc98e663490334b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "value: { color: closestColor } }); } ``` 这里发生了什么？你传入一个值（来自上一课完成的 API 调用的碳强度值），然后计算其值与颜色数组中索引的接近程度。接着，你将最接近的颜色值发送到 chrome runtime。 chrome runtime 提供了 一个 API，用于处理各种后台任务，而你的扩展正在利用它： “使用 chromeruntime API 检索后台页面，返回清单的详细信息，并监听和响应应用或扩展生命周期中的事件。你还可以使用此 API 将 URL 的相对路径转换为完全限定的 URL。” ✅ 如果你正在为 Edge 开发此浏览器扩展，可能会惊讶于你正在使用 chrome API。较新的 Edge 浏览器版本运行在 Chromium 浏览器引擎上，因此你可以利用这些工具。 注意，如果你想分析浏览器扩展，请从扩展本身启动开发者工具，因为它是一个独立的浏览器实例。 设置默认图标颜色 现在，在 init() 函数中，通过调用 chrome 的 updateIcon 操作，将图标初始设置为通用的绿色： JavaScript chrome runtimesendMessage({ action: 'updateIcon', value: { color: 'green', }, }); 调用函数并执行调用 接下来，通过将你刚刚创建的函数添加到 C02Signal API 返回的 promise 中来调用它： JavaScript //let CO2 calculateColor(CO2); 最后，在 /dist/background js 中，为这些后台操作调用添加监听器： ```JavaScript chrome runtime onMessageaddListener(function (msg, sender, sendResponse) {\nif (msg action === 'updateIcon') {\nchrome browserAction setIcon({ imageData: drawIcon(msg value) });\n}\n});\n//borrowed from energy lollipop extension, nice feature function drawIcon(value) {\nlet canvas = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 11,
    "total_chunks": 14
  },
  {
    "id": "aa87ce5ab4ccdd76d099a2208b631e01",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "Edge 浏览器版本运行在 Chromium 浏览器引擎上，因此你可以利用这些工具。 注意，如果你想分析浏览器扩展，请从扩展本身启动开发者工具，因为它是一个独立的浏览器实例。 设置默认图标颜色 现在，在 init() 函数中，通过调用 chrome 的 updateIcon 操作，将图标初始设置为通用的绿色： JavaScript chrome runtimesendMessage({ action: 'updateIcon', value: { color: 'green', }, }); 调用函数并执行调用 接下来，通过将你刚刚创建的函数添加到 C02Signal API 返回的 promise 中来调用它： JavaScript //let CO2 calculateColor(CO2); 最后，在 /dist/background js 中，为这些后台操作调用添加监听器： ```JavaScript chrome runtime onMessageaddListener(function (msg, sender, sendResponse) { if (msg action === 'updateIcon') { chrome browserAction setIcon({ imageData: drawIcon(msg value) }); } }); //borrowed from energy lollipop extension, nice feature function drawIcon(value) { let canvas = documentcreateElement('canvas');\nlet context = canvas getContext('2d');\ncontext beginPath();\ncontext fillStyle = value color;\ncontext arc(100, 100, 50, 0, 2 * Math PI);\ncontext fill();\nreturn context",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 12,
    "total_chunks": 14
  },
  {
    "id": "6b321e0859532f298c118505b5eed77c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第3部分：了解后台任务和性能",
    "content": "接下来，通过将你刚刚创建的函数添加到 C02Signal API 返回的 promise 中来调用它： JavaScript //let CO2 calculateColor(CO2); 最后，在 /dist/background js 中，为这些后台操作调用添加监听器： ```JavaScript chrome runtime onMessageaddListener(function (msg, sender, sendResponse) { if (msg action === 'updateIcon') { chrome browserAction setIcon({ imageData: drawIcon(msg value) }); } }); //borrowed from energy lollipop extension, nice feature function drawIcon(value) { let canvas = documentcreateElement('canvas'); let context = canvas getContext('2d'); context beginPath(); context fillStyle = value color; context arc(100, 100, 50, 0, 2 * Math PI); context fill(); return contextgetImageData(50, 50, 100, 100);\n}\n```\n在这段代码中，你为任何发送到后台任务管理器的消息添加了一个监听器。如果消息名为 'updateIcon'，则运行接下来的代码，使用 Canvas API 绘制适当颜色的图标。\n✅ 你将在 太空游戏课程 中了解更多关于 Canvas API 的内容。\n现在，重新构建你的扩展（npm run build），刷新并启动你的扩展，观察颜色的变化。是时候去跑个腿或洗碗了吗？现在你知道了！\n恭喜你，你已经构建了一个有用的浏览器扩展，并进一步了解了浏览器的工作原理以及如何分析其性能。\n🚀 挑战\n调查一些存在已久的开源网站，并根据它们的 GitHub 历史，看看它们是否在这些年间进行了性能优化。如果有，最常见的痛点是什么？\n课后测验\n课后测验\n复习与自学\n考虑订阅一个 性能相关的新闻通讯\n通过浏览器的开发者工具中的性能选项卡，研究浏览器评估网页性能的一些方法。你发现了哪些主要差异？\n作业\n分析一个网站的性能\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9206,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\3-background-tasks-and-performance\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 712,
    "chunk_index": 13,
    "total_chunks": 14
  },
  {
    "id": "5608a12df79d2282843c9abb15d5fc39",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.hi.md",
    "source_type": "git_repo",
    "title": "Carbon Trigger 浏览器扩展：完整代码",
    "content": "Carbon Trigger 浏览器扩展：完整代码\n使用 tmrow 的 CO2 Signal API 来追踪电力使用情况，构建一个浏览器扩展，以便在您的浏览器中提醒您所在地区的电力使用负荷情况。通过使用这个扩展，您可以根据这些信息来决定自己的活动安排。\n开始\n您需要先安装 npm。将此代码的副本下载到您的计算机中的一个文件夹。\n安装所有必要的依赖包：\nnpm install\n使用 Webpack 构建扩展：\nnpm run build\n要在 Edge 浏览器中安装，请点击浏览器右上角的“三点”菜单，找到扩展面板。从那里选择“加载未打包的扩展”。在弹出的提示中，打开“dist”文件夹，扩展就会加载完成。要使用此扩展，您需要 CO2 Signal 的 API 密钥（通过电子邮件在此处获取 - 在页面上的框中输入您的电子邮件）以及 您所在地区的代码（例如，在波士顿，我使用的是“US-NEISO”）电力地图。\n一旦您在扩展界面中输入了 API 密钥和地区代码，浏览器扩展栏中的彩色点应该会根据您所在地区的能源使用情况发生变化，并为您提供一个指示器，告诉您哪些能源密集型活动适合进行。这个“点”的概念灵感来源于加州排放的 Energy Lollipop 扩展。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2343,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.hi.md",
      "source_type": "git_repo"
    },
    "token_count": 581,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3ec31005aad4b5194edb602b2c6b0583",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.it.md",
    "source_type": "git_repo",
    "title": "Carbon Trigger 浏览器扩展：启动代码",
    "content": "Carbon Trigger 浏览器扩展：启动代码\n我们将使用 tmrow 的 Signal CO2 API 来监控电力使用情况，创建一个浏览器扩展，以便直接在浏览器中提醒您所在地区的电力使用情况有多严重。使用这个定制扩展可以帮助您根据这些信息评估自己的活动。\n开始\n需要先安装 npm。将此代码下载到您电脑的一个文件夹中。\n安装所有所需的包：\nnpm install\n使用 webpack 构建扩展：\nnpm run build\n要在 Edge 上安装，请使用浏览器右上角的“三点”菜单找到扩展面板。如果尚未启用，请启用开发者模式（左下角）。选择“加载未打包”以加载新的扩展。在提示中打开“dist”文件夹，扩展将被加载。要使用它，您需要一个 CO2 Signal API 的 API 密钥（可以通过电子邮件获取 - 在页面上的框中输入您的电子邮件）以及与电力地图对应的区域代码（例如，在波士顿，代码为“US-NEISO”）。\n一旦在扩展界面中输入了 API 密钥和区域代码，浏览器扩展栏中的彩色点应该会根据该地区的能源使用情况发生变化，并提供指示哪些高能耗活动适合执行的建议。这个“点”系统的概念来源于加州排放的 Energy Lollipop 扩展。\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2333,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.it.md",
      "source_type": "git_repo"
    },
    "token_count": 566,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dff2e903d82a669d8ec2b4a2c05fc28a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "浏览器扩展项目第2部分：调用API，使用本地存储\n课前测验\n课前测验\n介绍\n在本课中，你将通过提交浏览器扩展的表单来调用API，并在浏览器扩展中显示结果。此外，你还将学习如何将数据存储在浏览器的本地存储中，以便将来参考和使用。\n✅ 按照适当文件中的编号段落，了解代码应放置的位置。\n设置扩展中需要操作的元素：\n到目前为止，你已经为浏览器扩展构建了表单和结果 <div> 的HTML。从现在开始，你需要在 /src/index js 文件中工作，并逐步构建你的扩展。参考上一课了解如何设置项目和构建流程。\n在 index js 文件中工作，首先创建一些 const 变量来保存与各个字段相关的值：\n```JavaScript\n// form fields\nconst form = document querySelector(' form-data');\nconst region = document querySelector(' region-name');\nconst apiKey = document querySelector(' api-key');\n// results\nconst errors = document querySelector(' errors');\nconst loading = document querySelector(' loading');\nconst results = document querySelector(' result-container');\nconst usage = document querySelector(' carbon-usage');\nconst fossilfuel = document querySelector(' fossil-fuel');\nconst myregion = document querySelector(' my-region');\nconst clearBtn = document querySelector(' clear-btn');\n```\n所有这些字段都是通过它们的CSS类引用的，这是你在上一课的HTML中设置的。\n添加监听器\n接下来，为表单和重置按钮添加事件监听器，这样当用户提交表单或点击重置按钮时，会触发相应的操作，并在文件底部添加初始化应用的调用：\nJavaScript\nform addEventListener('submit', (e) => handleSubmit(e));\nclearBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 25
  },
  {
    "id": "852bf171cc417bb2356f2217fd640415",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "// form fields const form = document querySelector(' form-data'); const region = document querySelector(' region-name'); const apiKey = document querySelector(' api-key'); // results const errors = document querySelector(' errors'); const loading = document querySelector(' loading'); const results = document querySelector(' result-container'); const usage = document querySelector(' carbon-usage'); const fossilfuel = document querySelector(' fossil-fuel'); const myregion = document querySelector(' my-region'); const clearBtn = document querySelector(' clear-btn'); ``` 所有这些字段都是通过它们的CSS类引用的，这是你在上一课的HTML中设置的。 添加监听器 接下来，为表单和重置按钮添加事件监听器，这样当用户提交表单或点击重置按钮时，会触发相应的操作，并在文件底部添加初始化应用的调用： JavaScript form addEventListener('submit', (e) => handleSubmit(e)); clearBtnaddEventListener('click', (e) => reset(e));\ninit();\n✅ 注意这里使用的简写方式来监听提交或点击事件，以及事件如何传递给 handleSubmit 或 reset 函数。你能用更长的格式写出这个简写的等价代码吗？你更喜欢哪种方式？\n构建 init() 函数和 reset() 函数：\n现在你将构建初始化扩展的函数，即 init()：\n```JavaScript\nfunction init() {\n//if anything is in localStorage, pick it up\nconst storedApiKey = localStorage getItem('apiKey');\nconst storedRegion = localStorage getItem('regionName');\n//set icon to be generic green\n//todo\nif (storedApiKey === null || storedRegion === null) {\n//if we don't have the keys, show the form\nform style display = 'block';\nresults style display = 'none';\nloading style display = 'none';\nclearBtn style display = 'none';\nerrors textContent = '';\n} else {\n//if we have saved keys/regions in localStorage, show results when they load\ndisplayCarbonUsage(storedApiKey, storedRegion);\nresults style display = 'none';\nform style display = 'none';\nclearBtn style display = 'block';\n}\n};\nfunction reset(e) {\ne preventDefault();\n//clear local storage for region only\nlocalStorage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 25
  },
  {
    "id": "8d0bd5f5480795eac36ac3c7b0391409",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "have the keys, show the form form style display = 'block'; results style display = 'none'; loading style display = 'none'; clearBtn style display = 'none'; errors textContent = ''; } else { //if we have saved keys/regions in localStorage, show results when they load displayCarbonUsage(storedApiKey, storedRegion); results style display = 'none'; form style display = 'none'; clearBtn style display = 'block'; } }; function reset(e) { e preventDefault(); //clear local storage for region only localStorageremoveItem('regionName');\ninit();\n}\n```\n在这个函数中，有一些有趣的逻辑。阅读代码后，你能看出发生了什么吗？\n设置两个 const 来检查用户是否在本地存储中保存了 APIKey 和区域代码。\n如果其中任何一个为 null，通过将表单的样式更改为 'block' 来显示表单。\n隐藏结果、加载状态和 clearBtn，并将任何错误文本设置为空字符串。\n如果存在 key 和 region，则启动一个流程：\n调用API获取碳使用数据。\n隐藏结果区域。\n隐藏表单。\n显示重置按钮。\n在继续之前，了解浏览器中一个非常重要的概念是很有用的：LocalStorage。LocalStorage 是一种以 key-value 对的形式在浏览器中存储字符串的有用方式。这种类型的Web存储可以通过JavaScript操作来管理浏览器中的数据。LocalStorage 不会过期，而另一种Web存储 SessionStorage 会在浏览器关闭时清除。这些存储类型在使用上各有优缺点。\n注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。\n你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。\n✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。\n注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。\n在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。\n处理表单提交\n创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKey",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 768,
    "chunk_index": 2,
    "total_chunks": 25
  },
  {
    "id": "de6d9f3579e7d4de19a9b5354be32594",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "local storage for region only localStorageremoveItem('regionName'); init(); } ``` 在这个函数中，有一些有趣的逻辑。阅读代码后，你能看出发生了什么吗？ 设置两个 const 来检查用户是否在本地存储中保存了 APIKey 和区域代码。 如果其中任何一个为 null，通过将表单的样式更改为 'block' 来显示表单。 隐藏结果、加载状态和 clearBtn，并将任何错误文本设置为空字符串。 如果存在 key 和 region，则启动一个流程： 调用API获取碳使用数据。 隐藏结果区域。 隐藏表单。 显示重置按钮。 在继续之前，了解浏览器中一个非常重要的概念是很有用的：LocalStorage。LocalStorage 是一种以 key-value 对的形式在浏览器中存储字符串的有用方式。这种类型的Web存储可以通过JavaScript操作来管理浏览器中的数据。LocalStorage 不会过期，而另一种Web存储 SessionStorage 会在浏览器关闭时清除。这些存储类型在使用上各有优缺点。 注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 region",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 3,
    "total_chunks": 25
  },
  {
    "id": "c279e8ca74f77a0d8bf54278d5cf39c0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "for region only localStorageremoveItem('regionName'); init(); } ``` 在这个函数中，有一些有趣的逻辑。阅读代码后，你能看出发生了什么吗？ 设置两个 const 来检查用户是否在本地存储中保存了 APIKey 和区域代码。 如果其中任何一个为 null，通过将表单的样式更改为 'block' 来显示表单。 隐藏结果、加载状态和 clearBtn，并将任何错误文本设置为空字符串。 如果存在 key 和 region，则启动一个流程： 调用API获取碳使用数据。 隐藏结果区域。 隐藏表单。 显示重置按钮。 在继续之前，了解浏览器中一个非常重要的概念是很有用的：LocalStorage。LocalStorage 是一种以 key-value 对的形式在浏览器中存储字符串的有用方式。这种类型的Web存储可以通过JavaScript操作来管理浏览器中的数据。LocalStorage 不会过期，而另一种Web存储 SessionStorage 会在浏览器关闭时清除。这些存储类型在使用上各有优缺点。 注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。\nJavaScript\nfunction handleSubmit(e) {\ne",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 705,
    "chunk_index": 4,
    "total_chunks": 25
  },
  {
    "id": "dbe2deba8de443ebc6542980ad654aca",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "} ``` 在这个函数中，有一些有趣的逻辑。阅读代码后，你能看出发生了什么吗？ 设置两个 const 来检查用户是否在本地存储中保存了 APIKey 和区域代码。 如果其中任何一个为 null，通过将表单的样式更改为 'block' 来显示表单。 隐藏结果、加载状态和 clearBtn，并将任何错误文本设置为空字符串。 如果存在 key 和 region，则启动一个流程： 调用API获取碳使用数据。 隐藏结果区域。 隐藏表单。 显示重置按钮。 在继续之前，了解浏览器中一个非常重要的概念是很有用的：LocalStorage。LocalStorage 是一种以 key-value 对的形式在浏览器中存储字符串的有用方式。这种类型的Web存储可以通过JavaScript操作来管理浏览器中的数据。LocalStorage 不会过期，而另一种Web存储 SessionStorage 会在浏览器关闭时清除。这些存储类型在使用上各有优缺点。 注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault();\nsetUpUser(apiKey",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 695,
    "chunk_index": 5,
    "total_chunks": 25
  },
  {
    "id": "81d466b509bad78e918d71a1de51bc5b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "``` 在这个函数中，有一些有趣的逻辑。阅读代码后，你能看出发生了什么吗？ 设置两个 const 来检查用户是否在本地存储中保存了 APIKey 和区域代码。 如果其中任何一个为 null，通过将表单的样式更改为 'block' 来显示表单。 隐藏结果、加载状态和 clearBtn，并将任何错误文本设置为空字符串。 如果存在 key 和 region，则启动一个流程： 调用API获取碳使用数据。 隐藏结果区域。 隐藏表单。 显示重置按钮。 在继续之前，了解浏览器中一个非常重要的概念是很有用的：LocalStorage。LocalStorage 是一种以 key-value 对的形式在浏览器中存储字符串的有用方式。这种类型的Web存储可以通过JavaScript操作来管理浏览器中的数据。LocalStorage 不会过期，而另一种Web存储 SessionStorage 会在浏览器关闭时清除。这些存储类型在使用上各有优缺点。 注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, region",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 697,
    "chunk_index": 6,
    "total_chunks": 25
  },
  {
    "id": "5d29e0154c75ae979d8239d6a55bb862",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "在这个函数中，有一些有趣的逻辑。阅读代码后，你能看出发生了什么吗？ 设置两个 const 来检查用户是否在本地存储中保存了 APIKey 和区域代码。 如果其中任何一个为 null，通过将表单的样式更改为 'block' 来显示表单。 隐藏结果、加载状态和 clearBtn，并将任何错误文本设置为空字符串。 如果存在 key 和 region，则启动一个流程： 调用API获取碳使用数据。 隐藏结果区域。 隐藏表单。 显示重置按钮。 在继续之前，了解浏览器中一个非常重要的概念是很有用的：LocalStorage。LocalStorage 是一种以 key-value 对的形式在浏览器中存储字符串的有用方式。这种类型的Web存储可以通过JavaScript操作来管理浏览器中的数据。LocalStorage 不会过期，而另一种Web存储 SessionStorage 会在浏览器关闭时清除。这些存储类型在使用上各有优缺点。 注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue);\n}\n✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。\n设置用户\n接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数：\nJavaScript\nfunction setUpUser(apiKey, regionName) {\nlocalStorage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 818,
    "chunk_index": 7,
    "total_chunks": 25
  },
  {
    "id": "2b9e0933d29769052e5e3f11a086ffd8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "SessionStorage 会在浏览器关闭时清除。这些存储类型在使用上各有优缺点。 注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey);\nlocalStorage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 574,
    "chunk_index": 8,
    "total_chunks": 25
  },
  {
    "id": "71469b9eaf8ab43d9e0707937d7315e7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "注意 - 你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName);\nloading",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 9,
    "total_chunks": 25
  },
  {
    "id": "635d88b5ed62346eff8cb5bae543f41a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyle",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 553,
    "chunk_index": 10,
    "total_chunks": 25
  },
  {
    "id": "33c160c719f38cf1093cb54d8a3cbaaf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "你的浏览器扩展有自己的本地存储；主浏览器窗口是一个不同的实例，行为是独立的。 你可以将 APIKey 设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block';\nerrors",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 559,
    "chunk_index": 11,
    "total_chunks": 25
  },
  {
    "id": "e4ddfbf786617df1daa9890de172c8a7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "设置为一个字符串值，例如，你可以通过“检查”网页（右键单击浏览器以检查）并转到 Applications 选项卡查看存储内容，来查看它在 Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = '';\nclearBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 12,
    "total_chunks": 25
  },
  {
    "id": "abc42a1dd433216ddb7ec965527ed027",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyle",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 13,
    "total_chunks": 25
  },
  {
    "id": "4edc003c842ae0616b74c98dd8348268",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "Edge 中的设置。 ✅ 思考哪些情况下你不应该将某些数据存储在 LocalStorage 中。通常，将 API Key 放在 LocalStorage 中是一个坏主意！你能明白为什么吗？在我们的案例中，由于我们的应用仅用于学习，不会部署到应用商店，因此我们将使用这种方法。 注意，你使用 Web API 来操作 LocalStorage，可以通过 getItem()、setItem() 或 removeItem() 来实现。它在各大浏览器中都得到了广泛支持。 在构建 displayCarbonUsage() 函数（在 init() 中调用）之前，让我们先构建处理初始表单提交的功能。 处理表单提交 创建一个名为 handleSubmit 的函数，该函数接受一个事件参数 (e)。阻止事件传播（在本例中，我们希望阻止浏览器刷新）并调用一个新函数 setUpUser，传入参数 apiKeyvalue 和 regionvalue。通过这种方式，你可以使用通过初始表单填充的两个值。 JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block';\n//make initial call\ndisplayCarbonUsage(apiKey, regionName);\n}\n此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！\n显示碳使用情况\n最后，是时候查询API了！\n在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。\n✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？\n关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。\n这里有一个关于 async 的简短视频：\n🎥 点击上方图片观看关于 async/await 的视频。\n创建一个新函数来查询 C02Signal API：\n```JavaScript\nimport axios from '",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 830,
    "chunk_index": 14,
    "total_chunks": 25
  },
  {
    "id": "cb6c1bf67b20dc2cc1f8e895a88a8ca8",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "JavaScript function handleSubmit(e) { epreventDefault(); setUpUser(apiKeyvalue, regionvalue); } ✅ 回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block'; //make initial call displayCarbonUsage(apiKey, regionName); } 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios';\nasync function displayCarbonUsage(apiKey, region) {\ntry {\nawait axios",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 564,
    "chunk_index": 15,
    "total_chunks": 25
  },
  {
    "id": "b69831454db3eb1037e1a36deea57cde",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block'; //make initial call displayCarbonUsage(apiKey, regionName); } 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://api",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 546,
    "chunk_index": 16,
    "total_chunks": 25
  },
  {
    "id": "5b897ee2e1a915d0f901b87a3af6155a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block'; //make initial call displayCarbonUsage(apiKey, regionName); } 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://apico2signal",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 549,
    "chunk_index": 17,
    "total_chunks": 25
  },
  {
    "id": "a36de32cc9ccc5a877e0367f7e7275af",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "回顾一下 - 你在上一课中设置的HTML有两个输入字段，其 values 是通过你在文件顶部设置的 const 捕获的，并且它们都是 required 的，因此浏览器会阻止用户输入空值。 设置用户 接下来是 setUpUser 函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block'; //make initial call displayCarbonUsage(apiKey, regionName); } 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://apico2signalcom/v1/latest', {\nparams: {\ncountryCode: region,\n},\nheaders: {\n'auth-token': apiKey,\n},\n})",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 575,
    "chunk_index": 18,
    "total_chunks": 25
  },
  {
    "id": "96c8988515247b62294fca6bb1c1057b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "函数，这里你将为 apiKey 和 regionName 设置本地存储值。添加一个新函数： JavaScript function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block'; //make initial call displayCarbonUsage(apiKey, regionName); } 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://apico2signalcom/v1/latest', { params: { countryCode: region, }, headers: { 'auth-token': apiKey, }, })then((response) => {\nlet CO2 = Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 19,
    "total_chunks": 25
  },
  {
    "id": "784778897b04eab6cef321439fc05c65",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "function setUpUser(apiKey, regionName) { localStoragesetItem('apiKey', apiKey); localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block'; //make initial call displayCarbonUsage(apiKey, regionName); } 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://apico2signalcom/v1/latest', { params: { countryCode: region, }, headers: { 'auth-token': apiKey, }, })then((response) => { let CO2 = Mathfloor(response data data carbonIntensity);\n//calculateColor(CO2);\nloading style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 20,
    "total_chunks": 25
  },
  {
    "id": "e32e4471970676481e4fc7eb19c3368f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "localStoragesetItem('regionName', regionName); loadingstyledisplay = 'block'; errorstextContent = ''; clearBtnstyledisplay = 'block'; //make initial call displayCarbonUsage(apiKey, regionName); } 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://apico2signalcom/v1/latest', { params: { countryCode: region, }, headers: { 'auth-token': apiKey, }, })then((response) => { let CO2 = Mathfloor(response data data carbonIntensity); //calculateColor(CO2); loading styledisplay = 'none';\nform style display = 'none';\nmyregion textContent = region;\nusage textContent =\nMath round(response",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 21,
    "total_chunks": 25
  },
  {
    "id": "0fb1609a06a1b0d4fa46a3125878f1fa",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "} 此函数在调用API时显示加载消息。到此为止，你已经到达了创建此浏览器扩展最重要功能的阶段！ 显示碳使用情况 最后，是时候查询API了！ 在进一步操作之前，我们应该讨论一下API。API，即应用程序编程接口，是Web开发人员工具箱中的关键元素。它们为程序之间的交互和接口提供了标准方式。例如，如果你正在构建一个需要查询数据库的网站，可能有人已经为你创建了一个API。虽然有许多类型的API，但最流行的一种是REST API。 ✅ “REST” 代表“表述性状态转移”，其特点是使用各种配置的URL来获取数据。研究一下开发人员可用的各种类型的API。哪种格式最吸引你？ 关于此函数，有几点需要注意。首先，注意 async 关键字。将函数编写为异步运行意味着它会等待某个操作（例如数据返回）完成后再继续。 这里有一个关于 async 的简短视频： 🎥 点击上方图片观看关于 async/await 的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://apico2signalcom/v1/latest', { params: { countryCode: region, }, headers: { 'auth-token': apiKey, }, })then((response) => { let CO2 = Mathfloor(response data data carbonIntensity); //calculateColor(CO2); loading styledisplay = 'none'; form style display = 'none'; myregion textContent = region; usage textContent = Math round(responsedata data carbonIntensity) + ' grams (grams C02 emitted per kilowatt hour)';\nfossilfuel textContent =\nresponse data data fossilFuelPercentage",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 22,
    "total_chunks": 25
  },
  {
    "id": "00aa68944f75e2a34dd176f3bd1494fc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "的视频。 创建一个新函数来查询 C02Signal API： ```JavaScript import axios from '/node_modules/axios'; async function displayCarbonUsage(apiKey, region) { try { await axiosget('https://apico2signalcom/v1/latest', { params: { countryCode: region, }, headers: { 'auth-token': apiKey, }, })then((response) => { let CO2 = Mathfloor(response data data carbonIntensity); //calculateColor(CO2); loading styledisplay = 'none'; form style display = 'none'; myregion textContent = region; usage textContent = Math round(responsedata data carbonIntensity) + ' grams (grams C02 emitted per kilowatt hour)'; fossilfuel textContent = response data data fossilFuelPercentagetoFixed(2) +\n'% (percentage of fossil fuels used to generate electricity)';\nresults style display = 'block';\n});\n} catch (error) {\nconsole log(error);\nloading style display = 'none';\nresults style display = 'none';\nerrors textContent = 'Sorry, we have no data for the region you have requested",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 23,
    "total_chunks": 25
  },
  {
    "id": "2a0485fe5b6534a01136ff268780117a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
    "source_type": "git_repo",
    "title": "浏览器扩展项目第2部分：调用API，使用本地存储",
    "content": "display = 'none'; myregion textContent = region; usage textContent = Math round(responsedata data carbonIntensity) + ' grams (grams C02 emitted per kilowatt hour)'; fossilfuel textContent = response data data fossilFuelPercentagetoFixed(2) + '% (percentage of fossil fuels used to generate electricity)'; results style display = 'block'; }); } catch (error) { console log(error); loading style display = 'none'; results style display = 'none'; errors textContent = 'Sorry, we have no data for the region you have requested';\n}\n}\n```\n这是一个较大的函数。这里发生了什么？\n遵循最佳实践，你使用了 async 关键字使此函数异步运行。该函数包含一个 try/catch 块，因为当API返回数据时，它会返回一个Promise。由于你无法控制API响应的速度（它可能根本不响应！），你需要通过异步调用来处理这种不确定性。\n你正在查询 co2signal API 以获取你所在区域的数据，使用你的 API Key。要使用该密钥，你需要在请求头参数中使用一种身份验证方式。\n一旦API响应，你将其响应数据的各个元素分配给你设置的屏幕部分以显示这些数据。\n如果出现错误，或者没有结果，你会显示一条错误消息。\n✅ 使用异步编程模式是工具箱中另一个非常有用的工具。阅读关于配置此类代码的各种方式。\n恭喜！如果你构建了扩展（npm run build）并在扩展面板中刷新它，你就有了一个可用的扩展！唯一未完成的是图标，你将在下一课中修复它。\n🚀 挑战\n在这些课程中，我们已经讨论了几种类型的API。选择一个Web API，深入研究它提供的功能。例如，查看浏览器中可用的API，如HTML拖放API。在你看来，什么样的API是优秀的？\n课后测验\n课后测验\n复习与自学\n在本课中，你学习了 LocalStorage 和 API，这两者对专业的Web开发人员都非常有用。你能想到这两者如何协同工作吗？思考一下如何设计一个网站，将项目存储起来以供API使用。\n作业\n采用一个API\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11673,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\2-forms-browsers-local-storage\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 780,
    "chunk_index": 24,
    "total_chunks": 25
  },
  {
    "id": "90c81301d5b77c8b7d2062a9f6791308",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.ja.md",
    "source_type": "git_repo",
    "title": "碳触发浏览器扩展：完成的代码",
    "content": "碳触发浏览器扩展：完成的代码\n使用 tmrow 的 C02 Signal API 构建一个浏览器扩展，以追踪电力使用情况，并在浏览器中显示您所在地区的电力使用量作为提醒。通过使用此扩展，您可以根据这些信息来判断自己的活动。\n开始\n您需要安装 npm。请将此代码的副本下载到您电脑上的一个文件夹中。\n安装所有必要的依赖包。\nnpm install\n使用 webpack 构建扩展。\nnpm run build\n要在 Edge 中安装，请在浏览器右上角的“三点”菜单中找到“扩展”面板。从那里选择“加载未打包的扩展”，然后加载新的扩展。在提示中打开“dist”文件夹，扩展就会被加载。要使用此扩展，您需要 CO2 Signal API 的 API 密钥（通过电子邮件获取一个 - 在该页面的框中输入您的电子邮件），以及 Electricity Map 对应的 您所在地区的代码（例如，在波士顿使用 'US-NEISO'）。\n在扩展界面中输入 API 密钥和地区代码后，浏览器扩展栏中显示的彩色圆点会发生变化，反映您所在地区的能源使用情况，并指示适合进行哪些需要能源的活动。这种“圆点”系统的概念来源于加州排放量的 Energy Lollipop 扩展。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2314,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.ja.md",
      "source_type": "git_repo"
    },
    "token_count": 561,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0bb93c31e8b0f0f372ee21c11322978f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\solution\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "这是一个占位符，故意留空\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 691,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 152,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f599daedd46c775f3a3bcf55ad4fa81",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.ms.md",
    "source_type": "git_repo",
    "title": "Carbon Trigger 浏览器扩展：完整代码",
    "content": "Carbon Trigger 浏览器扩展：完整代码\n利用 tmrow 的 CO2 Signal API 检测电力使用情况，构建一个浏览器扩展，让您可以在浏览器中收到关于所在地区电力使用情况的提醒。使用这个扩展可以帮助您根据这些信息更好地规划自己的活动。\n从这里开始\n您需要安装 npm。将此代码的副本下载到您电脑上的一个文件夹中。\n安装所有必要的包：\nnpm install\n使用 webpack 构建扩展：\nnpm run build\n要在 Edge 中安装，请使用浏览器右上角的“三点菜单”找到扩展面板。从那里选择“加载未打包的扩展”以加载新的扩展。根据提示打开“dist”文件夹，扩展将被加载。要使用它，您需要一个 CO2 Signal API 的 API 密钥（通过电子邮件获取一个 - 在页面上的框中输入您的电子邮件）以及一个与 Electricity Map 匹配的地区代码 (查看地区代码)。例如，在波士顿，我使用的是“US-NEISO”。\n在扩展界面中输入 API 密钥和地区代码后，浏览器扩展栏中的彩色点将会根据您所在地区的能源使用情况发生变化，并为您提供建议，帮助您决定是否进行高耗能活动。这个“彩色点”系统的概念来源于 Energy Lollipop 浏览器扩展，该扩展专为加州的排放情况设计。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而引起的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2391,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\5-browser-extension\\solution\\translation\\README.ms.md",
      "source_type": "git_repo"
    },
    "token_count": 588,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9f550b5cda877ede2f8910e3ebcf9bc6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\assignment.md",
    "source_type": "git_repo",
    "title": "创建一个新的键盘游戏",
    "content": "创建一个新的键盘游戏\n说明\n创建一个使用键盘事件完成任务的小型游戏。它可以是不同类型的打字游戏，也可以是通过按键在屏幕上绘制像素的艺术类游戏。发挥创意吧！\n评分标准\n| 标准     | 卓越表现                 | 基本达标                 | 需要改进         |\n| -------- | ------------------------ | ------------------------ | ---------------- |\n|          | 提供了一个完整的游戏     | 游戏非常简单             | 游戏存在问题     |\n|          |                          |                          |                  |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1313,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f03e90ef6f92ffb553722725610d4f32",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\assignment.md",
    "source_type": "git_repo",
    "title": "练习 HTML：构建博客模型",
    "content": "练习 HTML：构建博客模型\n说明\n想象一下你正在设计或重新设计你个人的网站。创建一个网站的图形模型，然后写下你将用来构建网站各个元素的 HTML 标记。你可以在纸上完成并扫描，或者使用你选择的软件，只需确保手动编写 HTML 标记。\n评分标准\n| 标准     | 卓越表现                                                                 | 合格表现                                                             | 需要改进                                                                 |\n| -------- | ----------------------------------------------------------------------- | -------------------------------------------------------------------- | ------------------------------------------------------------------------ |\n|          | 博客布局以视觉形式呈现，并显示至少 10 个标记元素                        | 博客布局以视觉形式呈现，并显示大约 5 个标记元素                      | 博客布局以视觉形式呈现，并显示最多 3 个标记元素                          |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1794,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1d8dabf56bd6b5eb035f46ca233e28fd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\assignment.md",
    "source_type": "git_repo",
    "title": "CSS 重构",
    "content": "CSS 重构\n说明\n使用 Flexbox 或 CSS Grid 重新设计植物箱样式，并截图以证明您已在多个浏览器上进行了测试。您可能需要修改标记，因此请创建一个新的应用版本，并将艺术作品放置到位以进行重构。暂时不需要让元素可拖动；目前只需重构 HTML 和 CSS。\n评分标准\n| 标准     | 卓越表现                                                         | 合格表现                      | 需要改进                            |\n| -------- | ----------------------------------------------------------------- | ----------------------------- | ------------------------------------ |\n|          | 使用 Flexbox 或 CSS Grid 完全重新设计植物箱样式                   | 仅重新设计部分元素样式        | 未能重新设计植物箱样式              |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1538,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "51551c52d7e2cd45f2c555f776f6a42d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
    "source_type": "git_repo",
    "title": "Welcome to my Virtual Terrarium",
    "content": "Terrarium 项目第一部分：HTML 入门\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n查看视频\n简介\nHTML（超文本标记语言）是网页的“骨架”。如果说 CSS 是为 HTML“穿衣服”，JavaScript 是让它“活起来”，那么 HTML 就是网页应用的“身体”。HTML 的语法甚至反映了这一点，因为它包含了“head”、“body”和“footer”等标签。\n在本课中，我们将使用 HTML 来布局虚拟生态瓶界面的“骨架”。界面将包括一个标题和三个列：左右两侧的列放置可拖动的植物，中间区域将是实际的玻璃生态瓶。到本课结束时，你将能够看到列中的植物，但界面看起来会有点奇怪；别担心，在下一节中，你将添加 CSS 样式来让界面看起来更美观。\n任务\n在你的电脑上创建一个名为“terrarium”的文件夹，并在其中创建一个名为“index html”的文件。你可以在 Visual Studio Code 中完成此操作：创建 terrarium 文件夹后，打开一个新的 VS Code 窗口，点击“打开文件夹”，导航到你的新文件夹。然后点击资源管理器面板中的小“文件”按钮，创建新文件：\n或者\n使用以下命令在 git bash 中完成：\n* mkdir terrarium\n* cd terrarium\n* touch index html\n* code index html 或 nano index html\nindex html 文件告诉浏览器它是文件夹中的默认文件；例如，https://anysite",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11534,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "f3e1abee700f8130a403bb0f89731abf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
    "source_type": "git_repo",
    "title": "Welcome to my Virtual Terrarium",
    "content": "Terrarium 项目第一部分：HTML 入门\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n查看视频\n简介\nHTML（超文本标记语言）是网页的“骨架”。如果说 CSS 是为 HTML“穿衣服”，JavaScript 是让它“活起来”，那么 HTML 就是网页应用的“身体”。HTML 的语法甚至反映了这一点，因为它包含了“head”、“body”和“footer”等标签。\n在本课中，我们将使用 HTML 来布局虚拟生态瓶界面的“骨架”。界面将包括一个标题和三个列：左右两侧的列放置可拖动的植物，中间区域将是实际的玻璃生态瓶。到本课结束时，你将能够看到列中的植物，但界面看起来会有点奇怪；别担心，在下一节中，你将添加 CSS 样式来让界面看起来更美观。\n任务\n在你的电脑上创建一个名为“terrarium”的文件夹，并在其中创建一个名为“index html”的文件。你可以在 Visual Studio Code 中完成此操作：创建 terrarium 文件夹后，打开一个新的 VS Code 窗口，点击“打开文件夹”，导航到你的新文件夹。然后点击资源管理器面板中的小“文件”按钮，创建新文件：\n或者\n使用以下命令在 git bash 中完成：\n* mkdir terrarium\n* cd terrarium\n* touch index html\n* code index html 或 nano index html\nindex html 文件告诉浏览器它是文件夹中的默认文件；例如，https://anysitecom/test 可能是通过一个文件夹结构构建的，其中包括一个名为 test 的文件夹，里面有 index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11534,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "a6332a90897f58bddf99bac8525ce3cc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
    "source_type": "git_repo",
    "title": "Welcome to my Virtual Terrarium",
    "content": "Terrarium 项目第一部分：HTML 入门\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n查看视频\n简介\nHTML（超文本标记语言）是网页的“骨架”。如果说 CSS 是为 HTML“穿衣服”，JavaScript 是让它“活起来”，那么 HTML 就是网页应用的“身体”。HTML 的语法甚至反映了这一点，因为它包含了“head”、“body”和“footer”等标签。\n在本课中，我们将使用 HTML 来布局虚拟生态瓶界面的“骨架”。界面将包括一个标题和三个列：左右两侧的列放置可拖动的植物，中间区域将是实际的玻璃生态瓶。到本课结束时，你将能够看到列中的植物，但界面看起来会有点奇怪；别担心，在下一节中，你将添加 CSS 样式来让界面看起来更美观。\n任务\n在你的电脑上创建一个名为“terrarium”的文件夹，并在其中创建一个名为“index html”的文件。你可以在 Visual Studio Code 中完成此操作：创建 terrarium 文件夹后，打开一个新的 VS Code 窗口，点击“打开文件夹”，导航到你的新文件夹。然后点击资源管理器面板中的小“文件”按钮，创建新文件：\n或者\n使用以下命令在 git bash 中完成：\n* mkdir terrarium\n* cd terrarium\n* touch index html\n* code index html 或 nano index html\nindex html 文件告诉浏览器它是文件夹中的默认文件；例如，https://anysitecom/test 可能是通过一个文件夹结构构建的，其中包括一个名为 test 的文件夹，里面有 indexhtml 文件；URL 中不一定会显示 index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11534,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "5a7a8743cb6f767fa45fafa32d442ae1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
    "source_type": "git_repo",
    "title": "Welcome to my Virtual Terrarium",
    "content": "Terrarium 项目第一部分：HTML 入门\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n查看视频\n简介\nHTML（超文本标记语言）是网页的“骨架”。如果说 CSS 是为 HTML“穿衣服”，JavaScript 是让它“活起来”，那么 HTML 就是网页应用的“身体”。HTML 的语法甚至反映了这一点，因为它包含了“head”、“body”和“footer”等标签。\n在本课中，我们将使用 HTML 来布局虚拟生态瓶界面的“骨架”。界面将包括一个标题和三个列：左右两侧的列放置可拖动的植物，中间区域将是实际的玻璃生态瓶。到本课结束时，你将能够看到列中的植物，但界面看起来会有点奇怪；别担心，在下一节中，你将添加 CSS 样式来让界面看起来更美观。\n任务\n在你的电脑上创建一个名为“terrarium”的文件夹，并在其中创建一个名为“index html”的文件。你可以在 Visual Studio Code 中完成此操作：创建 terrarium 文件夹后，打开一个新的 VS Code 窗口，点击“打开文件夹”，导航到你的新文件夹。然后点击资源管理器面板中的小“文件”按钮，创建新文件：\n或者\n使用以下命令在 git bash 中完成：\n* mkdir terrarium\n* cd terrarium\n* touch index html\n* code index html 或 nano index html\nindex html 文件告诉浏览器它是文件夹中的默认文件；例如，https://anysitecom/test 可能是通过一个文件夹结构构建的，其中包括一个名为 test 的文件夹，里面有 indexhtml 文件；URL 中不一定会显示 indexhtml。\nDocType 和 html 标签\nHTML 文件的第一行是它的 DocType。这行代码需要放在文件的最顶部，虽然看起来有点奇怪，但它告诉旧版浏览器需要以标准模式渲染页面，并遵循当前的 HTML 规范。\n提示：在 VS Code 中，你可以将鼠标悬停在标签上，查看 MDN 参考指南中关于其用途的信息。\n第二行应该是 <html> 标签的开始标签，紧接着是它的结束标签 </html>。这些标签是界面的根元素。\n任务\n在你的 index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11534,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 694,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "41e0a855cdca06fb2b39edf26e256601",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
    "source_type": "git_repo",
    "title": "Welcome to my Virtual Terrarium",
    "content": "是让它“活起来”，那么 HTML 就是网页应用的“身体”。HTML 的语法甚至反映了这一点，因为它包含了“head”、“body”和“footer”等标签。 在本课中，我们将使用 HTML 来布局虚拟生态瓶界面的“骨架”。界面将包括一个标题和三个列：左右两侧的列放置可拖动的植物，中间区域将是实际的玻璃生态瓶。到本课结束时，你将能够看到列中的植物，但界面看起来会有点奇怪；别担心，在下一节中，你将添加 CSS 样式来让界面看起来更美观。 任务 在你的电脑上创建一个名为“terrarium”的文件夹，并在其中创建一个名为“index html”的文件。你可以在 Visual Studio Code 中完成此操作：创建 terrarium 文件夹后，打开一个新的 VS Code 窗口，点击“打开文件夹”，导航到你的新文件夹。然后点击资源管理器面板中的小“文件”按钮，创建新文件： 或者 使用以下命令在 git bash 中完成： * mkdir terrarium * cd terrarium * touch index html * code index html 或 nano index html index html 文件告诉浏览器它是文件夹中的默认文件；例如，https://anysitecom/test 可能是通过一个文件夹结构构建的，其中包括一个名为 test 的文件夹，里面有 indexhtml 文件；URL 中不一定会显示 indexhtml。 DocType 和 html 标签 HTML 文件的第一行是它的 DocType。这行代码需要放在文件的最顶部，虽然看起来有点奇怪，但它告诉旧版浏览器需要以标准模式渲染页面，并遵循当前的 HTML 规范。 提示：在 VS Code 中，你可以将鼠标悬停在标签上，查看 MDN 参考指南中关于其用途的信息。 第二行应该是 <html> 标签的开始标签，紧接着是它的结束标签 </html>。这些标签是界面的根元素。 任务 在你的 indexhtml 文件顶部添加以下代码：\n```HTML\n```\n✅ 通过设置 DocType 的查询字符串可以确定几种不同的模式：Quirks 模式和标准模式。这些模式用于支持非常旧的浏览器（如 Netscape Navigator 4 和 Internet Explorer 5），但现在通常不再使用。你可以坚持使用标准的 DocType 声明。\n文档的 'head'\nHTML 文档的 'head' 区域包含关于网页的重要信息，也称为 元数据。在我们的例子中，我们告诉将渲染此页面的网络服务器以下四件事：\n网页的标题\n页面元数据，包括：\n字符集，指示页面使用的字符编码\n浏览器信息，包括 x-ua-compatible，指示支持 IE=edge 浏览器\n关于视口在加载时如何表现的信息。将视口设置为初始缩放比例为 1，可以控制页面首次加载时的缩放级别。\n任务\n在 <html> 标签的开始和结束标签之间添加一个 'head' 块。\nhtml\n<head>\n<title>Welcome to my Virtual Terrarium</title>\n<meta charset=\"utf-8\" />\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n</head>\n✅ 如果你像这样设置视口元标签：<meta name=\"viewport\" content=\"width=600\">，会发生什么？阅读更多关于 视口 的内容。\n文档的 body\nHTML 标签\n在 HTML 中，你可以在",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11534,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1019,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "ea249d7abfb60749baee844add9c38b5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
    "source_type": "git_repo",
    "title": "Welcome to my Virtual Terrarium",
    "content": "</html>。这些标签是界面的根元素。 任务 在你的 indexhtml 文件顶部添加以下代码： ```HTML ``` ✅ 通过设置 DocType 的查询字符串可以确定几种不同的模式：Quirks 模式和标准模式。这些模式用于支持非常旧的浏览器（如 Netscape Navigator 4 和 Internet Explorer 5），但现在通常不再使用。你可以坚持使用标准的 DocType 声明。 文档的 'head' HTML 文档的 'head' 区域包含关于网页的重要信息，也称为 元数据。在我们的例子中，我们告诉将渲染此页面的网络服务器以下四件事： 网页的标题 页面元数据，包括： 字符集，指示页面使用的字符编码 浏览器信息，包括 x-ua-compatible，指示支持 IE=edge 浏览器 关于视口在加载时如何表现的信息。将视口设置为初始缩放比例为 1，可以控制页面首次加载时的缩放级别。 任务 在 <html> 标签的开始和结束标签之间添加一个 'head' 块。 html <head> <title>Welcome to my Virtual Terrarium</title> <meta charset=\"utf-8\" /> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /> </head> ✅ 如果你像这样设置视口元标签：<meta name=\"viewport\" content=\"width=600\">，会发生什么？阅读更多关于 视口 的内容。 文档的 body HTML 标签 在 HTML 中，你可以在html 文件中添加标签来创建网页元素。每个标签通常都有一个开始和结束标签，例如：<p>hello</p> 表示一个段落。通过在 <html> 标签对内添加一组 <body> 标签来创建界面的主体；你的标记现在看起来像这样：\n任务\n```html\nWelcome to my Virtual Terrarium\n```\n现在，你可以开始构建你的页面了。通常，你会使用 <div> 标签来创建页面中的各个元素。我们将创建一系列 <div> 元素，这些元素将包含图片。\n图片\n一个不需要结束标签的 HTML 标签是 <img> 标签，因为它有一个 src 元素，包含页面渲染该项目所需的所有信息。\n在你的应用中创建一个名为 images 的文件夹，并将 源代码文件夹 中的所有图片添加到其中；（有 14 张植物图片）。\n任务\n在 <body></body> 标签之间的两列中添加这些植物图片：\n```html\n```\n注意：Span 和 Div 的区别。Div 被认为是“块”元素，而 Span 是“内联”元素。如果你将这些 div 转换为 span，会发生什么？\n通过这些标记，植物现在会显示在屏幕上。看起来很糟糕，因为它们还没有使用 CSS 样式化，我们将在下一课中完成样式化。\n每张图片都有替代文本，即使你无法看到或渲染图片，替代文本也会显示。这是一个重要的属性，用于提高可访问性。在后续课程中了解更多关于可访问性的内容；现在，请记住，alt 属性为图片提供了替代信息，以防用户因某些原因无法查看图片（例如网络连接慢、src 属性错误或用户使用屏幕阅读器）。\n✅ 你注意到每张图片都有相同的 alt 标签了吗？这是一个好习惯吗？为什么？你能改进这段代码吗？\n语义化标记\n通常，在编写 HTML 时，使用有意义的“语义化”标记是更好的选择。这是什么意思？这意味着你使用 HTML 标签来表示它们设计用于的数据或交互类型。例如，页面上的主要标题文本应该使用 <h1> 标签。\n在你的 <body> 开始标签下方添加以下代码：\n```html\nMy Terrarium\n```\n使用语义化标记，例如将标题设置为 <h1>，将无序列表渲染为 <ul>，可以帮助屏幕阅读器更好地导航页面。通常，按钮应该写为 <button>，列表应该写为 <li>。虽然可以使用带有点击处理程序的特殊样式 <span> 元素来模拟按钮，但对于残障用户来说，使用技术确定页面上的按钮位置并与之交互会更方便。如果元素显示为按钮，屏幕阅读器会更容易识别。因此，尽量使用语义化标记。\n✅ 看看屏幕阅读器 如何与网页交互。你能理解为什么非语义化标记可能会让用户感到沮丧吗？\n生态瓶\n界面的最后一部分涉及创建将被样式化为生态瓶的标记。\n任务：\n在最后一个 </div> 标签上方添加以下标记：\n```html\n```\n✅ 尽管你添加了这些标记到屏幕上，但你什么都看不到。为什么？\n🚀挑战\nHTML 中有一些有趣的“旧”标签，虽然不建议使用已弃用的标签，例如 这些标签，但它们仍然值得尝试。你能使用旧的 <marquee> 标签让 h1 标题水平滚动吗？（如果你这样做，记得之后将其删除）\n课后测验\n课后测验\n复习与自学\nHTML 是一种“久经考验”的构建块系统，帮助网页发展到今天的样子。通过研究一些旧标签和新标签，了解它的历史。你能弄清楚为什么某些标签被弃用，而某些标签被添加吗？未来可能会引入哪些标签？\n了解更多关于为网页和移动设备构建网站的内容，请访问 Microsoft Learn。\n作业\n练习 HTML：构建博客模型\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11534,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\1-intro-to-html\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1847,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "f06dc021f9603cd7a5b81309bdcca79d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\assignment.md",
    "source_type": "git_repo",
    "title": "更深入了解 DOM",
    "content": "更深入了解 DOM\n说明\n通过“认领”一个 DOM 元素来进一步研究 DOM。访问 MDN 的DOM 接口列表，选择一个接口。在网络上的某个网站中找到它的使用实例，并写一篇解释它如何被使用的说明。\n评分标准\n| 标准     | 卓越表现                                   | 合格表现                                     | 需要改进               |\n| -------- | ------------------------------------------ | -------------------------------------------- | ---------------------- |\n|          | 提供了段落说明，并附有示例                 | 提供了段落说明，但没有附示例                 | 未提供任何说明         |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1463,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bb05d7c9f1e75efa2e35691a495de1fd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "微型生态瓶项目第二部分：CSS简介\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\nCSS（层叠样式表）解决了网页开发中的一个重要问题：如何让你的网站看起来更美观。为应用程序添加样式不仅能提升用户体验，还能让页面更具吸引力。此外，CSS 还可以用来创建响应式网页设计（RWD），使你的应用在任何屏幕尺寸下都能保持良好的显示效果。CSS 不仅仅是为了让应用看起来漂亮，它的规范还包括动画和变换功能，可以为应用实现复杂的交互效果。CSS 工作组负责维护当前的 CSS 规范，你可以在 万维网联盟网站 上关注他们的工作。\n注意，CSS 是一种不断发展的语言，就像网络上的其他技术一样，并非所有浏览器都支持最新的规范。在实现功能时，请务必参考 CanIUse com 检查兼容性。\n在本课中，我们将为在线微型生态瓶添加样式，并学习多个 CSS 概念：层叠、继承、选择器的使用、定位以及如何使用 CSS 构建布局。在此过程中，我们将为微型生态瓶布局，并创建实际的生态瓶。\n前置条件\n你应该已经完成了微型生态瓶的 HTML 构建，并准备好为其添加样式。\n查看视频\n任务\n在你的微型生态瓶文件夹中，创建一个名为 style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 20
  },
  {
    "id": "3b084da96ed360f96ac37db52500c0d4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "微型生态瓶项目第二部分：CSS简介\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\nCSS（层叠样式表）解决了网页开发中的一个重要问题：如何让你的网站看起来更美观。为应用程序添加样式不仅能提升用户体验，还能让页面更具吸引力。此外，CSS 还可以用来创建响应式网页设计（RWD），使你的应用在任何屏幕尺寸下都能保持良好的显示效果。CSS 不仅仅是为了让应用看起来漂亮，它的规范还包括动画和变换功能，可以为应用实现复杂的交互效果。CSS 工作组负责维护当前的 CSS 规范，你可以在 万维网联盟网站 上关注他们的工作。\n注意，CSS 是一种不断发展的语言，就像网络上的其他技术一样，并非所有浏览器都支持最新的规范。在实现功能时，请务必参考 CanIUse com 检查兼容性。\n在本课中，我们将为在线微型生态瓶添加样式，并学习多个 CSS 概念：层叠、继承、选择器的使用、定位以及如何使用 CSS 构建布局。在此过程中，我们将为微型生态瓶布局，并创建实际的生态瓶。\n前置条件\n你应该已经完成了微型生态瓶的 HTML 构建，并准备好为其添加样式。\n查看视频\n任务\n在你的微型生态瓶文件夹中，创建一个名为 stylecss 的新文件。在 <head> 部分中导入该文件：\nhtml\n<link rel=\"stylesheet\" href=\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 1,
    "total_chunks": 20
  },
  {
    "id": "508005b720b8d5cb6c72d1723e3e450f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "微型生态瓶项目第二部分：CSS简介\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\nCSS（层叠样式表）解决了网页开发中的一个重要问题：如何让你的网站看起来更美观。为应用程序添加样式不仅能提升用户体验，还能让页面更具吸引力。此外，CSS 还可以用来创建响应式网页设计（RWD），使你的应用在任何屏幕尺寸下都能保持良好的显示效果。CSS 不仅仅是为了让应用看起来漂亮，它的规范还包括动画和变换功能，可以为应用实现复杂的交互效果。CSS 工作组负责维护当前的 CSS 规范，你可以在 万维网联盟网站 上关注他们的工作。\n注意，CSS 是一种不断发展的语言，就像网络上的其他技术一样，并非所有浏览器都支持最新的规范。在实现功能时，请务必参考 CanIUse com 检查兼容性。\n在本课中，我们将为在线微型生态瓶添加样式，并学习多个 CSS 概念：层叠、继承、选择器的使用、定位以及如何使用 CSS 构建布局。在此过程中，我们将为微型生态瓶布局，并创建实际的生态瓶。\n前置条件\n你应该已经完成了微型生态瓶的 HTML 构建，并准备好为其添加样式。\n查看视频\n任务\n在你的微型生态瓶文件夹中，创建一个名为 stylecss 的新文件。在 <head> 部分中导入该文件：\nhtml\n<link rel=\"stylesheet\" href=\"/style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 2,
    "total_chunks": 20
  },
  {
    "id": "8b375696d0ad5d7f6bdaac8f6f39148b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "微型生态瓶项目第二部分：CSS简介\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\nCSS（层叠样式表）解决了网页开发中的一个重要问题：如何让你的网站看起来更美观。为应用程序添加样式不仅能提升用户体验，还能让页面更具吸引力。此外，CSS 还可以用来创建响应式网页设计（RWD），使你的应用在任何屏幕尺寸下都能保持良好的显示效果。CSS 不仅仅是为了让应用看起来漂亮，它的规范还包括动画和变换功能，可以为应用实现复杂的交互效果。CSS 工作组负责维护当前的 CSS 规范，你可以在 万维网联盟网站 上关注他们的工作。\n注意，CSS 是一种不断发展的语言，就像网络上的其他技术一样，并非所有浏览器都支持最新的规范。在实现功能时，请务必参考 CanIUse com 检查兼容性。\n在本课中，我们将为在线微型生态瓶添加样式，并学习多个 CSS 概念：层叠、继承、选择器的使用、定位以及如何使用 CSS 构建布局。在此过程中，我们将为微型生态瓶布局，并创建实际的生态瓶。\n前置条件\n你应该已经完成了微型生态瓶的 HTML 构建，并准备好为其添加样式。\n查看视频\n任务\n在你的微型生态瓶文件夹中，创建一个名为 stylecss 的新文件。在 <head> 部分中导入该文件：\nhtml\n<link rel=\"stylesheet\" href=\"/stylecss\" />\n层叠\n层叠样式表的核心思想是样式具有“层叠性”，即样式的应用由其优先级决定。由网站作者设置的样式优先于浏览器默认样式，而内联样式的优先级高于外部样式表中的样式。\n任务\n为你的 <h1> 标签添加内联样式 \"color: red\"：\n```HTML\nMy Terrarium\n```\n然后，将以下代码添加到你的 style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 3,
    "total_chunks": 20
  },
  {
    "id": "77da2a8a7254a4d237ba518dec2f16bc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "微型生态瓶项目第二部分：CSS简介\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\nCSS（层叠样式表）解决了网页开发中的一个重要问题：如何让你的网站看起来更美观。为应用程序添加样式不仅能提升用户体验，还能让页面更具吸引力。此外，CSS 还可以用来创建响应式网页设计（RWD），使你的应用在任何屏幕尺寸下都能保持良好的显示效果。CSS 不仅仅是为了让应用看起来漂亮，它的规范还包括动画和变换功能，可以为应用实现复杂的交互效果。CSS 工作组负责维护当前的 CSS 规范，你可以在 万维网联盟网站 上关注他们的工作。\n注意，CSS 是一种不断发展的语言，就像网络上的其他技术一样，并非所有浏览器都支持最新的规范。在实现功能时，请务必参考 CanIUse com 检查兼容性。\n在本课中，我们将为在线微型生态瓶添加样式，并学习多个 CSS 概念：层叠、继承、选择器的使用、定位以及如何使用 CSS 构建布局。在此过程中，我们将为微型生态瓶布局，并创建实际的生态瓶。\n前置条件\n你应该已经完成了微型生态瓶的 HTML 构建，并准备好为其添加样式。\n查看视频\n任务\n在你的微型生态瓶文件夹中，创建一个名为 stylecss 的新文件。在 <head> 部分中导入该文件：\nhtml\n<link rel=\"stylesheet\" href=\"/stylecss\" />\n层叠\n层叠样式表的核心思想是样式具有“层叠性”，即样式的应用由其优先级决定。由网站作者设置的样式优先于浏览器默认样式，而内联样式的优先级高于外部样式表中的样式。\n任务\n为你的 <h1> 标签添加内联样式 \"color: red\"：\n```HTML\nMy Terrarium\n```\n然后，将以下代码添加到你的 stylecss 文件中：\nCSS\nh1 {\ncolor: blue;\n}\n✅ 你的网页应用中显示的颜色是什么？为什么？你能找到一种方法来覆盖样式吗？在什么情况下你会想要这样做，或者为什么不这样做？\n继承\n样式可以从祖先元素继承到后代元素，即嵌套的元素会继承其父元素的样式。\n任务\n将 body 的字体设置为某种字体，并检查嵌套元素的字体：\nCSS\nbody {\nfont-family: helvetica, arial, sans-serif;\n}\n打开浏览器的控制台，切换到“元素”标签，观察 H1 的字体。你会发现它继承了 body 的字体，这一点在浏览器中有说明：\n✅ 你能让嵌套样式继承不同的属性吗？\nCSS 选择器\n标签\n目前，你的 style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 921,
    "chunk_index": 4,
    "total_chunks": 20
  },
  {
    "id": "3961211cfa21476f5724ec8a901cb972",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "上关注他们的工作。 注意，CSS 是一种不断发展的语言，就像网络上的其他技术一样，并非所有浏览器都支持最新的规范。在实现功能时，请务必参考 CanIUse com 检查兼容性。 在本课中，我们将为在线微型生态瓶添加样式，并学习多个 CSS 概念：层叠、继承、选择器的使用、定位以及如何使用 CSS 构建布局。在此过程中，我们将为微型生态瓶布局，并创建实际的生态瓶。 前置条件 你应该已经完成了微型生态瓶的 HTML 构建，并准备好为其添加样式。 查看视频 任务 在你的微型生态瓶文件夹中，创建一个名为 stylecss 的新文件。在 <head> 部分中导入该文件： html <link rel=\"stylesheet\" href=\"/stylecss\" /> 层叠 层叠样式表的核心思想是样式具有“层叠性”，即样式的应用由其优先级决定。由网站作者设置的样式优先于浏览器默认样式，而内联样式的优先级高于外部样式表中的样式。 任务 为你的 <h1> 标签添加内联样式 \"color: red\"： ```HTML My Terrarium ``` 然后，将以下代码添加到你的 stylecss 文件中： CSS h1 { color: blue; } ✅ 你的网页应用中显示的颜色是什么？为什么？你能找到一种方法来覆盖样式吗？在什么情况下你会想要这样做，或者为什么不这样做？ 继承 样式可以从祖先元素继承到后代元素，即嵌套的元素会继承其父元素的样式。 任务 将 body 的字体设置为某种字体，并检查嵌套元素的字体： CSS body { font-family: helvetica, arial, sans-serif; } 打开浏览器的控制台，切换到“元素”标签，观察 H1 的字体。你会发现它继承了 body 的字体，这一点在浏览器中有说明： ✅ 你能让嵌套样式继承不同的属性吗？ CSS 选择器 标签 目前，你的 stylecss 文件中只为少量标签设置了样式，因此应用看起来有些奇怪：\n```CSS\nbody {\nfont-family: helvetica, arial, sans-serif;\n}\nh1 {\ncolor: #3a241d;\ntext-align: center;\n}\n```\n这种为标签设置样式的方法可以控制单个元素，但如果你需要控制微型生态瓶中许多植物的样式，就需要利用 CSS 选择器。\nID\n为左侧和右侧容器添加一些样式。由于标记中只有一个左侧容器和一个右侧容器，因此它们被赋予了 ID。要为它们设置样式，可以使用 #：\n```CSS\nleft-container {\nbackground-color: #eee;\nwidth: 15%;\nleft: 0px;\ntop: 0px;\nposition: absolute;\nheight: 100%;\npadding: 10px;\n}\nright-container {\nbackground-color: #eee;\nwidth: 15%;\nright: 0px;\ntop: 0px;\nposition: absolute;\nheight: 100%;\npadding: 10px;\n}\n```\n在这里，你通过绝对定位将这些容器放置在屏幕的最左侧和最右侧，并使用百分比设置它们的宽度，以便它们可以适配小屏幕设备。\n✅ 这段代码有些重复，因此不符合“DRY”（Don't Repeat Yourself）的原则。你能找到一种更好的方法来为这些 ID 设置样式吗？也许可以结合使用 ID 和类？你需要修改标记并重构 CSS：\n```html\n```\n类\n在上面的例子中，你为屏幕上的两个唯一元素设置了样式。如果你希望样式应用于屏幕上的多个元素，可以使用 CSS 类。为左侧和右侧容器中的植物布局时可以这样做。\n注意，HTML 标记中的每个植物都有 ID 和类的组合。这里的 ID 将在稍后添加的 JavaScript 中使用，用于操作微型生态瓶中的植物位置。而类则为所有植物提供了统一的样式。\n```html\n```\n将以下内容添加到你的 style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1253,
    "chunk_index": 5,
    "total_chunks": 20
  },
  {
    "id": "95c835e655175334a57366bb576c06da",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "#3a241d; text-align: center; } ``` 这种为标签设置样式的方法可以控制单个元素，但如果你需要控制微型生态瓶中许多植物的样式，就需要利用 CSS 选择器。 ID 为左侧和右侧容器添加一些样式。由于标记中只有一个左侧容器和一个右侧容器，因此它们被赋予了 ID。要为它们设置样式，可以使用 #： ```CSS left-container { background-color: #eee; width: 15%; left: 0px; top: 0px; position: absolute; height: 100%; padding: 10px; } right-container { background-color: #eee; width: 15%; right: 0px; top: 0px; position: absolute; height: 100%; padding: 10px; } ``` 在这里，你通过绝对定位将这些容器放置在屏幕的最左侧和最右侧，并使用百分比设置它们的宽度，以便它们可以适配小屏幕设备。 ✅ 这段代码有些重复，因此不符合“DRY”（Don't Repeat Yourself）的原则。你能找到一种更好的方法来为这些 ID 设置样式吗？也许可以结合使用 ID 和类？你需要修改标记并重构 CSS： ```html ``` 类 在上面的例子中，你为屏幕上的两个唯一元素设置了样式。如果你希望样式应用于屏幕上的多个元素，可以使用 CSS 类。为左侧和右侧容器中的植物布局时可以这样做。 注意，HTML 标记中的每个植物都有 ID 和类的组合。这里的 ID 将在稍后添加的 JavaScript 中使用，用于操作微型生态瓶中的植物位置。而类则为所有植物提供了统一的样式。 ```html ``` 将以下内容添加到你的 stylecss 文件中：\n```CSS",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 535,
    "chunk_index": 6,
    "total_chunks": 20
  },
  {
    "id": "2e30877d675175f880ba5c357cd18b62",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "center; } ``` 这种为标签设置样式的方法可以控制单个元素，但如果你需要控制微型生态瓶中许多植物的样式，就需要利用 CSS 选择器。 ID 为左侧和右侧容器添加一些样式。由于标记中只有一个左侧容器和一个右侧容器，因此它们被赋予了 ID。要为它们设置样式，可以使用 #： ```CSS left-container { background-color: #eee; width: 15%; left: 0px; top: 0px; position: absolute; height: 100%; padding: 10px; } right-container { background-color: #eee; width: 15%; right: 0px; top: 0px; position: absolute; height: 100%; padding: 10px; } ``` 在这里，你通过绝对定位将这些容器放置在屏幕的最左侧和最右侧，并使用百分比设置它们的宽度，以便它们可以适配小屏幕设备。 ✅ 这段代码有些重复，因此不符合“DRY”（Don't Repeat Yourself）的原则。你能找到一种更好的方法来为这些 ID 设置样式吗？也许可以结合使用 ID 和类？你需要修改标记并重构 CSS： ```html ``` 类 在上面的例子中，你为屏幕上的两个唯一元素设置了样式。如果你希望样式应用于屏幕上的多个元素，可以使用 CSS 类。为左侧和右侧容器中的植物布局时可以这样做。 注意，HTML 标记中的每个植物都有 ID 和类的组合。这里的 ID 将在稍后添加的 JavaScript 中使用，用于操作微型生态瓶中的植物位置。而类则为所有植物提供了统一的样式。 ```html ``` 将以下内容添加到你的 stylecss 文件中： ```CSSplant-holder {\nposition: relative;\nheight: 13%;\nleft: -10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 545,
    "chunk_index": 7,
    "total_chunks": 20
  },
  {
    "id": "93b1e0f6a2d012c96f370f679ddec99b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "ID。要为它们设置样式，可以使用 #： ```CSS left-container { background-color: #eee; width: 15%; left: 0px; top: 0px; position: absolute; height: 100%; padding: 10px; } right-container { background-color: #eee; width: 15%; right: 0px; top: 0px; position: absolute; height: 100%; padding: 10px; } ``` 在这里，你通过绝对定位将这些容器放置在屏幕的最左侧和最右侧，并使用百分比设置它们的宽度，以便它们可以适配小屏幕设备。 ✅ 这段代码有些重复，因此不符合“DRY”（Don't Repeat Yourself）的原则。你能找到一种更好的方法来为这些 ID 设置样式吗？也许可以结合使用 ID 和类？你需要修改标记并重构 CSS： ```html ``` 类 在上面的例子中，你为屏幕上的两个唯一元素设置了样式。如果你希望样式应用于屏幕上的多个元素，可以使用 CSS 类。为左侧和右侧容器中的植物布局时可以这样做。 注意，HTML 标记中的每个植物都有 ID 和类的组合。这里的 ID 将在稍后添加的 JavaScript 中使用，用于操作微型生态瓶中的植物位置。而类则为所有植物提供了统一的样式。 ```html ``` 将以下内容添加到你的 stylecss 文件中： ```CSSplant-holder { position: relative; height: 13%; left: -10px; }plant {\nposition: absolute;\nmax-width: 150%;\nmax-height: 150%;\nz-index: 2;\n}\n```\n在这段代码中，值得注意的是相对定位和绝对定位的混合使用，我们将在下一节中详细讨论。请注意高度是如何通过百分比处理的：\n你将植物容器的高度设置为 13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。\n你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。\n然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。\n另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。\n✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？\nCSS 定位\n混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。\n绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。\n相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。\n在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。\nplant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。\n✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？\nCSS 布局\n现在，你将使用所学内容，通过 CSS 构建微型生态瓶！\n首先，使用 CSS 将",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1131,
    "chunk_index": 8,
    "total_chunks": 20
  },
  {
    "id": "3fdebd73e4eec18e8b88a25c5c8d6cad",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "在上面的例子中，你为屏幕上的两个唯一元素设置了样式。如果你希望样式应用于屏幕上的多个元素，可以使用 CSS 类。为左侧和右侧容器中的植物布局时可以这样做。 注意，HTML 标记中的每个植物都有 ID 和类的组合。这里的 ID 将在稍后添加的 JavaScript 中使用，用于操作微型生态瓶中的植物位置。而类则为所有植物提供了统一的样式。 ```html ``` 将以下内容添加到你的 stylecss 文件中： ```CSSplant-holder { position: relative; height: 13%; left: -10px; }plant { position: absolute; max-width: 150%; max-height: 150%; z-index: 2; } ``` 在这段代码中，值得注意的是相对定位和绝对定位的混合使用，我们将在下一节中详细讨论。请注意高度是如何通过百分比处理的： 你将植物容器的高度设置为 13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。 你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。 然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形：\n```CSS",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 911,
    "chunk_index": 9,
    "total_chunks": 20
  },
  {
    "id": "5e2db00e1e279a6c0b49246a05f3455c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "注意，HTML 标记中的每个植物都有 ID 和类的组合。这里的 ID 将在稍后添加的 JavaScript 中使用，用于操作微型生态瓶中的植物位置。而类则为所有植物提供了统一的样式。 ```html ``` 将以下内容添加到你的 stylecss 文件中： ```CSSplant-holder { position: relative; height: 13%; left: -10px; }plant { position: absolute; max-width: 150%; max-height: 150%; z-index: 2; } ``` 在这段代码中，值得注意的是相对定位和绝对定位的混合使用，我们将在下一节中详细讨论。请注意高度是如何通过百分比处理的： 你将植物容器的高度设置为 13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。 你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。 然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls {\nheight: 80%;\nwidth: 60%;\nbackground: #d1e1df;\nborder-radius: 1rem;\nposition: absolute;\nbottom: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 869,
    "chunk_index": 10,
    "total_chunks": 20
  },
  {
    "id": "c458333b15dc99f6c28f4bd8e87f2bf1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "```CSSplant-holder { position: relative; height: 13%; left: -10px; }plant { position: absolute; max-width: 150%; max-height: 150%; z-index: 2; } ``` 在这段代码中，值得注意的是相对定位和绝对定位的混合使用，我们将在下一节中详细讨论。请注意高度是如何通过百分比处理的： 你将植物容器的高度设置为 13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。 你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。 然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%;\nleft: 20%;\nopacity: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 789,
    "chunk_index": 11,
    "total_chunks": 20
  },
  {
    "id": "11e25b9aa517f1e3eca1d029ad4b197f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "height: 13%; left: -10px; }plant { position: absolute; max-width: 150%; max-height: 150%; z-index: 2; } ``` 在这段代码中，值得注意的是相对定位和绝对定位的混合使用，我们将在下一节中详细讨论。请注意高度是如何通过百分比处理的： 你将植物容器的高度设置为 13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。 你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。 然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%; left: 20%; opacity: 05;\nz-index: 1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 788,
    "chunk_index": 12,
    "total_chunks": 20
  },
  {
    "id": "a8a73eb065a126933676054381921e4f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "-10px; }plant { position: absolute; max-width: 150%; max-height: 150%; z-index: 2; } ``` 在这段代码中，值得注意的是相对定位和绝对定位的混合使用，我们将在下一节中详细讨论。请注意高度是如何通过百分比处理的： 你将植物容器的高度设置为 13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。 你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。 然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%; left: 20%; opacity: 05; z-index: 1; }jar-top {\nwidth: 50%;\nheight: 5%;\nbackground: #d1e1df;\nposition: absolute;\nbottom: 80",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 811,
    "chunk_index": 13,
    "total_chunks": 20
  },
  {
    "id": "289d3a143c433dd633f74f783cec7f2f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "} ``` 在这段代码中，值得注意的是相对定位和绝对定位的混合使用，我们将在下一节中详细讨论。请注意高度是如何通过百分比处理的： 你将植物容器的高度设置为 13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。 你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。 然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%; left: 20%; opacity: 05; z-index: 1; }jar-top { width: 50%; height: 5%; background: #d1e1df; position: absolute; bottom: 805%;\nleft: 25%;\nopacity: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 792,
    "chunk_index": 14,
    "total_chunks": 20
  },
  {
    "id": "def5c7f1bb3fdfacaf21c849c0858ef7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "13%，这是一个合适的数值，确保所有植物都能在每个垂直容器中显示，而无需滚动。 你将植物容器向左移动，使植物在容器中更居中。由于图片有大量透明背景，为了使其更易拖动，需要向左移动以更好地适配屏幕。 然后，植物本身的最大宽度设置为 150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%; left: 20%; opacity: 05; z-index: 1; }jar-top { width: 50%; height: 5%; background: #d1e1df; position: absolute; bottom: 805%; left: 25%; opacity: 07;\nz-index: 1;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 727,
    "chunk_index": 15,
    "total_chunks": 20
  },
  {
    "id": "c80916d4b6ef74bb9341ae9b33b3cc45",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "150%。这使得它们可以随着浏览器的缩小而缩小。尝试调整浏览器大小，植物会保持在容器内并缩小以适配。 另一个值得注意的是 z-index 的使用，它控制元素的相对高度（使植物位于容器之上，看起来像是放置在微型生态瓶中）。 ✅ 为什么需要同时使用植物容器和植物的 CSS 选择器？ CSS 定位 混合使用定位属性（包括 static、relative、fixed、absolute 和 sticky 定位）可能有些复杂，但如果使用得当，可以很好地控制页面上的元素。 绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%; left: 20%; opacity: 05; z-index: 1; }jar-top { width: 50%; height: 5%; background: #d1e1df; position: absolute; bottom: 805%; left: 25%; opacity: 07; z-index: 1; }jar-bottom {\nwidth: 50%;\nheight: 1%;\nbackground: #d1e1df;\nposition: absolute;\nbottom: 0%;\nleft: 25%;\nopacity: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 16,
    "total_chunks": 20
  },
  {
    "id": "8e7a08dc8c207526f1f8f5aff119fd77",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "绝对定位的元素是相对于最近的已定位祖先元素进行定位的，如果没有，则相对于文档主体进行定位。 相对定位的元素是基于 CSS 指定的方向，从其初始位置调整位置。 在我们的示例中，plant-holder 是一个相对定位的元素，位于一个绝对定位的容器内。其结果是侧边栏容器固定在左右两侧，而 plant-holder 嵌套在其中，根据侧边栏调整自身位置，为植物垂直排列提供空间。 plant 本身也使用了绝对定位，这是使其可拖动的必要条件，你将在下一课中了解更多。 ✅ 尝试切换侧边容器和植物容器的定位类型。会发生什么？ CSS 布局 现在，你将使用所学内容，通过 CSS 构建微型生态瓶！ 首先，使用 CSS 将terrarium div 的子元素设置为圆角矩形： ```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%; left: 20%; opacity: 05; z-index: 1; }jar-top { width: 50%; height: 5%; background: #d1e1df; position: absolute; bottom: 805%; left: 25%; opacity: 07; z-index: 1; }jar-bottom { width: 50%; height: 1%; background: #d1e1df; position: absolute; bottom: 0%; left: 25%; opacity: 07;\n} dirt {\nwidth: 60%;\nheight: 5%;\nbackground: #3a241d;\nposition: absolute;\nborder-radius: 0 0 1rem 1rem;\nbottom: 1%;\nleft: 20%;\nopacity: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 17,
    "total_chunks": 20
  },
  {
    "id": "ae627e82075ce2f1c7e9b114ea5755ce",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "```CSSjar-walls { height: 80%; width: 60%; background: #d1e1df; border-radius: 1rem; position: absolute; bottom: 05%; left: 20%; opacity: 05; z-index: 1; }jar-top { width: 50%; height: 5%; background: #d1e1df; position: absolute; bottom: 805%; left: 25%; opacity: 07; z-index: 1; }jar-bottom { width: 50%; height: 1%; background: #d1e1df; position: absolute; bottom: 0%; left: 25%; opacity: 07; } dirt { width: 60%; height: 5%; background: #3a241d; position: absolute; border-radius: 0 0 1rem 1rem; bottom: 1%; left: 20%; opacity: 07;\nz-index: -1;\n}\n```\n注意这里使用了百分比。如果缩小浏览器窗口，你会看到瓶子也会随之缩小。还要注意瓶子元素的宽度和高度百分比，以及每个元素如何绝对定位在中心并固定在视口底部。\n我们还使用了 rem 设置圆角半径，这是一种相对于字体的长度单位。可以在 CSS 规范 中了解更多关于这种相对测量的方法。\n✅ 尝试更改瓶子颜色和透明度与泥土的颜色和透明度。会发生什么？为什么？\n🚀挑战\n为瓶子的左下区域添加一个“气泡”光泽，使其看起来更像玻璃。你需要为 jar-glossy-long 和",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 18,
    "total_chunks": 20
  },
  {
    "id": "57bf3f5189cbe1f9ad06c5089dd8fd0f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
    "source_type": "git_repo",
    "title": "微型生态瓶项目第二部分：CSS简介",
    "content": "05; z-index: 1; }jar-top { width: 50%; height: 5%; background: #d1e1df; position: absolute; bottom: 805%; left: 25%; opacity: 07; z-index: 1; }jar-bottom { width: 50%; height: 1%; background: #d1e1df; position: absolute; bottom: 0%; left: 25%; opacity: 07; } dirt { width: 60%; height: 5%; background: #3a241d; position: absolute; border-radius: 0 0 1rem 1rem; bottom: 1%; left: 20%; opacity: 07; z-index: -1; } ``` 注意这里使用了百分比。如果缩小浏览器窗口，你会看到瓶子也会随之缩小。还要注意瓶子元素的宽度和高度百分比，以及每个元素如何绝对定位在中心并固定在视口底部。 我们还使用了 rem 设置圆角半径，这是一种相对于字体的长度单位。可以在 CSS 规范 中了解更多关于这种相对测量的方法。 ✅ 尝试更改瓶子颜色和透明度与泥土的颜色和透明度。会发生什么？为什么？ 🚀挑战 为瓶子的左下区域添加一个“气泡”光泽，使其看起来更像玻璃。你需要为 jar-glossy-long 和jar-glossy-short 设置样式，使其看起来像反射的光泽。效果如下：\n完成课后测验，请学习以下模块：使用 CSS 为 HTML 应用添加样式\n课后测验\n课后测验\n复习与自学\nCSS 看似简单，但要为所有浏览器和屏幕尺寸完美地设置样式却充满挑战。CSS-Grid 和 Flexbox 是为使工作更有结构性和可靠性而开发的工具。通过玩 Flexbox Froggy 和 Grid Garden 来学习这些工具。\n作业\nCSS 重构\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于重要信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10318,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\2-intro-to-css\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 715,
    "chunk_index": 19,
    "total_chunks": 20
  },
  {
    "id": "068bd4a29fd97ee0fc5415d63e755e9c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\solution\\README.md",
    "source_type": "git_repo",
    "title": "我的微型生态瓶：一个学习HTML、CSS和使用JavaScript操作DOM的项目 🌵🌱",
    "content": "我的微型生态瓶：一个学习HTML、CSS和使用JavaScript操作DOM的项目 🌵🌱\n一个小型的拖放代码冥想项目。通过一些HTML、JS和CSS，你可以构建一个网页界面，为其设计样式，并添加交互功能。\n致谢\n由Jen Looper用 ♥️ 编写。\n通过CSS创建的生态瓶灵感来源于Jakub Mandra的玻璃罐 codepen。\n艺术作品由Jen Looper使用Procreate手绘完成。\n部署你的微型生态瓶\n你可以使用Azure Static Web Apps将你的生态瓶部署或发布到网络上。\nFork此仓库\n点击这个按钮\n按照向导创建你的应用程序。确保将应用程序根目录设置为/solution或你的代码库的根目录。这个应用程序中没有API，所以不用担心添加API。一个.github文件夹会在你Fork的仓库中创建，这将帮助Azure Static Web Apps的构建服务构建并将你的应用程序发布到一个新的URL。\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1987,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\solution\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e4a88917a0c8701cec12008c2654aad6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "使用事件创建游戏\n课前测验\n课前测验\n事件驱动编程\n在创建基于浏览器的应用程序时，我们会为用户提供一个图形用户界面（GUI），以便用户与我们构建的内容进行交互。用户与浏览器交互的最常见方式是点击和在各种元素中输入内容。作为开发者，我们面临的挑战是无法预测用户何时会执行这些操作！\n事件驱动编程 是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。\n我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。\n为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。\nNOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。\n常见事件\n在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）：\nclick：用户点击了某个元素，通常是按钮或超链接\ncontextmenu：用户点击了鼠标右键\nselect：用户高亮了一些文本\ninput：用户输入了一些文本\n创建游戏\n我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下：\n玩家点击开始按钮，看到一段需要输入的文字\n玩家尽可能快地在文本框中输入这段文字\n每完成一个单词，下一个单词会被高亮显示\n如果玩家输入错误，文本框会变成红色\n当玩家完成输入后，会显示一条成功消息以及所用时间\n让我们开始构建游戏，同时学习事件的相关知识吧！\n文件结构\n我们需要创建三个文件：index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 940,
    "chunk_index": 0,
    "total_chunks": 22
  },
  {
    "id": "0cdebb416fdc554167e8b0248e445b65",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "使用事件创建游戏\n课前测验\n课前测验\n事件驱动编程\n在创建基于浏览器的应用程序时，我们会为用户提供一个图形用户界面（GUI），以便用户与我们构建的内容进行交互。用户与浏览器交互的最常见方式是点击和在各种元素中输入内容。作为开发者，我们面临的挑战是无法预测用户何时会执行这些操作！\n事件驱动编程 是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。\n我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。\n为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。\nNOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。\n常见事件\n在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）：\nclick：用户点击了某个元素，通常是按钮或超链接\ncontextmenu：用户点击了鼠标右键\nselect：用户高亮了一些文本\ninput：用户输入了一些文本\n创建游戏\n我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下：\n玩家点击开始按钮，看到一段需要输入的文字\n玩家尽可能快地在文本框中输入这段文字\n每完成一个单词，下一个单词会被高亮显示\n如果玩家输入错误，文本框会变成红色\n当玩家完成输入后，会显示一条成功消息以及所用时间\n让我们开始构建游戏，同时学习事件的相关知识吧！\n文件结构\n我们需要创建三个文件：indexhtml、script",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 943,
    "chunk_index": 1,
    "total_chunks": 22
  },
  {
    "id": "c19c434821b93a85286e3f7e49312d50",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "使用事件创建游戏\n课前测验\n课前测验\n事件驱动编程\n在创建基于浏览器的应用程序时，我们会为用户提供一个图形用户界面（GUI），以便用户与我们构建的内容进行交互。用户与浏览器交互的最常见方式是点击和在各种元素中输入内容。作为开发者，我们面临的挑战是无法预测用户何时会执行这些操作！\n事件驱动编程 是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。\n我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。\n为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。\nNOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。\n常见事件\n在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）：\nclick：用户点击了某个元素，通常是按钮或超链接\ncontextmenu：用户点击了鼠标右键\nselect：用户高亮了一些文本\ninput：用户输入了一些文本\n创建游戏\n我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下：\n玩家点击开始按钮，看到一段需要输入的文字\n玩家尽可能快地在文本框中输入这段文字\n每完成一个单词，下一个单词会被高亮显示\n如果玩家输入错误，文本框会变成红色\n当玩家完成输入后，会显示一条成功消息以及所用时间\n让我们开始构建游戏，同时学习事件的相关知识吧！\n文件结构\n我们需要创建三个文件：indexhtml、scriptjs 和 style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 946,
    "chunk_index": 2,
    "total_chunks": 22
  },
  {
    "id": "15e8f3617315bcbcc3ddc5ad72b71799",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "使用事件创建游戏\n课前测验\n课前测验\n事件驱动编程\n在创建基于浏览器的应用程序时，我们会为用户提供一个图形用户界面（GUI），以便用户与我们构建的内容进行交互。用户与浏览器交互的最常见方式是点击和在各种元素中输入内容。作为开发者，我们面临的挑战是无法预测用户何时会执行这些操作！\n事件驱动编程 是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。\n我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。\n为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。\nNOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。\n常见事件\n在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）：\nclick：用户点击了某个元素，通常是按钮或超链接\ncontextmenu：用户点击了鼠标右键\nselect：用户高亮了一些文本\ninput：用户输入了一些文本\n创建游戏\n我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下：\n玩家点击开始按钮，看到一段需要输入的文字\n玩家尽可能快地在文本框中输入这段文字\n每完成一个单词，下一个单词会被高亮显示\n如果玩家输入错误，文本框会变成红色\n当玩家完成输入后，会显示一条成功消息以及所用时间\n让我们开始构建游戏，同时学习事件的相关知识吧！\n文件结构\n我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。\n打开控制台或终端窗口，输入以下命令创建一个新文件夹：\n```bash\nLinux or macOS\nmkdir typing-game && cd typing-game\nWindows\nmd typing-game && cd typing-game\n```\n打开 Visual Studio Code\nbash\ncode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1034,
    "chunk_index": 3,
    "total_chunks": 22
  },
  {
    "id": "e7bd359ac37f106d95e94f15fb8e82ea",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "使用事件创建游戏\n课前测验\n课前测验\n事件驱动编程\n在创建基于浏览器的应用程序时，我们会为用户提供一个图形用户界面（GUI），以便用户与我们构建的内容进行交互。用户与浏览器交互的最常见方式是点击和在各种元素中输入内容。作为开发者，我们面临的挑战是无法预测用户何时会执行这些操作！\n事件驱动编程 是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。\n我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。\n为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。\nNOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。\n常见事件\n在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）：\nclick：用户点击了某个元素，通常是按钮或超链接\ncontextmenu：用户点击了鼠标右键\nselect：用户高亮了一些文本\ninput：用户输入了一些文本\n创建游戏\n我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下：\n玩家点击开始按钮，看到一段需要输入的文字\n玩家尽可能快地在文本框中输入这段文字\n每完成一个单词，下一个单词会被高亮显示\n如果玩家输入错误，文本框会变成红色\n当玩家完成输入后，会显示一条成功消息以及所用时间\n让我们开始构建游戏，同时学习事件的相关知识吧！\n文件结构\n我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。\n打开控制台或终端窗口，输入以下命令创建一个新文件夹：\n```bash\nLinux or macOS\nmkdir typing-game && cd typing-game\nWindows\nmd typing-game && cd typing-game\n```\n打开 Visual Studio Code\nbash\ncode在 Visual Studio Code 中为文件夹添加以下三个文件：\nindex",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1050,
    "chunk_index": 4,
    "total_chunks": 22
  },
  {
    "id": "6f85e0cdfa946975f6335e719099932e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "在创建基于浏览器的应用程序时，我们会为用户提供一个图形用户界面（GUI），以便用户与我们构建的内容进行交互。用户与浏览器交互的最常见方式是点击和在各种元素中输入内容。作为开发者，我们面临的挑战是无法预测用户何时会执行这些操作！ 事件驱动编程 是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。 我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。 为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。 NOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。 常见事件 在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）： click：用户点击了某个元素，通常是按钮或超链接 contextmenu：用户点击了鼠标右键 select：用户高亮了一些文本 input：用户输入了一些文本 创建游戏 我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下： 玩家点击开始按钮，看到一段需要输入的文字 玩家尽可能快地在文本框中输入这段文字 每完成一个单词，下一个单词会被高亮显示 如果玩家输入错误，文本框会变成红色 当玩家完成输入后，会显示一条成功消息以及所用时间 让我们开始构建游戏，同时学习事件的相关知识吧！ 文件结构 我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。 打开控制台或终端窗口，输入以下命令创建一个新文件夹： ```bash Linux or macOS mkdir typing-game && cd typing-game Windows md typing-game && cd typing-game ``` 打开 Visual Studio Code bash code在 Visual Studio Code 中为文件夹添加以下三个文件： indexhtml\nscript",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1019,
    "chunk_index": 5,
    "total_chunks": 22
  },
  {
    "id": "e94f83ee86f84641a0c79610d045339c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "事件驱动编程 是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。 我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。 为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。 NOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。 常见事件 在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）： click：用户点击了某个元素，通常是按钮或超链接 contextmenu：用户点击了鼠标右键 select：用户高亮了一些文本 input：用户输入了一些文本 创建游戏 我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下： 玩家点击开始按钮，看到一段需要输入的文字 玩家尽可能快地在文本框中输入这段文字 每完成一个单词，下一个单词会被高亮显示 如果玩家输入错误，文本框会变成红色 当玩家完成输入后，会显示一条成功消息以及所用时间 让我们开始构建游戏，同时学习事件的相关知识吧！ 文件结构 我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。 打开控制台或终端窗口，输入以下命令创建一个新文件夹： ```bash Linux or macOS mkdir typing-game && cd typing-game Windows md typing-game && cd typing-game ``` 打开 Visual Studio Code bash code在 Visual Studio Code 中为文件夹添加以下三个文件： indexhtml scriptjs\nstyle",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 917,
    "chunk_index": 6,
    "total_chunks": 22
  },
  {
    "id": "fb789fbe7bb909156196bcbaa028b3fd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "是我们需要用来创建 GUI 的一种编程方式。如果我们稍微拆解一下这个术语，可以发现核心词是 事件。根据 Merriam-Webster 的定义，事件 是指“某件发生的事情”。这完美地描述了我们的情况。我们知道会发生某些事情，我们希望在这些事情发生时执行一些代码，但我们不知道它们具体会在什么时候发生。 我们通过创建函数来标记希望执行的代码段。在 过程式编程 中，函数是按照特定顺序调用的。在事件驱动编程中也是如此，不同之处在于函数的调用方式。 为了处理事件（如按钮点击、输入等），我们需要注册 事件监听器。事件监听器是一个监听事件发生并作出响应的函数。事件监听器可以更新用户界面、向服务器发送请求，或者完成其他需要响应用户操作的任务。我们通过使用 addEventListener 并提供一个要执行的函数来添加事件监听器。 NOTE: 值得注意的是，创建事件监听器有多种方式。你可以使用匿名函数，也可以创建命名函数。你还可以使用各种快捷方式，比如设置 click 属性，或者使用 addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。 常见事件 在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）： click：用户点击了某个元素，通常是按钮或超链接 contextmenu：用户点击了鼠标右键 select：用户高亮了一些文本 input：用户输入了一些文本 创建游戏 我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下： 玩家点击开始按钮，看到一段需要输入的文字 玩家尽可能快地在文本框中输入这段文字 每完成一个单词，下一个单词会被高亮显示 如果玩家输入错误，文本框会变成红色 当玩家完成输入后，会显示一条成功消息以及所用时间 让我们开始构建游戏，同时学习事件的相关知识吧！ 文件结构 我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。 打开控制台或终端窗口，输入以下命令创建一个新文件夹： ```bash Linux or macOS mkdir typing-game && cd typing-game Windows md typing-game && cd typing-game ``` 打开 Visual Studio Code bash code在 Visual Studio Code 中为文件夹添加以下三个文件： indexhtml scriptjs stylecss\n创建用户界面\n根据需求分析，我们知道 HTML 页面需要以下几个元素。这有点像做菜时需要准备的食材：\n一个用于显示玩家需要输入的文字的区域\n一个用于显示消息（如成功消息）的区域\n一个用于输入的文本框\n一个开始按钮\n每个元素都需要一个 ID，以便我们在 JavaScript 中操作它们。我们还需要添加对 CSS 和 JavaScript 文件的引用。\n创建一个名为 index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1041,
    "chunk_index": 7,
    "total_chunks": 22
  },
  {
    "id": "19cf8337b2bd80ba17bf3b761aaab5b5",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "addEventListener。在我们的练习中，我们将专注于 addEventListener 和匿名函数，因为这是 Web 开发者最常用的技术之一。它也是最灵活的，因为 addEventListener 适用于所有事件，并且事件名称可以作为参数提供。 常见事件 在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）： click：用户点击了某个元素，通常是按钮或超链接 contextmenu：用户点击了鼠标右键 select：用户高亮了一些文本 input：用户输入了一些文本 创建游戏 我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下： 玩家点击开始按钮，看到一段需要输入的文字 玩家尽可能快地在文本框中输入这段文字 每完成一个单词，下一个单词会被高亮显示 如果玩家输入错误，文本框会变成红色 当玩家完成输入后，会显示一条成功消息以及所用时间 让我们开始构建游戏，同时学习事件的相关知识吧！ 文件结构 我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。 打开控制台或终端窗口，输入以下命令创建一个新文件夹： ```bash Linux or macOS mkdir typing-game && cd typing-game Windows md typing-game && cd typing-game ``` 打开 Visual Studio Code bash code在 Visual Studio Code 中为文件夹添加以下三个文件： indexhtml scriptjs stylecss 创建用户界面 根据需求分析，我们知道 HTML 页面需要以下几个元素。这有点像做菜时需要准备的食材： 一个用于显示玩家需要输入的文字的区域 一个用于显示消息（如成功消息）的区域 一个用于输入的文本框 一个开始按钮 每个元素都需要一个 ID，以便我们在 JavaScript 中操作它们。我们还需要添加对 CSS 和 JavaScript 文件的引用。 创建一个名为 indexhtml 的新文件，并添加以下 HTML：\n```html\nTyping game\nTyping game",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 722,
    "chunk_index": 8,
    "total_chunks": 22
  },
  {
    "id": "50c0c1353856ee93fb3455ba025da2ca",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "常见事件 在创建应用程序时，你可以监听的 事件种类繁多。基本上，用户在页面上执行的任何操作都会触发事件，这为你提供了极大的灵活性来确保用户获得理想的体验。幸运的是，你通常只需要使用少数几种事件。以下是一些常见的事件（包括我们在创建游戏时会用到的两种）： click：用户点击了某个元素，通常是按钮或超链接 contextmenu：用户点击了鼠标右键 select：用户高亮了一些文本 input：用户输入了一些文本 创建游戏 我们将通过创建一个游戏来探索 JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下： 玩家点击开始按钮，看到一段需要输入的文字 玩家尽可能快地在文本框中输入这段文字 每完成一个单词，下一个单词会被高亮显示 如果玩家输入错误，文本框会变成红色 当玩家完成输入后，会显示一条成功消息以及所用时间 让我们开始构建游戏，同时学习事件的相关知识吧！ 文件结构 我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。 打开控制台或终端窗口，输入以下命令创建一个新文件夹： ```bash Linux or macOS mkdir typing-game && cd typing-game Windows md typing-game && cd typing-game ``` 打开 Visual Studio Code bash code在 Visual Studio Code 中为文件夹添加以下三个文件： indexhtml scriptjs stylecss 创建用户界面 根据需求分析，我们知道 HTML 页面需要以下几个元素。这有点像做菜时需要准备的食材： 一个用于显示玩家需要输入的文字的区域 一个用于显示消息（如成功消息）的区域 一个用于输入的文本框 一个开始按钮 每个元素都需要一个 ID，以便我们在 JavaScript 中操作它们。我们还需要添加对 CSS 和 JavaScript 文件的引用。 创建一个名为 indexhtml 的新文件，并添加以下 HTML： ```html Typing game Typing gamePractice your typing skills with a quote from Sherlock Holmes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 653,
    "chunk_index": 9,
    "total_chunks": 22
  },
  {
    "id": "0a286bdf4905f179938dadbdb7d226bc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "JavaScript 中事件的工作原理。我们的游戏将测试玩家的打字技能，这是所有开发者都应该具备但常常被低估的一项技能。我们都应该练习打字！游戏的总体流程如下： 玩家点击开始按钮，看到一段需要输入的文字 玩家尽可能快地在文本框中输入这段文字 每完成一个单词，下一个单词会被高亮显示 如果玩家输入错误，文本框会变成红色 当玩家完成输入后，会显示一条成功消息以及所用时间 让我们开始构建游戏，同时学习事件的相关知识吧！ 文件结构 我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。 打开控制台或终端窗口，输入以下命令创建一个新文件夹： ```bash Linux or macOS mkdir typing-game && cd typing-game Windows md typing-game && cd typing-game ``` 打开 Visual Studio Code bash code在 Visual Studio Code 中为文件夹添加以下三个文件： indexhtml scriptjs stylecss 创建用户界面 根据需求分析，我们知道 HTML 页面需要以下几个元素。这有点像做菜时需要准备的食材： 一个用于显示玩家需要输入的文字的区域 一个用于显示消息（如成功消息）的区域 一个用于输入的文本框 一个开始按钮 每个元素都需要一个 ID，以便我们在 JavaScript 中操作它们。我们还需要添加对 CSS 和 JavaScript 文件的引用。 创建一个名为 indexhtml 的新文件，并添加以下 HTML： ```html Typing game Typing gamePractice your typing skills with a quote from Sherlock HolmesClick **start** to begin",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 10,
    "total_chunks": 22
  },
  {
    "id": "4df5cca40efbc17fb070f71e30cfe2ad",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "玩家尽可能快地在文本框中输入这段文字 每完成一个单词，下一个单词会被高亮显示 如果玩家输入错误，文本框会变成红色 当玩家完成输入后，会显示一条成功消息以及所用时间 让我们开始构建游戏，同时学习事件的相关知识吧！ 文件结构 我们需要创建三个文件：indexhtml、scriptjs 和 stylecss。让我们先设置好这些文件，以便后续开发更加顺利。 打开控制台或终端窗口，输入以下命令创建一个新文件夹： ```bash Linux or macOS mkdir typing-game && cd typing-game Windows md typing-game && cd typing-game ``` 打开 Visual Studio Code bash code在 Visual Studio Code 中为文件夹添加以下三个文件： indexhtml scriptjs stylecss 创建用户界面 根据需求分析，我们知道 HTML 页面需要以下几个元素。这有点像做菜时需要准备的食材： 一个用于显示玩家需要输入的文字的区域 一个用于显示消息（如成功消息）的区域 一个用于输入的文本框 一个开始按钮 每个元素都需要一个 ID，以便我们在 JavaScript 中操作它们。我们还需要添加对 CSS 和 JavaScript 文件的引用。 创建一个名为 indexhtml 的新文件，并添加以下 HTML： ```html Typing game Typing gamePractice your typing skills with a quote from Sherlock HolmesClick **start** to beginStart\n```\n启动应用程序\n开发时最好采用迭代方式，随时查看效果。让我们启动应用程序。Visual Studio Code 有一个非常棒的扩展 Live Server，它可以在本地托管你的应用程序，并在每次保存时刷新浏览器。\n按照链接安装 Live Server\n浏览器会提示你打开 Visual Studio Code，然后 Visual Studio Code 会提示你进行安装\n如果有提示，请重启 Visual Studio Code\n安装完成后，在 Visual Studio Code 中按 Ctrl-Shift-P（或 Cmd-Shift-P）打开命令面板\n输入 Live Server: Open with Live Server\nLive Server 会开始托管你的应用程序\n打开浏览器，导航到 https://localhost:5500\n你现在应该能看到刚刚创建的页面！\n接下来让我们添加一些功能。\n添加 CSS\nHTML 创建完成后，我们需要添加核心样式的 CSS。我们需要高亮玩家应该输入的单词，并在玩家输入错误时为文本框着色。我们将通过两个类来实现这些功能。\n创建一个名为 style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 11,
    "total_chunks": 22
  },
  {
    "id": "acefeab423f47daf3f3b8247f122da29",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "CSS 和 JavaScript 文件的引用。 创建一个名为 indexhtml 的新文件，并添加以下 HTML： ```html Typing game Typing gamePractice your typing skills with a quote from Sherlock HolmesClick **start** to beginStart ``` 启动应用程序 开发时最好采用迭代方式，随时查看效果。让我们启动应用程序。Visual Studio Code 有一个非常棒的扩展 Live Server，它可以在本地托管你的应用程序，并在每次保存时刷新浏览器。 按照链接安装 Live Server 浏览器会提示你打开 Visual Studio Code，然后 Visual Studio Code 会提示你进行安装 如果有提示，请重启 Visual Studio Code 安装完成后，在 Visual Studio Code 中按 Ctrl-Shift-P（或 Cmd-Shift-P）打开命令面板 输入 Live Server: Open with Live Server Live Server 会开始托管你的应用程序 打开浏览器，导航到 https://localhost:5500 你现在应该能看到刚刚创建的页面！ 接下来让我们添加一些功能。 添加 CSS HTML 创建完成后，我们需要添加核心样式的 CSS。我们需要高亮玩家应该输入的单词，并在玩家输入错误时为文本框着色。我们将通过两个类来实现这些功能。 创建一个名为 stylecss 的新文件，并添加以下语法。\n```css\n/ inside style css / highlight {\nbackground-color: yellow;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 12,
    "total_chunks": 22
  },
  {
    "id": "9c339176726cd832defe23a5db92365b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "gamePractice your typing skills with a quote from Sherlock HolmesClick **start** to beginStart ``` 启动应用程序 开发时最好采用迭代方式，随时查看效果。让我们启动应用程序。Visual Studio Code 有一个非常棒的扩展 Live Server，它可以在本地托管你的应用程序，并在每次保存时刷新浏览器。 按照链接安装 Live Server 浏览器会提示你打开 Visual Studio Code，然后 Visual Studio Code 会提示你进行安装 如果有提示，请重启 Visual Studio Code 安装完成后，在 Visual Studio Code 中按 Ctrl-Shift-P（或 Cmd-Shift-P）打开命令面板 输入 Live Server: Open with Live Server Live Server 会开始托管你的应用程序 打开浏览器，导航到 https://localhost:5500 你现在应该能看到刚刚创建的页面！ 接下来让我们添加一些功能。 添加 CSS HTML 创建完成后，我们需要添加核心样式的 CSS。我们需要高亮玩家应该输入的单词，并在玩家输入错误时为文本框着色。我们将通过两个类来实现这些功能。 创建一个名为 stylecss 的新文件，并添加以下语法。 ```css / inside style css / highlight { background-color: yellow; }error {\nbackground-color: lightcoral;\nborder: red;\n}\n```\n✅ 关于 CSS，你可以根据自己的喜好设计页面布局。花点时间让页面更美观：\n选择不同的字体\n为标题添加颜色\n调整元素大小\nJavaScript\n用户界面创建完成后，我们将重点放在提供逻辑的 JavaScript 上。我们将把它分解为几个步骤：\n创建常量\n添加开始游戏的事件监听器\n添加输入事件监听器\n首先，创建一个名为 script",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 13,
    "total_chunks": 22
  },
  {
    "id": "5e6b91ea54a693b5d0e3d4567900e4a6",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "Live Server 浏览器会提示你打开 Visual Studio Code，然后 Visual Studio Code 会提示你进行安装 如果有提示，请重启 Visual Studio Code 安装完成后，在 Visual Studio Code 中按 Ctrl-Shift-P（或 Cmd-Shift-P）打开命令面板 输入 Live Server: Open with Live Server Live Server 会开始托管你的应用程序 打开浏览器，导航到 https://localhost:5500 你现在应该能看到刚刚创建的页面！ 接下来让我们添加一些功能。 添加 CSS HTML 创建完成后，我们需要添加核心样式的 CSS。我们需要高亮玩家应该输入的单词，并在玩家输入错误时为文本框着色。我们将通过两个类来实现这些功能。 创建一个名为 stylecss 的新文件，并添加以下语法。 ```css / inside style css / highlight { background-color: yellow; }error { background-color: lightcoral; border: red; } ``` ✅ 关于 CSS，你可以根据自己的喜好设计页面布局。花点时间让页面更美观： 选择不同的字体 为标题添加颜色 调整元素大小 JavaScript 用户界面创建完成后，我们将重点放在提供逻辑的 JavaScript 上。我们将把它分解为几个步骤： 创建常量 添加开始游戏的事件监听器 添加输入事件监听器 首先，创建一个名为 scriptjs 的新文件。\n创建常量\n我们需要一些内容来简化编程。类似于做菜的配料清单，我们需要以下内容：\n包含所有句子的数组\n用于存储当前句子中所有单词的空数组\n用于存储玩家当前输入单词索引的变量\n玩家点击开始按钮的时间\n我们还需要引用以下用户界面元素：\n文本框（typed-value）\n显示句子的区域（quote）\n显示消息的区域（message）\njavascript\n// inside script",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 14,
    "total_chunks": 22
  },
  {
    "id": "6df939535fd7dc65936e393ba9217d20",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "Visual Studio Code 中按 Ctrl-Shift-P（或 Cmd-Shift-P）打开命令面板 输入 Live Server: Open with Live Server Live Server 会开始托管你的应用程序 打开浏览器，导航到 https://localhost:5500 你现在应该能看到刚刚创建的页面！ 接下来让我们添加一些功能。 添加 CSS HTML 创建完成后，我们需要添加核心样式的 CSS。我们需要高亮玩家应该输入的单词，并在玩家输入错误时为文本框着色。我们将通过两个类来实现这些功能。 创建一个名为 stylecss 的新文件，并添加以下语法。 ```css / inside style css / highlight { background-color: yellow; }error { background-color: lightcoral; border: red; } ``` ✅ 关于 CSS，你可以根据自己的喜好设计页面布局。花点时间让页面更美观： 选择不同的字体 为标题添加颜色 调整元素大小 JavaScript 用户界面创建完成后，我们将重点放在提供逻辑的 JavaScript 上。我们将把它分解为几个步骤： 创建常量 添加开始游戏的事件监听器 添加输入事件监听器 首先，创建一个名为 scriptjs 的新文件。 创建常量 我们需要一些内容来简化编程。类似于做菜的配料清单，我们需要以下内容： 包含所有句子的数组 用于存储当前句子中所有单词的空数组 用于存储玩家当前输入单词索引的变量 玩家点击开始按钮的时间 我们还需要引用以下用户界面元素： 文本框（typed-value） 显示句子的区域（quote） 显示消息的区域（message） javascript // inside scriptjs\n// all of our quotes\nconst quotes = [\n'When you have eliminated the impossible, whatever remains, however improbable, must be the truth",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 15,
    "total_chunks": 22
  },
  {
    "id": "d28c1cf8a1e778018985821171fb3c0c",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "创建完成后，我们需要添加核心样式的 CSS。我们需要高亮玩家应该输入的单词，并在玩家输入错误时为文本框着色。我们将通过两个类来实现这些功能。 创建一个名为 stylecss 的新文件，并添加以下语法。 ```css / inside style css / highlight { background-color: yellow; }error { background-color: lightcoral; border: red; } ``` ✅ 关于 CSS，你可以根据自己的喜好设计页面布局。花点时间让页面更美观： 选择不同的字体 为标题添加颜色 调整元素大小 JavaScript 用户界面创建完成后，我们将重点放在提供逻辑的 JavaScript 上。我们将把它分解为几个步骤： 创建常量 添加开始游戏的事件监听器 添加输入事件监听器 首先，创建一个名为 scriptjs 的新文件。 创建常量 我们需要一些内容来简化编程。类似于做菜的配料清单，我们需要以下内容： 包含所有句子的数组 用于存储当前句子中所有单词的空数组 用于存储玩家当前输入单词索引的变量 玩家点击开始按钮的时间 我们还需要引用以下用户界面元素： 文本框（typed-value） 显示句子的区域（quote） 显示消息的区域（message） javascript // inside scriptjs // all of our quotes const quotes = [ 'When you have eliminated the impossible, whatever remains, however improbable, must be the truth',\n'There is nothing more deceptive than an obvious fact ',\n'I ought to know by this time that when a fact appears to be opposed to a long train of deductions it invariably proves to be capable of bearing some other interpretation ',\n'I never make exceptions An exception disproves the rule ',\n'What one man can invent another can discover ',\n'Nothing clears up a case so much as stating it to another person ',\n'Education never ends, Watson It is a series of lessons, with the greatest for the last",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 16,
    "total_chunks": 22
  },
  {
    "id": "20579fd349622c707eb7855df60bfaab",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "time that when a fact appears to be opposed to a long train of deductions it invariably proves to be capable of bearing some other interpretation ', 'I never make exceptions An exception disproves the rule ', 'What one man can invent another can discover ', 'Nothing clears up a case so much as stating it to another person ', 'Education never ends, Watson It is a series of lessons, with the greatest for the last',\n];\n// store the list of words and the index of the word the player is currently typing\nlet words = [];\nlet wordIndex = 0;\n// the starting time\nlet startTime = Date now();\n// page elements\nconst quoteElement = document getElementById('quote');\nconst messageElement = document getElementById('message');\nconst typedValueElement = document getElementById('typed-value');\n✅ 为你的游戏添加更多句子\nNOTE: 我们可以通过 document getElementById 在代码中随时获取这些元素。由于我们会经常引用这些元素，为了避免字符串拼写错误，我们使用常量来管理它们。像 Vue js 或 React 这样的框架可以帮助你更好地集中管理代码。\n花点时间观看关于 const、let 和 var 的视频\n🎥 点击上方图片观看关于变量的视频。\n添加开始逻辑\n游戏开始时，玩家会点击开始按钮。当然，我们无法预测玩家何时点击开始按钮。这时 事件监听器 就派上用场了。事件监听器允许我们监听某些事件的发生，并在事件发生时执行代码。在我们的例子中，我们希望在用户点击开始按钮时执行代码。\n当用户点击 开始 时，我们需要选择一个句子，设置用户界面，并初始化当前单词和计时的追踪。以下是需要添加的 JavaScript，我们将在代码块后进行讲解。\n```javascript\n// at the end of script js\ndocument getElementById('start') addEventListener('click', () => {\n// get a quote\nconst quoteIndex = Math floor(Math random() * quotes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 17,
    "total_chunks": 22
  },
  {
    "id": "2fc9b73b4c4ad90a171370464d044899",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "let startTime = Date now(); // page elements const quoteElement = document getElementById('quote'); const messageElement = document getElementById('message'); const typedValueElement = document getElementById('typed-value'); ✅ 为你的游戏添加更多句子 NOTE: 我们可以通过 document getElementById 在代码中随时获取这些元素。由于我们会经常引用这些元素，为了避免字符串拼写错误，我们使用常量来管理它们。像 Vue js 或 React 这样的框架可以帮助你更好地集中管理代码。 花点时间观看关于 const、let 和 var 的视频 🎥 点击上方图片观看关于变量的视频。 添加开始逻辑 游戏开始时，玩家会点击开始按钮。当然，我们无法预测玩家何时点击开始按钮。这时 事件监听器 就派上用场了。事件监听器允许我们监听某些事件的发生，并在事件发生时执行代码。在我们的例子中，我们希望在用户点击开始按钮时执行代码。 当用户点击 开始 时，我们需要选择一个句子，设置用户界面，并初始化当前单词和计时的追踪。以下是需要添加的 JavaScript，我们将在代码块后进行讲解。 ```javascript // at the end of script js document getElementById('start') addEventListener('click', () => { // get a quote const quoteIndex = Math floor(Math random() * quoteslength);\nconst quote = quotes[quoteIndex];\n// Put the quote into an array of words\nwords = quote split(' ');\n// reset the word index for tracking\nwordIndex = 0;\n// UI updates\n// Create an array of span elements so we can set a class\nconst spanWords = words map(function(word) { return <span>${word} </span>});\n// Convert into string and set as innerHTML on quote display\nquoteElement innerHTML = spanWords join('');\n// Highlight the first word\nquoteElement childNodes[0] className = 'highlight';\n// Clear any prior messages\nmessageElement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 18,
    "total_chunks": 22
  },
  {
    "id": "1dd831526a45c023abdb438cce53419e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "an array of words words = quote split(' '); // reset the word index for tracking wordIndex = 0; // UI updates // Create an array of span elements so we can set a class const spanWords = words map(function(word) { return <span>${word} </span>}); // Convert into string and set as innerHTML on quote display quoteElement innerHTML = spanWords join(''); // Highlight the first word quoteElement childNodes[0] className = 'highlight'; // Clear any prior messages messageElementinnerText = '';\n// Setup the textbox\n// Clear the textbox\ntypedValueElement value = '';\n// set focus\ntypedValueElement focus();\n// set the event handler\n// Start the timer\nstartTime = new Date() getTime();\n});\n```\n让我们分解代码！\n设置单词追踪\n使用 Math floor 和 Math random 随机选择 quotes 数组中的一个句子\n将 quote 转换为 words 数组，以便追踪玩家当前输入的单词\n将 wordIndex 设置为 0，因为玩家从第一个单词开始\n设置用户界面\n创建一个包含每个单词的 span 元素的 spanWords 数组\n这样我们可以高亮显示当前单词\n使用 join 方法将数组转换为字符串，并更新 quoteElement 的 innerHTML\n这会将句子显示给玩家\n将第一个 span 元素的 className 设置为 highlight，以黄色高亮显示\n通过将 messageElement 的 innerText 设置为空字符串来清空消息区域\n设置文本框\n清空 typedValueElement 的当前 value\n将焦点设置到 typedValueElement\n通过调用 getTime 开始计时\n添加输入逻辑\n当玩家输入时，会触发 input 事件。这个事件监听器将检查玩家输入是否正确，并处理游戏的当前状态。在 script js 文件末尾添加以下代码。我们将在代码块后进行讲解。\n```javascript\n// at the end of script js\ntypedValueElement addEventListener('input', () => {\n// Get the current word\nconst currentWord = words[wordIndex];\n// get the current value\nconst typedValue = typedValueElement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 19,
    "total_chunks": 22
  },
  {
    "id": "58b6fa9f94c39bd058bf4fceee5c4915",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "wordIndex 设置为 0，因为玩家从第一个单词开始 设置用户界面 创建一个包含每个单词的 span 元素的 spanWords 数组 这样我们可以高亮显示当前单词 使用 join 方法将数组转换为字符串，并更新 quoteElement 的 innerHTML 这会将句子显示给玩家 将第一个 span 元素的 className 设置为 highlight，以黄色高亮显示 通过将 messageElement 的 innerText 设置为空字符串来清空消息区域 设置文本框 清空 typedValueElement 的当前 value 将焦点设置到 typedValueElement 通过调用 getTime 开始计时 添加输入逻辑 当玩家输入时，会触发 input 事件。这个事件监听器将检查玩家输入是否正确，并处理游戏的当前状态。在 script js 文件末尾添加以下代码。我们将在代码块后进行讲解。 ```javascript // at the end of script js typedValueElement addEventListener('input', () => { // Get the current word const currentWord = words[wordIndex]; // get the current value const typedValue = typedValueElementvalue;\nif (typedValue === currentWord && wordIndex === words length - 1) {\n// end of sentence\n// Display success\nconst elapsedTime = new Date() getTime() - startTime;\nconst message = CONGRATULATIONS You finished in ${elapsedTime / 1000} seconds ;\nmessageElement innerText = message;\n} else if (typedValue endsWith(' ') && typedValue trim() === currentWord) {\n// end of word\n// clear the typedValueElement for the new word\ntypedValueElement value = '';\n// move to the next word\nwordIndex++;\n// reset the class name for all elements in quote\nfor (const wordElement of quoteElement childNodes) {\nwordElement className = '';\n}\n// highlight the new word\nquoteElement childNodes[wordIndex] className = 'highlight';\n} else if (currentWord startsWith(typedValue)) {\n// currently correct\n// highlight the next word\ntypedValueElement className = '';\n} else {\n// error state\ntypedValueElement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 20,
    "total_chunks": 22
  },
  {
    "id": "8216164449cf065252f913151b52e004",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
    "source_type": "git_repo",
    "title": "Typing game",
    "content": "// clear the typedValueElement for the new word typedValueElement value = ''; // move to the next word wordIndex++; // reset the class name for all elements in quote for (const wordElement of quoteElement childNodes) { wordElement className = ''; } // highlight the new word quoteElement childNodes[wordIndex] className = 'highlight'; } else if (currentWord startsWith(typedValue)) { // currently correct // highlight the next word typedValueElement className = ''; } else { // error state typedValueElementclassName = 'error';\n}\n});\n```\n让我们分解代码！我们首先获取当前单词和玩家目前输入的内容。然后通过一系列逻辑检查，判断句子是否完成、单词是否完成、单词是否正确，或者是否存在错误。\n句子完成：当 typedValue 等于 currentWord 且 wordIndex 等于 words 长度减一时\n通过将当前时间减去 startTime 计算 elapsedTime\n将 elapsedTime 除以 1,000，将毫秒转换为秒\n显示成功消息\n单词完成：当 typedValue 以空格结尾（表示单词结束）且 typedValue 等于 currentWord 时\n将 typedElement 的 value 设置为空，以便输入下一个单词\n增加 wordIndex，以移动到下一个单词\n遍历 quoteElement 的所有 childNodes，将 className 设置为空，恢复默认显示\n将当前单词的 className 设置为 highlight，标记为下一个需要输入的单词\n当前单词输入正确（但未完成）：当 currentWord 以 typedValue 开头时\n通过清空 className 确保 typedValueElement 显示为默认状态\n如果以上条件都不满足，则存在错误\n将 typedValueElement 的 className 设置为 error\n测试你的应用程序\n你已经完成了！最后一步是确保我们的应用程序能够正常运行。试试看吧！如果出现错误也不用担心，所有开发者都会遇到错误。检查错误信息并进行调试。\n点击 开始，然后开始输入！它应该看起来像我们之前看到的动画。\n🚀 挑战\n添加更多功能\n在完成游戏时禁用 input 事件监听器，并在点击按钮时重新启用\n在玩家完成句子时禁用文本框\n显示一个模态对话框，包含成功消息\n使用 localStorage 存储高分\n课后测验\n课后测验\n复习与自学\n阅读 浏览器中可用的所有事件，并思考每种事件适用的场景。\n作业\n创建一个新的键盘游戏\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17014,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\4-typing-game\\typing-game\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 794,
    "chunk_index": 21,
    "total_chunks": 22
  },
  {
    "id": "e6350478c5d7b0319447816247122b1b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\assignment.md",
    "source_type": "git_repo",
    "title": "数据类型练习",
    "content": "数据类型练习\n说明\n假设你正在构建一个购物车。编写一些关于完成购物体验所需数据类型的文档。你是如何得出这些选择的？\n评分标准\n标准 | 优秀 | 合格 | 需要改进\n--- | --- | --- | --- |\n||列出了六种数据类型并进行了详细探讨，记录了它们的用途|探讨了四种数据类型|探讨了两种数据类型|\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1073,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6686da1f7f1b4e91c62e49c19f4982be",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\assignment.md",
    "source_type": "git_repo",
    "title": "玩转函数",
    "content": "玩转函数\n说明\n创建不同的函数，包括返回值的函数和不返回值的函数。\n试着创建一个包含普通参数和带默认值参数的混合函数。\n评分标准\n| 标准     | 优秀                                                                                   | 合格                                                         | 需改进           |\n| -------- | -------------------------------------------------------------------------------------- | ------------------------------------------------------------ | ----------------- |\n|          | 提供了两个或更多性能良好的函数，且参数多样化                                           | 提供了一个可运行的函数，参数较少                             | 解决方案存在问题 |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1487,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "992726bf77d472baaaf0312051eb4a76",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数据类型",
    "content": "JavaScript 基础：数据类型\n由 Tomomi Imura 绘制的速记笔记\n课前测验\n课前测验\n本课程介绍 JavaScript 的基础知识，这是一种为网页提供交互功能的语言。\n你可以在 Microsoft Learn 上学习本课程！\n🎥 点击上方图片观看关于变量和数据类型的视频\n让我们从变量和填充它们的数据类型开始吧！\n变量\n变量用于存储值，这些值可以在代码中使用并随时更改。\n创建和声明变量的语法如下：[关键字] [名称]。它由以下两部分组成：\n关键字。关键字可以是 let 或 var。\n✅ 关键字 let 是在 ES6 中引入的，它为变量提供了所谓的 块作用域。建议使用 let 而不是 var。我们将在后续部分更深入地讨论块作用域。\n- 变量名，这是你自己选择的名称。\n任务 - 使用变量\n声明一个变量。让我们使用 let 关键字声明一个变量：\njavascript\nlet myVariable;\nmyVariable 现在已经使用 let 关键字声明了。它目前没有值。\n赋值。使用 = 操作符将值存储到变量中，后面跟随预期的值。\njavascript\nmyVariable = 123;\n注意：在本课程中，= 的使用表示我们使用了“赋值操作符”，用于将值设置到变量中。它并不表示相等。\nmyVariable 现在已经被 初始化 为值 123。\n重构。将代码替换为以下语句。\njavascript\nlet myVariable = 123;\n上述代码称为 显式初始化，即变量在声明时同时被赋值。\n更改变量值。以下方式更改变量值：\njavascript\nmyVariable = 321;\n一旦变量被声明，你可以随时使用 = 操作符和新值来更改它的值。\n✅ 试试吧！你可以直接在浏览器中编写 JavaScript。打开一个浏览器窗口并导航到开发者工具。在控制台中，你会看到一个提示符；输入 let myVariable = 123，按回车，然后输入 myVariable。会发生什么？注意，你将在后续课程中学习更多相关概念。\n常量\n常量的声明和初始化遵循与变量相同的概念，但使用 const 关键字。常量通常使用全大写字母声明。\njavascript\nconst MY_VARIABLE = 123;\n常量与变量类似，但有两个例外：\n必须有值。常量必须被初始化，否则运行代码时会出现错误。\n引用不可更改。常量的引用在初始化后不可更改，否则运行代码时会出现错误。让我们看两个例子：\n简单值。以下是不允许的：\njavascript\nconst PI = 3;\nPI = 4; // not allowed\n对象引用受保护。以下是不允许的：\njavascript\nconst obj = { a: 3 };\nobj = { b: 5 } // not allowed\n对象值不受保护。以下是允许的：\njavascript\nconst obj = { a: 3 };\nobj",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9507,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 875,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "2a48c96196de8a7224f04320f4a6d3ab",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数据类型",
    "content": "重构。将代码替换为以下语句。 javascript let myVariable = 123; 上述代码称为 显式初始化，即变量在声明时同时被赋值。 更改变量值。以下方式更改变量值： javascript myVariable = 321; 一旦变量被声明，你可以随时使用 = 操作符和新值来更改它的值。 ✅ 试试吧！你可以直接在浏览器中编写 JavaScript。打开一个浏览器窗口并导航到开发者工具。在控制台中，你会看到一个提示符；输入 let myVariable = 123，按回车，然后输入 myVariable。会发生什么？注意，你将在后续课程中学习更多相关概念。 常量 常量的声明和初始化遵循与变量相同的概念，但使用 const 关键字。常量通常使用全大写字母声明。 javascript const MY_VARIABLE = 123; 常量与变量类似，但有两个例外： 必须有值。常量必须被初始化，否则运行代码时会出现错误。 引用不可更改。常量的引用在初始化后不可更改，否则运行代码时会出现错误。让我们看两个例子： 简单值。以下是不允许的： javascript const PI = 3; PI = 4; // not allowed 对象引用受保护。以下是不允许的： javascript const obj = { a: 3 }; obj = { b: 5 } // not allowed 对象值不受保护。以下是允许的： javascript const obj = { a: 3 }; obja = 5;  // allowed\n上述代码中，你更改了对象的值，但没有更改其引用本身，因此是允许的。\n注意，const 表示引用受到保护，不能重新赋值。然而，值并非 不可变，尤其是当它是一个复杂结构（如对象）时，值仍然可以更改。\n数据类型\n变量可以存储多种不同类型的值，例如数字和文本。这些不同类型的值被称为 数据类型。数据类型是软件开发的重要组成部分，因为它帮助开发者决定代码的编写方式以及软件的运行方式。此外，一些数据类型具有独特的功能，可以帮助转换或提取值中的附加信息。\n✅ 数据类型也被称为 JavaScript 数据原语，因为它们是语言提供的最低级别的数据类型。JavaScript 有 7 种原始数据类型：string、number、bigint、boolean、undefined、null 和 symbol。花点时间想象一下这些原语分别代表什么。zebra 是什么？0 又是什么？true 呢？\n数字\n在上一节中，myVariable 的值是一个数字数据类型。\nlet myVariable = 123;\n变量可以存储所有类型的数字，包括小数或负数。数字还可以与算术操作符一起使用，这将在下一节中介绍。\n算术操作符\n在执行算术运算时可以使用多种操作符，以下列出了一些：\n| 符号  | 描述                                                                      | 示例                              |\n| ------ | ------------------------------------------------------------------------ | --------------------------------- |\n| +    | 加法：计算两个数字的和                                               | 1 + 2 //预期答案是 3            |\n| -    | 减法：计算两个数字的差                                               | 1 - 2 //预期答案是 -1           |\n| *    | 乘法：计算两个数字的乘积                                             | 1 * 2 //预期答案是 2            |\n| /    | 除法：计算两个数字的商                                               | 1 / 2 //预期答案是 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9507,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1014,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "4918a2fdf1732bb0596933b6978ce1f9",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数据类型",
    "content": "数据原语，因为它们是语言提供的最低级别的数据类型。JavaScript 有 7 种原始数据类型：string、number、bigint、boolean、undefined、null 和 symbol。花点时间想象一下这些原语分别代表什么。zebra 是什么？0 又是什么？true 呢？ 数字 在上一节中，myVariable 的值是一个数字数据类型。 let myVariable = 123; 变量可以存储所有类型的数字，包括小数或负数。数字还可以与算术操作符一起使用，这将在下一节中介绍。 算术操作符 在执行算术运算时可以使用多种操作符，以下列出了一些： | 符号 | 描述 | 示例 | | ------ | ------------------------------------------------------------------------ | --------------------------------- | | + | 加法：计算两个数字的和 | 1 + 2 //预期答案是 3 | | - | 减法：计算两个数字的差 | 1 - 2 //预期答案是 -1 | | * | 乘法：计算两个数字的乘积 | 1 * 2 //预期答案是 2 | | / | 除法：计算两个数字的商 | 1 / 2 //预期答案是 05          |\n| %    | 取余：计算两个数字相除后的余数                                       | 1 % 2 //预期答案是 1            |\n✅ 试试吧！在浏览器的控制台中尝试一个算术运算。结果是否让你感到惊讶？\n字符串\n字符串是一组字符，位于单引号或双引号之间。\n'这是一个字符串'\n\"这也是一个字符串\"\nlet myString = '这是存储在变量中的字符串值';\n记住在编写字符串时使用引号，否则 JavaScript 会认为它是一个变量名。\n格式化字符串\n字符串是文本，有时需要进行格式化。\n要连接两个或多个字符串，可以使用 + 操作符。\n```javascript\nlet myString1 = \"Hello\";\nlet myString2 = \"World\";\nmyString1 + myString2 + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9507,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 553,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "8ecc25fa0cb69d54ebe00f963c4660ab",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数据类型",
    "content": "| - | 减法：计算两个数字的差 | 1 - 2 //预期答案是 -1 | | * | 乘法：计算两个数字的乘积 | 1 * 2 //预期答案是 2 | | / | 除法：计算两个数字的商 | 1 / 2 //预期答案是 05 | | % | 取余：计算两个数字相除后的余数 | 1 % 2 //预期答案是 1 | ✅ 试试吧！在浏览器的控制台中尝试一个算术运算。结果是否让你感到惊讶？ 字符串 字符串是一组字符，位于单引号或双引号之间。 '这是一个字符串' \"这也是一个字符串\" let myString = '这是存储在变量中的字符串值'; 记住在编写字符串时使用引号，否则 JavaScript 会认为它是一个变量名。 格式化字符串 字符串是文本，有时需要进行格式化。 要连接两个或多个字符串，可以使用 + 操作符。 ```javascript let myString1 = \"Hello\"; let myString2 = \"World\"; myString1 + myString2 + \"\"; //HelloWorld myString1 + \" \" + myString2 + \" \"; //Hello World myString1 + \", \" + myString2 + \" \"; //Hello, World ```\n✅ 为什么在 JavaScript 中 1 + 1 = 2，而 '1' + '1' = 11？想一想。那 '1' + 1 呢？\n模板字面量是另一种格式化字符串的方法，除了使用引号，还使用反引号。任何非纯文本内容都必须放在占位符 ${ } 中。这包括可能是字符串的任何变量。\n```javascript\nlet myString1 = \"Hello\";\nlet myString2 = \"World\";\n${myString1} ${myString2} //Hello World",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9507,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "a2f8f0242cef6cf1172516cd97d0dd25",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数据类型",
    "content": "要连接两个或多个字符串，可以使用 + 操作符。 ```javascript let myString1 = \"Hello\"; let myString2 = \"World\"; myString1 + myString2 + \"\"; //HelloWorld myString1 + \" \" + myString2 + \" \"; //Hello World myString1 + \", \" + myString2 + \" \"; //Hello, World ``` ✅ 为什么在 JavaScript 中 1 + 1 = 2，而 '1' + '1' = 11？想一想。那 '1' + 1 呢？ 模板字面量是另一种格式化字符串的方法，除了使用引号，还使用反引号。任何非纯文本内容都必须放在占位符 ${ } 中。这包括可能是字符串的任何变量。 ```javascript let myString1 = \"Hello\"; let myString2 = \"World\"; ${myString1} ${myString2} //Hello World${myString1}, ${myString2} //Hello, World",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9507,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "b1834d286fcb17fdbeb27929700ca5ec",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数据类型",
    "content": "```javascript let myString1 = \"Hello\"; let myString2 = \"World\"; myString1 + myString2 + \"\"; //HelloWorld myString1 + \" \" + myString2 + \" \"; //Hello World myString1 + \", \" + myString2 + \" \"; //Hello, World ``` ✅ 为什么在 JavaScript 中 1 + 1 = 2，而 '1' + '1' = 11？想一想。那 '1' + 1 呢？ 模板字面量是另一种格式化字符串的方法，除了使用引号，还使用反引号。任何非纯文本内容都必须放在占位符 ${ } 中。这包括可能是字符串的任何变量。 ```javascript let myString1 = \"Hello\"; let myString2 = \"World\"; ${myString1} ${myString2} //Hello World${myString1}, ${myString2} //Hello, World```\n你可以使用任意一种方法实现你的格式化目标，但模板字面量会保留所有空格和换行。\n✅ 什么时候你会使用模板字面量而不是普通字符串？\n布尔值\n布尔值只有两个可能的值：true 或 false。布尔值可以帮助决定在满足某些条件时哪些代码行应该运行。在许多情况下，操作符 会协助设置布尔值，并且你会经常注意到变量被初始化或其值通过操作符更新。\nlet myTrueBool = true\nlet myFalseBool = false\n✅ 如果一个变量的值被评估为布尔值 true，它可以被认为是“真值”。有趣的是，在 JavaScript 中，所有值都是真值，除非被定义为假值。\n🚀 挑战\nJavaScript 因其处理数据类型的意外方式而闻名。研究一下这些“陷阱”。例如：大小写敏感可能会让你吃亏！在控制台中试试这个：let age = 1; let Age = 2; age == Age（结果是 false —— 为什么？）。你还能发现哪些其他陷阱？\n课后测验\n课后测验\n复习与自学\n查看这份 JavaScript 练习列表并尝试其中一个。你学到了什么？\n作业\n数据类型练习\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9507,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\1-data-types\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 749,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "ddcdeea1a58138736e545b9db93de96d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\assignment.md",
    "source_type": "git_repo",
    "title": "运算符",
    "content": "运算符\n说明\n尝试使用运算符。以下是一个可以实现的程序建议：\n你有一组来自两个不同评分系统的学生。\n第一个评分系统\n第一个评分系统的分数范围是1到5，其中3分及以上表示通过课程。\n第二个评分系统\n另一个评分系统的分数为 A, A-, B, B-, C, C-，其中 A 是最高分，C 是最低的及格分。\n任务\n给定以下数组 allStudents，表示所有学生及其成绩，构造一个新数组 studentsWhoPass，包含所有通过的学生。\nTIP，使用 for 循环、if...else 和比较运算符：\n```javascript\nlet allStudents = [\n'A',\n'B-',\n1,\n4,\n5,\n2\n]\nlet studentsWhoPass = [];\n```\n评分标准\n| 标准     | 优秀                          | 合格                          | 需要改进                        |\n| -------- | ------------------------------ | ----------------------------- | ------------------------------- |\n|          | 提供了完整的解决方案           | 提供了部分解决方案            | 提供的解决方案存在错误          |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1827,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f61b97df05a257b5d71573aa3a67ae36",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "JavaScript 基础：方法与函数\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n在编写代码时，我们总是希望代码具有良好的可读性。虽然这听起来有些反直觉，但代码被阅读的次数远远多于被编写的次数。开发者工具箱中的一个核心工具就是 函数，它能帮助我们确保代码的可维护性。\n🎥 点击上方图片观看关于方法与函数的视频。\n你可以在 Microsoft Learn 上学习本课程！\n函数\n从本质上讲，函数是一段可以按需执行的代码块。这非常适合需要多次执行相同任务的场景；与其在多个地方重复逻辑（这样会导致更新时非常麻烦），不如将逻辑集中在一个地方，并在需要时调用它——甚至可以从其他函数中调用函数！\n函数的命名同样重要。虽然这看起来很简单，但函数名为代码段提供了一种快速的文档化方式。你可以将其想象成按钮上的标签。如果我点击一个写着“取消计时器”的按钮，我就知道它会停止计时。\n创建和调用函数\n函数的语法如下所示：\njavascript\nfunction nameOfFunction() { // function definition\n// function definition/body\n}\n如果我想创建一个显示问候语的函数，它可能看起来像这样：\njavascript\nfunction displayGreeting() {\nconsole log('Hello, world",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "44963d61b56426483953e64ed8db434b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "JavaScript 基础：方法与函数\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n在编写代码时，我们总是希望代码具有良好的可读性。虽然这听起来有些反直觉，但代码被阅读的次数远远多于被编写的次数。开发者工具箱中的一个核心工具就是 函数，它能帮助我们确保代码的可维护性。\n🎥 点击上方图片观看关于方法与函数的视频。\n你可以在 Microsoft Learn 上学习本课程！\n函数\n从本质上讲，函数是一段可以按需执行的代码块。这非常适合需要多次执行相同任务的场景；与其在多个地方重复逻辑（这样会导致更新时非常麻烦），不如将逻辑集中在一个地方，并在需要时调用它——甚至可以从其他函数中调用函数！\n函数的命名同样重要。虽然这看起来很简单，但函数名为代码段提供了一种快速的文档化方式。你可以将其想象成按钮上的标签。如果我点击一个写着“取消计时器”的按钮，我就知道它会停止计时。\n创建和调用函数\n函数的语法如下所示：\njavascript\nfunction nameOfFunction() { // function definition\n// function definition/body\n}\n如果我想创建一个显示问候语的函数，它可能看起来像这样：\njavascript\nfunction displayGreeting() {\nconsole log('Hello, world');\n}\n每当我们想调用（或执行）函数时，只需使用函数名并加上 ()。值得注意的是，函数可以在定义之前或之后调用；JavaScript 编译器会帮你找到它。\njavascript\n// calling our function\ndisplayGreeting();\nNOTE: 有一种特殊类型的函数叫做 方法，你已经在使用了！事实上，我们在上面的演示中使用 console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 539,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "19a4c79b3930abe4c2ac25f7511ddcd0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "JavaScript 基础：方法与函数\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n在编写代码时，我们总是希望代码具有良好的可读性。虽然这听起来有些反直觉，但代码被阅读的次数远远多于被编写的次数。开发者工具箱中的一个核心工具就是 函数，它能帮助我们确保代码的可维护性。\n🎥 点击上方图片观看关于方法与函数的视频。\n你可以在 Microsoft Learn 上学习本课程！\n函数\n从本质上讲，函数是一段可以按需执行的代码块。这非常适合需要多次执行相同任务的场景；与其在多个地方重复逻辑（这样会导致更新时非常麻烦），不如将逻辑集中在一个地方，并在需要时调用它——甚至可以从其他函数中调用函数！\n函数的命名同样重要。虽然这看起来很简单，但函数名为代码段提供了一种快速的文档化方式。你可以将其想象成按钮上的标签。如果我点击一个写着“取消计时器”的按钮，我就知道它会停止计时。\n创建和调用函数\n函数的语法如下所示：\njavascript\nfunction nameOfFunction() { // function definition\n// function definition/body\n}\n如果我想创建一个显示问候语的函数，它可能看起来像这样：\njavascript\nfunction displayGreeting() {\nconsole log('Hello, world');\n}\n每当我们想调用（或执行）函数时，只需使用函数名并加上 ()。值得注意的是，函数可以在定义之前或之后调用；JavaScript 编译器会帮你找到它。\njavascript\n// calling our function\ndisplayGreeting();\nNOTE: 有一种特殊类型的函数叫做 方法，你已经在使用了！事实上，我们在上面的演示中使用 consolelog 时就见过了。方法与函数的区别在于，方法附属于一个对象（在我们的例子中是 console），而函数是独立的。你会发现许多开发者会将这两个术语交替使用。\n函数的最佳实践\n创建函数时需要牢记以下最佳实践：\n一如既往地使用描述性名称，这样你就知道函数的作用是什么\n使用 camelCasing（驼峰命名法）来组合单词\n让函数专注于完成一个特定任务\n向函数传递信息\n为了让函数更具复用性，你通常需要向函数传递信息。以我们上面的 displayGreeting 示例为例，它只会显示 Hello, world",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 739,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "8c7570f4cf8e2e8d7c4da424111329d0",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "JavaScript 基础：方法与函数\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n在编写代码时，我们总是希望代码具有良好的可读性。虽然这听起来有些反直觉，但代码被阅读的次数远远多于被编写的次数。开发者工具箱中的一个核心工具就是 函数，它能帮助我们确保代码的可维护性。\n🎥 点击上方图片观看关于方法与函数的视频。\n你可以在 Microsoft Learn 上学习本课程！\n函数\n从本质上讲，函数是一段可以按需执行的代码块。这非常适合需要多次执行相同任务的场景；与其在多个地方重复逻辑（这样会导致更新时非常麻烦），不如将逻辑集中在一个地方，并在需要时调用它——甚至可以从其他函数中调用函数！\n函数的命名同样重要。虽然这看起来很简单，但函数名为代码段提供了一种快速的文档化方式。你可以将其想象成按钮上的标签。如果我点击一个写着“取消计时器”的按钮，我就知道它会停止计时。\n创建和调用函数\n函数的语法如下所示：\njavascript\nfunction nameOfFunction() { // function definition\n// function definition/body\n}\n如果我想创建一个显示问候语的函数，它可能看起来像这样：\njavascript\nfunction displayGreeting() {\nconsole log('Hello, world');\n}\n每当我们想调用（或执行）函数时，只需使用函数名并加上 ()。值得注意的是，函数可以在定义之前或之后调用；JavaScript 编译器会帮你找到它。\njavascript\n// calling our function\ndisplayGreeting();\nNOTE: 有一种特殊类型的函数叫做 方法，你已经在使用了！事实上，我们在上面的演示中使用 consolelog 时就见过了。方法与函数的区别在于，方法附属于一个对象（在我们的例子中是 console），而函数是独立的。你会发现许多开发者会将这两个术语交替使用。\n函数的最佳实践\n创建函数时需要牢记以下最佳实践：\n一如既往地使用描述性名称，这样你就知道函数的作用是什么\n使用 camelCasing（驼峰命名法）来组合单词\n让函数专注于完成一个特定任务\n向函数传递信息\n为了让函数更具复用性，你通常需要向函数传递信息。以我们上面的 displayGreeting 示例为例，它只会显示 Hello, world。这并不是一个非常实用的函数。如果我们想让它更灵活，比如允许用户指定要问候的人的名字，我们可以添加一个 参数。参数（有时也称为 参数值）是传递给函数的额外信息。\n参数在定义部分列于括号内，并用逗号分隔，如下所示：\n```javascript\nfunction name(param, param2, param3) {\n}\n```\n我们可以更新 displayGreeting 来接受一个名字并显示出来。\njavascript\nfunction displayGreeting(name) {\nconst message = `Hello, ${name}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 890,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "97440588a4644f8ad02868219ddcf407",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "上学习本课程！ 函数 从本质上讲，函数是一段可以按需执行的代码块。这非常适合需要多次执行相同任务的场景；与其在多个地方重复逻辑（这样会导致更新时非常麻烦），不如将逻辑集中在一个地方，并在需要时调用它——甚至可以从其他函数中调用函数！ 函数的命名同样重要。虽然这看起来很简单，但函数名为代码段提供了一种快速的文档化方式。你可以将其想象成按钮上的标签。如果我点击一个写着“取消计时器”的按钮，我就知道它会停止计时。 创建和调用函数 函数的语法如下所示： javascript function nameOfFunction() { // function definition // function definition/body } 如果我想创建一个显示问候语的函数，它可能看起来像这样： javascript function displayGreeting() { console log('Hello, world'); } 每当我们想调用（或执行）函数时，只需使用函数名并加上 ()。值得注意的是，函数可以在定义之前或之后调用；JavaScript 编译器会帮你找到它。 javascript // calling our function displayGreeting(); NOTE: 有一种特殊类型的函数叫做 方法，你已经在使用了！事实上，我们在上面的演示中使用 consolelog 时就见过了。方法与函数的区别在于，方法附属于一个对象（在我们的例子中是 console），而函数是独立的。你会发现许多开发者会将这两个术语交替使用。 函数的最佳实践 创建函数时需要牢记以下最佳实践： 一如既往地使用描述性名称，这样你就知道函数的作用是什么 使用 camelCasing（驼峰命名法）来组合单词 让函数专注于完成一个特定任务 向函数传递信息 为了让函数更具复用性，你通常需要向函数传递信息。以我们上面的 displayGreeting 示例为例，它只会显示 Hello, world。这并不是一个非常实用的函数。如果我们想让它更灵活，比如允许用户指定要问候的人的名字，我们可以添加一个 参数。参数（有时也称为 参数值）是传递给函数的额外信息。 参数在定义部分列于括号内，并用逗号分隔，如下所示： ```javascript function name(param, param2, param3) { } ``` 我们可以更新 displayGreeting 来接受一个名字并显示出来。 javascript function displayGreeting(name) { const message = `Hello, ${name}`;\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 724,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "61eb6ad15d94ccddc84532869bfc9360",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "函数 从本质上讲，函数是一段可以按需执行的代码块。这非常适合需要多次执行相同任务的场景；与其在多个地方重复逻辑（这样会导致更新时非常麻烦），不如将逻辑集中在一个地方，并在需要时调用它——甚至可以从其他函数中调用函数！ 函数的命名同样重要。虽然这看起来很简单，但函数名为代码段提供了一种快速的文档化方式。你可以将其想象成按钮上的标签。如果我点击一个写着“取消计时器”的按钮，我就知道它会停止计时。 创建和调用函数 函数的语法如下所示： javascript function nameOfFunction() { // function definition // function definition/body } 如果我想创建一个显示问候语的函数，它可能看起来像这样： javascript function displayGreeting() { console log('Hello, world'); } 每当我们想调用（或执行）函数时，只需使用函数名并加上 ()。值得注意的是，函数可以在定义之前或之后调用；JavaScript 编译器会帮你找到它。 javascript // calling our function displayGreeting(); NOTE: 有一种特殊类型的函数叫做 方法，你已经在使用了！事实上，我们在上面的演示中使用 consolelog 时就见过了。方法与函数的区别在于，方法附属于一个对象（在我们的例子中是 console），而函数是独立的。你会发现许多开发者会将这两个术语交替使用。 函数的最佳实践 创建函数时需要牢记以下最佳实践： 一如既往地使用描述性名称，这样你就知道函数的作用是什么 使用 camelCasing（驼峰命名法）来组合单词 让函数专注于完成一个特定任务 向函数传递信息 为了让函数更具复用性，你通常需要向函数传递信息。以我们上面的 displayGreeting 示例为例，它只会显示 Hello, world。这并不是一个非常实用的函数。如果我们想让它更灵活，比如允许用户指定要问候的人的名字，我们可以添加一个 参数。参数（有时也称为 参数值）是传递给函数的额外信息。 参数在定义部分列于括号内，并用逗号分隔，如下所示： ```javascript function name(param, param2, param3) { } ``` 我们可以更新 displayGreeting 来接受一个名字并显示出来。 javascript function displayGreeting(name) { const message = `Hello, ${name}`; consolelog(message);\n}\n当我们调用函数并传递参数时，只需在括号内指定参数值。\njavascript\ndisplayGreeting('Christopher');\n// displays \"Hello, Christopher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 757,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "cb52f54492bf16e8f2ac7874f844700f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "{ // function definition // function definition/body } 如果我想创建一个显示问候语的函数，它可能看起来像这样： javascript function displayGreeting() { console log('Hello, world'); } 每当我们想调用（或执行）函数时，只需使用函数名并加上 ()。值得注意的是，函数可以在定义之前或之后调用；JavaScript 编译器会帮你找到它。 javascript // calling our function displayGreeting(); NOTE: 有一种特殊类型的函数叫做 方法，你已经在使用了！事实上，我们在上面的演示中使用 consolelog 时就见过了。方法与函数的区别在于，方法附属于一个对象（在我们的例子中是 console），而函数是独立的。你会发现许多开发者会将这两个术语交替使用。 函数的最佳实践 创建函数时需要牢记以下最佳实践： 一如既往地使用描述性名称，这样你就知道函数的作用是什么 使用 camelCasing（驼峰命名法）来组合单词 让函数专注于完成一个特定任务 向函数传递信息 为了让函数更具复用性，你通常需要向函数传递信息。以我们上面的 displayGreeting 示例为例，它只会显示 Hello, world。这并不是一个非常实用的函数。如果我们想让它更灵活，比如允许用户指定要问候的人的名字，我们可以添加一个 参数。参数（有时也称为 参数值）是传递给函数的额外信息。 参数在定义部分列于括号内，并用逗号分隔，如下所示： ```javascript function name(param, param2, param3) { } ``` 我们可以更新 displayGreeting 来接受一个名字并显示出来。 javascript function displayGreeting(name) { const message = `Hello, ${name}`; consolelog(message); } 当我们调用函数并传递参数时，只需在括号内指定参数值。 javascript displayGreeting('Christopher'); // displays \"Hello, Christopher\" when run\n默认值\n我们可以通过添加更多参数使函数更加灵活。但如果我们不希望每个值都必须指定呢？继续以问候语为例，我们可以将名字设为必需（我们需要知道要问候谁），但允许用户根据需要自定义问候语。如果用户不想自定义，我们可以提供一个默认值。要为参数提供默认值，我们可以像为变量设置值一样设置——parameterName = 'defaultValue'。完整示例如下：\njavascript\nfunction displayGreeting(name, salutation='Hello') {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 704,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "a838271a7ae1aa5476897a966b345424",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "{ console log('Hello, world'); } 每当我们想调用（或执行）函数时，只需使用函数名并加上 ()。值得注意的是，函数可以在定义之前或之后调用；JavaScript 编译器会帮你找到它。 javascript // calling our function displayGreeting(); NOTE: 有一种特殊类型的函数叫做 方法，你已经在使用了！事实上，我们在上面的演示中使用 consolelog 时就见过了。方法与函数的区别在于，方法附属于一个对象（在我们的例子中是 console），而函数是独立的。你会发现许多开发者会将这两个术语交替使用。 函数的最佳实践 创建函数时需要牢记以下最佳实践： 一如既往地使用描述性名称，这样你就知道函数的作用是什么 使用 camelCasing（驼峰命名法）来组合单词 让函数专注于完成一个特定任务 向函数传递信息 为了让函数更具复用性，你通常需要向函数传递信息。以我们上面的 displayGreeting 示例为例，它只会显示 Hello, world。这并不是一个非常实用的函数。如果我们想让它更灵活，比如允许用户指定要问候的人的名字，我们可以添加一个 参数。参数（有时也称为 参数值）是传递给函数的额外信息。 参数在定义部分列于括号内，并用逗号分隔，如下所示： ```javascript function name(param, param2, param3) { } ``` 我们可以更新 displayGreeting 来接受一个名字并显示出来。 javascript function displayGreeting(name) { const message = `Hello, ${name}`; consolelog(message); } 当我们调用函数并传递参数时，只需在括号内指定参数值。 javascript displayGreeting('Christopher'); // displays \"Hello, Christopher\" when run 默认值 我们可以通过添加更多参数使函数更加灵活。但如果我们不希望每个值都必须指定呢？继续以问候语为例，我们可以将名字设为必需（我们需要知道要问候谁），但允许用户根据需要自定义问候语。如果用户不想自定义，我们可以提供一个默认值。要为参数提供默认值，我们可以像为变量设置值一样设置——parameterName = 'defaultValue'。完整示例如下： javascript function displayGreeting(name, salutation='Hello') { consolelog(`${salutation}, ${name}`);\n}\n调用函数时，我们可以决定是否为 salutation 设置值。\n```javascript\ndisplayGreeting('Christopher');\n// displays \"Hello, Christopher\"\ndisplayGreeting('Christopher', 'Hi');\n// displays \"Hi, Christopher\"\n```\n返回值\n到目前为止，我们创建的函数会始终输出到 console。有时这正是我们想要的，尤其是当我们创建的函数会调用其他服务时。但如果我想创建一个辅助函数来执行计算并将值返回，以便在其他地方使用呢？\n我们可以通过使用 返回值 来实现。返回值由函数返回，并可以像存储字符串或数字这样的字面值一样存储在变量中。\n如果函数返回某些内容，则使用关键字 return。return 关键字需要一个值或引用作为返回值，如下所示：\njavascript\nreturn myVariable;\n我们可以创建一个函数来生成问候语并将值返回给调用者：\njavascript\nfunction createGreetingMessage(name) {\nconst message = `Hello, ${name}`;\nreturn message;\n}\n调用此函数时，我们会将返回值存储在变量中。这与将变量设置为静态值（如 const name = 'Christopher'）的方式非常相似。\njavascript\nconst greetingMessage = createGreetingMessage('Christopher');\n函数作为函数的参数\n随着你在编程生涯中的进步，你会遇到一些接受函数作为参数的函数。这种巧妙的技巧通常用于我们不知道某件事情何时会发生或完成，但我们知道需要在响应时执行某些操作的场景。\n例如，setTimeout 会启动一个计时器，并在计时完成时执行代码。我们需要告诉它我们想执行的代码。这听起来是一个非常适合函数的任务！\n如果运行以下代码，3 秒后你会看到消息 3 seconds has elapsed。\njavascript\nfunction displayDone() {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1158,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "415fc7fb7426fae0e768d7b5576bbd5b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "= 'defaultValue'。完整示例如下： javascript function displayGreeting(name, salutation='Hello') { consolelog(`${salutation}, ${name}`); } 调用函数时，我们可以决定是否为 salutation 设置值。 ```javascript displayGreeting('Christopher'); // displays \"Hello, Christopher\" displayGreeting('Christopher', 'Hi'); // displays \"Hi, Christopher\" ``` 返回值 到目前为止，我们创建的函数会始终输出到 console。有时这正是我们想要的，尤其是当我们创建的函数会调用其他服务时。但如果我想创建一个辅助函数来执行计算并将值返回，以便在其他地方使用呢？ 我们可以通过使用 返回值 来实现。返回值由函数返回，并可以像存储字符串或数字这样的字面值一样存储在变量中。 如果函数返回某些内容，则使用关键字 return。return 关键字需要一个值或引用作为返回值，如下所示： javascript return myVariable; 我们可以创建一个函数来生成问候语并将值返回给调用者： javascript function createGreetingMessage(name) { const message = `Hello, ${name}`; return message; } 调用此函数时，我们会将返回值存储在变量中。这与将变量设置为静态值（如 const name = 'Christopher'）的方式非常相似。 javascript const greetingMessage = createGreetingMessage('Christopher'); 函数作为函数的参数 随着你在编程生涯中的进步，你会遇到一些接受函数作为参数的函数。这种巧妙的技巧通常用于我们不知道某件事情何时会发生或完成，但我们知道需要在响应时执行某些操作的场景。 例如，setTimeout 会启动一个计时器，并在计时完成时执行代码。我们需要告诉它我们想执行的代码。这听起来是一个非常适合函数的任务！ 如果运行以下代码，3 秒后你会看到消息 3 seconds has elapsed。 javascript function displayDone() { consolelog('3 seconds has elapsed');\n}\n// timer value is in milliseconds\nsetTimeout(displayDone, 3000);\n匿名函数\n让我们再看看我们构建的内容。我们创建了一个带有名称的函数，但它只会被调用一次。随着应用程序变得更加复杂，我们可能会创建许多只会被调用一次的函数。这并不理想。事实证明，我们并不总是需要提供名称！\n当我们将函数作为参数传递时，可以跳过提前创建函数，而是在参数中直接构建它。我们使用相同的 function 关键字，但将其作为参数构建。\n让我们重写上面的代码以使用匿名函数：\njavascript\nsetTimeout(function() {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 718,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "41bc27ecefde0b2a879df7663bb6c21f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "displays \"Hi, Christopher\" ``` 返回值 到目前为止，我们创建的函数会始终输出到 console。有时这正是我们想要的，尤其是当我们创建的函数会调用其他服务时。但如果我想创建一个辅助函数来执行计算并将值返回，以便在其他地方使用呢？ 我们可以通过使用 返回值 来实现。返回值由函数返回，并可以像存储字符串或数字这样的字面值一样存储在变量中。 如果函数返回某些内容，则使用关键字 return。return 关键字需要一个值或引用作为返回值，如下所示： javascript return myVariable; 我们可以创建一个函数来生成问候语并将值返回给调用者： javascript function createGreetingMessage(name) { const message = `Hello, ${name}`; return message; } 调用此函数时，我们会将返回值存储在变量中。这与将变量设置为静态值（如 const name = 'Christopher'）的方式非常相似。 javascript const greetingMessage = createGreetingMessage('Christopher'); 函数作为函数的参数 随着你在编程生涯中的进步，你会遇到一些接受函数作为参数的函数。这种巧妙的技巧通常用于我们不知道某件事情何时会发生或完成，但我们知道需要在响应时执行某些操作的场景。 例如，setTimeout 会启动一个计时器，并在计时完成时执行代码。我们需要告诉它我们想执行的代码。这听起来是一个非常适合函数的任务！ 如果运行以下代码，3 秒后你会看到消息 3 seconds has elapsed。 javascript function displayDone() { consolelog('3 seconds has elapsed'); } // timer value is in milliseconds setTimeout(displayDone, 3000); 匿名函数 让我们再看看我们构建的内容。我们创建了一个带有名称的函数，但它只会被调用一次。随着应用程序变得更加复杂，我们可能会创建许多只会被调用一次的函数。这并不理想。事实证明，我们并不总是需要提供名称！ 当我们将函数作为参数传递时，可以跳过提前创建函数，而是在参数中直接构建它。我们使用相同的 function 关键字，但将其作为参数构建。 让我们重写上面的代码以使用匿名函数： javascript setTimeout(function() { consolelog('3 seconds has elapsed');\n}, 3000);\n如果运行我们的新代码，你会注意到我们得到了相同的结果。我们创建了一个函数，但不需要给它命名！\n箭头函数\n许多编程语言（包括 JavaScript）中常见的一种简化方式是使用所谓的 箭头函数 或 胖箭头函数。它使用一个特殊的符号 =>，看起来像一个箭头——因此得名！通过使用 =>，我们可以省略 function 关键字。\n让我们再一次重写代码以使用箭头函数：\njavascript\nsetTimeout(() => {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 795,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "21f8e68a7dc9684bf545d2257c29bb19",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：方法与函数",
    "content": "message = `Hello, ${name}`; return message; } 调用此函数时，我们会将返回值存储在变量中。这与将变量设置为静态值（如 const name = 'Christopher'）的方式非常相似。 javascript const greetingMessage = createGreetingMessage('Christopher'); 函数作为函数的参数 随着你在编程生涯中的进步，你会遇到一些接受函数作为参数的函数。这种巧妙的技巧通常用于我们不知道某件事情何时会发生或完成，但我们知道需要在响应时执行某些操作的场景。 例如，setTimeout 会启动一个计时器，并在计时完成时执行代码。我们需要告诉它我们想执行的代码。这听起来是一个非常适合函数的任务！ 如果运行以下代码，3 秒后你会看到消息 3 seconds has elapsed。 javascript function displayDone() { consolelog('3 seconds has elapsed'); } // timer value is in milliseconds setTimeout(displayDone, 3000); 匿名函数 让我们再看看我们构建的内容。我们创建了一个带有名称的函数，但它只会被调用一次。随着应用程序变得更加复杂，我们可能会创建许多只会被调用一次的函数。这并不理想。事实证明，我们并不总是需要提供名称！ 当我们将函数作为参数传递时，可以跳过提前创建函数，而是在参数中直接构建它。我们使用相同的 function 关键字，但将其作为参数构建。 让我们重写上面的代码以使用匿名函数： javascript setTimeout(function() { consolelog('3 seconds has elapsed'); }, 3000); 如果运行我们的新代码，你会注意到我们得到了相同的结果。我们创建了一个函数，但不需要给它命名！ 箭头函数 许多编程语言（包括 JavaScript）中常见的一种简化方式是使用所谓的 箭头函数 或 胖箭头函数。它使用一个特殊的符号 =>，看起来像一个箭头——因此得名！通过使用 =>，我们可以省略 function 关键字。 让我们再一次重写代码以使用箭头函数： javascript setTimeout(() => { consolelog('3 seconds has elapsed');\n}, 3000);\n何时使用哪种策略\n现在你已经看到了三种将函数作为参数传递的方法，可能会想知道何时使用哪一种。如果你知道函数会被多次使用，就按常规方式创建它。如果只会在一个地方使用，通常最好使用匿名函数。至于使用箭头函数还是传统的 function 语法，这取决于你，但你会发现大多数现代开发者更喜欢 =>。\n🚀 挑战\n你能用一句话说明函数和方法的区别吗？试试看！\n课后测验\n课后测验\n复习与自学\n值得多了解一些箭头函数，因为它们在代码中被越来越多地使用。练习编写一个函数，然后用这种语法重写它。\n作业\n函数的乐趣\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。虽然我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9344,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\2-functions-methods\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 984,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "cabf6eb6caaf9bde5d35a125f0417459",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "JavaScript 基础：做出决策\n由 Tomomi Imura 绘制的手绘笔记\n课前测验\n课前测验\n做出决策并控制代码的执行顺序可以让代码更具复用性和健壮性。本节将介绍在 JavaScript 中控制数据流的语法，以及它在与布尔数据类型结合使用时的重要性。\n🎥 点击上方图片观看关于做出决策的视频。\n你可以在 Microsoft Learn 上学习本课！\n布尔值的简要回顾\n布尔值只有两个可能的取值：true 或 false。布尔值帮助我们根据特定条件决定哪些代码行应该被执行。\n可以像这样设置布尔值为 true 或 false：\nlet myTrueBool = true\nlet myFalseBool = false\n✅ 布尔值以英国数学家、哲学家和逻辑学家 George Boole (1815–1864) 的名字命名。\n比较运算符与布尔值\n运算符用于通过比较生成布尔值来评估条件。以下是一些常用的运算符列表。\n| 符号  | 描述                                                                                                                                       | 示例                |\n| ----- | ------------------------------------------------------------------------------------------------------------------------------------------ | ------------------- |\n| <   | 小于：比较两个值，如果左侧值小于右侧值，则返回布尔值 true                                                                            | 5 < 6 // true     |\n| <=  | 小于或等于：比较两个值，如果左侧值小于或等于右侧值，则返回布尔值 true                                                                | 5 <= 6 // true    |\n| >   | 大于：比较两个值，如果左侧值大于右侧值，则返回布尔值 true                                                                            | 5 > 6 // false    |\n| >=  | 大于或等于：比较两个值，如果左侧值大于或等于右侧值，则返回布尔值 true                                                                | 5 >= 6 // false   |\n| === | 严格相等：比较两个值，如果左右两侧的值相等且数据类型相同，则返回布尔值 true                                                          | 5 === 6 // false  |\n|",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 575,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "fe2151a858fc8f0043c76edb3c36f429",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "运算符用于通过比较生成布尔值来评估条件。以下是一些常用的运算符列表。 | 符号 | 描述 | 示例 | | ----- | ------------------------------------------------------------------------------------------------------------------------------------------ | ------------------- | | < | 小于：比较两个值，如果左侧值小于右侧值，则返回布尔值 true | 5 < 6 // true | | <= | 小于或等于：比较两个值，如果左侧值小于或等于右侧值，则返回布尔值 true | 5 <= 6 // true | | > | 大于：比较两个值，如果左侧值大于右侧值，则返回布尔值 true | 5 > 6 // false | | >= | 大于或等于：比较两个值，如果左侧值大于或等于右侧值，则返回布尔值 true | 5 >= 6 // false | | === | 严格相等：比较两个值，如果左右两侧的值相等且数据类型相同，则返回布尔值 true | 5 === 6 // false | |== | 不等：比较两个值，返回与严格相等运算符相反的布尔值                                                                                      | 5 == 6 // true   |\n✅ 在浏览器的控制台中写一些比较语句来测试你的知识。返回的数据是否有让你感到意外的地方？\nIf 语句\n如果条件为 true，if 语句将运行其代码块中的代码。\njavascript\nif (condition) {\n//Condition is true Code in this block will run }\n逻辑运算符通常用于构建条件。\n```javascript\nlet currentMoney;\nlet laptopPrice;\nif (currentMoney >= laptopPrice) {\n//Condition is true Code in this block will run console log(\"Getting a new laptop \");\n}\n```\nIf",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "9f3aae6c7bcfa2d832a05855a3454f15",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "6 // false | | === | 严格相等：比较两个值，如果左右两侧的值相等且数据类型相同，则返回布尔值 true | 5 === 6 // false | |== | 不等：比较两个值，返回与严格相等运算符相反的布尔值 | 5 == 6 // true | ✅ 在浏览器的控制台中写一些比较语句来测试你的知识。返回的数据是否有让你感到意外的地方？ If 语句 如果条件为 true，if 语句将运行其代码块中的代码。 javascript if (condition) { //Condition is true Code in this block will run } 逻辑运算符通常用于构建条件。 ```javascript let currentMoney; let laptopPrice; if (currentMoney >= laptopPrice) { //Condition is true Code in this block will run console log(\"Getting a new laptop \"); } ``` IfElse 语句\n当条件为 false 时，else 语句将运行其代码块中的代码。它是 if 语句的可选部分。\n```javascript\nlet currentMoney;\nlet laptopPrice;\nif (currentMoney >= laptopPrice) {\n//Condition is true Code in this block will run console log(\"Getting a new laptop \");\n} else {\n//Condition is false Code in this block will run console log(\"Can't afford a new laptop, yet \");\n}\n```\n✅ 在浏览器控制台中运行这段代码以及接下来的代码，测试你对它们的理解。更改 currentMoney 和 laptopPrice 变量的值，观察 console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "6d9c12626cb51c250de4e9cb2a5e6878",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "Code in this block will run console log(\"Getting a new laptop \"); } ``` IfElse 语句 当条件为 false 时，else 语句将运行其代码块中的代码。它是 if 语句的可选部分。 ```javascript let currentMoney; let laptopPrice; if (currentMoney >= laptopPrice) { //Condition is true Code in this block will run console log(\"Getting a new laptop \"); } else { //Condition is false Code in this block will run console log(\"Can't afford a new laptop, yet \"); } ``` ✅ 在浏览器控制台中运行这段代码以及接下来的代码，测试你对它们的理解。更改 currentMoney 和 laptopPrice 变量的值，观察 consolelog() 的返回结果。\nSwitch 语句\nswitch 语句用于根据不同的条件执行不同的操作。使用 switch 语句可以选择要执行的多个代码块之一。\njavascript\nswitch (expression) {\ncase x:\n// code block\nbreak;\ncase y:\n// code block\nbreak;\ndefault:\n// code block\n}\n```javascript\n// program using switch statement\nlet a = 2;\nswitch (a) {\ncase 1:\na = \"one\";\nbreak;\ncase 2:\na = \"two\";\nbreak;\ndefault:\na = \"not found\";\nbreak;\n}\nconsole log(The value is ${a});\n```\n✅ 在浏览器控制台中运行这段代码以及接下来的代码，测试你对它们的理解。更改变量 a 的值，观察 console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "fb1feb69338d33b25317587c86afff43",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "currentMoney 和 laptopPrice 变量的值，观察 consolelog() 的返回结果。 Switch 语句 switch 语句用于根据不同的条件执行不同的操作。使用 switch 语句可以选择要执行的多个代码块之一。 javascript switch (expression) { case x: // code block break; case y: // code block break; default: // code block } ```javascript // program using switch statement let a = 2; switch (a) { case 1: a = \"one\"; break; case 2: a = \"two\"; break; default: a = \"not found\"; break; } console log(The value is ${a}); ``` ✅ 在浏览器控制台中运行这段代码以及接下来的代码，测试你对它们的理解。更改变量 a 的值，观察 consolelog() 的返回结果。\n逻辑运算符与布尔值\n决策可能需要多个比较，可以通过逻辑运算符将它们串联起来以生成布尔值。\n| 符号  | 描述                                                                                     | 示例                                                                      |\n| ----- | ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------------- |\n| &&  | 逻辑与：比较两个布尔表达式。仅当两侧都为 true 时返回 true                            | (5 > 6) && (5 < 6) // 一侧为 false，另一侧为 true。返回 false           |\n| \\|\\| | 逻辑或：比较两个布尔表达式。只要有一侧为 true 就返回 true                           | (5 > 6) \\|\\| (5 < 6) // 一侧为 false，另一侧为 true。返回 true          |\n| | 逻辑非：返回布尔表达式的相反值                                                       | (5 > 6) // 5 不大于 6，但 \" \" 会返回 true                              |\n使用逻辑运算符的条件与决策\n逻辑运算符可以用于 if",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "a1a1cfa9e4897451549952452447fff1",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "决策可能需要多个比较，可以通过逻辑运算符将它们串联起来以生成布尔值。 | 符号 | 描述 | 示例 | | ----- | ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------------- | | && | 逻辑与：比较两个布尔表达式。仅当两侧都为 true 时返回 true | (5 > 6) && (5 < 6) // 一侧为 false，另一侧为 true。返回 false | | \\|\\| | 逻辑或：比较两个布尔表达式。只要有一侧为 true 就返回 true | (5 > 6) \\|\\| (5 < 6) // 一侧为 false，另一侧为 true。返回 true | | | 逻辑非：返回布尔表达式的相反值 | (5 > 6) // 5 不大于 6，但 \" \" 会返回 true | 使用逻辑运算符的条件与决策 逻辑运算符可以用于 ifelse 语句中的条件。\n```javascript\nlet currentMoney;\nlet laptopPrice;\nlet laptopDiscountPrice = laptopPrice - laptopPrice * 0 2; //Laptop price at 20 percent off\nif (currentMoney >= laptopPrice || currentMoney >= laptopDiscountPrice) {\n//Condition is true Code in this block will run console log(\"Getting a new laptop \");\n} else {\n//Condition is true Code in this block will run console log(\"Can't afford a new laptop, yet \");\n}\n```\n取反运算符\n到目前为止，你已经看到如何使用 if else 语句来创建条件逻辑。任何放入 if 中的内容都需要评估为 true 或 false。通过使用 运算符，你可以取反表达式。它看起来像这样：\njavascript\nif ( condition) {\n// runs if condition is false\n} else {\n// runs if condition is true\n}\n三元表达式\nif",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "0daf61e9d266356f2eac8b2fcaad3031",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "|| currentMoney >= laptopDiscountPrice) { //Condition is true Code in this block will run console log(\"Getting a new laptop \"); } else { //Condition is true Code in this block will run console log(\"Can't afford a new laptop, yet \"); } ``` 取反运算符 到目前为止，你已经看到如何使用 if else 语句来创建条件逻辑。任何放入 if 中的内容都需要评估为 true 或 false。通过使用 运算符，你可以取反表达式。它看起来像这样： javascript if ( condition) { // runs if condition is false } else { // runs if condition is true } 三元表达式 ifelse 并不是表达决策逻辑的唯一方式。你还可以使用一种称为三元运算符的方式。其语法如下：\njavascript\nlet variable = condition <return this if true> : <return this if false>\n以下是一个更具体的示例：\njavascript\nlet firstNumber = 20;\nlet secondNumber = 10;\nlet biggestNumber = firstNumber > secondNumber",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 255,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "4a69e95747cdc77e003dc82bd5425100",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：做出决策",
    "content": "run console log(\"Can't afford a new laptop, yet \"); } ``` 取反运算符 到目前为止，你已经看到如何使用 if else 语句来创建条件逻辑。任何放入 if 中的内容都需要评估为 true 或 false。通过使用 运算符，你可以取反表达式。它看起来像这样： javascript if ( condition) { // runs if condition is false } else { // runs if condition is true } 三元表达式 ifelse 并不是表达决策逻辑的唯一方式。你还可以使用一种称为三元运算符的方式。其语法如下： javascript let variable = condition <return this if true> : <return this if false> 以下是一个更具体的示例： javascript let firstNumber = 20; let secondNumber = 10; let biggestNumber = firstNumber > secondNumberfirstNumber : secondNumber;\n✅ 花点时间多读几遍这段代码。你理解这些运算符是如何工作的吗？\n上述代码的含义是：\n如果 firstNumber 大于 secondNumber\n那么将 firstNumber 赋值给 biggestNumber\n否则将 secondNumber 赋值给 biggestNumber。\n三元表达式只是以下代码的简写形式：\njavascript\nlet biggestNumber;\nif (firstNumber > secondNumber) {\nbiggestNumber = firstNumber;\n} else {\nbiggestNumber = secondNumber;\n}\n🚀 挑战\n创建一个程序，先用逻辑运算符编写，然后用三元表达式重写。你更喜欢哪种语法？\n课后测验\n课后测验\n复习与自学\n阅读更多关于用户可用的运算符的内容：MDN。\n浏览 Josh Comeau 的精彩 运算符速查表！\n作业\n运算符\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于关键信息，建议使用专业人工翻译。我们不对因使用此翻译而产生的任何误解或误读承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9123,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\3-making-decisions\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 600,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "737a68ab87a1390ce70df61a12a32d08",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\assignment.md",
    "source_type": "git_repo",
    "title": "遍历数组",
    "content": "遍历数组\n说明\n创建一个程序，列出1到20之间的每第3个数字，并将其打印到控制台。\n提示：使用for循环并修改迭代表达式\n评分标准\n| 标准     | 卓越表现                               | 合格表现                 | 需要改进                      |\n| -------- | --------------------------------------- | ------------------------ | ------------------------------ |\n|          | 程序运行正确且有注释                   | 程序没有注释             | 程序不完整或存在错误           |\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1251,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e1a4a30c3441065502caef5570f2f879",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\assignment.md",
    "source_type": "git_repo",
    "title": "阅读文档",
    "content": "阅读文档\n说明\n网页开发者可能需要许多工具，这些工具可以在 MDN 客户端工具文档 中找到。选择课程中未涉及的3种工具，解释为什么网页开发者会使用这些工具，并寻找属于该类别的工具并分享其文档。请勿使用 MDN 文档中的相同工具示例。\n评分标准\n优秀 | 合格 | 需要改进\n--- | --- | -- |\n|解释了为什么网页开发者会使用该工具| 解释了如何使用，但未说明为什么开发者会使用该工具| 未提及开发者如何或为什么会使用该工具  |\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。因使用本翻译而导致的任何误解或误读，我们概不负责。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1386,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ab8dc8d99556ae237ebab92bb8b5c68b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数组和循环",
    "content": "JavaScript 基础：数组和循环\n由 Tomomi Imura 绘制的手绘笔记\n课前测验\n课前测验\n本课程介绍了 JavaScript 的基础知识，这是一种为网页提供交互功能的语言。在本课程中，您将学习数组和循环，它们用于操作数据。\n🎥 点击上方图片观看关于数组和循环的视频。\n您可以在 Microsoft Learn 上学习本课程！\n数组\n处理数据是任何编程语言中的常见任务，当数据以结构化的格式（如数组）组织时，这项任务会变得更加简单。通过数组，数据以类似列表的结构存储。数组的一个主要优点是可以在一个数组中存储不同类型的数据。\n✅ 数组无处不在！您能想到一个现实生活中的数组例子吗，比如太阳能电池板阵列？\n数组的语法是一对方括号。\njavascript\nlet myArray = [];\n这是一个空数组，但数组也可以在声明时就已填充数据。数组中的多个值用逗号分隔。\njavascript\nlet iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"];\n数组中的值被分配了一个称为 索引 的唯一值，这是一个基于其与数组开头的距离分配的整数。在上面的例子中，字符串值 \"Chocolate\" 的索引是 0，而 \"Rocky Road\" 的索引是 4。使用方括号和索引可以检索、更改或插入数组值。\n✅ 您是否感到惊讶，数组的索引是从 0 开始的？在某些编程语言中，索引是从 1 开始的。关于这一点有一个有趣的历史，您可以在 维基百科 上阅读相关内容。\njavascript\nlet iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"];\niceCreamFlavors[2]; //\"Vanilla\"\n您可以利用索引来更改值，如下所示：\njavascript\niceCreamFlavors[4] = \"Butter Pecan\"; //Changed \"Rocky Road\" to \"Butter Pecan\"\n您还可以在给定索引处插入新值，如下所示：\njavascript\niceCreamFlavors[5] = \"Cookie Dough\"; //Added \"Cookie Dough\"\n✅ 更常见的向数组添加值的方法是使用数组操作符，例如 array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6799,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "687789a144f9a6422af551f04fee8782",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数组和循环",
    "content": "上学习本课程！ 数组 处理数据是任何编程语言中的常见任务，当数据以结构化的格式（如数组）组织时，这项任务会变得更加简单。通过数组，数据以类似列表的结构存储。数组的一个主要优点是可以在一个数组中存储不同类型的数据。 ✅ 数组无处不在！您能想到一个现实生活中的数组例子吗，比如太阳能电池板阵列？ 数组的语法是一对方括号。 javascript let myArray = []; 这是一个空数组，但数组也可以在声明时就已填充数据。数组中的多个值用逗号分隔。 javascript let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; 数组中的值被分配了一个称为 索引 的唯一值，这是一个基于其与数组开头的距离分配的整数。在上面的例子中，字符串值 \"Chocolate\" 的索引是 0，而 \"Rocky Road\" 的索引是 4。使用方括号和索引可以检索、更改或插入数组值。 ✅ 您是否感到惊讶，数组的索引是从 0 开始的？在某些编程语言中，索引是从 1 开始的。关于这一点有一个有趣的历史，您可以在 维基百科 上阅读相关内容。 javascript let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; iceCreamFlavors[2]; //\"Vanilla\" 您可以利用索引来更改值，如下所示： javascript iceCreamFlavors[4] = \"Butter Pecan\"; //Changed \"Rocky Road\" to \"Butter Pecan\" 您还可以在给定索引处插入新值，如下所示： javascript iceCreamFlavors[5] = \"Cookie Dough\"; //Added \"Cookie Dough\" ✅ 更常见的向数组添加值的方法是使用数组操作符，例如 arraypush()\n要了解数组中有多少项，可以使用 length 属性。\njavascript\nlet iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"];\niceCreamFlavors",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6799,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 594,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "1096487136ab565c575bebb4597a250b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数组和循环",
    "content": "iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; 数组中的值被分配了一个称为 索引 的唯一值，这是一个基于其与数组开头的距离分配的整数。在上面的例子中，字符串值 \"Chocolate\" 的索引是 0，而 \"Rocky Road\" 的索引是 4。使用方括号和索引可以检索、更改或插入数组值。 ✅ 您是否感到惊讶，数组的索引是从 0 开始的？在某些编程语言中，索引是从 1 开始的。关于这一点有一个有趣的历史，您可以在 维基百科 上阅读相关内容。 javascript let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; iceCreamFlavors[2]; //\"Vanilla\" 您可以利用索引来更改值，如下所示： javascript iceCreamFlavors[4] = \"Butter Pecan\"; //Changed \"Rocky Road\" to \"Butter Pecan\" 您还可以在给定索引处插入新值，如下所示： javascript iceCreamFlavors[5] = \"Cookie Dough\"; //Added \"Cookie Dough\" ✅ 更常见的向数组添加值的方法是使用数组操作符，例如 arraypush() 要了解数组中有多少项，可以使用 length 属性。 javascript let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; iceCreamFlavorslength; //5\n✅ 试试自己动手！使用浏览器的控制台创建并操作一个您自己设计的数组。\n循环\n循环允许我们执行重复或 迭代 的任务，可以节省大量时间和代码。每次迭代的变量、值和条件都可能不同。JavaScript 中有不同类型的循环，它们之间有一些细微的差别，但本质上都做同样的事情：遍历数据。\nFor 循环\nfor 循环需要三个部分来进行迭代：\n- counter 一个变量，通常初始化为一个数字，用于计数迭代次数\n- condition 一个使用比较运算符的表达式，当为 false 时循环停止\n- iteration-expression 在每次迭代结束时运行，通常用于更改计数器的值\njavascript\n// Counting up to 10\nfor (let i = 0; i < 10; i++) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6799,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "39c462b5fe1c64a224c1cf16713b94ef",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数组和循环",
    "content": "iceCreamFlavors[4] = \"Butter Pecan\"; //Changed \"Rocky Road\" to \"Butter Pecan\" 您还可以在给定索引处插入新值，如下所示： javascript iceCreamFlavors[5] = \"Cookie Dough\"; //Added \"Cookie Dough\" ✅ 更常见的向数组添加值的方法是使用数组操作符，例如 arraypush() 要了解数组中有多少项，可以使用 length 属性。 javascript let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; iceCreamFlavorslength; //5 ✅ 试试自己动手！使用浏览器的控制台创建并操作一个您自己设计的数组。 循环 循环允许我们执行重复或 迭代 的任务，可以节省大量时间和代码。每次迭代的变量、值和条件都可能不同。JavaScript 中有不同类型的循环，它们之间有一些细微的差别，但本质上都做同样的事情：遍历数据。 For 循环 for 循环需要三个部分来进行迭代： - counter 一个变量，通常初始化为一个数字，用于计数迭代次数 - condition 一个使用比较运算符的表达式，当为 false 时循环停止 - iteration-expression 在每次迭代结束时运行，通常用于更改计数器的值 javascript // Counting up to 10 for (let i = 0; i < 10; i++) { consolelog(i);\n}\n✅ 在浏览器控制台中运行此代码。当您对计数器、条件或迭代表达式进行小的更改时会发生什么？您能让它倒着运行，创建一个倒计时吗？\nWhile 循环\n与 for 循环的语法不同，while 循环只需要一个条件，当条件变为 false 时循环停止。循环中的条件通常依赖于其他值（如计数器），并且必须在循环中进行管理。计数器的初始值必须在循环外创建，满足条件的任何表达式（包括更改计数器）必须在循环内维护。\njavascript\n//Counting up to 10\nlet i = 0;\nwhile (i < 10) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6799,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 614,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "908adf850751ca45b83a800bcd71be54",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数组和循环",
    "content": "let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; iceCreamFlavorslength; //5 ✅ 试试自己动手！使用浏览器的控制台创建并操作一个您自己设计的数组。 循环 循环允许我们执行重复或 迭代 的任务，可以节省大量时间和代码。每次迭代的变量、值和条件都可能不同。JavaScript 中有不同类型的循环，它们之间有一些细微的差别，但本质上都做同样的事情：遍历数据。 For 循环 for 循环需要三个部分来进行迭代： - counter 一个变量，通常初始化为一个数字，用于计数迭代次数 - condition 一个使用比较运算符的表达式，当为 false 时循环停止 - iteration-expression 在每次迭代结束时运行，通常用于更改计数器的值 javascript // Counting up to 10 for (let i = 0; i < 10; i++) { consolelog(i); } ✅ 在浏览器控制台中运行此代码。当您对计数器、条件或迭代表达式进行小的更改时会发生什么？您能让它倒着运行，创建一个倒计时吗？ While 循环 与 for 循环的语法不同，while 循环只需要一个条件，当条件变为 false 时循环停止。循环中的条件通常依赖于其他值（如计数器），并且必须在循环中进行管理。计数器的初始值必须在循环外创建，满足条件的任何表达式（包括更改计数器）必须在循环内维护。 javascript //Counting up to 10 let i = 0; while (i < 10) { consolelog(i);\ni++;\n}\n✅ 为什么您会选择使用 for 循环而不是 while 循环？17K 名用户在 StackOverflow 上有同样的问题，其中一些观点可能会 引起您的兴趣。\n循环与数组\n数组经常与循环一起使用，因为大多数条件需要数组的长度来停止循环，而索引也可以作为计数器的值。\n```javascript\nlet iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"];\nfor (let i = 0; i < iceCreamFlavors",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6799,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "05366b59112ef107a96dc59e3e656728",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数组和循环",
    "content": "在每次迭代结束时运行，通常用于更改计数器的值 javascript // Counting up to 10 for (let i = 0; i < 10; i++) { consolelog(i); } ✅ 在浏览器控制台中运行此代码。当您对计数器、条件或迭代表达式进行小的更改时会发生什么？您能让它倒着运行，创建一个倒计时吗？ While 循环 与 for 循环的语法不同，while 循环只需要一个条件，当条件变为 false 时循环停止。循环中的条件通常依赖于其他值（如计数器），并且必须在循环中进行管理。计数器的初始值必须在循环外创建，满足条件的任何表达式（包括更改计数器）必须在循环内维护。 javascript //Counting up to 10 let i = 0; while (i < 10) { consolelog(i); i++; } ✅ 为什么您会选择使用 for 循环而不是 while 循环？17K 名用户在 StackOverflow 上有同样的问题，其中一些观点可能会 引起您的兴趣。 循环与数组 数组经常与循环一起使用，因为大多数条件需要数组的长度来停止循环，而索引也可以作为计数器的值。 ```javascript let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; for (let i = 0; i < iceCreamFlavorslength; i++) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6799,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "ce2b338a4ef551e7b80aabbf6bfdfc64",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 基础：数组和循环",
    "content": "Counting up to 10 for (let i = 0; i < 10; i++) { consolelog(i); } ✅ 在浏览器控制台中运行此代码。当您对计数器、条件或迭代表达式进行小的更改时会发生什么？您能让它倒着运行，创建一个倒计时吗？ While 循环 与 for 循环的语法不同，while 循环只需要一个条件，当条件变为 false 时循环停止。循环中的条件通常依赖于其他值（如计数器），并且必须在循环中进行管理。计数器的初始值必须在循环外创建，满足条件的任何表达式（包括更改计数器）必须在循环内维护。 javascript //Counting up to 10 let i = 0; while (i < 10) { consolelog(i); i++; } ✅ 为什么您会选择使用 for 循环而不是 while 循环？17K 名用户在 StackOverflow 上有同样的问题，其中一些观点可能会 引起您的兴趣。 循环与数组 数组经常与循环一起使用，因为大多数条件需要数组的长度来停止循环，而索引也可以作为计数器的值。 ```javascript let iceCreamFlavors = [\"Chocolate\", \"Strawberry\", \"Vanilla\", \"Pistachio\", \"Rocky Road\"]; for (let i = 0; i < iceCreamFlavorslength; i++) { consolelog(iceCreamFlavors[i]);\n} //Ends when all flavors are printed\n```\n✅ 在浏览器的控制台中尝试对您自己创建的数组进行循环。\n🚀 挑战\n除了 for 和 while 循环，还有其他方法可以遍历数组。例如 forEach、for-of 和 map。尝试使用这些技术之一重写您的数组循环。\n课后测验\n课后测验\n复习与自学\nJavaScript 中的数组有许多附加的方法，这些方法在数据操作中非常有用。阅读这些方法 并尝试在您创建的数组上使用一些方法（例如 push、pop、slice 和 splice）。\n作业\n循环一个数组\n免责声明：\n本文档使用AI翻译服务 Co-op Translator 进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原文档的原始语言版本为权威来源。对于关键信息，建议使用专业人工翻译。我们对因使用本翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6799,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\2-js-basics\\4-arrays-loops\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 734,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "37f58a126daf74ff55b7a0b4e0bbcdab",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
    "source_type": "git_repo",
    "title": "编程语言与工具介绍",
    "content": "编程语言与工具介绍\n本课程涵盖了编程语言的基础知识。这里讨论的主题适用于当今大多数现代编程语言。在“工具介绍”部分，您将学习一些对开发者非常有用的软件。\n速记笔记由 Tomomi Imura 提供\n课前测验\n课前测验\n介绍\n在本课中，我们将讨论：\n什么是编程？\n编程语言的类型\n程序的基本元素\n专业开发者常用的软件和工具\n您可以在 Microsoft Learn 上学习本课程！\n什么是编程？\n编程（也称为编码）是为计算机或移动设备等设备编写指令的过程。我们使用编程语言来编写这些指令，设备会对其进行解释。这些指令集可能有不同的名称，例如 程序、计算机程序、应用程序（app） 和 可执行文件 等。\n程序 是用代码编写的任何东西；网站、游戏和手机应用都是程序。虽然可以在不编写代码的情况下创建程序，但设备解释的底层逻辑很可能是用代码编写的。一个正在 运行 或 执行 代码的程序正在执行指令。您正在使用的设备运行了一个程序，将本课程内容显示在屏幕上。\n✅ 做一些研究：谁被认为是世界上第一位计算机程序员？\n编程语言\n编程语言使开发者能够为设备编写指令。设备只能理解二进制（1 和 0），而对于 大多数 开发者来说，这并不是一种高效的交流方式。编程语言是人类与计算机之间的交流工具。\n编程语言有不同的格式，并可能服务于不同的目的。例如，JavaScript 主要用于 Web 应用程序，而 Bash 主要用于操作系统。\n低级语言 通常比 高级语言 需要更少的步骤来让设备解释指令。然而，高级语言因其可读性和支持性而受到欢迎。JavaScript 被认为是一种高级语言。\n以下代码展示了使用 JavaScript 的高级语言和使用 ARM 汇编代码的低级语言之间的区别。\n```javascript\nlet number = 10\nlet n1 = 0, n2 = 1, nextTerm;\nfor (let i = 1; i <= number; i++) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11817,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 697,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "70f625207c4064dad97b9f5880ac1421",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
    "source_type": "git_repo",
    "title": "编程语言与工具介绍",
    "content": "速记笔记由 Tomomi Imura 提供 课前测验 课前测验 介绍 在本课中，我们将讨论： 什么是编程？ 编程语言的类型 程序的基本元素 专业开发者常用的软件和工具 您可以在 Microsoft Learn 上学习本课程！ 什么是编程？ 编程（也称为编码）是为计算机或移动设备等设备编写指令的过程。我们使用编程语言来编写这些指令，设备会对其进行解释。这些指令集可能有不同的名称，例如 程序、计算机程序、应用程序（app） 和 可执行文件 等。 程序 是用代码编写的任何东西；网站、游戏和手机应用都是程序。虽然可以在不编写代码的情况下创建程序，但设备解释的底层逻辑很可能是用代码编写的。一个正在 运行 或 执行 代码的程序正在执行指令。您正在使用的设备运行了一个程序，将本课程内容显示在屏幕上。 ✅ 做一些研究：谁被认为是世界上第一位计算机程序员？ 编程语言 编程语言使开发者能够为设备编写指令。设备只能理解二进制（1 和 0），而对于 大多数 开发者来说，这并不是一种高效的交流方式。编程语言是人类与计算机之间的交流工具。 编程语言有不同的格式，并可能服务于不同的目的。例如，JavaScript 主要用于 Web 应用程序，而 Bash 主要用于操作系统。 低级语言 通常比 高级语言 需要更少的步骤来让设备解释指令。然而，高级语言因其可读性和支持性而受到欢迎。JavaScript 被认为是一种高级语言。 以下代码展示了使用 JavaScript 的高级语言和使用 ARM 汇编代码的低级语言之间的区别。 ```javascript let number = 10 let n1 = 0, n2 = 1, nextTerm; for (let i = 1; i <= number; i++) { consolelog(n1);\nnextTerm = n1 + n2;\nn1 = n2;\nn2 = nextTerm;\n}\n```\nc\narea ascen,code,readonly\nentry\ncode32\nadr r0,thumb+1\nbx r0\ncode16\nthumb\nmov r0,#00\nsub r0,r0,#01\nmov r1,#01\nmov r4,#10\nldr r2,=0x40000000\nback add r0,r1\nstr r0,[r2]\nadd r2,#04\nmov r3,r0\nmov r0,r1\nmov r1,r3\nsub r4,#01\ncmp r4,#00\nbne back\nend\n相信或不相信，它们都在做同一件事：打印前 10 个斐波那契数列。\n✅ 斐波那契数列是 定义 为一组数字，其中每个数字是前两个数字之和，起始值为 0 和 1。前 10 个斐波那契数列是 0, 1, 1, 2, 3, 5, 8, 13, 21 和 34。\n程序的基本元素\n程序中的单条指令称为 语句，通常会有一个字符或行间距标记指令的结束或 终止。程序如何终止因语言而异。\n程序中的语句可能依赖用户或其他地方提供的数据来执行指令。数据可以改变程序的行为，因此编程语言提供了一种临时存储数据的方法，以便稍后使用。这些被称为 变量。变量是指示设备将数据保存在内存中的语句。程序中的变量类似于代数中的变量，它们有一个唯一的名称，其值可能会随时间变化。\n有些语句可能不会被设备执行。这通常是开发者有意设计的，或者是由于意外错误而发生的。这种对应用程序的控制使其更加健壮和可维护。通常，当满足某些条件时，这种控制会发生变化。在现代编程中，if",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11817,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1183,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "2bacf0b87928eff4983a0daacfeda97a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
    "source_type": "git_repo",
    "title": "编程语言与工具介绍",
    "content": "n2 = nextTerm; } ``` c area ascen,code,readonly entry code32 adr r0,thumb+1 bx r0 code16 thumb mov r0,#00 sub r0,r0,#01 mov r1,#01 mov r4,#10 ldr r2,=0x40000000 back add r0,r1 str r0,[r2] add r2,#04 mov r3,r0 mov r0,r1 mov r1,r3 sub r4,#01 cmp r4,#00 bne back end 相信或不相信，它们都在做同一件事：打印前 10 个斐波那契数列。 ✅ 斐波那契数列是 定义 为一组数字，其中每个数字是前两个数字之和，起始值为 0 和 1。前 10 个斐波那契数列是 0, 1, 1, 2, 3, 5, 8, 13, 21 和 34。 程序的基本元素 程序中的单条指令称为 语句，通常会有一个字符或行间距标记指令的结束或 终止。程序如何终止因语言而异。 程序中的语句可能依赖用户或其他地方提供的数据来执行指令。数据可以改变程序的行为，因此编程语言提供了一种临时存储数据的方法，以便稍后使用。这些被称为 变量。变量是指示设备将数据保存在内存中的语句。程序中的变量类似于代数中的变量，它们有一个唯一的名称，其值可能会随时间变化。 有些语句可能不会被设备执行。这通常是开发者有意设计的，或者是由于意外错误而发生的。这种对应用程序的控制使其更加健壮和可维护。通常，当满足某些条件时，这种控制会发生变化。在现代编程中，ifelse 语句是常用的控制程序运行的语句。\n✅ 您将在后续课程中学习更多关于这种语句的内容。\n工具介绍\n🎥 点击上方图片观看关于工具的视频\n在本节中，您将了解一些在开始您的专业开发旅程时可能非常有用的软件。\n开发环境 是开发者在编写软件时经常使用的一组独特工具和功能。这些工具可能根据开发者的具体需求进行了定制，并可能随着开发者的工作重点、个人项目或使用的编程语言的变化而改变。开发环境如同开发者本身一样独特。\n编辑器\n软件开发中最重要的工具之一是编辑器。编辑器是您编写代码的地方，有时也是运行代码的地方。\n开发者依赖编辑器的几个额外原因：\n调试 通过逐行检查代码来发现错误和问题。一些编辑器具有调试功能；它们可以为特定的编程语言进行定制和添加。\n语法高亮 为代码添加颜色和文本格式，使其更易于阅读。大多数编辑器允许自定义语法高亮。\n扩展和集成 是为开发者设计的专业工具。这些工具并未内置于基础编辑器中。例如，许多开发者会为代码添加文档以解释其工作原理。他们可能会安装拼写检查扩展来帮助发现文档中的拼写错误。大多数扩展是为特定编辑器设计的，大多数编辑器都提供了搜索可用扩展的方法。\n自定义 使开发者能够创建适合自己需求的独特开发环境。大多数编辑器都非常可定制，并且可能允许开发者创建自定义扩展。\n流行的编辑器和 Web 开发扩展\nVisual Studio Code\nCode Spell Checker\nLive Share\nPrettier - Code formatter\nAtom\nspell-check\nteletype\natom-beautify\nSublimetext\nemmet\nSublimeLinter\n浏览器\n另一个重要的工具是浏览器。Web 开发者依赖浏览器查看其代码在 Web 上的运行效果。浏览器还用于显示在编辑器中编写的网页的视觉元素，例如 HTML。\n许多浏览器都带有 开发者工具（DevTools），其中包含一组有用的功能和信息，帮助开发者收集和捕获有关其应用程序的重要信息。例如：如果网页出现错误，了解错误发生的时间有时会很有帮助。浏览器中的开发者工具可以配置为捕获这些信息。\n流行的浏览器和开发者工具\nEdge\nChrome\nFirefox\n命令行工具\n一些开发者更喜欢使用更少图形化的界面来完成日常任务，并依赖命令行来实现这一点。编写代码需要大量的输入，一些开发者更喜欢不打断键盘上的工作流。他们会使用键盘快捷键在桌面窗口之间切换、处理不同文件并使用工具。虽然大多数任务可以通过鼠标完成，但使用命令行的一个好处是可以在不切换鼠标和键盘的情况下完成许多任务。命令行的另一个好处是它们是可配置的，您可以保存自定义配置，稍后更改，并将其导入到其他开发机器中。由于开发环境对每个开发者来说都是独特的，有些人会完全避免使用命令行，有些人会完全依赖它，还有些人喜欢两者结合使用。\n流行的命令行选项\n命令行选项会因您使用的操作系统而异。\n💻 = 操作系统预装。\nWindows\nPowershell 💻\n命令行（也称为 CMD）💻\nWindows Terminal\nmintty\nMacOS\n终端 💻\niTerm\nPowershell\nLinux\nBash 💻\nKDE Konsole\nPowershell\n流行的命令行工具\nGit（💻 在大多数操作系统上预装）\nNPM\nYarn\n文档\n当开发者想学习新知识时，他们很可能会查阅文档以了解如何使用它。开发者经常依赖文档来指导他们正确使用工具和语言，并深入了解其工作原理。\n流行的 Web 开发文档\nMozilla Developer Network (MDN)，由 Firefox 浏览器的发布者 Mozilla 提供\nFrontend Masters\nWeb",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11817,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1837,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "4f78ed029be7669ed9f1aa2145ce6c7f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
    "source_type": "git_repo",
    "title": "编程语言与工具介绍",
    "content": "Code Code Spell Checker Live Share Prettier - Code formatter Atom spell-check teletype atom-beautify Sublimetext emmet SublimeLinter 浏览器 另一个重要的工具是浏览器。Web 开发者依赖浏览器查看其代码在 Web 上的运行效果。浏览器还用于显示在编辑器中编写的网页的视觉元素，例如 HTML。 许多浏览器都带有 开发者工具（DevTools），其中包含一组有用的功能和信息，帮助开发者收集和捕获有关其应用程序的重要信息。例如：如果网页出现错误，了解错误发生的时间有时会很有帮助。浏览器中的开发者工具可以配置为捕获这些信息。 流行的浏览器和开发者工具 Edge Chrome Firefox 命令行工具 一些开发者更喜欢使用更少图形化的界面来完成日常任务，并依赖命令行来实现这一点。编写代码需要大量的输入，一些开发者更喜欢不打断键盘上的工作流。他们会使用键盘快捷键在桌面窗口之间切换、处理不同文件并使用工具。虽然大多数任务可以通过鼠标完成，但使用命令行的一个好处是可以在不切换鼠标和键盘的情况下完成许多任务。命令行的另一个好处是它们是可配置的，您可以保存自定义配置，稍后更改，并将其导入到其他开发机器中。由于开发环境对每个开发者来说都是独特的，有些人会完全避免使用命令行，有些人会完全依赖它，还有些人喜欢两者结合使用。 流行的命令行选项 命令行选项会因您使用的操作系统而异。 💻 = 操作系统预装。 Windows Powershell 💻 命令行（也称为 CMD）💻 Windows Terminal mintty MacOS 终端 💻 iTerm Powershell Linux Bash 💻 KDE Konsole Powershell 流行的命令行工具 Git（💻 在大多数操作系统上预装） NPM Yarn 文档 当开发者想学习新知识时，他们很可能会查阅文档以了解如何使用它。开发者经常依赖文档来指导他们正确使用工具和语言，并深入了解其工作原理。 流行的 Web 开发文档 Mozilla Developer Network (MDN)，由 Firefox 浏览器的发布者 Mozilla 提供 Frontend Masters Webdev，由 Chrome 的发布者 Google 提供\nMicrosoft 的开发者文档，适用于 Microsoft Edge\nW3 Schools\n✅ 做一些研究：现在您已经了解了 Web 开发者的环境，试着将其与 Web 设计师的环境进行比较和对比。\n🚀 挑战\n比较一些编程语言。JavaScript 和 Java 有哪些独特的特性？COBOL 和 Go 又如何？\n课后测验\n课后测验\n复习与自学\n学习一下程序员可用的不同语言。尝试用一种语言写一行代码，然后用另外两种语言重写它。您学到了什么？\n作业\n阅读文档\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11817,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\1-intro-to-programming-languages\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1070,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "8c5a7b4320da61088d779ea9b236d7b4",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\assignment.md",
    "source_type": "git_repo",
    "title": "分析一个不可访问的网站",
    "content": "分析一个不可访问的网站\n指导说明\n找出一个你认为不可访问的网站，并制定一个改进其可访问性的行动计划。\n你的第一步是识别这个网站，详细说明你认为它不可访问的原因（无需使用分析工具），然后提交给 Lighthouse 进行分析。\n将分析结果保存为 PDF，并制定一个详细的改进计划，至少包含十个改进点，说明如何改进该网站。\n测试网站可访问性的表格\n| 标准     | 卓越       | 合格       | 需要改进       |\n|----------|-----------|----------|----------------|\n|          | 缺少 <10% 的必要内容 | 缺少 20% 的必要内容 | 缺少 50% 的必要内容 |\n学生报告：包括关于网站不可访问性的段落、Lighthouse 分析报告的 PDF 文件、十个改进点的列表，以及详细的改进方法\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。应以原始语言的文档作为权威来源。对于关键信息，建议使用专业人工翻译。我们对于因使用此翻译而引起的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1564,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\assignment.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1e2541941c94ec024d51a46ba84d0bf2",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "创建无障碍网页\n由 Tomomi Imura 绘制的速记图\n课前测验\n课前测验\nWeb 的力量在于它的普遍性。无论是否有残疾，每个人都能访问是其核心要素。\n- 提姆·伯纳斯-李爵士，W3C 主任及万维网发明者\n这句话完美地强调了创建无障碍网站的重要性。如果一个应用无法被所有人访问，那么它本质上就是排斥性的。作为网页开发者，我们应该始终将无障碍性放在心上。从一开始就关注这一点，您将能够确保所有人都能访问您创建的页面。在本课程中，您将学习一些工具，这些工具可以帮助您确保您的网页资源是无障碍的，并了解如何以无障碍性为目标进行构建。\n您可以在 Microsoft Learn 上学习本课程！\n可用工具\n屏幕阅读器\n屏幕阅读器是最知名的无障碍工具之一。\n屏幕阅读器 是视力受损人士常用的客户端。当我们花时间确保浏览器正确传达我们希望分享的信息时，我们也必须确保屏幕阅读器能够做到这一点。\n屏幕阅读器的基本功能是从上到下以音频形式读取页面。如果您的页面全是文本，阅读器会以类似浏览器的方式传达信息。当然，网页很少是纯文本；它们通常包含链接、图形、颜色和其他视觉组件。我们需要确保这些信息能够被屏幕阅读器正确读取。\n每个网页开发者都应该熟悉屏幕阅读器。正如上文所述，这是用户将使用的客户端。就像您熟悉浏览器的操作方式一样，您也应该了解屏幕阅读器的操作方式。幸运的是，大多数操作系统都内置了屏幕阅读器。\n一些浏览器还提供内置工具和扩展，可以朗读文本甚至提供一些基本的导航功能，例如 这些专注于无障碍性的 Edge 浏览器工具。这些工具也是重要的无障碍工具，但它们的功能与屏幕阅读器非常不同，不应将它们误认为是屏幕阅读器测试工具。\n✅ 试用屏幕阅读器和浏览器文本阅读器。在 Windows 系统中，Narrator 是默认内置的，JAWS 和 NVDA 也可以安装。在 macOS 和 iOS 系统中，VoiceOver 是默认内置的。\n缩放\n另一种视力受损人士常用的工具是缩放。最基本的缩放方式是静态缩放，通过 Control + 加号 (+) 或降低屏幕分辨率来控制。这种缩放会使整个页面调整大小，因此使用 响应式设计 对于在高缩放级别下提供良好的用户体验非常重要。\n另一种缩放方式依赖于专门的软件来放大屏幕的某一区域并进行平移，就像使用真正的放大镜一样。在 Windows 系统中，Magnifier 是内置的，ZoomText 是第三方放大软件，功能更多且用户群更大。macOS 和 iOS 系统内置了名为 Zoom 的放大软件。\n对比度检查器\n网站上的颜色需要仔细选择，以满足色盲用户或难以辨别低对比度颜色的用户的需求。\n✅ 使用浏览器扩展（例如 WCAG 的颜色检查器）测试您喜欢的网站的颜色使用情况。您学到了什么？\nLighthouse\n在浏览器的开发者工具区域，您会找到 Lighthouse 工具。这个工具对于初步了解网站的无障碍性（以及其他分析）非常重要。虽然不能完全依赖 Lighthouse，但 100% 的评分作为基准非常有帮助。\n✅ 在浏览器的开发者工具面板中找到 Lighthouse，并对任意网站运行分析。您发现了什么？\n无障碍设计\n无障碍性是一个相对较大的话题。为了帮助您，有许多资源可供使用。\nAccessible U - 明尼苏达大学\n虽然我们无法涵盖创建无障碍网站的所有方面，但以下是您需要实施的一些核心原则。从一开始就设计一个无障碍页面 总是 比事后修改现有页面更容易。\n良好的显示原则\n安全的配色方案\n人们以不同的方式看待世界，这包括颜色。在为您的网站选择配色方案时，您应该确保它对所有人都无障碍。一个很棒的 生成配色方案的工具是 Color Safe。\n✅ 找出一个在颜色使用方面问题很大的网站。为什么？\n使用正确的 HTML\n通过 CSS 和 JavaScript，可以让任何元素看起来像任何类型的控件。<span> 可以用来创建 <button>，<b> 可以变成超链接。虽然这可能更容易样式化，但它对屏幕阅读器没有任何意义。在页面上创建控件时，请使用适当的 HTML。如果您需要一个超链接，请使用 <a>。使用正确的 HTML 创建控件被称为使用语义化 HTML。\n✅ 访问任意网站，查看设计师和开发者是否正确使用了 HTML。您能找到应该是链接却被做成按钮的例子吗？提示：右键单击并选择浏览器中的“查看页面源代码”以查看底层代码。\n创建描述性的标题层次结构\n屏幕阅读器用户 非常依赖标题 来查找信息并导航页面。编写描述性的标题内容并使用语义化标题标签对于创建一个易于屏幕阅读器用户导航的网站非常重要。\n使用良好的视觉线索\nCSS 提供了对页面上任何元素外观的完全控制。您可以创建没有边框的文本框或没有下划线的超链接。不幸的是，移除这些线索可能会使依赖它们的人更难识别控件类型。\n链接文本的重要性\n超链接是浏览网页的核心。因此，确保屏幕阅读器能够正确读取链接可以让所有用户导航您的网站。\n屏幕阅读器与链接\n正如您所预料的，屏幕阅读器会像读取页面上的其他文本一样读取链接文本。考虑到这一点，下面的文本可能看起来完全可以接受。\n小企鹅，有时被称为仙女企鹅，是世界上最小的企鹅。点击这里 了解更多信息。\n小企鹅，有时被称为仙女企鹅，是世界上最小的企鹅。访问 https://en",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 2084,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "97b84cd0336e1be063500739a3d89839",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "对于在高缩放级别下提供良好的用户体验非常重要。 另一种缩放方式依赖于专门的软件来放大屏幕的某一区域并进行平移，就像使用真正的放大镜一样。在 Windows 系统中，Magnifier 是内置的，ZoomText 是第三方放大软件，功能更多且用户群更大。macOS 和 iOS 系统内置了名为 Zoom 的放大软件。 对比度检查器 网站上的颜色需要仔细选择，以满足色盲用户或难以辨别低对比度颜色的用户的需求。 ✅ 使用浏览器扩展（例如 WCAG 的颜色检查器）测试您喜欢的网站的颜色使用情况。您学到了什么？ Lighthouse 在浏览器的开发者工具区域，您会找到 Lighthouse 工具。这个工具对于初步了解网站的无障碍性（以及其他分析）非常重要。虽然不能完全依赖 Lighthouse，但 100% 的评分作为基准非常有帮助。 ✅ 在浏览器的开发者工具面板中找到 Lighthouse，并对任意网站运行分析。您发现了什么？ 无障碍设计 无障碍性是一个相对较大的话题。为了帮助您，有许多资源可供使用。 Accessible U - 明尼苏达大学 虽然我们无法涵盖创建无障碍网站的所有方面，但以下是您需要实施的一些核心原则。从一开始就设计一个无障碍页面 总是 比事后修改现有页面更容易。 良好的显示原则 安全的配色方案 人们以不同的方式看待世界，这包括颜色。在为您的网站选择配色方案时，您应该确保它对所有人都无障碍。一个很棒的 生成配色方案的工具是 Color Safe。 ✅ 找出一个在颜色使用方面问题很大的网站。为什么？ 使用正确的 HTML 通过 CSS 和 JavaScript，可以让任何元素看起来像任何类型的控件。<span> 可以用来创建 <button>，<b> 可以变成超链接。虽然这可能更容易样式化，但它对屏幕阅读器没有任何意义。在页面上创建控件时，请使用适当的 HTML。如果您需要一个超链接，请使用 <a>。使用正确的 HTML 创建控件被称为使用语义化 HTML。 ✅ 访问任意网站，查看设计师和开发者是否正确使用了 HTML。您能找到应该是链接却被做成按钮的例子吗？提示：右键单击并选择浏览器中的“查看页面源代码”以查看底层代码。 创建描述性的标题层次结构 屏幕阅读器用户 非常依赖标题 来查找信息并导航页面。编写描述性的标题内容并使用语义化标题标签对于创建一个易于屏幕阅读器用户导航的网站非常重要。 使用良好的视觉线索 CSS 提供了对页面上任何元素外观的完全控制。您可以创建没有边框的文本框或没有下划线的超链接。不幸的是，移除这些线索可能会使依赖它们的人更难识别控件类型。 链接文本的重要性 超链接是浏览网页的核心。因此，确保屏幕阅读器能够正确读取链接可以让所有用户导航您的网站。 屏幕阅读器与链接 正如您所预料的，屏幕阅读器会像读取页面上的其他文本一样读取链接文本。考虑到这一点，下面的文本可能看起来完全可以接受。 小企鹅，有时被称为仙女企鹅，是世界上最小的企鹅。点击这里 了解更多信息。 小企鹅，有时被称为仙女企鹅，是世界上最小的企鹅。访问 https://enwikipedia",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 1186,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "c4a6d6ae30163120f16b7860dc508105",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "对于在高缩放级别下提供良好的用户体验非常重要。 另一种缩放方式依赖于专门的软件来放大屏幕的某一区域并进行平移，就像使用真正的放大镜一样。在 Windows 系统中，Magnifier 是内置的，ZoomText 是第三方放大软件，功能更多且用户群更大。macOS 和 iOS 系统内置了名为 Zoom 的放大软件。 对比度检查器 网站上的颜色需要仔细选择，以满足色盲用户或难以辨别低对比度颜色的用户的需求。 ✅ 使用浏览器扩展（例如 WCAG 的颜色检查器）测试您喜欢的网站的颜色使用情况。您学到了什么？ Lighthouse 在浏览器的开发者工具区域，您会找到 Lighthouse 工具。这个工具对于初步了解网站的无障碍性（以及其他分析）非常重要。虽然不能完全依赖 Lighthouse，但 100% 的评分作为基准非常有帮助。 ✅ 在浏览器的开发者工具面板中找到 Lighthouse，并对任意网站运行分析。您发现了什么？ 无障碍设计 无障碍性是一个相对较大的话题。为了帮助您，有许多资源可供使用。 Accessible U - 明尼苏达大学 虽然我们无法涵盖创建无障碍网站的所有方面，但以下是您需要实施的一些核心原则。从一开始就设计一个无障碍页面 总是 比事后修改现有页面更容易。 良好的显示原则 安全的配色方案 人们以不同的方式看待世界，这包括颜色。在为您的网站选择配色方案时，您应该确保它对所有人都无障碍。一个很棒的 生成配色方案的工具是 Color Safe。 ✅ 找出一个在颜色使用方面问题很大的网站。为什么？ 使用正确的 HTML 通过 CSS 和 JavaScript，可以让任何元素看起来像任何类型的控件。<span> 可以用来创建 <button>，<b> 可以变成超链接。虽然这可能更容易样式化，但它对屏幕阅读器没有任何意义。在页面上创建控件时，请使用适当的 HTML。如果您需要一个超链接，请使用 <a>。使用正确的 HTML 创建控件被称为使用语义化 HTML。 ✅ 访问任意网站，查看设计师和开发者是否正确使用了 HTML。您能找到应该是链接却被做成按钮的例子吗？提示：右键单击并选择浏览器中的“查看页面源代码”以查看底层代码。 创建描述性的标题层次结构 屏幕阅读器用户 非常依赖标题 来查找信息并导航页面。编写描述性的标题内容并使用语义化标题标签对于创建一个易于屏幕阅读器用户导航的网站非常重要。 使用良好的视觉线索 CSS 提供了对页面上任何元素外观的完全控制。您可以创建没有边框的文本框或没有下划线的超链接。不幸的是，移除这些线索可能会使依赖它们的人更难识别控件类型。 链接文本的重要性 超链接是浏览网页的核心。因此，确保屏幕阅读器能够正确读取链接可以让所有用户导航您的网站。 屏幕阅读器与链接 正如您所预料的，屏幕阅读器会像读取页面上的其他文本一样读取链接文本。考虑到这一点，下面的文本可能看起来完全可以接受。 小企鹅，有时被称为仙女企鹅，是世界上最小的企鹅。点击这里 了解更多信息。 小企鹅，有时被称为仙女企鹅，是世界上最小的企鹅。访问 https://enwikipediaorg/wiki/Little_penguin 了解更多信息。\nNOTE 正如您即将阅读的内容，您应该 永远不要 创建像上面这样的链接。\n请记住，屏幕阅读器是与浏览器不同的界面，具有不同的功能集。\n使用 URL 的问题\n屏幕阅读器会读取文本。如果文本中出现 URL，屏幕阅读器会读取 URL。通常来说，URL 并不能传达有意义的信息，而且听起来可能很烦人。如果您的手机曾经以音频形式读取带有 URL 的短信，您可能会有类似的体验。\n使用“点击这里”的问题\n屏幕阅读器还可以仅读取页面上的超链接，就像视力正常的人会扫描页面寻找链接一样。如果链接文本总是“点击这里”，用户听到的就会是“点击这里，点击这里，点击这里，点击这里，点击这里，……”所有链接现在都无法区分。\n良好的链接文本\n良好的链接文本简要描述了链接另一端的内容。在上面关于小企鹅的例子中，链接指向该物种的维基百科页面。短语 小企鹅 是完美的链接文本，因为它清楚地表明点击链接后可以了解什么——小企鹅。\n小企鹅，有时被称为仙女企鹅，是世界上最小的企鹅。\n✅ 浏览网页几分钟，寻找使用模糊链接策略的页面。将它们与链接更好的网站进行比较。您学到了什么？\n搜索引擎提示\n确保您的网站对所有人都无障碍还有一个额外的好处：帮助搜索引擎导航您的网站。搜索引擎使用链接文本来了解页面的主题。因此，使用良好的链接文本对所有人都有帮助！\nARIA\n想象以下页面：\n| 产品         | 描述              | 订购          |\n| ------------ | ----------------- | ------------- |\n| 小工具       | 描述   |\n| 超级小工具   | 描述   |\n在这个例子中，重复使用“描述”和“订购”文本对于使用浏览器的人来说是合理的。然而，使用屏幕阅读器的人只会听到“描述”和“订购”重复出现，没有上下文。\n为了支持这些场景，HTML 支持一组称为 无障碍富互联网应用 (ARIA) 的属性。这些属性允许您为屏幕阅读器提供额外的信息。\nNOTE：与 HTML 的许多方面一样，浏览器和屏幕阅读器的支持可能会有所不同。然而，大多数主流客户端支持 ARIA 属性。\n您可以使用 aria-label 来描述链接，当页面格式不允许时。例如，可以为小工具的描述设置如下：\nhtml\n<a href=\"#\" aria-label=\"Widget description\">description</a>\n✅ 通常，使用上述语义化标记比使用 ARIA 更优先，但有时某些 HTML 小部件没有语义等价物。一个很好的例子是树结构。HTML 中没有树的等价物，因此您可以为该元素的通用 <div> 设置适当的角色和 ARIA 值。MDN 上关于 ARIA 的文档 包含更多有用信息。\n```html\nFile Viewer\nUploads\n```\n图片\n显而易见，屏幕阅读器无法自动读取图片中的内容。确保图片无障碍并不需要太多工作——这正是 alt 属性的用途所在。所有有意义的图片都应该有一个 alt 来描述它们的内容。\n纯装饰性的图片应该将其 alt 属性设置为空字符串：alt=\"\"。这样可以防止屏幕阅读器不必要地宣布装饰性图片。\n✅ 正如您可能预料的，搜索引擎也无法理解图片中的内容。它们也使用 alt 文本。因此，再次确保您的页面无障碍会带来额外的好处！\n键盘\n有些用户无法使用鼠标或触控板，而是依赖键盘交互通过 Tab 键从一个元素导航到下一个元素。您的网站需要以逻辑顺序呈现内容，以便键盘用户能够按顺序访问每个交互元素。如果您使用语义化标记构建网页并使用 CSS 样式化其视觉布局，您的网站应该可以通过键盘导航，但手动测试这一方面仍然很重要。了解更多关于 键盘导航策略 的信息。\n✅ 访问任意网站，仅使用键盘尝试导航。什么有效，什么无效？为什么？\n总结\n一个只能被部分人访问的网络并不是真正的“全球网络”。确保您创建的网站无障碍的最佳方法是从一开始就采用无障碍性最佳实践。虽然这需要额外的步骤，但现在将这些技能融入您的工作流程意味着您创建的所有页面都将是无障碍的。\n🚀 挑战\n使用您学到的策略，将以下 HTML 重写为尽可能无障碍的版本。\n```html\nExample\nTurtle Ipsum\nThe World's Premier Turtle Fan Club\nResources\n\"I like turtles\"\nBasic Turtle Info\nChocolate Turtles\nWelcome to Turtle Ipsum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 2748,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "f30d5f0d3388a48657d90e37456cb9bf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "href=\"#\" aria-label=\"Widget description\">description</a> ✅ 通常，使用上述语义化标记比使用 ARIA 更优先，但有时某些 HTML 小部件没有语义等价物。一个很好的例子是树结构。HTML 中没有树的等价物，因此您可以为该元素的通用 <div> 设置适当的角色和 ARIA 值。MDN 上关于 ARIA 的文档 包含更多有用信息。 ```html File Viewer Uploads ``` 图片 显而易见，屏幕阅读器无法自动读取图片中的内容。确保图片无障碍并不需要太多工作——这正是 alt 属性的用途所在。所有有意义的图片都应该有一个 alt 来描述它们的内容。 纯装饰性的图片应该将其 alt 属性设置为空字符串：alt=\"\"。这样可以防止屏幕阅读器不必要地宣布装饰性图片。 ✅ 正如您可能预料的，搜索引擎也无法理解图片中的内容。它们也使用 alt 文本。因此，再次确保您的页面无障碍会带来额外的好处！ 键盘 有些用户无法使用鼠标或触控板，而是依赖键盘交互通过 Tab 键从一个元素导航到下一个元素。您的网站需要以逻辑顺序呈现内容，以便键盘用户能够按顺序访问每个交互元素。如果您使用语义化标记构建网页并使用 CSS 样式化其视觉布局，您的网站应该可以通过键盘导航，但手动测试这一方面仍然很重要。了解更多关于 键盘导航策略 的信息。 ✅ 访问任意网站，仅使用键盘尝试导航。什么有效，什么无效？为什么？ 总结 一个只能被部分人访问的网络并不是真正的“全球网络”。确保您创建的网站无障碍的最佳方法是从一开始就采用无障碍性最佳实践。虽然这需要额外的步骤，但现在将这些技能融入您的工作流程意味着您创建的所有页面都将是无障碍的。 🚀 挑战 使用您学到的策略，将以下 HTML 重写为尽可能无障碍的版本。 ```html Example Turtle Ipsum The World's Premier Turtle Fan Club Resources \"I like turtles\" Basic Turtle Info Chocolate Turtles Welcome to Turtle IpsumClick here to learn more",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 715,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "cc846d9269c04c74b41aa0135aff7a5a",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "通常，使用上述语义化标记比使用 ARIA 更优先，但有时某些 HTML 小部件没有语义等价物。一个很好的例子是树结构。HTML 中没有树的等价物，因此您可以为该元素的通用 <div> 设置适当的角色和 ARIA 值。MDN 上关于 ARIA 的文档 包含更多有用信息。 ```html File Viewer Uploads ``` 图片 显而易见，屏幕阅读器无法自动读取图片中的内容。确保图片无障碍并不需要太多工作——这正是 alt 属性的用途所在。所有有意义的图片都应该有一个 alt 来描述它们的内容。 纯装饰性的图片应该将其 alt 属性设置为空字符串：alt=\"\"。这样可以防止屏幕阅读器不必要地宣布装饰性图片。 ✅ 正如您可能预料的，搜索引擎也无法理解图片中的内容。它们也使用 alt 文本。因此，再次确保您的页面无障碍会带来额外的好处！ 键盘 有些用户无法使用鼠标或触控板，而是依赖键盘交互通过 Tab 键从一个元素导航到下一个元素。您的网站需要以逻辑顺序呈现内容，以便键盘用户能够按顺序访问每个交互元素。如果您使用语义化标记构建网页并使用 CSS 样式化其视觉布局，您的网站应该可以通过键盘导航，但手动测试这一方面仍然很重要。了解更多关于 键盘导航策略 的信息。 ✅ 访问任意网站，仅使用键盘尝试导航。什么有效，什么无效？为什么？ 总结 一个只能被部分人访问的网络并不是真正的“全球网络”。确保您创建的网站无障碍的最佳方法是从一开始就采用无障碍性最佳实践。虽然这需要额外的步骤，但现在将这些技能融入您的工作流程意味着您创建的所有页面都将是无障碍的。 🚀 挑战 使用您学到的策略，将以下 HTML 重写为尽可能无障碍的版本。 ```html Example Turtle Ipsum The World's Premier Turtle Fan Club Resources \"I like turtles\" Basic Turtle Info Chocolate Turtles Welcome to Turtle IpsumClick here to learn moreTurtle ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 722,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "fc71479766cdcff354a2f95cb98ec3cb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "``` 图片 显而易见，屏幕阅读器无法自动读取图片中的内容。确保图片无障碍并不需要太多工作——这正是 alt 属性的用途所在。所有有意义的图片都应该有一个 alt 来描述它们的内容。 纯装饰性的图片应该将其 alt 属性设置为空字符串：alt=\"\"。这样可以防止屏幕阅读器不必要地宣布装饰性图片。 ✅ 正如您可能预料的，搜索引擎也无法理解图片中的内容。它们也使用 alt 文本。因此，再次确保您的页面无障碍会带来额外的好处！ 键盘 有些用户无法使用鼠标或触控板，而是依赖键盘交互通过 Tab 键从一个元素导航到下一个元素。您的网站需要以逻辑顺序呈现内容，以便键盘用户能够按顺序访问每个交互元素。如果您使用语义化标记构建网页并使用 CSS 样式化其视觉布局，您的网站应该可以通过键盘导航，但手动测试这一方面仍然很重要。了解更多关于 键盘导航策略 的信息。 ✅ 访问任意网站，仅使用键盘尝试导航。什么有效，什么无效？为什么？ 总结 一个只能被部分人访问的网络并不是真正的“全球网络”。确保您创建的网站无障碍的最佳方法是从一开始就采用无障碍性最佳实践。虽然这需要额外的步骤，但现在将这些技能融入您的工作流程意味着您创建的所有页面都将是无障碍的。 🚀 挑战 使用您学到的策略，将以下 HTML 重写为尽可能无障碍的版本。 ```html Example Turtle Ipsum The World's Premier Turtle Fan Club Resources \"I like turtles\" Basic Turtle Info Chocolate Turtles Welcome to Turtle IpsumClick here to learn moreTurtle ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliquaUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "3cbd65028b211e530bd405648f186c29",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "Tab 键从一个元素导航到下一个元素。您的网站需要以逻辑顺序呈现内容，以便键盘用户能够按顺序访问每个交互元素。如果您使用语义化标记构建网页并使用 CSS 样式化其视觉布局，您的网站应该可以通过键盘导航，但手动测试这一方面仍然很重要。了解更多关于 键盘导航策略 的信息。 ✅ 访问任意网站，仅使用键盘尝试导航。什么有效，什么无效？为什么？ 总结 一个只能被部分人访问的网络并不是真正的“全球网络”。确保您创建的网站无障碍的最佳方法是从一开始就采用无障碍性最佳实践。虽然这需要额外的步骤，但现在将这些技能融入您的工作流程意味着您创建的所有页面都将是无障碍的。 🚀 挑战 使用您学到的策略，将以下 HTML 重写为尽可能无障碍的版本。 ```html Example Turtle Ipsum The World's Premier Turtle Fan Club Resources \"I like turtles\" Basic Turtle Info Chocolate Turtles Welcome to Turtle IpsumClick here to learn moreTurtle ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliquaUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequatDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "e069a43848f8efa6947be104e1bf2f1d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
    "source_type": "git_repo",
    "title": "Example",
    "content": "```html Example Turtle Ipsum The World's Premier Turtle Fan Club Resources \"I like turtles\" Basic Turtle Info Chocolate Turtles Welcome to Turtle IpsumClick here to learn moreTurtle ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliquaUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequatDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariaturExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nSign up for turtle news\nInternal Pages\nIndex\nSemantic Example\n© 2016 Instrument\n```\n课后测验\n课后测验\n复习与自学\n许多国家政府都有关于无障碍要求的法律。了解一下你所在国家的无障碍法律。哪些内容被涵盖了，哪些没有？一个例子是这个政府网站。\n作业\n分析一个不具备无障碍功能的网站\n致谢: Turtle Ipsum by Instrument\n免责声明：\n本文档使用AI翻译服务Co-op Translator进行翻译。尽管我们努力确保翻译的准确性，但请注意，自动翻译可能包含错误或不准确之处。原始语言的文档应被视为权威来源。对于重要信息，建议使用专业人工翻译。我们对因使用此翻译而产生的任何误解或误读不承担责任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16033,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\1-getting-started-lessons\\3-accessibility\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "70fe6b40ee84d3f09c87614c99fe9cfb",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\1-getting-started-lessons\\README.md",
    "source_type": "git_repo",
    "title": "開始學習網頁開發",
    "content": "開始學習網頁開發\n在本課程的這一部分，您將學習一些非專案型的概念，這些概念對成為專業開發者至關重要。\n主題\n程式語言與工具的介紹\nGitHub 基礎介紹\n無障礙設計基礎\n致謝\n程式語言與工具的介紹由 Jasmine Greenaway 用 ♥️ 撰寫\nGitHub 基礎介紹由 Floor Drees 用 ♥️ 撰寫\n無障礙設計基礎由 Christopher Harrison 用 ♥️ 撰寫\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。儘管我們致力於提供準確的翻譯，請注意自動翻譯可能包含錯誤或不準確之處。原始文件的母語版本應被視為權威來源。對於關鍵資訊，建議尋求專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋不承擔責任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1338,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\1-getting-started-lessons\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1ff98f7e72c902fa87844f4f8c4b4abc",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\tw\\2-js-basics\\README.md",
    "source_type": "git_repo",
    "title": "JavaScript 簡介",
    "content": "JavaScript 簡介\nJavaScript 是網頁的語言。在這四節課中，你將學習它的基礎知識。\n主題\n變數與資料型別\n函數與方法\n使用 JavaScript 做出決策\n陣列與迴圈\n致謝\n這些課程由 Jasmine Greenaway、Christopher Harrison 和 Chris Noring 用 ♥️ 撰寫。\n免責聲明：\n本文件使用 AI 翻譯服務 Co-op Translator 進行翻譯。雖然我們致力於提供準確的翻譯，但請注意，自動翻譯可能包含錯誤或不準確之處。原始文件的母語版本應被視為權威來源。對於關鍵資訊，建議使用專業人工翻譯。我們對因使用此翻譯而引起的任何誤解或錯誤解釋不承擔責任。",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1221,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\tw\\2-js-basics\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e9e9b76512c3391ca256d8d4ec84e274",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 script",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 581,
    "chunk_index": 0,
    "total_chunks": 50
  },
  {
    "id": "bbad964216bcc3a23ef3ae19fe26d29e",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 1,
    "total_chunks": 50
  },
  {
    "id": "e86922804a5485017484cd56ec3829fd",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/script",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 2,
    "total_chunks": 50
  },
  {
    "id": "2d5088f8a1d2c295eff8de4e3e5e7be7",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 767,
    "chunk_index": 3,
    "total_chunks": 50
  },
  {
    "id": "e0343873aba3571a6325d06cbecaae4b",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 776,
    "chunk_index": 4,
    "total_chunks": 50
  },
  {
    "id": "8f24960efbbfc1d060deee702dc98f47",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(documentgetElementById('plant2'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 785,
    "chunk_index": 5,
    "total_chunks": 50
  },
  {
    "id": "57fd4c3845c00c372355294824a95371",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(documentgetElementById('plant2'));\ndragElement(documentgetElementById('plant3'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 794,
    "chunk_index": 6,
    "total_chunks": 50
  },
  {
    "id": "b377328c219986dd5c58c11929101638",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(documentgetElementById('plant2'));\ndragElement(documentgetElementById('plant3'));\ndragElement(documentgetElementById('plant4'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 803,
    "chunk_index": 7,
    "total_chunks": 50
  },
  {
    "id": "f68d016598609bd3d2096734d5368bbf",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(documentgetElementById('plant2'));\ndragElement(documentgetElementById('plant3'));\ndragElement(documentgetElementById('plant4'));\ndragElement(documentgetElementById('plant5'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 812,
    "chunk_index": 8,
    "total_chunks": 50
  },
  {
    "id": "c0012c0061d52bd989bb6297b979645f",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(documentgetElementById('plant2'));\ndragElement(documentgetElementById('plant3'));\ndragElement(documentgetElementById('plant4'));\ndragElement(documentgetElementById('plant5'));\ndragElement(documentgetElementById('plant6'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 821,
    "chunk_index": 9,
    "total_chunks": 50
  },
  {
    "id": "345d95b26d05091e6d49fa1f5f384c87",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(documentgetElementById('plant2'));\ndragElement(documentgetElementById('plant3'));\ndragElement(documentgetElementById('plant4'));\ndragElement(documentgetElementById('plant5'));\ndragElement(documentgetElementById('plant6'));\ndragElement(documentgetElementById('plant7'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 830,
    "chunk_index": 10,
    "total_chunks": 50
  },
  {
    "id": "ee4df826cf35aa0110f938dbfafb400d",
    "source_file": "corpus\\git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
    "source_type": "git_repo",
    "title": "玻璃花园项目第三部分：DOM操作与闭包",
    "content": "玻璃花园项目第三部分：DOM操作与闭包\nTomomi Imura 的手绘笔记\n课前测验\n课前测验\n简介\n操作DOM（文档对象模型）是网页开发的关键部分。根据 MDN 的定义，“文档对象模型（DOM）是网页中构成文档结构和内容的对象的数据表示形式。” 由于网页上的DOM操作的复杂性，开发者通常会选择使用JavaScript框架而不是原生JavaScript来管理DOM，但在本课程中，我们将自己动手完成！\n此外，本课程将介绍 JavaScript闭包 的概念。闭包可以理解为一个函数被另一个函数包裹，使得内部函数可以访问外部函数的作用域。\nJavaScript闭包是一个广泛且复杂的主题。本课程仅涉及最基础的概念。在玻璃花园的代码中，你会发现一个闭包：一个内部函数和一个外部函数构造在一起，使得内部函数可以访问外部函数的作用域。想要了解更多关于闭包的工作原理，请访问 详细文档。\n我们将使用闭包来操作DOM。\n可以将DOM想象成一棵树，代表了网页文档可以被操作的所有方式。各种API（应用程序接口）被设计出来，使得程序员可以使用自己选择的编程语言访问DOM并进行编辑、修改、重新排列或其他管理操作。\nDOM及其对应HTML标记的表示形式。图片来源：Olfa Nasraoui\n在本课程中，我们将完成互动玻璃花园项目，通过创建JavaScript代码让用户能够在页面上操作植物。\n前置条件\n你应该已经完成了玻璃花园的HTML和CSS部分。在本课程结束时，你将能够通过拖动将植物移入或移出玻璃花园。\n任务\n在你的玻璃花园文件夹中，创建一个名为 scriptjs 的新文件。在 <head> 部分导入该文件：\nhtml\n<script src=\"/scriptjs\" defer></script>\n> 注意：在将外部JavaScript文件导入HTML文件时，使用 defer 属性可以确保JavaScript代码在HTML文件完全加载后才执行。你也可以使用 async 属性，它允许脚本在HTML文件解析时执行，但在我们的案例中，确保HTML元素完全加载后再执行拖动脚本是很重要的。\nDOM元素\n首先，你需要在DOM中创建对你想要操作的元素的引用。在我们的案例中，这些元素是当前位于侧边栏的14个植物。\n任务\nhtml\ndragElement(documentgetElementById('plant1'));\ndragElement(documentgetElementById('plant2'));\ndragElement(documentgetElementById('plant3'));\ndragElement(documentgetElementById('plant4'));\ndragElement(documentgetElementById('plant5'));\ndragElement(documentgetElementById('plant6'));\ndragElement(documentgetElementById('plant7'));\ndragElement(documentgetElementById('plant8'));\ndragElement(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12440,
      "relative_path": "git_repos\\web-dev-beginners\\translations\\zh\\3-terrarium\\3-intro-to-DOM-and-closures\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 839,
    "chunk_index": 11,
    "total_chunks": 50
  }
]