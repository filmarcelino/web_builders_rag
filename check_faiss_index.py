import faiss
import numpy as np
import os

def check_faiss_index():
    index_file = 'rag_data/faiss_index.bin'
    
    print("=== Verifica√ß√£o do √çndice FAISS ===")
    
    if not os.path.exists(index_file):
        print("‚úó Arquivo do √≠ndice FAISS n√£o encontrado")
        return
    
    try:
        # Carregar o √≠ndice FAISS
        index = faiss.read_index(index_file)
        
        print(f"‚úì √çndice FAISS carregado com sucesso")
        print(f"‚úì N√∫mero total de vetores no √≠ndice: {index.ntotal:,}")
        print(f"‚úì Dimens√£o dos vetores: {index.d}")
        
        # Verificar o tipo do √≠ndice
        print(f"‚úì Tipo do √≠ndice: {type(index).__name__}")
        
        # Estimar o progresso baseado no tamanho do arquivo
        file_size = os.path.getsize(index_file)
        print(f"‚úì Tamanho do arquivo: {file_size:,} bytes")
        
        # Calcular estimativa de chunks processados
        # Assumindo que cada vetor tem ~1536 dimens√µes (OpenAI) e 4 bytes por float
        estimated_vector_size = index.d * 4  # 4 bytes por float32
        estimated_vectors = file_size // estimated_vector_size
        
        print(f"‚úì Estimativa baseada no tamanho: ~{estimated_vectors:,} vetores")
        
        if index.ntotal > 0:
            print(f"\nüéØ PROGRESSO: {index.ntotal:,} chunks foram processados e indexados com sucesso!")
        else:
            print(f"\n‚ö†Ô∏è  O √≠ndice existe mas n√£o cont√©m vetores")
            
    except Exception as e:
        print(f"‚úó Erro ao carregar √≠ndice FAISS: {e}")

if __name__ == "__main__":
    check_faiss_index()