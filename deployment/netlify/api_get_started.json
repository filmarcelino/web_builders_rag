{
  "url": "https://docs.netlify.com/api/get-started/",
  "title": "Get started with the Netlify API",
  "description": "",
  "text": "Get started with the Netlify API\nGet started with the Netlify API\nCopy page\nView as plain text\nCopy Markdown\nView as plain text\nUse the Netlify REST API to manage atomic deploys of your sites and apps, manage form submissions, inject JavaScript snippets, manage DNS, and so much more.\nThis document covers the basics for interacting with the Netlify API, plus instructions for\ndeploying sites\nand notes on some\ncommonly used endpoints\n.\nYou can browse the\nOpenAPI reference for the Netlify API\nto explore available endpoints. Visit our Forums for more tips and conversation about\nunderstanding and using Netlify’s API\n.\nAdditionally, we have two API clients for your convenience:\nGo Client\nJS Client\nIf you’d like to interact with the Netlify API using a no-code tool, you can use n8n.io’s\nNetlify node\n. The node currently supports the following operations:\nCreate a new deployment\nGet a deployment\nGet all deployments\nCancel a deployment\nGet a site\nGet all sites\nDelete a site\nMake a request\nSection titled “Make a request”\nAll URLs start with\nhttps://api.netlify.com/api/v1/\n.\nSSL only\n. The path is prefixed with the API version. If we change the API in backward-incompatible ways, we’ll bump the version marker and maintain stable support for the old URLs.\nTo make a request for all sites you have access to, for example, append the\nsites\nindex path to the base URL to form something like\nhttps://api.netlify.com/api/v1/sites\n. Here’s an example in curl:\nTerminal window\ncurl\n-H\n\"\nUser-Agent: MyApp (YOUR_NAME@EXAMPLE.COM)\n\"\n\\\n-H\n\"\nAuthorization: Bearer YOUR_OAUTH2_ACCESS_TOKEN\n\"\n\\\nhttps://api.netlify.com/api/v1/sites\nAuthentication\nSection titled “Authentication”\nNetlify uses OAuth2 for authentication. All requests must use HTTPS.\nTo generate a personal access token (PAT):\nGo to\nApplications\n>\nPersonal access tokens\n.\nSelect\nNew access token\n.\nEnter a descriptive name to help you remember what the token will be used for.\nSelect\nAllow access to my SAML-based Netlify team\nto authorize access to your SAML-based team data through the API.\nSelect an\nExpiration\ndate for your token to help keep your information secure.\nSelect\nGenerate token\n.\nCopy the token to your clipboard and store it in a safe location. Once you navigate away from this page, you won’t be able to access the value again.\nSelect\nDone\n.\nUse your PAT for manual authentication in shell scripts or commands that use the Netlify API.\nTo authenticate API requests, include the token in the authorization header:\nAuthorization: Bearer <YOUR_PERSONAL_ACCESS_TOKEN>\nTo authenticate in shell scripts, refer to the\ncode sample above\nfor an example of how to use this token in a curl request.\nIf you’re making a public integration with Netlify for others to enjoy, you must use OAuth2. This allows users to authorize your application to use Netlify on their behalf without having to copy/paste API tokens or touch sensitive login info. You’ll need an application client key and a client secret to integrate with the Netlify API. You can register a new application in your Netlify user settings for\nOAuth applications\n. Visit our blog post on\nintegrating with Netlify\nfor more information including common grant types and an example project.\nThe OAuth2 end-user authorization endpoint is\nhttps://app.netlify.com/authorize\n.\nRate limiting\nSection titled “Rate limiting”\nTo protect Netlify from getting flooded by automated deploys or misbehaving applications, the Netlify API is rate limited.\nYou can make up to 500 requests per minute for most requests.\nCertain operations have their own stricter limits. For example, you can deploy through the Netlify API up to 3 times per minute and up to 100 times per day.\nYou can check the returned HTTP headers of any API request to verify your current rate limit status:\nX-RateLimit-Limit:\n500\nX-RateLimit-Remaining:\n56\nX-RateLimit-Reset:\n1372700873\nIf you need higher limits, please\ncontact us\n.\nPagination\nSection titled “Pagination”\nAll API requests that return over 100 items are paginated by default, with a limit of 100 items per page. You can specify further pages with the\n?page\nparameter. You can also set a custom page size that’s less than 100 with the\n?per_page\nparameter.\nNote that page numbering starts with 1 and that omitting the\n?page\nparameter will return the first page.\nLink header\nSection titled “Link header”\nThe pagination info is included in the\nLink\nheader.\nLink:\n<https://api.netlify.com/api/v1/sites?page=3&per_page=20>; rel=\"next\",\n<\nhttps:\n//api.netlify.com/api/v1/sites?page=5&per_page=20>\n; rel=\"last\"\nLinebreak is included for readability.\nThe possible\nrel\nvalues are:\nnext\nShows the URL of the immediate next page of results.\nlast\nShows the URL of the last page of results.\nprev\nShows the URL of the immediate previous page of results.\nDeploy with the API\nSection titled “Deploy with the API”\nThe most common API action is doing deploys, either of a new site or an existing site. If\nbuilds are stopped\nfor an existing site, you can still deploy with the API to update the site.\nNetlify supports two ways of doing deploys:\nSending a digest\nof all files in your deploy, and then uploading any files Netlify doesn’t already have on its storage servers.\nSending a ZIP file\nof the entire site and letting Netlify unzip and deploy.\nWe generally recommend the first way, since it’s more efficient.\nWhether you deploy a brand new site or create a deploy within an existing site, the process is similar.\nFirst\ncreate a new site\n, if needed:\nPOST /api/v1/sites\nNow you have a site ID and you can create a new deploy, either with a\nfile digest\nor a\nZIP file\n.\nFile digest method\nSection titled “File digest method”\nWe recommend using a digest including a file path and SHA1 for each item. This method also allows you to upload serverless functions, however serverless functions should use SHA256 instead.\nPOST /api/v1/sites/{site_id}/deploys\n{\n\"\nfiles\n\"\n: {\n\"\n/index.html\n\"\n:\n\"\n907d14fb3af2b0d4f18c2d46abe8aedce17367bd\n\"\n,\n\"\n/main.css\n\"\n:\n\"\nf18c2d7367bd9046abe8aedce17d14fb3af2b0d4\n\"\n},\n\"\nfunctions\n\"\n: {\n\"\nhello-world\n\"\n:\n\"\n708b029d8aa9c8fa513d1a25b97ffb6efb12b423\n\"\n}\n}\nWhen using a file digest, the API will return an object which includes the following properties:\n{\n\"\nid\n\"\n:\n\"\n1234\n\"\n,\n\"\nrequired\n\"\n: [\n\"\n907d14fb3af2b0d4f18c2d46abe8aedce17367bd\n\"\n],\n\"\nrequired_functions\n\"\n: [\n\"\n708b029d8aa9c8fa513d1a25b97ffb6efb12b423\n\"\n]\n}\nThe\nrequired\nproperty will give you a list of files by SHA1 that you need to upload. Similarly,\nrequired_functions\nwill get you an array of required functions by SHA256 to upload, if you included a functions digest when creating the deploy.\nNow upload the files, using the deploy ID returned as\nid\nin the file digest response:\nPUT /api/v1/deploys/{deploy_id}/files/index.html\nUse\nContent-Type: application/octet-stream\nand use the file contents as the HTTP request body.\nIf the required file is a function, upload it to the functions endpoint, again using the deploy ID returned as\nid\nin the file digest response:\nPUT /api/v1/deploys/{deploy_id}/functions/hello-world?runtime=js\nPossible\nruntime\nparameters are:\njs\n: zipped Node.js programs or bundled JavaScript files\ngo\n: Go binaries\nWhen uploading functions, use the name of the function, not the file path or any file extensions. Clients must zip the function prior to uploading to the API.\nOnce all files have been uploaded, Netlify will post process the deploy and invalidate the CDN.\nAsync requests for large deploys\nSection titled “Async requests for large deploys”\nAPI requests that last longer than 30 seconds will be terminated automatically. When creating large deploys, pass the\nasync\nproperty in your file digest:\n{\n\"\nasync\n\"\n:\ntrue\n,\n\"\nfiles\n\"\n: {\n\"\n/index.html\n\"\n:\n\"\n907d14fb3af2b0d4f18c2d46abe8aedce17367bd\n\"\n},\n\"\nfunctions\n\"\n: {\n\"\nhello-world\n\"\n:\n\"\n708b029d8aa9c8fa513d1a25b97ffb6efb12b423\n\"\n}\n}\nThe request will then return the deploy ID (as\nid\n) which can be polled to determine when the deploy is ready for file uploads.\nGET /api/v1/sites/{site_id}/deploys/{deploy_id}\nYou can check the\nstate\nparameter in the response. It will be set to\npreparing\nas the upload manifest is generated, and either\nprepared\n,\nuploading\n,\nuploaded\n, or\nready\ndepending on the contents of the deploy. At this point, the deploy is either\nready\n, or the API will give you a list of\nrequired\nfiles and\nrequired_functions\n.\nAdditionally, when uploading large files, sometimes the request will time out. It is safe to retry these uploads a few times to verify whether additional attempts are successful.\nZIP file method\nSection titled “ZIP file method”\nYou can deploy using a ZIP file but note there’s a limit of 25,000 files per zip extraction for a site. For the same site, you always need to upload a single zip with all the files.\nTo deploy using a ZIP file, create a new deploy with\nContent-Type: application/zip\nand the ZIP file as the HTTP request body:\nPOST /api/v1/sites/{site_id}/deploys\nA deploy from a ZIP file will enter post-processing mode straight after being created.\nWhile we generally recommend using file digests, you can use the ZIP file method straight from the command line with cURL:\nTerminal window\ncurl\n-H\n\"\nContent-Type: application/zip\n\"\n\\\n-H\n\"\nAuthorization: Bearer YOUR_OAUTH2_ACCESS_TOKEN\n\"\n\\\n--data-binary\n\"\n@website.zip\n\"\n\\\nhttps://api.netlify.com/api/v1/sites/mysite.netlify.app/deploys\nCreate and deploy at once\nSection titled “Create and deploy at once”\nWhen creating a new site, you can include a file digest or a ZIP file straight away, to save an HTTP request.\nThe following will create a new site and deploy it from a ZIP file:\nTerminal window\ncurl\n-H\n\"\nContent-Type: application/zip\n\"\n\\\n-H\n\"\nAuthorization: Bearer YOUR_OAUTH2_ACCESS_TOKEN\n\"\n\\\n--data-binary\n\"\n@website.zip\n\"\n\\\nhttps://api.netlify.com/api/v1/sites\nPoll for deploy state\nSection titled “Poll for deploy state”\nYou can poll the deploy to check the state:\nGET /api/v1/deploys/{deploy_id}\n{\n\"\nid\n\"\n:\n\"\n1234\n\"\n,\n\"\nstate\n\"\n:\n\"\nready\n\"\n}\nOnce the state changes to\nready\n, the deploy is live.\nDraft deploys\nSection titled “Draft deploys”\nWhen creating a new deploy, you can set\n\"draft\": true\nto mark the deploy as a draft deploy.\nA draft deploy works like a normal deploy, but it won’t change the current published deploy of the site when it’s done processing.\nCommonly used endpoints\nSection titled “Commonly used endpoints”\nThis section describes usage for some popular endpoints.\nWe also have an\nOpenAPI reference for the Netlify API\nthat you can explore.\nVisit our Forums for more tips and conversation about\nunderstanding and using Netlify’s API\n.\nSites\nSection titled “Sites”\nThe\n/sites\nendpoint allows you to access sites deployed on Netlify.\nGet sites\nSection titled “Get sites”\nGET /api/v1/sites\nreturns all sites you have access to.\n[\n{\n\"\nid\n\"\n:\n\"\n3970e0fe-8564-4903-9a55-c5f8de49fb8b\n\"\n,\n\"\npremium\n\"\n:\nfalse\n,\n\"\nclaimed\n\"\n:\ntrue\n,\n\"\nname\n\"\n:\n\"\nsynergy\n\"\n,\n\"\ncustom_domain\n\"\n:\n\"\nwww.example.com\n\"\n,\n\"\nurl\n\"\n:\n\"\nhttp://www.example.com\n\"\n,\n\"\nadmin_url\n\"\n:\n\"\nhttps://api.netlify.com/sites/synergy\n\"\n,\n\"\nscreenshot_url\n\"\n:\nnull\n,\n\"\ncreated_at\n\"\n:\n\"\n2013-09-17T05:13:08Z\n\"\n,\n\"\nupdated_at\n\"\n:\n\"\n2013-09-17T05:13:19Z\n\"\n,\n\"\nuser_id\n\"\n:\n\"\n51f60d2d5803545326000005\n\"\n}\n]\nGet site\nSection titled “Get site”\nGET /api/v1/sites/{site_id}\nreturns the specified site.\nGET /api/v1/sites/3970e0fe-8564-4903-9a55-c5f8de49fb8b\nreturns the site with a matching\nid\n.\nGET /api/v1/sites/www.example.com\nreturns the site matching the domain\nwww.example.com\n.\n{\n\"\nid\n\"\n:\n\"\n3970e0fe-8564-4903-9a55-c5f8de49fb8b\n\"\n,\n\"\npremium\n\"\n:\nfalse\n,\n\"\nclaimed\n\"\n:\ntrue\n,\n\"\nname\n\"\n:\n\"\nsynergy\n\"\n,\n\"\ncustom_domain\n\"\n:\n\"\nwww.example.com\n\"\n,\n\"\nnotification_email\n\"\n:\n\"\nme@example.com\n\"\n,\n\"\nurl\n\"\n:\n\"\nhttp://www.example.com\n\"\n,\n\"\nadmin_url\n\"\n:\n\"\nhttps://api.netlify.com/sites/synergy\n\"\n,\n\"\nscreenshot_url\n\"\n:\nnull\n,\n\"\ncreated_at\n\"\n:\n\"\n2013-09-17T05:13:08Z\n\"\n,\n\"\nupdated_at\n\"\n:\n\"\n2013-09-17T05:13:19Z\n\"\n,\n\"\nuser_id\n\"\n:\n\"\n51f60d2d5803545326000005\n\"\n}\nCreate site\nSection titled “Create site”\nPOST /api/v1/sites\ncreates a new site. By default the site will be created in your personal team.\nWhen creating a site, you can set the following properties:\nname\n: the name of the site (\nmysite\n.netlify.app)\ncustom_domain\n: the custom domain of the site (\nwww.example.com\n)\npassword\n: password protect the site\nforce_ssl\n: will force SSL on the site if SSL is enabled\nprocessing_settings\n: sets the Pretty URLs post processing setting:\n{\n\"\nhtml\n\"\n: {\n\"\npretty_urls\n\"\n:\ntrue\n}\n}\nrepo\n: configures continuous deployment. It’s a bit complicated to create a\nrepo\nobject so please visit our Forums for a verified Support Guide on\nlinking a repository using the API\n.\nCreate site in team\nSection titled “Create site in team”\nPOST /api/v1/{account_slug}/sites/\ncreates a new site in a specific team. It takes the same parameters as when creating a site.\nUpdate site\nSection titled “Update site”\nPATCH /api/v1/sites/{site_id}\nupdates some attributes on a site.\nPUT /api/v1/sites/{site_id}\nupdates some attributes on a site.\nThis lets you update a site. It takes all the same parameters as when creating a site.\nIf you do a PUT request to a site with\nContent-Type: application/zip\nand a zipped website in the HTTP request body, it works exactly like creating a new deploy for the site based on a ZIP file.\nProvision SSL for a site\nSection titled “Provision SSL for a site”\nPOST /api/v1/sites/{site_id}/ssl\nactivates SSL for a site.\nThe site must have a custom domain with DNS records configured to point to Netlify’s infrastructure.\nAny domain aliases with valid DNS records will also be included in the SSL certificate for the site.\nThis endpoint manually triggers SSL provisioning for a site’s custom domains. Once SSL provisioning is successful, the domain will be served over HTTPS.\nDelete site\nSection titled “Delete site”\nDELETE /api/v1/sites/{site_id}\npermanently deletes a site.\nThis will return\n200 OK\n.\nSite metadata\nSection titled “Site metadata”\nEach site has a metadata object. The properties of the metadata object can be used within the\nsnippets\nfor a site by using the\nLiquid\ntemplate syntax.\nGet metadata\nSection titled “Get metadata”\nGET /api/v1/sites/{site_id}/metadata\ngets the metadata for a site.\n{\n\"\nmy_meta_key\n\"\n:\n\"\nmy_meta_value\n\"\n}\nUpdate metadata\nSection titled “Update metadata”\nPUT /api/v1/sites/{site_id}/metadata\nreplaces the metadata object with a new metadata object.\nEnvironment variables\nSection titled “Environment variables”\nThe\nenvironment variables API endpoints\nallow you to access and set both site and shared environment variables. Environment variable changes require a build and deploy to take effect.\nGet environment variables\nSection titled “Get environment variables”\nGET /api/v1/accounts/{account_id}/env\nreturns all environment variables for a team or site. The list will only include shared environment variables if the request is made by a Team Owner.\nGET /api/v1/accounts/{account_id}/env/{key}\nreturns an individual environment variable for a team or site.\nCreate and update environment variables\nSection titled “Create and update environment variables”\nPOST /api/v1/accounts/{account_id}/env\ncreates site or shared environment variables with the specified scopes and contextual values. An environment variable’s contextual values are the different values set for use in each\ndeploy context\n.\nPUT /api/v1/accounts/{account_id}/env/{key}\nupdates an existing environment variable by replacing all of its values with the values provided with this request.\nPATCH /api/v1/accounts/{account_id}/env/{key}\nupdates or creates a new value for an existing environment variable.\nDelete environment variables\nSection titled “Delete environment variables”\nDELETE /api/v1/accounts/{account_id}/env/{key}\ndeletes an environment variable and all of its values.\nDELETE /api/v1/accounts/{account_id}/env/{key}/value/{id}\ndeletes a specific environment variable value.\nFiles\nSection titled “Files”\nAll files deployed by Netlify can be read through the API. Where the public URL of a file will serve the processed version for HTML pages, the files accessed through the API are the original uploaded files.\nNetlify is based on a concept of atomic deploys. This means you never work on individual files. If you want to change a file, you do a new deploy with a new version of the site. To delete a file, you create a new deploy without the file. The file digest based deployment method means that these operations are fast and low-cost. Atomic deploys guarantees that your site is never in an inconsistent state where some files are being uploaded and where users might get HTML files that are not in sync with the CSS, image files, etc.\nGet files\nSection titled “Get files”\nGET /api/v1/sites/{site_id}/files\nreturns a list of all the files in the current deploy.\n[\n{\n\"\nid\n\"\n:\n\"\n/index.html\n\"\n,\n\"\npath\n\"\n:\n\"\n/index.html\n\"\n,\n\"\nsha\n\"\n:\n\"\n20828dcdf2cd07e5980fe52759101591bf5014ab\n\"\n,\n\"\nmime_type\n\"\n:\n\"\ntext/html\n\"\n,\n\"\nsize\n\"\n:\n27232\n}\n]\nGet file\nSection titled “Get file”\nGET /api/v1/sites/{site_id}/files/{file_path}\nreturns the file.\n{\n\"\nid\n\"\n:\n\"\n/index.html\n\"\n,\n\"\npath\n\"\n:\n\"\n/index.html\n\"\n,\n\"\nsha\n\"\n:\n\"\n20828dcdf2cd07e5980fe52759101591bf5014ab\n\"\n,\n\"\nmime_type\n\"\n:\n\"\ntext/html\n\"\n,\n\"\nsize\n\"\n:\n27232\n}\nYou can get the raw contents of the file by using the custom media type\napplication/vnd.bitballoon.v1.raw\nas the\nContent-Type\nof your HTTP request.\nDeploys\nSection titled “Deploys”\nYou can access all deploys for a specific site.\nGet deploys\nSection titled “Get deploys”\nGET /api/v1/sites/{site_id}/deploys\nreturns a list of all deploys for a site.\n[\n{\n\"\nid\n\"\n:\n\"\n52465f435803544542000001\n\"\n,\n\"\npremium\n\"\n:\nfalse\n,\n\"\nclaimed\n\"\n:\ntrue\n,\n\"\nname\n\"\n:\n\"\nsynergy\n\"\n,\n\"\ncustom_domain\n\"\n:\n\"\nwww.example.com\n\"\n,\n\"\nnotification_email\n\"\n:\n\"\nme@example.com\n\"\n,\n\"\nurl\n\"\n:\n\"\nhttp://www.example.com\n\"\n,\n\"\ndeploy_url\n\"\n:\n\"\nhttp://52465f435803544542000001.some-site.netlify.app\n\"\n,\n\"\nadmin_url\n\"\n:\n\"\nhttps://api.netlify.com/sites/synergy\n\"\n,\n\"\nscreenshot_url\n\"\n:\nnull\n,\n\"\ncreated_at\n\"\n:\n\"\n2013-09-17T05:13:08Z\n\"\n,\n\"\nupdated_at\n\"\n:\n\"\n2013-09-17T05:13:19Z\n\"\n,\n\"\nuser_id\n\"\n:\n\"\n51f60d2d5803545326000005\n\"\n,\n\"\nstate\n\"\n:\n\"\nold\n\"\n}\n]\nGet deploy\nSection titled “Get deploy”\nGET /api/v1/sites/{site_id}/deploys/{deploy_id}\nreturns a specific deploy.\n{\n\"\nid\n\"\n:\n\"\n52465f435803544542000001\n\"\n,\n\"\npremium\n\"\n:\nfalse\n,\n\"\nclaimed\n\"\n:\ntrue\n,\n\"\nname\n\"\n:\n\"\nsynergy\n\"\n,\n\"\ncustom_domain\n\"\n:\n\"\nwww.example.com\n\"\n,\n\"\nnotification_email\n\"\n:\n\"\nme@example.com\n\"\n,\n\"\nurl\n\"\n:\n\"\nhttp://www.example.com\n\"\n,\n\"\ndeploy_url\n\"\n:\n\"\nhttp://52465f435803544542000001.some-site.netlify.app\n\"\n,\n\"\nadmin_url\n\"\n:\n\"\nhttps://api.netlify.com/sites/synergy\n\"\n,\n\"\nscreenshot_url\n\"\n:\nnull\n,\n\"\ncreated_at\n\"\n:\n\"\n2013-09-17T05:13:08Z\n\"\n,\n\"\nupdated_at\n\"\n:\n\"\n2013-09-17T05:13:19Z\n\"\n,\n\"\nuser_id\n\"\n:\n\"\n51f60d2d5803545326000005\n\"\n,\n\"\nstate\n\"\n:\n\"\nold\n\"\n}\nRestore deploy (rollback)\nSection titled “Restore deploy (rollback)”\nPOST /api/v1/sites/{site_id}/deploys/{deploy_id}/restore\nrestores an old deploy and makes it the live version of the site.\n{\n\"\nid\n\"\n:\n\"\n52465f435803544542000001\n\"\n,\n\"\npremium\n\"\n:\nfalse\n,\n\"\nclaimed\n\"\n:\ntrue\n,\n\"\nname\n\"\n:\n\"\nsynergy\n\"\n,\n\"\ncustom_domain\n\"\n:\n\"\nwww.example.com\n\"\n,\n\"\nnotification_email\n\"\n:\n\"\nme@example.com\n\"\n,\n\"\nurl\n\"\n:\n\"\nhttp://www.example.com\n\"\n,\n\"\ndeploy_url\n\"\n:\n\"\nhttp://52465f435803544542000001.some-site.netlify.app\n\"\n,\n\"\nadmin_url\n\"\n:\n\"\nhttps://api.netlify.com/sites/synergy\n\"\n,\n\"\nscreenshot_url\n\"\n:\nnull\n,\n\"\ncreated_at\n\"\n:\n\"\n2013-09-17T05:13:08Z\n\"\n,\n\"\nupdated_at\n\"\n:\n\"\n2013-09-17T05:13:19Z\n\"\n,\n\"\nuser_id\n\"\n:\n\"\n51f60d2d5803545326000005\n\"\n,\n\"\nstate\n\"\n:\n\"\ncurrent\n\"\n}\nSnippets\nSection titled “Snippets”\nSnippets are code snippets that are injected into every HTML page of the website, either right before the closing\nhead\ntag or right before the closing\nbody\ntag.\nEach snippet can specify code for all pages and code that gets injected into “Thank you” pages shown after a successful form submission.\nGet snippets\nSection titled “Get snippets”\nGET /api/v1/sites/{site_id}/snippets\ngets a list of snippets specific to a site.\n[\n{\n\"\nid\n\"\n:\n0\n,\n\"\ntitle\n\"\n:\n\"\nTest\n\"\n,\n\"\ngeneral\n\"\n:\n\"\n\\u003C\nscript\n\\u003E\nalert(\n\\\"\nHello\n\\\"\n)\n\\u003C\n/script\n\\u003E\n\"\n,\n\"\ngeneral_position\n\"\n:\n\"\nhead\n\"\n,\n\"\ngoal\n\"\n:\n\"\"\n,\n\"\ngoal_position\n\"\n:\n\"\nfooter\n\"\n}\n]\nThe\ngeneral\nproperty is the code that will be injected right before either the head or body end tag. The\ngeneral_position\ncan be\nhead\nor\nfooter\nand determines whether to inject the code in the head element or before the closing body tag.\nThe\ngoal\nproperty is the code that will be injected into the “Thank you” page after a form submission.\ngoal_position\ndetermines where to inject this code.\nGet snippet\nSection titled “Get snippet”\nGET /api/v1/sites/{site_id}/snippets/{snippet_id}\ngets a specific snippet.\n{\n\"\nid\n\"\n:\n0\n,\n\"\ntitle\n\"\n:\n\"\nTest\n\"\n,\n\"\ngeneral\n\"\n:\n\"\n\\u003C\nscript\n\\u003E\nalert(\n\\\"\nHello\n\\\"\n)\n\\u003C\n/script\n\\u003E\n\"\n,\n\"\ngeneral_position\n\"\n:\n\"\nhead\n\"\n,\n\"\ngoal\n\"\n:\n\"\"\n,\n\"\ngoal_position\n\"\n:\n\"\nfooter\n\"\n}\nAdd snippet\nSection titled “Add snippet”\nPOST /api/v1/sites/{site_id}/snippets\nadds a new snippet to a site.\nUpdate snippet\nSection titled “Update snippet”\nPUT /api/v1/sites/{site_id}/snippets/{snippet_id}\nreplaces a snippet.\nDelete snippet\nSection titled “Delete snippet”\nDELETE /api/v1/sites/{site_id}/snippets/{snippet_id}\ndeletes a snippet.\nForms\nSection titled “Forms”\nYou can access all\nNetlify Forms\nmetadata and submissions for a site.\nGet forms\nSection titled “Get forms”\nGET /api/v1/sites/{site_id}/forms\nreturns a list of all forms for a site, including metadata about each form, but not including form submissions.\n[\n{\n\"\nid\n\"\n:\n\"\nac0865cc46440b1e64666f520e8d88d670c8a2f6\n\"\n,\n\"\nsite_id\n\"\n:\n\"\n0d3a9d2f-ef94-4380-93df-27ee400e2048\n\"\n,\n\"\nname\n\"\n:\n\"\nLanding Page\n\"\n,\n\"\npaths\n\"\n: [\n\"\n/index\n\"\n],\n\"\nsubmission_count\n\"\n:\n3\n,\n\"\nfields\n\"\n: [\n{\n\"\nname\n\"\n:\n\"\nname\n\"\n,\n\"\ntype\n\"\n:\n\"\ntext\n\"\n},\n{\n\"\nname\n\"\n:\n\"\nemail\n\"\n,\n\"\ntype\n\"\n:\n\"\nemail\n\"\n},\n{\n\"\nname\n\"\n:\n\"\nphone\n\"\n,\n\"\ntype\n\"\n:\n\"\ntext\n\"\n},\n{\n\"\nname\n\"\n:\n\"\ncompany\n\"\n,\n\"\ntype\n\"\n:\n\"\ntext\n\"\n},\n{\n\"\nname\n\"\n:\n\"\nwebsite\n\"\n,\n\"\ntype\n\"\n:\n\"\nurl\n\"\n},\n{\n\"\nname\n\"\n:\n\"\nnumber_of_employees\n\"\n,\n\"\ntype\n\"\n:\n\"\nselect\n\"\n}\n],\n\"\ncreated_at\n\"\n:\n\"\n2013-09-18T20:26:19Z\n\"\n}\n]\nGet verified submissions\nSection titled “Get verified submissions”\nGET /api/v1/sites/{site_id}/submissions\nreturns a list of verified form submissions across all forms for a specific site.\nGET /api/v1/forms/{form_id}/submissions\nreturns a list of verified form submissions for a specific form.\n[\n{\n\"\nid\n\"\n:\n\"\n5231110b5803540aeb000019\n\"\n,\n\"\nnumber\n\"\n:\n13\n,\n\"\ntitle\n\"\n:\nnull\n,\n\"\nemail\n\"\n:\n\"\ntest@example.com\n\"\n,\n\"\nname\n\"\n:\n\"\nMathias Biilmann\n\"\n,\n\"\nfirst_name\n\"\n:\n\"\nMathias\n\"\n,\n\"\nlast_name\n\"\n:\n\"\nBiilmann\n\"\n,\n\"\ncompany\n\"\n:\n\"\nNetlify\n\"\n,\n\"\nsummary\n\"\n:\n\"\nHello, World\n\"\n,\n\"\nbody\n\"\n:\n\"\nHello, World\n\"\n,\n\"\ndata\n\"\n: {\n\"\nemail\n\"\n:\n\"\ntest@example.com\n\"\n,\n\"\nname\n\"\n:\n\"\nMathias Biilmann\n\"\n,\n\"\nip\n\"\n:\n\"\n127.0.0.1\n\"\n},\n\"\ncreated_at\n\"\n:\n\"\n2013-09-12T00:55:39Z\n\"\n,\n\"\nsite_url\n\"\n:\n\"\nhttp://synergy.netlify.app\n\"\n}\n]\nGet spam submissions\nSection titled “Get spam submissions”\nTo get spam submissions, add a\nstate=spam\nquery parameter to the URL:\nGET /api/v1/sites/{site_id}/submissions?state=spam\nreturns a list of spam form submissions across all forms for a specific site.\nGET /api/v1/forms/{form_id}/submissions?state=spam\nreturns a list of spam form submissions for a specific form.\nChange submission state\nSection titled “Change submission state”\nYou can change the state of a submission from spam to verified or vice versa.\nPUT /api/v1/submissions/{submission_id}/spam\nmarks the submission as spam.\nPUT /api/v1/submissions/{submission_id}/ham\nmarks the submission as verified.\nDelete submissions\nSection titled “Delete submissions”\nDELETE /api/v1/submissions/{submission_id}\nremoves a form submission.\nDelete form\nSection titled “Delete form”\nDELETE /api/v1/sites/{site_id}/forms/{form_id}\nremoves a form and any existing submissions to it.\nFuture submissions to the form will result in a 404 error, and previous submissions will no longer be available.\nHooks\nSection titled “Hooks”\nNetlify can trigger webhooks, send email notifications, or send Slack messages on certain events.\nThe\n/hooks\nendpoint lets you control the hooks for your site.\nGet hook types\nSection titled “Get hook types”\nGET /api/v1/hooks/types\nreturns a list of types of hooks that you can configure on Netlify.\n[\n{\n\"\nname\n\"\n:\n\"\nurl\n\"\n,\n\"\nfields\n\"\n: [\n{\n\"\nname\n\"\n:\n\"\nurl\n\"\n,\n\"\noptions\n\"\n: {\n\"\ntype\n\"\n:\n\"\nstring\n\"\n,\n\"\ntitle\n\"\n:\n\"\nURL to notify\n\"\n}\n}\n],\n\"\nevents\n\"\n: [\n\"\nsubmission_created\n\"\n,\n\"\ndeploy_created\n\"\n,\n\"\ndeploy_failed\n\"\n]\n}\n]\nEach type has a series of fields that you need to set to create a new hook, and a list of events that can trigger them.\nGet hooks for a site\nSection titled “Get hooks for a site”\nGET /api/v1/hooks?site_id={site_id}\nreturns a list of a hooks defined for a specific site.\n[\n{\n\"\nid\n\"\n:\n\"\n5636b7a00d61eec2d6001004\n\"\n,\n\"\nsite_id\n\"\n:\n\"\n0d3a9d2f-ef94-4380-93df-27ee400e2048\n\"\n,\n\"\ntype\n\"\n:\n\"\nemail\n\"\n,\n\"\nevent\n\"\n:\n\"\nsubmission_created\n\"\n,\n\"\ndata\n\"\n: {\n\"\nemail\n\"\n:\n\"\ntest@example.com\n\"\n},\n\"\ncreated_at\n\"\n:\n\"\n2015-10-20T21:51:51Z\n\"\n,\n\"\nupdated_at\n\"\n:\n\"\n2015-10-20T21:51:51Z\n\"\n}\n]\nCreate hook\nSection titled “Create hook”\nPOST /api/v1/hooks\ncreates a new hook.\nAn example request body for an email hook for a specific form in your site would be formatted like this:\n{\n\"\nsite_id\n\"\n:\n\"\n0d3a9d2f-ef94-4380-93df-27ee400e2048\n\"\n,\n\"\nform_id\n\"\n:\n\"\n5235a7a00d61eec2d6001302\n\"\n,\n\"\ntype\n\"\n:\n\"\nemail\n\"\n,\n\"\nevent\n\"\n:\n\"\nsubmission_created\n\"\n,\n\"\ndata\n\"\n: {\n\"\nemail\n\"\n:\n\"\ntest@example.com\n\"\n}\n}\nform_id\nis optional and links the hook to a specific form within your site. You can also use\nform_name\nwith the value of the\nname\nattribute of the form of your site as an alternative to\nform_id\n.\nDelete hook\nSection titled “Delete hook”\nDELETE /api/v1/hooks/{hook_id}\nremoves a hook permanently.\nNote, for outgoing webhooks, returning a\n410 Gone\nstatus code from the URL endpoint will trigger a deletion of the hook.\nDid you find this doc useful?\nYour feedback helps us improve our docs.\nDo not fill in this field\nWhat else would you like to tell us about this doc?\nSend",
  "source_name": "Netlify",
  "source_category": "deployment",
  "vibe_relevance": 0.8,
  "content_length": 26032,
  "token_count": 7174,
  "collection_timestamp": "2025-09-03T03:39:22.202933"
}